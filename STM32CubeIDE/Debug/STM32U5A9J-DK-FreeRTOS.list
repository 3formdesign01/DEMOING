
STM32U5A9J-DK-FreeRTOS.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000026c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00025c20  08000270  08000270  00001270  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003883  08025e90  08025e90  00026e90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000018  08029714  08029714  0002a714  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   0000001c  0802972c  0802972c  0002a72c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000008  08029748  08029748  0002a748  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .data         00000290  20000000  08029750  0002b000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          0004c208  20000290  080299e0  0002b290  2**2
                  ALLOC
  8 ._user_heap_stack 00001800  2004c498  080299e0  0002b498  2**0
                  ALLOC
  9 .ARM.attributes 00000036  00000000  00000000  001ee1b8  2**0
                  CONTENTS, READONLY
 10 FramebufferSection 00151800  2004dc98  2004dc98  0002bc98  2**2
                  ALLOC
 11 FontFlashSection 000001a8  90000000  90000000  0002c000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 12 TextFlashSection 00000010  900001a8  900001a8  0002c1a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 13 ExtFlashSection 001c2000  900001b8  900001b8  0002c1b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 .debug_info   000aa1b6  00000000  00000000  001ee1ee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00014268  00000000  00000000  002983a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_loclists 0001e1c7  00000000  00000000  002ac60c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_aranges 000036b0  00000000  00000000  002ca7d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_rnglists 00003595  00000000  00000000  002cde88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_macro  0005052d  00000000  00000000  002d141d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line   0005f58c  00000000  00000000  0032194a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    001bb527  00000000  00000000  00380ed6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .comment      000000c2  00000000  00000000  0053c3fd  2**0
                  CONTENTS, READONLY
 23 .debug_frame  00009b44  00000000  00000000  0053c4c0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_line_str 00000064  00000000  00000000  00546004  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000270 <__do_global_dtors_aux>:
 8000270:	b510      	push	{r4, lr}
 8000272:	4c05      	ldr	r4, [pc, #20]	@ (8000288 <__do_global_dtors_aux+0x18>)
 8000274:	7823      	ldrb	r3, [r4, #0]
 8000276:	b933      	cbnz	r3, 8000286 <__do_global_dtors_aux+0x16>
 8000278:	4b04      	ldr	r3, [pc, #16]	@ (800028c <__do_global_dtors_aux+0x1c>)
 800027a:	b113      	cbz	r3, 8000282 <__do_global_dtors_aux+0x12>
 800027c:	4804      	ldr	r0, [pc, #16]	@ (8000290 <__do_global_dtors_aux+0x20>)
 800027e:	f3af 8000 	nop.w
 8000282:	2301      	movs	r3, #1
 8000284:	7023      	strb	r3, [r4, #0]
 8000286:	bd10      	pop	{r4, pc}
 8000288:	20000290 	.word	0x20000290
 800028c:	00000000 	.word	0x00000000
 8000290:	08025e78 	.word	0x08025e78

08000294 <frame_dummy>:
 8000294:	b508      	push	{r3, lr}
 8000296:	4b03      	ldr	r3, [pc, #12]	@ (80002a4 <frame_dummy+0x10>)
 8000298:	b11b      	cbz	r3, 80002a2 <frame_dummy+0xe>
 800029a:	4903      	ldr	r1, [pc, #12]	@ (80002a8 <frame_dummy+0x14>)
 800029c:	4803      	ldr	r0, [pc, #12]	@ (80002ac <frame_dummy+0x18>)
 800029e:	f3af 8000 	nop.w
 80002a2:	bd08      	pop	{r3, pc}
 80002a4:	00000000 	.word	0x00000000
 80002a8:	20000294 	.word	0x20000294
 80002ac:	08025e78 	.word	0x08025e78

080002b0 <StartDefaultTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80002b0:	b508      	push	{r3, lr}
  /* USER CODE BEGIN defaultTask */
  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
 80002b2:	2001      	movs	r0, #1
 80002b4:	f00b f851 	bl	800b35a <osDelay>
  for(;;)
 80002b8:	e7fb      	b.n	80002b2 <StartDefaultTask+0x2>
	...

080002bc <vApplicationIdleHook>:
   vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80002bc:	2000      	movs	r0, #0
 80002be:	4901      	ldr	r1, [pc, #4]	@ (80002c4 <vApplicationIdleHook+0x8>)
 80002c0:	f00c ba88 	b.w	800c7d4 <vTaskSetApplicationTaskTag>
 80002c4:	08001aad 	.word	0x08001aad

080002c8 <MX_FREERTOS_Init>:
void MX_FREERTOS_Init(void) {
 80002c8:	b508      	push	{r3, lr}
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80002ca:	2100      	movs	r1, #0
 80002cc:	4a06      	ldr	r2, [pc, #24]	@ (80002e8 <MX_FREERTOS_Init+0x20>)
 80002ce:	4807      	ldr	r0, [pc, #28]	@ (80002ec <MX_FREERTOS_Init+0x24>)
 80002d0:	f00a fff8 	bl	800b2c4 <osThreadNew>
 80002d4:	4b06      	ldr	r3, [pc, #24]	@ (80002f0 <MX_FREERTOS_Init+0x28>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80002d6:	2100      	movs	r1, #0
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80002d8:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80002da:	4a06      	ldr	r2, [pc, #24]	@ (80002f4 <MX_FREERTOS_Init+0x2c>)
 80002dc:	4806      	ldr	r0, [pc, #24]	@ (80002f8 <MX_FREERTOS_Init+0x30>)
 80002de:	f00a fff1 	bl	800b2c4 <osThreadNew>
 80002e2:	4b06      	ldr	r3, [pc, #24]	@ (80002fc <MX_FREERTOS_Init+0x34>)
 80002e4:	6018      	str	r0, [r3, #0]
}
 80002e6:	bd08      	pop	{r3, pc}
 80002e8:	08026030 	.word	0x08026030
 80002ec:	080002b1 	.word	0x080002b1
 80002f0:	200002b0 	.word	0x200002b0
 80002f4:	0802600c 	.word	0x0802600c
 80002f8:	080015af 	.word	0x080015af
 80002fc:	200002ac 	.word	0x200002ac

08000300 <MX_DSIHOST_DSI_Init>:
  * @brief DSIHOST Initialization Function
  * @param None
  * @retval None
  */
static void MX_DSIHOST_DSI_Init(void)
{
 8000300:	b5f0      	push	{r4, r5, r6, r7, lr}
  HAL_Delay(5);
  HAL_GPIO_WritePin(DSI_PWR_ON_GPIO_Port, DSI_PWR_ON_Pin, GPIO_PIN_RESET);
  HAL_Delay(11);
  /* USER CODE END DSIHOST_Init 0 */

  DSI_PLLInitTypeDef PLLInit = {0};
 8000302:	2500      	movs	r5, #0
{
 8000304:	b0e9      	sub	sp, #420	@ 0x1a4
  HAL_GPIO_WritePin(DSI_PWR_ON_GPIO_Port, DSI_PWR_ON_Pin, GPIO_PIN_SET);
 8000306:	2201      	movs	r2, #1
 8000308:	2120      	movs	r1, #32
 800030a:	485e      	ldr	r0, [pc, #376]	@ (8000484 <MX_DSIHOST_DSI_Init+0x184>)
 800030c:	f005 fb64 	bl	80059d8 <HAL_GPIO_WritePin>
  HAL_Delay(5);
 8000310:	2005      	movs	r0, #5
 8000312:	f004 f875 	bl	8004400 <HAL_Delay>
  HAL_GPIO_WritePin(DSI_PWR_ON_GPIO_Port, DSI_PWR_ON_Pin, GPIO_PIN_RESET);
 8000316:	2200      	movs	r2, #0
 8000318:	2120      	movs	r1, #32
 800031a:	485a      	ldr	r0, [pc, #360]	@ (8000484 <MX_DSIHOST_DSI_Init+0x184>)
 800031c:	f005 fb5c 	bl	80059d8 <HAL_GPIO_WritePin>
  HAL_Delay(11);
 8000320:	200b      	movs	r0, #11
 8000322:	f004 f86d 	bl	8004400 <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8000326:	4629      	mov	r1, r5
 8000328:	2224      	movs	r2, #36	@ 0x24
 800032a:	a80c      	add	r0, sp, #48	@ 0x30
  DSI_PLLInitTypeDef PLLInit = {0};
 800032c:	e9cd 5504 	strd	r5, r5, [sp, #16]
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8000330:	f025 f80c 	bl	802534c <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 8000334:	2218      	movs	r2, #24
 8000336:	4629      	mov	r1, r5
 8000338:	eb0d 0002 	add.w	r0, sp, r2
 800033c:	f025 f806 	bl	802534c <memset>
  DSI_VidCfgTypeDef VidCfg = {0};
 8000340:	4629      	mov	r1, r5
 8000342:	226c      	movs	r2, #108	@ 0x6c
 8000344:	a815      	add	r0, sp, #84	@ 0x54
 8000346:	f025 f801 	bl	802534c <memset>

  /* USER CODE BEGIN DSIHOST_Init 1 */

  /* USER CODE END DSIHOST_Init 1 */
  hdsi.Instance = DSI;
 800034a:	4c4f      	ldr	r4, [pc, #316]	@ (8000488 <MX_DSIHOST_DSI_Init+0x188>)
 800034c:	4b4f      	ldr	r3, [pc, #316]	@ (800048c <MX_DSIHOST_DSI_Init+0x18c>)
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
  hdsi.Init.TXEscapeCkdiv = 4;
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 800034e:	2704      	movs	r7, #4
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 8000350:	e9c4 3500 	strd	r3, r5, [r4]
  hdsi.Init.PHYFrequencyRange = DSI_DPHY_FRANGE_450MHZ_510MHZ;
 8000354:	2308      	movs	r3, #8
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 8000356:	2601      	movs	r6, #1
  hdsi.Init.PHYLowPowerOffset = PHY_LP_OFFSSET_0_CLKP;
 8000358:	e9c4 3504 	strd	r3, r5, [r4, #16]
  PLLInit.PLLNDIV = 125;
 800035c:	237d      	movs	r3, #125	@ 0x7d
  PLLInit.PLLIDF = DSI_PLL_IN_DIV4;
  PLLInit.PLLODF = DSI_PLL_OUT_DIV2;
 800035e:	2502      	movs	r5, #2
  PLLInit.PLLVCORange = DSI_DPHY_VCO_FRANGE_800MHZ_1GHZ;
  PLLInit.PLLChargePump = DSI_PLL_CHARGE_PUMP_2000HZ_4400HZ;
  PLLInit.PLLTuning = DSI_PLL_LOOP_FILTER_2000HZ_4400HZ;
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8000360:	4669      	mov	r1, sp
 8000362:	4620      	mov	r0, r4
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 8000364:	e9c4 7602 	strd	r7, r6, [r4, #8]
  PLLInit.PLLIDF = DSI_PLL_IN_DIV4;
 8000368:	e9cd 3700 	strd	r3, r7, [sp]
  PLLInit.PLLVCORange = DSI_DPHY_VCO_FRANGE_800MHZ_1GHZ;
 800036c:	e9cd 5602 	strd	r5, r6, [sp, #8]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8000370:	f004 fcda 	bl	8004d28 <HAL_DSI_Init>
 8000374:	b108      	cbz	r0, 800037a <MX_DSIHOST_DSI_Init+0x7a>
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000376:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000378:	e7fe      	b.n	8000378 <MX_DSIHOST_DSI_Init+0x78>
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 800037a:	e9cd 600c 	strd	r6, r0, [sp, #48]	@ 0x30
  HostTimeouts.HighSpeedReadTimeout = 0;
 800037e:	e9cd 000e 	strd	r0, r0, [sp, #56]	@ 0x38
  HostTimeouts.HighSpeedWriteTimeout = 0;
 8000382:	e9cd 0010 	strd	r0, r0, [sp, #64]	@ 0x40
  HostTimeouts.LowPowerWriteTimeout = 0;
 8000386:	e9cd 0012 	strd	r0, r0, [sp, #72]	@ 0x48
  HostTimeouts.BTATimeout = 0;
 800038a:	9014      	str	r0, [sp, #80]	@ 0x50
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 800038c:	a90c      	add	r1, sp, #48	@ 0x30
 800038e:	4620      	mov	r0, r4
 8000390:	f004 ff3a 	bl	8005208 <HAL_DSI_ConfigHostTimeouts>
 8000394:	b108      	cbz	r0, 800039a <MX_DSIHOST_DSI_Init+0x9a>
 8000396:	b672      	cpsid	i
  while (1)
 8000398:	e7fe      	b.n	8000398 <MX_DSIHOST_DSI_Init+0x98>
  PhyTimings.ClockLaneLP2HSTime = 40;
 800039a:	2328      	movs	r3, #40	@ 0x28
 800039c:	f04f 0e0b 	mov.w	lr, #11
  PhyTimings.DataLaneLP2HSTime = 23;
 80003a0:	260c      	movs	r6, #12
  PhyTimings.ClockLaneLP2HSTime = 40;
 80003a2:	e9cd e306 	strd	lr, r3, [sp, #24]
  PhyTimings.DataLaneLP2HSTime = 23;
 80003a6:	2317      	movs	r3, #23
 80003a8:	e9cd 6308 	strd	r6, r3, [sp, #32]
  PhyTimings.StopWaitTime = 7;
 80003ac:	2307      	movs	r3, #7
  PhyTimings.DataLaneMaxReadTime = 0;
 80003ae:	900a      	str	r0, [sp, #40]	@ 0x28
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 80003b0:	a906      	add	r1, sp, #24
 80003b2:	4620      	mov	r0, r4
  PhyTimings.StopWaitTime = 7;
 80003b4:	930b      	str	r3, [sp, #44]	@ 0x2c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 80003b6:	f004 fed6 	bl	8005166 <HAL_DSI_ConfigPhyTimer>
 80003ba:	b108      	cbz	r0, 80003c0 <MX_DSIHOST_DSI_Init+0xc0>
 80003bc:	b672      	cpsid	i
  while (1)
 80003be:	e7fe      	b.n	80003be <MX_DSIHOST_DSI_Init+0xbe>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 80003c0:	4639      	mov	r1, r7
 80003c2:	4620      	mov	r0, r4
 80003c4:	f004 febe 	bl	8005144 <HAL_DSI_ConfigFlowControl>
 80003c8:	4601      	mov	r1, r0
 80003ca:	b108      	cbz	r0, 80003d0 <MX_DSIHOST_DSI_Init+0xd0>
 80003cc:	b672      	cpsid	i
  while (1)
 80003ce:	e7fe      	b.n	80003ce <MX_DSIHOST_DSI_Init+0xce>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 80003d0:	4620      	mov	r0, r4
 80003d2:	f004 fc3e 	bl	8004c52 <HAL_DSI_ConfigErrorMonitor>
 80003d6:	b108      	cbz	r0, 80003dc <MX_DSIHOST_DSI_Init+0xdc>
 80003d8:	b672      	cpsid	i
  while (1)
 80003da:	e7fe      	b.n	80003da <MX_DSIHOST_DSI_Init+0xda>
  VidCfg.ColorCoding = DSI_RGB888;
 80003dc:	2305      	movs	r3, #5
  VidCfg.LooselyPacked = DSI_LOOSELY_PACKED_DISABLE;
 80003de:	e9cd 3016 	strd	r3, r0, [sp, #88]	@ 0x58
  VidCfg.PacketSize = 480;
 80003e2:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  VidCfg.HorizontalBackPorch = 3;
 80003e6:	2206      	movs	r2, #6
  VidCfg.NumberOfChunks = 0;
 80003e8:	e9cd 3019 	strd	r3, r0, [sp, #100]	@ 0x64
  VidCfg.HorizontalBackPorch = 3;
 80003ec:	2303      	movs	r3, #3
  VidCfg.VerticalSyncActive = 20;
 80003ee:	f240 51ac 	movw	r1, #1452	@ 0x5ac
  VidCfg.HorizontalBackPorch = 3;
 80003f2:	e9cd 231f 	strd	r2, r3, [sp, #124]	@ 0x7c
  VidCfg.VerticalSyncActive = 20;
 80003f6:	2314      	movs	r3, #20
  VidCfg.Mode = DSI_VID_MODE_BURST;
 80003f8:	9518      	str	r5, [sp, #96]	@ 0x60
  VidCfg.VerticalSyncActive = 20;
 80003fa:	e9cd 1321 	strd	r1, r3, [sp, #132]	@ 0x84
  VidCfg.VerticalActive = 481;
 80003fe:	25c8      	movs	r5, #200	@ 0xc8
 8000400:	f240 13e1 	movw	r3, #481	@ 0x1e1
 8000404:	e9cd 5324 	strd	r5, r3, [sp, #144]	@ 0x90
  VidCfg.LPLargestPacketSize = 64;
 8000408:	2340      	movs	r3, #64	@ 0x40
 800040a:	f44f 4500 	mov.w	r5, #32768	@ 0x8000
  VidCfg.VerticalBackPorch = 12;
 800040e:	9623      	str	r6, [sp, #140]	@ 0x8c
  VidCfg.LPLargestPacketSize = 64;
 8000410:	e9cd 5326 	strd	r5, r3, [sp, #152]	@ 0x98
  VidCfg.LPHorizontalBackPorchEnable = DSI_LP_HBP_ENABLE;
 8000414:	f44f 5600 	mov.w	r6, #8192	@ 0x2000
 8000418:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  VidCfg.LPVerticalFrontPorchEnable = DSI_LP_VFP_ENABLE;
 800041c:	f44f 6700 	mov.w	r7, #2048	@ 0x800
  VidCfg.LPHorizontalBackPorchEnable = DSI_LP_HBP_ENABLE;
 8000420:	e9cd 6329 	strd	r6, r3, [sp, #164]	@ 0xa4
  VidCfg.LPVerticalFrontPorchEnable = DSI_LP_VFP_ENABLE;
 8000424:	f44f 6380 	mov.w	r3, #1024	@ 0x400
  VidCfg.LPVerticalSyncActiveEnable = DSI_LP_VSYNC_ENABLE;
 8000428:	f44f 7c00 	mov.w	ip, #512	@ 0x200
  VidCfg.LPVerticalFrontPorchEnable = DSI_LP_VFP_ENABLE;
 800042c:	e9cd 732b 	strd	r7, r3, [sp, #172]	@ 0xac
  VidCfg.LPVerticalSyncActiveEnable = DSI_LP_VSYNC_ENABLE;
 8000430:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8000434:	e9cd c32d 	strd	ip, r3, [sp, #180]	@ 0xb4
  VidCfg.FrameBTAAcknowledgeEnable = DSI_FBTAA_ENABLE;
 8000438:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  VidCfg.HSPolarity = DSI_HSYNC_ACTIVE_HIGH;
 800043c:	e9cd 001b 	strd	r0, r0, [sp, #108]	@ 0x6c
  VidCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 8000440:	e9cd 001d 	strd	r0, r0, [sp, #116]	@ 0x74
  VidCfg.LPVACTLargestPacketSize = 0;
 8000444:	9028      	str	r0, [sp, #160]	@ 0xa0
  if (HAL_DSI_ConfigVideoMode(&hdsi, &VidCfg) != HAL_OK)
 8000446:	a915      	add	r1, sp, #84	@ 0x54
 8000448:	4620      	mov	r0, r4
  VidCfg.FrameBTAAcknowledgeEnable = DSI_FBTAA_ENABLE;
 800044a:	932f      	str	r3, [sp, #188]	@ 0xbc
  if (HAL_DSI_ConfigVideoMode(&hdsi, &VidCfg) != HAL_OK)
 800044c:	f004 fd74 	bl	8004f38 <HAL_DSI_ConfigVideoMode>
 8000450:	4601      	mov	r1, r0
 8000452:	b108      	cbz	r0, 8000458 <MX_DSIHOST_DSI_Init+0x158>
 8000454:	b672      	cpsid	i
  while (1)
 8000456:	e7fe      	b.n	8000456 <MX_DSIHOST_DSI_Init+0x156>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 8000458:	4620      	mov	r0, r4
 800045a:	f004 fd59 	bl	8004f10 <HAL_DSI_SetGenericVCID>
 800045e:	b108      	cbz	r0, 8000464 <MX_DSIHOST_DSI_Init+0x164>
 8000460:	b672      	cpsid	i
  while (1)
 8000462:	e7fe      	b.n	8000462 <MX_DSIHOST_DSI_Init+0x162>
  if (HAL_DSI_Start(&hdsi) != HAL_OK)
 8000464:	4620      	mov	r0, r4
 8000466:	f004 ff35 	bl	80052d4 <HAL_DSI_Start>
 800046a:	b108      	cbz	r0, 8000470 <MX_DSIHOST_DSI_Init+0x170>
 800046c:	b672      	cpsid	i
  while (1)
 800046e:	e7fe      	b.n	800046e <MX_DSIHOST_DSI_Init+0x16e>
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_DSI;
 8000470:	2200      	movs	r2, #0
 8000472:	2304      	movs	r3, #4
  HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
 8000474:	a830      	add	r0, sp, #192	@ 0xc0
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_DSI;
 8000476:	e9cd 2330 	strd	r2, r3, [sp, #192]	@ 0xc0
  PeriphClkInit.DsiClockSelection    = RCC_DSICLKSOURCE_DSIPHY;
 800047a:	9566      	str	r5, [sp, #408]	@ 0x198
  HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
 800047c:	f007 fd5c 	bl	8007f38 <HAL_RCCEx_PeriphCLKConfig>
}
 8000480:	b069      	add	sp, #420	@ 0x1a4
 8000482:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000484:	42022000 	.word	0x42022000
 8000488:	20000470 	.word	0x20000470
 800048c:	40016c00 	.word	0x40016c00

08000490 <MX_LTDC_Init>:
{
 8000490:	b570      	push	{r4, r5, r6, lr}
 8000492:	b0e4      	sub	sp, #400	@ 0x190
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000494:	2234      	movs	r2, #52	@ 0x34
 8000496:	2100      	movs	r1, #0
 8000498:	a857      	add	r0, sp, #348	@ 0x15c
 800049a:	f024 ff57 	bl	802534c <memset>
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AH;
 800049e:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
  hltdc.Instance = LTDC;
 80004a2:	4cab      	ldr	r4, [pc, #684]	@ (8000750 <MX_LTDC_Init+0x2c0>)
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AH;
 80004a4:	4dab      	ldr	r5, [pc, #684]	@ (8000754 <MX_LTDC_Init+0x2c4>)
  hltdc.Init.VerticalSync = 19;
 80004a6:	2213      	movs	r2, #19
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AH;
 80004a8:	e9c4 5300 	strd	r5, r3, [r4]
  hltdc.Init.VerticalSync = 19;
 80004ac:	2501      	movs	r5, #1
  hltdc.Init.AccumulatedVBP = 31;
 80004ae:	f04f 0c02 	mov.w	ip, #2
  hltdc.Init.VerticalSync = 19;
 80004b2:	e9c4 5205 	strd	r5, r2, [r4, #20]
  hltdc.Init.AccumulatedVBP = 31;
 80004b6:	221f      	movs	r2, #31
  hltdc.Init.AccumulatedActiveH = 512;
 80004b8:	f44f 7ef1 	mov.w	lr, #482	@ 0x1e2
  hltdc.Init.AccumulatedVBP = 31;
 80004bc:	e9c4 c207 	strd	ip, r2, [r4, #28]
  hltdc.Init.AccumulatedActiveH = 512;
 80004c0:	f44f 7200 	mov.w	r2, #512	@ 0x200
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80004c4:	2300      	movs	r3, #0
  hltdc.Init.TotalHeigh = 712;
 80004c6:	f240 11e3 	movw	r1, #483	@ 0x1e3
  hltdc.Init.AccumulatedActiveH = 512;
 80004ca:	e9c4 e209 	strd	lr, r2, [r4, #36]	@ 0x24
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80004ce:	f04f 4680 	mov.w	r6, #1073741824	@ 0x40000000
  hltdc.Init.TotalHeigh = 712;
 80004d2:	f44f 7232 	mov.w	r2, #712	@ 0x2c8
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80004d6:	4620      	mov	r0, r4
  hltdc.Init.TotalHeigh = 712;
 80004d8:	e9c4 120b 	strd	r1, r2, [r4, #44]	@ 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80004dc:	e9c4 6302 	strd	r6, r3, [r4, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80004e0:	6123      	str	r3, [r4, #16]
  hltdc.Init.Backcolor.Blue = 0;
 80004e2:	86a3      	strh	r3, [r4, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 80004e4:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80004e8:	f006 f818 	bl	800651c <HAL_LTDC_Init>
 80004ec:	4602      	mov	r2, r0
 80004ee:	b108      	cbz	r0, 80004f4 <MX_LTDC_Init+0x64>
 80004f0:	b672      	cpsid	i
  while (1)
 80004f2:	e7fe      	b.n	80004f2 <MX_LTDC_Init+0x62>
  pLayerCfg.WindowY1 = 481;
 80004f4:	f240 11e1 	movw	r1, #481	@ 0x1e1
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB888;
 80004f8:	e9cd 155a 	strd	r1, r5, [sp, #360]	@ 0x168
  pLayerCfg.Alpha = 255;
 80004fc:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.WindowX0 = 0;
 80004fe:	9057      	str	r0, [sp, #348]	@ 0x15c
  pLayerCfg.Alpha0 = 0;
 8000500:	e9cd 105c 	strd	r1, r0, [sp, #368]	@ 0x170
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 8000504:	f44f 60c0 	mov.w	r0, #1536	@ 0x600
 8000508:	2107      	movs	r1, #7
  pLayerCfg.WindowX1 = 480;
 800050a:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 800050e:	e9cd 015e 	strd	r0, r1, [sp, #376]	@ 0x178
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000512:	4620      	mov	r0, r4
 8000514:	a957      	add	r1, sp, #348	@ 0x15c
  pLayerCfg.WindowY0 = 1;
 8000516:	e9cd 3558 	strd	r3, r5, [sp, #352]	@ 0x160
  pLayerCfg.ImageWidth = 480;
 800051a:	e9cd 2360 	strd	r2, r3, [sp, #384]	@ 0x180
  pLayerCfg.ImageHeight = 480;
 800051e:	9362      	str	r3, [sp, #392]	@ 0x188
  pLayerCfg.Backcolor.Blue = 0;
 8000520:	f8ad 218c 	strh.w	r2, [sp, #396]	@ 0x18c
  pLayerCfg.Backcolor.Red = 0;
 8000524:	f88d 218e 	strb.w	r2, [sp, #398]	@ 0x18e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000528:	f006 f8c3 	bl	80066b2 <HAL_LTDC_ConfigLayer>
 800052c:	4604      	mov	r4, r0
 800052e:	b108      	cbz	r0, 8000534 <MX_LTDC_Init+0xa4>
 8000530:	b672      	cpsid	i
  while (1)
 8000532:	e7fe      	b.n	8000532 <MX_LTDC_Init+0xa2>
  HAL_Delay(10);
 8000534:	200a      	movs	r0, #10
 8000536:	f003 ff63 	bl	8004400 <HAL_Delay>
  HAL_DSI_EnterULPM(&hdsi);
 800053a:	4887      	ldr	r0, [pc, #540]	@ (8000758 <MX_LTDC_Init+0x2c8>)
 800053c:	f004 ff5e 	bl	80053fc <HAL_DSI_EnterULPM>
  HAL_Delay(10);
 8000540:	200a      	movs	r0, #10
 8000542:	f003 ff5d 	bl	8004400 <HAL_Delay>
  HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_RESET);
 8000546:	4622      	mov	r2, r4
 8000548:	2120      	movs	r1, #32
 800054a:	4884      	ldr	r0, [pc, #528]	@ (800075c <MX_LTDC_Init+0x2cc>)
 800054c:	f005 fa44 	bl	80059d8 <HAL_GPIO_WritePin>
  HAL_Delay(10);
 8000550:	200a      	movs	r0, #10
 8000552:	f003 ff55 	bl	8004400 <HAL_Delay>
  HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_SET);
 8000556:	462a      	mov	r2, r5
 8000558:	2120      	movs	r1, #32
 800055a:	4880      	ldr	r0, [pc, #512]	@ (800075c <MX_LTDC_Init+0x2cc>)
 800055c:	f005 fa3c 	bl	80059d8 <HAL_GPIO_WritePin>
  HAL_Delay(150);
 8000560:	2096      	movs	r0, #150	@ 0x96
 8000562:	f003 ff4d 	bl	8004400 <HAL_Delay>
  HAL_DSI_ExitULPM(&hdsi);
 8000566:	487c      	ldr	r0, [pc, #496]	@ (8000758 <MX_LTDC_Init+0x2c8>)
 8000568:	f004 ffe4 	bl	8005534 <HAL_DSI_ExitULPM>
  HAL_Delay(10);
 800056c:	200a      	movs	r0, #10
 800056e:	f003 ff47 	bl	8004400 <HAL_Delay>
  uint8_t InitParam1[3] = {0xFF ,0x83 , 0x79};
 8000572:	ab02      	add	r3, sp, #8
  if (HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 3, 0xB9, InitParam1) != HAL_OK)
 8000574:	9301      	str	r3, [sp, #4]
 8000576:	23b9      	movs	r3, #185	@ 0xb9
  uint8_t InitParam1[3] = {0xFF ,0x83 , 0x79};
 8000578:	4a79      	ldr	r2, [pc, #484]	@ (8000760 <MX_LTDC_Init+0x2d0>)
  if (HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 3, 0xB9, InitParam1) != HAL_OK)
 800057a:	9300      	str	r3, [sp, #0]
  uint8_t InitParam1[3] = {0xFF ,0x83 , 0x79};
 800057c:	8811      	ldrh	r1, [r2, #0]
 800057e:	7892      	ldrb	r2, [r2, #2]
 8000580:	f8ad 1008 	strh.w	r1, [sp, #8]
 8000584:	f88d 200a 	strb.w	r2, [sp, #10]
  if (HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 3, 0xB9, InitParam1) != HAL_OK)
 8000588:	2303      	movs	r3, #3
 800058a:	2239      	movs	r2, #57	@ 0x39
 800058c:	4621      	mov	r1, r4
 800058e:	4872      	ldr	r0, [pc, #456]	@ (8000758 <MX_LTDC_Init+0x2c8>)
 8000590:	f004 fed4 	bl	800533c <HAL_DSI_LongWrite>
 8000594:	b108      	cbz	r0, 800059a <MX_LTDC_Init+0x10a>
 8000596:	b672      	cpsid	i
  while (1)
 8000598:	e7fe      	b.n	8000598 <MX_LTDC_Init+0x108>
  uint8_t InitParam3[16] = {0x44,0x1C,0x1C,0x37,0x57,0x90,0xD0,0xE2,0x58,0x80,0x38,0x38,0xF8,0x33,0x34,0x42};
 800059a:	ad0b      	add	r5, sp, #44	@ 0x2c
 800059c:	462c      	mov	r4, r5
 800059e:	4b71      	ldr	r3, [pc, #452]	@ (8000764 <MX_LTDC_Init+0x2d4>)
 80005a0:	f103 0610 	add.w	r6, r3, #16
 80005a4:	4622      	mov	r2, r4
 80005a6:	6818      	ldr	r0, [r3, #0]
 80005a8:	6859      	ldr	r1, [r3, #4]
 80005aa:	3308      	adds	r3, #8
 80005ac:	c203      	stmia	r2!, {r0, r1}
 80005ae:	42b3      	cmp	r3, r6
 80005b0:	4614      	mov	r4, r2
 80005b2:	d1f7      	bne.n	80005a4 <MX_LTDC_Init+0x114>
  if (HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 16, 0xB1, InitParam3) != HAL_OK)
 80005b4:	23b1      	movs	r3, #177	@ 0xb1
 80005b6:	2239      	movs	r2, #57	@ 0x39
 80005b8:	9300      	str	r3, [sp, #0]
 80005ba:	2100      	movs	r1, #0
 80005bc:	2310      	movs	r3, #16
 80005be:	4866      	ldr	r0, [pc, #408]	@ (8000758 <MX_LTDC_Init+0x2c8>)
 80005c0:	9501      	str	r5, [sp, #4]
 80005c2:	f004 febb 	bl	800533c <HAL_DSI_LongWrite>
 80005c6:	4604      	mov	r4, r0
 80005c8:	b108      	cbz	r0, 80005ce <MX_LTDC_Init+0x13e>
 80005ca:	b672      	cpsid	i
  while (1)
 80005cc:	e7fe      	b.n	80005cc <MX_LTDC_Init+0x13c>
  uint8_t InitParam4[9] = {0x80,0x14,0x0C,0x30,0x20,0x50,0x11,0x42,0x1D};
 80005ce:	ad05      	add	r5, sp, #20
 80005d0:	462b      	mov	r3, r5
 80005d2:	4a65      	ldr	r2, [pc, #404]	@ (8000768 <MX_LTDC_Init+0x2d8>)
 80005d4:	6810      	ldr	r0, [r2, #0]
 80005d6:	6851      	ldr	r1, [r2, #4]
 80005d8:	7a12      	ldrb	r2, [r2, #8]
 80005da:	c303      	stmia	r3!, {r0, r1}
 80005dc:	701a      	strb	r2, [r3, #0]
  if (HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 9, 0xB2, InitParam4) != HAL_OK)
 80005de:	23b2      	movs	r3, #178	@ 0xb2
 80005e0:	4621      	mov	r1, r4
 80005e2:	9300      	str	r3, [sp, #0]
 80005e4:	2239      	movs	r2, #57	@ 0x39
 80005e6:	2309      	movs	r3, #9
 80005e8:	485b      	ldr	r0, [pc, #364]	@ (8000758 <MX_LTDC_Init+0x2c8>)
 80005ea:	9501      	str	r5, [sp, #4]
 80005ec:	f004 fea6 	bl	800533c <HAL_DSI_LongWrite>
 80005f0:	4604      	mov	r4, r0
 80005f2:	b108      	cbz	r0, 80005f8 <MX_LTDC_Init+0x168>
 80005f4:	b672      	cpsid	i
  while (1)
 80005f6:	e7fe      	b.n	80005f6 <MX_LTDC_Init+0x166>
  uint8_t InitParam5[10] = {0x01,0xAA,0x01,0xAF,0x01,0xAF,0x10,0xEA,0x1C,0xEA};
 80005f8:	ad08      	add	r5, sp, #32
 80005fa:	462b      	mov	r3, r5
 80005fc:	4a5b      	ldr	r2, [pc, #364]	@ (800076c <MX_LTDC_Init+0x2dc>)
 80005fe:	6810      	ldr	r0, [r2, #0]
 8000600:	6851      	ldr	r1, [r2, #4]
 8000602:	8912      	ldrh	r2, [r2, #8]
 8000604:	c303      	stmia	r3!, {r0, r1}
 8000606:	801a      	strh	r2, [r3, #0]
  if (HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 10, 0xB4, InitParam5) != HAL_OK)
 8000608:	23b4      	movs	r3, #180	@ 0xb4
 800060a:	4621      	mov	r1, r4
 800060c:	9300      	str	r3, [sp, #0]
 800060e:	2239      	movs	r2, #57	@ 0x39
 8000610:	230a      	movs	r3, #10
 8000612:	4851      	ldr	r0, [pc, #324]	@ (8000758 <MX_LTDC_Init+0x2c8>)
 8000614:	9501      	str	r5, [sp, #4]
 8000616:	f004 fe91 	bl	800533c <HAL_DSI_LongWrite>
 800061a:	4601      	mov	r1, r0
 800061c:	b108      	cbz	r0, 8000622 <MX_LTDC_Init+0x192>
 800061e:	b672      	cpsid	i
  while (1)
 8000620:	e7fe      	b.n	8000620 <MX_LTDC_Init+0x190>
  uint8_t InitParam60[4] = {00,00,00,0xC0};
 8000622:	ab04      	add	r3, sp, #16
 8000624:	f04f 4240 	mov.w	r2, #3221225472	@ 0xc0000000
  if (HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, 0xC7, InitParam60) != HAL_OK)
 8000628:	9301      	str	r3, [sp, #4]
 800062a:	23c7      	movs	r3, #199	@ 0xc7
  uint8_t InitParam60[4] = {00,00,00,0xC0};
 800062c:	9204      	str	r2, [sp, #16]
  if (HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, 0xC7, InitParam60) != HAL_OK)
 800062e:	9300      	str	r3, [sp, #0]
 8000630:	2239      	movs	r2, #57	@ 0x39
 8000632:	2304      	movs	r3, #4
 8000634:	4848      	ldr	r0, [pc, #288]	@ (8000758 <MX_LTDC_Init+0x2c8>)
 8000636:	f004 fe81 	bl	800533c <HAL_DSI_LongWrite>
 800063a:	4601      	mov	r1, r0
 800063c:	b108      	cbz	r0, 8000642 <MX_LTDC_Init+0x1b2>
 800063e:	b672      	cpsid	i
  while (1)
 8000640:	e7fe      	b.n	8000640 <MX_LTDC_Init+0x1b0>
  if (HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0xCC, 0x02) != HAL_OK)
 8000642:	2302      	movs	r3, #2
 8000644:	2215      	movs	r2, #21
 8000646:	9300      	str	r3, [sp, #0]
 8000648:	4843      	ldr	r0, [pc, #268]	@ (8000758 <MX_LTDC_Init+0x2c8>)
 800064a:	23cc      	movs	r3, #204	@ 0xcc
 800064c:	f004 fe65 	bl	800531a <HAL_DSI_ShortWrite>
 8000650:	4601      	mov	r1, r0
 8000652:	b108      	cbz	r0, 8000658 <MX_LTDC_Init+0x1c8>
 8000654:	b672      	cpsid	i
  while (1)
 8000656:	e7fe      	b.n	8000656 <MX_LTDC_Init+0x1c6>
  if (HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0xD2, 0x77) != HAL_OK)
 8000658:	2377      	movs	r3, #119	@ 0x77
 800065a:	2215      	movs	r2, #21
 800065c:	9300      	str	r3, [sp, #0]
 800065e:	483e      	ldr	r0, [pc, #248]	@ (8000758 <MX_LTDC_Init+0x2c8>)
 8000660:	23d2      	movs	r3, #210	@ 0xd2
 8000662:	f004 fe5a 	bl	800531a <HAL_DSI_ShortWrite>
 8000666:	b108      	cbz	r0, 800066c <MX_LTDC_Init+0x1dc>
 8000668:	b672      	cpsid	i
  while (1)
 800066a:	e7fe      	b.n	800066a <MX_LTDC_Init+0x1da>
  uint8_t InitParam50[37] = {
 800066c:	ad21      	add	r5, sp, #132	@ 0x84
 800066e:	462a      	mov	r2, r5
 8000670:	4b3f      	ldr	r3, [pc, #252]	@ (8000770 <MX_LTDC_Init+0x2e0>)
 8000672:	f103 0620 	add.w	r6, r3, #32
 8000676:	4614      	mov	r4, r2
 8000678:	6818      	ldr	r0, [r3, #0]
 800067a:	6859      	ldr	r1, [r3, #4]
 800067c:	3308      	adds	r3, #8
 800067e:	c403      	stmia	r4!, {r0, r1}
 8000680:	42b3      	cmp	r3, r6
 8000682:	4622      	mov	r2, r4
 8000684:	d1f7      	bne.n	8000676 <MX_LTDC_Init+0x1e6>
 8000686:	6818      	ldr	r0, [r3, #0]
 8000688:	791b      	ldrb	r3, [r3, #4]
 800068a:	6020      	str	r0, [r4, #0]
 800068c:	7123      	strb	r3, [r4, #4]
  if (HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 37, 0xD3, InitParam50) != HAL_OK)
 800068e:	23d3      	movs	r3, #211	@ 0xd3
 8000690:	2239      	movs	r2, #57	@ 0x39
 8000692:	9300      	str	r3, [sp, #0]
 8000694:	2100      	movs	r1, #0
 8000696:	2325      	movs	r3, #37	@ 0x25
 8000698:	482f      	ldr	r0, [pc, #188]	@ (8000758 <MX_LTDC_Init+0x2c8>)
 800069a:	9501      	str	r5, [sp, #4]
 800069c:	f004 fe4e 	bl	800533c <HAL_DSI_LongWrite>
 80006a0:	b108      	cbz	r0, 80006a6 <MX_LTDC_Init+0x216>
 80006a2:	b672      	cpsid	i
  while (1)
 80006a4:	e7fe      	b.n	80006a4 <MX_LTDC_Init+0x214>
  uint8_t InitParam51[34] = {
 80006a6:	ad0f      	add	r5, sp, #60	@ 0x3c
 80006a8:	462a      	mov	r2, r5
 80006aa:	4b32      	ldr	r3, [pc, #200]	@ (8000774 <MX_LTDC_Init+0x2e4>)
 80006ac:	f103 0620 	add.w	r6, r3, #32
 80006b0:	4614      	mov	r4, r2
 80006b2:	6818      	ldr	r0, [r3, #0]
 80006b4:	6859      	ldr	r1, [r3, #4]
 80006b6:	3308      	adds	r3, #8
 80006b8:	c403      	stmia	r4!, {r0, r1}
 80006ba:	42b3      	cmp	r3, r6
 80006bc:	4622      	mov	r2, r4
 80006be:	d1f7      	bne.n	80006b0 <MX_LTDC_Init+0x220>
 80006c0:	881b      	ldrh	r3, [r3, #0]
  if (HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 34, 0xD5, InitParam51) != HAL_OK)
 80006c2:	2239      	movs	r2, #57	@ 0x39
  uint8_t InitParam51[34] = {
 80006c4:	8023      	strh	r3, [r4, #0]
  if (HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 34, 0xD5, InitParam51) != HAL_OK)
 80006c6:	23d5      	movs	r3, #213	@ 0xd5
 80006c8:	2100      	movs	r1, #0
 80006ca:	9300      	str	r3, [sp, #0]
 80006cc:	4822      	ldr	r0, [pc, #136]	@ (8000758 <MX_LTDC_Init+0x2c8>)
 80006ce:	2322      	movs	r3, #34	@ 0x22
 80006d0:	9501      	str	r5, [sp, #4]
 80006d2:	f004 fe33 	bl	800533c <HAL_DSI_LongWrite>
 80006d6:	b108      	cbz	r0, 80006dc <MX_LTDC_Init+0x24c>
 80006d8:	b672      	cpsid	i
  while (1)
 80006da:	e7fe      	b.n	80006da <MX_LTDC_Init+0x24a>
  uint8_t InitParam52[35] = {
 80006dc:	ad18      	add	r5, sp, #96	@ 0x60
 80006de:	462a      	mov	r2, r5
 80006e0:	4b25      	ldr	r3, [pc, #148]	@ (8000778 <MX_LTDC_Init+0x2e8>)
 80006e2:	f103 0620 	add.w	r6, r3, #32
 80006e6:	4614      	mov	r4, r2
 80006e8:	6818      	ldr	r0, [r3, #0]
 80006ea:	6859      	ldr	r1, [r3, #4]
 80006ec:	3308      	adds	r3, #8
 80006ee:	c403      	stmia	r4!, {r0, r1}
 80006f0:	42b3      	cmp	r3, r6
 80006f2:	4622      	mov	r2, r4
 80006f4:	d1f7      	bne.n	80006e6 <MX_LTDC_Init+0x256>
 80006f6:	781b      	ldrb	r3, [r3, #0]
 80006f8:	2100      	movs	r1, #0
 80006fa:	7023      	strb	r3, [r4, #0]
  if (HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 35, 0xD6, InitParam52) != HAL_OK)
 80006fc:	23d6      	movs	r3, #214	@ 0xd6
  uint8_t InitParam52[35] = {
 80006fe:	f8a5 1021 	strh.w	r1, [r5, #33]	@ 0x21
  if (HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 35, 0xD6, InitParam52) != HAL_OK)
 8000702:	2239      	movs	r2, #57	@ 0x39
 8000704:	9300      	str	r3, [sp, #0]
 8000706:	4814      	ldr	r0, [pc, #80]	@ (8000758 <MX_LTDC_Init+0x2c8>)
 8000708:	2323      	movs	r3, #35	@ 0x23
 800070a:	9501      	str	r5, [sp, #4]
 800070c:	f004 fe16 	bl	800533c <HAL_DSI_LongWrite>
 8000710:	b108      	cbz	r0, 8000716 <MX_LTDC_Init+0x286>
 8000712:	b672      	cpsid	i
  while (1)
 8000714:	e7fe      	b.n	8000714 <MX_LTDC_Init+0x284>
  uint8_t InitParam8[42] = {
 8000716:	aa2b      	add	r2, sp, #172	@ 0xac
 8000718:	4615      	mov	r5, r2
 800071a:	4b18      	ldr	r3, [pc, #96]	@ (800077c <MX_LTDC_Init+0x2ec>)
 800071c:	f103 0628 	add.w	r6, r3, #40	@ 0x28
 8000720:	4614      	mov	r4, r2
 8000722:	6818      	ldr	r0, [r3, #0]
 8000724:	6859      	ldr	r1, [r3, #4]
 8000726:	3308      	adds	r3, #8
 8000728:	c403      	stmia	r4!, {r0, r1}
 800072a:	42b3      	cmp	r3, r6
 800072c:	4622      	mov	r2, r4
 800072e:	d1f7      	bne.n	8000720 <MX_LTDC_Init+0x290>
 8000730:	881b      	ldrh	r3, [r3, #0]
  if (HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 42, 0xE0, InitParam8) != HAL_OK)
 8000732:	2100      	movs	r1, #0
  uint8_t InitParam8[42] = {
 8000734:	8023      	strh	r3, [r4, #0]
  if (HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 42, 0xE0, InitParam8) != HAL_OK)
 8000736:	23e0      	movs	r3, #224	@ 0xe0
 8000738:	2239      	movs	r2, #57	@ 0x39
 800073a:	9300      	str	r3, [sp, #0]
 800073c:	4806      	ldr	r0, [pc, #24]	@ (8000758 <MX_LTDC_Init+0x2c8>)
 800073e:	232a      	movs	r3, #42	@ 0x2a
 8000740:	9501      	str	r5, [sp, #4]
 8000742:	f004 fdfb 	bl	800533c <HAL_DSI_LongWrite>
 8000746:	4601      	mov	r1, r0
 8000748:	b1d0      	cbz	r0, 8000780 <MX_LTDC_Init+0x2f0>
 800074a:	b672      	cpsid	i
  while (1)
 800074c:	e7fe      	b.n	800074c <MX_LTDC_Init+0x2bc>
 800074e:	bf00      	nop
 8000750:	200003bc 	.word	0x200003bc
 8000754:	40016800 	.word	0x40016800
 8000758:	20000470 	.word	0x20000470
 800075c:	42020c00 	.word	0x42020c00
 8000760:	08026054 	.word	0x08026054
 8000764:	08026058 	.word	0x08026058
 8000768:	08026069 	.word	0x08026069
 800076c:	08026073 	.word	0x08026073
 8000770:	08025e90 	.word	0x08025e90
 8000774:	08025eb5 	.word	0x08025eb5
 8000778:	08025ed7 	.word	0x08025ed7
 800077c:	08025efa 	.word	0x08025efa
  uint8_t InitParam44[3] = {0x2C,0x2C,00};
 8000780:	ab03      	add	r3, sp, #12
  if (HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 3, 0xB6, InitParam44) != HAL_OK)
 8000782:	9301      	str	r3, [sp, #4]
 8000784:	23b6      	movs	r3, #182	@ 0xb6
  uint8_t InitParam44[3] = {0x2C,0x2C,00};
 8000786:	4a4e      	ldr	r2, [pc, #312]	@ (80008c0 <MX_LTDC_Init+0x430>)
  if (HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 3, 0xB6, InitParam44) != HAL_OK)
 8000788:	9300      	str	r3, [sp, #0]
  uint8_t InitParam44[3] = {0x2C,0x2C,00};
 800078a:	8810      	ldrh	r0, [r2, #0]
 800078c:	7892      	ldrb	r2, [r2, #2]
 800078e:	f8ad 000c 	strh.w	r0, [sp, #12]
 8000792:	f88d 200e 	strb.w	r2, [sp, #14]
  if (HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 3, 0xB6, InitParam44) != HAL_OK)
 8000796:	2303      	movs	r3, #3
 8000798:	2239      	movs	r2, #57	@ 0x39
 800079a:	484a      	ldr	r0, [pc, #296]	@ (80008c4 <MX_LTDC_Init+0x434>)
 800079c:	f004 fdce 	bl	800533c <HAL_DSI_LongWrite>
 80007a0:	4601      	mov	r1, r0
 80007a2:	b108      	cbz	r0, 80007a8 <MX_LTDC_Init+0x318>
 80007a4:	b672      	cpsid	i
  while (1)
 80007a6:	e7fe      	b.n	80007a6 <MX_LTDC_Init+0x316>
  if (HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0xBD, 0x00) != HAL_OK)
 80007a8:	9000      	str	r0, [sp, #0]
 80007aa:	23bd      	movs	r3, #189	@ 0xbd
 80007ac:	2215      	movs	r2, #21
 80007ae:	4845      	ldr	r0, [pc, #276]	@ (80008c4 <MX_LTDC_Init+0x434>)
 80007b0:	f004 fdb3 	bl	800531a <HAL_DSI_ShortWrite>
 80007b4:	b108      	cbz	r0, 80007ba <MX_LTDC_Init+0x32a>
 80007b6:	b672      	cpsid	i
  while (1)
 80007b8:	e7fe      	b.n	80007b8 <MX_LTDC_Init+0x328>
  uint8_t InitParam14[] = {
 80007ba:	aa4c      	add	r2, sp, #304	@ 0x130
 80007bc:	4615      	mov	r5, r2
 80007be:	4b42      	ldr	r3, [pc, #264]	@ (80008c8 <MX_LTDC_Init+0x438>)
 80007c0:	f103 0628 	add.w	r6, r3, #40	@ 0x28
 80007c4:	4614      	mov	r4, r2
 80007c6:	6818      	ldr	r0, [r3, #0]
 80007c8:	6859      	ldr	r1, [r3, #4]
 80007ca:	3308      	adds	r3, #8
 80007cc:	c403      	stmia	r4!, {r0, r1}
 80007ce:	42b3      	cmp	r3, r6
 80007d0:	4622      	mov	r2, r4
 80007d2:	d1f7      	bne.n	80007c4 <MX_LTDC_Init+0x334>
 80007d4:	8819      	ldrh	r1, [r3, #0]
 80007d6:	789b      	ldrb	r3, [r3, #2]
 80007d8:	8021      	strh	r1, [r4, #0]
 80007da:	70a3      	strb	r3, [r4, #2]
  if (HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 42, 0xC1, InitParam14) != HAL_OK)
 80007dc:	23c1      	movs	r3, #193	@ 0xc1
 80007de:	2100      	movs	r1, #0
 80007e0:	9300      	str	r3, [sp, #0]
 80007e2:	2239      	movs	r2, #57	@ 0x39
 80007e4:	232a      	movs	r3, #42	@ 0x2a
 80007e6:	4837      	ldr	r0, [pc, #220]	@ (80008c4 <MX_LTDC_Init+0x434>)
 80007e8:	9501      	str	r5, [sp, #4]
 80007ea:	f004 fda7 	bl	800533c <HAL_DSI_LongWrite>
 80007ee:	4601      	mov	r1, r0
 80007f0:	b108      	cbz	r0, 80007f6 <MX_LTDC_Init+0x366>
 80007f2:	b672      	cpsid	i
  while (1)
 80007f4:	e7fe      	b.n	80007f4 <MX_LTDC_Init+0x364>
  if (HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0xBD, 0x01) != HAL_OK)
 80007f6:	2301      	movs	r3, #1
 80007f8:	2215      	movs	r2, #21
 80007fa:	9300      	str	r3, [sp, #0]
 80007fc:	4831      	ldr	r0, [pc, #196]	@ (80008c4 <MX_LTDC_Init+0x434>)
 80007fe:	23bd      	movs	r3, #189	@ 0xbd
 8000800:	f004 fd8b 	bl	800531a <HAL_DSI_ShortWrite>
 8000804:	b108      	cbz	r0, 800080a <MX_LTDC_Init+0x37a>
 8000806:	b672      	cpsid	i
  while (1)
 8000808:	e7fe      	b.n	8000808 <MX_LTDC_Init+0x378>
  uint8_t InitParam15[] = {
 800080a:	aa36      	add	r2, sp, #216	@ 0xd8
 800080c:	4615      	mov	r5, r2
 800080e:	4b2f      	ldr	r3, [pc, #188]	@ (80008cc <MX_LTDC_Init+0x43c>)
 8000810:	f103 0628 	add.w	r6, r3, #40	@ 0x28
 8000814:	4614      	mov	r4, r2
 8000816:	6818      	ldr	r0, [r3, #0]
 8000818:	6859      	ldr	r1, [r3, #4]
 800081a:	3308      	adds	r3, #8
 800081c:	c403      	stmia	r4!, {r0, r1}
 800081e:	42b3      	cmp	r3, r6
 8000820:	4622      	mov	r2, r4
 8000822:	d1f7      	bne.n	8000814 <MX_LTDC_Init+0x384>
 8000824:	881b      	ldrh	r3, [r3, #0]
  if (HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 42, 0xC1, InitParam15) != HAL_OK)
 8000826:	2100      	movs	r1, #0
  uint8_t InitParam15[] = {
 8000828:	8023      	strh	r3, [r4, #0]
  if (HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 42, 0xC1, InitParam15) != HAL_OK)
 800082a:	23c1      	movs	r3, #193	@ 0xc1
 800082c:	2239      	movs	r2, #57	@ 0x39
 800082e:	9300      	str	r3, [sp, #0]
 8000830:	4824      	ldr	r0, [pc, #144]	@ (80008c4 <MX_LTDC_Init+0x434>)
 8000832:	232a      	movs	r3, #42	@ 0x2a
 8000834:	9501      	str	r5, [sp, #4]
 8000836:	f004 fd81 	bl	800533c <HAL_DSI_LongWrite>
 800083a:	4601      	mov	r1, r0
 800083c:	b108      	cbz	r0, 8000842 <MX_LTDC_Init+0x3b2>
 800083e:	b672      	cpsid	i
  while (1)
 8000840:	e7fe      	b.n	8000840 <MX_LTDC_Init+0x3b0>
  if (HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0xBD, 0x02) != HAL_OK)
 8000842:	2302      	movs	r3, #2
 8000844:	2215      	movs	r2, #21
 8000846:	9300      	str	r3, [sp, #0]
 8000848:	481e      	ldr	r0, [pc, #120]	@ (80008c4 <MX_LTDC_Init+0x434>)
 800084a:	23bd      	movs	r3, #189	@ 0xbd
 800084c:	f004 fd65 	bl	800531a <HAL_DSI_ShortWrite>
 8000850:	b108      	cbz	r0, 8000856 <MX_LTDC_Init+0x3c6>
 8000852:	b672      	cpsid	i
  while (1)
 8000854:	e7fe      	b.n	8000854 <MX_LTDC_Init+0x3c4>
  uint8_t InitParam20[42] = {
 8000856:	aa41      	add	r2, sp, #260	@ 0x104
 8000858:	4615      	mov	r5, r2
 800085a:	4b1d      	ldr	r3, [pc, #116]	@ (80008d0 <MX_LTDC_Init+0x440>)
 800085c:	f103 0628 	add.w	r6, r3, #40	@ 0x28
 8000860:	4614      	mov	r4, r2
 8000862:	6818      	ldr	r0, [r3, #0]
 8000864:	6859      	ldr	r1, [r3, #4]
 8000866:	3308      	adds	r3, #8
 8000868:	c403      	stmia	r4!, {r0, r1}
 800086a:	42b3      	cmp	r3, r6
 800086c:	4622      	mov	r2, r4
 800086e:	d1f7      	bne.n	8000860 <MX_LTDC_Init+0x3d0>
 8000870:	881b      	ldrh	r3, [r3, #0]
  if (HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 42, 0xC1, InitParam20) != HAL_OK)
 8000872:	2100      	movs	r1, #0
  uint8_t InitParam20[42] = {
 8000874:	8023      	strh	r3, [r4, #0]
  if (HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 42, 0xC1, InitParam20) != HAL_OK)
 8000876:	23c1      	movs	r3, #193	@ 0xc1
 8000878:	2239      	movs	r2, #57	@ 0x39
 800087a:	9300      	str	r3, [sp, #0]
 800087c:	4811      	ldr	r0, [pc, #68]	@ (80008c4 <MX_LTDC_Init+0x434>)
 800087e:	232a      	movs	r3, #42	@ 0x2a
 8000880:	9501      	str	r5, [sp, #4]
 8000882:	f004 fd5b 	bl	800533c <HAL_DSI_LongWrite>
 8000886:	4601      	mov	r1, r0
 8000888:	b108      	cbz	r0, 800088e <MX_LTDC_Init+0x3fe>
 800088a:	b672      	cpsid	i
  while (1)
 800088c:	e7fe      	b.n	800088c <MX_LTDC_Init+0x3fc>
  if (HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0xBD, 0x00) != HAL_OK)
 800088e:	9000      	str	r0, [sp, #0]
 8000890:	23bd      	movs	r3, #189	@ 0xbd
 8000892:	2215      	movs	r2, #21
 8000894:	480b      	ldr	r0, [pc, #44]	@ (80008c4 <MX_LTDC_Init+0x434>)
 8000896:	f004 fd40 	bl	800531a <HAL_DSI_ShortWrite>
 800089a:	4601      	mov	r1, r0
 800089c:	b108      	cbz	r0, 80008a2 <MX_LTDC_Init+0x412>
 800089e:	b672      	cpsid	i
  while (1)
 80008a0:	e7fe      	b.n	80008a0 <MX_LTDC_Init+0x410>
  if (HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P0, DSI_EXIT_SLEEP_MODE, 0x00) != HAL_OK)
 80008a2:	9000      	str	r0, [sp, #0]
 80008a4:	2311      	movs	r3, #17
 80008a6:	2205      	movs	r2, #5
 80008a8:	4806      	ldr	r0, [pc, #24]	@ (80008c4 <MX_LTDC_Init+0x434>)
 80008aa:	f004 fd36 	bl	800531a <HAL_DSI_ShortWrite>
 80008ae:	b108      	cbz	r0, 80008b4 <MX_LTDC_Init+0x424>
 80008b0:	b672      	cpsid	i
  while (1)
 80008b2:	e7fe      	b.n	80008b2 <MX_LTDC_Init+0x422>
  HAL_Delay(120);
 80008b4:	2078      	movs	r0, #120	@ 0x78
 80008b6:	f003 fda3 	bl	8004400 <HAL_Delay>
}
 80008ba:	b064      	add	sp, #400	@ 0x190
 80008bc:	bd70      	pop	{r4, r5, r6, pc}
 80008be:	bf00      	nop
 80008c0:	0802607e 	.word	0x0802607e
 80008c4:	20000470 	.word	0x20000470
 80008c8:	08025f24 	.word	0x08025f24
 80008cc:	08025f4f 	.word	0x08025f4f
 80008d0:	08025f79 	.word	0x08025f79

080008d4 <SystemClock_Config>:
{
 80008d4:	b500      	push	{lr}
 80008d6:	b09f      	sub	sp, #124	@ 0x7c
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80008d8:	2260      	movs	r2, #96	@ 0x60
 80008da:	2100      	movs	r1, #0
 80008dc:	a806      	add	r0, sp, #24
 80008de:	f024 fd35 	bl	802534c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80008e2:	2218      	movs	r2, #24
 80008e4:	2100      	movs	r1, #0
 80008e6:	4668      	mov	r0, sp
 80008e8:	f024 fd30 	bl	802534c <memset>
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 80008ec:	f44f 3040 	mov.w	r0, #196608	@ 0x30000
 80008f0:	f006 fad2 	bl	8006e98 <HAL_PWREx_ControlVoltageScaling>
 80008f4:	b108      	cbz	r0, 80008fa <SystemClock_Config+0x26>
 80008f6:	b672      	cpsid	i
  while (1)
 80008f8:	e7fe      	b.n	80008f8 <SystemClock_Config+0x24>
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80008fa:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80008fe:	2111      	movs	r1, #17
  RCC_OscInitStruct.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 8000900:	2201      	movs	r2, #1
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000902:	e9cd 1306 	strd	r1, r3, [sp, #24]
  RCC_OscInitStruct.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 8000906:	2310      	movs	r3, #16
 8000908:	e9cd 230d 	strd	r2, r3, [sp, #52]	@ 0x34
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_4;
 800090c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000910:	930f      	str	r3, [sp, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000912:	2302      	movs	r3, #2
  RCC_OscInitStruct.PLL.PLLM = 1;
 8000914:	e9cd 2016 	strd	r2, r0, [sp, #88]	@ 0x58
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 8000918:	e9cd 3214 	strd	r3, r2, [sp, #80]	@ 0x50
  RCC_OscInitStruct.PLL.PLLN = 80;
 800091c:	2250      	movs	r2, #80	@ 0x50
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 800091e:	e9cd 001c 	strd	r0, r0, [sp, #112]	@ 0x70
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000922:	a806      	add	r0, sp, #24
  RCC_OscInitStruct.PLL.PLLP = 2;
 8000924:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
  RCC_OscInitStruct.PLL.PLLR = 2;
 8000928:	e9cd 331a 	strd	r3, r3, [sp, #104]	@ 0x68
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800092c:	f006 fd7a 	bl	8007424 <HAL_RCC_OscConfig>
 8000930:	b108      	cbz	r0, 8000936 <SystemClock_Config+0x62>
 8000932:	b672      	cpsid	i
  while (1)
 8000934:	e7fe      	b.n	8000934 <SystemClock_Config+0x60>
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000936:	221f      	movs	r2, #31
 8000938:	2303      	movs	r3, #3
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 800093a:	e9cd 0002 	strd	r0, r0, [sp, #8]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_HCLK_DIV1;
 800093e:	e9cd 0004 	strd	r0, r0, [sp, #16]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 8000942:	2104      	movs	r1, #4
 8000944:	4668      	mov	r0, sp
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000946:	e9cd 2300 	strd	r2, r3, [sp]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 800094a:	f006 fc09 	bl	8007160 <HAL_RCC_ClockConfig>
 800094e:	b108      	cbz	r0, 8000954 <SystemClock_Config+0x80>
 8000950:	b672      	cpsid	i
  while (1)
 8000952:	e7fe      	b.n	8000952 <SystemClock_Config+0x7e>
}
 8000954:	b01f      	add	sp, #124	@ 0x7c
 8000956:	f85d fb04 	ldr.w	pc, [sp], #4

0800095a <PeriphCommonClock_Config>:
{
 800095a:	b500      	push	{lr}
 800095c:	b0b9      	sub	sp, #228	@ 0xe4
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 800095e:	22d8      	movs	r2, #216	@ 0xd8
 8000960:	2100      	movs	r1, #0
 8000962:	a802      	add	r0, sp, #8
 8000964:	f024 fcf2 	bl	802534c <memset>
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_LTDC|RCC_PERIPHCLK_DSI;
 8000968:	2200      	movs	r2, #0
 800096a:	2306      	movs	r3, #6
 800096c:	e9cd 2300 	strd	r2, r3, [sp]
  PeriphClkInit.PLL3.PLL3M = 4;
 8000970:	2304      	movs	r3, #4
 8000972:	2203      	movs	r2, #3
  PeriphClkInit.PLL3.PLL3P = 8;
 8000974:	217d      	movs	r1, #125	@ 0x7d
  PeriphClkInit.PLL3.PLL3M = 4;
 8000976:	e9cd 230b 	strd	r2, r3, [sp, #44]	@ 0x2c
  PeriphClkInit.PLL3.PLL3P = 8;
 800097a:	2308      	movs	r3, #8
  PeriphClkInit.PLL3.PLL3R = 24;
 800097c:	2002      	movs	r0, #2
  PeriphClkInit.PLL3.PLL3P = 8;
 800097e:	e9cd 130d 	strd	r1, r3, [sp, #52]	@ 0x34
  PeriphClkInit.PLL3.PLL3R = 24;
 8000982:	2318      	movs	r3, #24
 8000984:	e9cd 030f 	strd	r0, r3, [sp, #60]	@ 0x3c
  PeriphClkInit.PLL3.PLL3ClockOut = RCC_PLL3_DIVP|RCC_PLL3_DIVR;
 8000988:	f44f 23a0 	mov.w	r3, #327680	@ 0x50000
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800098c:	4668      	mov	r0, sp
  PeriphClkInit.PLL3.PLL3ClockOut = RCC_PLL3_DIVP|RCC_PLL3_DIVR;
 800098e:	9313      	str	r3, [sp, #76]	@ 0x4c
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000990:	f007 fad2 	bl	8007f38 <HAL_RCCEx_PeriphCLKConfig>
 8000994:	b108      	cbz	r0, 800099a <PeriphCommonClock_Config+0x40>
 8000996:	b672      	cpsid	i
  while (1)
 8000998:	e7fe      	b.n	8000998 <PeriphCommonClock_Config+0x3e>
}
 800099a:	b039      	add	sp, #228	@ 0xe4
 800099c:	f85d fb04 	ldr.w	pc, [sp], #4

080009a0 <main>:
{
 80009a0:	b580      	push	{r7, lr}
 80009a2:	b0a6      	sub	sp, #152	@ 0x98
  HAL_Init();
 80009a4:	f003 fcf2 	bl	800438c <HAL_Init>
  SystemClock_Config();
 80009a8:	f7ff ff94 	bl	80008d4 <SystemClock_Config>
  PeriphCommonClock_Config();
 80009ac:	f7ff ffd5 	bl	800095a <PeriphCommonClock_Config>
  HAL_PWREx_DisableUCPDDeadBattery();
 80009b0:	f006 fae6 	bl	8006f80 <HAL_PWREx_DisableUCPDDeadBattery>
  if (HAL_PWREx_ConfigSupply(PWR_SMPS_SUPPLY) != HAL_OK)
 80009b4:	2002      	movs	r0, #2
 80009b6:	f006 fab7 	bl	8006f28 <HAL_PWREx_ConfigSupply>
 80009ba:	4604      	mov	r4, r0
 80009bc:	b108      	cbz	r0, 80009c2 <main+0x22>
 80009be:	b672      	cpsid	i
  while (1)
 80009c0:	e7fe      	b.n	80009c0 <main+0x20>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80009c2:	4601      	mov	r1, r0
 80009c4:	2214      	movs	r2, #20
 80009c6:	a819      	add	r0, sp, #100	@ 0x64
 80009c8:	f024 fcc0 	bl	802534c <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80009cc:	4bab      	ldr	r3, [pc, #684]	@ (8000c7c <main+0x2dc>)
  HAL_GPIO_WritePin(GPIOE, LED_GREEN_Pin|LED_RED_Pin, GPIO_PIN_RESET);
 80009ce:	2103      	movs	r1, #3
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80009d0:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
  HAL_GPIO_WritePin(GPIOE, LED_GREEN_Pin|LED_RED_Pin, GPIO_PIN_RESET);
 80009d4:	48aa      	ldr	r0, [pc, #680]	@ (8000c80 <main+0x2e0>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80009d6:	f042 0210 	orr.w	r2, r2, #16
 80009da:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 80009de:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80009e2:	2501      	movs	r5, #1
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80009e4:	f002 0210 	and.w	r2, r2, #16
 80009e8:	9203      	str	r2, [sp, #12]
 80009ea:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80009ec:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80009f0:	2702      	movs	r7, #2
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80009f2:	f042 0208 	orr.w	r2, r2, #8
 80009f6:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 80009fa:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
  GPIO_InitStruct.Pin = USER_BUTTON_Pin;
 80009fe:	f44f 5600 	mov.w	r6, #8192	@ 0x2000
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000a02:	f002 0208 	and.w	r2, r2, #8
 8000a06:	9204      	str	r2, [sp, #16]
 8000a08:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000a0a:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000a0e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8000a12:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000a16:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000a1a:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 8000a1e:	9205      	str	r2, [sp, #20]
 8000a20:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8000a22:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000a26:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8000a2a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000a2e:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000a32:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8000a36:	9206      	str	r2, [sp, #24]
 8000a38:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8000a3a:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000a3e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8000a42:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000a46:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000a4a:	f402 7200 	and.w	r2, r2, #512	@ 0x200
 8000a4e:	9207      	str	r2, [sp, #28]
 8000a50:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000a52:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000a56:	f042 0204 	orr.w	r2, r2, #4
 8000a5a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000a5e:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000a62:	f002 0204 	and.w	r2, r2, #4
 8000a66:	9208      	str	r2, [sp, #32]
 8000a68:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a6a:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000a6e:	f042 0220 	orr.w	r2, r2, #32
 8000a72:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000a76:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000a7a:	f002 0220 	and.w	r2, r2, #32
 8000a7e:	9209      	str	r2, [sp, #36]	@ 0x24
 8000a80:	9a09      	ldr	r2, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000a82:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000a86:	f042 0201 	orr.w	r2, r2, #1
 8000a8a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000a8e:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
  HAL_GPIO_WritePin(GPIOE, LED_GREEN_Pin|LED_RED_Pin, GPIO_PIN_RESET);
 8000a92:	4622      	mov	r2, r4
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000a94:	f003 0301 	and.w	r3, r3, #1
 8000a98:	930a      	str	r3, [sp, #40]	@ 0x28
 8000a9a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  HAL_GPIO_WritePin(GPIOE, LED_GREEN_Pin|LED_RED_Pin, GPIO_PIN_RESET);
 8000a9c:	f004 ff9c 	bl	80059d8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_SET);
 8000aa0:	2201      	movs	r2, #1
 8000aa2:	2120      	movs	r1, #32
 8000aa4:	4877      	ldr	r0, [pc, #476]	@ (8000c84 <main+0x2e4>)
 8000aa6:	f004 ff97 	bl	80059d8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DSI_PWR_ON_GPIO_Port, DSI_PWR_ON_Pin, GPIO_PIN_RESET);
 8000aaa:	4622      	mov	r2, r4
 8000aac:	2120      	movs	r1, #32
 8000aae:	4876      	ldr	r0, [pc, #472]	@ (8000c88 <main+0x2e8>)
 8000ab0:	f004 ff92 	bl	80059d8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, VSYNC_FREQ_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 8000ab4:	4622      	mov	r2, r4
 8000ab6:	2103      	movs	r1, #3
 8000ab8:	4872      	ldr	r0, [pc, #456]	@ (8000c84 <main+0x2e4>)
 8000aba:	f004 ff8d 	bl	80059d8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOF, MCU_ACTIVE_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000abe:	4622      	mov	r2, r4
 8000ac0:	f44f 41a0 	mov.w	r1, #20480	@ 0x5000
 8000ac4:	4871      	ldr	r0, [pc, #452]	@ (8000c8c <main+0x2ec>)
 8000ac6:	f004 ff87 	bl	80059d8 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000aca:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000acc:	486c      	ldr	r0, [pc, #432]	@ (8000c80 <main+0x2e0>)
 8000ace:	a919      	add	r1, sp, #100	@ 0x64
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000ad0:	e9cd 3519 	strd	r3, r5, [sp, #100]	@ 0x64
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000ad4:	e9cd 431b 	strd	r4, r3, [sp, #108]	@ 0x6c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000ad8:	f004 fde8 	bl	80056ac <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_RESET_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin;
 8000adc:	2323      	movs	r3, #35	@ 0x23
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000ade:	4869      	ldr	r0, [pc, #420]	@ (8000c84 <main+0x2e4>)
 8000ae0:	a919      	add	r1, sp, #100	@ 0x64
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000ae2:	e9cd 3519 	strd	r3, r5, [sp, #100]	@ 0x64
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ae6:	941b      	str	r4, [sp, #108]	@ 0x6c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000ae8:	971c      	str	r7, [sp, #112]	@ 0x70
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000aea:	f004 fddf 	bl	80056ac <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DSI_PWR_ON_Pin;
 8000aee:	2320      	movs	r3, #32
  HAL_GPIO_Init(DSI_PWR_ON_GPIO_Port, &GPIO_InitStruct);
 8000af0:	4865      	ldr	r0, [pc, #404]	@ (8000c88 <main+0x2e8>)
 8000af2:	a919      	add	r1, sp, #100	@ 0x64
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000af4:	e9cd 3519 	strd	r3, r5, [sp, #100]	@ 0x64
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000af8:	e9cd 441b 	strd	r4, r4, [sp, #108]	@ 0x6c
  HAL_GPIO_Init(DSI_PWR_ON_GPIO_Port, &GPIO_InitStruct);
 8000afc:	f004 fdd6 	bl	80056ac <HAL_GPIO_Init>
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8000b00:	4863      	ldr	r0, [pc, #396]	@ (8000c90 <main+0x2f0>)
 8000b02:	a919      	add	r1, sp, #100	@ 0x64
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000b04:	e9cd 6419 	strd	r6, r4, [sp, #100]	@ 0x64
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b08:	941b      	str	r4, [sp, #108]	@ 0x6c
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8000b0a:	f004 fdcf 	bl	80056ac <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8000b0e:	f44f 7c80 	mov.w	ip, #256	@ 0x100
 8000b12:	4b60      	ldr	r3, [pc, #384]	@ (8000c94 <main+0x2f4>)
  HAL_GPIO_Init(DSI_TOUCH_INT_GPIO_Port, &GPIO_InitStruct);
 8000b14:	485a      	ldr	r0, [pc, #360]	@ (8000c80 <main+0x2e0>)
 8000b16:	a919      	add	r1, sp, #100	@ 0x64
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8000b18:	e9cd c319 	strd	ip, r3, [sp, #100]	@ 0x64
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000b1c:	951b      	str	r5, [sp, #108]	@ 0x6c
  HAL_GPIO_Init(DSI_TOUCH_INT_GPIO_Port, &GPIO_InitStruct);
 8000b1e:	f004 fdc5 	bl	80056ac <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin|FRAME_RATE_Pin;
 8000b22:	f44f 43a0 	mov.w	r3, #20480	@ 0x5000
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000b26:	4859      	ldr	r0, [pc, #356]	@ (8000c8c <main+0x2ec>)
 8000b28:	a919      	add	r1, sp, #100	@ 0x64
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000b2a:	e9cd 3519 	strd	r3, r5, [sp, #100]	@ 0x64
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000b2e:	e9cd 471b 	strd	r4, r7, [sp, #108]	@ 0x6c
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000b32:	f004 fdbb 	bl	80056ac <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI8_IRQn, 10, 0);
 8000b36:	4622      	mov	r2, r4
 8000b38:	210a      	movs	r1, #10
 8000b3a:	2013      	movs	r0, #19
 8000b3c:	f003 fc84 	bl	8004448 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI8_IRQn);
 8000b40:	2013      	movs	r0, #19
 8000b42:	f003 fcb1 	bl	80044a8 <HAL_NVIC_EnableIRQ>
  if (HAL_ICACHE_ConfigAssociativityMode(ICACHE_1WAY) != HAL_OK)
 8000b46:	4620      	mov	r0, r4
 8000b48:	f005 fc48 	bl	80063dc <HAL_ICACHE_ConfigAssociativityMode>
 8000b4c:	b108      	cbz	r0, 8000b52 <main+0x1b2>
 8000b4e:	b672      	cpsid	i
  while (1)
 8000b50:	e7fe      	b.n	8000b50 <main+0x1b0>
  if (HAL_ICACHE_Enable() != HAL_OK)
 8000b52:	f005 fc53 	bl	80063fc <HAL_ICACHE_Enable>
 8000b56:	4603      	mov	r3, r0
 8000b58:	b108      	cbz	r0, 8000b5e <main+0x1be>
 8000b5a:	b672      	cpsid	i
  while (1)
 8000b5c:	e7fe      	b.n	8000b5c <main+0x1bc>
  hcrc.Instance = CRC;
 8000b5e:	484e      	ldr	r0, [pc, #312]	@ (8000c98 <main+0x2f8>)
 8000b60:	4a4e      	ldr	r2, [pc, #312]	@ (8000c9c <main+0x2fc>)
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 8000b62:	6205      	str	r5, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8000b64:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hcrc.Instance = CRC;
 8000b68:	6002      	str	r2, [r0, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 8000b6a:	8083      	strh	r3, [r0, #4]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000b6c:	f003 fcaa 	bl	80044c4 <HAL_CRC_Init>
 8000b70:	4605      	mov	r5, r0
 8000b72:	b108      	cbz	r0, 8000b78 <main+0x1d8>
 8000b74:	b672      	cpsid	i
  while (1)
 8000b76:	e7fe      	b.n	8000b76 <main+0x1d6>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000b78:	4601      	mov	r1, r0
 8000b7a:	2210      	movs	r2, #16
 8000b7c:	a80e      	add	r0, sp, #56	@ 0x38
 8000b7e:	f024 fbe5 	bl	802534c <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000b82:	221c      	movs	r2, #28
 8000b84:	4629      	mov	r1, r5
 8000b86:	a812      	add	r0, sp, #72	@ 0x48
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000b88:	e9cd 550b 	strd	r5, r5, [sp, #44]	@ 0x2c
 8000b8c:	950d      	str	r5, [sp, #52]	@ 0x34
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000b8e:	f024 fbdd 	bl	802534c <memset>
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8000b92:	2234      	movs	r2, #52	@ 0x34
 8000b94:	4629      	mov	r1, r5
 8000b96:	a819      	add	r0, sp, #100	@ 0x64
 8000b98:	f024 fbd8 	bl	802534c <memset>
  htim8.Init.Prescaler = 18;
 8000b9c:	2312      	movs	r3, #18
  htim8.Instance = TIM8;
 8000b9e:	4c40      	ldr	r4, [pc, #256]	@ (8000ca0 <main+0x300>)
  htim8.Init.Prescaler = 18;
 8000ba0:	4f40      	ldr	r7, [pc, #256]	@ (8000ca4 <main+0x304>)
  if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 8000ba2:	4620      	mov	r0, r4
  htim8.Init.Prescaler = 18;
 8000ba4:	e9c4 7300 	strd	r7, r3, [r4]
  htim8.Init.Period = 139;
 8000ba8:	238b      	movs	r3, #139	@ 0x8b
  htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000baa:	e9c4 5505 	strd	r5, r5, [r4, #20]
  htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000bae:	e9c4 3503 	strd	r3, r5, [r4, #12]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000bb2:	60a5      	str	r5, [r4, #8]
  if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 8000bb4:	f009 fa5a 	bl	800a06c <HAL_TIM_Base_Init>
 8000bb8:	b108      	cbz	r0, 8000bbe <main+0x21e>
 8000bba:	b672      	cpsid	i
  while (1)
 8000bbc:	e7fe      	b.n	8000bbc <main+0x21c>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000bbe:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 8000bc2:	4620      	mov	r0, r4
 8000bc4:	a90e      	add	r1, sp, #56	@ 0x38
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000bc6:	930e      	str	r3, [sp, #56]	@ 0x38
  if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 8000bc8:	f009 fb9a 	bl	800a300 <HAL_TIM_ConfigClockSource>
 8000bcc:	b108      	cbz	r0, 8000bd2 <main+0x232>
 8000bce:	b672      	cpsid	i
  while (1)
 8000bd0:	e7fe      	b.n	8000bd0 <main+0x230>
  if (HAL_TIM_PWM_Init(&htim8) != HAL_OK)
 8000bd2:	4620      	mov	r0, r4
 8000bd4:	f009 fa7a 	bl	800a0cc <HAL_TIM_PWM_Init>
 8000bd8:	b108      	cbz	r0, 8000bde <main+0x23e>
 8000bda:	b672      	cpsid	i
  while (1)
 8000bdc:	e7fe      	b.n	8000bdc <main+0x23c>
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 8000bde:	e9cd 000b 	strd	r0, r0, [sp, #44]	@ 0x2c
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000be2:	900d      	str	r0, [sp, #52]	@ 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 8000be4:	a90b      	add	r1, sp, #44	@ 0x2c
 8000be6:	4620      	mov	r0, r4
 8000be8:	f009 fd18 	bl	800a61c <HAL_TIMEx_MasterConfigSynchronization>
 8000bec:	b108      	cbz	r0, 8000bf2 <main+0x252>
 8000bee:	b672      	cpsid	i
  while (1)
 8000bf0:	e7fe      	b.n	8000bf0 <main+0x250>
  sConfigOC.Pulse = 100;
 8000bf2:	2560      	movs	r5, #96	@ 0x60
 8000bf4:	2364      	movs	r3, #100	@ 0x64
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8000bf6:	e9cd 0014 	strd	r0, r0, [sp, #80]	@ 0x50
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8000bfa:	e9cd 0016 	strd	r0, r0, [sp, #88]	@ 0x58
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8000bfe:	9018      	str	r0, [sp, #96]	@ 0x60
  if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8000c00:	2204      	movs	r2, #4
 8000c02:	4620      	mov	r0, r4
 8000c04:	a912      	add	r1, sp, #72	@ 0x48
  sConfigOC.Pulse = 100;
 8000c06:	e9cd 5312 	strd	r5, r3, [sp, #72]	@ 0x48
  if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8000c0a:	f009 faf3 	bl	800a1f4 <HAL_TIM_PWM_ConfigChannel>
 8000c0e:	b108      	cbz	r0, 8000c14 <main+0x274>
 8000c10:	b672      	cpsid	i
  while (1)
 8000c12:	e7fe      	b.n	8000c12 <main+0x272>
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 8000c14:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8000c18:	e9cd 0019 	strd	r0, r0, [sp, #100]	@ 0x64
  sBreakDeadTimeConfig.DeadTime = 0;
 8000c1c:	e9cd 001b 	strd	r0, r0, [sp, #108]	@ 0x6c
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8000c20:	e9cd 061d 	strd	r0, r6, [sp, #116]	@ 0x74
  sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 8000c24:	e9cd 001f 	strd	r0, r0, [sp, #124]	@ 0x7c
  sBreakDeadTimeConfig.Break2Filter = 0;
 8000c28:	e9cd 3022 	strd	r3, r0, [sp, #136]	@ 0x88
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8000c2c:	e9cd 0024 	strd	r0, r0, [sp, #144]	@ 0x90
  sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 8000c30:	9021      	str	r0, [sp, #132]	@ 0x84
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 8000c32:	a919      	add	r1, sp, #100	@ 0x64
 8000c34:	4620      	mov	r0, r4
 8000c36:	f009 fd5f 	bl	800a6f8 <HAL_TIMEx_ConfigBreakDeadTime>
 8000c3a:	b108      	cbz	r0, 8000c40 <main+0x2a0>
 8000c3c:	b672      	cpsid	i
  while (1)
 8000c3e:	e7fe      	b.n	8000c3e <main+0x29e>
  HAL_TIM_MspPostInit(&htim8);
 8000c40:	4817      	ldr	r0, [pc, #92]	@ (8000ca0 <main+0x300>)
 8000c42:	f000 fb8b 	bl	800135c <HAL_TIM_MspPostInit>
  hdma2d.Init.Mode = DMA2D_R2M;
 8000c46:	f44f 3340 	mov.w	r3, #196608	@ 0x30000
  hdma2d.Instance = DMA2D;
 8000c4a:	4817      	ldr	r0, [pc, #92]	@ (8000ca8 <main+0x308>)
  hdma2d.Init.Mode = DMA2D_R2M;
 8000c4c:	4917      	ldr	r1, [pc, #92]	@ (8000cac <main+0x30c>)
  hdma2d.Init.OutputOffset = 0;
 8000c4e:	2701      	movs	r7, #1
  hdma2d.Init.Mode = DMA2D_R2M;
 8000c50:	e9c0 1300 	strd	r1, r3, [r0]
  hdma2d.Init.OutputOffset = 0;
 8000c54:	2300      	movs	r3, #0
 8000c56:	e9c0 7302 	strd	r7, r3, [r0, #8]
  hdma2d.Init.LineOffsetMode = DMA2D_LOM_PIXELS;
 8000c5a:	e9c0 3306 	strd	r3, r3, [r0, #24]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8000c5e:	f003 ff0f 	bl	8004a80 <HAL_DMA2D_Init>
 8000c62:	b108      	cbz	r0, 8000c68 <main+0x2c8>
 8000c64:	b672      	cpsid	i
  while (1)
 8000c66:	e7fe      	b.n	8000c66 <main+0x2c6>
  hgpu2d.Instance = GPU2D;
 8000c68:	4811      	ldr	r0, [pc, #68]	@ (8000cb0 <main+0x310>)
 8000c6a:	4b12      	ldr	r3, [pc, #72]	@ (8000cb4 <main+0x314>)
 8000c6c:	6003      	str	r3, [r0, #0]
  if (HAL_GPU2D_Init(&hgpu2d) != HAL_OK)
 8000c6e:	f004 fefd 	bl	8005a6c <HAL_GPU2D_Init>
 8000c72:	4605      	mov	r5, r0
 8000c74:	b300      	cbz	r0, 8000cb8 <main+0x318>
 8000c76:	b672      	cpsid	i
  while (1)
 8000c78:	e7fe      	b.n	8000c78 <main+0x2d8>
 8000c7a:	bf00      	nop
 8000c7c:	46020c00 	.word	0x46020c00
 8000c80:	42021000 	.word	0x42021000
 8000c84:	42020c00 	.word	0x42020c00
 8000c88:	42022000 	.word	0x42022000
 8000c8c:	42021400 	.word	0x42021400
 8000c90:	42020800 	.word	0x42020800
 8000c94:	10210000 	.word	0x10210000
 8000c98:	2000054c 	.word	0x2000054c
 8000c9c:	40023000 	.word	0x40023000
 8000ca0:	20000314 	.word	0x20000314
 8000ca4:	40013400 	.word	0x40013400
 8000ca8:	20000494 	.word	0x20000494
 8000cac:	4002b000 	.word	0x4002b000
 8000cb0:	20000464 	.word	0x20000464
 8000cb4:	4002f000 	.word	0x4002f000
  hospi1.Init.FifoThreshold = 4;
 8000cb8:	f04f 0804 	mov.w	r8, #4
  MX_DSIHOST_DSI_Init();
 8000cbc:	f7ff fb20 	bl	8000300 <MX_DSIHOST_DSI_Init>
  MX_LTDC_Init();
 8000cc0:	f7ff fbe6 	bl	8000490 <MX_LTDC_Init>
  OSPIM_CfgTypeDef sOspiManagerCfg = {0};
 8000cc4:	2218      	movs	r2, #24
 8000cc6:	4629      	mov	r1, r5
 8000cc8:	a819      	add	r0, sp, #100	@ 0x64
 8000cca:	f024 fb3f 	bl	802534c <memset>
  hospi1.Instance = OCTOSPI1;
 8000cce:	4ca3      	ldr	r4, [pc, #652]	@ (8000f5c <main+0x5bc>)
  hospi1.Init.FifoThreshold = 4;
 8000cd0:	4ba3      	ldr	r3, [pc, #652]	@ (8000f60 <main+0x5c0>)
  hospi1.Init.DeviceSize = 27;
 8000cd2:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
  hospi1.Init.FifoThreshold = 4;
 8000cd6:	e9c4 3800 	strd	r3, r8, [r4]
  hospi1.Init.DeviceSize = 27;
 8000cda:	231b      	movs	r3, #27
  hospi1.Init.ChipSelectHighTime = 2;
 8000cdc:	f04f 0902 	mov.w	r9, #2
  hospi1.Init.DeviceSize = 27;
 8000ce0:	e9c4 2303 	strd	r2, r3, [r4, #12]
  hospi1.Init.DelayHoldQuarterCycle = HAL_OSPI_DHQC_ENABLE;
 8000ce4:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
  if (HAL_OSPI_Init(&hospi1) != HAL_OK)
 8000ce8:	4620      	mov	r0, r4
  HAL_OSPI_DLYB_CfgTypeDef HAL_OSPI_DLYB_Cfg_Struct = {0};
 8000cea:	e9cd 550e 	strd	r5, r5, [sp, #56]	@ 0x38
  hospi1.Init.FreeRunningClock = HAL_OSPI_FREERUNCLK_DISABLE;
 8000cee:	e9c4 9505 	strd	r9, r5, [r4, #20]
  hospi1.Init.WrapSize = HAL_OSPI_WRAP_NOT_SUPPORTED;
 8000cf2:	e9c4 5507 	strd	r5, r5, [r4, #28]
  hospi1.Init.SampleShifting = HAL_OSPI_SAMPLE_SHIFTING_NONE;
 8000cf6:	e9c4 7509 	strd	r7, r5, [r4, #36]	@ 0x24
  hospi1.Init.ChipSelectBoundary = 0;
 8000cfa:	e9c4 350b 	strd	r3, r5, [r4, #44]	@ 0x2c
  hospi1.Init.MaxTran = 0;
 8000cfe:	e9c4 550d 	strd	r5, r5, [r4, #52]	@ 0x34
  hospi1.Init.DualQuad = HAL_OSPI_DUALQUAD_DISABLE;
 8000d02:	60a5      	str	r5, [r4, #8]
  hospi1.Init.Refresh = 0;
 8000d04:	63e5      	str	r5, [r4, #60]	@ 0x3c
  if (HAL_OSPI_Init(&hospi1) != HAL_OK)
 8000d06:	f005 fd6b 	bl	80067e0 <HAL_OSPI_Init>
 8000d0a:	b108      	cbz	r0, 8000d10 <main+0x370>
 8000d0c:	b672      	cpsid	i
  while (1)
 8000d0e:	e7fe      	b.n	8000d0e <main+0x36e>
  sOspiManagerCfg.IOLowPort = HAL_OSPIM_IOPORT_1_LOW;
 8000d10:	f04f 1301 	mov.w	r3, #65537	@ 0x10001
  if (HAL_OSPIM_Config(&hospi1, &sOspiManagerCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000d14:	f241 3288 	movw	r2, #5000	@ 0x1388
  sOspiManagerCfg.IOLowPort = HAL_OSPIM_IOPORT_1_LOW;
 8000d18:	931c      	str	r3, [sp, #112]	@ 0x70
  if (HAL_OSPIM_Config(&hospi1, &sOspiManagerCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000d1a:	4620      	mov	r0, r4
  sOspiManagerCfg.IOHighPort = HAL_OSPIM_IOPORT_1_HIGH;
 8000d1c:	f503 037f 	add.w	r3, r3, #16711680	@ 0xff0000
  if (HAL_OSPIM_Config(&hospi1, &sOspiManagerCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000d20:	a919      	add	r1, sp, #100	@ 0x64
  sOspiManagerCfg.DQSPort = 1;
 8000d22:	e9cd 7719 	strd	r7, r7, [sp, #100]	@ 0x64
  sOspiManagerCfg.NCSPort = 1;
 8000d26:	971b      	str	r7, [sp, #108]	@ 0x6c
  sOspiManagerCfg.IOHighPort = HAL_OSPIM_IOPORT_1_HIGH;
 8000d28:	931d      	str	r3, [sp, #116]	@ 0x74
  if (HAL_OSPIM_Config(&hospi1, &sOspiManagerCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000d2a:	f005 fe0d 	bl	8006948 <HAL_OSPIM_Config>
 8000d2e:	b108      	cbz	r0, 8000d34 <main+0x394>
 8000d30:	b672      	cpsid	i
  while (1)
 8000d32:	e7fe      	b.n	8000d32 <main+0x392>
  HAL_OSPI_DLYB_Cfg_Struct.PhaseSel = 0;
 8000d34:	e9cd 000e 	strd	r0, r0, [sp, #56]	@ 0x38
  if (HAL_OSPI_DLYB_SetConfig(&hospi1, &HAL_OSPI_DLYB_Cfg_Struct) != HAL_OK)
 8000d38:	a90e      	add	r1, sp, #56	@ 0x38
 8000d3a:	4620      	mov	r0, r4
 8000d3c:	f006 f87e 	bl	8006e3c <HAL_OSPI_DLYB_SetConfig>
 8000d40:	4606      	mov	r6, r0
 8000d42:	b108      	cbz	r0, 8000d48 <main+0x3a8>
 8000d44:	b672      	cpsid	i
  while (1)
 8000d46:	e7fe      	b.n	8000d46 <main+0x3a6>
  HAL_GPIO_EnableHighSPeedLowVoltage(OSPI_CLK_GPIO_Port, OSPI_CLK_Pin);
 8000d48:	f44f 6180 	mov.w	r1, #1024	@ 0x400
  HAL_XSPI_DLYB_CfgTypeDef HAL_XSPI_DLYB_Cfg_Struct = {0};
 8000d4c:	e9cd 0012 	strd	r0, r0, [sp, #72]	@ 0x48
  HAL_GPIO_EnableHighSPeedLowVoltage(OSPI_CLK_GPIO_Port, OSPI_CLK_Pin);
 8000d50:	4884      	ldr	r0, [pc, #528]	@ (8000f64 <main+0x5c4>)
 8000d52:	f004 fe4f 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(OSPI_CS_GPIO_Port, OSPI_CS_Pin);
 8000d56:	4641      	mov	r1, r8
 8000d58:	4883      	ldr	r0, [pc, #524]	@ (8000f68 <main+0x5c8>)
 8000d5a:	f004 fe4b 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(OSPI_DQS_GPIO_Port, OSPI_DQS_Pin);
 8000d5e:	4649      	mov	r1, r9
 8000d60:	4881      	ldr	r0, [pc, #516]	@ (8000f68 <main+0x5c8>)
 8000d62:	f004 fe47 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(OSPI_D0_GPIO_Port, OSPI_D0_Pin);
 8000d66:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000d6a:	487e      	ldr	r0, [pc, #504]	@ (8000f64 <main+0x5c4>)
 8000d6c:	f004 fe42 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(OSPI_D1_GPIO_Port, OSPI_D1_Pin);
 8000d70:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000d74:	487b      	ldr	r0, [pc, #492]	@ (8000f64 <main+0x5c4>)
 8000d76:	f004 fe3d 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(OSPI_D2_GPIO_Port, OSPI_D2_Pin);
 8000d7a:	2180      	movs	r1, #128	@ 0x80
 8000d7c:	4879      	ldr	r0, [pc, #484]	@ (8000f64 <main+0x5c4>)
 8000d7e:	f004 fe39 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(OSPI_D3_GPIO_Port, OSPI_D3_Pin);
 8000d82:	2140      	movs	r1, #64	@ 0x40
 8000d84:	4877      	ldr	r0, [pc, #476]	@ (8000f64 <main+0x5c4>)
 8000d86:	f004 fe35 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(OSPI_D4_GPIO_Port, OSPI_D4_Pin);
 8000d8a:	4649      	mov	r1, r9
 8000d8c:	4877      	ldr	r0, [pc, #476]	@ (8000f6c <main+0x5cc>)
 8000d8e:	f004 fe31 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(OSPI_D5_GPIO_Port, OSPI_D5_Pin);
 8000d92:	4641      	mov	r1, r8
 8000d94:	4875      	ldr	r0, [pc, #468]	@ (8000f6c <main+0x5cc>)
 8000d96:	f004 fe2d 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(OSPI_D6_GPIO_Port, OSPI_D6_Pin);
 8000d9a:	2108      	movs	r1, #8
 8000d9c:	4873      	ldr	r0, [pc, #460]	@ (8000f6c <main+0x5cc>)
 8000d9e:	f004 fe29 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(OSPI_D7_GPIO_Port, OSPI_D7_Pin);
 8000da2:	4872      	ldr	r0, [pc, #456]	@ (8000f6c <main+0x5cc>)
 8000da4:	4639      	mov	r1, r7
 8000da6:	f004 fe25 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
   xospi1.Instance = hospi1.Instance;
 8000daa:	4d71      	ldr	r5, [pc, #452]	@ (8000f70 <main+0x5d0>)
 8000dac:	6823      	ldr	r3, [r4, #0]
   if (HAL_XSPI_Init(&xospi1) != HAL_OK)
 8000dae:	4628      	mov	r0, r5
   xospi1.Instance = hospi1.Instance;
 8000db0:	602b      	str	r3, [r5, #0]
   xospi1.Init.FifoThresholdByte = hospi1.Init.FifoThreshold;
 8000db2:	6863      	ldr	r3, [r4, #4]
   xospi1.Init.MemoryMode = HAL_XSPI_SINGLE_MEM;
 8000db4:	e9c5 3601 	strd	r3, r6, [r5, #4]
   xospi1.Init.MemoryType = hospi1.Init.MemoryType;
 8000db8:	68e3      	ldr	r3, [r4, #12]
 8000dba:	60eb      	str	r3, [r5, #12]
   xospi1.Init.MemorySize = hospi1.Init.DeviceSize - 1;
 8000dbc:	6923      	ldr	r3, [r4, #16]
 8000dbe:	3b01      	subs	r3, #1
 8000dc0:	612b      	str	r3, [r5, #16]
   xospi1.Init.ChipSelectHighTimeCycle = hospi1.Init.ChipSelectHighTime;
 8000dc2:	6963      	ldr	r3, [r4, #20]
 8000dc4:	616b      	str	r3, [r5, #20]
   xospi1.Init.FreeRunningClock = hospi1.Init.FreeRunningClock;
 8000dc6:	69a3      	ldr	r3, [r4, #24]
 8000dc8:	61ab      	str	r3, [r5, #24]
   xospi1.Init.ClockMode = hospi1.Init.ClockMode;
 8000dca:	69e3      	ldr	r3, [r4, #28]
 8000dcc:	61eb      	str	r3, [r5, #28]
   xospi1.Init.WrapSize = hospi1.Init.WrapSize;
 8000dce:	6a23      	ldr	r3, [r4, #32]
 8000dd0:	622b      	str	r3, [r5, #32]
   xospi1.Init.ClockPrescaler = hospi1.Init.ClockPrescaler - 1;
 8000dd2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8000dd4:	3b01      	subs	r3, #1
 8000dd6:	626b      	str	r3, [r5, #36]	@ 0x24
   xospi1.Init.SampleShifting = hospi1.Init.SampleShifting;
 8000dd8:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8000dda:	62ab      	str	r3, [r5, #40]	@ 0x28
   xospi1.Init.DelayHoldQuarterCycle = hospi1.Init.DelayHoldQuarterCycle;
 8000ddc:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8000dde:	62eb      	str	r3, [r5, #44]	@ 0x2c
   xospi1.Init.ChipSelectBoundary = hospi1.Init.ChipSelectBoundary;
 8000de0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8000de2:	632b      	str	r3, [r5, #48]	@ 0x30
   xospi1.Init.DelayBlockBypass = hospi1.Init.DelayBlockBypass;
 8000de4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000de6:	636b      	str	r3, [r5, #52]	@ 0x34
   xospi1.Init.MaxTran = hospi1.Init.MaxTran;
 8000de8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8000dea:	63ab      	str	r3, [r5, #56]	@ 0x38
   xospi1.Init.Refresh = hospi1.Init.Refresh;
 8000dec:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8000dee:	63eb      	str	r3, [r5, #60]	@ 0x3c
   if (HAL_XSPI_Init(&xospi1) != HAL_OK)
 8000df0:	f009 fe46 	bl	800aa80 <HAL_XSPI_Init>
 8000df4:	b108      	cbz	r0, 8000dfa <main+0x45a>
 8000df6:	b672      	cpsid	i
  while (1)
 8000df8:	e7fe      	b.n	8000df8 <main+0x458>
  if (HAL_XSPI_DLYB_GetClockPeriod(&xospi1, &HAL_XSPI_DLYB_Cfg_Struct) != HAL_OK)
 8000dfa:	4628      	mov	r0, r5
 8000dfc:	a912      	add	r1, sp, #72	@ 0x48
 8000dfe:	f00a f937 	bl	800b070 <HAL_XSPI_DLYB_GetClockPeriod>
 8000e02:	b108      	cbz	r0, 8000e08 <main+0x468>
 8000e04:	b672      	cpsid	i
  while (1)
 8000e06:	e7fe      	b.n	8000e06 <main+0x466>
  HAL_XSPI_DLYB_Cfg_Struct.PhaseSel /= 2;
 8000e08:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
  if (HAL_XSPI_DLYB_SetConfig(&xospi1, &HAL_XSPI_DLYB_Cfg_Struct) != HAL_OK)
 8000e0a:	4628      	mov	r0, r5
  HAL_XSPI_DLYB_Cfg_Struct.PhaseSel /= 2;
 8000e0c:	085b      	lsrs	r3, r3, #1
  if (HAL_XSPI_DLYB_SetConfig(&xospi1, &HAL_XSPI_DLYB_Cfg_Struct) != HAL_OK)
 8000e0e:	a912      	add	r1, sp, #72	@ 0x48
  HAL_XSPI_DLYB_Cfg_Struct.PhaseSel /= 2;
 8000e10:	9313      	str	r3, [sp, #76]	@ 0x4c
  if (HAL_XSPI_DLYB_SetConfig(&xospi1, &HAL_XSPI_DLYB_Cfg_Struct) != HAL_OK)
 8000e12:	f00a f8fb 	bl	800b00c <HAL_XSPI_DLYB_SetConfig>
 8000e16:	4602      	mov	r2, r0
 8000e18:	b108      	cbz	r0, 8000e1e <main+0x47e>
 8000e1a:	b672      	cpsid	i
  while (1)
 8000e1c:	e7fe      	b.n	8000e1c <main+0x47c>
  status = MX25UM51245G_ResetEnable(&xospi1, MX25UM51245G_SPI_MODE, MX25UM51245G_STR_TRANSFER);
 8000e1e:	4601      	mov	r1, r0
 8000e20:	4628      	mov	r0, r5
 8000e22:	f002 fa30 	bl	8003286 <MX25UM51245G_ResetEnable>
  if (status != BSP_ERROR_NONE)
 8000e26:	4602      	mov	r2, r0
 8000e28:	b108      	cbz	r0, 8000e2e <main+0x48e>
 8000e2a:	b672      	cpsid	i
  while (1)
 8000e2c:	e7fe      	b.n	8000e2c <main+0x48c>
  status = MX25UM51245G_ResetMemory(&xospi1, MX25UM51245G_SPI_MODE, MX25UM51245G_STR_TRANSFER);
 8000e2e:	4601      	mov	r1, r0
 8000e30:	4628      	mov	r0, r5
 8000e32:	f002 fa59 	bl	80032e8 <MX25UM51245G_ResetMemory>
  if (status != BSP_ERROR_NONE)
 8000e36:	b108      	cbz	r0, 8000e3c <main+0x49c>
 8000e38:	b672      	cpsid	i
  while (1)
 8000e3a:	e7fe      	b.n	8000e3a <main+0x49a>
  HAL_Delay(MX25UM51245G_RESET_MAX_TIME);
 8000e3c:	2064      	movs	r0, #100	@ 0x64
 8000e3e:	f003 fadf 	bl	8004400 <HAL_Delay>
  status = MX25UM51245G_AutoPollingMemReady(&xospi1, MX25UM51245G_SPI_MODE, MX25UM51245G_STR_TRANSFER);
 8000e42:	2200      	movs	r2, #0
 8000e44:	484a      	ldr	r0, [pc, #296]	@ (8000f70 <main+0x5d0>)
 8000e46:	4611      	mov	r1, r2
 8000e48:	f002 f898 	bl	8002f7c <MX25UM51245G_AutoPollingMemReady>
  if (status != BSP_ERROR_NONE)
 8000e4c:	4604      	mov	r4, r0
 8000e4e:	b108      	cbz	r0, 8000e54 <main+0x4b4>
 8000e50:	b672      	cpsid	i
  while (1)
 8000e52:	e7fe      	b.n	8000e52 <main+0x4b2>
  HAL_Delay(MX25UM51245G_WRITE_REG_MAX_TIME);
 8000e54:	2028      	movs	r0, #40	@ 0x28
 8000e56:	f003 fad3 	bl	8004400 <HAL_Delay>
  status = MX25UM51245G_WriteEnable(&xospi1, MX25UM51245G_SPI_MODE, MX25UM51245G_STR_TRANSFER);
 8000e5a:	4622      	mov	r2, r4
 8000e5c:	4621      	mov	r1, r4
 8000e5e:	4844      	ldr	r0, [pc, #272]	@ (8000f70 <main+0x5d0>)
 8000e60:	f002 f93f 	bl	80030e2 <MX25UM51245G_WriteEnable>
  if (status != BSP_ERROR_NONE)
 8000e64:	4602      	mov	r2, r0
 8000e66:	b108      	cbz	r0, 8000e6c <main+0x4cc>
 8000e68:	b672      	cpsid	i
  while (1)
 8000e6a:	e7fe      	b.n	8000e6a <main+0x4ca>
  status = MX25UM51245G_WriteCfg2Register(&xospi1, MX25UM51245G_SPI_MODE, MX25UM51245G_STR_TRANSFER, MX25UM51245G_CR2_REG3_ADDR, MX25UM51245G_CR2_DC_8_CYCLES);
 8000e6c:	2306      	movs	r3, #6
 8000e6e:	4601      	mov	r1, r0
 8000e70:	9300      	str	r3, [sp, #0]
 8000e72:	483f      	ldr	r0, [pc, #252]	@ (8000f70 <main+0x5d0>)
 8000e74:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8000e78:	f002 f9ad 	bl	80031d6 <MX25UM51245G_WriteCfg2Register>
  if (status != BSP_ERROR_NONE)
 8000e7c:	4602      	mov	r2, r0
 8000e7e:	b108      	cbz	r0, 8000e84 <main+0x4e4>
 8000e80:	b672      	cpsid	i
  while (1)
 8000e82:	e7fe      	b.n	8000e82 <main+0x4e2>
  status = MX25UM51245G_WriteEnable(&xospi1, MX25UM51245G_SPI_MODE, MX25UM51245G_STR_TRANSFER);
 8000e84:	4601      	mov	r1, r0
 8000e86:	483a      	ldr	r0, [pc, #232]	@ (8000f70 <main+0x5d0>)
 8000e88:	f002 f92b 	bl	80030e2 <MX25UM51245G_WriteEnable>
  if (status != BSP_ERROR_NONE)
 8000e8c:	4603      	mov	r3, r0
 8000e8e:	b108      	cbz	r0, 8000e94 <main+0x4f4>
 8000e90:	b672      	cpsid	i
  while (1)
 8000e92:	e7fe      	b.n	8000e92 <main+0x4f2>
  status = MX25UM51245G_WriteCfg2Register(&xospi1, MX25UM51245G_SPI_MODE, MX25UM51245G_STR_TRANSFER, MX25UM51245G_CR2_REG1_ADDR, MX25UM51245G_CR2_DOPI);
 8000e94:	2202      	movs	r2, #2
 8000e96:	4601      	mov	r1, r0
 8000e98:	9200      	str	r2, [sp, #0]
 8000e9a:	4602      	mov	r2, r0
 8000e9c:	4834      	ldr	r0, [pc, #208]	@ (8000f70 <main+0x5d0>)
 8000e9e:	f002 f99a 	bl	80031d6 <MX25UM51245G_WriteCfg2Register>
  if (status != BSP_ERROR_NONE)
 8000ea2:	b108      	cbz	r0, 8000ea8 <main+0x508>
 8000ea4:	b672      	cpsid	i
  while (1)
 8000ea6:	e7fe      	b.n	8000ea6 <main+0x506>
  HAL_Delay(MX25UM51245G_WRITE_REG_MAX_TIME);
 8000ea8:	2028      	movs	r0, #40	@ 0x28
 8000eaa:	f003 faa9 	bl	8004400 <HAL_Delay>
  status = MX25UM51245G_EnableDTRMemoryMappedMode(&xospi1, MX25UM51245G_OPI_MODE);
 8000eae:	2101      	movs	r1, #1
 8000eb0:	482f      	ldr	r0, [pc, #188]	@ (8000f70 <main+0x5d0>)
 8000eb2:	f002 f8c7 	bl	8003044 <MX25UM51245G_EnableDTRMemoryMappedMode>
  if (status != BSP_ERROR_NONE)
 8000eb6:	b108      	cbz	r0, 8000ebc <main+0x51c>
 8000eb8:	b672      	cpsid	i
  while (1)
 8000eba:	e7fe      	b.n	8000eba <main+0x51a>
  sHSPI_Init.LatencyType      = BSP_HSPI_RAM_FIXED_LATENCY;
 8000ebc:	4b2d      	ldr	r3, [pc, #180]	@ (8000f74 <main+0x5d4>)
  if (BSP_HSPI_RAM_Init(0, &sHSPI_Init) != BSP_ERROR_NONE)
 8000ebe:	a919      	add	r1, sp, #100	@ 0x64
  sHSPI_Init.LatencyType      = BSP_HSPI_RAM_FIXED_LATENCY;
 8000ec0:	9319      	str	r3, [sp, #100]	@ 0x64
  sHSPI_Init.BurstLength      = BSP_HSPI_RAM_BURST_16_BYTES;
 8000ec2:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 8000ec6:	f8ad 3068 	strh.w	r3, [sp, #104]	@ 0x68
  if (BSP_HSPI_RAM_Init(0, &sHSPI_Init) != BSP_ERROR_NONE)
 8000eca:	f002 fe99 	bl	8003c00 <BSP_HSPI_RAM_Init>
 8000ece:	b150      	cbz	r0, 8000ee6 <main+0x546>
    printf("\r\nHSPI RAM Initialization : Failed");
 8000ed0:	4829      	ldr	r0, [pc, #164]	@ (8000f78 <main+0x5d8>)
 8000ed2:	f024 f8f3 	bl	80250bc <iprintf>
    printf("\r\nHSPI RAM Test Aborted");
 8000ed6:	4829      	ldr	r0, [pc, #164]	@ (8000f7c <main+0x5dc>)
 8000ed8:	f024 f8f0 	bl	80250bc <iprintf>
    printf("\r\n");
 8000edc:	4828      	ldr	r0, [pc, #160]	@ (8000f80 <main+0x5e0>)
 8000ede:	f024 f955 	bl	802518c <puts>
 8000ee2:	b672      	cpsid	i
  while (1)
 8000ee4:	e7fe      	b.n	8000ee4 <main+0x544>
  if(BSP_HSPI_RAM_EnableMemoryMappedMode(0) != BSP_ERROR_NONE)
 8000ee6:	f002 fd8d 	bl	8003a04 <BSP_HSPI_RAM_EnableMemoryMappedMode>
 8000eea:	b150      	cbz	r0, 8000f02 <main+0x562>
    printf("\r\nHSPI RAM Mem-Mapped Cfg : Failed");
 8000eec:	4825      	ldr	r0, [pc, #148]	@ (8000f84 <main+0x5e4>)
 8000eee:	f024 f8e5 	bl	80250bc <iprintf>
    printf("\r\nHSPI RAM Test Aborted");
 8000ef2:	4822      	ldr	r0, [pc, #136]	@ (8000f7c <main+0x5dc>)
 8000ef4:	f024 f8e2 	bl	80250bc <iprintf>
    printf("\r\n");
 8000ef8:	4821      	ldr	r0, [pc, #132]	@ (8000f80 <main+0x5e0>)
 8000efa:	f024 f947 	bl	802518c <puts>
 8000efe:	b672      	cpsid	i
  while (1)
 8000f00:	e7fe      	b.n	8000f00 <main+0x560>
  hdcache1.Init.ReadBurstType = DCACHE_READ_BURST_INCR;
 8000f02:	f04f 4500 	mov.w	r5, #2147483648	@ 0x80000000
  hdcache1.Instance = DCACHE1;
 8000f06:	4c20      	ldr	r4, [pc, #128]	@ (8000f88 <main+0x5e8>)
  hdcache1.Init.ReadBurstType = DCACHE_READ_BURST_INCR;
 8000f08:	4b20      	ldr	r3, [pc, #128]	@ (8000f8c <main+0x5ec>)
  if (HAL_DCACHE_Init(&hdcache1) != HAL_OK)
 8000f0a:	4620      	mov	r0, r4
  hdcache1.Init.ReadBurstType = DCACHE_READ_BURST_INCR;
 8000f0c:	e9c4 3500 	strd	r3, r5, [r4]
  if (HAL_DCACHE_Init(&hdcache1) != HAL_OK)
 8000f10:	f003 fb50 	bl	80045b4 <HAL_DCACHE_Init>
 8000f14:	b108      	cbz	r0, 8000f1a <main+0x57a>
 8000f16:	b672      	cpsid	i
  while (1)
 8000f18:	e7fe      	b.n	8000f18 <main+0x578>
  HAL_DCACHE_Enable(&hdcache1);
 8000f1a:	4620      	mov	r0, r4
 8000f1c:	f003 fb38 	bl	8004590 <HAL_DCACHE_Enable>
  HAL_DCACHE_Invalidate(&hdcache1);
 8000f20:	4620      	mov	r0, r4
 8000f22:	f003 fb7d 	bl	8004620 <HAL_DCACHE_Invalidate>
  hdcache2.Instance = DCACHE2;
 8000f26:	481a      	ldr	r0, [pc, #104]	@ (8000f90 <main+0x5f0>)
 8000f28:	4b1a      	ldr	r3, [pc, #104]	@ (8000f94 <main+0x5f4>)
  hdcache2.Init.ReadBurstType = DCACHE_READ_BURST_INCR;
 8000f2a:	e9c0 3500 	strd	r3, r5, [r0]
  if (HAL_DCACHE_Init(&hdcache2) != HAL_OK)
 8000f2e:	f003 fb41 	bl	80045b4 <HAL_DCACHE_Init>
 8000f32:	b108      	cbz	r0, 8000f38 <main+0x598>
 8000f34:	b672      	cpsid	i
  while (1)
 8000f36:	e7fe      	b.n	8000f36 <main+0x596>
  HAL_DCACHE_Enable(&hdcache2);
 8000f38:	4815      	ldr	r0, [pc, #84]	@ (8000f90 <main+0x5f0>)
 8000f3a:	f003 fb29 	bl	8004590 <HAL_DCACHE_Enable>
  HAL_DCACHE_Invalidate(&hdcache2);
 8000f3e:	4814      	ldr	r0, [pc, #80]	@ (8000f90 <main+0x5f0>)
 8000f40:	f003 fb6e 	bl	8004620 <HAL_DCACHE_Invalidate>
  MX_TouchGFX_Init();
 8000f44:	f000 fb2c 	bl	80015a0 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8000f48:	f000 fb29 	bl	800159e <MX_TouchGFX_PreOSInit>
  osKernelInitialize();  /* Call init function for freertos objects (in freertos.c) */
 8000f4c:	f00a f984 	bl	800b258 <osKernelInitialize>
  MX_FREERTOS_Init();
 8000f50:	f7ff f9ba 	bl	80002c8 <MX_FREERTOS_Init>
  osKernelStart();
 8000f54:	f00a f996 	bl	800b284 <osKernelStart>
  while (1)
 8000f58:	e7fe      	b.n	8000f58 <main+0x5b8>
 8000f5a:	bf00      	nop
 8000f5c:	20000360 	.word	0x20000360
 8000f60:	420d1400 	.word	0x420d1400
 8000f64:	42021400 	.word	0x42021400
 8000f68:	42020000 	.word	0x42020000
 8000f6c:	42020800 	.word	0x42020800
 8000f70:	200002b4 	.word	0x200002b4
 8000f74:	00c00c20 	.word	0x00c00c20
 8000f78:	08026081 	.word	0x08026081
 8000f7c:	080260a4 	.word	0x080260a4
 8000f80:	080260bc 	.word	0x080260bc
 8000f84:	080260be 	.word	0x080260be
 8000f88:	20000520 	.word	0x20000520
 8000f8c:	40031400 	.word	0x40031400
 8000f90:	200004f4 	.word	0x200004f4
 8000f94:	40031800 	.word	0x40031800

08000f98 <HAL_TIM_PeriodElapsedCallback>:
  if (htim->Instance == TIM6) {
 8000f98:	6802      	ldr	r2, [r0, #0]
 8000f9a:	4b03      	ldr	r3, [pc, #12]	@ (8000fa8 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8000f9c:	429a      	cmp	r2, r3
 8000f9e:	d101      	bne.n	8000fa4 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8000fa0:	f003 ba1c 	b.w	80043dc <HAL_IncTick>
}
 8000fa4:	4770      	bx	lr
 8000fa6:	bf00      	nop
 8000fa8:	40001000 	.word	0x40001000

08000fac <Error_Handler>:
 8000fac:	b672      	cpsid	i
  while (1)
 8000fae:	e7fe      	b.n	8000fae <Error_Handler+0x2>

08000fb0 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 8000fb0:	4b0a      	ldr	r3, [pc, #40]	@ (8000fdc <HAL_MspInit+0x2c>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000fb2:	210f      	movs	r1, #15
  __HAL_RCC_PWR_CLK_ENABLE();
 8000fb4:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000fb8:	f06f 0001 	mvn.w	r0, #1
  __HAL_RCC_PWR_CLK_ENABLE();
 8000fbc:	f042 0204 	orr.w	r2, r2, #4
 8000fc0:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000fc4:	2200      	movs	r2, #0
  __HAL_RCC_PWR_CLK_ENABLE();
 8000fc6:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
{
 8000fca:	b082      	sub	sp, #8
  __HAL_RCC_PWR_CLK_ENABLE();
 8000fcc:	f003 0304 	and.w	r3, r3, #4
 8000fd0:	9301      	str	r3, [sp, #4]
 8000fd2:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000fd4:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000fd6:	f003 ba37 	b.w	8004448 <HAL_NVIC_SetPriority>
 8000fda:	bf00      	nop
 8000fdc:	46020c00 	.word	0x46020c00

08000fe0 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8000fe0:	6802      	ldr	r2, [r0, #0]
 8000fe2:	4b09      	ldr	r3, [pc, #36]	@ (8001008 <HAL_CRC_MspInit+0x28>)
{
 8000fe4:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8000fe6:	429a      	cmp	r2, r3
 8000fe8:	d10c      	bne.n	8001004 <HAL_CRC_MspInit+0x24>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000fea:	4b08      	ldr	r3, [pc, #32]	@ (800100c <HAL_CRC_MspInit+0x2c>)
 8000fec:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8000ff0:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8000ff4:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8000ff8:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000ffc:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001000:	9301      	str	r3, [sp, #4]
 8001002:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001004:	b002      	add	sp, #8
 8001006:	4770      	bx	lr
 8001008:	40023000 	.word	0x40023000
 800100c:	46020c00 	.word	0x46020c00

08001010 <HAL_DCACHE_MspInit>:
* @param hdcache: DCACHE handle pointer
* @retval None
*/
void HAL_DCACHE_MspInit(DCACHE_HandleTypeDef* hdcache)
{
  if(hdcache->Instance==DCACHE1)
 8001010:	6803      	ldr	r3, [r0, #0]
 8001012:	4a12      	ldr	r2, [pc, #72]	@ (800105c <HAL_DCACHE_MspInit+0x4c>)
{
 8001014:	b082      	sub	sp, #8
  if(hdcache->Instance==DCACHE1)
 8001016:	4293      	cmp	r3, r2
 8001018:	d10e      	bne.n	8001038 <HAL_DCACHE_MspInit+0x28>
  {
  /* USER CODE BEGIN DCACHE1_MspInit 0 */

  /* USER CODE END DCACHE1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DCACHE1_CLK_ENABLE();
 800101a:	4b11      	ldr	r3, [pc, #68]	@ (8001060 <HAL_DCACHE_MspInit+0x50>)
 800101c:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8001020:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8001024:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8001028:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800102c:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 8001030:	9300      	str	r3, [sp, #0]
 8001032:	9b00      	ldr	r3, [sp, #0]
  /* USER CODE BEGIN DCACHE2_MspInit 1 */

  /* USER CODE END DCACHE2_MspInit 1 */
  }

}
 8001034:	b002      	add	sp, #8
 8001036:	4770      	bx	lr
  else if(hdcache->Instance==DCACHE2)
 8001038:	4a0a      	ldr	r2, [pc, #40]	@ (8001064 <HAL_DCACHE_MspInit+0x54>)
 800103a:	4293      	cmp	r3, r2
 800103c:	d1fa      	bne.n	8001034 <HAL_DCACHE_MspInit+0x24>
    __HAL_RCC_DCACHE2_CLK_ENABLE();
 800103e:	4b08      	ldr	r3, [pc, #32]	@ (8001060 <HAL_DCACHE_MspInit+0x50>)
 8001040:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8001044:	f442 1200 	orr.w	r2, r2, #2097152	@ 0x200000
 8001048:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800104c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001050:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001054:	9301      	str	r3, [sp, #4]
 8001056:	9b01      	ldr	r3, [sp, #4]
}
 8001058:	e7ec      	b.n	8001034 <HAL_DCACHE_MspInit+0x24>
 800105a:	bf00      	nop
 800105c:	40031400 	.word	0x40031400
 8001060:	46020c00 	.word	0x46020c00
 8001064:	40031800 	.word	0x40031800

08001068 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001068:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 800106a:	4b0f      	ldr	r3, [pc, #60]	@ (80010a8 <HAL_DMA2D_MspInit+0x40>)
 800106c:	6802      	ldr	r2, [r0, #0]
 800106e:	429a      	cmp	r2, r3
 8001070:	d117      	bne.n	80010a2 <HAL_DMA2D_MspInit+0x3a>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001072:	4b0e      	ldr	r3, [pc, #56]	@ (80010ac <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 7, 0);
 8001074:	2107      	movs	r1, #7
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001076:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
    HAL_NVIC_SetPriority(DMA2D_IRQn, 7, 0);
 800107a:	2076      	movs	r0, #118	@ 0x76
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800107c:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 8001080:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8001084:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    HAL_NVIC_SetPriority(DMA2D_IRQn, 7, 0);
 8001088:	2200      	movs	r2, #0
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800108a:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800108e:	9301      	str	r3, [sp, #4]
 8001090:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 7, 0);
 8001092:	f003 f9d9 	bl	8004448 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001096:	2076      	movs	r0, #118	@ 0x76
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001098:	b003      	add	sp, #12
 800109a:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 800109e:	f003 ba03 	b.w	80044a8 <HAL_NVIC_EnableIRQ>
}
 80010a2:	b003      	add	sp, #12
 80010a4:	f85d fb04 	ldr.w	pc, [sp], #4
 80010a8:	4002b000 	.word	0x4002b000
 80010ac:	46020c00 	.word	0x46020c00

080010b0 <HAL_DSI_MspInit>:
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
  if(hdsi->Instance==DSI)
 80010b0:	6802      	ldr	r2, [r0, #0]
 80010b2:	4b09      	ldr	r3, [pc, #36]	@ (80010d8 <HAL_DSI_MspInit+0x28>)
{
 80010b4:	b082      	sub	sp, #8
  if(hdsi->Instance==DSI)
 80010b6:	429a      	cmp	r2, r3
 80010b8:	d10c      	bne.n	80010d4 <HAL_DSI_MspInit+0x24>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 80010ba:	4b08      	ldr	r3, [pc, #32]	@ (80010dc <HAL_DSI_MspInit+0x2c>)
 80010bc:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 80010c0:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 80010c4:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
 80010c8:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 80010cc:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 80010d0:	9301      	str	r3, [sp, #4]
 80010d2:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 80010d4:	b002      	add	sp, #8
 80010d6:	4770      	bx	lr
 80010d8:	40016c00 	.word	0x40016c00
 80010dc:	46020c00 	.word	0x46020c00

080010e0 <HAL_GPU2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hgpu2d: GPU2D handle pointer
* @retval None
*/
void HAL_GPU2D_MspInit(GPU2D_HandleTypeDef* hgpu2d)
{
 80010e0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  if(hgpu2d->Instance==GPU2D)
 80010e2:	6802      	ldr	r2, [r0, #0]
 80010e4:	4b1f      	ldr	r3, [pc, #124]	@ (8001164 <HAL_GPU2D_MspInit+0x84>)
 80010e6:	429a      	cmp	r2, r3
 80010e8:	d139      	bne.n	800115e <HAL_GPU2D_MspInit+0x7e>
  {
  /* USER CODE BEGIN GPU2D_MspInit 0 */

  /* USER CODE END GPU2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_GPU2D_CLK_ENABLE();
 80010ea:	4c1f      	ldr	r4, [pc, #124]	@ (8001168 <HAL_GPU2D_MspInit+0x88>)
    __HAL_RCC_DCACHE2_CLK_ENABLE();
    /* GPU2D interrupt Init */
    HAL_NVIC_SetPriority(GPU2D_IRQn, 7, 0);
 80010ec:	2200      	movs	r2, #0
    __HAL_RCC_GPU2D_CLK_ENABLE();
 80010ee:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
    HAL_NVIC_SetPriority(GPU2D_IRQn, 7, 0);
 80010f2:	2107      	movs	r1, #7
    __HAL_RCC_GPU2D_CLK_ENABLE();
 80010f4:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80010f8:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 80010fc:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
    HAL_NVIC_SetPriority(GPU2D_IRQn, 7, 0);
 8001100:	2084      	movs	r0, #132	@ 0x84
    __HAL_RCC_GPU2D_CLK_ENABLE();
 8001102:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8001106:	9301      	str	r3, [sp, #4]
 8001108:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_DCACHE2_CLK_ENABLE();
 800110a:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
 800110e:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001112:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 8001116:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
 800111a:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800111e:	9302      	str	r3, [sp, #8]
 8001120:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(GPU2D_IRQn, 7, 0);
 8001122:	f003 f991 	bl	8004448 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(GPU2D_IRQn);
 8001126:	2084      	movs	r0, #132	@ 0x84
 8001128:	f003 f9be 	bl	80044a8 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(GPU2D_ER_IRQn, 7, 0);
 800112c:	2200      	movs	r2, #0
 800112e:	2107      	movs	r1, #7
 8001130:	2085      	movs	r0, #133	@ 0x85
 8001132:	f003 f989 	bl	8004448 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(GPU2D_ER_IRQn);
 8001136:	2085      	movs	r0, #133	@ 0x85
 8001138:	f003 f9b6 	bl	80044a8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN GPU2D_MspInit 1 */
    __HAL_RCC_SYSCFG_CLK_ENABLE();
 800113c:	f8d4 30a8 	ldr.w	r3, [r4, #168]	@ 0xa8
    SYSCFG->CFGR1 &= ~(1L << 28);
 8001140:	4a0a      	ldr	r2, [pc, #40]	@ (800116c <HAL_GPU2D_MspInit+0x8c>)
    __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001142:	f043 0302 	orr.w	r3, r3, #2
 8001146:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
 800114a:	f8d4 30a8 	ldr.w	r3, [r4, #168]	@ 0xa8
 800114e:	f003 0302 	and.w	r3, r3, #2
 8001152:	9303      	str	r3, [sp, #12]
 8001154:	9b03      	ldr	r3, [sp, #12]
    SYSCFG->CFGR1 &= ~(1L << 28);
 8001156:	6853      	ldr	r3, [r2, #4]
 8001158:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800115c:	6053      	str	r3, [r2, #4]
  /* USER CODE END GPU2D_MspInit 1 */
  }

}
 800115e:	b004      	add	sp, #16
 8001160:	bd10      	pop	{r4, pc}
 8001162:	bf00      	nop
 8001164:	4002f000 	.word	0x4002f000
 8001168:	46020c00 	.word	0x46020c00
 800116c:	46000400 	.word	0x46000400

08001170 <HAL_XSPI_MspInit>:
  /* USER CODE BEGIN HSPI1_MspInit 1 */
#endif
  /* USER CODE END HSPI1_MspInit 1 */
  }

}
 8001170:	4770      	bx	lr

08001172 <HAL_XSPI_MspDeInit>:
* @brief XSPI MSP De-Initialization
* This function freeze the hardware resources used in this example
* @param hxspi: XSPI handle pointer
* @retval None
*/
void HAL_XSPI_MspDeInit(XSPI_HandleTypeDef* hxspi)
 8001172:	4770      	bx	lr

08001174 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001174:	b507      	push	{r0, r1, r2, lr}
  if(hltdc->Instance==LTDC)
 8001176:	4b13      	ldr	r3, [pc, #76]	@ (80011c4 <HAL_LTDC_MspInit+0x50>)
 8001178:	6802      	ldr	r2, [r0, #0]
 800117a:	429a      	cmp	r2, r3
 800117c:	d11f      	bne.n	80011be <HAL_LTDC_MspInit+0x4a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 800117e:	4b12      	ldr	r3, [pc, #72]	@ (80011c8 <HAL_LTDC_MspInit+0x54>)
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 7, 0);
 8001180:	2107      	movs	r1, #7
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001182:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
    HAL_NVIC_SetPriority(LTDC_IRQn, 7, 0);
 8001186:	2087      	movs	r0, #135	@ 0x87
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001188:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 800118c:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
 8001190:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
    HAL_NVIC_SetPriority(LTDC_IRQn, 7, 0);
 8001194:	2200      	movs	r2, #0
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001196:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 800119a:	9301      	str	r3, [sp, #4]
 800119c:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(LTDC_IRQn, 7, 0);
 800119e:	f003 f953 	bl	8004448 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80011a2:	2087      	movs	r0, #135	@ 0x87
 80011a4:	f003 f980 	bl	80044a8 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(LTDC_ER_IRQn, 7, 0);
 80011a8:	2200      	movs	r2, #0
 80011aa:	2107      	movs	r1, #7
 80011ac:	2088      	movs	r0, #136	@ 0x88
 80011ae:	f003 f94b 	bl	8004448 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_ER_IRQn);
 80011b2:	2088      	movs	r0, #136	@ 0x88
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 80011b4:	b003      	add	sp, #12
 80011b6:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(LTDC_ER_IRQn);
 80011ba:	f003 b975 	b.w	80044a8 <HAL_NVIC_EnableIRQ>
}
 80011be:	b003      	add	sp, #12
 80011c0:	f85d fb04 	ldr.w	pc, [sp], #4
 80011c4:	40016800 	.word	0x40016800
 80011c8:	46020c00 	.word	0x46020c00

080011cc <HAL_OSPI_MspInit>:
* @param hospi: OSPI handle pointer
* @retval None
*/
void HAL_OSPI_MspInit(OSPI_HandleTypeDef* hospi)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80011cc:	2214      	movs	r2, #20
{
 80011ce:	b5f0      	push	{r4, r5, r6, r7, lr}
 80011d0:	4604      	mov	r4, r0
 80011d2:	b0c3      	sub	sp, #268	@ 0x10c
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80011d4:	2100      	movs	r1, #0
 80011d6:	eb0d 0002 	add.w	r0, sp, r2
 80011da:	f024 f8b7 	bl	802534c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80011de:	22e0      	movs	r2, #224	@ 0xe0
 80011e0:	2100      	movs	r1, #0
 80011e2:	a80a      	add	r0, sp, #40	@ 0x28
 80011e4:	f024 f8b2 	bl	802534c <memset>
  if(hospi->Instance==OCTOSPI1)
 80011e8:	6822      	ldr	r2, [r4, #0]
 80011ea:	4b4b      	ldr	r3, [pc, #300]	@ (8001318 <HAL_OSPI_MspInit+0x14c>)
 80011ec:	429a      	cmp	r2, r3
 80011ee:	f040 8090 	bne.w	8001312 <HAL_OSPI_MspInit+0x146>

  /* USER CODE END OCTOSPI1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_OSPI;
 80011f2:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80011f6:	2300      	movs	r3, #0
 80011f8:	e9cd 230a 	strd	r2, r3, [sp, #40]	@ 0x28
    PeriphClkInit.OspiClockSelection = RCC_OSPICLKSOURCE_PLL2;
 80011fc:	f44f 1340 	mov.w	r3, #3145728	@ 0x300000
 8001200:	9339      	str	r3, [sp, #228]	@ 0xe4
    PeriphClkInit.PLL2.PLL2Source = RCC_PLLSOURCE_MSI;
 8001202:	2301      	movs	r3, #1
    PeriphClkInit.PLL2.PLL2M = 1;
    PeriphClkInit.PLL2.PLL2N = 93;
    PeriphClkInit.PLL2.PLL2P = 2;
 8001204:	215d      	movs	r1, #93	@ 0x5d
    PeriphClkInit.PLL2.PLL2Q = 4;
 8001206:	2204      	movs	r2, #4
    PeriphClkInit.PLL2.PLL2M = 1;
 8001208:	e9cd 330c 	strd	r3, r3, [sp, #48]	@ 0x30
    PeriphClkInit.PLL2.PLL2P = 2;
 800120c:	2302      	movs	r3, #2
 800120e:	e9cd 130e 	strd	r1, r3, [sp, #56]	@ 0x38
    PeriphClkInit.PLL2.PLL2R = 2;
 8001212:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
    PeriphClkInit.PLL2.PLL2RGE = RCC_PLLVCIRANGE_0;
    PeriphClkInit.PLL2.PLL2FRACN = 0;
    PeriphClkInit.PLL2.PLL2ClockOut = RCC_PLL2_DIVQ;
 8001216:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800121a:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInit.PLL2.PLL2ClockOut = RCC_PLL2_DIVQ;
 800121c:	9314      	str	r3, [sp, #80]	@ 0x50
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800121e:	f006 fe8b 	bl	8007f38 <HAL_RCCEx_PeriphCLKConfig>
 8001222:	b108      	cbz	r0, 8001228 <HAL_OSPI_MspInit+0x5c>
    {
      Error_Handler();
 8001224:	f7ff fec2 	bl	8000fac <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_OSPIM_CLK_ENABLE();
 8001228:	4b3c      	ldr	r3, [pc, #240]	@ (800131c <HAL_OSPI_MspInit+0x150>)
    PA1     ------> OCTOSPIM_P1_DQS
    */
    GPIO_InitStruct.Pin = OSPI_CLK_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800122a:	2403      	movs	r4, #3
    __HAL_RCC_OSPIM_CLK_ENABLE();
 800122c:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001230:	2602      	movs	r6, #2
    __HAL_RCC_OSPIM_CLK_ENABLE();
 8001232:	f442 1200 	orr.w	r2, r2, #2097152	@ 0x200000
 8001236:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800123a:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800123e:	2500      	movs	r5, #0
    __HAL_RCC_OSPIM_CLK_ENABLE();
 8001240:	f402 1200 	and.w	r2, r2, #2097152	@ 0x200000
 8001244:	9200      	str	r2, [sp, #0]
 8001246:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_OSPI1_CLK_ENABLE();
 8001248:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
    GPIO_InitStruct.Alternate = GPIO_AF3_OCTOSPI1;
    HAL_GPIO_Init(OSPI_CLK_GPIO_Port, &GPIO_InitStruct);
 800124c:	4834      	ldr	r0, [pc, #208]	@ (8001320 <HAL_OSPI_MspInit+0x154>)
    __HAL_RCC_OSPI1_CLK_ENABLE();
 800124e:	f042 0210 	orr.w	r2, r2, #16
 8001252:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8001256:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
    HAL_GPIO_Init(OSPI_CLK_GPIO_Port, &GPIO_InitStruct);
 800125a:	a905      	add	r1, sp, #20
    __HAL_RCC_OSPI1_CLK_ENABLE();
 800125c:	f002 0210 	and.w	r2, r2, #16
 8001260:	9201      	str	r2, [sp, #4]
 8001262:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001264:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c

    GPIO_InitStruct.Pin = OSPI_D2_Pin|OSPI_D1_Pin|OSPI_D3_Pin|OSPI_D0_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPI1;
 8001268:	270a      	movs	r7, #10
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800126a:	f042 0220 	orr.w	r2, r2, #32
 800126e:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8001272:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8001276:	f002 0220 	and.w	r2, r2, #32
 800127a:	9202      	str	r2, [sp, #8]
 800127c:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800127e:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8001282:	f042 0204 	orr.w	r2, r2, #4
 8001286:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800128a:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 800128e:	f002 0204 	and.w	r2, r2, #4
 8001292:	9203      	str	r2, [sp, #12]
 8001294:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001296:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 800129a:	f042 0201 	orr.w	r2, r2, #1
 800129e:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 80012a2:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012a6:	e9cd 5407 	strd	r5, r4, [sp, #28]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80012aa:	f003 0301 	and.w	r3, r3, #1
 80012ae:	9304      	str	r3, [sp, #16]
 80012b0:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012b2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    GPIO_InitStruct.Alternate = GPIO_AF3_OCTOSPI1;
 80012b6:	9409      	str	r4, [sp, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012b8:	e9cd 3605 	strd	r3, r6, [sp, #20]
    HAL_GPIO_Init(OSPI_CLK_GPIO_Port, &GPIO_InitStruct);
 80012bc:	f004 f9f6 	bl	80056ac <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = OSPI_D2_Pin|OSPI_D1_Pin|OSPI_D3_Pin|OSPI_D0_Pin;
 80012c0:	f44f 7370 	mov.w	r3, #960	@ 0x3c0
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80012c4:	4816      	ldr	r0, [pc, #88]	@ (8001320 <HAL_OSPI_MspInit+0x154>)
 80012c6:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012c8:	e9cd 3605 	strd	r3, r6, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012cc:	e9cd 5407 	strd	r5, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPI1;
 80012d0:	9709      	str	r7, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80012d2:	f004 f9eb 	bl	80056ac <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = OSPI_D4_Pin|OSPI_D6_Pin|OSPI_D5_Pin;
 80012d6:	230e      	movs	r3, #14
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPI1;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80012d8:	4812      	ldr	r0, [pc, #72]	@ (8001324 <HAL_OSPI_MspInit+0x158>)
 80012da:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012dc:	e9cd 3605 	strd	r3, r6, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012e0:	e9cd 5407 	strd	r5, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPI1;
 80012e4:	9709      	str	r7, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80012e6:	f004 f9e1 	bl	80056ac <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = OSPI_CS_Pin|OSPI_DQS_Pin;
 80012ea:	2306      	movs	r3, #6
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPI1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80012ec:	480e      	ldr	r0, [pc, #56]	@ (8001328 <HAL_OSPI_MspInit+0x15c>)
 80012ee:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012f0:	e9cd 3605 	strd	r3, r6, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012f4:	e9cd 5407 	strd	r5, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPI1;
 80012f8:	9709      	str	r7, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80012fa:	f004 f9d7 	bl	80056ac <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = OSPI_D7_Pin;
 80012fe:	2301      	movs	r3, #1
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF3_OCTOSPI1;
    HAL_GPIO_Init(OSPI_D7_GPIO_Port, &GPIO_InitStruct);
 8001300:	4808      	ldr	r0, [pc, #32]	@ (8001324 <HAL_OSPI_MspInit+0x158>)
 8001302:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001304:	e9cd 3605 	strd	r3, r6, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001308:	e9cd 5407 	strd	r5, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF3_OCTOSPI1;
 800130c:	9409      	str	r4, [sp, #36]	@ 0x24
    HAL_GPIO_Init(OSPI_D7_GPIO_Port, &GPIO_InitStruct);
 800130e:	f004 f9cd 	bl	80056ac <HAL_GPIO_Init>
  /* USER CODE BEGIN OCTOSPI1_MspInit 1 */

  /* USER CODE END OCTOSPI1_MspInit 1 */
  }

}
 8001312:	b043      	add	sp, #268	@ 0x10c
 8001314:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001316:	bf00      	nop
 8001318:	420d1400 	.word	0x420d1400
 800131c:	46020c00 	.word	0x46020c00
 8001320:	42021400 	.word	0x42021400
 8001324:	42020800 	.word	0x42020800
 8001328:	42020000 	.word	0x42020000

0800132c <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM8)
 800132c:	6802      	ldr	r2, [r0, #0]
 800132e:	4b09      	ldr	r3, [pc, #36]	@ (8001354 <HAL_TIM_Base_MspInit+0x28>)
{
 8001330:	b082      	sub	sp, #8
  if(htim_base->Instance==TIM8)
 8001332:	429a      	cmp	r2, r3
 8001334:	d10c      	bne.n	8001350 <HAL_TIM_Base_MspInit+0x24>
  {
  /* USER CODE BEGIN TIM8_MspInit 0 */

  /* USER CODE END TIM8_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM8_CLK_ENABLE();
 8001336:	4b08      	ldr	r3, [pc, #32]	@ (8001358 <HAL_TIM_Base_MspInit+0x2c>)
 8001338:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 800133c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8001340:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
 8001344:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8001348:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800134c:	9301      	str	r3, [sp, #4]
 800134e:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN TIM8_MspInit 1 */

  /* USER CODE END TIM8_MspInit 1 */
  }

}
 8001350:	b002      	add	sp, #8
 8001352:	4770      	bx	lr
 8001354:	40013400 	.word	0x40013400
 8001358:	46020c00 	.word	0x46020c00

0800135c <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 800135c:	b510      	push	{r4, lr}
 800135e:	4604      	mov	r4, r0
 8001360:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001362:	2214      	movs	r2, #20
 8001364:	2100      	movs	r1, #0
 8001366:	a801      	add	r0, sp, #4
 8001368:	f023 fff0 	bl	802534c <memset>
  if(htim->Instance==TIM8)
 800136c:	6822      	ldr	r2, [r4, #0]
 800136e:	4b0e      	ldr	r3, [pc, #56]	@ (80013a8 <HAL_TIM_MspPostInit+0x4c>)
 8001370:	429a      	cmp	r2, r3
 8001372:	d117      	bne.n	80013a4 <HAL_TIM_MspPostInit+0x48>
  {
  /* USER CODE BEGIN TIM8_MspPostInit 0 */

  /* USER CODE END TIM8_MspPostInit 0 */

    __HAL_RCC_GPIOI_CLK_ENABLE();
 8001374:	4b0d      	ldr	r3, [pc, #52]	@ (80013ac <HAL_TIM_MspPostInit+0x50>)
    GPIO_InitStruct.Pin = DSI_BL_CTRL_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
    HAL_GPIO_Init(DSI_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 8001376:	480e      	ldr	r0, [pc, #56]	@ (80013b0 <HAL_TIM_MspPostInit+0x54>)
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8001378:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    HAL_GPIO_Init(DSI_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 800137c:	a901      	add	r1, sp, #4
    __HAL_RCC_GPIOI_CLK_ENABLE();
 800137e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8001382:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8001386:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800138a:	2240      	movs	r2, #64	@ 0x40
    __HAL_RCC_GPIOI_CLK_ENABLE();
 800138c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001390:	9300      	str	r3, [sp, #0]
 8001392:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001394:	2302      	movs	r3, #2
 8001396:	e9cd 2301 	strd	r2, r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800139a:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 800139c:	2303      	movs	r3, #3
 800139e:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(DSI_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80013a0:	f004 f984 	bl	80056ac <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM8_MspPostInit 1 */

  /* USER CODE END TIM8_MspPostInit 1 */
  }

}
 80013a4:	b006      	add	sp, #24
 80013a6:	bd10      	pop	{r4, pc}
 80013a8:	40013400 	.word	0x40013400
 80013ac:	46020c00 	.word	0x46020c00
 80013b0:	42022000 	.word	0x42022000

080013b4 <HAL_InitTick>:
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 80013b4:	4b1f      	ldr	r3, [pc, #124]	@ (8001434 <HAL_InitTick+0x80>)
{
 80013b6:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_TIM6_CLK_ENABLE();
 80013b8:	f8d3 209c 	ldr.w	r2, [r3, #156]	@ 0x9c
{
 80013bc:	b088      	sub	sp, #32
  __HAL_RCC_TIM6_CLK_ENABLE();
 80013be:	f042 0210 	orr.w	r2, r2, #16
 80013c2:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
 80013c6:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80013ca:	4669      	mov	r1, sp
  __HAL_RCC_TIM6_CLK_ENABLE();
 80013cc:	f003 0310 	and.w	r3, r3, #16
 80013d0:	9301      	str	r3, [sp, #4]
{
 80013d2:	4606      	mov	r6, r0
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80013d4:	a802      	add	r0, sp, #8

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80013d6:	4d18      	ldr	r5, [pc, #96]	@ (8001438 <HAL_InitTick+0x84>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 80013d8:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80013da:	f006 fcb3 	bl	8007d44 <HAL_RCC_GetClockConfig>
  uwTimclock = HAL_RCC_GetPCLK1Freq();
 80013de:	f006 fc81 	bl	8007ce4 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 80013e2:	4b16      	ldr	r3, [pc, #88]	@ (800143c <HAL_InitTick+0x88>)
 80013e4:	602b      	str	r3, [r5, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80013e6:	f240 33e7 	movw	r3, #999	@ 0x3e7
 80013ea:	60eb      	str	r3, [r5, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80013ec:	4b14      	ldr	r3, [pc, #80]	@ (8001440 <HAL_InitTick+0x8c>)
 80013ee:	fbb0 f0f3 	udiv	r0, r0, r3
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 80013f2:	2300      	movs	r3, #0
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80013f4:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 80013f6:	6068      	str	r0, [r5, #4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  status = HAL_TIM_Base_Init(&htim6);
 80013f8:	4628      	mov	r0, r5
  htim6.Init.ClockDivision = 0;
 80013fa:	612b      	str	r3, [r5, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80013fc:	60ab      	str	r3, [r5, #8]
  status = HAL_TIM_Base_Init(&htim6);
 80013fe:	f008 fe35 	bl	800a06c <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8001402:	4604      	mov	r4, r0
 8001404:	b968      	cbnz	r0, 8001422 <HAL_InitTick+0x6e>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8001406:	4628      	mov	r0, r5
 8001408:	f008 fc50 	bl	8009cac <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 800140c:	4604      	mov	r4, r0
 800140e:	b940      	cbnz	r0, 8001422 <HAL_InitTick+0x6e>
    {
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001410:	2e0f      	cmp	r6, #15
 8001412:	d80c      	bhi.n	800142e <HAL_InitTick+0x7a>
      {
        /* Enable the TIM6 global Interrupt */
        HAL_NVIC_SetPriority(TIM6_IRQn, TickPriority, 0U);
 8001414:	4602      	mov	r2, r0
 8001416:	4631      	mov	r1, r6
 8001418:	2031      	movs	r0, #49	@ 0x31
 800141a:	f003 f815 	bl	8004448 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 800141e:	4b09      	ldr	r3, [pc, #36]	@ (8001444 <HAL_InitTick+0x90>)
 8001420:	601e      	str	r6, [r3, #0]
      }
    }
  }

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_IRQn);
 8001422:	2031      	movs	r0, #49	@ 0x31
 8001424:	f003 f840 	bl	80044a8 <HAL_NVIC_EnableIRQ>

 /* Return function status */
  return status;
}
 8001428:	4620      	mov	r0, r4
 800142a:	b008      	add	sp, #32
 800142c:	bd70      	pop	{r4, r5, r6, pc}
        status = HAL_ERROR;
 800142e:	2401      	movs	r4, #1
 8001430:	e7f7      	b.n	8001422 <HAL_InitTick+0x6e>
 8001432:	bf00      	nop
 8001434:	46020c00 	.word	0x46020c00
 8001438:	20000570 	.word	0x20000570
 800143c:	40001000 	.word	0x40001000
 8001440:	000f4240 	.word	0x000f4240
 8001444:	20000050 	.word	0x20000050

08001448 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001448:	e7fe      	b.n	8001448 <NMI_Handler>

0800144a <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800144a:	e7fe      	b.n	800144a <HardFault_Handler>

0800144c <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800144c:	e7fe      	b.n	800144c <MemManage_Handler>

0800144e <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800144e:	e7fe      	b.n	800144e <BusFault_Handler>

08001450 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001450:	e7fe      	b.n	8001450 <UsageFault_Handler>

08001452 <DebugMon_Handler>:

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001452:	4770      	bx	lr

08001454 <EXTI8_IRQHandler>:
void EXTI8_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI8_IRQn 0 */

  /* USER CODE END EXTI8_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DSI_TOUCH_INT_Pin);
 8001454:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8001458:	f004 baf4 	b.w	8005a44 <HAL_GPIO_EXTI_IRQHandler>

0800145c <TIM6_IRQHandler>:
void TIM6_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_IRQn 0 */

  /* USER CODE END TIM6_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 800145c:	4801      	ldr	r0, [pc, #4]	@ (8001464 <TIM6_IRQHandler+0x8>)
 800145e:	f008 bc84 	b.w	8009d6a <HAL_TIM_IRQHandler>
 8001462:	bf00      	nop
 8001464:	20000570 	.word	0x20000570

08001468 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001468:	4801      	ldr	r0, [pc, #4]	@ (8001470 <DMA2D_IRQHandler+0x8>)
 800146a:	f003 bb48 	b.w	8004afe <HAL_DMA2D_IRQHandler>
 800146e:	bf00      	nop
 8001470:	20000494 	.word	0x20000494

08001474 <GPU2D_IRQHandler>:
void GPU2D_IRQHandler(void)
{
  /* USER CODE BEGIN GPU2D_IRQn 0 */

  /* USER CODE END GPU2D_IRQn 0 */
  HAL_GPU2D_IRQHandler(&hgpu2d);
 8001474:	4801      	ldr	r0, [pc, #4]	@ (800147c <GPU2D_IRQHandler+0x8>)
 8001476:	f004 bb14 	b.w	8005aa2 <HAL_GPU2D_IRQHandler>
 800147a:	bf00      	nop
 800147c:	20000464 	.word	0x20000464

08001480 <GPU2D_ER_IRQHandler>:
void GPU2D_ER_IRQHandler(void)
{
  /* USER CODE BEGIN GPU2D_ER_IRQn 0 */

  /* USER CODE END GPU2D_ER_IRQn 0 */
  HAL_GPU2D_ER_IRQHandler(&hgpu2d);
 8001480:	4801      	ldr	r0, [pc, #4]	@ (8001488 <GPU2D_ER_IRQHandler+0x8>)
 8001482:	f004 bb21 	b.w	8005ac8 <HAL_GPU2D_ER_IRQHandler>
 8001486:	bf00      	nop
 8001488:	20000464 	.word	0x20000464

0800148c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 800148c:	4801      	ldr	r0, [pc, #4]	@ (8001494 <LTDC_IRQHandler+0x8>)
 800148e:	f005 b8b3 	b.w	80065f8 <HAL_LTDC_IRQHandler>
 8001492:	bf00      	nop
 8001494:	200003bc 	.word	0x200003bc

08001498 <LTDC_ER_IRQHandler>:
}

/**
  * @brief This function handles LCD-TFT Error interrupt.
  */
void LTDC_ER_IRQHandler(void)
 8001498:	f7ff bff8 	b.w	800148c <LTDC_IRQHandler>

0800149c <_getpid>:
}

int _getpid(void)
{
  return 1;
}
 800149c:	2001      	movs	r0, #1
 800149e:	4770      	bx	lr

080014a0 <_kill>:

int _kill(int pid, int sig)
{
 80014a0:	b508      	push	{r3, lr}
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80014a2:	f023 fff5 	bl	8025490 <__errno>
 80014a6:	2316      	movs	r3, #22
 80014a8:	6003      	str	r3, [r0, #0]
  return -1;
}
 80014aa:	f04f 30ff 	mov.w	r0, #4294967295
 80014ae:	bd08      	pop	{r3, pc}

080014b0 <_exit>:

void _exit (int status)
{
 80014b0:	b508      	push	{r3, lr}
  errno = EINVAL;
 80014b2:	f023 ffed 	bl	8025490 <__errno>
 80014b6:	2316      	movs	r3, #22
 80014b8:	6003      	str	r3, [r0, #0]
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
 80014ba:	e7fe      	b.n	80014ba <_exit+0xa>

080014bc <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80014bc:	b570      	push	{r4, r5, r6, lr}
 80014be:	460d      	mov	r5, r1
 80014c0:	4614      	mov	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80014c2:	460e      	mov	r6, r1
 80014c4:	1b73      	subs	r3, r6, r5
 80014c6:	429c      	cmp	r4, r3
 80014c8:	dc01      	bgt.n	80014ce <_read+0x12>
  {
    *ptr++ = __io_getchar();
  }

  return len;
}
 80014ca:	4620      	mov	r0, r4
 80014cc:	bd70      	pop	{r4, r5, r6, pc}
    *ptr++ = __io_getchar();
 80014ce:	f3af 8000 	nop.w
 80014d2:	f806 0b01 	strb.w	r0, [r6], #1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80014d6:	e7f5      	b.n	80014c4 <_read+0x8>

080014d8 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80014d8:	b570      	push	{r4, r5, r6, lr}
 80014da:	460d      	mov	r5, r1
 80014dc:	4614      	mov	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80014de:	460e      	mov	r6, r1
 80014e0:	1b73      	subs	r3, r6, r5
 80014e2:	429c      	cmp	r4, r3
 80014e4:	dc01      	bgt.n	80014ea <_write+0x12>
  {
    __io_putchar(*ptr++);
  }
  return len;
}
 80014e6:	4620      	mov	r0, r4
 80014e8:	bd70      	pop	{r4, r5, r6, pc}
    __io_putchar(*ptr++);
 80014ea:	f816 0b01 	ldrb.w	r0, [r6], #1
 80014ee:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80014f2:	e7f5      	b.n	80014e0 <_write+0x8>

080014f4 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
}
 80014f4:	f04f 30ff 	mov.w	r0, #4294967295
 80014f8:	4770      	bx	lr

080014fa <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 80014fa:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  return 0;
}
 80014fe:	2000      	movs	r0, #0
  st->st_mode = S_IFCHR;
 8001500:	604b      	str	r3, [r1, #4]
}
 8001502:	4770      	bx	lr

08001504 <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 8001504:	2001      	movs	r0, #1
 8001506:	4770      	bx	lr

08001508 <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 8001508:	2000      	movs	r0, #0
 800150a:	4770      	bx	lr

0800150c <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800150c:	4a0b      	ldr	r2, [pc, #44]	@ (800153c <_sbrk+0x30>)
{
 800150e:	4603      	mov	r3, r0
  if (NULL == __sbrk_heap_end)
 8001510:	6811      	ldr	r1, [r2, #0]
{
 8001512:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 8001514:	b909      	cbnz	r1, 800151a <_sbrk+0xe>
  {
    __sbrk_heap_end = &_end;
 8001516:	490a      	ldr	r1, [pc, #40]	@ (8001540 <_sbrk+0x34>)
 8001518:	6011      	str	r1, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800151a:	6810      	ldr	r0, [r2, #0]
 800151c:	4909      	ldr	r1, [pc, #36]	@ (8001544 <_sbrk+0x38>)
 800151e:	4c0a      	ldr	r4, [pc, #40]	@ (8001548 <_sbrk+0x3c>)
 8001520:	4403      	add	r3, r0
 8001522:	1b09      	subs	r1, r1, r4
 8001524:	428b      	cmp	r3, r1
 8001526:	d906      	bls.n	8001536 <_sbrk+0x2a>
  {
    errno = ENOMEM;
 8001528:	f023 ffb2 	bl	8025490 <__errno>
 800152c:	230c      	movs	r3, #12
 800152e:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8001530:	f04f 30ff 	mov.w	r0, #4294967295

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 8001534:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 8001536:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 8001538:	e7fc      	b.n	8001534 <_sbrk+0x28>
 800153a:	bf00      	nop
 800153c:	200005bc 	.word	0x200005bc
 8001540:	2004c498 	.word	0x2004c498
 8001544:	20270000 	.word	0x20270000
 8001548:	00001000 	.word	0x00001000

0800154c <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* set stack pointer */
 800154c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001584 <LoopForever+0x2>
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001550:	f002 fefa 	bl	8004348 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  movs	r1, #0
 8001554:	2100      	movs	r1, #0
  b	LoopCopyDataInit
 8001556:	e003      	b.n	8001560 <LoopCopyDataInit>

08001558 <CopyDataInit>:

CopyDataInit:
	ldr	r3, =_sidata
 8001558:	4b0b      	ldr	r3, [pc, #44]	@ (8001588 <LoopForever+0x6>)
	ldr	r3, [r3, r1]
 800155a:	585b      	ldr	r3, [r3, r1]
	str	r3, [r0, r1]
 800155c:	5043      	str	r3, [r0, r1]
	adds	r1, r1, #4
 800155e:	3104      	adds	r1, #4

08001560 <LoopCopyDataInit>:

LoopCopyDataInit:
	ldr	r0, =_sdata
 8001560:	480a      	ldr	r0, [pc, #40]	@ (800158c <LoopForever+0xa>)
	ldr	r3, =_edata
 8001562:	4b0b      	ldr	r3, [pc, #44]	@ (8001590 <LoopForever+0xe>)
	adds	r2, r0, r1
 8001564:	1842      	adds	r2, r0, r1
	cmp	r2, r3
 8001566:	429a      	cmp	r2, r3
	bcc	CopyDataInit
 8001568:	d3f6      	bcc.n	8001558 <CopyDataInit>
	ldr	r2, =_sbss
 800156a:	4a0a      	ldr	r2, [pc, #40]	@ (8001594 <LoopForever+0x12>)
	b	LoopFillZerobss
 800156c:	e002      	b.n	8001574 <LoopFillZerobss>

0800156e <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
	movs	r3, #0
 800156e:	2300      	movs	r3, #0
	str	r3, [r2], #4
 8001570:	f842 3b04 	str.w	r3, [r2], #4

08001574 <LoopFillZerobss>:

LoopFillZerobss:
	ldr	r3, = _ebss
 8001574:	4b08      	ldr	r3, [pc, #32]	@ (8001598 <LoopForever+0x16>)
	cmp	r2, r3
 8001576:	429a      	cmp	r2, r3
	bcc	FillZerobss
 8001578:	d3f9      	bcc.n	800156e <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 800157a:	f023 ff8f 	bl	802549c <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 800157e:	f7ff fa0f 	bl	80009a0 <main>

08001582 <LoopForever>:

LoopForever:
    b LoopForever
 8001582:	e7fe      	b.n	8001582 <LoopForever>
  ldr   sp, =_estack    /* set stack pointer */
 8001584:	20270000 	.word	0x20270000
	ldr	r3, =_sidata
 8001588:	08029750 	.word	0x08029750
	ldr	r0, =_sdata
 800158c:	20000000 	.word	0x20000000
	ldr	r3, =_edata
 8001590:	20000290 	.word	0x20000290
	ldr	r2, =_sbss
 8001594:	20000290 	.word	0x20000290
	ldr	r3, = _ebss
 8001598:	2004c498 	.word	0x2004c498

0800159c <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 800159c:	e7fe      	b.n	800159c <ADC1_2_IRQHandler>

0800159e <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 800159e:	4770      	bx	lr

080015a0 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80015a0:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80015a2:	f000 fd93 	bl	80020cc <touchgfx_components_init>
  touchgfx_init();
}
 80015a6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80015aa:	f000 bd19 	b.w	8001fe0 <touchgfx_init>

080015ae <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80015ae:	f000 bd99 	b.w	80020e4 <touchgfx_taskEntry>

080015b2 <_ZN8touchgfx7Buttons4initEv>:
    BUTTON_USER  = '5',
} JOYState_TypeDef;

void Buttons::init()
{
}
 80015b2:	4770      	bx	lr

080015b4 <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    unsigned int buttonValue = BUTTON_NONE;

    if (HAL_GPIO_ReadPin(USER_BUTTON_GPIO_Port, USER_BUTTON_Pin) == GPIO_PIN_SET)
 80015b4:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
{
 80015b8:	b508      	push	{r3, lr}
    if (HAL_GPIO_ReadPin(USER_BUTTON_GPIO_Port, USER_BUTTON_Pin) == GPIO_PIN_SET)
 80015ba:	4804      	ldr	r0, [pc, #16]	@ (80015cc <_ZN8touchgfx7Buttons6sampleEv+0x18>)
 80015bc:	f004 fa06 	bl	80059cc <HAL_GPIO_ReadPin>
    {
        buttonValue = BUTTON_USER;
 80015c0:	2801      	cmp	r0, #1
    {
        return 0;
    }

    return static_cast<unsigned int>(buttonValue);
}
 80015c2:	bf0c      	ite	eq
 80015c4:	2035      	moveq	r0, #53	@ 0x35
 80015c6:	2000      	movne	r0, #0
 80015c8:	bd08      	pop	{r3, pc}
 80015ca:	bf00      	nop
 80015cc:	42020800 	.word	0x42020800

080015d0 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 80015d0:	6840      	ldr	r0, [r0, #4]
    }
 80015d2:	4770      	bx	lr

080015d4 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 80015d4:	6041      	str	r1, [r0, #4]
    }
 80015d6:	4770      	bx	lr

080015d8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 80015d8:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 80015dc:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	@ 0xdfc
 80015e0:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80015e4:	f8c2 3dfc 	str.w	r3, [r2, #3580]	@ 0xdfc
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
 80015e8:	4b05      	ldr	r3, [pc, #20]	@ (8001600 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
 80015ea:	4a06      	ldr	r2, [pc, #24]	@ (8001604 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
 80015ec:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
 80015f0:	430a      	orrs	r2, r1
 80015f2:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
 80015f6:	681a      	ldr	r2, [r3, #0]
 80015f8:	f042 0201 	orr.w	r2, r2, #1
 80015fc:	601a      	str	r2, [r3, #0]
}
 80015fe:	4770      	bx	lr
 8001600:	e0001000 	.word	0xe0001000
 8001604:	c5acce55 	.word	0xc5acce55

08001608 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8001608:	1a52      	subs	r2, r2, r1
 800160a:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
 800160e:	fbb2 f0f3 	udiv	r0, r2, r3
 8001612:	4770      	bx	lr

08001614 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8001614:	4b01      	ldr	r3, [pc, #4]	@ (800161c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8001616:	6858      	ldr	r0, [r3, #4]
}
 8001618:	4770      	bx	lr
 800161a:	bf00      	nop
 800161c:	e0001000 	.word	0xe0001000

08001620 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8001620:	4770      	bx	lr

08001622 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8001622:	b510      	push	{r4, lr}
 8001624:	4604      	mov	r4, r0
 8001626:	210c      	movs	r1, #12
 8001628:	f023 fb57 	bl	8024cda <_ZdlPvj>
 800162c:	4620      	mov	r0, r4
 800162e:	bd10      	pop	{r4, pc}

08001630 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8001630:	6803      	ldr	r3, [r0, #0]
{
 8001632:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8001634:	691b      	ldr	r3, [r3, #16]
{
 8001636:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8001638:	b131      	cbz	r1, 8001648 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800163a:	4798      	blx	r3
 800163c:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800163e:	6863      	ldr	r3, [r4, #4]
 8001640:	1a9b      	subs	r3, r3, r2
 8001642:	4403      	add	r3, r0
 8001644:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8001646:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8001648:	4798      	blx	r3
 800164a:	60a0      	str	r0, [r4, #8]
}
 800164c:	e7fb      	b.n	8001646 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800164e <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 800164e:	4770      	bx	lr

08001650 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8001650:	4770      	bx	lr

08001652 <_ZN8touchgfx10KeySampler4initEv>:

using namespace touchgfx;

void KeySampler::init()
{
    previousState = 0;
 8001652:	2300      	movs	r3, #0
 8001654:	7103      	strb	r3, [r0, #4]
    Buttons::init();
 8001656:	f7ff bfac 	b.w	80015b2 <_ZN8touchgfx7Buttons4initEv>
	...

0800165c <_ZN8touchgfx10KeySampler6sampleERh>:
}

bool KeySampler::sample(uint8_t& key)
{
 800165c:	b570      	push	{r4, r5, r6, lr}
 800165e:	4604      	mov	r4, r0
 8001660:	460d      	mov	r5, r1
    static uint32_t last_time = 0;

    if ((HAL_GetTick() - last_time) > 800)
 8001662:	f002 fec7 	bl	80043f4 <HAL_GetTick>
 8001666:	4e0b      	ldr	r6, [pc, #44]	@ (8001694 <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 8001668:	6833      	ldr	r3, [r6, #0]
 800166a:	1ac0      	subs	r0, r0, r3
 800166c:	f5b0 7f48 	cmp.w	r0, #800	@ 0x320
 8001670:	d904      	bls.n	800167c <_ZN8touchgfx10KeySampler6sampleERh+0x20>
    {
        last_time = HAL_GetTick();
 8001672:	f002 febf 	bl	80043f4 <HAL_GetTick>
        previousState = 0;
 8001676:	2300      	movs	r3, #0
        last_time = HAL_GetTick();
 8001678:	6030      	str	r0, [r6, #0]
        previousState = 0;
 800167a:	7123      	strb	r3, [r4, #4]
    }

    key = static_cast<uint8_t>(Buttons::sample());
 800167c:	f7ff ff9a 	bl	80015b4 <_ZN8touchgfx7Buttons6sampleEv>
 8001680:	b2c0      	uxtb	r0, r0
 8001682:	7028      	strb	r0, [r5, #0]

    //User key
    if (key && (key != previousState))
 8001684:	b128      	cbz	r0, 8001692 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 8001686:	7923      	ldrb	r3, [r4, #4]
 8001688:	4283      	cmp	r3, r0
    {
        previousState = key;
 800168a:	bf16      	itet	ne
 800168c:	7120      	strbne	r0, [r4, #4]
        return true;
    }

    return false;
 800168e:	2000      	moveq	r0, #0
        return true;
 8001690:	2001      	movne	r0, #1
}
 8001692:	bd70      	pop	{r4, r5, r6, pc}
 8001694:	200005c0 	.word	0x200005c0

08001698 <_ZN8touchgfx10KeySamplerD0Ev>:
 8001698:	b510      	push	{r4, lr}
 800169a:	4604      	mov	r4, r0
 800169c:	2108      	movs	r1, #8
 800169e:	f023 fb1c 	bl	8024cda <_ZdlPvj>
 80016a2:	4620      	mov	r0, r4
 80016a4:	bd10      	pop	{r4, pc}

080016a6 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80016a6:	4770      	bx	lr

080016a8 <_ZN20STM32TouchControllerD0Ev>:
 80016a8:	b510      	push	{r4, lr}
 80016aa:	4604      	mov	r4, r0
 80016ac:	2104      	movs	r1, #4
 80016ae:	f023 fb14 	bl	8024cda <_ZdlPvj>
 80016b2:	4620      	mov	r0, r4
 80016b4:	bd10      	pop	{r4, pc}
	...

080016b8 <_ZN20STM32TouchController11sampleTouchERlS0_>:
    }
}

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
    if (_initialized)
 80016b8:	4b06      	ldr	r3, [pc, #24]	@ (80016d4 <_ZN20STM32TouchController11sampleTouchERlS0_+0x1c>)
{
 80016ba:	b510      	push	{r4, lr}
    if (_initialized)
 80016bc:	7818      	ldrb	r0, [r3, #0]
 80016be:	b130      	cbz	r0, 80016ce <_ZN20STM32TouchController11sampleTouchERlS0_+0x16>
    {
        if (state.TouchDetected)
 80016c0:	4b05      	ldr	r3, [pc, #20]	@ (80016d8 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>)
 80016c2:	681c      	ldr	r4, [r3, #0]
 80016c4:	b124      	cbz	r4, 80016d0 <_ZN20STM32TouchController11sampleTouchERlS0_+0x18>
        {
            x = state.TouchX;
 80016c6:	685c      	ldr	r4, [r3, #4]
 80016c8:	600c      	str	r4, [r1, #0]
            y = state.TouchY;
 80016ca:	689b      	ldr	r3, [r3, #8]
 80016cc:	6013      	str	r3, [r2, #0]
            return true;
        }
    }

    return false;
}
 80016ce:	bd10      	pop	{r4, pc}
    return false;
 80016d0:	4620      	mov	r0, r4
 80016d2:	e7fc      	b.n	80016ce <_ZN20STM32TouchController11sampleTouchERlS0_+0x16>
 80016d4:	200005d0 	.word	0x200005d0
 80016d8:	200005c4 	.word	0x200005c4

080016dc <_ZN20STM32TouchController4initEv>:
{
 80016dc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    if (!_initialized)
 80016de:	4c09      	ldr	r4, [pc, #36]	@ (8001704 <_ZN20STM32TouchController4initEv+0x28>)
 80016e0:	7820      	ldrb	r0, [r4, #0]
 80016e2:	b968      	cbnz	r0, 8001700 <_ZN20STM32TouchController4initEv+0x24>
        TsInit.Width = HAL::DISPLAY_WIDTH;
 80016e4:	4b08      	ldr	r3, [pc, #32]	@ (8001708 <_ZN20STM32TouchController4initEv+0x2c>)
        if (BSP_TS_Init(0, &TsInit) == BSP_ERROR_NONE)
 80016e6:	4669      	mov	r1, sp
        TsInit.Width = HAL::DISPLAY_WIDTH;
 80016e8:	881b      	ldrh	r3, [r3, #0]
        TsInit.Accuracy = 0;
 80016ea:	9003      	str	r0, [sp, #12]
        TsInit.Width = HAL::DISPLAY_WIDTH;
 80016ec:	9300      	str	r3, [sp, #0]
        TsInit.Height = HAL::DISPLAY_HEIGHT;
 80016ee:	4b07      	ldr	r3, [pc, #28]	@ (800170c <_ZN20STM32TouchController4initEv+0x30>)
 80016f0:	881b      	ldrh	r3, [r3, #0]
        TsInit.Orientation = TS_ORIENTATION_PORTRAIT;
 80016f2:	e9cd 3001 	strd	r3, r0, [sp, #4]
        if (BSP_TS_Init(0, &TsInit) == BSP_ERROR_NONE)
 80016f6:	f002 fd6d 	bl	80041d4 <BSP_TS_Init>
 80016fa:	b908      	cbnz	r0, 8001700 <_ZN20STM32TouchController4initEv+0x24>
            _initialized = true;
 80016fc:	2301      	movs	r3, #1
 80016fe:	7023      	strb	r3, [r4, #0]
}
 8001700:	b004      	add	sp, #16
 8001702:	bd10      	pop	{r4, pc}
 8001704:	200005d0 	.word	0x200005d0
 8001708:	2004bf8c 	.word	0x2004bf8c
 800170c:	2004bf8e 	.word	0x2004bf8e

08001710 <HAL_GPIO_EXTI_Falling_Callback>:
    if (GPIO_Pin == TS_INT_PIN)
 8001710:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
{
 8001714:	b508      	push	{r3, lr}
    if (GPIO_Pin == TS_INT_PIN)
 8001716:	d10d      	bne.n	8001734 <HAL_GPIO_EXTI_Falling_Callback+0x24>
        if (_initialized)
 8001718:	4b07      	ldr	r3, [pc, #28]	@ (8001738 <HAL_GPIO_EXTI_Falling_Callback+0x28>)
 800171a:	781b      	ldrb	r3, [r3, #0]
 800171c:	b153      	cbz	r3, 8001734 <HAL_GPIO_EXTI_Falling_Callback+0x24>
            if (BSP_TS_GetState(0, &state) != BSP_ERROR_NONE)
 800171e:	2000      	movs	r0, #0
 8001720:	4906      	ldr	r1, [pc, #24]	@ (800173c <HAL_GPIO_EXTI_Falling_Callback+0x2c>)
 8001722:	f002 fdc9 	bl	80042b8 <BSP_TS_GetState>
 8001726:	b128      	cbz	r0, 8001734 <HAL_GPIO_EXTI_Falling_Callback+0x24>
                assert(0 && "Failed to read TS state");
 8001728:	213b      	movs	r1, #59	@ 0x3b
 800172a:	4b05      	ldr	r3, [pc, #20]	@ (8001740 <HAL_GPIO_EXTI_Falling_Callback+0x30>)
 800172c:	4a05      	ldr	r2, [pc, #20]	@ (8001744 <HAL_GPIO_EXTI_Falling_Callback+0x34>)
 800172e:	4806      	ldr	r0, [pc, #24]	@ (8001748 <HAL_GPIO_EXTI_Falling_Callback+0x38>)
 8001730:	f023 fb00 	bl	8024d34 <__assert_func>
}
 8001734:	bd08      	pop	{r3, pc}
 8001736:	bf00      	nop
 8001738:	200005d0 	.word	0x200005d0
 800173c:	200005c4 	.word	0x200005c4
 8001740:	08026128 	.word	0x08026128
 8001744:	08026147 	.word	0x08026147
 8001748:	08026175 	.word	0x08026175

0800174c <_ZN8touchgfx4GPIO4initEv>:
 * Perform configuration of IO pins.
 */
void GPIO::init()
{

}
 800174c:	4770      	bx	lr
	...

08001750 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001750:	2803      	cmp	r0, #3
 8001752:	d814      	bhi.n	800177e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2e>
 8001754:	e8df f000 	tbb	[pc, r0]
 8001758:	0f0a0702 	.word	0x0f0a0702
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
 800175c:	2201      	movs	r2, #1
 800175e:	2102      	movs	r1, #2
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_SET);
 8001760:	4807      	ldr	r0, [pc, #28]	@ (8001780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x30>)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_SET);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
 8001762:	f004 b939 	b.w	80059d8 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_SET);
 8001766:	2201      	movs	r2, #1
 8001768:	4611      	mov	r1, r2
 800176a:	e7f9      	b.n	8001760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x10>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_SET);
 800176c:	2201      	movs	r2, #1
 800176e:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
 8001772:	4804      	ldr	r0, [pc, #16]	@ (8001784 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x34>)
 8001774:	e7f5      	b.n	8001762 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x12>
 8001776:	2201      	movs	r2, #1
 8001778:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800177c:	e7f9      	b.n	8001772 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x22>
#endif
        break;
    }
}
 800177e:	4770      	bx	lr
 8001780:	42020c00 	.word	0x42020c00
 8001784:	42021400 	.word	0x42021400

08001788 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001788:	2803      	cmp	r0, #3
 800178a:	d814      	bhi.n	80017b6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2e>
 800178c:	e8df f000 	tbb	[pc, r0]
 8001790:	0f0a0702 	.word	0x0f0a0702
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 8001794:	2200      	movs	r2, #0
 8001796:	2102      	movs	r1, #2
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_RESET);
 8001798:	4807      	ldr	r0, [pc, #28]	@ (80017b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x30>)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_RESET);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 800179a:	f004 b91d 	b.w	80059d8 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_RESET);
 800179e:	2200      	movs	r2, #0
 80017a0:	2101      	movs	r1, #1
 80017a2:	e7f9      	b.n	8001798 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x10>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_RESET);
 80017a4:	2200      	movs	r2, #0
 80017a6:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80017aa:	4804      	ldr	r0, [pc, #16]	@ (80017bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x34>)
 80017ac:	e7f5      	b.n	800179a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x12>
 80017ae:	2200      	movs	r2, #0
 80017b0:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80017b4:	e7f9      	b.n	80017aa <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x22>
#endif
        break;
    }
}
 80017b6:	4770      	bx	lr
 80017b8:	42020c00 	.word	0x42020c00
 80017bc:	42021400 	.word	0x42021400

080017c0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80017c0:	2803      	cmp	r0, #3
 80017c2:	d810      	bhi.n	80017e6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x26>
 80017c4:	e8df f000 	tbb	[pc, r0]
 80017c8:	0c080602 	.word	0x0c080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80017cc:	2102      	movs	r1, #2
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80017ce:	4806      	ldr	r0, [pc, #24]	@ (80017e8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80017d0:	f004 b907 	b.w	80059e2 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80017d4:	2101      	movs	r1, #1
 80017d6:	e7fa      	b.n	80017ce <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80017d8:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80017dc:	4803      	ldr	r0, [pc, #12]	@ (80017ec <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>)
 80017de:	e7f7      	b.n	80017d0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80017e0:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80017e4:	e7fa      	b.n	80017dc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1c>
#endif
        break;
    }
}
 80017e6:	4770      	bx	lr
 80017e8:	42020c00 	.word	0x42020c00
 80017ec:	42021400 	.word	0x42021400

080017f0 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80017f0:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80017f2:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 80017f6:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 80017fa:	4770      	bx	lr

080017fc <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80017fc:	2000      	movs	r0, #0
 80017fe:	4770      	bx	lr

08001800 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001800:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001802:	3900      	subs	r1, #0
 8001804:	bf18      	it	ne
 8001806:	2101      	movne	r1, #1
 8001808:	4b01      	ldr	r3, [pc, #4]	@ (8001810 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
 800180a:	7019      	strb	r1, [r3, #0]
    }
 800180c:	4770      	bx	lr
 800180e:	bf00      	nop
 8001810:	2004bf97 	.word	0x2004bf97

08001814 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001814:	2000      	movs	r0, #0
 8001816:	4770      	bx	lr

08001818 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001818:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 800181a:	b10b      	cbz	r3, 8001820 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800181c:	4608      	mov	r0, r1
 800181e:	4718      	bx	r3
        }
    }
 8001820:	4770      	bx	lr

08001822 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001822:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8001826:	4770      	bx	lr

08001828 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001828:	6840      	ldr	r0, [r0, #4]
 800182a:	6803      	ldr	r3, [r0, #0]
 800182c:	699b      	ldr	r3, [r3, #24]
 800182e:	4718      	bx	r3

08001830 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001830:	4770      	bx	lr

08001832 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001832:	4770      	bx	lr

08001834 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001834:	4770      	bx	lr
	...

08001838 <_ZN11TouchGFXHAL10initializeEv>:
using namespace touchgfx;

KeySampler btnctrl;

void TouchGFXHAL::initialize()
{
 8001838:	b538      	push	{r3, r4, r5, lr}
 800183a:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800183c:	f000 fcc4 	bl	80021c8 <_ZN20TouchGFXGeneratedHAL10initializeEv>
        buttonController = btnCtrl;
 8001840:	4b08      	ldr	r3, [pc, #32]	@ (8001864 <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    setButtonController(&btnctrl);
    lockDMAToFrontPorch(false);
    GPIO::init();
    instrumentation.init();
 8001842:	f104 05a8 	add.w	r5, r4, #168	@ 0xa8
 8001846:	6163      	str	r3, [r4, #20]
        lockDMAToPorch = enableLock;
 8001848:	2300      	movs	r3, #0
 800184a:	f884 304a 	strb.w	r3, [r4, #74]	@ 0x4a
    GPIO::init();
 800184e:	f7ff ff7d 	bl	800174c <_ZN8touchgfx4GPIO4initEv>
    instrumentation.init();
 8001852:	4628      	mov	r0, r5
 8001854:	f7ff fec0 	bl	80015d8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8001858:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
 800185a:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
 800185c:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
    setMCUInstrumentation(&instrumentation);
    enableMCULoadCalculation(true);
}
 8001860:	bd38      	pop	{r3, r4, r5, pc}
 8001862:	bf00      	nop
 8001864:	200005d4 	.word	0x200005d4

08001868 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001868:	f000 bca0 	b.w	80021ac <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

0800186c <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 800186c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    __HAL_DSI_WRAPPER_DISABLE(&hdsi);
 800186e:	2500      	movs	r5, #0
 8001870:	4c10      	ldr	r4, [pc, #64]	@ (80018b4 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt+0x48>)
 8001872:	9500      	str	r5, [sp, #0]
 8001874:	6823      	ldr	r3, [r4, #0]
 8001876:	f8d3 2404 	ldr.w	r2, [r3, #1028]	@ 0x404
 800187a:	f022 0208 	bic.w	r2, r2, #8
 800187e:	f8c3 2404 	str.w	r2, [r3, #1028]	@ 0x404
 8001882:	f8d3 3404 	ldr.w	r3, [r3, #1028]	@ 0x404
 8001886:	f003 0308 	and.w	r3, r3, #8
 800188a:	9300      	str	r3, [sp, #0]
 800188c:	9b00      	ldr	r3, [sp, #0]
    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800188e:	f000 fc93 	bl	80021b8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
    __HAL_DSI_WRAPPER_ENABLE(&hdsi);
 8001892:	6823      	ldr	r3, [r4, #0]
 8001894:	9501      	str	r5, [sp, #4]
 8001896:	f8d3 2404 	ldr.w	r2, [r3, #1028]	@ 0x404
 800189a:	f042 0208 	orr.w	r2, r2, #8
 800189e:	f8c3 2404 	str.w	r2, [r3, #1028]	@ 0x404
 80018a2:	f8d3 3404 	ldr.w	r3, [r3, #1028]	@ 0x404
 80018a6:	f003 0308 	and.w	r3, r3, #8
 80018aa:	9301      	str	r3, [sp, #4]
 80018ac:	9b01      	ldr	r3, [sp, #4]
}
 80018ae:	b003      	add	sp, #12
 80018b0:	bd30      	pop	{r4, r5, pc}
 80018b2:	bf00      	nop
 80018b4:	20000470 	.word	0x20000470

080018b8 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate he start adress of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80018b8:	f000 bca6 	b.w	8002208 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080018bc <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 80018bc:	f000 bca6 	b.w	800220c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

080018c0 <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 80018c0:	b508      	push	{r3, lr}
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    TouchGFXGeneratedHAL::configureInterrupts();
 80018c2:	f000 fc4d 	bl	8002160 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80018c6:	2290      	movs	r2, #144	@ 0x90
 80018c8:	4b01      	ldr	r3, [pc, #4]	@ (80018d0 <_ZN11TouchGFXHAL19configureInterruptsEv+0x10>)
 80018ca:	f883 2389 	strb.w	r2, [r3, #905]	@ 0x389
    NVIC_SetPriority(DSI_IRQn, 9);
}
 80018ce:	bd08      	pop	{r3, pc}
 80018d0:	e000e100 	.word	0xe000e100

080018d4 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80018d4:	f000 bc50 	b.w	8002178 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080018d8 <_ZN11TouchGFXHAL10beginFrameEv>:
}

bool TouchGFXHAL::beginFrame()
{
    return TouchGFXGeneratedHAL::beginFrame();
 80018d8:	f000 bc92 	b.w	8002200 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>

080018dc <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
    if (!display_on)
 80018dc:	4b0d      	ldr	r3, [pc, #52]	@ (8001914 <_ZN11TouchGFXHAL8endFrameEv+0x38>)
{
 80018de:	b537      	push	{r0, r1, r2, r4, r5, lr}
    if (!display_on)
 80018e0:	7819      	ldrb	r1, [r3, #0]
{
 80018e2:	4604      	mov	r4, r0
    if (!display_on)
 80018e4:	b979      	cbnz	r1, 8001906 <_ZN11TouchGFXHAL8endFrameEv+0x2a>
    {
        display_on = true;
 80018e6:	2201      	movs	r2, #1
        /* Enable the LCD, Send Display on DCS command to display */
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, DSI_SET_DISPLAY_ON, 0x00);
        /* Start PWM Timer channel */
        (void)HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_2);
 80018e8:	4d0b      	ldr	r5, [pc, #44]	@ (8001918 <_ZN11TouchGFXHAL8endFrameEv+0x3c>)
        display_on = true;
 80018ea:	701a      	strb	r2, [r3, #0]
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, DSI_SET_DISPLAY_ON, 0x00);
 80018ec:	480b      	ldr	r0, [pc, #44]	@ (800191c <_ZN11TouchGFXHAL8endFrameEv+0x40>)
 80018ee:	2329      	movs	r3, #41	@ 0x29
 80018f0:	2215      	movs	r2, #21
 80018f2:	9100      	str	r1, [sp, #0]
 80018f4:	f003 fd11 	bl	800531a <HAL_DSI_ShortWrite>
        (void)HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_2);
 80018f8:	2104      	movs	r1, #4
 80018fa:	4628      	mov	r0, r5
 80018fc:	f008 fe8c 	bl	800a618 <HAL_TIM_PWM_Start>
        /* Enable Backlight by setting Brightness to 100% */
        __HAL_TIM_SET_COMPARE(&htim8, TIM_CHANNEL_2, 2U * 100);
 8001900:	22c8      	movs	r2, #200	@ 0xc8
 8001902:	682b      	ldr	r3, [r5, #0]
 8001904:	639a      	str	r2, [r3, #56]	@ 0x38
    }

    TouchGFXGeneratedHAL::endFrame();
 8001906:	4620      	mov	r0, r4
}
 8001908:	b003      	add	sp, #12
 800190a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    TouchGFXGeneratedHAL::endFrame();
 800190e:	f000 bc79 	b.w	8002204 <_ZN20TouchGFXGeneratedHAL8endFrameEv>
 8001912:	bf00      	nop
 8001914:	200005dc 	.word	0x200005dc
 8001918:	20000314 	.word	0x20000314
 800191c:	20000470 	.word	0x20000470

08001920 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001920:	b510      	push	{r4, lr}
 8001922:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001924:	f00c fc98 	bl	800e258 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001928:	6823      	ldr	r3, [r4, #0]
 800192a:	4620      	mov	r0, r4
    }
 800192c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001930:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 8001934:	4718      	bx	r3

08001936 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001936:	f00b bee1 	b.w	800d6fc <_ZN8touchgfx3HAL16flushFrameBufferEv>

0800193a <_ZN11TouchGFXHALD0Ev>:
 800193a:	b510      	push	{r4, lr}
 800193c:	4604      	mov	r4, r0
 800193e:	21b4      	movs	r1, #180	@ 0xb4
 8001940:	f023 f9cb 	bl	8024cda <_ZdlPvj>
 8001944:	4620      	mov	r0, r4
 8001946:	bd10      	pop	{r4, pc}

08001948 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8001948:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800194a:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 800194e:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 8001952:	4b0c      	ldr	r3, [pc, #48]	@ (8001984 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8001954:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8001956:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001958:	d009      	beq.n	800196e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800195a:	b93a      	cbnz	r2, 800196c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                const uint16_t tmp = DISPLAY_HEIGHT;
 800195c:	490a      	ldr	r1, [pc, #40]	@ (8001988 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800195e:	4a0b      	ldr	r2, [pc, #44]	@ (800198c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001960:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001962:	8814      	ldrh	r4, [r2, #0]
                DISPLAY_WIDTH = tmp;
 8001964:	8010      	strh	r0, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 8001966:	2201      	movs	r2, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001968:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 800196a:	701a      	strb	r2, [r3, #0]
    }
 800196c:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800196e:	2a00      	cmp	r2, #0
 8001970:	d0fc      	beq.n	800196c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001972:	4a06      	ldr	r2, [pc, #24]	@ (800198c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001974:	4904      	ldr	r1, [pc, #16]	@ (8001988 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001976:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001978:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800197a:	800c      	strh	r4, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800197c:	8010      	strh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 800197e:	2200      	movs	r2, #0
 8001980:	e7f3      	b.n	800196a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8001982:	bf00      	nop
 8001984:	2004bf90 	.word	0x2004bf90
 8001988:	2004bf8e 	.word	0x2004bf8e
 800198c:	2004bf8c 	.word	0x2004bf8c

08001990 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8001990:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8001992:	4b09      	ldr	r3, [pc, #36]	@ (80019b8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001994:	881b      	ldrh	r3, [r3, #0]
 8001996:	428b      	cmp	r3, r1
 8001998:	d803      	bhi.n	80019a2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 800199a:	4b08      	ldr	r3, [pc, #32]	@ (80019bc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 800199c:	881b      	ldrh	r3, [r3, #0]
 800199e:	4293      	cmp	r3, r2
 80019a0:	d905      	bls.n	80019ae <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80019a2:	219e      	movs	r1, #158	@ 0x9e
 80019a4:	4b06      	ldr	r3, [pc, #24]	@ (80019c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80019a6:	4a07      	ldr	r2, [pc, #28]	@ (80019c4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80019a8:	4807      	ldr	r0, [pc, #28]	@ (80019c8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80019aa:	f023 f9c3 	bl	8024d34 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80019ae:	4b07      	ldr	r3, [pc, #28]	@ (80019cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80019b0:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80019b2:	4b07      	ldr	r3, [pc, #28]	@ (80019d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80019b4:	801a      	strh	r2, [r3, #0]
    }
 80019b6:	bd08      	pop	{r3, pc}
 80019b8:	2004bf8c 	.word	0x2004bf8c
 80019bc:	2004bf8e 	.word	0x2004bf8e
 80019c0:	080261d4 	.word	0x080261d4
 80019c4:	08026237 	.word	0x08026237
 80019c8:	0802627a 	.word	0x0802627a
 80019cc:	2004bf92 	.word	0x2004bf92
 80019d0:	2004bf94 	.word	0x2004bf94

080019d4 <_ZN11TouchGFXHAL17disableInterruptsEv>:
{
 80019d4:	b508      	push	{r3, lr}
    TouchGFXGeneratedHAL::disableInterrupts();
 80019d6:	f000 fc3b 	bl	8002250 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80019da:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80019de:	4b04      	ldr	r3, [pc, #16]	@ (80019f0 <_ZN11TouchGFXHAL17disableInterruptsEv+0x1c>)
 80019e0:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
  __ASM volatile ("dsb 0xF":::"memory");
 80019e4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80019e8:	f3bf 8f6f 	isb	sy
}
 80019ec:	bd08      	pop	{r3, pc}
 80019ee:	bf00      	nop
 80019f0:	e000e100 	.word	0xe000e100

080019f4 <_ZN11TouchGFXHAL16enableInterruptsEv>:
{
 80019f4:	b508      	push	{r3, lr}
    TouchGFXGeneratedHAL::enableInterrupts();
 80019f6:	f000 fc45 	bl	8002284 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80019fa:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80019fe:	4b01      	ldr	r3, [pc, #4]	@ (8001a04 <_ZN11TouchGFXHAL16enableInterruptsEv+0x10>)
 8001a00:	611a      	str	r2, [r3, #16]
}
 8001a02:	bd08      	pop	{r3, pc}
 8001a04:	e000e100 	.word	0xe000e100

08001a08 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8001a08:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8001a0a:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8001a0e:	b118      	cbz	r0, 8001a18 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8001a10:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 8001a12:	6803      	ldr	r3, [r0, #0]
 8001a14:	681b      	ldr	r3, [r3, #0]
 8001a16:	4718      	bx	r3
    }
 8001a18:	4770      	bx	lr
	...

08001a1c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 8001a1c:	b573      	push	{r0, r1, r4, r5, r6, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8001a1e:	460c      	mov	r4, r1
 8001a20:	b931      	cbnz	r1, 8001a30 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x14>
 8001a22:	f240 21d2 	movw	r1, #722	@ 0x2d2
 8001a26:	4b1b      	ldr	r3, [pc, #108]	@ (8001a94 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x78>)
 8001a28:	4a1b      	ldr	r2, [pc, #108]	@ (8001a98 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x7c>)
 8001a2a:	481c      	ldr	r0, [pc, #112]	@ (8001a9c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x80>)
 8001a2c:	f023 f982 	bl	8024d34 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001a30:	e9c0 120f 	strd	r1, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8001a34:	3a00      	subs	r2, #0
 8001a36:	bf18      	it	ne
 8001a38:	2201      	movne	r2, #1
    __HAL_DSI_WRAPPER_DISABLE(&hdsi);
 8001a3a:	2500      	movs	r5, #0
 8001a3c:	4918      	ldr	r1, [pc, #96]	@ (8001aa0 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x84>)
 8001a3e:	4e19      	ldr	r6, [pc, #100]	@ (8001aa4 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x88>)
 8001a40:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
 8001a42:	6802      	ldr	r2, [r0, #0]
 8001a44:	4619      	mov	r1, r3
 8001a46:	f8d2 208c 	ldr.w	r2, [r2, #140]	@ 0x8c
 8001a4a:	4790      	blx	r2
 8001a4c:	6833      	ldr	r3, [r6, #0]
 8001a4e:	9500      	str	r5, [sp, #0]
 8001a50:	f8d3 2404 	ldr.w	r2, [r3, #1028]	@ 0x404
    (void)HAL_LTDC_SetAddress(&hltdc, (uint32_t)frameBuffer, 0);
 8001a54:	4621      	mov	r1, r4
    __HAL_DSI_WRAPPER_DISABLE(&hdsi);
 8001a56:	f022 0208 	bic.w	r2, r2, #8
 8001a5a:	f8c3 2404 	str.w	r2, [r3, #1028]	@ 0x404
 8001a5e:	f8d3 3404 	ldr.w	r3, [r3, #1028]	@ 0x404
    (void)HAL_LTDC_SetAddress(&hltdc, (uint32_t)frameBuffer, 0);
 8001a62:	462a      	mov	r2, r5
    __HAL_DSI_WRAPPER_DISABLE(&hdsi);
 8001a64:	f003 0308 	and.w	r3, r3, #8
 8001a68:	9300      	str	r3, [sp, #0]
    (void)HAL_LTDC_SetAddress(&hltdc, (uint32_t)frameBuffer, 0);
 8001a6a:	480f      	ldr	r0, [pc, #60]	@ (8001aa8 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x8c>)
    __HAL_DSI_WRAPPER_DISABLE(&hdsi);
 8001a6c:	9b00      	ldr	r3, [sp, #0]
    (void)HAL_LTDC_SetAddress(&hltdc, (uint32_t)frameBuffer, 0);
 8001a6e:	f004 fe4d 	bl	800670c <HAL_LTDC_SetAddress>
    __HAL_DSI_WRAPPER_ENABLE(&hdsi);
 8001a72:	6833      	ldr	r3, [r6, #0]
 8001a74:	9501      	str	r5, [sp, #4]
 8001a76:	f8d3 2404 	ldr.w	r2, [r3, #1028]	@ 0x404
 8001a7a:	f042 0208 	orr.w	r2, r2, #8
 8001a7e:	f8c3 2404 	str.w	r2, [r3, #1028]	@ 0x404
 8001a82:	f8d3 3404 	ldr.w	r3, [r3, #1028]	@ 0x404
 8001a86:	f003 0308 	and.w	r3, r3, #8
 8001a8a:	9301      	str	r3, [sp, #4]
 8001a8c:	9b01      	ldr	r3, [sp, #4]
}
 8001a8e:	b002      	add	sp, #8
 8001a90:	bd70      	pop	{r4, r5, r6, pc}
 8001a92:	bf00      	nop
 8001a94:	080262bf 	.word	0x080262bf
 8001a98:	080262f7 	.word	0x080262f7
 8001a9c:	0802627a 	.word	0x0802627a
 8001aa0:	2004bf96 	.word	0x2004bf96
 8001aa4:	20000470 	.word	0x20000470
 8001aa8:	200003bc 	.word	0x200003bc

08001aac <IdleTaskHook>:

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
 8001aac:	4601      	mov	r1, r0
 8001aae:	b508      	push	{r3, lr}
        return instance;
 8001ab0:	4b03      	ldr	r3, [pc, #12]	@ (8001ac0 <IdleTaskHook+0x14>)
 8001ab2:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8001ab4:	b101      	cbz	r1, 8001ab8 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8001ab6:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8001ab8:	f00c fbe8 	bl	800e28c <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8001abc:	2001      	movs	r0, #1
 8001abe:	bd08      	pop	{r3, pc}
 8001ac0:	2004bf98 	.word	0x2004bf98

08001ac4 <_GLOBAL__sub_I_btnctrl>:
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 8001ac4:	4802      	ldr	r0, [pc, #8]	@ (8001ad0 <_GLOBAL__sub_I_btnctrl+0xc>)
 8001ac6:	4b03      	ldr	r3, [pc, #12]	@ (8001ad4 <_GLOBAL__sub_I_btnctrl+0x10>)
 8001ac8:	6003      	str	r3, [r0, #0]
        init();
 8001aca:	f7ff bdc2 	b.w	8001652 <_ZN8touchgfx10KeySampler4initEv>
 8001ace:	bf00      	nop
 8001ad0:	200005d4 	.word	0x200005d4
 8001ad4:	08026114 	.word	0x08026114

08001ad8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001ad8:	2101      	movs	r1, #1
{
 8001ada:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001adc:	2200      	movs	r2, #0
 8001ade:	4608      	mov	r0, r1
 8001ae0:	f009 fc49 	bl	800b376 <osSemaphoreNew>
 8001ae4:	4b0a      	ldr	r3, [pc, #40]	@ (8001b10 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8001ae6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001ae8:	b928      	cbnz	r0, 8001af6 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8001aea:	2128      	movs	r1, #40	@ 0x28
 8001aec:	4b09      	ldr	r3, [pc, #36]	@ (8001b14 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001aee:	4a0a      	ldr	r2, [pc, #40]	@ (8001b18 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001af0:	480a      	ldr	r0, [pc, #40]	@ (8001b1c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001af2:	f023 f91f 	bl	8024d34 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001af6:	2200      	movs	r2, #0
 8001af8:	2104      	movs	r1, #4
 8001afa:	2001      	movs	r0, #1
 8001afc:	f009 fce0 	bl	800b4c0 <osMessageQueueNew>
 8001b00:	4b07      	ldr	r3, [pc, #28]	@ (8001b20 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8001b02:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001b04:	b918      	cbnz	r0, 8001b0e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001b06:	212c      	movs	r1, #44	@ 0x2c
 8001b08:	4b06      	ldr	r3, [pc, #24]	@ (8001b24 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001b0a:	4a03      	ldr	r2, [pc, #12]	@ (8001b18 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001b0c:	e7f0      	b.n	8001af0 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8001b0e:	bd08      	pop	{r3, pc}
 8001b10:	200005e4 	.word	0x200005e4
 8001b14:	08026420 	.word	0x08026420
 8001b18:	08026469 	.word	0x08026469
 8001b1c:	08026498 	.word	0x08026498
 8001b20:	200005e0 	.word	0x200005e0
 8001b24:	080264dd 	.word	0x080264dd

08001b28 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001b28:	4b02      	ldr	r3, [pc, #8]	@ (8001b34 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8001b2a:	f04f 31ff 	mov.w	r1, #4294967295
 8001b2e:	6818      	ldr	r0, [r3, #0]
 8001b30:	f009 bc70 	b.w	800b414 <osSemaphoreAcquire>
 8001b34:	200005e4 	.word	0x200005e4

08001b38 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001b38:	4b01      	ldr	r3, [pc, #4]	@ (8001b40 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8001b3a:	6818      	ldr	r0, [r3, #0]
 8001b3c:	f009 bc98 	b.w	800b470 <osSemaphoreRelease>
 8001b40:	200005e4 	.word	0x200005e4

08001b44 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8001b44:	4b02      	ldr	r3, [pc, #8]	@ (8001b50 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8001b46:	2100      	movs	r1, #0
 8001b48:	6818      	ldr	r0, [r3, #0]
 8001b4a:	f009 bc63 	b.w	800b414 <osSemaphoreAcquire>
 8001b4e:	bf00      	nop
 8001b50:	200005e4 	.word	0x200005e4

08001b54 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8001b54:	f7ff bff0 	b.w	8001b38 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08001b58 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001b58:	2300      	movs	r3, #0
 8001b5a:	4803      	ldr	r0, [pc, #12]	@ (8001b68 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8001b5c:	461a      	mov	r2, r3
 8001b5e:	4903      	ldr	r1, [pc, #12]	@ (8001b6c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8001b60:	6800      	ldr	r0, [r0, #0]
 8001b62:	f009 bcec 	b.w	800b53e <osMessageQueuePut>
 8001b66:	bf00      	nop
 8001b68:	200005e0 	.word	0x200005e0
 8001b6c:	20000004 	.word	0x20000004

08001b70 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 */
void OSWrappers::waitForVSync()
{
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8001b70:	2300      	movs	r3, #0
{
 8001b72:	b513      	push	{r0, r1, r4, lr}
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8001b74:	4c07      	ldr	r4, [pc, #28]	@ (8001b94 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8001b76:	461a      	mov	r2, r3
 8001b78:	a901      	add	r1, sp, #4
 8001b7a:	6820      	ldr	r0, [r4, #0]
 8001b7c:	f009 fd13 	bl	800b5a6 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8001b80:	f04f 33ff 	mov.w	r3, #4294967295
 8001b84:	2200      	movs	r2, #0
 8001b86:	6820      	ldr	r0, [r4, #0]
 8001b88:	a901      	add	r1, sp, #4
 8001b8a:	f009 fd0c 	bl	800b5a6 <osMessageQueueGet>
}
 8001b8e:	b002      	add	sp, #8
 8001b90:	bd10      	pop	{r4, pc}
 8001b92:	bf00      	nop
 8001b94:	200005e0 	.word	0x200005e0

08001b98 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001b98:	6803      	ldr	r3, [r0, #0]
 8001b9a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001b9c:	4718      	bx	r3

08001b9e <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8001b9e:	2001      	movs	r0, #1
 8001ba0:	4770      	bx	lr

08001ba2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8001ba2:	6803      	ldr	r3, [r0, #0]
 8001ba4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001ba6:	4718      	bx	r3

08001ba8 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001ba8:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 8001bac:	4770      	bx	lr
	...

08001bb0 <_ZN8STM32DMAD1Ev>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001bb0:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
STM32DMA::~STM32DMA()
 8001bb4:	4b04      	ldr	r3, [pc, #16]	@ (8001bc8 <_ZN8STM32DMAD1Ev+0x18>)
 8001bb6:	6003      	str	r3, [r0, #0]
 8001bb8:	4b04      	ldr	r3, [pc, #16]	@ (8001bcc <_ZN8STM32DMAD1Ev+0x1c>)
 8001bba:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  __ASM volatile ("dsb 0xF":::"memory");
 8001bbe:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001bc2:	f3bf 8f6f 	isb	sy
}
 8001bc6:	4770      	bx	lr
 8001bc8:	08026674 	.word	0x08026674
 8001bcc:	e000e100 	.word	0xe000e100

08001bd0 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001bd0:	b510      	push	{r4, lr}
 8001bd2:	4604      	mov	r4, r0
}
 8001bd4:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8001bd8:	f7ff ffea 	bl	8001bb0 <_ZN8STM32DMAD1Ev>
 8001bdc:	4620      	mov	r0, r4
 8001bde:	f023 f87c 	bl	8024cda <_ZdlPvj>
 8001be2:	4620      	mov	r0, r4
 8001be4:	bd10      	pop	{r4, pc}
	...

08001be8 <_ZN8STM32DMA10initializeEv>:
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001be8:	4b0f      	ldr	r3, [pc, #60]	@ (8001c28 <_ZN8STM32DMA10initializeEv+0x40>)
{
 8001bea:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001bec:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8001bf0:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 8001bf4:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8001bf8:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8001bfc:	f402 2280 	and.w	r2, r2, #262144	@ 0x40000
 8001c00:	9201      	str	r2, [sp, #4]
 8001c02:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8001c04:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 8001c06:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 8001c0a:	661a      	str	r2, [r3, #96]	@ 0x60
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8001c0c:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 8001c0e:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8001c12:	661a      	str	r2, [r3, #96]	@ 0x60
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8001c14:	4b05      	ldr	r3, [pc, #20]	@ (8001c2c <_ZN8STM32DMA10initializeEv+0x44>)
 8001c16:	4a06      	ldr	r2, [pc, #24]	@ (8001c30 <_ZN8STM32DMA10initializeEv+0x48>)
 8001c18:	621a      	str	r2, [r3, #32]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001c1a:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8001c1e:	4b05      	ldr	r3, [pc, #20]	@ (8001c34 <_ZN8STM32DMA10initializeEv+0x4c>)
 8001c20:	60da      	str	r2, [r3, #12]
}
 8001c22:	b002      	add	sp, #8
 8001c24:	4770      	bx	lr
 8001c26:	bf00      	nop
 8001c28:	46020c00 	.word	0x46020c00
 8001c2c:	20000494 	.word	0x20000494
 8001c30:	08001e7d 	.word	0x08001e7d
 8001c34:	e000e100 	.word	0xe000e100

08001c38 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8001c38:	b508      	push	{r3, lr}
    switch (format)
 8001c3a:	280a      	cmp	r0, #10
 8001c3c:	d809      	bhi.n	8001c52 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8001c3e:	e8df f000 	tbb	[pc, r0]
 8001c42:	1006      	.short	0x1006
 8001c44:	0808080e 	.word	0x0808080e
 8001c48:	10101008 	.word	0x10101008
 8001c4c:	10          	.byte	0x10
 8001c4d:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8001c4e:	2002      	movs	r0, #2
}
 8001c50:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8001c52:	2186      	movs	r1, #134	@ 0x86
 8001c54:	4b04      	ldr	r3, [pc, #16]	@ (8001c68 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8001c56:	4a05      	ldr	r2, [pc, #20]	@ (8001c6c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8001c58:	4805      	ldr	r0, [pc, #20]	@ (8001c70 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8001c5a:	f023 f86b 	bl	8024d34 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8001c5e:	2000      	movs	r0, #0
 8001c60:	e7f6      	b.n	8001c50 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8001c62:	2001      	movs	r0, #1
    return dma2dColorMode;
 8001c64:	e7f4      	b.n	8001c50 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8001c66:	bf00      	nop
 8001c68:	0802651f 	.word	0x0802651f
 8001c6c:	0802653a 	.word	0x0802653a
 8001c70:	08026585 	.word	0x08026585

08001c74 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8001c74:	b538      	push	{r3, r4, r5, lr}
 8001c76:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001c78:	7f88      	ldrb	r0, [r1, #30]
 8001c7a:	f7ff ffdd 	bl	8001c38 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001c7e:	8aa5      	ldrh	r5, [r4, #20]
 8001c80:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001c82:	4b11      	ldr	r3, [pc, #68]	@ (8001cc8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x54>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001c84:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001c88:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001c8a:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001c8c:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001c8e:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001c90:	1b52      	subs	r2, r2, r5
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001c92:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001c94:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8001c96:	6825      	ldr	r5, [r4, #0]
 8001c98:	2d08      	cmp	r5, #8
 8001c9a:	d10e      	bne.n	8001cba <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001c9c:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001c9e:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001ca0:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001ca2:	7f20      	ldrb	r0, [r4, #28]
 8001ca4:	4a09      	ldr	r2, [pc, #36]	@ (8001ccc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x58>)
 8001ca6:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001caa:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8001cac:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001cae:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8001cb0:	4a07      	ldr	r2, [pc, #28]	@ (8001cd0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x5c>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001cb2:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001cb4:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, blitOp.color);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001cb6:	601a      	str	r2, [r3, #0]
    }
}
 8001cb8:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8001cba:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001cbc:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8001cbe:	611a      	str	r2, [r3, #16]
 8001cc0:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, blitOp.color);
 8001cc2:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001cc4:	4a03      	ldr	r2, [pc, #12]	@ (8001cd4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x60>)
 8001cc6:	e7f6      	b.n	8001cb6 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8001cc8:	4002b000 	.word	0x4002b000
 8001ccc:	00010009 	.word	0x00010009
 8001cd0:	00020201 	.word	0x00020201
 8001cd4:	00030201 	.word	0x00030201

08001cd8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8001cd8:	b508      	push	{r3, lr}
    switch (format)
 8001cda:	280b      	cmp	r0, #11
 8001cdc:	d80b      	bhi.n	8001cf6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8001cde:	e8df f000 	tbb	[pc, r0]
 8001ce2:	1206      	.short	0x1206
 8001ce4:	0a0a0a10 	.word	0x0a0a0a10
 8001ce8:	0808080a 	.word	0x0808080a
 8001cec:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8001cee:	2002      	movs	r0, #2
}
 8001cf0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8001cf2:	2005      	movs	r0, #5
        break;
 8001cf4:	e7fc      	b.n	8001cf0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8001cf6:	2165      	movs	r1, #101	@ 0x65
 8001cf8:	4b04      	ldr	r3, [pc, #16]	@ (8001d0c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8001cfa:	4a05      	ldr	r2, [pc, #20]	@ (8001d10 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8001cfc:	4805      	ldr	r0, [pc, #20]	@ (8001d14 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8001cfe:	f023 f819 	bl	8024d34 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8001d02:	2000      	movs	r0, #0
 8001d04:	e7f4      	b.n	8001cf0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8001d06:	2001      	movs	r0, #1
    return dma2dColorMode;
 8001d08:	e7f2      	b.n	8001cf0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8001d0a:	bf00      	nop
 8001d0c:	0802651f 	.word	0x0802651f
 8001d10:	080265c8 	.word	0x080265c8
 8001d14:	08026585 	.word	0x08026585

08001d18 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 8001d18:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001d1c:	7f4f      	ldrb	r7, [r1, #29]
{
 8001d1e:	4689      	mov	r9, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001d20:	4638      	mov	r0, r7
 8001d22:	f7ff ffd9 	bl	8001cd8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001d26:	f899 501e 	ldrb.w	r5, [r9, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001d2a:	4680      	mov	r8, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001d2c:	4628      	mov	r0, r5
 8001d2e:	f7ff ffd3 	bl	8001cd8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8001d32:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001d34:	4628      	mov	r0, r5
 8001d36:	f7ff ff7f 	bl	8001c38 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001d3a:	f8b9 1014 	ldrh.w	r1, [r9, #20]
 8001d3e:	f8b9 401a 	ldrh.w	r4, [r9, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001d42:	f8b9 2018 	ldrh.w	r2, [r9, #24]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001d46:	4b45      	ldr	r3, [pc, #276]	@ (8001e5c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8001d48:	1a64      	subs	r4, r4, r1
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001d4a:	1a52      	subs	r2, r2, r1
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001d4c:	641c      	str	r4, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001d4e:	619c      	str	r4, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001d50:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001d52:	f8b9 2016 	ldrh.w	r2, [r9, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001d56:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001d58:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8001d5c:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001d5e:	f8d9 1010 	ldr.w	r1, [r9, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001d62:	f8d9 2004 	ldr.w	r2, [r9, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001d66:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001d68:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 8001d6a:	f8d9 4000 	ldr.w	r4, [r9]
 8001d6e:	f899 201c 	ldrb.w	r2, [r9, #28]
 8001d72:	2c80      	cmp	r4, #128	@ 0x80
 8001d74:	d022      	beq.n	8001dbc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa4>
 8001d76:	d80f      	bhi.n	8001d98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 8001d78:	2c20      	cmp	r4, #32
 8001d7a:	d066      	beq.n	8001e4a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x132>
 8001d7c:	2c40      	cmp	r4, #64	@ 0x40
 8001d7e:	d064      	beq.n	8001e4a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x132>
 8001d80:	2c04      	cmp	r4, #4
 8001d82:	d05c      	beq.n	8001e3e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x126>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001d84:	4b35      	ldr	r3, [pc, #212]	@ (8001e5c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8001d86:	ea48 6002 	orr.w	r0, r8, r2, lsl #24
 8001d8a:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001d8e:	42af      	cmp	r7, r5
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001d90:	61d8      	str	r0, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001d92:	d060      	beq.n	8001e56 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13e>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001d94:	4a32      	ldr	r2, [pc, #200]	@ (8001e60 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8001d96:	e03f      	b.n	8001e18 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8001d98:	f5b4 7f80 	cmp.w	r4, #256	@ 0x100
 8001d9c:	d004      	beq.n	8001da8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x90>
 8001d9e:	f5b4 7f00 	cmp.w	r4, #512	@ 0x200
 8001da2:	d1ef      	bne.n	8001d84 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001da4:	482f      	ldr	r0, [pc, #188]	@ (8001e64 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8001da6:	e000      	b.n	8001daa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001da8:	482f      	ldr	r0, [pc, #188]	@ (8001e68 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001daa:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 8001dae:	61da      	str	r2, [r3, #28]
 8001db0:	f8d9 200c 	ldr.w	r2, [r9, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001db4:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001db6:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001db8:	6159      	str	r1, [r3, #20]
 8001dba:	e02c      	b.n	8001e16 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8001dbc:	f8d9 4008 	ldr.w	r4, [r9, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001dc0:	ea48 6002 	orr.w	r0, r8, r2, lsl #24
 8001dc4:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
 8001dc8:	61d8      	str	r0, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001dca:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001dcc:	6159      	str	r1, [r3, #20]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8001dce:	1d21      	adds	r1, r4, #4
 8001dd0:	62d9      	str	r1, [r3, #44]	@ 0x2c
            switch ((Bitmap::ClutFormat)palette->format)
 8001dd2:	7821      	ldrb	r1, [r4, #0]
 8001dd4:	b141      	cbz	r1, 8001de8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8001dd6:	2901      	cmp	r1, #1
 8001dd8:	d021      	beq.n	8001e1e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8001dda:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8001dde:	4b23      	ldr	r3, [pc, #140]	@ (8001e6c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8001de0:	4a23      	ldr	r2, [pc, #140]	@ (8001e70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
 8001de2:	4824      	ldr	r0, [pc, #144]	@ (8001e74 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15c>)
 8001de4:	f022 ffa6 	bl	8024d34 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001de8:	69da      	ldr	r2, [r3, #28]
 8001dea:	8861      	ldrh	r1, [r4, #2]
 8001dec:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8001df0:	3901      	subs	r1, #1
 8001df2:	f022 0210 	bic.w	r2, r2, #16
 8001df6:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001dfa:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8001dfc:	2201      	movs	r2, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8001dfe:	4b17      	ldr	r3, [pc, #92]	@ (8001e5c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8001e00:	69d9      	ldr	r1, [r3, #28]
 8001e02:	f041 0120 	orr.w	r1, r1, #32
 8001e06:	61d9      	str	r1, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8001e08:	69d9      	ldr	r1, [r3, #28]
 8001e0a:	0689      	lsls	r1, r1, #26
 8001e0c:	d4fc      	bmi.n	8001e08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8001e0e:	2110      	movs	r1, #16
 8001e10:	6099      	str	r1, [r3, #8]
            if (blend)
 8001e12:	2a00      	cmp	r2, #0
 8001e14:	d0be      	beq.n	8001d94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8001e16:	4a18      	ldr	r2, [pc, #96]	@ (8001e78 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001e18:	601a      	str	r2, [r3, #0]
}
 8001e1a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001e1e:	69d9      	ldr	r1, [r3, #28]
 8001e20:	8860      	ldrh	r0, [r4, #2]
 8001e22:	f421 417f 	bic.w	r1, r1, #65280	@ 0xff00
 8001e26:	3801      	subs	r0, #1
 8001e28:	f021 0110 	bic.w	r1, r1, #16
 8001e2c:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
                if (blitOp.alpha == 255)
 8001e30:	3aff      	subs	r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001e32:	f041 0110 	orr.w	r1, r1, #16
                if (blitOp.alpha == 255)
 8001e36:	bf18      	it	ne
 8001e38:	2201      	movne	r2, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001e3a:	61d9      	str	r1, [r3, #28]
                break;
 8001e3c:	e7df      	b.n	8001dfe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001e3e:	ea48 6202 	orr.w	r2, r8, r2, lsl #24
 8001e42:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001e46:	61da      	str	r2, [r3, #28]
 8001e48:	e7b5      	b.n	8001db6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8001e4a:	ea48 6202 	orr.w	r2, r8, r2, lsl #24
 8001e4e:	4b03      	ldr	r3, [pc, #12]	@ (8001e5c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8001e50:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8001e54:	e7f7      	b.n	8001e46 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12e>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001e56:	f240 2201 	movw	r2, #513	@ 0x201
 8001e5a:	e7dd      	b.n	8001e18 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8001e5c:	4002b000 	.word	0x4002b000
 8001e60:	00010201 	.word	0x00010201
 8001e64:	00020009 	.word	0x00020009
 8001e68:	0002000a 	.word	0x0002000a
 8001e6c:	08026612 	.word	0x08026612
 8001e70:	0802662c 	.word	0x0802662c
 8001e74:	08026585 	.word	0x08026585
 8001e78:	00020201 	.word	0x00020201

08001e7c <DMA2D_XferCpltCallback>:
 8001e7c:	4b02      	ldr	r3, [pc, #8]	@ (8001e88 <DMA2D_XferCpltCallback+0xc>)
 8001e7e:	681b      	ldr	r3, [r3, #0]
 8001e80:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8001e82:	6803      	ldr	r3, [r0, #0]
 8001e84:	695b      	ldr	r3, [r3, #20]
 8001e86:	4718      	bx	r3
 8001e88:	2004bf98 	.word	0x2004bf98

08001e8c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001e8c:	b570      	push	{r4, r5, r6, lr}
 8001e8e:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001e90:	2600      	movs	r6, #0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001e92:	4625      	mov	r5, r4
 8001e94:	4b09      	ldr	r3, [pc, #36]	@ (8001ebc <_ZN8STM32DMAC1Ev+0x30>)
 8001e96:	300c      	adds	r0, #12
 8001e98:	6060      	str	r0, [r4, #4]
 8001e9a:	7226      	strb	r6, [r4, #8]
 8001e9c:	7266      	strb	r6, [r4, #9]
 8001e9e:	f845 3b20 	str.w	r3, [r5], #32
 8001ea2:	2260      	movs	r2, #96	@ 0x60
 8001ea4:	4629      	mov	r1, r5
 8001ea6:	f00c fb2f 	bl	800e508 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8001eaa:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 8001eae:	60ee      	str	r6, [r5, #12]
 8001eb0:	3524      	adds	r5, #36	@ 0x24
 8001eb2:	429d      	cmp	r5, r3
 8001eb4:	d1fb      	bne.n	8001eae <_ZN8STM32DMAC1Ev+0x22>
}
 8001eb6:	4620      	mov	r0, r4
 8001eb8:	bd70      	pop	{r4, r5, r6, pc}
 8001eba:	bf00      	nop
 8001ebc:	08026674 	.word	0x08026674

08001ec0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001ec0:	2001      	movs	r0, #1
 8001ec2:	4770      	bx	lr

08001ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001ec4:	200c      	movs	r0, #12
 8001ec6:	4770      	bx	lr

08001ec8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8001ec8:	230c      	movs	r3, #12
 8001eca:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001ece:	3008      	adds	r0, #8
 8001ed0:	4770      	bx	lr

08001ed2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001ed2:	230c      	movs	r3, #12
 8001ed4:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001ed8:	3008      	adds	r0, #8
 8001eda:	4770      	bx	lr

08001edc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001edc:	2001      	movs	r0, #1
 8001ede:	4770      	bx	lr

08001ee0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001ee0:	2098      	movs	r0, #152	@ 0x98
 8001ee2:	4770      	bx	lr

08001ee4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001ee4:	2398      	movs	r3, #152	@ 0x98
 8001ee6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001eea:	3008      	adds	r0, #8
 8001eec:	4770      	bx	lr

08001eee <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001eee:	2398      	movs	r3, #152	@ 0x98
 8001ef0:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001ef4:	3008      	adds	r0, #8
 8001ef6:	4770      	bx	lr

08001ef8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001ef8:	2001      	movs	r0, #1
 8001efa:	4770      	bx	lr

08001efc <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001efc:	2010      	movs	r0, #16
 8001efe:	4770      	bx	lr

08001f00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001f00:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001f04:	3008      	adds	r0, #8
 8001f06:	4770      	bx	lr

08001f08 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001f08:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001f0c:	3008      	adds	r0, #8
 8001f0e:	4770      	bx	lr

08001f10 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8001f10:	4608      	mov	r0, r1
 8001f12:	f000 bc5b 	b.w	80027cc <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
	...

08001f18 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001f18:	b510      	push	{r4, lr}
 8001f1a:	4604      	mov	r4, r0
 8001f1c:	4b02      	ldr	r3, [pc, #8]	@ (8001f28 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001f1e:	6003      	str	r3, [r0, #0]
 8001f20:	f00b f945 	bl	800d1ae <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001f24:	4620      	mov	r0, r4
 8001f26:	bd10      	pop	{r4, pc}
 8001f28:	0802672c 	.word	0x0802672c

08001f2c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001f2c:	b510      	push	{r4, lr}
 8001f2e:	4604      	mov	r4, r0
 8001f30:	f7ff fff2 	bl	8001f18 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001f34:	4620      	mov	r0, r4
 8001f36:	2114      	movs	r1, #20
 8001f38:	f022 fecf 	bl	8024cda <_ZdlPvj>
 8001f3c:	4620      	mov	r0, r4
 8001f3e:	bd10      	pop	{r4, pc}

08001f40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001f40:	b510      	push	{r4, lr}
 8001f42:	4604      	mov	r4, r0
 8001f44:	4b02      	ldr	r3, [pc, #8]	@ (8001f50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001f46:	6003      	str	r3, [r0, #0]
 8001f48:	f00b f931 	bl	800d1ae <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001f4c:	4620      	mov	r0, r4
 8001f4e:	bd10      	pop	{r4, pc}
 8001f50:	080266f8 	.word	0x080266f8

08001f54 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001f54:	b510      	push	{r4, lr}
 8001f56:	4604      	mov	r4, r0
 8001f58:	f7ff fff2 	bl	8001f40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001f5c:	4620      	mov	r0, r4
 8001f5e:	21a0      	movs	r1, #160	@ 0xa0
 8001f60:	f022 febb 	bl	8024cda <_ZdlPvj>
 8001f64:	4620      	mov	r0, r4
 8001f66:	bd10      	pop	{r4, pc}

08001f68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001f68:	b510      	push	{r4, lr}
 8001f6a:	4604      	mov	r4, r0
 8001f6c:	4b02      	ldr	r3, [pc, #8]	@ (8001f78 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001f6e:	6003      	str	r3, [r0, #0]
 8001f70:	f00b f91d 	bl	800d1ae <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001f74:	4620      	mov	r0, r4
 8001f76:	bd10      	pop	{r4, pc}
 8001f78:	080266c4 	.word	0x080266c4

08001f7c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001f7c:	b510      	push	{r4, lr}
 8001f7e:	4604      	mov	r4, r0
 8001f80:	f7ff fff2 	bl	8001f68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001f84:	4620      	mov	r0, r4
 8001f86:	2118      	movs	r1, #24
 8001f88:	f022 fea7 	bl	8024cda <_ZdlPvj>
 8001f8c:	4620      	mov	r0, r4
 8001f8e:	bd10      	pop	{r4, pc}

08001f90 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001f90:	b510      	push	{r4, lr}
 8001f92:	4604      	mov	r4, r0
 8001f94:	4b07      	ldr	r3, [pc, #28]	@ (8001fb4 <_ZN12FrontendHeapD1Ev+0x24>)
 8001f96:	f840 3bcc 	str.w	r3, [r0], #204
 8001f9a:	f7ff ffbd 	bl	8001f18 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001f9e:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8001fa2:	f7ff ffcd 	bl	8001f40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001fa6:	f104 0014 	add.w	r0, r4, #20
 8001faa:	f7ff ffdd 	bl	8001f68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001fae:	4620      	mov	r0, r4
 8001fb0:	bd10      	pop	{r4, pc}
 8001fb2:	bf00      	nop
 8001fb4:	08026760 	.word	0x08026760

08001fb8 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001fb8:	b508      	push	{r3, lr}
 8001fba:	4802      	ldr	r0, [pc, #8]	@ (8001fc4 <__tcf_0+0xc>)
 8001fbc:	f7ff ffe8 	bl	8001f90 <_ZN12FrontendHeapD1Ev>
 8001fc0:	bd08      	pop	{r3, pc}
 8001fc2:	bf00      	nop
 8001fc4:	20001c94 	.word	0x20001c94

08001fc8 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001fc8:	b510      	push	{r4, lr}
 8001fca:	4604      	mov	r4, r0
 8001fcc:	f7ff ffe0 	bl	8001f90 <_ZN12FrontendHeapD1Ev>
 8001fd0:	4620      	mov	r0, r4
 8001fd2:	f44f 7110 	mov.w	r1, #576	@ 0x240
 8001fd6:	f022 fe80 	bl	8024cda <_ZdlPvj>
 8001fda:	4620      	mov	r0, r4
 8001fdc:	bd10      	pop	{r4, pc}
	...

08001fe0 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 480);

void touchgfx_init()
{
 8001fe0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001fe4:	f000 fa98 	bl	8002518 <_ZN14BitmapDatabase11getInstanceEv>
 8001fe8:	2400      	movs	r4, #0
 8001fea:	4605      	mov	r5, r0
 8001fec:	f000 fa98 	bl	8002520 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001ff0:	4623      	mov	r3, r4
 8001ff2:	4601      	mov	r1, r0
 8001ff4:	4622      	mov	r2, r4
 8001ff6:	4628      	mov	r0, r5
 8001ff8:	9400      	str	r4, [sp, #0]
 8001ffa:	f00f ffef 	bl	8011fdc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001ffe:	4b27      	ldr	r3, [pc, #156]	@ (800209c <touchgfx_init+0xbc>)
 8002000:	4a27      	ldr	r2, [pc, #156]	@ (80020a0 <touchgfx_init+0xc0>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8002002:	4620      	mov	r0, r4
 8002004:	601a      	str	r2, [r3, #0]
 8002006:	f000 fe1d 	bl	8002c44 <_ZN8touchgfx5Texts11setLanguageEt>

    display.setFrameBufferFormat(Bitmap::RGB888);
 800200a:	2101      	movs	r1, #1
 800200c:	4825      	ldr	r0, [pc, #148]	@ (80020a4 <touchgfx_init+0xc4>)
 800200e:	f017 fa43 	bl	8019498 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE>

    FontManager::setFontProvider(&fontProvider);
 8002012:	4825      	ldr	r0, [pc, #148]	@ (80020a8 <touchgfx_init+0xc8>)
 8002014:	f00f ff4a 	bl	8011eac <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
        static FrontendHeap instance;
 8002018:	4d24      	ldr	r5, [pc, #144]	@ (80020ac <touchgfx_init+0xcc>)
 800201a:	e8d5 3faf 	lda	r3, [r5]
 800201e:	07db      	lsls	r3, r3, #31
 8002020:	d435      	bmi.n	800208e <touchgfx_init+0xae>
 8002022:	4628      	mov	r0, r5
 8002024:	f022 fe5b 	bl	8024cde <__cxa_guard_acquire>
 8002028:	b388      	cbz	r0, 800208e <touchgfx_init+0xae>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 800202a:	4c21      	ldr	r4, [pc, #132]	@ (80020b0 <touchgfx_init+0xd0>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 800202c:	4b21      	ldr	r3, [pc, #132]	@ (80020b4 <touchgfx_init+0xd4>)
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800202e:	f104 06e4 	add.w	r6, r4, #228	@ 0xe4
        : presenterStorage(pres),
 8002032:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8002036:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
          transitionStorage(tra),
 800203a:	f104 07cc 	add.w	r7, r4, #204	@ 0xcc
 800203e:	6023      	str	r3, [r4, #0]
        : presenterStorage(pres),
 8002040:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8002042:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8002046:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8002048:	6126      	str	r6, [r4, #16]
 800204a:	f00b f8b1 	bl	800d1b0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800204e:	4b1a      	ldr	r3, [pc, #104]	@ (80020b8 <touchgfx_init+0xd8>)
 8002050:	4640      	mov	r0, r8
 8002052:	6163      	str	r3, [r4, #20]
 8002054:	f00b f8ac 	bl	800d1b0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002058:	4b18      	ldr	r3, [pc, #96]	@ (80020bc <touchgfx_init+0xdc>)
 800205a:	4638      	mov	r0, r7
 800205c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800205e:	f00b f8a7 	bl	800d1b0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002062:	4b17      	ldr	r3, [pc, #92]	@ (80020c0 <touchgfx_init+0xe0>)
 8002064:	f104 00e0 	add.w	r0, r4, #224	@ 0xe0
 8002068:	f8c4 30cc 	str.w	r3, [r4, #204]	@ 0xcc
 800206c:	f000 fe58 	bl	8002d20 <_ZN5ModelC1Ev>
 8002070:	4622      	mov	r2, r4
 8002072:	f104 01e0 	add.w	r1, r4, #224	@ 0xe0
 8002076:	4630      	mov	r0, r6
 8002078:	f000 fe48 	bl	8002d0c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800207c:	4630      	mov	r0, r6
 800207e:	f000 fba5 	bl	80027cc <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8002082:	4810      	ldr	r0, [pc, #64]	@ (80020c4 <touchgfx_init+0xe4>)
 8002084:	f022 fe74 	bl	8024d70 <atexit>
 8002088:	4628      	mov	r0, r5
 800208a:	f022 fe34 	bl	8024cf6 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800208e:	480e      	ldr	r0, [pc, #56]	@ (80020c8 <touchgfx_init+0xe8>)
}
 8002090:	b002      	add	sp, #8
 8002092:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8002096:	f7ff bbcf 	b.w	8001838 <_ZN11TouchGFXHAL10initializeEv>
 800209a:	bf00      	nop
 800209c:	2004bff4 	.word	0x2004bff4
 80020a0:	2000069c 	.word	0x2000069c
 80020a4:	200006a0 	.word	0x200006a0
 80020a8:	20000008 	.word	0x20000008
 80020ac:	20001c90 	.word	0x20001c90
 80020b0:	20001c94 	.word	0x20001c94
 80020b4:	08026760 	.word	0x08026760
 80020b8:	080266c4 	.word	0x080266c4
 80020bc:	080266f8 	.word	0x080266f8
 80020c0:	0802672c 	.word	0x0802672c
 80020c4:	08001fb9 	.word	0x08001fb9
 80020c8:	200005e8 	.word	0x200005e8

080020cc <touchgfx_components_init>:

void touchgfx_components_init()
{
 80020cc:	b508      	push	{r3, lr}
    nema_init();
 80020ce:	f010 fc4b 	bl	8012968 <nema_init>
    nema_vg_init_stencil_pool(480, 480, 1);
}
 80020d2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    nema_vg_init_stencil_pool(480, 480, 1);
 80020d6:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 80020da:	2201      	movs	r2, #1
 80020dc:	4608      	mov	r0, r1
 80020de:	f011 bd77 	b.w	8013bd0 <nema_vg_init_stencil_pool>
	...

080020e4 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80020e4:	4801      	ldr	r0, [pc, #4]	@ (80020ec <touchgfx_taskEntry+0x8>)
 80020e6:	f00b bb72 	b.w	800d7ce <_ZN8touchgfx3HAL9taskEntryEv>
 80020ea:	bf00      	nop
 80020ec:	200005e8 	.word	0x200005e8

080020f0 <_GLOBAL__sub_I_touchgfx_init>:
}
 80020f0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
static STM32DMA dma;
 80020f2:	4d11      	ldr	r5, [pc, #68]	@ (8002138 <_GLOBAL__sub_I_touchgfx_init+0x48>)
{
public:

    STM32TouchController() {}
 80020f4:	4b11      	ldr	r3, [pc, #68]	@ (800213c <_GLOBAL__sub_I_touchgfx_init+0x4c>)
 80020f6:	4f12      	ldr	r7, [pc, #72]	@ (8002140 <_GLOBAL__sub_I_touchgfx_init+0x50>)
static LCDGPU2D display;
 80020f8:	4e12      	ldr	r6, [pc, #72]	@ (8002144 <_GLOBAL__sub_I_touchgfx_init+0x54>)
static STM32DMA dma;
 80020fa:	4628      	mov	r0, r5
 80020fc:	603b      	str	r3, [r7, #0]
 80020fe:	f7ff fec5 	bl	8001e8c <_ZN8STM32DMAC1Ev>
static LCDGPU2D display;
 8002102:	4630      	mov	r0, r6
 8002104:	f017 f9bc 	bl	8019480 <_ZN8touchgfx8LCDGPU2DC1Ev>
        touchgfx::HALGPU2D(dma, display, tc, width, height)
 8002108:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800210c:	4c0e      	ldr	r4, [pc, #56]	@ (8002148 <_GLOBAL__sub_I_touchgfx_init+0x58>)
 800210e:	e9cd 3300 	strd	r3, r3, [sp]
 8002112:	4632      	mov	r2, r6
 8002114:	463b      	mov	r3, r7
 8002116:	4629      	mov	r1, r5
 8002118:	4620      	mov	r0, r4
 800211a:	f013 f81f 	bl	801515c <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800211e:	4b0b      	ldr	r3, [pc, #44]	@ (800214c <_GLOBAL__sub_I_touchgfx_init+0x5c>)
 8002120:	6023      	str	r3, [r4, #0]
        : cc_consumed(0),
 8002122:	2300      	movs	r3, #0
 8002124:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
          cc_in(0)
 8002128:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 800212c:	4b08      	ldr	r3, [pc, #32]	@ (8002150 <_GLOBAL__sub_I_touchgfx_init+0x60>)
 800212e:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
}
 8002132:	b003      	add	sp, #12
 8002134:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002136:	bf00      	nop
 8002138:	20000eec 	.word	0x20000eec
 800213c:	080261c4 	.word	0x080261c4
 8002140:	20001c8c 	.word	0x20001c8c
 8002144:	200006a0 	.word	0x200006a0
 8002148:	200005e8 	.word	0x200005e8
 800214c:	08026350 	.word	0x08026350
 8002150:	080260ec 	.word	0x080260ec

08002154 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8002154:	4801      	ldr	r0, [pc, #4]	@ (800215c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8002156:	f7ff bd2b 	b.w	8001bb0 <_ZN8STM32DMAD1Ev>
 800215a:	bf00      	nop
 800215c:	20000eec 	.word	0x20000eec

08002160 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002160:	2290      	movs	r2, #144	@ 0x90
 8002162:	4b04      	ldr	r3, [pc, #16]	@ (8002174 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x14>)
 8002164:	f883 2376 	strb.w	r2, [r3, #886]	@ 0x376
 8002168:	f883 2387 	strb.w	r2, [r3, #903]	@ 0x387
 800216c:	f883 2384 	strb.w	r2, [r3, #900]	@ 0x384
void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
    NVIC_SetPriority(GPU2D_IRQn, 9);
}
 8002170:	4770      	bx	lr
 8002172:	bf00      	nop
 8002174:	e000e100 	.word	0xe000e100

08002178 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(GPU2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002178:	4a09      	ldr	r2, [pc, #36]	@ (80021a0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 800217a:	490a      	ldr	r1, [pc, #40]	@ (80021a4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 800217c:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800217e:	480a      	ldr	r0, [pc, #40]	@ (80021a8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002180:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8002184:	3b01      	subs	r3, #1
 8002186:	b29b      	uxth	r3, r3
 8002188:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800218a:	6911      	ldr	r1, [r2, #16]
 800218c:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8002190:	3901      	subs	r1, #1
 8002192:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8002194:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8002196:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8002198:	f043 0301 	orr.w	r3, r3, #1
 800219c:	6353      	str	r3, [r2, #52]	@ 0x34
}
 800219e:	4770      	bx	lr
 80021a0:	40016800 	.word	0x40016800
 80021a4:	20001ed6 	.word	0x20001ed6
 80021a8:	20001ed4 	.word	0x20001ed4

080021ac <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HALGPU2D::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80021ac:	4b01      	ldr	r3, [pc, #4]	@ (80021b4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80021ae:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 80021b2:	4770      	bx	lr
 80021b4:	40016800 	.word	0x40016800

080021b8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80021b8:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80021ba:	4b02      	ldr	r3, [pc, #8]	@ (80021c4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)
 80021bc:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80021c0:	625a      	str	r2, [r3, #36]	@ 0x24
}
 80021c2:	4770      	bx	lr
 80021c4:	40016800 	.word	0x40016800

080021c8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80021c8:	b570      	push	{r4, r5, r6, lr}
 80021ca:	4604      	mov	r4, r0
    HALGPU2D::initialize(8192);
 80021cc:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80021d0:	f013 f82c 	bl	801522c <_ZN8touchgfx8HALGPU2D10initializeEi>
    registerEventListener(*(Application::getInstance()));
 80021d4:	6823      	ldr	r3, [r4, #0]
 80021d6:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
 80021d8:	f00d fa9a 	bl	800f710 <_ZN8touchgfx11Application11getInstanceEv>
 80021dc:	4601      	mov	r1, r0
 80021de:	4620      	mov	r0, r4
 80021e0:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80021e2:	6823      	ldr	r3, [r4, #0]
 80021e4:	4620      	mov	r0, r4
 80021e6:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 80021ea:	4a03      	ldr	r2, [pc, #12]	@ (80021f8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 80021ec:	46ac      	mov	ip, r5
}
 80021ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80021f2:	2300      	movs	r3, #0
 80021f4:	4901      	ldr	r1, [pc, #4]	@ (80021fc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x34>)
 80021f6:	4760      	bx	ip
 80021f8:	200f6898 	.word	0x200f6898
 80021fc:	2004dc98 	.word	0x2004dc98

08002200 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HALGPU2D::beginFrame();
 8002200:	f012 bf3e 	b.w	8015080 <_ZN8touchgfx8HALGPU2D10beginFrameEv>

08002204 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HALGPU2D::endFrame();
 8002204:	f012 bf68 	b.w	80150d8 <_ZN8touchgfx8HALGPU2D8endFrameEv>

08002208 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HALGPU2D::flushFrameBuffer(rect);
 8002208:	f00b ba7e 	b.w	800d708 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

0800220c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HALGPU2D::blockCopy(dest, src, numBytes);
 800220c:	f00b bbed 	b.w	800d9ea <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08002210 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8002210:	b570      	push	{r4, r5, r6, lr}
 8002212:	460d      	mov	r5, r1
 8002214:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8002216:	b935      	cbnz	r5, 8002226 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8002218:	f240 21d2 	movw	r1, #722	@ 0x2d2
 800221c:	4b08      	ldr	r3, [pc, #32]	@ (8002240 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800221e:	4a09      	ldr	r2, [pc, #36]	@ (8002244 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8002220:	4809      	ldr	r0, [pc, #36]	@ (8002248 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8002222:	f022 fd87 	bl	8024d34 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8002226:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
    }
 800222a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800222e:	3a00      	subs	r2, #0
 8002230:	bf18      	it	ne
 8002232:	2201      	movne	r2, #1
 8002234:	4b05      	ldr	r3, [pc, #20]	@ (800224c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8002236:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8002238:	6803      	ldr	r3, [r0, #0]
 800223a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800223e:	4718      	bx	r3
 8002240:	080262bf 	.word	0x080262bf
 8002244:	080262f7 	.word	0x080262f7
 8002248:	0802627a 	.word	0x0802627a
 800224c:	2004bf96 	.word	0x2004bf96

08002250 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002250:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8002254:	4b0a      	ldr	r3, [pc, #40]	@ (8002280 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x30>)
 8002256:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  __ASM volatile ("dsb 0xF":::"memory");
 800225a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800225e:	f3bf 8f6f 	isb	sy
 8002262:	2280      	movs	r2, #128	@ 0x80
 8002264:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
  __ASM volatile ("dsb 0xF":::"memory");
 8002268:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800226c:	f3bf 8f6f 	isb	sy
 8002270:	2210      	movs	r2, #16
 8002272:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
  __ASM volatile ("dsb 0xF":::"memory");
 8002276:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800227a:	f3bf 8f6f 	isb	sy
}
 800227e:	4770      	bx	lr
 8002280:	e000e100 	.word	0xe000e100

08002284 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002284:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8002288:	4b03      	ldr	r3, [pc, #12]	@ (8002298 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x14>)
 800228a:	60da      	str	r2, [r3, #12]
 800228c:	2280      	movs	r2, #128	@ 0x80
 800228e:	611a      	str	r2, [r3, #16]
 8002290:	2210      	movs	r2, #16
 8002292:	611a      	str	r2, [r3, #16]
}
 8002294:	4770      	bx	lr
 8002296:	bf00      	nop
 8002298:	e000e100 	.word	0xe000e100

0800229c <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 800229c:	b510      	push	{r4, lr}
        return instance;
 800229e:	4c14      	ldr	r4, [pc, #80]	@ (80022f0 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 80022a0:	6823      	ldr	r3, [r4, #0]
 80022a2:	b323      	cbz	r3, 80022ee <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 80022a4:	4b13      	ldr	r3, [pc, #76]	@ (80022f4 <HAL_LTDC_LineEventCallback+0x58>)
 80022a6:	4a14      	ldr	r2, [pc, #80]	@ (80022f8 <HAL_LTDC_LineEventCallback+0x5c>)
 80022a8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80022aa:	8811      	ldrh	r1, [r2, #0]
 80022ac:	428b      	cmp	r3, r1
 80022ae:	d113      	bne.n	80022d8 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80022b0:	4b12      	ldr	r3, [pc, #72]	@ (80022fc <HAL_LTDC_LineEventCallback+0x60>)
 80022b2:	8819      	ldrh	r1, [r3, #0]
 80022b4:	f004 fa4a 	bl	800674c <HAL_LTDC_ProgramLineEvent>
 80022b8:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80022ba:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
 80022be:	3301      	adds	r3, #1
 80022c0:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80022c4:	f7ff fc48 	bl	8001b58 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80022c8:	6820      	ldr	r0, [r4, #0]
 80022ca:	f00b ffc5 	bl	800e258 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 80022ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80022d2:	2000      	movs	r0, #0
 80022d4:	f7ff ba3c 	b.w	8001750 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80022d8:	f004 fa38 	bl	800674c <HAL_LTDC_ProgramLineEvent>
        return instance;
 80022dc:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80022de:	6803      	ldr	r3, [r0, #0]
 80022e0:	6a1b      	ldr	r3, [r3, #32]
 80022e2:	4798      	blx	r3
    }
 80022e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80022e8:	2000      	movs	r0, #0
 80022ea:	f7ff ba4d 	b.w	8001788 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 80022ee:	bd10      	pop	{r4, pc}
 80022f0:	2004bf98 	.word	0x2004bf98
 80022f4:	40016800 	.word	0x40016800
 80022f8:	20001ed6 	.word	0x20001ed6
 80022fc:	20001ed4 	.word	0x20001ed4

08002300 <HAL_GPU2D_CommandListCpltCallback>:
#endif /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 1 */
{
    /* Prevent unused argument(s) compilation warning */
    UNUSED(hgpu2d);

    last_cl_id = CmdListID;
 8002300:	4b02      	ldr	r3, [pc, #8]	@ (800230c <HAL_GPU2D_CommandListCpltCallback+0xc>)
 8002302:	6019      	str	r1, [r3, #0]

    /* Return a token back to a semaphore */
    osSemaphoreRelease(nema_irq_sem);
 8002304:	4b02      	ldr	r3, [pc, #8]	@ (8002310 <HAL_GPU2D_CommandListCpltCallback+0x10>)
 8002306:	6818      	ldr	r0, [r3, #0]
 8002308:	f009 b8b2 	b.w	800b470 <osSemaphoreRelease>
 800230c:	2000000c 	.word	0x2000000c
 8002310:	20001ed8 	.word	0x20001ed8

08002314 <nema_reg_read>:

    return error_code;
}

uint32_t nema_reg_read(uint32_t reg)
{
 8002314:	4601      	mov	r1, r0
    return HAL_GPU2D_ReadRegister(&hgpu2d, reg);
 8002316:	4801      	ldr	r0, [pc, #4]	@ (800231c <nema_reg_read+0x8>)
 8002318:	f003 bbbc 	b.w	8005a94 <HAL_GPU2D_ReadRegister>
 800231c:	20000464 	.word	0x20000464

08002320 <nema_reg_write>:
}

void nema_reg_write(uint32_t reg, uint32_t value)
{
 8002320:	460a      	mov	r2, r1
    HAL_GPU2D_WriteRegister(&hgpu2d, reg, value);
 8002322:	4601      	mov	r1, r0
 8002324:	4801      	ldr	r0, [pc, #4]	@ (800232c <nema_reg_write+0xc>)
 8002326:	f003 bbb8 	b.w	8005a9a <HAL_GPU2D_WriteRegister>
 800232a:	bf00      	nop
 800232c:	20000464 	.word	0x20000464

08002330 <nema_wait_irq>:
}

int nema_wait_irq(void)
{
 8002330:	b508      	push	{r3, lr}
    /* Wait indefinitely for a free semaphore */
    osSemaphoreAcquire (nema_irq_sem, osWaitForever);
 8002332:	4b04      	ldr	r3, [pc, #16]	@ (8002344 <nema_wait_irq+0x14>)
 8002334:	f04f 31ff 	mov.w	r1, #4294967295
 8002338:	6818      	ldr	r0, [r3, #0]
 800233a:	f009 f86b 	bl	800b414 <osSemaphoreAcquire>

    return 0;
}
 800233e:	2000      	movs	r0, #0
 8002340:	bd08      	pop	{r3, pc}
 8002342:	bf00      	nop
 8002344:	20001ed8 	.word	0x20001ed8

08002348 <nema_wait_irq_cl>:

int nema_wait_irq_cl(int cl_id)
{
 8002348:	b538      	push	{r3, r4, r5, lr}
 800234a:	4604      	mov	r4, r0
    while (last_cl_id < cl_id)
 800234c:	4d04      	ldr	r5, [pc, #16]	@ (8002360 <nema_wait_irq_cl+0x18>)
 800234e:	682b      	ldr	r3, [r5, #0]
 8002350:	42a3      	cmp	r3, r4
 8002352:	db01      	blt.n	8002358 <nema_wait_irq_cl+0x10>
    {
        (void)nema_wait_irq();
    }

    return 0;
}
 8002354:	2000      	movs	r0, #0
 8002356:	bd38      	pop	{r3, r4, r5, pc}
        (void)nema_wait_irq();
 8002358:	f7ff ffea 	bl	8002330 <nema_wait_irq>
 800235c:	e7f7      	b.n	800234e <nema_wait_irq_cl+0x6>
 800235e:	bf00      	nop
 8002360:	2000000c 	.word	0x2000000c

08002364 <nema_host_free>:
    return 0;
}

void nema_host_free(void *ptr)
{
    tsi_free(ptr);
 8002364:	f011 be6e 	b.w	8014044 <tsi_free>

08002368 <nema_host_malloc>:
}

void *nema_host_malloc(unsigned size)
{
 8002368:	4601      	mov	r1, r0
    return tsi_malloc(size);
 800236a:	2000      	movs	r0, #0
 800236c:	f011 be0c 	b.w	8013f88 <tsi_malloc_pool>

08002370 <nema_buffer_create>:
}

nema_buffer_t nema_buffer_create(int size)
{
 8002370:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002372:	4604      	mov	r4, r0
    nema_buffer_t bo;
    memset(&bo, 0, sizeof(bo));
 8002374:	2000      	movs	r0, #0
{
 8002376:	460e      	mov	r6, r1
    memset(&bo, 0, sizeof(bo));
 8002378:	9001      	str	r0, [sp, #4]
    bo.base_virt = tsi_malloc(size);
 800237a:	f011 fe05 	bl	8013f88 <tsi_malloc_pool>
    memset(&bo, 0, sizeof(bo));
 800237e:	466d      	mov	r5, sp
    bo.base_phys = (uint32_t)bo.base_virt;
 8002380:	e9cd 0002 	strd	r0, r0, [sp, #8]
    bo.size      = size;
 8002384:	9600      	str	r6, [sp, #0]
    assert(bo.base_virt != 0 && "Unable to allocate memory in nema_buffer_create");
 8002386:	b928      	cbnz	r0, 8002394 <nema_buffer_create+0x24>
 8002388:	21a6      	movs	r1, #166	@ 0xa6
 800238a:	4b06      	ldr	r3, [pc, #24]	@ (80023a4 <nema_buffer_create+0x34>)
 800238c:	4a06      	ldr	r2, [pc, #24]	@ (80023a8 <nema_buffer_create+0x38>)
 800238e:	4807      	ldr	r0, [pc, #28]	@ (80023ac <nema_buffer_create+0x3c>)
 8002390:	f022 fcd0 	bl	8024d34 <__assert_func>

    return bo;
 8002394:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8002398:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
 800239c:	4620      	mov	r0, r4
 800239e:	b004      	add	sp, #16
 80023a0:	bd70      	pop	{r4, r5, r6, pc}
 80023a2:	bf00      	nop
 80023a4:	0802676c 	.word	0x0802676c
 80023a8:	0802689a 	.word	0x0802689a
 80023ac:	080267b3 	.word	0x080267b3

080023b0 <nema_sys_init>:
    nema_irq_sem = osSemaphoreNew(1, 1, NULL);
 80023b0:	2101      	movs	r1, #1
{
 80023b2:	b5f0      	push	{r4, r5, r6, r7, lr}
    nema_irq_sem = osSemaphoreNew(1, 1, NULL);
 80023b4:	2200      	movs	r2, #0
 80023b6:	4608      	mov	r0, r1
{
 80023b8:	b087      	sub	sp, #28
    nema_irq_sem = osSemaphoreNew(1, 1, NULL);
 80023ba:	f008 ffdc 	bl	800b376 <osSemaphoreNew>
 80023be:	4b21      	ldr	r3, [pc, #132]	@ (8002444 <nema_sys_init+0x94>)
 80023c0:	6018      	str	r0, [r3, #0]
    assert(nema_irq_sem != NULL);
 80023c2:	b928      	cbnz	r0, 80023d0 <nema_sys_init+0x20>
 80023c4:	2156      	movs	r1, #86	@ 0x56
 80023c6:	4b20      	ldr	r3, [pc, #128]	@ (8002448 <nema_sys_init+0x98>)
 80023c8:	4a20      	ldr	r2, [pc, #128]	@ (800244c <nema_sys_init+0x9c>)
    assert(error_code == 0);
 80023ca:	4821      	ldr	r0, [pc, #132]	@ (8002450 <nema_sys_init+0xa0>)
 80023cc:	f022 fcb2 	bl	8024d34 <__assert_func>
    error_code = tsi_malloc_init_pool_aligned(0, (void*)nemagfx_pool_mem, (uintptr_t)nemagfx_pool_mem, NEMAGFX_MEM_POOL_SIZE, 1, 8);
 80023d0:	2701      	movs	r7, #1
 80023d2:	2408      	movs	r4, #8
 80023d4:	4a1f      	ldr	r2, [pc, #124]	@ (8002454 <nema_sys_init+0xa4>)
 80023d6:	f44f 532c 	mov.w	r3, #11008	@ 0x2b00
 80023da:	4611      	mov	r1, r2
 80023dc:	2000      	movs	r0, #0
 80023de:	e9cd 7400 	strd	r7, r4, [sp]
 80023e2:	f011 fd75 	bl	8013ed0 <tsi_malloc_init_pool_aligned>
    assert(error_code == 0);
 80023e6:	b118      	cbz	r0, 80023f0 <nema_sys_init+0x40>
 80023e8:	215a      	movs	r1, #90	@ 0x5a
 80023ea:	4b1b      	ldr	r3, [pc, #108]	@ (8002458 <nema_sys_init+0xa8>)
 80023ec:	4a17      	ldr	r2, [pc, #92]	@ (800244c <nema_sys_init+0x9c>)
 80023ee:	e7ec      	b.n	80023ca <nema_sys_init+0x1a>
    error_code = tsi_malloc_init_pool_aligned(1, (void*)nemagfx_stencil_buffer_mem, (uintptr_t)nemagfx_stencil_buffer_mem, NEMAGFX_STENCIL_POOL_SIZE, 1, 8);
 80023f0:	4a1a      	ldr	r2, [pc, #104]	@ (800245c <nema_sys_init+0xac>)
 80023f2:	f44f 3366 	mov.w	r3, #235520	@ 0x39800
 80023f6:	4611      	mov	r1, r2
 80023f8:	4638      	mov	r0, r7
 80023fa:	e9cd 7400 	strd	r7, r4, [sp]
 80023fe:	f011 fd67 	bl	8013ed0 <tsi_malloc_init_pool_aligned>
    assert(error_code == 0);
 8002402:	4606      	mov	r6, r0
 8002404:	b118      	cbz	r0, 800240e <nema_sys_init+0x5e>
 8002406:	215c      	movs	r1, #92	@ 0x5c
 8002408:	4b13      	ldr	r3, [pc, #76]	@ (8002458 <nema_sys_init+0xa8>)
 800240a:	4a10      	ldr	r2, [pc, #64]	@ (800244c <nema_sys_init+0x9c>)
 800240c:	e7dd      	b.n	80023ca <nema_sys_init+0x1a>
    ring_buffer_str.bo = nema_buffer_create(RING_SIZE);
 800240e:	ad02      	add	r5, sp, #8
 8002410:	4c13      	ldr	r4, [pc, #76]	@ (8002460 <nema_sys_init+0xb0>)
 8002412:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8002416:	4628      	mov	r0, r5
 8002418:	f7ff ffaa 	bl	8002370 <nema_buffer_create>
 800241c:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8002420:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
    assert(ring_buffer_str.bo.base_virt);
 8002424:	b91a      	cbnz	r2, 800242e <nema_sys_init+0x7e>
 8002426:	2160      	movs	r1, #96	@ 0x60
 8002428:	4b0e      	ldr	r3, [pc, #56]	@ (8002464 <nema_sys_init+0xb4>)
 800242a:	4a08      	ldr	r2, [pc, #32]	@ (800244c <nema_sys_init+0x9c>)
 800242c:	e7cd      	b.n	80023ca <nema_sys_init+0x1a>
    error_code = nema_rb_init(&ring_buffer_str, 1);
 800242e:	4639      	mov	r1, r7
 8002430:	4620      	mov	r0, r4
 8002432:	f010 f85b 	bl	80124ec <nema_rb_init>
    if (error_code < 0)
 8002436:	2800      	cmp	r0, #0
    last_cl_id = 0;
 8002438:	bfa4      	itt	ge
 800243a:	4b0b      	ldrge	r3, [pc, #44]	@ (8002468 <nema_sys_init+0xb8>)
 800243c:	601e      	strge	r6, [r3, #0]
}
 800243e:	b007      	add	sp, #28
 8002440:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002442:	bf00      	nop
 8002444:	20001ed8 	.word	0x20001ed8
 8002448:	080267f4 	.word	0x080267f4
 800244c:	080268ad 	.word	0x080268ad
 8002450:	080267b3 	.word	0x080267b3
 8002454:	2003b6f4 	.word	0x2003b6f4
 8002458:	08026809 	.word	0x08026809
 800245c:	20001ef4 	.word	0x20001ef4
 8002460:	20001edc 	.word	0x20001edc
 8002464:	08026819 	.word	0x08026819
 8002468:	2000000c 	.word	0x2000000c

0800246c <nema_buffer_create_pool>:

nema_buffer_t nema_buffer_create_pool(int pool, int size)
{
 800246c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    nema_buffer_t bo;
    memset(&bo, 0, sizeof(bo));
 800246e:	2300      	movs	r3, #0
{
 8002470:	4604      	mov	r4, r0
 8002472:	4608      	mov	r0, r1
    bo.base_virt = tsi_malloc_pool(pool, size);
 8002474:	4611      	mov	r1, r2
{
 8002476:	4616      	mov	r6, r2
    memset(&bo, 0, sizeof(bo));
 8002478:	9301      	str	r3, [sp, #4]
    bo.base_virt = tsi_malloc_pool(pool, size);
 800247a:	f011 fd85 	bl	8013f88 <tsi_malloc_pool>
    memset(&bo, 0, sizeof(bo));
 800247e:	466d      	mov	r5, sp
    bo.base_phys = (uint32_t)bo.base_virt;
 8002480:	e9cd 0002 	strd	r0, r0, [sp, #8]
    bo.size      = size;
 8002484:	9600      	str	r6, [sp, #0]
    bo.fd        = 0;
    assert(bo.base_virt != 0 && "Unable to allocate memory in nema_buffer_create_pool");
 8002486:	b928      	cbnz	r0, 8002494 <nema_buffer_create_pool+0x28>
 8002488:	21b3      	movs	r1, #179	@ 0xb3
 800248a:	4b06      	ldr	r3, [pc, #24]	@ (80024a4 <nema_buffer_create_pool+0x38>)
 800248c:	4a06      	ldr	r2, [pc, #24]	@ (80024a8 <nema_buffer_create_pool+0x3c>)
 800248e:	4807      	ldr	r0, [pc, #28]	@ (80024ac <nema_buffer_create_pool+0x40>)
 8002490:	f022 fc50 	bl	8024d34 <__assert_func>

    return bo;
 8002494:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8002498:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
 800249c:	4620      	mov	r0, r4
 800249e:	b004      	add	sp, #16
 80024a0:	bd70      	pop	{r4, r5, r6, pc}
 80024a2:	bf00      	nop
 80024a4:	08026836 	.word	0x08026836
 80024a8:	08026882 	.word	0x08026882
 80024ac:	080267b3 	.word	0x080267b3

080024b0 <nema_buffer_map>:

void *nema_buffer_map(nema_buffer_t *bo)
{
    return bo->base_virt;
}
 80024b0:	6880      	ldr	r0, [r0, #8]
 80024b2:	4770      	bx	lr

080024b4 <nema_buffer_destroy>:
    UNUSED(bo);
}

void nema_buffer_destroy(nema_buffer_t *bo)
{
    if (bo->fd == -1)
 80024b4:	6843      	ldr	r3, [r0, #4]
{
 80024b6:	b510      	push	{r4, lr}
    if (bo->fd == -1)
 80024b8:	3301      	adds	r3, #1
{
 80024ba:	4604      	mov	r4, r0
    if (bo->fd == -1)
 80024bc:	d009      	beq.n	80024d2 <nema_buffer_destroy+0x1e>
    {
        return; /* Buffer weren't allocated! */
    }

    tsi_free(bo->base_virt);
 80024be:	6880      	ldr	r0, [r0, #8]
 80024c0:	f011 fdc0 	bl	8014044 <tsi_free>

    bo->base_virt = (void *)0;
 80024c4:	2300      	movs	r3, #0
    bo->base_phys = 0;
 80024c6:	e9c4 3302 	strd	r3, r3, [r4, #8]
    bo->size      = 0;
 80024ca:	6023      	str	r3, [r4, #0]
    bo->fd        = -1; /* Buffer not allocated */
 80024cc:	f04f 33ff 	mov.w	r3, #4294967295
 80024d0:	6063      	str	r3, [r4, #4]
}
 80024d2:	bd10      	pop	{r4, pc}

080024d4 <nema_buffer_flush>:
uintptr_t nema_buffer_phys(nema_buffer_t *bo)
{
    return bo->base_phys;
}

void nema_buffer_flush(nema_buffer_t * bo)
 80024d4:	4770      	bx	lr

080024d6 <nema_mutex_lock>:
    /* Prevent unused argument(s) compilation warning */
    UNUSED(mutex_id);
/* USER CODE END nema_mutex_lock */

    return retval;
}
 80024d6:	2000      	movs	r0, #0
 80024d8:	4770      	bx	lr

080024da <nema_mutex_unlock>:

int nema_mutex_unlock(int mutex_id)
 80024da:	2000      	movs	r0, #0
 80024dc:	4770      	bx	lr

080024de <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80024de:	4770      	bx	lr

080024e0 <_ZN23ApplicationFontProviderD0Ev>:
 80024e0:	b510      	push	{r4, lr}
 80024e2:	4604      	mov	r4, r0
 80024e4:	2104      	movs	r1, #4
 80024e6:	f022 fbf8 	bl	8024cda <_ZdlPvj>
 80024ea:	4620      	mov	r0, r4
 80024ec:	bd10      	pop	{r4, pc}

080024ee <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 80024ee:	2901      	cmp	r1, #1
{
 80024f0:	b508      	push	{r3, lr}
    switch (typography)
 80024f2:	d006      	beq.n	8002502 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 80024f4:	2902      	cmp	r1, #2
 80024f6:	d008      	beq.n	800250a <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 80024f8:	b959      	cbnz	r1, 8002512 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80024fa:	f000 fbe1 	bl	8002cc0 <_ZN17TypedTextDatabase8getFontsEv>
 80024fe:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8002500:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002502:	f000 fbdd 	bl	8002cc0 <_ZN17TypedTextDatabase8getFontsEv>
 8002506:	6840      	ldr	r0, [r0, #4]
 8002508:	e7fa      	b.n	8002500 <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800250a:	f000 fbd9 	bl	8002cc0 <_ZN17TypedTextDatabase8getFontsEv>
 800250e:	6880      	ldr	r0, [r0, #8]
 8002510:	e7f6      	b.n	8002500 <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002512:	2000      	movs	r0, #0
 8002514:	e7f4      	b.n	8002500 <_ZN23ApplicationFontProvider7getFontEt+0x12>
	...

08002518 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002518:	4800      	ldr	r0, [pc, #0]	@ (800251c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800251a:	4770      	bx	lr
 800251c:	080268d0 	.word	0x080268d0

08002520 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002520:	2001      	movs	r0, #1
 8002522:	4770      	bx	lr

08002524 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002524:	b513      	push	{r0, r1, r4, lr}
 8002526:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002528:	b151      	cbz	r1, 8002540 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800252a:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 800252c:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800252e:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002532:	aa01      	add	r2, sp, #4
 8002534:	689c      	ldr	r4, [r3, #8]
 8002536:	f10d 0303 	add.w	r3, sp, #3
 800253a:	47a0      	blx	r4
        return glyph;
    }
 800253c:	b002      	add	sp, #8
 800253e:	bd10      	pop	{r4, pc}
            return 0;
 8002540:	4608      	mov	r0, r1
 8002542:	e7fb      	b.n	800253c <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002544 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002544:	89c0      	ldrh	r0, [r0, #14]
 8002546:	4770      	bx	lr

08002548 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002548:	8a00      	ldrh	r0, [r0, #16]
 800254a:	4770      	bx	lr

0800254c <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 800254c:	88c0      	ldrh	r0, [r0, #6]
 800254e:	4770      	bx	lr

08002550 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002550:	8880      	ldrh	r0, [r0, #4]
 8002552:	4770      	bx	lr

08002554 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002554:	7a80      	ldrb	r0, [r0, #10]
    }
 8002556:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 800255a:	4770      	bx	lr

0800255c <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800255c:	7a80      	ldrb	r0, [r0, #10]
    }
 800255e:	09c0      	lsrs	r0, r0, #7
 8002560:	4770      	bx	lr

08002562 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002562:	4770      	bx	lr

08002564 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002564:	4770      	bx	lr

08002566 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002566:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 800256a:	6808      	ldr	r0, [r1, #0]
 800256c:	6849      	ldr	r1, [r1, #4]
 800256e:	c303      	stmia	r3!, {r0, r1}
    }
 8002570:	4770      	bx	lr

08002572 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002572:	4770      	bx	lr

08002574 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002574:	4770      	bx	lr

08002576 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002576:	6041      	str	r1, [r0, #4]
    }
 8002578:	4770      	bx	lr

0800257a <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800257a:	4770      	bx	lr

0800257c <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800257c:	4b06      	ldr	r3, [pc, #24]	@ (8002598 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 800257e:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002582:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002586:	2300      	movs	r3, #0
 8002588:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800258c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002590:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 8002594:	4770      	bx	lr
 8002596:	bf00      	nop
 8002598:	0800263d 	.word	0x0800263d

0800259c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 800259c:	2301      	movs	r3, #1
 800259e:	7203      	strb	r3, [r0, #8]
    }
 80025a0:	4770      	bx	lr

080025a2 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80025a2:	4770      	bx	lr

080025a4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80025a4:	4770      	bx	lr

080025a6 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80025a6:	4603      	mov	r3, r0
 80025a8:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80025aa:	6841      	ldr	r1, [r0, #4]
 80025ac:	68c2      	ldr	r2, [r0, #12]
 80025ae:	689b      	ldr	r3, [r3, #8]
 80025b0:	1054      	asrs	r4, r2, #1
 80025b2:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80025b6:	07d2      	lsls	r2, r2, #31
 80025b8:	bf48      	it	mi
 80025ba:	590a      	ldrmi	r2, [r1, r4]
    }
 80025bc:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80025c0:	bf48      	it	mi
 80025c2:	58d3      	ldrmi	r3, [r2, r3]
 80025c4:	4718      	bx	r3

080025c6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 80025c6:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 80025c8:	6840      	ldr	r0, [r0, #4]
 80025ca:	b130      	cbz	r0, 80025da <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80025cc:	689a      	ldr	r2, [r3, #8]
 80025ce:	b91a      	cbnz	r2, 80025d8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 80025d0:	68d8      	ldr	r0, [r3, #12]
 80025d2:	f000 0001 	and.w	r0, r0, #1
 80025d6:	4770      	bx	lr
 80025d8:	2001      	movs	r0, #1
    }
 80025da:	4770      	bx	lr

080025dc <_ZN8touchgfx12NoTransitionD0Ev>:
 80025dc:	b510      	push	{r4, lr}
 80025de:	4604      	mov	r4, r0
 80025e0:	210c      	movs	r1, #12
 80025e2:	f022 fb7a 	bl	8024cda <_ZdlPvj>
 80025e6:	4620      	mov	r0, r4
 80025e8:	bd10      	pop	{r4, pc}

080025ea <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80025ea:	b510      	push	{r4, lr}
 80025ec:	4604      	mov	r4, r0
 80025ee:	2110      	movs	r1, #16
 80025f0:	f022 fb73 	bl	8024cda <_ZdlPvj>
 80025f4:	4620      	mov	r0, r4
 80025f6:	bd10      	pop	{r4, pc}

080025f8 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80025f8:	b510      	push	{r4, lr}
 80025fa:	4604      	mov	r4, r0
 80025fc:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8002600:	f022 fb6b 	bl	8024cda <_ZdlPvj>
 8002604:	4620      	mov	r0, r4
 8002606:	bd10      	pop	{r4, pc}

08002608 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002608:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 800260a:	f00d f881 	bl	800f710 <_ZN8touchgfx11Application11getInstanceEv>
    }
 800260e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8002612:	6803      	ldr	r3, [r0, #0]
 8002614:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002616:	4718      	bx	r3

08002618 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002618:	b510      	push	{r4, lr}
 800261a:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800261c:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 8002620:	b158      	cbz	r0, 800263a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002622:	6803      	ldr	r3, [r0, #0]
 8002624:	68db      	ldr	r3, [r3, #12]
 8002626:	4798      	blx	r3
 8002628:	b138      	cbz	r0, 800263a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800262a:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 800262e:	6803      	ldr	r3, [r0, #0]
 8002630:	689b      	ldr	r3, [r3, #8]
 8002632:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002634:	2300      	movs	r3, #0
 8002636:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 800263a:	bd10      	pop	{r4, pc}

0800263c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 800263c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002640:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002644:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002646:	68b0      	ldr	r0, [r6, #8]
 8002648:	6803      	ldr	r3, [r0, #0]
 800264a:	6a1b      	ldr	r3, [r3, #32]
 800264c:	4798      	blx	r3
 800264e:	2897      	cmp	r0, #151	@ 0x97
 8002650:	d805      	bhi.n	800265e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x22>
 8002652:	21a3      	movs	r1, #163	@ 0xa3
 8002654:	4b43      	ldr	r3, [pc, #268]	@ (8002764 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x128>)
 8002656:	4a44      	ldr	r2, [pc, #272]	@ (8002768 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002658:	4844      	ldr	r0, [pc, #272]	@ (800276c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 800265a:	f022 fb6b 	bl	8024d34 <__assert_func>
 800265e:	6870      	ldr	r0, [r6, #4]
 8002660:	6803      	ldr	r3, [r0, #0]
 8002662:	6a1b      	ldr	r3, [r3, #32]
 8002664:	4798      	blx	r3
 8002666:	280f      	cmp	r0, #15
 8002668:	d803      	bhi.n	8002672 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x36>
 800266a:	21a4      	movs	r1, #164	@ 0xa4
 800266c:	4b40      	ldr	r3, [pc, #256]	@ (8002770 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 800266e:	4a3e      	ldr	r2, [pc, #248]	@ (8002768 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
 8002670:	e7f2      	b.n	8002658 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002672:	68f0      	ldr	r0, [r6, #12]
 8002674:	6803      	ldr	r3, [r0, #0]
 8002676:	6a1b      	ldr	r3, [r3, #32]
 8002678:	4798      	blx	r3
 800267a:	280b      	cmp	r0, #11
 800267c:	d803      	bhi.n	8002686 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4a>
 800267e:	21a5      	movs	r1, #165	@ 0xa5
 8002680:	4b3c      	ldr	r3, [pc, #240]	@ (8002774 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002682:	4a39      	ldr	r2, [pc, #228]	@ (8002768 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
 8002684:	e7e8      	b.n	8002658 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 8002686:	f00d f843 	bl	800f710 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800268a:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 800277c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 800268e:	3004      	adds	r0, #4
 8002690:	f00d f863 	bl	800f75a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002694:	f8d9 0000 	ldr.w	r0, [r9]
 8002698:	b110      	cbz	r0, 80026a0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800269a:	6803      	ldr	r3, [r0, #0]
 800269c:	68db      	ldr	r3, [r3, #12]
 800269e:	4798      	blx	r3
    if (*currentTrans)
 80026a0:	f8d9 0000 	ldr.w	r0, [r9]
 80026a4:	b110      	cbz	r0, 80026ac <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80026a6:	6803      	ldr	r3, [r0, #0]
 80026a8:	681b      	ldr	r3, [r3, #0]
 80026aa:	4798      	blx	r3
    if (*currentScreen)
 80026ac:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8002780 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>
 80026b0:	f8d8 0000 	ldr.w	r0, [r8]
 80026b4:	b110      	cbz	r0, 80026bc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80026b6:	6803      	ldr	r3, [r0, #0]
 80026b8:	695b      	ldr	r3, [r3, #20]
 80026ba:	4798      	blx	r3
    if (*currentPresenter)
 80026bc:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80026c0:	b110      	cbz	r0, 80026c8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80026c2:	6803      	ldr	r3, [r0, #0]
 80026c4:	685b      	ldr	r3, [r3, #4]
 80026c6:	4798      	blx	r3
    if (*currentScreen)
 80026c8:	f8d8 0000 	ldr.w	r0, [r8]
 80026cc:	b110      	cbz	r0, 80026d4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80026ce:	6803      	ldr	r3, [r0, #0]
 80026d0:	681b      	ldr	r3, [r3, #0]
 80026d2:	4798      	blx	r3
    if (*currentPresenter)
 80026d4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80026d8:	b110      	cbz	r0, 80026e0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80026da:	6803      	ldr	r3, [r0, #0]
 80026dc:	689b      	ldr	r3, [r3, #8]
 80026de:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80026e0:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80026e2:	2100      	movs	r1, #0
 80026e4:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
 80026e6:	f04f 0b00 	mov.w	fp, #0
 80026ea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80026ec:	4798      	blx	r3
 80026ee:	4b22      	ldr	r3, [pc, #136]	@ (8002778 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 80026f0:	4604      	mov	r4, r0
 80026f2:	f8c0 b004 	str.w	fp, [r0, #4]
 80026f6:	f880 b008 	strb.w	fp, [r0, #8]
 80026fa:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80026fc:	68b0      	ldr	r0, [r6, #8]
 80026fe:	4659      	mov	r1, fp
 8002700:	6803      	ldr	r3, [r0, #0]
 8002702:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002704:	4798      	blx	r3
 8002706:	4605      	mov	r5, r0
 8002708:	f000 fb3c 	bl	8002d84 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800270c:	6870      	ldr	r0, [r6, #4]
 800270e:	4659      	mov	r1, fp
 8002710:	6803      	ldr	r3, [r0, #0]
 8002712:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002714:	4798      	blx	r3
 8002716:	4606      	mov	r6, r0
 8002718:	4629      	mov	r1, r5
 800271a:	f000 fb13 	bl	8002d44 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 800271e:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002720:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8002724:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002728:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800272c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002730:	682b      	ldr	r3, [r5, #0]
 8002732:	4628      	mov	r0, r5
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002734:	f8c6 a008 	str.w	sl, [r6, #8]
 8002738:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 800273a:	63ee      	str	r6, [r5, #60]	@ 0x3c
 800273c:	4798      	blx	r3
    newPresenter->activate();
 800273e:	6833      	ldr	r3, [r6, #0]
 8002740:	4630      	mov	r0, r6
 8002742:	681b      	ldr	r3, [r3, #0]
 8002744:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002746:	4621      	mov	r1, r4
 8002748:	4628      	mov	r0, r5
 800274a:	f00e fcab 	bl	80110a4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800274e:	6823      	ldr	r3, [r4, #0]
 8002750:	4620      	mov	r0, r4
 8002752:	691b      	ldr	r3, [r3, #16]
 8002754:	4798      	blx	r3
    newTransition->invalidate();
 8002756:	4620      	mov	r0, r4
 8002758:	6823      	ldr	r3, [r4, #0]
 800275a:	695b      	ldr	r3, [r3, #20]
}
 800275c:	b001      	add	sp, #4
 800275e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002762:	4718      	bx	r3
 8002764:	080268e4 	.word	0x080268e4
 8002768:	08026972 	.word	0x08026972
 800276c:	08026a44 	.word	0x08026a44
 8002770:	08026a8b 	.word	0x08026a8b
 8002774:	08026b2e 	.word	0x08026b2e
 8002778:	08026c48 	.word	0x08026c48
 800277c:	2004bfd8 	.word	0x2004bfd8
 8002780:	2004bfd4 	.word	0x2004bfd4

08002784 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002784:	b570      	push	{r4, r5, r6, lr}
 8002786:	4604      	mov	r4, r0
 8002788:	460d      	mov	r5, r1
 800278a:	4616      	mov	r6, r2
          pendingScreenTransitionCallback(0)
 800278c:	f00d f882 	bl	800f894 <_ZN8touchgfx11ApplicationC1Ev>
        : currentPresenter(0),
 8002790:	2100      	movs	r1, #0
        instance = this;
 8002792:	4b0a      	ldr	r3, [pc, #40]	@ (80027bc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x38>)
        : pobject(0), pmemfun(0)
 8002794:	e9c4 1153 	strd	r1, r1, [r4, #332]	@ 0x14c
 8002798:	601c      	str	r4, [r3, #0]
      model(m)
 800279a:	4b09      	ldr	r3, [pc, #36]	@ (80027c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x3c>)
          pendingScreenTransitionCallback(0)
 800279c:	e9c4 114f 	strd	r1, r1, [r4, #316]	@ 0x13c
 80027a0:	6023      	str	r3, [r4, #0]
 80027a2:	4b08      	ldr	r3, [pc, #32]	@ (80027c4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x40>)
 80027a4:	e9c4 6555 	strd	r6, r5, [r4, #340]	@ 0x154
 80027a8:	e9c4 3151 	strd	r3, r1, [r4, #324]	@ 0x144
        return instance;
 80027ac:	4b06      	ldr	r3, [pc, #24]	@ (80027c8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x44>)
 80027ae:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80027b0:	6803      	ldr	r3, [r0, #0]
 80027b2:	689b      	ldr	r3, [r3, #8]
 80027b4:	4798      	blx	r3
}
 80027b6:	4620      	mov	r0, r4
 80027b8:	bd70      	pop	{r4, r5, r6, pc}
 80027ba:	bf00      	nop
 80027bc:	2004bfe4 	.word	0x2004bfe4
 80027c0:	08026bf4 	.word	0x08026bf4
 80027c4:	08026bdc 	.word	0x08026bdc
 80027c8:	2004bf98 	.word	0x2004bf98

080027cc <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80027cc:	4b06      	ldr	r3, [pc, #24]	@ (80027e8 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 80027ce:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80027d2:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80027d6:	2300      	movs	r3, #0
 80027d8:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80027dc:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80027e0:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80027e4:	4770      	bx	lr
 80027e6:	bf00      	nop
 80027e8:	0800263d 	.word	0x0800263d

080027ec <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80027ec:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 80027ee:	4770      	bx	lr

080027f0 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80027f0:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 80027f2:	4770      	bx	lr

080027f4 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80027f4:	4770      	bx	lr

080027f6 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80027f6:	888b      	ldrh	r3, [r1, #4]
 80027f8:	69c0      	ldr	r0, [r0, #28]
 80027fa:	0adb      	lsrs	r3, r3, #11
 80027fc:	680a      	ldr	r2, [r1, #0]
 80027fe:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002802:	4410      	add	r0, r2
 8002804:	4770      	bx	lr

08002806 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002806:	b510      	push	{r4, lr}
 8002808:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 800280a:	b1ba      	cbz	r2, 800283c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800280c:	7b10      	ldrb	r0, [r2, #12]
 800280e:	b168      	cbz	r0, 800282c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002810:	7b53      	ldrb	r3, [r2, #13]
 8002812:	7ad2      	ldrb	r2, [r2, #11]
 8002814:	021b      	lsls	r3, r3, #8
 8002816:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800281a:	431a      	orrs	r2, r3
 800281c:	6a23      	ldr	r3, [r4, #32]
 800281e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002822:	881a      	ldrh	r2, [r3, #0]
 8002824:	428a      	cmp	r2, r1
 8002826:	d102      	bne.n	800282e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002828:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 800282c:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800282e:	d805      	bhi.n	800283c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002830:	3801      	subs	r0, #1
 8002832:	b280      	uxth	r0, r0
 8002834:	3304      	adds	r3, #4
 8002836:	2800      	cmp	r0, #0
 8002838:	d1f3      	bne.n	8002822 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800283a:	e7f7      	b.n	800282c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 800283c:	2000      	movs	r0, #0
 800283e:	e7f5      	b.n	800282c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002840 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002840:	b510      	push	{r4, lr}
 8002842:	4604      	mov	r4, r0
 8002844:	212c      	movs	r1, #44	@ 0x2c
 8002846:	f022 fa48 	bl	8024cda <_ZdlPvj>
 800284a:	4620      	mov	r0, r4
 800284c:	bd10      	pop	{r4, pc}
	...

08002850 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002850:	b530      	push	{r4, r5, lr}
 8002852:	4604      	mov	r4, r0
 8002854:	b08b      	sub	sp, #44	@ 0x2c
      arabicTable(formsTable)
 8002856:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 800285a:	9508      	str	r5, [sp, #32]
 800285c:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8002860:	9507      	str	r5, [sp, #28]
 8002862:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8002866:	9506      	str	r5, [sp, #24]
 8002868:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 800286c:	9505      	str	r5, [sp, #20]
 800286e:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8002872:	9504      	str	r5, [sp, #16]
 8002874:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8002878:	9503      	str	r5, [sp, #12]
 800287a:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 800287e:	9502      	str	r5, [sp, #8]
 8002880:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 8002884:	9501      	str	r5, [sp, #4]
 8002886:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800288a:	9500      	str	r5, [sp, #0]
 800288c:	f00e f864 	bl	8010958 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
}
 8002890:	4620      	mov	r0, r4
      arabicTable(formsTable)
 8002892:	4b06      	ldr	r3, [pc, #24]	@ (80028ac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8002894:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8002896:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8002898:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 800289a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800289c:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 800289e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80028a0:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 80028a2:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80028a4:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 80028a6:	b00b      	add	sp, #44	@ 0x2c
 80028a8:	bd30      	pop	{r4, r5, pc}
 80028aa:	bf00      	nop
 80028ac:	08026c6c 	.word	0x08026c6c

080028b0 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80028b0:	2000      	movs	r0, #0
 80028b2:	4770      	bx	lr

080028b4 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80028b4:	8081      	strh	r1, [r0, #4]
    }
 80028b6:	4770      	bx	lr

080028b8 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80028b8:	80c1      	strh	r1, [r0, #6]
    }
 80028ba:	4770      	bx	lr

080028bc <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80028bc:	8101      	strh	r1, [r0, #8]
    }
 80028be:	4770      	bx	lr

080028c0 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80028c0:	8141      	strh	r1, [r0, #10]
    }
 80028c2:	4770      	bx	lr

080028c4 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80028c4:	4770      	bx	lr

080028c6 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 80028c6:	4770      	bx	lr

080028c8 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 80028c8:	4770      	bx	lr

080028ca <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 80028ca:	4770      	bx	lr

080028cc <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80028cc:	4770      	bx	lr

080028ce <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80028ce:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80028d0:	88c4      	ldrh	r4, [r0, #6]
 80028d2:	6803      	ldr	r3, [r0, #0]
 80028d4:	1b12      	subs	r2, r2, r4
 80028d6:	8884      	ldrh	r4, [r0, #4]
 80028d8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80028da:	1b09      	subs	r1, r1, r4
 80028dc:	b212      	sxth	r2, r2
    }
 80028de:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80028e2:	b209      	sxth	r1, r1
 80028e4:	4718      	bx	r3

080028e6 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80028e6:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80028ea:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80028ec:	f04f 33ff 	mov.w	r3, #4294967295
 80028f0:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80028f2:	6813      	ldr	r3, [r2, #0]
 80028f4:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80028f6:	6010      	str	r0, [r2, #0]
    }
 80028f8:	4770      	bx	lr

080028fa <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80028fa:	4770      	bx	lr

080028fc <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80028fc:	4770      	bx	lr

080028fe <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80028fe:	4770      	bx	lr

08002900 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002900:	4770      	bx	lr

08002902 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002902:	4770      	bx	lr

08002904 <_ZN15Screen1ViewBaseD1Ev>:
}

Screen1ViewBase::~Screen1ViewBase()
{

}
 8002904:	4770      	bx	lr

08002906 <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{

}
 8002906:	4770      	bx	lr

08002908 <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 8002908:	b510      	push	{r4, lr}
 800290a:	4604      	mov	r4, r0
}
 800290c:	2198      	movs	r1, #152	@ 0x98
 800290e:	f022 f9e4 	bl	8024cda <_ZdlPvj>
 8002912:	4620      	mov	r0, r4
 8002914:	bd10      	pop	{r4, pc}

08002916 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002916:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800291a:	b112      	cbz	r2, 8002922 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800291c:	6803      	ldr	r3, [r0, #0]
 800291e:	695b      	ldr	r3, [r3, #20]
 8002920:	4718      	bx	r3
    }
 8002922:	4770      	bx	lr

08002924 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002924:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8002928:	b11a      	cbz	r2, 8002932 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800292a:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 800292e:	b102      	cbz	r2, 8002932 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002930:	6018      	str	r0, [r3, #0]
        }
    }
 8002932:	4770      	bx	lr

08002934 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002934:	b570      	push	{r4, r5, r6, lr}
 8002936:	4604      	mov	r4, r0
 8002938:	4615      	mov	r5, r2
        setX(x);
 800293a:	6803      	ldr	r3, [r0, #0]
 800293c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800293e:	4798      	blx	r3
        setY(y);
 8002940:	6823      	ldr	r3, [r4, #0]
 8002942:	4629      	mov	r1, r5
 8002944:	4620      	mov	r0, r4
    }
 8002946:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 800294a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800294c:	4718      	bx	r3
	...

08002950 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase()
 8002950:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8002954:	4604      	mov	r4, r0
        : presenter(0)
 8002956:	2500      	movs	r5, #0
 8002958:	4626      	mov	r6, r4
 800295a:	f00e f9f7 	bl	8010d4c <_ZN8touchgfx6ScreenC1Ev>
 800295e:	4b2d      	ldr	r3, [pc, #180]	@ (8002a14 <_ZN15Screen1ViewBaseC1Ev+0xc4>)
 8002960:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8002962:	f846 3b40 	str.w	r3, [r6], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002966:	4b2c      	ldr	r3, [pc, #176]	@ (8002a18 <_ZN15Screen1ViewBaseC1Ev+0xc8>)
          touchable(false),
 8002968:	f44f 7280 	mov.w	r2, #256	@ 0x100
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 800296c:	e9c4 3510 	strd	r3, r5, [r4, #64]	@ 0x40
 8002970:	23ff      	movs	r3, #255	@ 0xff
 8002972:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002976:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800297a:	f8a4 2064 	strh.w	r2, [r4, #100]	@ 0x64
 800297e:	f8a4 2090 	strh.w	r2, [r4, #144]	@ 0x90
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8002982:	4a26      	ldr	r2, [pc, #152]	@ (8002a1c <_ZN15Screen1ViewBaseC1Ev+0xcc>)
 8002984:	f104 076c 	add.w	r7, r4, #108	@ 0x6c
 8002988:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
 800298c:	f884 3094 	strb.w	r3, [r4, #148]	@ 0x94
    {
        Image::setBitmap(bmp);
 8002990:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 8002992:	66e2      	str	r2, [r4, #108]	@ 0x6c
        Image::setBitmap(bmp);
 8002994:	a901      	add	r1, sp, #4
 8002996:	e9c4 5512 	strd	r5, r5, [r4, #72]	@ 0x48
          parent(0),
 800299a:	e9c4 5514 	strd	r5, r5, [r4, #80]	@ 0x50
          nextDrawChainElement(0),
 800299e:	e9c4 5516 	strd	r5, r5, [r4, #88]	@ 0x58
 80029a2:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
 80029a6:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
 80029aa:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
 80029ae:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
 80029b2:	6625      	str	r5, [r4, #96]	@ 0x60
        : color(col)
 80029b4:	66a5      	str	r5, [r4, #104]	@ 0x68
 80029b6:	f8ad 3004 	strh.w	r3, [sp, #4]
 80029ba:	f00b fdf4 	bl	800e5a6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 80029be:	462a      	mov	r2, r5
 80029c0:	4629      	mov	r1, r5
 80029c2:	4630      	mov	r0, r6
 80029c4:	f7ff ffb6 	bl	8002934 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80029c8:	4630      	mov	r0, r6
 80029ca:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 80029ce:	f7ff ff75 	bl	80028bc <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 80029d2:	4630      	mov	r0, r6
 80029d4:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 80029d8:	f7ff ff72 	bl	80028c0 <_ZN8touchgfx8Drawable9setHeightEs>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80029dc:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80029e0:	f104 0804 	add.w	r8, r4, #4
 80029e4:	66a3      	str	r3, [r4, #104]	@ 0x68
 80029e6:	4631      	mov	r1, r6
 80029e8:	4640      	mov	r0, r8
 80029ea:	f00a fbf5 	bl	800d1d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80029ee:	462a      	mov	r2, r5
 80029f0:	4629      	mov	r1, r5
 80029f2:	4638      	mov	r0, r7
 80029f4:	f7ff ff9e 	bl	8002934 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_1024X600_POLY_ID));
 80029f8:	4638      	mov	r0, r7
 80029fa:	a901      	add	r1, sp, #4
 80029fc:	f8ad 5004 	strh.w	r5, [sp, #4]
 8002a00:	f00b fdd1 	bl	800e5a6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002a04:	4640      	mov	r0, r8
 8002a06:	4639      	mov	r1, r7
 8002a08:	f00a fbe6 	bl	800d1d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002a0c:	4620      	mov	r0, r4
 8002a0e:	b002      	add	sp, #8
 8002a10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002a14:	08026ccc 	.word	0x08026ccc
 8002a18:	080271f4 	.word	0x080271f4
 8002a1c:	0802725c 	.word	0x0802725c

08002a20 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002a20:	4770      	bx	lr
	...

08002a24 <_Z23getFont_verdana_10_4bppv>:
{
 8002a24:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002a26:	4d15      	ldr	r5, [pc, #84]	@ (8002a7c <_Z23getFont_verdana_10_4bppv+0x58>)
{
 8002a28:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002a2a:	e8d5 4faf 	lda	r4, [r5]
 8002a2e:	f014 0401 	ands.w	r4, r4, #1
 8002a32:	d120      	bne.n	8002a76 <_Z23getFont_verdana_10_4bppv+0x52>
 8002a34:	4628      	mov	r0, r5
 8002a36:	f022 f952 	bl	8024cde <__cxa_guard_acquire>
 8002a3a:	b1e0      	cbz	r0, 8002a76 <_Z23getFont_verdana_10_4bppv+0x52>
 8002a3c:	233f      	movs	r3, #63	@ 0x3f
 8002a3e:	9309      	str	r3, [sp, #36]	@ 0x24
 8002a40:	4b0f      	ldr	r3, [pc, #60]	@ (8002a80 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8002a42:	2201      	movs	r2, #1
 8002a44:	9308      	str	r3, [sp, #32]
 8002a46:	4b0f      	ldr	r3, [pc, #60]	@ (8002a84 <_Z23getFont_verdana_10_4bppv+0x60>)
 8002a48:	490f      	ldr	r1, [pc, #60]	@ (8002a88 <_Z23getFont_verdana_10_4bppv+0x64>)
 8002a4a:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002a4e:	2304      	movs	r3, #4
 8002a50:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002a54:	230a      	movs	r3, #10
 8002a56:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8002a5a:	9300      	str	r3, [sp, #0]
 8002a5c:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002a60:	480a      	ldr	r0, [pc, #40]	@ (8002a8c <_Z23getFont_verdana_10_4bppv+0x68>)
 8002a62:	940a      	str	r4, [sp, #40]	@ 0x28
 8002a64:	9405      	str	r4, [sp, #20]
 8002a66:	f7ff fef3 	bl	8002850 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002a6a:	4809      	ldr	r0, [pc, #36]	@ (8002a90 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8002a6c:	f022 f980 	bl	8024d70 <atexit>
 8002a70:	4628      	mov	r0, r5
 8002a72:	f022 f940 	bl	8024cf6 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8002a76:	4805      	ldr	r0, [pc, #20]	@ (8002a8c <_Z23getFont_verdana_10_4bppv+0x68>)
 8002a78:	b00f      	add	sp, #60	@ 0x3c
 8002a7a:	bd30      	pop	{r4, r5, pc}
 8002a7c:	2003e1f4 	.word	0x2003e1f4
 8002a80:	08029714 	.word	0x08029714
 8002a84:	08029720 	.word	0x08029720
 8002a88:	90000178 	.word	0x90000178
 8002a8c:	2003e1f8 	.word	0x2003e1f8
 8002a90:	08002a21 	.word	0x08002a21

08002a94 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002a94:	4770      	bx	lr
	...

08002a98 <_Z23getFont_verdana_20_4bppv>:
{
 8002a98:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002a9a:	4d15      	ldr	r5, [pc, #84]	@ (8002af0 <_Z23getFont_verdana_20_4bppv+0x58>)
{
 8002a9c:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002a9e:	e8d5 4faf 	lda	r4, [r5]
 8002aa2:	f014 0401 	ands.w	r4, r4, #1
 8002aa6:	d120      	bne.n	8002aea <_Z23getFont_verdana_20_4bppv+0x52>
 8002aa8:	4628      	mov	r0, r5
 8002aaa:	f022 f918 	bl	8024cde <__cxa_guard_acquire>
 8002aae:	b1e0      	cbz	r0, 8002aea <_Z23getFont_verdana_20_4bppv+0x52>
 8002ab0:	233f      	movs	r3, #63	@ 0x3f
 8002ab2:	9309      	str	r3, [sp, #36]	@ 0x24
 8002ab4:	4b0f      	ldr	r3, [pc, #60]	@ (8002af4 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8002ab6:	2201      	movs	r2, #1
 8002ab8:	9308      	str	r3, [sp, #32]
 8002aba:	4b0f      	ldr	r3, [pc, #60]	@ (8002af8 <_Z23getFont_verdana_20_4bppv+0x60>)
 8002abc:	490f      	ldr	r1, [pc, #60]	@ (8002afc <_Z23getFont_verdana_20_4bppv+0x64>)
 8002abe:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002ac2:	2304      	movs	r3, #4
 8002ac4:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002ac8:	2314      	movs	r3, #20
 8002aca:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8002ace:	9300      	str	r3, [sp, #0]
 8002ad0:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002ad4:	480a      	ldr	r0, [pc, #40]	@ (8002b00 <_Z23getFont_verdana_20_4bppv+0x68>)
 8002ad6:	940a      	str	r4, [sp, #40]	@ 0x28
 8002ad8:	9405      	str	r4, [sp, #20]
 8002ada:	f7ff feb9 	bl	8002850 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002ade:	4809      	ldr	r0, [pc, #36]	@ (8002b04 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8002ae0:	f022 f946 	bl	8024d70 <atexit>
 8002ae4:	4628      	mov	r0, r5
 8002ae6:	f022 f906 	bl	8024cf6 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8002aea:	4805      	ldr	r0, [pc, #20]	@ (8002b00 <_Z23getFont_verdana_20_4bppv+0x68>)
 8002aec:	b00f      	add	sp, #60	@ 0x3c
 8002aee:	bd30      	pop	{r4, r5, pc}
 8002af0:	2003e224 	.word	0x2003e224
 8002af4:	08029718 	.word	0x08029718
 8002af8:	08029724 	.word	0x08029724
 8002afc:	90000188 	.word	0x90000188
 8002b00:	2003e228 	.word	0x2003e228
 8002b04:	08002a95 	.word	0x08002a95

08002b08 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002b08:	4770      	bx	lr
	...

08002b0c <_Z23getFont_verdana_40_4bppv>:
{
 8002b0c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002b0e:	4d15      	ldr	r5, [pc, #84]	@ (8002b64 <_Z23getFont_verdana_40_4bppv+0x58>)
{
 8002b10:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002b12:	e8d5 4faf 	lda	r4, [r5]
 8002b16:	f014 0401 	ands.w	r4, r4, #1
 8002b1a:	d120      	bne.n	8002b5e <_Z23getFont_verdana_40_4bppv+0x52>
 8002b1c:	4628      	mov	r0, r5
 8002b1e:	f022 f8de 	bl	8024cde <__cxa_guard_acquire>
 8002b22:	b1e0      	cbz	r0, 8002b5e <_Z23getFont_verdana_40_4bppv+0x52>
 8002b24:	233f      	movs	r3, #63	@ 0x3f
 8002b26:	9309      	str	r3, [sp, #36]	@ 0x24
 8002b28:	4b0f      	ldr	r3, [pc, #60]	@ (8002b68 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8002b2a:	2201      	movs	r2, #1
 8002b2c:	9308      	str	r3, [sp, #32]
 8002b2e:	4b0f      	ldr	r3, [pc, #60]	@ (8002b6c <_Z23getFont_verdana_40_4bppv+0x60>)
 8002b30:	490f      	ldr	r1, [pc, #60]	@ (8002b70 <_Z23getFont_verdana_40_4bppv+0x64>)
 8002b32:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002b36:	2304      	movs	r3, #4
 8002b38:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002b3c:	2328      	movs	r3, #40	@ 0x28
 8002b3e:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8002b42:	9300      	str	r3, [sp, #0]
 8002b44:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002b48:	480a      	ldr	r0, [pc, #40]	@ (8002b74 <_Z23getFont_verdana_40_4bppv+0x68>)
 8002b4a:	940a      	str	r4, [sp, #40]	@ 0x28
 8002b4c:	9405      	str	r4, [sp, #20]
 8002b4e:	f7ff fe7f 	bl	8002850 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002b52:	4809      	ldr	r0, [pc, #36]	@ (8002b78 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8002b54:	f022 f90c 	bl	8024d70 <atexit>
 8002b58:	4628      	mov	r0, r5
 8002b5a:	f022 f8cc 	bl	8024cf6 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8002b5e:	4805      	ldr	r0, [pc, #20]	@ (8002b74 <_Z23getFont_verdana_40_4bppv+0x68>)
 8002b60:	b00f      	add	sp, #60	@ 0x3c
 8002b62:	bd30      	pop	{r4, r5, pc}
 8002b64:	2003e254 	.word	0x2003e254
 8002b68:	0802971c 	.word	0x0802971c
 8002b6c:	08029728 	.word	0x08029728
 8002b70:	90000198 	.word	0x90000198
 8002b74:	2003e258 	.word	0x2003e258
 8002b78:	08002b09 	.word	0x08002b09

08002b7c <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8002b7c:	2000      	movs	r0, #0
 8002b7e:	4770      	bx	lr

08002b80 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8002b80:	2000      	movs	r0, #0
 8002b82:	4770      	bx	lr

08002b84 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002b84:	b40e      	push	{r1, r2, r3}
 8002b86:	b503      	push	{r0, r1, lr}
 8002b88:	ab03      	add	r3, sp, #12
 8002b8a:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002b8e:	2100      	movs	r1, #0
    va_start(pArg, text);
 8002b90:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002b92:	f00d fd09 	bl	80105a8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002b96:	b002      	add	sp, #8
 8002b98:	f85d eb04 	ldr.w	lr, [sp], #4
 8002b9c:	b003      	add	sp, #12
 8002b9e:	4770      	bx	lr

08002ba0 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002ba0:	b40c      	push	{r2, r3}
 8002ba2:	b507      	push	{r0, r1, r2, lr}
 8002ba4:	ab04      	add	r3, sp, #16
 8002ba6:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8002baa:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8002bac:	f00d fcfc 	bl	80105a8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002bb0:	b003      	add	sp, #12
 8002bb2:	f85d eb04 	ldr.w	lr, [sp], #4
 8002bb6:	b002      	add	sp, #8
 8002bb8:	4770      	bx	lr
	...

08002bbc <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8002bbc:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 8002bbe:	b510      	push	{r4, lr}
 8002bc0:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8002bc2:	b373      	cbz	r3, 8002c22 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8002bc4:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 8002bc6:	b92b      	cbnz	r3, 8002bd4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8002bc8:	21c5      	movs	r1, #197	@ 0xc5
 8002bca:	4b18      	ldr	r3, [pc, #96]	@ (8002c2c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8002bcc:	4a18      	ldr	r2, [pc, #96]	@ (8002c30 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8002bce:	4819      	ldr	r0, [pc, #100]	@ (8002c34 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8002bd0:	f022 f8b0 	bl	8024d34 <__assert_func>
            return buffer[pos];
 8002bd4:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8002bd6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8002bda:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 8002bdc:	b30b      	cbz	r3, 8002c22 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8002bde:	f00e ff28 	bl	8011a32 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8002be2:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8002be4:	2b01      	cmp	r3, #1
 8002be6:	d803      	bhi.n	8002bf0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8002be8:	21cb      	movs	r1, #203	@ 0xcb
 8002bea:	4b13      	ldr	r3, [pc, #76]	@ (8002c38 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8002bec:	4a13      	ldr	r2, [pc, #76]	@ (8002c3c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002bee:	e7ee      	b.n	8002bce <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8002bf0:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8002bf2:	f640 103f 	movw	r0, #2367	@ 0x93f
 8002bf6:	1c53      	adds	r3, r2, #1
 8002bf8:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8002bfa:	4619      	mov	r1, r3
 8002bfc:	2b09      	cmp	r3, #9
 8002bfe:	bf88      	it	hi
 8002c00:	f1a3 010a 	subhi.w	r1, r3, #10
 8002c04:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8002c08:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 8002c0a:	4281      	cmp	r1, r0
 8002c0c:	d109      	bne.n	8002c22 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8002c0e:	2b0a      	cmp	r3, #10
 8002c10:	bf28      	it	cs
 8002c12:	2300      	movcs	r3, #0
 8002c14:	eb04 0242 	add.w	r2, r4, r2, lsl #1
            return buffer[pos];
 8002c18:	8c50      	ldrh	r0, [r2, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8002c1a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8002c1e:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 8002c20:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8002c22:	4620      	mov	r0, r4
}
 8002c24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8002c28:	f00e be06 	b.w	8011838 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8002c2c:	08026cf8 	.word	0x08026cf8
 8002c30:	08026d01 	.word	0x08026d01
 8002c34:	08026dac 	.word	0x08026dac
 8002c38:	08026df6 	.word	0x08026df6
 8002c3c:	08026e04 	.word	0x08026e04

08002c40 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8002c40:	f00e bdc1 	b.w	80117c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08002c44 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8002c44:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8002c46:	bb18      	cbnz	r0, 8002c90 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8002c48:	4b12      	ldr	r3, [pc, #72]	@ (8002c94 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8002c4a:	4813      	ldr	r0, [pc, #76]	@ (8002c98 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8002c4c:	681c      	ldr	r4, [r3, #0]
 8002c4e:	4913      	ldr	r1, [pc, #76]	@ (8002c9c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8002c50:	b1b4      	cbz	r4, 8002c80 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002c52:	6822      	ldr	r2, [r4, #0]
 8002c54:	4422      	add	r2, r4
 8002c56:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8002c58:	6862      	ldr	r2, [r4, #4]
 8002c5a:	4422      	add	r2, r4
 8002c5c:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002c5e:	68a2      	ldr	r2, [r4, #8]
 8002c60:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8002c62:	2200      	movs	r2, #0
 8002c64:	4b0e      	ldr	r3, [pc, #56]	@ (8002ca0 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8002c66:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8002c68:	f000 f82a 	bl	8002cc0 <_ZN17TypedTextDatabase8getFontsEv>
 8002c6c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8002c6e:	f000 f825 	bl	8002cbc <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8002c72:	4b0c      	ldr	r3, [pc, #48]	@ (8002ca4 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8002c74:	601c      	str	r4, [r3, #0]
        fonts = f;
 8002c76:	4b0c      	ldr	r3, [pc, #48]	@ (8002ca8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8002c78:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8002c7a:	4b0c      	ldr	r3, [pc, #48]	@ (8002cac <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8002c7c:	8018      	strh	r0, [r3, #0]
    }
}
 8002c7e:	e007      	b.n	8002c90 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8002c80:	4b0b      	ldr	r3, [pc, #44]	@ (8002cb0 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8002c82:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8002c84:	4b0b      	ldr	r3, [pc, #44]	@ (8002cb4 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8002c86:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8002c88:	4b0b      	ldr	r3, [pc, #44]	@ (8002cb8 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8002c8a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8002c8c:	2c00      	cmp	r4, #0
 8002c8e:	d1e8      	bne.n	8002c62 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8002c90:	bd38      	pop	{r3, r4, r5, pc}
 8002c92:	bf00      	nop
 8002c94:	2003e290 	.word	0x2003e290
 8002c98:	2003e288 	.word	0x2003e288
 8002c9c:	2003e284 	.word	0x2003e284
 8002ca0:	2003e28c 	.word	0x2003e28c
 8002ca4:	2004bfe8 	.word	0x2004bfe8
 8002ca8:	2004bff0 	.word	0x2004bff0
 8002cac:	2004bfec 	.word	0x2004bfec
 8002cb0:	900001ac 	.word	0x900001ac
 8002cb4:	900001a8 	.word	0x900001a8
 8002cb8:	900001b0 	.word	0x900001b0

08002cbc <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return 0;
}
 8002cbc:	2000      	movs	r0, #0
 8002cbe:	4770      	bx	lr

08002cc0 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8002cc0:	4800      	ldr	r0, [pc, #0]	@ (8002cc4 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8002cc2:	4770      	bx	lr
 8002cc4:	2003e294 	.word	0x2003e294

08002cc8 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8002cc8:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 8002cca:	f7ff fee5 	bl	8002a98 <_Z23getFont_verdana_20_4bppv>
};
 8002cce:	4c04      	ldr	r4, [pc, #16]	@ (8002ce0 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8002cd0:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8002cd2:	f7ff ff1b 	bl	8002b0c <_Z23getFont_verdana_40_4bppv>
};
 8002cd6:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8002cd8:	f7ff fea4 	bl	8002a24 <_Z23getFont_verdana_10_4bppv>
};
 8002cdc:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8002cde:	bd10      	pop	{r4, pc}
 8002ce0:	2003e294 	.word	0x2003e294

08002ce4 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8002ce4:	4770      	bx	lr

08002ce6 <_ZN19FrontendApplicationD0Ev>:
 8002ce6:	b510      	push	{r4, lr}
 8002ce8:	4604      	mov	r4, r0
 8002cea:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8002cee:	f021 fff4 	bl	8024cda <_ZdlPvj>
 8002cf2:	4620      	mov	r0, r4
 8002cf4:	bd10      	pop	{r4, pc}

08002cf6 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8002cf6:	b510      	push	{r4, lr}
 8002cf8:	4604      	mov	r4, r0
    {
        model.tick();
 8002cfa:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 8002cfe:	f000 f812 	bl	8002d26 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8002d02:	4620      	mov	r0, r4
    }
 8002d04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8002d08:	f00c bd84 	b.w	800f814 <_ZN8touchgfx11Application15handleTickEventEv>

08002d0c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8002d0c:	b510      	push	{r4, lr}
 8002d0e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8002d10:	f7ff fd38 	bl	8002784 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8002d14:	4b01      	ldr	r3, [pc, #4]	@ (8002d1c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
 8002d16:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
 8002d18:	6023      	str	r3, [r4, #0]
}
 8002d1a:	bd10      	pop	{r4, pc}
 8002d1c:	08026ee0 	.word	0x08026ee0

08002d20 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8002d20:	2200      	movs	r2, #0
 8002d22:	6002      	str	r2, [r0, #0]
{

}
 8002d24:	4770      	bx	lr

08002d26 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8002d26:	4770      	bx	lr

08002d28 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 8002d28:	4770      	bx	lr

08002d2a <_ZThn4_N16Screen1PresenterD1Ev>:
 8002d2a:	3804      	subs	r0, #4
 8002d2c:	4770      	bx	lr

08002d2e <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8002d2e:	4770      	bx	lr

08002d30 <_ZN16Screen1PresenterD0Ev>:
 8002d30:	b510      	push	{r4, lr}
 8002d32:	4604      	mov	r4, r0
 8002d34:	2110      	movs	r1, #16
 8002d36:	f021 ffd0 	bl	8024cda <_ZdlPvj>
 8002d3a:	4620      	mov	r0, r4
 8002d3c:	bd10      	pop	{r4, pc}

08002d3e <_ZThn4_N16Screen1PresenterD0Ev>:
 8002d3e:	f1a0 0004 	sub.w	r0, r0, #4
 8002d42:	e7f5      	b.n	8002d30 <_ZN16Screen1PresenterD0Ev>

08002d44 <_ZN16Screen1PresenterC1ER11Screen1View>:
    ModelListener() : model(0) {}
 8002d44:	2200      	movs	r2, #0
 8002d46:	6082      	str	r2, [r0, #8]
    : view(v)
 8002d48:	4a02      	ldr	r2, [pc, #8]	@ (8002d54 <_ZN16Screen1PresenterC1ER11Screen1View+0x10>)
 8002d4a:	60c1      	str	r1, [r0, #12]
 8002d4c:	6002      	str	r2, [r0, #0]
 8002d4e:	3218      	adds	r2, #24
 8002d50:	6042      	str	r2, [r0, #4]
}
 8002d52:	4770      	bx	lr
 8002d54:	08026f34 	.word	0x08026f34

08002d58 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8002d58:	4770      	bx	lr
	...

08002d5c <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8002d5c:	b510      	push	{r4, lr}
 8002d5e:	4604      	mov	r4, r0
 8002d60:	4b02      	ldr	r3, [pc, #8]	@ (8002d6c <_ZN11Screen1ViewD1Ev+0x10>)
 8002d62:	6003      	str	r3, [r0, #0]
 8002d64:	f7ff fdce 	bl	8002904 <_ZN15Screen1ViewBaseD1Ev>
 8002d68:	4620      	mov	r0, r4
 8002d6a:	bd10      	pop	{r4, pc}
 8002d6c:	08026f5c 	.word	0x08026f5c

08002d70 <_ZN11Screen1ViewD0Ev>:
 8002d70:	b510      	push	{r4, lr}
 8002d72:	4604      	mov	r4, r0
 8002d74:	f7ff fff2 	bl	8002d5c <_ZN11Screen1ViewD1Ev>
 8002d78:	4620      	mov	r0, r4
 8002d7a:	2198      	movs	r1, #152	@ 0x98
 8002d7c:	f021 ffad 	bl	8024cda <_ZdlPvj>
 8002d80:	4620      	mov	r0, r4
 8002d82:	bd10      	pop	{r4, pc}

08002d84 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8002d84:	b510      	push	{r4, lr}
 8002d86:	4604      	mov	r4, r0
 8002d88:	f7ff fde2 	bl	8002950 <_ZN15Screen1ViewBaseC1Ev>
 8002d8c:	4b01      	ldr	r3, [pc, #4]	@ (8002d94 <_ZN11Screen1ViewC1Ev+0x10>)
}
 8002d8e:	4620      	mov	r0, r4
Screen1View::Screen1View()
 8002d90:	6023      	str	r3, [r4, #0]
}
 8002d92:	bd10      	pop	{r4, pc}
 8002d94:	08026f5c 	.word	0x08026f5c

08002d98 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8002d98:	f7ff bdb5 	b.w	8002906 <_ZN15Screen1ViewBase11setupScreenEv>

08002d9c <APS512XX_EnableMemoryMappedMode>:
  * @param  BurstType Type of burst used for the access
  * @retval Memory status
  */
int32_t APS512XX_EnableMemoryMappedMode(XSPI_HandleTypeDef *Ctx, uint32_t ReadLatencyCode, uint32_t WriteLatencyCode,
                                        uint32_t IOMode, uint32_t BurstType)
{
 8002d9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002da0:	b096      	sub	sp, #88	@ 0x58
 8002da2:	4605      	mov	r5, r0
 8002da4:	4617      	mov	r7, r2
 8002da6:	460e      	mov	r6, r1
  XSPI_RegularCmdTypeDef   sCommand = {0};
 8002da8:	224c      	movs	r2, #76	@ 0x4c
 8002daa:	2100      	movs	r1, #0
 8002dac:	a803      	add	r0, sp, #12
{
 8002dae:	4698      	mov	r8, r3
 8002db0:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
  XSPI_RegularCmdTypeDef   sCommand = {0};
 8002db2:	f022 facb 	bl	802534c <memset>
  XSPI_MemoryMappedTypeDef sMemMappedCfg = {0};
 8002db6:	2300      	movs	r3, #0
 8002db8:	e9cd 3300 	strd	r3, r3, [sp]

  /* Initialize the write command */
  sCommand.OperationType       = HAL_XSPI_OPTYPE_WRITE_CFG;
 8002dbc:	2302      	movs	r3, #2
 8002dbe:	9302      	str	r3, [sp, #8]
  sCommand.InstructionMode     = HAL_XSPI_INSTRUCTION_8_LINES;
 8002dc0:	2304      	movs	r3, #4
  sCommand.InstructionWidth    = HAL_XSPI_INSTRUCTION_8_BITS;
  sCommand.InstructionDTRMode  = HAL_XSPI_INSTRUCTION_DTR_DISABLE;
  sCommand.Instruction         = ((BurstType == 0U) ? APS512XX_WRITE_LINEAR_BURST_CMD : APS512XX_WRITE_CMD);
 8002dc2:	2c00      	cmp	r4, #0
  sCommand.InstructionMode     = HAL_XSPI_INSTRUCTION_8_LINES;
 8002dc4:	9305      	str	r3, [sp, #20]
  sCommand.Instruction         = ((BurstType == 0U) ? APS512XX_WRITE_LINEAR_BURST_CMD : APS512XX_WRITE_CMD);
 8002dc6:	bf0c      	ite	eq
 8002dc8:	23a0      	moveq	r3, #160	@ 0xa0
 8002dca:	2380      	movne	r3, #128	@ 0x80
  sCommand.AddressMode         = HAL_XSPI_ADDRESS_8_LINES;
  sCommand.AddressWidth        = HAL_XSPI_ADDRESS_32_BITS;
 8002dcc:	f44f 6180 	mov.w	r1, #1024	@ 0x400
  sCommand.Instruction         = ((BurstType == 0U) ? APS512XX_WRITE_LINEAR_BURST_CMD : APS512XX_WRITE_CMD);
 8002dd0:	9304      	str	r3, [sp, #16]
  sCommand.AddressWidth        = HAL_XSPI_ADDRESS_32_BITS;
 8002dd2:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 8002dd6:	e9cd 1309 	strd	r1, r3, [sp, #36]	@ 0x24
  sCommand.AddressDTRMode      = HAL_XSPI_ADDRESS_DTR_ENABLE;
 8002dda:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  sCommand.AlternateBytesMode  = HAL_XSPI_ALT_BYTES_NONE;
  sCommand.DataMode            = ((IOMode == 0U) ? HAL_XSPI_DATA_8_LINES : HAL_XSPI_DATA_16_LINES);
 8002dde:	f1b8 0f00 	cmp.w	r8, #0
  sCommand.AddressDTRMode      = HAL_XSPI_ADDRESS_DTR_ENABLE;
 8002de2:	930b      	str	r3, [sp, #44]	@ 0x2c
  sCommand.DataMode            = ((IOMode == 0U) ? HAL_XSPI_DATA_8_LINES : HAL_XSPI_DATA_16_LINES);
 8002de4:	bf14      	ite	ne
 8002de6:	f04f 63a0 	movne.w	r3, #83886080	@ 0x5000000
 8002dea:	f04f 6380 	moveq.w	r3, #67108864	@ 0x4000000
 8002dee:	9310      	str	r3, [sp, #64]	@ 0x40
  sCommand.DataDTRMode         = HAL_XSPI_DATA_DTR_ENABLE;
 8002df0:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8002df4:	9312      	str	r3, [sp, #72]	@ 0x48
  sCommand.DummyCycles         = (WriteLatencyCode - 1U);
  sCommand.DQSMode             = HAL_XSPI_DQS_ENABLE;
 8002df6:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
  sCommand.DummyCycles         = (WriteLatencyCode - 1U);
 8002dfa:	3f01      	subs	r7, #1
#if defined (XSPI_CCR_SIOO)
  sCommand.SIOOMode            = HAL_XSPI_SIOO_INST_EVERY_CMD;
#endif

  if (HAL_XSPI_Command(Ctx, &sCommand, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8002dfc:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002e00:	4628      	mov	r0, r5
 8002e02:	a902      	add	r1, sp, #8
  sCommand.DummyCycles         = (WriteLatencyCode - 1U);
 8002e04:	9713      	str	r7, [sp, #76]	@ 0x4c
  sCommand.DQSMode             = HAL_XSPI_DQS_ENABLE;
 8002e06:	9314      	str	r3, [sp, #80]	@ 0x50
  if (HAL_XSPI_Command(Ctx, &sCommand, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8002e08:	f007 ff08 	bl	800ac1c <HAL_XSPI_Command>
 8002e0c:	b120      	cbz	r0, 8002e18 <APS512XX_EnableMemoryMappedMode+0x7c>
  {
    return APS512XX_ERROR;
 8002e0e:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return APS512XX_ERROR;
  }

  return APS512XX_OK;
}
 8002e12:	b016      	add	sp, #88	@ 0x58
 8002e14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  sCommand.OperationType = HAL_XSPI_OPTYPE_READ_CFG;
 8002e18:	2301      	movs	r3, #1
 8002e1a:	9302      	str	r3, [sp, #8]
  sCommand.Instruction   = ((BurstType == 0U) ? APS512XX_READ_LINEAR_BURST_CMD : APS512XX_READ_CMD);
 8002e1c:	fab4 f384 	clz	r3, r4
 8002e20:	095b      	lsrs	r3, r3, #5
 8002e22:	015b      	lsls	r3, r3, #5
  sCommand.DummyCycles   = (ReadLatencyCode - 1U);
 8002e24:	3e01      	subs	r6, #1
  if (HAL_XSPI_Command(Ctx, &sCommand, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8002e26:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002e2a:	4628      	mov	r0, r5
 8002e2c:	a902      	add	r1, sp, #8
  sCommand.Instruction   = ((BurstType == 0U) ? APS512XX_READ_LINEAR_BURST_CMD : APS512XX_READ_CMD);
 8002e2e:	9304      	str	r3, [sp, #16]
  sCommand.DummyCycles   = (ReadLatencyCode - 1U);
 8002e30:	9613      	str	r6, [sp, #76]	@ 0x4c
  if (HAL_XSPI_Command(Ctx, &sCommand, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8002e32:	f007 fef3 	bl	800ac1c <HAL_XSPI_Command>
 8002e36:	2800      	cmp	r0, #0
 8002e38:	d1e9      	bne.n	8002e0e <APS512XX_EnableMemoryMappedMode+0x72>
  sMemMappedCfg.TimeOutActivation = HAL_XSPI_TIMEOUT_COUNTER_DISABLE;
 8002e3a:	9000      	str	r0, [sp, #0]
  if (HAL_XSPI_MemoryMapped(Ctx, &sMemMappedCfg) != HAL_OK)
 8002e3c:	4669      	mov	r1, sp
 8002e3e:	4628      	mov	r0, r5
 8002e40:	f008 f86f 	bl	800af22 <HAL_XSPI_MemoryMapped>
 8002e44:	3800      	subs	r0, #0
 8002e46:	bf18      	it	ne
 8002e48:	2001      	movne	r0, #1
 8002e4a:	4240      	negs	r0, r0
 8002e4c:	e7e1      	b.n	8002e12 <APS512XX_EnableMemoryMappedMode+0x76>

08002e4e <APS512XX_ReadReg>:
  * @param  Value Register value pointer
  * @param  LatencyCode Latency used for the access
  * @retval error status
  */
int32_t APS512XX_ReadReg(XSPI_HandleTypeDef *Ctx, uint32_t Address, uint8_t *Value, uint32_t LatencyCode)
{
 8002e4e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002e50:	b095      	sub	sp, #84	@ 0x54
 8002e52:	460f      	mov	r7, r1
 8002e54:	4605      	mov	r5, r0
  XSPI_RegularCmdTypeDef sCommand = {0};
 8002e56:	2100      	movs	r1, #0
{
 8002e58:	4616      	mov	r6, r2
  XSPI_RegularCmdTypeDef sCommand = {0};
 8002e5a:	4668      	mov	r0, sp
 8002e5c:	2250      	movs	r2, #80	@ 0x50
{
 8002e5e:	461c      	mov	r4, r3
  XSPI_RegularCmdTypeDef sCommand = {0};
 8002e60:	f022 fa74 	bl	802534c <memset>
  /* Initialize the read register command */
  sCommand.OperationType       = HAL_XSPI_OPTYPE_COMMON_CFG;
  sCommand.InstructionMode     = HAL_XSPI_INSTRUCTION_8_LINES;
  sCommand.InstructionWidth    = HAL_XSPI_INSTRUCTION_8_BITS;
  sCommand.InstructionDTRMode  = HAL_XSPI_INSTRUCTION_DTR_DISABLE;
  sCommand.Instruction         = APS512XX_READ_REG_CMD;
 8002e64:	2340      	movs	r3, #64	@ 0x40
 8002e66:	2204      	movs	r2, #4
  sCommand.AddressMode         = HAL_XSPI_ADDRESS_8_LINES;
  sCommand.AddressWidth        = HAL_XSPI_ADDRESS_32_BITS;
 8002e68:	f44f 6180 	mov.w	r1, #1024	@ 0x400
  sCommand.Instruction         = APS512XX_READ_REG_CMD;
 8002e6c:	e9cd 3202 	strd	r3, r2, [sp, #8]
  sCommand.AddressWidth        = HAL_XSPI_ADDRESS_32_BITS;
 8002e70:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 8002e74:	e9cd 1307 	strd	r1, r3, [sp, #28]
  sCommand.AddressDTRMode      = HAL_XSPI_ADDRESS_DTR_ENABLE;
 8002e78:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8002e7c:	9309      	str	r3, [sp, #36]	@ 0x24
  sCommand.Address             = Address;
  sCommand.AlternateBytesMode  = HAL_XSPI_ALT_BYTES_NONE;
  sCommand.DataMode            = HAL_XSPI_DATA_8_LINES;
 8002e7e:	f04f 6380 	mov.w	r3, #67108864	@ 0x4000000
  sCommand.Address             = Address;
 8002e82:	9706      	str	r7, [sp, #24]
  sCommand.DataMode            = HAL_XSPI_DATA_8_LINES;
 8002e84:	930e      	str	r3, [sp, #56]	@ 0x38
  sCommand.DataDTRMode         = HAL_XSPI_DATA_DTR_ENABLE;
  sCommand.DataLength          = 2;
 8002e86:	f04f 6700 	mov.w	r7, #134217728	@ 0x8000000
 8002e8a:	2302      	movs	r3, #2
 8002e8c:	e9cd 370f 	strd	r3, r7, [sp, #60]	@ 0x3c
  sCommand.DummyCycles         = (LatencyCode - 1U);
  sCommand.DQSMode             = HAL_XSPI_DQS_ENABLE;
 8002e90:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
  sCommand.DummyCycles         = (LatencyCode - 1U);
 8002e94:	3c01      	subs	r4, #1
#if defined (XSPI_CCR_SIOO)
  sCommand.SIOOMode            = HAL_XSPI_SIOO_INST_EVERY_CMD;
#endif

  /* Configure the command */
  if (HAL_XSPI_Command(Ctx, &sCommand, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8002e96:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002e9a:	4669      	mov	r1, sp
 8002e9c:	4628      	mov	r0, r5
  sCommand.DummyCycles         = (LatencyCode - 1U);
 8002e9e:	9411      	str	r4, [sp, #68]	@ 0x44
  sCommand.DQSMode             = HAL_XSPI_DQS_ENABLE;
 8002ea0:	9312      	str	r3, [sp, #72]	@ 0x48
  if (HAL_XSPI_Command(Ctx, &sCommand, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8002ea2:	f007 febb 	bl	800ac1c <HAL_XSPI_Command>
 8002ea6:	b958      	cbnz	r0, 8002ec0 <APS512XX_ReadReg+0x72>
  {
    return APS512XX_ERROR;
  }

  /* Reception of the data */
  if (HAL_XSPI_Receive(Ctx, (uint8_t *)Value, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8002ea8:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002eac:	4631      	mov	r1, r6
 8002eae:	4628      	mov	r0, r5
 8002eb0:	f007 ff8c 	bl	800adcc <HAL_XSPI_Receive>
 8002eb4:	3800      	subs	r0, #0
 8002eb6:	bf18      	it	ne
 8002eb8:	2001      	movne	r0, #1
 8002eba:	4240      	negs	r0, r0
  {
    return APS512XX_ERROR;
  }

  return APS512XX_OK;
}
 8002ebc:	b015      	add	sp, #84	@ 0x54
 8002ebe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    return APS512XX_ERROR;
 8002ec0:	f04f 30ff 	mov.w	r0, #4294967295
 8002ec4:	e7fa      	b.n	8002ebc <APS512XX_ReadReg+0x6e>

08002ec6 <APS512XX_WriteReg>:
  * @param  Address Register address
  * @param  Value Value to write to register
  * @retval error status
  */
int32_t APS512XX_WriteReg(XSPI_HandleTypeDef *Ctx, uint32_t Address, uint8_t Value)
{
 8002ec6:	b530      	push	{r4, r5, lr}
 8002ec8:	b097      	sub	sp, #92	@ 0x5c
 8002eca:	460d      	mov	r5, r1
 8002ecc:	4604      	mov	r4, r0
  XSPI_RegularCmdTypeDef sCommand = {0};
 8002ece:	2100      	movs	r1, #0
{
 8002ed0:	f88d 2007 	strb.w	r2, [sp, #7]
  XSPI_RegularCmdTypeDef sCommand = {0};
 8002ed4:	a802      	add	r0, sp, #8
 8002ed6:	2250      	movs	r2, #80	@ 0x50
 8002ed8:	f022 fa38 	bl	802534c <memset>
  /* Initialize the write register command */
  sCommand.OperationType       = HAL_XSPI_OPTYPE_COMMON_CFG;
  sCommand.InstructionMode     = HAL_XSPI_INSTRUCTION_8_LINES;
  sCommand.InstructionWidth    = HAL_XSPI_INSTRUCTION_8_BITS;
  sCommand.InstructionDTRMode  = HAL_XSPI_INSTRUCTION_DTR_DISABLE;
  sCommand.Instruction         = APS512XX_WRITE_REG_CMD;
 8002edc:	23c0      	movs	r3, #192	@ 0xc0
 8002ede:	2204      	movs	r2, #4
  sCommand.AddressMode         = HAL_XSPI_ADDRESS_8_LINES;
  sCommand.AddressWidth        = HAL_XSPI_ADDRESS_32_BITS;
 8002ee0:	f44f 6180 	mov.w	r1, #1024	@ 0x400
  sCommand.Instruction         = APS512XX_WRITE_REG_CMD;
 8002ee4:	e9cd 3204 	strd	r3, r2, [sp, #16]
  sCommand.AddressWidth        = HAL_XSPI_ADDRESS_32_BITS;
 8002ee8:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 8002eec:	e9cd 1309 	strd	r1, r3, [sp, #36]	@ 0x24
  sCommand.AddressDTRMode      = HAL_XSPI_ADDRESS_DTR_ENABLE;
 8002ef0:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8002ef4:	930b      	str	r3, [sp, #44]	@ 0x2c
  sCommand.Address             = Address;
  sCommand.AlternateBytesMode  = HAL_XSPI_ALT_BYTES_NONE;
  sCommand.DataMode            = HAL_XSPI_DATA_8_LINES;
 8002ef6:	f04f 6380 	mov.w	r3, #67108864	@ 0x4000000
  sCommand.Address             = Address;
 8002efa:	9508      	str	r5, [sp, #32]
  sCommand.DataMode            = HAL_XSPI_DATA_8_LINES;
 8002efc:	9310      	str	r3, [sp, #64]	@ 0x40
  sCommand.DataDTRMode         = HAL_XSPI_DATA_DTR_ENABLE;
  sCommand.DataLength          = 2;
 8002efe:	f04f 6500 	mov.w	r5, #134217728	@ 0x8000000
 8002f02:	2302      	movs	r3, #2
#if defined (XSPI_CCR_SIOO)
  sCommand.SIOOMode            = HAL_XSPI_SIOO_INST_EVERY_CMD;
#endif

  /* Configure the command */
  if (HAL_XSPI_Command(Ctx, &sCommand, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8002f04:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002f08:	4620      	mov	r0, r4
 8002f0a:	a902      	add	r1, sp, #8
  sCommand.DataLength          = 2;
 8002f0c:	e9cd 3511 	strd	r3, r5, [sp, #68]	@ 0x44
  if (HAL_XSPI_Command(Ctx, &sCommand, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8002f10:	f007 fe84 	bl	800ac1c <HAL_XSPI_Command>
 8002f14:	b960      	cbnz	r0, 8002f30 <APS512XX_WriteReg+0x6a>
  {
    return APS512XX_ERROR;
  }

  /* Transmission of the data */
  if (HAL_XSPI_Transmit(Ctx, (uint8_t *)(&Value), HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8002f16:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002f1a:	4620      	mov	r0, r4
 8002f1c:	f10d 0107 	add.w	r1, sp, #7
 8002f20:	f007 ff10 	bl	800ad44 <HAL_XSPI_Transmit>
 8002f24:	3800      	subs	r0, #0
 8002f26:	bf18      	it	ne
 8002f28:	2001      	movne	r0, #1
 8002f2a:	4240      	negs	r0, r0
  {
    return APS512XX_ERROR;
  }

  return APS512XX_OK;
}
 8002f2c:	b017      	add	sp, #92	@ 0x5c
 8002f2e:	bd30      	pop	{r4, r5, pc}
    return APS512XX_ERROR;
 8002f30:	f04f 30ff 	mov.w	r0, #4294967295
 8002f34:	e7fa      	b.n	8002f2c <APS512XX_WriteReg+0x66>

08002f36 <APS512XX_Reset>:
  * @brief  Reset the memory
  * @param  Ctx Component object pointer
  * @retval error status
  */
int32_t APS512XX_Reset(XSPI_HandleTypeDef *Ctx)
{
 8002f36:	b510      	push	{r4, lr}
 8002f38:	b094      	sub	sp, #80	@ 0x50
 8002f3a:	4604      	mov	r4, r0
  XSPI_RegularCmdTypeDef sCommand = {0};
 8002f3c:	2250      	movs	r2, #80	@ 0x50
 8002f3e:	2100      	movs	r1, #0
 8002f40:	4668      	mov	r0, sp
 8002f42:	f022 fa03 	bl	802534c <memset>
  /* Initialize the command */
  sCommand.OperationType      = HAL_XSPI_OPTYPE_COMMON_CFG;
  sCommand.InstructionMode    = HAL_XSPI_INSTRUCTION_8_LINES;
  sCommand.InstructionWidth   = HAL_XSPI_INSTRUCTION_8_BITS;
  sCommand.InstructionDTRMode = HAL_XSPI_INSTRUCTION_DTR_DISABLE;
  sCommand.Instruction        = APS512XX_RESET_CMD;
 8002f46:	23ff      	movs	r3, #255	@ 0xff
 8002f48:	2204      	movs	r2, #4
  sCommand.AddressMode        = HAL_XSPI_ADDRESS_8_LINES;
  sCommand.AddressWidth       = HAL_XSPI_ADDRESS_24_BITS;
 8002f4a:	f44f 6180 	mov.w	r1, #1024	@ 0x400
  sCommand.Instruction        = APS512XX_RESET_CMD;
 8002f4e:	e9cd 3202 	strd	r3, r2, [sp, #8]
  sCommand.AddressWidth       = HAL_XSPI_ADDRESS_24_BITS;
 8002f52:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
#if defined (XSPI_CCR_SIOO)
  sCommand.SIOOMode            = HAL_XSPI_SIOO_INST_EVERY_CMD;
#endif

  /* Configure the command */
  if (HAL_XSPI_Command(Ctx, &sCommand, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8002f56:	4620      	mov	r0, r4
  sCommand.AddressWidth       = HAL_XSPI_ADDRESS_24_BITS;
 8002f58:	e9cd 1307 	strd	r1, r3, [sp, #28]
  if (HAL_XSPI_Command(Ctx, &sCommand, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8002f5c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002f60:	4669      	mov	r1, sp
 8002f62:	f007 fe5b 	bl	800ac1c <HAL_XSPI_Command>
 8002f66:	4604      	mov	r4, r0
 8002f68:	b928      	cbnz	r0, 8002f76 <APS512XX_Reset+0x40>
  {
    return APS512XX_ERROR;
  }

  /* Need to wait tRST */
  HAL_Delay(1);
 8002f6a:	2001      	movs	r0, #1
 8002f6c:	f001 fa48 	bl	8004400 <HAL_Delay>
  return 0/*APS512XX_OK*/;
 8002f70:	4620      	mov	r0, r4
}
 8002f72:	b014      	add	sp, #80	@ 0x50
 8002f74:	bd10      	pop	{r4, pc}
    return APS512XX_ERROR;
 8002f76:	f04f 30ff 	mov.w	r0, #4294967295
 8002f7a:	e7fa      	b.n	8002f72 <APS512XX_Reset+0x3c>

08002f7c <MX25UM51245G_AutoPollingMemReady>:
  * @param  Rate Transfer rate
  * @retval error status
  */
int32_t MX25UM51245G_AutoPollingMemReady(XSPI_HandleTypeDef *Ctx, MX25UM51245G_Interface_t Mode,
                                         MX25UM51245G_Transfer_t Rate)
{
 8002f7c:	b570      	push	{r4, r5, r6, lr}
 8002f7e:	460c      	mov	r4, r1
 8002f80:	b09a      	sub	sp, #104	@ 0x68
  XSPI_RegularCmdTypeDef  s_command = {0};
 8002f82:	2100      	movs	r1, #0
{
 8002f84:	4606      	mov	r6, r0
 8002f86:	4615      	mov	r5, r2
  XSPI_RegularCmdTypeDef  s_command = {0};
 8002f88:	a806      	add	r0, sp, #24
 8002f8a:	2250      	movs	r2, #80	@ 0x50
 8002f8c:	f022 f9de 	bl	802534c <memset>
  XSPI_AutoPollingTypeDef s_config = {0};
 8002f90:	2214      	movs	r2, #20
 8002f92:	2100      	movs	r1, #0
 8002f94:	a801      	add	r0, sp, #4
 8002f96:	f022 f9d9 	bl	802534c <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX25UM51245G_SPI_MODE) && (Rate == MX25UM51245G_DTR_TRANSFER))
 8002f9a:	b92c      	cbnz	r4, 8002fa8 <MX25UM51245G_AutoPollingMemReady+0x2c>
 8002f9c:	2d01      	cmp	r5, #1
 8002f9e:	d14f      	bne.n	8003040 <MX25UM51245G_AutoPollingMemReady+0xc4>
  {
    return MX25UM51245G_ERROR;
 8002fa0:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX25UM51245G_ERROR;
  }

  return MX25UM51245G_OK;
}
 8002fa4:	b01a      	add	sp, #104	@ 0x68
 8002fa6:	bd70      	pop	{r4, r5, r6, pc}
                                 : HAL_XSPI_INSTRUCTION_8_LINES;
 8002fa8:	2304      	movs	r3, #4
                                 : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8002faa:	1e68      	subs	r0, r5, #1
  s_command.InstructionMode    = (Mode == MX25UM51245G_SPI_MODE)
 8002fac:	9309      	str	r3, [sp, #36]	@ 0x24
                                 : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8002fae:	4243      	negs	r3, r0
 8002fb0:	4143      	adcs	r3, r0
 8002fb2:	00da      	lsls	r2, r3, #3
                                 : HAL_XSPI_INSTRUCTION_16_BITS;
 8002fb4:	2c00      	cmp	r4, #0
  s_command.InstructionDTRMode = (Rate == MX25UM51245G_DTR_TRANSFER)
 8002fb6:	920b      	str	r2, [sp, #44]	@ 0x2c
                                 : HAL_XSPI_INSTRUCTION_16_BITS;
 8002fb8:	bf14      	ite	ne
 8002fba:	2201      	movne	r2, #1
 8002fbc:	2200      	moveq	r2, #0
 8002fbe:	ea4f 1102 	mov.w	r1, r2, lsl #4
  s_command.AddressMode        = (Mode == MX25UM51245G_SPI_MODE) ? HAL_XSPI_ADDRESS_NONE : HAL_XSPI_ADDRESS_8_LINES;
 8002fc2:	ea4f 2282 	mov.w	r2, r2, lsl #10
 8002fc6:	920d      	str	r2, [sp, #52]	@ 0x34
                                 : HAL_XSPI_ADDRESS_DTR_DISABLE;
 8002fc8:	ea4f 22c3 	mov.w	r2, r3, lsl #11
  s_command.AddressDTRMode     = (Rate == MX25UM51245G_DTR_TRANSFER)
 8002fcc:	920f      	str	r2, [sp, #60]	@ 0x3c
  s_command.AddressWidth       = HAL_XSPI_ADDRESS_32_BITS;
 8002fce:	f44f 5240 	mov.w	r2, #12288	@ 0x3000
 8002fd2:	920e      	str	r2, [sp, #56]	@ 0x38
  s_command.DataMode           = (Mode == MX25UM51245G_SPI_MODE) ? HAL_XSPI_DATA_1_LINE : HAL_XSPI_DATA_8_LINES;
 8002fd4:	bf0c      	ite	eq
 8002fd6:	f04f 7280 	moveq.w	r2, #16777216	@ 0x1000000
 8002fda:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
  s_command.InstructionWidth   = (Mode == MX25UM51245G_SPI_MODE)
 8002fde:	910a      	str	r1, [sp, #40]	@ 0x28
                                 : MX25UM51245G_OCTA_READ_STATUS_REG_CMD;
 8002fe0:	f240 51fa 	movw	r1, #1530	@ 0x5fa
 8002fe4:	bf08      	it	eq
 8002fe6:	2105      	moveq	r1, #5
  s_command.DataMode           = (Mode == MX25UM51245G_SPI_MODE) ? HAL_XSPI_DATA_1_LINE : HAL_XSPI_DATA_8_LINES;
 8002fe8:	9214      	str	r2, [sp, #80]	@ 0x50
                                 : HAL_XSPI_DATA_DTR_DISABLE;
 8002fea:	ea4f 62c3 	mov.w	r2, r3, lsl #27
  s_command.Instruction        = (Mode == MX25UM51245G_SPI_MODE)
 8002fee:	9108      	str	r1, [sp, #32]
  s_command.DataDTRMode        = (Rate == MX25UM51245G_DTR_TRANSFER)
 8002ff0:	9216      	str	r2, [sp, #88]	@ 0x58
                                 : ((Rate == MX25UM51245G_DTR_TRANSFER)
 8002ff2:	d003      	beq.n	8002ffc <MX25UM51245G_AutoPollingMemReady+0x80>
 8002ff4:	2d01      	cmp	r5, #1
 8002ff6:	bf0c      	ite	eq
 8002ff8:	2405      	moveq	r4, #5
 8002ffa:	2404      	movne	r4, #4
  s_command.DQSMode            = (Rate == MX25UM51245G_DTR_TRANSFER) ? HAL_XSPI_DQS_ENABLE : HAL_XSPI_DQS_DISABLE;
 8002ffc:	075b      	lsls	r3, r3, #29
 8002ffe:	9318      	str	r3, [sp, #96]	@ 0x60
  s_config.MatchMask     = MX25UM51245G_SR_WIP;
 8003000:	2301      	movs	r3, #1
  s_command.DataLength         = (Rate == MX25UM51245G_DTR_TRANSFER) ? 2U : 1U;
 8003002:	2d01      	cmp	r5, #1
 8003004:	bf0c      	ite	eq
 8003006:	2202      	moveq	r2, #2
 8003008:	2201      	movne	r2, #1
  s_config.AutomaticStop = HAL_XSPI_AUTOMATIC_STOP_ENABLE;
 800300a:	2110      	movs	r1, #16
  s_config.MatchMask     = MX25UM51245G_SR_WIP;
 800300c:	9302      	str	r3, [sp, #8]
  s_config.AutomaticStop = HAL_XSPI_AUTOMATIC_STOP_ENABLE;
 800300e:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
  s_command.DataLength         = (Rate == MX25UM51245G_DTR_TRANSFER) ? 2U : 1U;
 8003012:	9215      	str	r2, [sp, #84]	@ 0x54
  s_config.AutomaticStop = HAL_XSPI_AUTOMATIC_STOP_ENABLE;
 8003014:	e9cd 3104 	strd	r3, r1, [sp, #16]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003018:	f241 3288 	movw	r2, #5000	@ 0x1388
 800301c:	4630      	mov	r0, r6
 800301e:	a906      	add	r1, sp, #24
  s_command.DummyCycles        = (Mode == MX25UM51245G_SPI_MODE)
 8003020:	9417      	str	r4, [sp, #92]	@ 0x5c
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003022:	f007 fdfb 	bl	800ac1c <HAL_XSPI_Command>
 8003026:	2800      	cmp	r0, #0
 8003028:	d1ba      	bne.n	8002fa0 <MX25UM51245G_AutoPollingMemReady+0x24>
  if (HAL_XSPI_AutoPolling(Ctx, &s_config, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800302a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800302e:	4630      	mov	r0, r6
 8003030:	a901      	add	r1, sp, #4
 8003032:	f007 ff21 	bl	800ae78 <HAL_XSPI_AutoPolling>
 8003036:	3800      	subs	r0, #0
 8003038:	bf18      	it	ne
 800303a:	2001      	movne	r0, #1
 800303c:	4240      	negs	r0, r0
 800303e:	e7b1      	b.n	8002fa4 <MX25UM51245G_AutoPollingMemReady+0x28>
                                 : HAL_XSPI_INSTRUCTION_8_LINES;
 8003040:	2301      	movs	r3, #1
 8003042:	e7b2      	b.n	8002faa <MX25UM51245G_AutoPollingMemReady+0x2e>

08003044 <MX25UM51245G_EnableDTRMemoryMappedMode>:
  * @param  AddressSize Address size
  * @note   Only OPI mode support DTR transfer rate
  * @retval Memory status
  */
int32_t MX25UM51245G_EnableDTRMemoryMappedMode(XSPI_HandleTypeDef *Ctx, MX25UM51245G_Interface_t Mode)
{
 8003044:	b510      	push	{r4, lr}
 8003046:	b096      	sub	sp, #88	@ 0x58
 8003048:	4604      	mov	r4, r0
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Mode);

  XSPI_RegularCmdTypeDef      s_command = {0};
 800304a:	224c      	movs	r2, #76	@ 0x4c
 800304c:	2100      	movs	r1, #0
 800304e:	a803      	add	r0, sp, #12
 8003050:	f022 f97c 	bl	802534c <memset>
  XSPI_MemoryMappedTypeDef s_mem_mapped_cfg = {0};
 8003054:	2300      	movs	r3, #0
 8003056:	e9cd 3300 	strd	r3, r3, [sp]

  /* Initialize the read command */
  s_command.OperationType      = HAL_XSPI_OPTYPE_READ_CFG;
 800305a:	2301      	movs	r3, #1
 800305c:	9302      	str	r3, [sp, #8]
  s_command.IOSelect           = HAL_XSPI_SELECT_IO_7_0;
  s_command.InstructionMode    = HAL_XSPI_INSTRUCTION_8_LINES;
 800305e:	2304      	movs	r3, #4
  s_command.InstructionDTRMode = HAL_XSPI_INSTRUCTION_DTR_ENABLE;
  s_command.InstructionWidth   = HAL_XSPI_INSTRUCTION_16_BITS;
 8003060:	f04f 0c08 	mov.w	ip, #8
  s_command.InstructionMode    = HAL_XSPI_INSTRUCTION_8_LINES;
 8003064:	9305      	str	r3, [sp, #20]
  s_command.InstructionWidth   = HAL_XSPI_INSTRUCTION_16_BITS;
 8003066:	2310      	movs	r3, #16
 8003068:	e9cd 3c06 	strd	r3, ip, [sp, #24]
  s_command.Instruction        = MX25UM51245G_OCTA_READ_DTR_CMD;
 800306c:	f64e 6311 	movw	r3, #60945	@ 0xee11
 8003070:	9304      	str	r3, [sp, #16]
  s_command.AddressMode        = HAL_XSPI_ADDRESS_8_LINES;
 8003072:	f44f 6380 	mov.w	r3, #1024	@ 0x400
  s_command.AddressDTRMode     = HAL_XSPI_ADDRESS_DTR_ENABLE;
  s_command.AddressWidth       = HAL_XSPI_ADDRESS_32_BITS;
 8003076:	f44f 6100 	mov.w	r1, #2048	@ 0x800
  s_command.AddressMode        = HAL_XSPI_ADDRESS_8_LINES;
 800307a:	9309      	str	r3, [sp, #36]	@ 0x24
  s_command.AddressWidth       = HAL_XSPI_ADDRESS_32_BITS;
 800307c:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 8003080:	e9cd 310a 	strd	r3, r1, [sp, #40]	@ 0x28
  s_command.AlternateBytesMode = HAL_XSPI_ALT_BYTES_NONE;
  s_command.DataMode           = HAL_XSPI_DATA_8_LINES;
 8003084:	f04f 6380 	mov.w	r3, #67108864	@ 0x4000000
  s_command.DataDTRMode        = HAL_XSPI_DATA_DTR_ENABLE;
  s_command.DummyCycles        = DUMMY_CYCLES_READ_OCTAL_DTR;
 8003088:	f04f 6c00 	mov.w	ip, #134217728	@ 0x8000000
  s_command.DataMode           = HAL_XSPI_DATA_8_LINES;
 800308c:	9310      	str	r3, [sp, #64]	@ 0x40
  s_command.DummyCycles        = DUMMY_CYCLES_READ_OCTAL_DTR;
 800308e:	2306      	movs	r3, #6
 8003090:	e9cd c312 	strd	ip, r3, [sp, #72]	@ 0x48
  s_command.DQSMode            = HAL_XSPI_DQS_ENABLE;
 8003094:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
  s_command.SIOOMode           = HAL_XSPI_SIOO_INST_EVERY_CMD;

  /* Send the command */
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003098:	f241 3288 	movw	r2, #5000	@ 0x1388
 800309c:	4620      	mov	r0, r4
 800309e:	a902      	add	r1, sp, #8
  s_command.DQSMode            = HAL_XSPI_DQS_ENABLE;
 80030a0:	9314      	str	r3, [sp, #80]	@ 0x50
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80030a2:	f007 fdbb 	bl	800ac1c <HAL_XSPI_Command>
 80030a6:	b118      	cbz	r0, 80030b0 <MX25UM51245G_EnableDTRMemoryMappedMode+0x6c>
  {
    return MX25UM51245G_ERROR;
 80030a8:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX25UM51245G_ERROR;
  }

  return MX25UM51245G_OK;
}
 80030ac:	b016      	add	sp, #88	@ 0x58
 80030ae:	bd10      	pop	{r4, pc}
  s_command.OperationType = HAL_XSPI_OPTYPE_WRITE_CFG;
 80030b0:	2302      	movs	r3, #2
 80030b2:	9302      	str	r3, [sp, #8]
  s_command.Instruction   = MX25UM51245G_OCTA_PAGE_PROG_CMD;
 80030b4:	f241 23ed 	movw	r3, #4845	@ 0x12ed
  s_command.DQSMode       = HAL_XSPI_DQS_DISABLE;
 80030b8:	e9cd 0013 	strd	r0, r0, [sp, #76]	@ 0x4c
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80030bc:	f241 3288 	movw	r2, #5000	@ 0x1388
 80030c0:	4620      	mov	r0, r4
 80030c2:	a902      	add	r1, sp, #8
  s_command.Instruction   = MX25UM51245G_OCTA_PAGE_PROG_CMD;
 80030c4:	9304      	str	r3, [sp, #16]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80030c6:	f007 fda9 	bl	800ac1c <HAL_XSPI_Command>
 80030ca:	2800      	cmp	r0, #0
 80030cc:	d1ec      	bne.n	80030a8 <MX25UM51245G_EnableDTRMemoryMappedMode+0x64>
  s_mem_mapped_cfg.TimeOutActivation = HAL_XSPI_TIMEOUT_COUNTER_DISABLE;
 80030ce:	9000      	str	r0, [sp, #0]
  if (HAL_XSPI_MemoryMapped(Ctx, &s_mem_mapped_cfg) != HAL_OK)
 80030d0:	4669      	mov	r1, sp
 80030d2:	4620      	mov	r0, r4
 80030d4:	f007 ff25 	bl	800af22 <HAL_XSPI_MemoryMapped>
 80030d8:	3800      	subs	r0, #0
 80030da:	bf18      	it	ne
 80030dc:	2001      	movne	r0, #1
 80030de:	4240      	negs	r0, r0
 80030e0:	e7e4      	b.n	80030ac <MX25UM51245G_EnableDTRMemoryMappedMode+0x68>

080030e2 <MX25UM51245G_WriteEnable>:
  * @param  Mode Interface mode
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX25UM51245G_WriteEnable(XSPI_HandleTypeDef *Ctx, MX25UM51245G_Interface_t Mode, MX25UM51245G_Transfer_t Rate)
{
 80030e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80030e6:	460c      	mov	r4, r1
 80030e8:	b09a      	sub	sp, #104	@ 0x68
  XSPI_RegularCmdTypeDef     s_command = {0};
 80030ea:	2100      	movs	r1, #0
{
 80030ec:	4607      	mov	r7, r0
 80030ee:	4616      	mov	r6, r2
  XSPI_RegularCmdTypeDef     s_command = {0};
 80030f0:	a806      	add	r0, sp, #24
 80030f2:	2250      	movs	r2, #80	@ 0x50
 80030f4:	f022 f92a 	bl	802534c <memset>
  XSPI_AutoPollingTypeDef s_config = {0};
 80030f8:	2214      	movs	r2, #20
 80030fa:	2100      	movs	r1, #0
 80030fc:	a801      	add	r0, sp, #4
 80030fe:	f022 f925 	bl	802534c <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX25UM51245G_SPI_MODE) && (Rate == MX25UM51245G_DTR_TRANSFER))
 8003102:	b934      	cbnz	r4, 8003112 <MX25UM51245G_WriteEnable+0x30>
 8003104:	2e01      	cmp	r6, #1
 8003106:	d164      	bne.n	80031d2 <MX25UM51245G_WriteEnable+0xf0>
  {
    return MX25UM51245G_ERROR;
 8003108:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX25UM51245G_ERROR;
  }

  return MX25UM51245G_OK;
}
 800310c:	b01a      	add	sp, #104	@ 0x68
 800310e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                                 : HAL_XSPI_INSTRUCTION_8_LINES;
 8003112:	2304      	movs	r3, #4
                                 : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003114:	1e71      	subs	r1, r6, #1
 8003116:	424d      	negs	r5, r1
 8003118:	414d      	adcs	r5, r1
                                 : HAL_XSPI_INSTRUCTION_16_BITS;
 800311a:	2c00      	cmp	r4, #0
 800311c:	bf14      	ite	ne
 800311e:	f04f 0801 	movne.w	r8, #1
 8003122:	f04f 0800 	moveq.w	r8, #0
  s_command.InstructionMode    = (Mode == MX25UM51245G_SPI_MODE)
 8003126:	9309      	str	r3, [sp, #36]	@ 0x24
                                 : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003128:	ea4f 03c5 	mov.w	r3, r5, lsl #3
  s_command.InstructionDTRMode = (Rate == MX25UM51245G_DTR_TRANSFER)
 800312c:	930b      	str	r3, [sp, #44]	@ 0x2c
                                 : HAL_XSPI_INSTRUCTION_16_BITS;
 800312e:	ea4f 1308 	mov.w	r3, r8, lsl #4
  s_command.InstructionWidth   = (Mode == MX25UM51245G_SPI_MODE)
 8003132:	930a      	str	r3, [sp, #40]	@ 0x28
                                 : MX25UM51245G_OCTA_WRITE_ENABLE_CMD;
 8003134:	f240 63f9 	movw	r3, #1785	@ 0x6f9
 8003138:	bf08      	it	eq
 800313a:	2306      	moveq	r3, #6
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800313c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003140:	4638      	mov	r0, r7
 8003142:	a906      	add	r1, sp, #24
  s_command.Instruction        = (Mode == MX25UM51245G_SPI_MODE)
 8003144:	9308      	str	r3, [sp, #32]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003146:	f007 fd69 	bl	800ac1c <HAL_XSPI_Command>
 800314a:	2800      	cmp	r0, #0
 800314c:	d1dc      	bne.n	8003108 <MX25UM51245G_WriteEnable+0x26>
                             : MX25UM51245G_OCTA_READ_STATUS_REG_CMD;
 800314e:	2c00      	cmp	r4, #0
 8003150:	f240 53fa 	movw	r3, #1530	@ 0x5fa
 8003154:	bf08      	it	eq
 8003156:	2305      	moveq	r3, #5
  s_command.Instruction    = (Mode == MX25UM51245G_SPI_MODE)
 8003158:	9308      	str	r3, [sp, #32]
  s_command.AddressMode    = (Mode == MX25UM51245G_SPI_MODE) ? HAL_XSPI_ADDRESS_NONE : HAL_XSPI_ADDRESS_8_LINES;
 800315a:	ea4f 2388 	mov.w	r3, r8, lsl #10
 800315e:	930d      	str	r3, [sp, #52]	@ 0x34
                             : HAL_XSPI_ADDRESS_DTR_DISABLE;
 8003160:	ea4f 23c5 	mov.w	r3, r5, lsl #11
  s_command.AddressDTRMode = (Rate == MX25UM51245G_DTR_TRANSFER)
 8003164:	930f      	str	r3, [sp, #60]	@ 0x3c
  s_command.AddressWidth   = HAL_XSPI_ADDRESS_32_BITS;
 8003166:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 800316a:	930e      	str	r3, [sp, #56]	@ 0x38
  s_command.DataMode       = (Mode == MX25UM51245G_SPI_MODE) ? HAL_XSPI_DATA_1_LINE : HAL_XSPI_DATA_8_LINES;
 800316c:	bf0c      	ite	eq
 800316e:	f04f 7380 	moveq.w	r3, #16777216	@ 0x1000000
 8003172:	f04f 6380 	movne.w	r3, #67108864	@ 0x4000000
 8003176:	9314      	str	r3, [sp, #80]	@ 0x50
  s_command.DataDTRMode    = (Rate == MX25UM51245G_DTR_TRANSFER) ? HAL_XSPI_DATA_DTR_ENABLE : HAL_XSPI_DATA_DTR_DISABLE;
 8003178:	ea4f 63c5 	mov.w	r3, r5, lsl #27
  s_command.Address        = 0U;
 800317c:	900c      	str	r0, [sp, #48]	@ 0x30
  s_command.DataDTRMode    = (Rate == MX25UM51245G_DTR_TRANSFER) ? HAL_XSPI_DATA_DTR_ENABLE : HAL_XSPI_DATA_DTR_DISABLE;
 800317e:	9316      	str	r3, [sp, #88]	@ 0x58
                             : ((Rate == MX25UM51245G_DTR_TRANSFER)
 8003180:	d003      	beq.n	800318a <MX25UM51245G_WriteEnable+0xa8>
 8003182:	2e01      	cmp	r6, #1
 8003184:	bf0c      	ite	eq
 8003186:	2405      	moveq	r4, #5
 8003188:	2404      	movne	r4, #4
  s_command.DataLength         = (Rate == MX25UM51245G_DTR_TRANSFER) ? 2U : 1U;
 800318a:	2e01      	cmp	r6, #1
 800318c:	bf0c      	ite	eq
 800318e:	2302      	moveq	r3, #2
 8003190:	2301      	movne	r3, #1
  s_command.DQSMode        = (Rate == MX25UM51245G_DTR_TRANSFER) ? HAL_XSPI_DQS_ENABLE : HAL_XSPI_DQS_DISABLE;
 8003192:	076d      	lsls	r5, r5, #29
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003194:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003198:	4638      	mov	r0, r7
 800319a:	a906      	add	r1, sp, #24
  s_command.DummyCycles    = (Mode == MX25UM51245G_SPI_MODE)
 800319c:	9417      	str	r4, [sp, #92]	@ 0x5c
  s_command.DataLength         = (Rate == MX25UM51245G_DTR_TRANSFER) ? 2U : 1U;
 800319e:	9315      	str	r3, [sp, #84]	@ 0x54
  s_command.DQSMode        = (Rate == MX25UM51245G_DTR_TRANSFER) ? HAL_XSPI_DQS_ENABLE : HAL_XSPI_DQS_DISABLE;
 80031a0:	9518      	str	r5, [sp, #96]	@ 0x60
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80031a2:	f007 fd3b 	bl	800ac1c <HAL_XSPI_Command>
 80031a6:	2800      	cmp	r0, #0
 80031a8:	d1ae      	bne.n	8003108 <MX25UM51245G_WriteEnable+0x26>
  s_config.MatchValue      = 2U;
 80031aa:	2302      	movs	r3, #2
  s_config.AutomaticStop   = HAL_XSPI_AUTOMATIC_STOP_ENABLE;
 80031ac:	2210      	movs	r2, #16
  s_config.MatchMask       = 2U;
 80031ae:	e9cd 3301 	strd	r3, r3, [sp, #4]
  s_config.AutomaticStop   = HAL_XSPI_AUTOMATIC_STOP_ENABLE;
 80031b2:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
  s_config.MatchMode       = HAL_XSPI_MATCH_MODE_AND;
 80031b6:	9003      	str	r0, [sp, #12]
  s_config.AutomaticStop   = HAL_XSPI_AUTOMATIC_STOP_ENABLE;
 80031b8:	e9cd 3204 	strd	r3, r2, [sp, #16]
  if (HAL_XSPI_AutoPolling(Ctx, &s_config, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80031bc:	4638      	mov	r0, r7
 80031be:	f241 3288 	movw	r2, #5000	@ 0x1388
 80031c2:	a901      	add	r1, sp, #4
 80031c4:	f007 fe58 	bl	800ae78 <HAL_XSPI_AutoPolling>
 80031c8:	3800      	subs	r0, #0
 80031ca:	bf18      	it	ne
 80031cc:	2001      	movne	r0, #1
 80031ce:	4240      	negs	r0, r0
 80031d0:	e79c      	b.n	800310c <MX25UM51245G_WriteEnable+0x2a>
                                 : HAL_XSPI_INSTRUCTION_8_LINES;
 80031d2:	2301      	movs	r3, #1
 80031d4:	e79e      	b.n	8003114 <MX25UM51245G_WriteEnable+0x32>

080031d6 <MX25UM51245G_WriteCfg2Register>:
  * @param  Value Value to write to configuration register
  * @retval error status
  */
int32_t MX25UM51245G_WriteCfg2Register(XSPI_HandleTypeDef *Ctx, MX25UM51245G_Interface_t Mode,
                                       MX25UM51245G_Transfer_t Rate, uint32_t WriteAddr, uint8_t Value)
{
 80031d6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80031d8:	460e      	mov	r6, r1
 80031da:	b095      	sub	sp, #84	@ 0x54
 80031dc:	4605      	mov	r5, r0
 80031de:	4614      	mov	r4, r2
  XSPI_RegularCmdTypeDef s_command = {0};
 80031e0:	2100      	movs	r1, #0
 80031e2:	2250      	movs	r2, #80	@ 0x50
 80031e4:	4668      	mov	r0, sp
{
 80031e6:	461f      	mov	r7, r3
  XSPI_RegularCmdTypeDef s_command = {0};
 80031e8:	f022 f8b0 	bl	802534c <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX25UM51245G_SPI_MODE) && (Rate == MX25UM51245G_DTR_TRANSFER))
 80031ec:	b92e      	cbnz	r6, 80031fa <MX25UM51245G_WriteCfg2Register+0x24>
 80031ee:	2c01      	cmp	r4, #1
 80031f0:	d145      	bne.n	800327e <MX25UM51245G_WriteCfg2Register+0xa8>
  {
    return MX25UM51245G_ERROR;
 80031f2:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX25UM51245G_ERROR;
  }

  return MX25UM51245G_OK;
}
 80031f6:	b015      	add	sp, #84	@ 0x54
 80031f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
                                 : HAL_XSPI_INSTRUCTION_8_LINES;
 80031fa:	2304      	movs	r3, #4
  s_command.InstructionMode    = (Mode == MX25UM51245G_SPI_MODE)
 80031fc:	9303      	str	r3, [sp, #12]
                                 : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 80031fe:	1e63      	subs	r3, r4, #1
 8003200:	425a      	negs	r2, r3
 8003202:	415a      	adcs	r2, r3
 8003204:	00d3      	lsls	r3, r2, #3
                                 : HAL_XSPI_INSTRUCTION_16_BITS;
 8003206:	2e00      	cmp	r6, #0
  s_command.InstructionDTRMode = (Rate == MX25UM51245G_DTR_TRANSFER)
 8003208:	9305      	str	r3, [sp, #20]
                                 : HAL_XSPI_INSTRUCTION_16_BITS;
 800320a:	bf14      	ite	ne
 800320c:	2301      	movne	r3, #1
 800320e:	2300      	moveq	r3, #0
 8003210:	ea4f 1303 	mov.w	r3, r3, lsl #4
  s_command.InstructionWidth   = (Mode == MX25UM51245G_SPI_MODE)
 8003214:	9304      	str	r3, [sp, #16]
                                 : MX25UM51245G_OCTA_WRITE_CFG_REG2_CMD;
 8003216:	f247 238d 	movw	r3, #29325	@ 0x728d
 800321a:	bf08      	it	eq
 800321c:	2372      	moveq	r3, #114	@ 0x72
  s_command.Instruction        = (Mode == MX25UM51245G_SPI_MODE)
 800321e:	9302      	str	r3, [sp, #8]
  s_command.AddressMode        = (Mode == MX25UM51245G_SPI_MODE) ? HAL_XSPI_ADDRESS_1_LINE : HAL_XSPI_ADDRESS_8_LINES;
 8003220:	bf0c      	ite	eq
 8003222:	f44f 7380 	moveq.w	r3, #256	@ 0x100
 8003226:	f44f 6380 	movne.w	r3, #1024	@ 0x400
 800322a:	9307      	str	r3, [sp, #28]
                                 : HAL_XSPI_ADDRESS_DTR_DISABLE;
 800322c:	ea4f 23c2 	mov.w	r3, r2, lsl #11
  s_command.AddressDTRMode     = (Rate == MX25UM51245G_DTR_TRANSFER)
 8003230:	9309      	str	r3, [sp, #36]	@ 0x24
  s_command.AddressWidth       = HAL_XSPI_ADDRESS_32_BITS;
 8003232:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 8003236:	9308      	str	r3, [sp, #32]
  s_command.DataMode           = (Mode == MX25UM51245G_SPI_MODE) ? HAL_XSPI_DATA_1_LINE : HAL_XSPI_DATA_8_LINES;
 8003238:	bf0c      	ite	eq
 800323a:	f04f 7380 	moveq.w	r3, #16777216	@ 0x1000000
 800323e:	f04f 6380 	movne.w	r3, #67108864	@ 0x4000000
                                 : HAL_XSPI_DATA_DTR_DISABLE;
 8003242:	ea4f 62c2 	mov.w	r2, r2, lsl #27
  s_command.Address            = WriteAddr;
 8003246:	9706      	str	r7, [sp, #24]
  s_command.DataMode           = (Mode == MX25UM51245G_SPI_MODE) ? HAL_XSPI_DATA_1_LINE : HAL_XSPI_DATA_8_LINES;
 8003248:	930e      	str	r3, [sp, #56]	@ 0x38
  s_command.DataDTRMode        = (Rate == MX25UM51245G_DTR_TRANSFER)
 800324a:	9210      	str	r2, [sp, #64]	@ 0x40
  s_command.DataLength             = (Mode == MX25UM51245G_SPI_MODE) ? 1U : ((Rate == MX25UM51245G_DTR_TRANSFER) ? 2U : 1U);
 800324c:	d019      	beq.n	8003282 <MX25UM51245G_WriteCfg2Register+0xac>
 800324e:	2c01      	cmp	r4, #1
 8003250:	bf14      	ite	ne
 8003252:	2301      	movne	r3, #1
 8003254:	2302      	moveq	r3, #2
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003256:	f241 3288 	movw	r2, #5000	@ 0x1388
 800325a:	4669      	mov	r1, sp
 800325c:	4628      	mov	r0, r5
  s_command.DataLength             = (Mode == MX25UM51245G_SPI_MODE) ? 1U : ((Rate == MX25UM51245G_DTR_TRANSFER) ? 2U : 1U);
 800325e:	930f      	str	r3, [sp, #60]	@ 0x3c
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003260:	f007 fcdc 	bl	800ac1c <HAL_XSPI_Command>
 8003264:	2800      	cmp	r0, #0
 8003266:	d1c4      	bne.n	80031f2 <MX25UM51245G_WriteCfg2Register+0x1c>
  if (HAL_XSPI_Transmit(Ctx, &Value, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003268:	f241 3288 	movw	r2, #5000	@ 0x1388
 800326c:	4628      	mov	r0, r5
 800326e:	a91a      	add	r1, sp, #104	@ 0x68
 8003270:	f007 fd68 	bl	800ad44 <HAL_XSPI_Transmit>
 8003274:	3800      	subs	r0, #0
 8003276:	bf18      	it	ne
 8003278:	2001      	movne	r0, #1
 800327a:	4240      	negs	r0, r0
 800327c:	e7bb      	b.n	80031f6 <MX25UM51245G_WriteCfg2Register+0x20>
                                 : HAL_XSPI_INSTRUCTION_8_LINES;
 800327e:	2301      	movs	r3, #1
 8003280:	e7bc      	b.n	80031fc <MX25UM51245G_WriteCfg2Register+0x26>
  s_command.DataLength             = (Mode == MX25UM51245G_SPI_MODE) ? 1U : ((Rate == MX25UM51245G_DTR_TRANSFER) ? 2U : 1U);
 8003282:	2301      	movs	r3, #1
 8003284:	e7e7      	b.n	8003256 <MX25UM51245G_WriteCfg2Register+0x80>

08003286 <MX25UM51245G_ResetEnable>:
  * @param  Mode Interface select
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX25UM51245G_ResetEnable(XSPI_HandleTypeDef *Ctx, MX25UM51245G_Interface_t Mode, MX25UM51245G_Transfer_t Rate)
{
 8003286:	b570      	push	{r4, r5, r6, lr}
 8003288:	460d      	mov	r5, r1
 800328a:	b094      	sub	sp, #80	@ 0x50
 800328c:	4606      	mov	r6, r0
 800328e:	4614      	mov	r4, r2
  XSPI_RegularCmdTypeDef s_command = {0};
 8003290:	2100      	movs	r1, #0
 8003292:	2250      	movs	r2, #80	@ 0x50
 8003294:	4668      	mov	r0, sp
 8003296:	f022 f859 	bl	802534c <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX25UM51245G_SPI_MODE) && (Rate == MX25UM51245G_DTR_TRANSFER))
 800329a:	bb05      	cbnz	r5, 80032de <MX25UM51245G_ResetEnable+0x58>
 800329c:	2c01      	cmp	r4, #1
 800329e:	d020      	beq.n	80032e2 <MX25UM51245G_ResetEnable+0x5c>
  /* Initialize the reset enable command */
  s_command.OperationType      = HAL_XSPI_OPTYPE_COMMON_CFG;
  s_command.IOSelect           = HAL_XSPI_SELECT_IO_7_0;
  s_command.InstructionMode    = (Mode == MX25UM51245G_SPI_MODE)
                                 ? HAL_XSPI_INSTRUCTION_1_LINE
                                 : HAL_XSPI_INSTRUCTION_8_LINES;
 80032a0:	2301      	movs	r3, #1
  s_command.InstructionDTRMode = (Rate == MX25UM51245G_DTR_TRANSFER)
                                 ? HAL_XSPI_INSTRUCTION_DTR_ENABLE
                                 : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 80032a2:	1e62      	subs	r2, r4, #1
 80032a4:	4254      	negs	r4, r2
 80032a6:	4154      	adcs	r4, r2
  s_command.InstructionWidth   = (Mode == MX25UM51245G_SPI_MODE)
                                 ? HAL_XSPI_INSTRUCTION_8_BITS
                                 : HAL_XSPI_INSTRUCTION_16_BITS;
 80032a8:	2d00      	cmp	r5, #0
  s_command.InstructionMode    = (Mode == MX25UM51245G_SPI_MODE)
 80032aa:	9303      	str	r3, [sp, #12]
                                 : HAL_XSPI_INSTRUCTION_16_BITS;
 80032ac:	bf14      	ite	ne
 80032ae:	2301      	movne	r3, #1
 80032b0:	2300      	moveq	r3, #0
 80032b2:	ea4f 1303 	mov.w	r3, r3, lsl #4
  s_command.InstructionWidth   = (Mode == MX25UM51245G_SPI_MODE)
 80032b6:	9304      	str	r3, [sp, #16]
  s_command.Instruction        = (Mode == MX25UM51245G_SPI_MODE)
                                 ? MX25UM51245G_RESET_ENABLE_CMD
                                 : MX25UM51245G_OCTA_RESET_ENABLE_CMD;
 80032b8:	f246 6399 	movw	r3, #26265	@ 0x6699
 80032bc:	bf08      	it	eq
 80032be:	2366      	moveq	r3, #102	@ 0x66
  s_command.DummyCycles        = 0U;
  s_command.DQSMode            = HAL_XSPI_DQS_DISABLE;
  s_command.SIOOMode           = HAL_XSPI_SIOO_INST_EVERY_CMD;

  /* Send the command */
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80032c0:	f241 3288 	movw	r2, #5000	@ 0x1388
 80032c4:	4669      	mov	r1, sp
 80032c6:	4630      	mov	r0, r6
                                 : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 80032c8:	00e4      	lsls	r4, r4, #3
  s_command.InstructionDTRMode = (Rate == MX25UM51245G_DTR_TRANSFER)
 80032ca:	9405      	str	r4, [sp, #20]
  s_command.Instruction        = (Mode == MX25UM51245G_SPI_MODE)
 80032cc:	9302      	str	r3, [sp, #8]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80032ce:	f007 fca5 	bl	800ac1c <HAL_XSPI_Command>
 80032d2:	3800      	subs	r0, #0
 80032d4:	bf18      	it	ne
 80032d6:	2001      	movne	r0, #1
 80032d8:	4240      	negs	r0, r0
  {
    return MX25UM51245G_ERROR;
  }

  return MX25UM51245G_OK;
}
 80032da:	b014      	add	sp, #80	@ 0x50
 80032dc:	bd70      	pop	{r4, r5, r6, pc}
                                 : HAL_XSPI_INSTRUCTION_8_LINES;
 80032de:	2304      	movs	r3, #4
 80032e0:	e7df      	b.n	80032a2 <MX25UM51245G_ResetEnable+0x1c>
    return MX25UM51245G_ERROR;
 80032e2:	f04f 30ff 	mov.w	r0, #4294967295
 80032e6:	e7f8      	b.n	80032da <MX25UM51245G_ResetEnable+0x54>

080032e8 <MX25UM51245G_ResetMemory>:
  * @param  Mode Interface select
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX25UM51245G_ResetMemory(XSPI_HandleTypeDef *Ctx, MX25UM51245G_Interface_t Mode, MX25UM51245G_Transfer_t Rate)
{
 80032e8:	b570      	push	{r4, r5, r6, lr}
 80032ea:	460d      	mov	r5, r1
 80032ec:	b094      	sub	sp, #80	@ 0x50
 80032ee:	4606      	mov	r6, r0
 80032f0:	4614      	mov	r4, r2
  XSPI_RegularCmdTypeDef s_command = {0};
 80032f2:	2100      	movs	r1, #0
 80032f4:	2250      	movs	r2, #80	@ 0x50
 80032f6:	4668      	mov	r0, sp
 80032f8:	f022 f828 	bl	802534c <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX25UM51245G_SPI_MODE) && (Rate == MX25UM51245G_DTR_TRANSFER))
 80032fc:	bb05      	cbnz	r5, 8003340 <MX25UM51245G_ResetMemory+0x58>
 80032fe:	2c01      	cmp	r4, #1
 8003300:	d020      	beq.n	8003344 <MX25UM51245G_ResetMemory+0x5c>
  /* Initialize the reset enable command */
  s_command.OperationType      = HAL_XSPI_OPTYPE_COMMON_CFG;
  s_command.IOSelect           = HAL_XSPI_SELECT_IO_7_0;
  s_command.InstructionMode    = (Mode == MX25UM51245G_SPI_MODE)
                                 ? HAL_XSPI_INSTRUCTION_1_LINE
                                 : HAL_XSPI_INSTRUCTION_8_LINES;
 8003302:	2301      	movs	r3, #1
  s_command.InstructionDTRMode = (Rate == MX25UM51245G_DTR_TRANSFER)
                                 ? HAL_XSPI_INSTRUCTION_DTR_ENABLE
                                 : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003304:	1e62      	subs	r2, r4, #1
 8003306:	4254      	negs	r4, r2
 8003308:	4154      	adcs	r4, r2
  s_command.InstructionWidth   = (Mode == MX25UM51245G_SPI_MODE)
                                 ? HAL_XSPI_INSTRUCTION_8_BITS
                                 : HAL_XSPI_INSTRUCTION_16_BITS;
 800330a:	2d00      	cmp	r5, #0
  s_command.InstructionMode    = (Mode == MX25UM51245G_SPI_MODE)
 800330c:	9303      	str	r3, [sp, #12]
                                 : HAL_XSPI_INSTRUCTION_16_BITS;
 800330e:	bf14      	ite	ne
 8003310:	2301      	movne	r3, #1
 8003312:	2300      	moveq	r3, #0
 8003314:	ea4f 1303 	mov.w	r3, r3, lsl #4
  s_command.InstructionWidth   = (Mode == MX25UM51245G_SPI_MODE)
 8003318:	9304      	str	r3, [sp, #16]
  s_command.Instruction        = (Mode == MX25UM51245G_SPI_MODE)
                                 ? MX25UM51245G_RESET_MEMORY_CMD
                                 : MX25UM51245G_OCTA_RESET_MEMORY_CMD;
 800331a:	f649 1366 	movw	r3, #39270	@ 0x9966
 800331e:	bf08      	it	eq
 8003320:	2399      	moveq	r3, #153	@ 0x99
  s_command.DummyCycles        = 0U;
  s_command.DQSMode            = HAL_XSPI_DQS_DISABLE;
  s_command.SIOOMode           = HAL_XSPI_SIOO_INST_EVERY_CMD;

  /* Send the command */
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003322:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003326:	4669      	mov	r1, sp
 8003328:	4630      	mov	r0, r6
                                 : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 800332a:	00e4      	lsls	r4, r4, #3
  s_command.InstructionDTRMode = (Rate == MX25UM51245G_DTR_TRANSFER)
 800332c:	9405      	str	r4, [sp, #20]
  s_command.Instruction        = (Mode == MX25UM51245G_SPI_MODE)
 800332e:	9302      	str	r3, [sp, #8]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003330:	f007 fc74 	bl	800ac1c <HAL_XSPI_Command>
 8003334:	3800      	subs	r0, #0
 8003336:	bf18      	it	ne
 8003338:	2001      	movne	r0, #1
 800333a:	4240      	negs	r0, r0
  {
    return MX25UM51245G_ERROR;
  }

  return MX25UM51245G_OK;
}
 800333c:	b014      	add	sp, #80	@ 0x50
 800333e:	bd70      	pop	{r4, r5, r6, pc}
                                 : HAL_XSPI_INSTRUCTION_8_LINES;
 8003340:	2304      	movs	r3, #4
 8003342:	e7df      	b.n	8003304 <MX25UM51245G_ResetMemory+0x1c>
    return MX25UM51245G_ERROR;
 8003344:	f04f 30ff 	mov.w	r0, #4294967295
 8003348:	e7f8      	b.n	800333c <MX25UM51245G_ResetMemory+0x54>

0800334a <SITRONIX_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
 800334a:	2301      	movs	r3, #1
 800334c:	800b      	strh	r3, [r1, #0]
  Capabilities->Gesture    = 0;  /* Gesture feature is currently not activated on FW chipset */
  Capabilities->MaxTouch   = SITRONIX_MAX_DETECTABLE_TOUCH;
 800334e:	230a      	movs	r3, #10
 8003350:	708b      	strb	r3, [r1, #2]
  Capabilities->MaxXl      = SITRONIX_MAX_X_LENGTH;
 8003352:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  Capabilities->MaxYl      = SITRONIX_MAX_Y_LENGTH;

  return SITRONIX_OK;
}
 8003356:	2000      	movs	r0, #0
  Capabilities->MaxYl      = SITRONIX_MAX_Y_LENGTH;
 8003358:	e9c1 3301 	strd	r3, r3, [r1, #4]
}
 800335c:	4770      	bx	lr

0800335e <SITRONIX_DeInit>:
  * @param  pObj Component object pointer
  * @retval Component status
  */
int32_t SITRONIX_DeInit(SITRONIX_Object_t *pObj)
{
  if (pObj->IsInitialized == 1U)
 800335e:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8003362:	2b01      	cmp	r3, #1
  {
    pObj->IsInitialized = 0;
 8003364:	bf04      	itt	eq
 8003366:	2300      	moveq	r3, #0
 8003368:	f880 302c 	strbeq.w	r3, [r0, #44]	@ 0x2c
  }

  return SITRONIX_OK;
}
 800336c:	2000      	movs	r0, #0
 800336e:	4770      	bx	lr

08003370 <SITRONIX_GestureConfig>:
  * @retval Component status
  */
int32_t SITRONIX_GestureConfig(SITRONIX_Object_t *pObj, SITRONIX_Gesture_Init_t *GestureInit)
{
  return SITRONIX_ERROR;
}
 8003370:	f04f 30ff 	mov.w	r0, #4294967295
 8003374:	4770      	bx	lr

08003376 <SITRONIX_EnableIT>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return SITRONIX_OK as feature not supported by SITRONIX */
  return SITRONIX_ERROR;
}
 8003376:	f04f 30ff 	mov.w	r0, #4294967295
 800337a:	4770      	bx	lr

0800337c <ReadRegWrap>:
  * @param  pData The target register value to be read
  * @param  Length buffer size to be read
  * @retval Component status.
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t *pData, uint16_t Length)
{
 800337c:	b410      	push	{r4}
  SITRONIX_Object_t *pObj = (SITRONIX_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
 800337e:	6904      	ldr	r4, [r0, #16]
 8003380:	8900      	ldrh	r0, [r0, #8]
 8003382:	46a4      	mov	ip, r4
}
 8003384:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
 8003388:	4760      	bx	ip

0800338a <WriteRegWrap>:
  * @param  pData The target register value to be written
  * @param  Length buffer size to be written
  * @retval Component status.
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t *pData, uint16_t Length)
{
 800338a:	b410      	push	{r4}
  SITRONIX_Object_t *pObj = (SITRONIX_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 800338c:	68c4      	ldr	r4, [r0, #12]
 800338e:	8900      	ldrh	r0, [r0, #8]
 8003390:	46a4      	mov	ip, r4
}
 8003392:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 8003396:	4760      	bx	ip

08003398 <ReadDataWrap>:
  */
static int32_t ReadDataWrap(void *handle, uint8_t *pData, uint16_t Length)
{
  SITRONIX_Object_t *pObj = (SITRONIX_Object_t *)handle;

  return pObj->IO.ReadData(pObj->IO.Address, pData, Length);
 8003398:	6943      	ldr	r3, [r0, #20]
 800339a:	8900      	ldrh	r0, [r0, #8]
 800339c:	4718      	bx	r3

0800339e <SITRONIX_Init>:
{
 800339e:	b530      	push	{r4, r5, lr}
  if (pObj->IsInitialized == 0U)
 80033a0:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
 80033a4:	4604      	mov	r4, r0
 80033a6:	b089      	sub	sp, #36	@ 0x24
  if (pObj->IsInitialized == 0U)
 80033a8:	b113      	cbz	r3, 80033b0 <SITRONIX_Init+0x12>
  int32_t ret = SITRONIX_OK;
 80033aa:	2000      	movs	r0, #0
}
 80033ac:	b009      	add	sp, #36	@ 0x24
 80033ae:	bd30      	pop	{r4, r5, pc}
    pObj->IO.Init();
 80033b0:	4605      	mov	r5, r0
 80033b2:	f855 3b1c 	ldr.w	r3, [r5], #28
 80033b6:	4798      	blx	r3
    if (sitronix_read_data(&pObj->Ctx, data, (uint16_t)sizeof(data)) != SITRONIX_OK)
 80033b8:	221c      	movs	r2, #28
 80033ba:	4628      	mov	r0, r5
 80033bc:	a901      	add	r1, sp, #4
 80033be:	f000 f896 	bl	80034ee <sitronix_read_data>
 80033c2:	2301      	movs	r3, #1
    pObj->IsInitialized = 1;
 80033c4:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    if (sitronix_read_data(&pObj->Ctx, data, (uint16_t)sizeof(data)) != SITRONIX_OK)
 80033c8:	2800      	cmp	r0, #0
 80033ca:	d0ee      	beq.n	80033aa <SITRONIX_Init+0xc>
    ret = SITRONIX_ERROR;
 80033cc:	f04f 30ff 	mov.w	r0, #4294967295
 80033d0:	e7ec      	b.n	80033ac <SITRONIX_Init+0xe>

080033d2 <SITRONIX_ReadID>:
{
 80033d2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80033d4:	460d      	mov	r5, r1
 80033d6:	240a      	movs	r4, #10
  int32_t ret = SITRONIX_OK;
 80033d8:	2700      	movs	r7, #0
{
 80033da:	b089      	sub	sp, #36	@ 0x24
    if (sitronix_read_data(&pObj->Ctx, data, 28) != SITRONIX_OK)
 80033dc:	f100 061c 	add.w	r6, r0, #28
 80033e0:	221c      	movs	r2, #28
 80033e2:	4630      	mov	r0, r6
 80033e4:	a901      	add	r1, sp, #4
 80033e6:	f000 f882 	bl	80034ee <sitronix_read_data>
 80033ea:	b938      	cbnz	r0, 80033fc <SITRONIX_ReadID+0x2a>
      if ((uint32_t)data[0] == SITRONIX_ID)
 80033ec:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80033f0:	2b02      	cmp	r3, #2
 80033f2:	d105      	bne.n	8003400 <SITRONIX_ReadID+0x2e>
        *Id = (uint32_t)data[0];
 80033f4:	602b      	str	r3, [r5, #0]
}
 80033f6:	4638      	mov	r0, r7
 80033f8:	b009      	add	sp, #36	@ 0x24
 80033fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
      ret = SITRONIX_ERROR;
 80033fc:	f04f 37ff 	mov.w	r7, #4294967295
  for (trial = 0; trial < 10; trial++)
 8003400:	3c01      	subs	r4, #1
 8003402:	f014 04ff 	ands.w	r4, r4, #255	@ 0xff
 8003406:	d1eb      	bne.n	80033e0 <SITRONIX_ReadID+0xe>
 8003408:	e7f5      	b.n	80033f6 <SITRONIX_ReadID+0x24>

0800340a <SITRONIX_GetState>:
{
 800340a:	b513      	push	{r0, r1, r4, lr}
  if (sitronix_read_data(&pObj->Ctx, data, (uint16_t)sizeof(data)) != SITRONIX_OK)
 800340c:	2205      	movs	r2, #5
{
 800340e:	460c      	mov	r4, r1
  if (sitronix_read_data(&pObj->Ctx, data, (uint16_t)sizeof(data)) != SITRONIX_OK)
 8003410:	301c      	adds	r0, #28
 8003412:	4669      	mov	r1, sp
 8003414:	f000 f86b 	bl	80034ee <sitronix_read_data>
 8003418:	b998      	cbnz	r0, 8003442 <SITRONIX_GetState+0x38>
    State->TouchX = ((((uint32_t)data[2] & SITRONIX_TOUCH_POS_LSB_MASK) << 4) | ((uint32_t)data[3]));
 800341a:	f89d 3002 	ldrb.w	r3, [sp, #2]
 800341e:	f89d 1003 	ldrb.w	r1, [sp, #3]
 8003422:	011a      	lsls	r2, r3, #4
 8003424:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
 8003428:	430a      	orrs	r2, r1
 800342a:	6062      	str	r2, [r4, #4]
    State->TouchY = (((uint32_t)data[2] & SITRONIX_TOUCH_POS_MSB_MASK) << 8) | ((uint32_t)data[4]);
 800342c:	f89d 1004 	ldrb.w	r1, [sp, #4]
 8003430:	021a      	lsls	r2, r3, #8
 8003432:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
 8003436:	430a      	orrs	r2, r1
    State->TouchDetected = ((data[2] & 0x80) == 0x80 ? 1 : 0);
 8003438:	09db      	lsrs	r3, r3, #7
    State->TouchY = (((uint32_t)data[2] & SITRONIX_TOUCH_POS_MSB_MASK) << 8) | ((uint32_t)data[4]);
 800343a:	60a2      	str	r2, [r4, #8]
    State->TouchDetected = ((data[2] & 0x80) == 0x80 ? 1 : 0);
 800343c:	6023      	str	r3, [r4, #0]
}
 800343e:	b002      	add	sp, #8
 8003440:	bd10      	pop	{r4, pc}
    ret = SITRONIX_ERROR;
 8003442:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
 8003446:	e7fa      	b.n	800343e <SITRONIX_GetState+0x34>

08003448 <SITRONIX_GetMultiTouchState>:
{
 8003448:	b530      	push	{r4, r5, lr}
  if (sitronix_read_data(&pObj->Ctx, (uint8_t *)&data, 28) != SITRONIX_OK)
 800344a:	f100 041c 	add.w	r4, r0, #28
{
 800344e:	b089      	sub	sp, #36	@ 0x24
 8003450:	460d      	mov	r5, r1
  if (sitronix_read_data(&pObj->Ctx, (uint8_t *)&data, 28) != SITRONIX_OK)
 8003452:	221c      	movs	r2, #28
 8003454:	4620      	mov	r0, r4
 8003456:	a901      	add	r1, sp, #4
 8003458:	f000 f849 	bl	80034ee <sitronix_read_data>
 800345c:	b978      	cbnz	r0, 800347e <SITRONIX_GetMultiTouchState+0x36>
    nb_touch = ((data[2] & 0x80) == 0x80 ? 1 : 0);
 800345e:	f89d 3006 	ldrb.w	r3, [sp, #6]
    ret = (int32_t)nb_touch;
 8003462:	09db      	lsrs	r3, r3, #7
  State->TouchDetected = (uint32_t)SITRONIX_DetectTouch(pObj);
 8003464:	602b      	str	r3, [r5, #0]
  if (sitronix_read_reg(&pObj->Ctx, SITRONIX_P1_XH_REG, data, (uint16_t)sizeof(data)) != SITRONIX_OK)
 8003466:	2109      	movs	r1, #9
 8003468:	231c      	movs	r3, #28
 800346a:	4620      	mov	r0, r4
 800346c:	aa01      	add	r2, sp, #4
 800346e:	f000 f837 	bl	80034e0 <sitronix_read_reg>
 8003472:	3800      	subs	r0, #0
 8003474:	bf18      	it	ne
 8003476:	2001      	movne	r0, #1
}
 8003478:	4240      	negs	r0, r0
 800347a:	b009      	add	sp, #36	@ 0x24
 800347c:	bd30      	pop	{r4, r5, pc}
    ret = SITRONIX_ERROR;
 800347e:	f04f 33ff 	mov.w	r3, #4294967295
 8003482:	e7ef      	b.n	8003464 <SITRONIX_GetMultiTouchState+0x1c>

08003484 <SITRONIX_ClearIT>:
int32_t SITRONIX_ClearIT(SITRONIX_Object_t *pObj)
 8003484:	f04f 30ff 	mov.w	r0, #4294967295
 8003488:	4770      	bx	lr

0800348a <SITRONIX_GetGesture>:
int32_t SITRONIX_GetGesture(SITRONIX_Object_t *pObj, uint8_t *GestureId)
 800348a:	f04f 30ff 	mov.w	r0, #4294967295
 800348e:	4770      	bx	lr

08003490 <SITRONIX_DisableIT>:
int32_t SITRONIX_DisableIT(SITRONIX_Object_t *pObj)
 8003490:	f04f 30ff 	mov.w	r0, #4294967295
 8003494:	4770      	bx	lr

08003496 <SITRONIX_ITStatus>:
int32_t SITRONIX_ITStatus(SITRONIX_Object_t *pObj)
 8003496:	f04f 30ff 	mov.w	r0, #4294967295
 800349a:	4770      	bx	lr

0800349c <SITRONIX_RegisterBusIO>:
  if (pObj == NULL)
 800349c:	b1b0      	cbz	r0, 80034cc <SITRONIX_RegisterBusIO+0x30>
    pObj->IO.DeInit    = pIO->DeInit;
 800349e:	684a      	ldr	r2, [r1, #4]
    pObj->IO.Init      = pIO->Init;
 80034a0:	680b      	ldr	r3, [r1, #0]
    pObj->IO.DeInit    = pIO->DeInit;
 80034a2:	6042      	str	r2, [r0, #4]
    pObj->IO.Address   = pIO->Address;
 80034a4:	890a      	ldrh	r2, [r1, #8]
    pObj->IO.Init      = pIO->Init;
 80034a6:	6003      	str	r3, [r0, #0]
    pObj->IO.Address   = pIO->Address;
 80034a8:	8102      	strh	r2, [r0, #8]
    pObj->IO.WriteReg  = pIO->WriteReg;
 80034aa:	68ca      	ldr	r2, [r1, #12]
 80034ac:	60c2      	str	r2, [r0, #12]
    pObj->IO.ReadReg   = pIO->ReadReg;
 80034ae:	690a      	ldr	r2, [r1, #16]
 80034b0:	6102      	str	r2, [r0, #16]
    pObj->IO.ReadData  = pIO->ReadData;
 80034b2:	694a      	ldr	r2, [r1, #20]
 80034b4:	6142      	str	r2, [r0, #20]
    pObj->IO.GetTick   = pIO->GetTick;
 80034b6:	698a      	ldr	r2, [r1, #24]
 80034b8:	6182      	str	r2, [r0, #24]
    pObj->Ctx.ReadReg  = ReadRegWrap;
 80034ba:	4a06      	ldr	r2, [pc, #24]	@ (80034d4 <SITRONIX_RegisterBusIO+0x38>)
 80034bc:	6202      	str	r2, [r0, #32]
    pObj->Ctx.WriteReg = WriteRegWrap;
 80034be:	4a06      	ldr	r2, [pc, #24]	@ (80034d8 <SITRONIX_RegisterBusIO+0x3c>)
 80034c0:	61c2      	str	r2, [r0, #28]
    pObj->Ctx.ReadData = ReadDataWrap;
 80034c2:	4a06      	ldr	r2, [pc, #24]	@ (80034dc <SITRONIX_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
 80034c4:	e9c0 2009 	strd	r2, r0, [r0, #36]	@ 0x24
    if (pObj->IO.Init != NULL)
 80034c8:	b103      	cbz	r3, 80034cc <SITRONIX_RegisterBusIO+0x30>
      ret = pObj->IO.Init();
 80034ca:	4718      	bx	r3
}
 80034cc:	f04f 30ff 	mov.w	r0, #4294967295
 80034d0:	4770      	bx	lr
 80034d2:	bf00      	nop
 80034d4:	0800337d 	.word	0x0800337d
 80034d8:	0800338b 	.word	0x0800338b
 80034dc:	08003399 	.word	0x08003399

080034e0 <sitronix_read_reg>:
  *                 I2C or SPI reading functions
  * Input         : Register Address, length of buffer
  * Output        : pdata Read
  *******************************************************************************/
int32_t sitronix_read_reg(sitronix_ctx_t *ctx, uint8_t reg, uint8_t *pdata, uint16_t length)
{
 80034e0:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
 80034e2:	6844      	ldr	r4, [r0, #4]
 80034e4:	68c0      	ldr	r0, [r0, #12]
 80034e6:	46a4      	mov	ip, r4
}
 80034e8:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
 80034ec:	4760      	bx	ip

080034ee <sitronix_read_data>:
  * Input         : Register Address, length of buffer
  * Output        : pdata Read
  *******************************************************************************/
int32_t sitronix_read_data(sitronix_ctx_t *ctx, uint8_t *pdata, uint16_t length)
{
  return ctx->ReadData(ctx->handle, pdata, length);
 80034ee:	e9d0 3002 	ldrd	r3, r0, [r0, #8]
 80034f2:	4718      	bx	r3

080034f4 <I2C_GetTiming>:
  * @param  clock_src_freq I2C clock source in Hz.
  * @param  i2c_freq Required I2C clock in Hz.
  * @retval I2C timing or 0 in case of error.
  */
static uint32_t I2C_GetTiming(uint32_t clock_src_freq, uint32_t i2c_freq)
{
 80034f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80034f8:	b091      	sub	sp, #68	@ 0x44
  uint32_t ret = 0;
  uint32_t speed;
  uint32_t idx;

  if ((clock_src_freq != 0U) && (i2c_freq != 0U))
 80034fa:	b918      	cbnz	r0, 8003504 <I2C_GetTiming+0x10>
  uint32_t ret = 0;
 80034fc:	2000      	movs	r0, #0
      }
    }
  }

  return ret;
}
 80034fe:	b011      	add	sp, #68	@ 0x44
 8003500:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if ((i2c_freq >= I2C_Charac[speed].freq_min) &&
 8003504:	4b8a      	ldr	r3, [pc, #552]	@ (8003730 <I2C_GetTiming+0x23c>)
 8003506:	4299      	cmp	r1, r3
 8003508:	d952      	bls.n	80035b0 <I2C_GetTiming+0xbc>
 800350a:	4b8a      	ldr	r3, [pc, #552]	@ (8003734 <I2C_GetTiming+0x240>)
 800350c:	4299      	cmp	r1, r3
 800350e:	d9f5      	bls.n	80034fc <I2C_GetTiming+0x8>
    for (speed = 0 ; speed <= (uint32_t)I2C_SPEED_FREQ_FAST_PLUS ; speed++)
 8003510:	f04f 0801 	mov.w	r8, #1
  uint32_t presc;
  uint32_t scldel;
  uint32_t sdadel;
  uint32_t tafdel_min;
  uint32_t tafdel_max;
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U)) / clock_src_freq;
 8003514:	4f88      	ldr	r7, [pc, #544]	@ (8003738 <I2C_GetTiming+0x244>)
  /* tDNF = DNF x tI2CCLK
     tPRESC = (PRESC+1) x tI2CCLK
     SDADEL >= {tf +tHD;DAT(min) - tAF(min) - tDNF - [3 x tI2CCLK]} / {tPRESC}
     SDADEL <= {tVD;DAT(max) - tr - tAF(max) - tDNF- [4 x tI2CCLK]} / {tPRESC} */

  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
 8003516:	4a89      	ldr	r2, [pc, #548]	@ (800373c <I2C_GetTiming+0x248>)
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U)) / clock_src_freq;
 8003518:	eb07 0350 	add.w	r3, r7, r0, lsr #1
 800351c:	fbb3 f3f0 	udiv	r3, r3, r0
 8003520:	9301      	str	r3, [sp, #4]
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
 8003522:	232c      	movs	r3, #44	@ 0x2c
 8003524:	fb03 2308 	mla	r3, r3, r8, r2
 8003528:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
  uint32_t prev_presc = I2C_PRESC_MAX;
 800352a:	f04f 0b10 	mov.w	fp, #16
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
 800352e:	9203      	str	r2, [sp, #12]
                (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);

  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 8003530:	6a1a      	ldr	r2, [r3, #32]
  if (tsdadel_min <= 0)
  {
    tsdadel_min = 0;
  }

  if (tsdadel_max <= 0)
 8003532:	9c01      	ldr	r4, [sp, #4]
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 8003534:	9202      	str	r2, [sp, #8]
  tscldel_min = (int32_t)I2C_Charac[I2C_speed].trise + (int32_t)I2C_Charac[I2C_speed].sudat_min;
 8003536:	9902      	ldr	r1, [sp, #8]
 8003538:	695a      	ldr	r2, [r3, #20]
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 800353a:	691b      	ldr	r3, [r3, #16]
  tscldel_min = (int32_t)I2C_Charac[I2C_speed].trise + (int32_t)I2C_Charac[I2C_speed].sudat_min;
 800353c:	188a      	adds	r2, r1, r2
 800353e:	9205      	str	r2, [sp, #20]
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
 8003540:	9a03      	ldr	r2, [sp, #12]
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 8003542:	1a5b      	subs	r3, r3, r1
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
 8003544:	f1a2 0532 	sub.w	r5, r2, #50	@ 0x32
                (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
 8003548:	9a01      	ldr	r2, [sp, #4]
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 800354a:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
                (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
 800354e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
 8003552:	1aad      	subs	r5, r5, r2
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 8003554:	9a01      	ldr	r2, [sp, #4]
  if (tsdadel_min <= 0)
 8003556:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 800355a:	eba3 0382 	sub.w	r3, r3, r2, lsl #2
 800355e:	4a78      	ldr	r2, [pc, #480]	@ (8003740 <I2C_GetTiming+0x24c>)
  if (tsdadel_max <= 0)
 8003560:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  {
    tsdadel_max = 0;
  }

  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
 8003564:	6811      	ldr	r1, [r2, #0]
  if (tsdadel_max <= 0)
 8003566:	2200      	movs	r2, #0
 8003568:	4692      	mov	sl, r2
    for (speed = 0 ; speed <= (uint32_t)I2C_SPEED_FREQ_FAST_PLUS ; speed++)
 800356a:	46a1      	mov	r9, r4
  {
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
 800356c:	f04f 0c00 	mov.w	ip, #0
    {
      /* TSCLDEL = (SCLDEL+1) * (PRESC+1) * TI2CCLK */
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;

      if (tscldel >= (uint32_t)tscldel_min)
 8003570:	9805      	ldr	r0, [sp, #20]
 8003572:	f8cd c010 	str.w	ip, [sp, #16]
 8003576:	4548      	cmp	r0, r9
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
 8003578:	f10c 0c01 	add.w	ip, ip, #1
      if (tscldel >= (uint32_t)tscldel_min)
 800357c:	d824      	bhi.n	80035c8 <I2C_GetTiming+0xd4>
 800357e:	2600      	movs	r6, #0
      {
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
 8003580:	46b6      	mov	lr, r6
        {
          /* TSDADEL = SDADEL * (PRESC+1) * TI2CCLK */
          uint32_t tsdadel = (sdadel * (presc + 1U)) * ti2cclk;

          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
 8003582:	42b5      	cmp	r5, r6
 8003584:	d81a      	bhi.n	80035bc <I2C_GetTiming+0xc8>
 8003586:	42b3      	cmp	r3, r6
 8003588:	d318      	bcc.n	80035bc <I2C_GetTiming+0xc8>
          {
            if (presc != prev_presc)
 800358a:	4593      	cmp	fp, r2
 800358c:	d016      	beq.n	80035bc <I2C_GetTiming+0xc8>
            {
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 800358e:	2014      	movs	r0, #20
 8003590:	fb00 fb01 	mul.w	fp, r0, r1
 8003594:	486b      	ldr	r0, [pc, #428]	@ (8003744 <I2C_GetTiming+0x250>)
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
              prev_presc = presc;
              I2c_valid_timing_nbr ++;
 8003596:	3101      	adds	r1, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 8003598:	eb00 0a0b 	add.w	sl, r0, fp
 800359c:	f840 200b 	str.w	r2, [r0, fp]
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
 80035a0:	9804      	ldr	r0, [sp, #16]

              if (I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
 80035a2:	297f      	cmp	r1, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
 80035a4:	e9ca 0e01 	strd	r0, lr, [sl, #4]
              if (I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
 80035a8:	d905      	bls.n	80035b6 <I2C_GetTiming+0xc2>
 80035aa:	4b65      	ldr	r3, [pc, #404]	@ (8003740 <I2C_GetTiming+0x24c>)
 80035ac:	6019      	str	r1, [r3, #0]
 80035ae:	e017      	b.n	80035e0 <I2C_GetTiming+0xec>
    for (speed = 0 ; speed <= (uint32_t)I2C_SPEED_FREQ_FAST_PLUS ; speed++)
 80035b0:	f04f 0800 	mov.w	r8, #0
 80035b4:	e7ae      	b.n	8003514 <I2C_GetTiming+0x20>
 80035b6:	4693      	mov	fp, r2
 80035b8:	f04f 0a01 	mov.w	sl, #1
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
 80035bc:	f10e 0e01 	add.w	lr, lr, #1
 80035c0:	f1be 0f10 	cmp.w	lr, #16
 80035c4:	4426      	add	r6, r4
 80035c6:	d1dc      	bne.n	8003582 <I2C_GetTiming+0x8e>
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
 80035c8:	f1bc 0f10 	cmp.w	ip, #16
 80035cc:	44a1      	add	r9, r4
 80035ce:	d1cf      	bne.n	8003570 <I2C_GetTiming+0x7c>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
 80035d0:	9801      	ldr	r0, [sp, #4]
 80035d2:	3201      	adds	r2, #1
 80035d4:	2a10      	cmp	r2, #16
 80035d6:	4404      	add	r4, r0
 80035d8:	d1c7      	bne.n	800356a <I2C_GetTiming+0x76>
 80035da:	f1ba 0f00 	cmp.w	sl, #0
 80035de:	d1e4      	bne.n	80035aa <I2C_GetTiming+0xb6>
  uint32_t scll;
  uint32_t sclh;
  uint32_t tafdel_min;

  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U)) / clock_src_freq;
  ti2cspeed   = (SEC2NSEC + (I2C_Charac[I2C_speed].freq / 2U)) / I2C_Charac[I2C_speed].freq;
 80035e0:	232c      	movs	r3, #44	@ 0x2c
 80035e2:	fb03 f308 	mul.w	r3, r3, r8
 80035e6:	4955      	ldr	r1, [pc, #340]	@ (800373c <I2C_GetTiming+0x248>)
  clk_max = SEC2NSEC / I2C_Charac[I2C_speed].freq_min;
  clk_min = SEC2NSEC / I2C_Charac[I2C_speed].freq_max;

  prev_error = ti2cspeed;

  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 80035e8:	f04f 0c00 	mov.w	ip, #0
  ti2cspeed   = (SEC2NSEC + (I2C_Charac[I2C_speed].freq / 2U)) / I2C_Charac[I2C_speed].freq;
 80035ec:	58cc      	ldr	r4, [r1, r3]
 80035ee:	18ca      	adds	r2, r1, r3
 80035f0:	eb07 0154 	add.w	r1, r7, r4, lsr #1
 80035f4:	fbb1 f1f4 	udiv	r1, r1, r4
  clk_max = SEC2NSEC / I2C_Charac[I2C_speed].freq_min;
 80035f8:	6854      	ldr	r4, [r2, #4]
  clk_min = SEC2NSEC / I2C_Charac[I2C_speed].freq_max;
 80035fa:	6892      	ldr	r2, [r2, #8]
  clk_max = SEC2NSEC / I2C_Charac[I2C_speed].freq_min;
 80035fc:	fbb7 f0f4 	udiv	r0, r7, r4
  clk_min = SEC2NSEC / I2C_Charac[I2C_speed].freq_max;
 8003600:	fbb7 f2f2 	udiv	r2, r7, r2
 8003604:	9209      	str	r2, [sp, #36]	@ 0x24
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 8003606:	4a4e      	ldr	r2, [pc, #312]	@ (8003740 <I2C_GetTiming+0x24c>)
  uint32_t ret = 0xFFFFFFFFU;
 8003608:	f04f 3bff 	mov.w	fp, #4294967295
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 800360c:	6812      	ldr	r2, [r2, #0]
 800360e:	4c4d      	ldr	r4, [pc, #308]	@ (8003744 <I2C_GetTiming+0x250>)
 8003610:	920b      	str	r2, [sp, #44]	@ 0x2c
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;

    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
    {
      /* tLOW(min) <= tAF(min) + tDNF + 2 x tI2CCLK + [(SCLL+1) x tPRESC ] */
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 8003612:	9a01      	ldr	r2, [sp, #4]
  clk_max = SEC2NSEC / I2C_Charac[I2C_speed].freq_min;
 8003614:	9008      	str	r0, [sp, #32]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 8003616:	0052      	lsls	r2, r2, #1
 8003618:	3232      	adds	r2, #50	@ 0x32
 800361a:	9205      	str	r2, [sp, #20]


      /* The I2CCLK period tI2CCLK must respect the following conditions:
      tI2CCLK < (tLOW - tfilters) / 4 and tI2CCLK < tHIGH */
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 800361c:	4a47      	ldr	r2, [pc, #284]	@ (800373c <I2C_GetTiming+0x248>)
  prev_error = ti2cspeed;
 800361e:	9104      	str	r1, [sp, #16]
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 8003620:	18d3      	adds	r3, r2, r3
 8003622:	9307      	str	r3, [sp, #28]
 8003624:	f06f 0363 	mvn.w	r3, #99	@ 0x63
 8003628:	9a01      	ldr	r2, [sp, #4]
 800362a:	eba3 0382 	sub.w	r3, r3, r2, lsl #2
 800362e:	930f      	str	r3, [sp, #60]	@ 0x3c
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 8003630:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003632:	459c      	cmp	ip, r3
 8003634:	d11b      	bne.n	800366e <I2C_GetTiming+0x17a>
        if (idx < I2C_VALID_TIMING_NBR)
 8003636:	f1bb 0f7f 	cmp.w	fp, #127	@ 0x7f
 800363a:	f63f af5f 	bhi.w	80034fc <I2C_GetTiming+0x8>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) | \
 800363e:	2314      	movs	r3, #20
 8003640:	fb03 f30b 	mul.w	r3, r3, fp
 8003644:	493f      	ldr	r1, [pc, #252]	@ (8003744 <I2C_GetTiming+0x250>)
 8003646:	18ca      	adds	r2, r1, r3
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
 8003648:	7c10      	ldrb	r0, [r2, #16]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) | \
 800364a:	58cb      	ldr	r3, [r1, r3]
 800364c:	ea40 7003 	orr.w	r0, r0, r3, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) | \
 8003650:	6853      	ldr	r3, [r2, #4]
 8003652:	051b      	lsls	r3, r3, #20
 8003654:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) | \
 8003658:	4318      	orrs	r0, r3
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) | \
 800365a:	6893      	ldr	r3, [r2, #8]
 800365c:	041b      	lsls	r3, r3, #16
 800365e:	f403 2370 	and.w	r3, r3, #983040	@ 0xf0000
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) | \
 8003662:	4318      	orrs	r0, r3
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) | \
 8003664:	68d3      	ldr	r3, [r2, #12]
 8003666:	021b      	lsls	r3, r3, #8
 8003668:	b29b      	uxth	r3, r3
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) | \
 800366a:	4318      	orrs	r0, r3
  return ret;
 800366c:	e747      	b.n	80034fe <I2C_GetTiming+0xa>
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
 800366e:	f04f 0e00 	mov.w	lr, #0
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
 8003672:	9a01      	ldr	r2, [sp, #4]
 8003674:	6823      	ldr	r3, [r4, #0]
 8003676:	9803      	ldr	r0, [sp, #12]
 8003678:	fb03 2302 	mla	r3, r3, r2, r2
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 800367c:	9a07      	ldr	r2, [sp, #28]
 800367e:	9e03      	ldr	r6, [sp, #12]
 8003680:	6992      	ldr	r2, [r2, #24]
 8003682:	920a      	str	r2, [sp, #40]	@ 0x28
 8003684:	9a05      	ldr	r2, [sp, #20]
 8003686:	441a      	add	r2, r3
 8003688:	9206      	str	r2, [sp, #24]
 800368a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800368c:	9d06      	ldr	r5, [sp, #24]
 800368e:	1a12      	subs	r2, r2, r0
 8003690:	9802      	ldr	r0, [sp, #8]
 8003692:	1a12      	subs	r2, r2, r0
 8003694:	9805      	ldr	r0, [sp, #20]
 8003696:	440a      	add	r2, r1
 8003698:	1986      	adds	r6, r0, r6
 800369a:	9802      	ldr	r0, [sp, #8]
 800369c:	eba2 0243 	sub.w	r2, r2, r3, lsl #1
 80036a0:	4406      	add	r6, r0
 80036a2:	1a76      	subs	r6, r6, r1
 80036a4:	18f0      	adds	r0, r6, r3
 80036a6:	900e      	str	r0, [sp, #56]	@ 0x38
 80036a8:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80036aa:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 80036ae:	42a8      	cmp	r0, r5
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 80036b0:	f10e 0e01 	add.w	lr, lr, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 80036b4:	d232      	bcs.n	800371c <I2C_GetTiming+0x228>
 80036b6:	9801      	ldr	r0, [sp, #4]
 80036b8:	f1a5 0632 	sub.w	r6, r5, #50	@ 0x32
 80036bc:	ebb0 0f96 	cmp.w	r0, r6, lsr #2
 80036c0:	d22c      	bcs.n	800371c <I2C_GetTiming+0x228>
 80036c2:	4692      	mov	sl, r2
      {
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
 80036c4:	f04f 0800 	mov.w	r8, #0
 80036c8:	980e      	ldr	r0, [sp, #56]	@ 0x38
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 80036ca:	f8dd 9018 	ldr.w	r9, [sp, #24]
 80036ce:	1946      	adds	r6, r0, r5
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);

          /* tSCL = tf + tLOW + tr + tHIGH */
          uint32_t tscl = tscl_l + tscl_h + I2C_Charac[I2C_speed].trise + I2C_Charac[I2C_speed].tfall;

          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && \
 80036d0:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80036d2:	198f      	adds	r7, r1, r6
 80036d4:	42b8      	cmp	r0, r7
 80036d6:	f8cd 8030 	str.w	r8, [sp, #48]	@ 0x30
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
 80036da:	f108 0801 	add.w	r8, r8, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && \
 80036de:	d816      	bhi.n	800370e <I2C_GetTiming+0x21a>
 80036e0:	9808      	ldr	r0, [sp, #32]
 80036e2:	42b8      	cmp	r0, r7
 80036e4:	d313      	bcc.n	800370e <I2C_GetTiming+0x21a>
 80036e6:	9807      	ldr	r0, [sp, #28]
 80036e8:	69c7      	ldr	r7, [r0, #28]
 80036ea:	454f      	cmp	r7, r9
 80036ec:	d80f      	bhi.n	800370e <I2C_GetTiming+0x21a>
 80036ee:	9801      	ldr	r0, [sp, #4]
 80036f0:	4548      	cmp	r0, r9
 80036f2:	d20c      	bcs.n	800370e <I2C_GetTiming+0x21a>
          {
            int32_t error = (int32_t)tscl - (int32_t)ti2cspeed;

            if (error < 0)
            {
              error = -error;
 80036f4:	ea36 0726 	bics.w	r7, r6, r6, asr #32
 80036f8:	bf28      	it	cs
 80036fa:	4657      	movcs	r7, sl
            }

            /* look for the timings with the lowest clock error */
            if ((uint32_t)error < prev_error)
 80036fc:	9804      	ldr	r0, [sp, #16]
 80036fe:	4287      	cmp	r7, r0
 8003700:	d205      	bcs.n	800370e <I2C_GetTiming+0x21a>
            {
              prev_error = (uint32_t)error;
              I2c_valid_timing[count].scll = scll;
              I2c_valid_timing[count].sclh = sclh;
 8003702:	46e3      	mov	fp, ip
              I2c_valid_timing[count].scll = scll;
 8003704:	980d      	ldr	r0, [sp, #52]	@ 0x34
              I2c_valid_timing[count].sclh = sclh;
 8003706:	9704      	str	r7, [sp, #16]
              I2c_valid_timing[count].scll = scll;
 8003708:	6120      	str	r0, [r4, #16]
              I2c_valid_timing[count].sclh = sclh;
 800370a:	980c      	ldr	r0, [sp, #48]	@ 0x30
 800370c:	60e0      	str	r0, [r4, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
 800370e:	f5b8 7f80 	cmp.w	r8, #256	@ 0x100
 8003712:	441e      	add	r6, r3
 8003714:	ebaa 0a03 	sub.w	sl, sl, r3
 8003718:	4499      	add	r9, r3
 800371a:	d1d9      	bne.n	80036d0 <I2C_GetTiming+0x1dc>
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
 800371c:	f5be 7f80 	cmp.w	lr, #256	@ 0x100
 8003720:	441d      	add	r5, r3
 8003722:	eba2 0203 	sub.w	r2, r2, r3
 8003726:	d1bf      	bne.n	80036a8 <I2C_GetTiming+0x1b4>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 8003728:	f10c 0c01 	add.w	ip, ip, #1
 800372c:	3414      	adds	r4, #20
 800372e:	e77f      	b.n	8003630 <I2C_GetTiming+0x13c>
 8003730:	0001d4c0 	.word	0x0001d4c0
 8003734:	0004e1ff 	.word	0x0004e1ff
 8003738:	3b9aca00 	.word	0x3b9aca00
 800373c:	08026f88 	.word	0x08026f88
 8003740:	2003e2f4 	.word	0x2003e2f4
 8003744:	2003e2f8 	.word	0x2003e2f8

08003748 <BSP_I2C5_DeInit>:
  I2c5InitCounter--;
 8003748:	4a0f      	ldr	r2, [pc, #60]	@ (8003788 <BSP_I2C5_DeInit+0x40>)
{
 800374a:	b508      	push	{r3, lr}
  I2c5InitCounter--;
 800374c:	6813      	ldr	r3, [r2, #0]
 800374e:	3b01      	subs	r3, #1
 8003750:	6013      	str	r3, [r2, #0]
  if (I2c5InitCounter == 0U)
 8003752:	b10b      	cbz	r3, 8003758 <BSP_I2C5_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
 8003754:	2000      	movs	r0, #0
}
 8003756:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hI2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C5_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C5_SCL_GPIO_PORT, gpio_init_structure.Pin);
 8003758:	2120      	movs	r1, #32
 800375a:	480c      	ldr	r0, [pc, #48]	@ (800378c <BSP_I2C5_DeInit+0x44>)
 800375c:	f002 f8b4 	bl	80058c8 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C5_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C5_SDA_GPIO_PORT, gpio_init_structure.Pin);
 8003760:	480a      	ldr	r0, [pc, #40]	@ (800378c <BSP_I2C5_DeInit+0x44>)
 8003762:	2110      	movs	r1, #16
 8003764:	f002 f8b0 	bl	80058c8 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C5_CLK_DISABLE();
 8003768:	4a09      	ldr	r2, [pc, #36]	@ (8003790 <BSP_I2C5_DeInit+0x48>)
    if (HAL_I2C_DeInit(&hbus_i2c5) != HAL_OK)
 800376a:	480a      	ldr	r0, [pc, #40]	@ (8003794 <BSP_I2C5_DeInit+0x4c>)
  BUS_I2C5_CLK_DISABLE();
 800376c:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8003770:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8003774:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0
    if (HAL_I2C_DeInit(&hbus_i2c5) != HAL_OK)
 8003778:	f002 fb76 	bl	8005e68 <HAL_I2C_DeInit>
 800377c:	2800      	cmp	r0, #0
 800377e:	d0e9      	beq.n	8003754 <BSP_I2C5_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
 8003780:	f06f 0007 	mvn.w	r0, #7
  return ret;
 8003784:	e7e7      	b.n	8003756 <BSP_I2C5_DeInit+0xe>
 8003786:	bf00      	nop
 8003788:	2003ecf8 	.word	0x2003ecf8
 800378c:	42021c00 	.word	0x42021c00
 8003790:	46020c00 	.word	0x46020c00
 8003794:	2003e2a0 	.word	0x2003e2a0

08003798 <MX_I2C5_Init>:
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
 8003798:	2300      	movs	r3, #0
 800379a:	2201      	movs	r2, #1
{
 800379c:	b510      	push	{r4, lr}
  hI2c->Init.Timing           = timing;
 800379e:	6041      	str	r1, [r0, #4]
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
 80037a0:	e9c0 3202 	strd	r3, r2, [r0, #8]
  hI2c->Init.OwnAddress2      = 0;
 80037a4:	e9c0 3304 	strd	r3, r3, [r0, #16]
  hI2c->Init.GeneralCallMode  = I2C_GENERALCALL_DISABLE;
 80037a8:	e9c0 3306 	strd	r3, r3, [r0, #24]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
 80037ac:	6203      	str	r3, [r0, #32]
{
 80037ae:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
 80037b0:	f002 fb04 	bl	8005dbc <HAL_I2C_Init>
 80037b4:	4601      	mov	r1, r0
 80037b6:	b108      	cbz	r0, 80037bc <MX_I2C5_Init+0x24>
    status = HAL_ERROR;
 80037b8:	2001      	movs	r0, #1
}
 80037ba:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
 80037bc:	4620      	mov	r0, r4
 80037be:	f002 fdc2 	bl	8006346 <HAL_I2CEx_ConfigAnalogFilter>
 80037c2:	4601      	mov	r1, r0
 80037c4:	2800      	cmp	r0, #0
 80037c6:	d1f7      	bne.n	80037b8 <MX_I2C5_Init+0x20>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
 80037c8:	4620      	mov	r0, r4
 80037ca:	f002 fde2 	bl	8006392 <HAL_I2CEx_ConfigDigitalFilter>
 80037ce:	3800      	subs	r0, #0
 80037d0:	bf18      	it	ne
 80037d2:	2001      	movne	r0, #1
 80037d4:	e7f1      	b.n	80037ba <MX_I2C5_Init+0x22>
	...

080037d8 <BSP_I2C5_Init>:
{
 80037d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  hbus_i2c5.Instance = BUS_I2C5;
 80037dc:	4b31      	ldr	r3, [pc, #196]	@ (80038a4 <BSP_I2C5_Init+0xcc>)
 80037de:	4e32      	ldr	r6, [pc, #200]	@ (80038a8 <BSP_I2C5_Init+0xd0>)
{
 80037e0:	b088      	sub	sp, #32
  hbus_i2c5.Instance = BUS_I2C5;
 80037e2:	6033      	str	r3, [r6, #0]
  if (I2c5InitCounter == 0U)
 80037e4:	4b31      	ldr	r3, [pc, #196]	@ (80038ac <BSP_I2C5_Init+0xd4>)
 80037e6:	681a      	ldr	r2, [r3, #0]
 80037e8:	b11a      	cbz	r2, 80037f2 <BSP_I2C5_Init+0x1a>
  int32_t ret = BSP_ERROR_NONE;
 80037ea:	2000      	movs	r0, #0
}
 80037ec:	b008      	add	sp, #32
 80037ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    I2c5InitCounter++;
 80037f2:	2701      	movs	r7, #1
    if (HAL_I2C_GetState(&hbus_i2c5) == HAL_I2C_STATE_RESET)
 80037f4:	4630      	mov	r0, r6
    I2c5InitCounter++;
 80037f6:	601f      	str	r7, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c5) == HAL_I2C_STATE_RESET)
 80037f8:	f002 fda0 	bl	800633c <HAL_I2C_GetState>
 80037fc:	2800      	cmp	r0, #0
 80037fe:	d1f4      	bne.n	80037ea <BSP_I2C5_Init+0x12>
  BUS_I2C5_SCL_GPIO_CLK_ENABLE();
 8003800:	4c2b      	ldr	r4, [pc, #172]	@ (80038b0 <BSP_I2C5_Init+0xd8>)
  gpio_init_structure.Speed             = GPIO_SPEED_FREQ_HIGH;
 8003802:	2502      	movs	r5, #2
  BUS_I2C5_SCL_GPIO_CLK_ENABLE();
 8003804:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  gpio_init_structure.Mode    = GPIO_MODE_AF_OD;
 8003808:	f04f 0812 	mov.w	r8, #18
  BUS_I2C5_SCL_GPIO_CLK_ENABLE();
 800380c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003810:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8003814:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  HAL_GPIO_Init(BUS_I2C5_SCL_GPIO_PORT, &gpio_init_structure);
 8003818:	4826      	ldr	r0, [pc, #152]	@ (80038b4 <BSP_I2C5_Init+0xdc>)
  BUS_I2C5_SCL_GPIO_CLK_ENABLE();
 800381a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800381e:	9300      	str	r3, [sp, #0]
 8003820:	9b00      	ldr	r3, [sp, #0]
  BUS_I2C5_SDA_GPIO_CLK_ENABLE();
 8003822:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  HAL_GPIO_Init(BUS_I2C5_SCL_GPIO_PORT, &gpio_init_structure);
 8003826:	a903      	add	r1, sp, #12
  BUS_I2C5_SDA_GPIO_CLK_ENABLE();
 8003828:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800382c:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8003830:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  gpio_init_structure.Alternate         = BUS_I2C5_SCL_AF;
 8003834:	e9cd 5506 	strd	r5, r5, [sp, #24]
  BUS_I2C5_SDA_GPIO_CLK_ENABLE();
 8003838:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800383c:	9301      	str	r3, [sp, #4]
 800383e:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode    = GPIO_MODE_AF_OD;
 8003840:	2320      	movs	r3, #32
  gpio_init_structure.Pull    = GPIO_PULLUP;
 8003842:	9705      	str	r7, [sp, #20]
  gpio_init_structure.Mode    = GPIO_MODE_AF_OD;
 8003844:	e9cd 3803 	strd	r3, r8, [sp, #12]
  HAL_GPIO_Init(BUS_I2C5_SCL_GPIO_PORT, &gpio_init_structure);
 8003848:	f001 ff30 	bl	80056ac <HAL_GPIO_Init>
  gpio_init_structure.Pin     = BUS_I2C5_SDA_PIN;
 800384c:	2310      	movs	r3, #16
  HAL_GPIO_Init(BUS_I2C5_SDA_GPIO_PORT, &gpio_init_structure);
 800384e:	a903      	add	r1, sp, #12
 8003850:	4818      	ldr	r0, [pc, #96]	@ (80038b4 <BSP_I2C5_Init+0xdc>)
  gpio_init_structure.Mode    = GPIO_MODE_AF_OD;
 8003852:	e9cd 3803 	strd	r3, r8, [sp, #12]
  gpio_init_structure.Speed             = GPIO_SPEED_FREQ_HIGH;
 8003856:	e9cd 7505 	strd	r7, r5, [sp, #20]
  gpio_init_structure.Alternate         = BUS_I2C5_SDA_AF;
 800385a:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(BUS_I2C5_SDA_GPIO_PORT, &gpio_init_structure);
 800385c:	f001 ff26 	bl	80056ac <HAL_GPIO_Init>
  BUS_I2C5_CLK_ENABLE();
 8003860:	f8d4 30a0 	ldr.w	r3, [r4, #160]	@ 0xa0
 8003864:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003868:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
 800386c:	f8d4 30a0 	ldr.w	r3, [r4, #160]	@ 0xa0
 8003870:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003874:	9302      	str	r3, [sp, #8]
 8003876:	9b02      	ldr	r3, [sp, #8]
  BUS_I2C5_FORCE_RESET();
 8003878:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800387a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800387e:	67a3      	str	r3, [r4, #120]	@ 0x78
  BUS_I2C5_RELEASE_RESET();
 8003880:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 8003882:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8003886:	67a3      	str	r3, [r4, #120]	@ 0x78
      if (MX_I2C5_Init(&hbus_i2c5, I2C_GetTiming(HAL_RCC_GetPCLK1Freq(), BUS_I2C5_FREQUENCY)) != HAL_OK)
 8003888:	f004 fa2c 	bl	8007ce4 <HAL_RCC_GetPCLK1Freq>
 800388c:	490a      	ldr	r1, [pc, #40]	@ (80038b8 <BSP_I2C5_Init+0xe0>)
 800388e:	f7ff fe31 	bl	80034f4 <I2C_GetTiming>
 8003892:	4601      	mov	r1, r0
 8003894:	4630      	mov	r0, r6
 8003896:	f7ff ff7f 	bl	8003798 <MX_I2C5_Init>
 800389a:	2800      	cmp	r0, #0
 800389c:	d0a5      	beq.n	80037ea <BSP_I2C5_Init+0x12>
        ret = BSP_ERROR_BUS_FAILURE;
 800389e:	f06f 0007 	mvn.w	r0, #7
return ret;
 80038a2:	e7a3      	b.n	80037ec <BSP_I2C5_Init+0x14>
 80038a4:	40009800 	.word	0x40009800
 80038a8:	2003e2a0 	.word	0x2003e2a0
 80038ac:	2003ecf8 	.word	0x2003ecf8
 80038b0:	46020c00 	.word	0x46020c00
 80038b4:	42021c00 	.word	0x42021c00
 80038b8:	00061a80 	.word	0x00061a80

080038bc <BSP_I2C5_WriteReg>:
{
 80038bc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C5_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Write(&hbus_i2c5, DevAddr, Reg, MemAddSize, pData, Length, 10000) == HAL_OK)
 80038be:	f242 7410 	movw	r4, #10000	@ 0x2710
 80038c2:	9200      	str	r2, [sp, #0]
 80038c4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80038c8:	460a      	mov	r2, r1
 80038ca:	2301      	movs	r3, #1
 80038cc:	4601      	mov	r1, r0
 80038ce:	4807      	ldr	r0, [pc, #28]	@ (80038ec <BSP_I2C5_WriteReg+0x30>)
 80038d0:	f002 fb7c 	bl	8005fcc <HAL_I2C_Mem_Write>
 80038d4:	b140      	cbz	r0, 80038e8 <BSP_I2C5_WriteReg+0x2c>
    if (HAL_I2C_GetError(&hbus_i2c5) == HAL_I2C_ERROR_AF)
 80038d6:	4805      	ldr	r0, [pc, #20]	@ (80038ec <BSP_I2C5_WriteReg+0x30>)
 80038d8:	f002 fd33 	bl	8006342 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
 80038dc:	2804      	cmp	r0, #4
 80038de:	bf14      	ite	ne
 80038e0:	f06f 0003 	mvnne.w	r0, #3
 80038e4:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
}
 80038e8:	b004      	add	sp, #16
 80038ea:	bd10      	pop	{r4, pc}
 80038ec:	2003e2a0 	.word	0x2003e2a0

080038f0 <BSP_I2C5_ReadReg>:
{
 80038f0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C5_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c5, DevAddr, Reg, MemAddSize, pData, Length, 10000) == HAL_OK)
 80038f2:	f242 7410 	movw	r4, #10000	@ 0x2710
 80038f6:	9200      	str	r2, [sp, #0]
 80038f8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80038fc:	460a      	mov	r2, r1
 80038fe:	2301      	movs	r3, #1
 8003900:	4601      	mov	r1, r0
 8003902:	4807      	ldr	r0, [pc, #28]	@ (8003920 <BSP_I2C5_ReadReg+0x30>)
 8003904:	f002 fc3c 	bl	8006180 <HAL_I2C_Mem_Read>
 8003908:	b140      	cbz	r0, 800391c <BSP_I2C5_ReadReg+0x2c>
    if (HAL_I2C_GetError(&hbus_i2c5) == HAL_I2C_ERROR_AF)
 800390a:	4805      	ldr	r0, [pc, #20]	@ (8003920 <BSP_I2C5_ReadReg+0x30>)
 800390c:	f002 fd19 	bl	8006342 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
 8003910:	2804      	cmp	r0, #4
 8003912:	bf14      	ite	ne
 8003914:	f06f 0003 	mvnne.w	r0, #3
 8003918:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
}
 800391c:	b004      	add	sp, #16
 800391e:	bd10      	pop	{r4, pc}
 8003920:	2003e2a0 	.word	0x2003e2a0

08003924 <BSP_I2C5_Recv>:
{
 8003924:	b507      	push	{r0, r1, r2, lr}
 8003926:	4613      	mov	r3, r2
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C5_Recv(uint16_t DevAddr, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Master_Receive(&hbus_i2c5, DevAddr, pData, Length, 10000) == HAL_OK)
 8003928:	f242 7210 	movw	r2, #10000	@ 0x2710
 800392c:	9200      	str	r2, [sp, #0]
 800392e:	460a      	mov	r2, r1
 8003930:	4601      	mov	r1, r0
 8003932:	4808      	ldr	r0, [pc, #32]	@ (8003954 <BSP_I2C5_Recv+0x30>)
 8003934:	f002 fab2 	bl	8005e9c <HAL_I2C_Master_Receive>
 8003938:	b140      	cbz	r0, 800394c <BSP_I2C5_Recv+0x28>
    if (HAL_I2C_GetError(&hbus_i2c5) == HAL_I2C_ERROR_AF)
 800393a:	4806      	ldr	r0, [pc, #24]	@ (8003954 <BSP_I2C5_Recv+0x30>)
 800393c:	f002 fd01 	bl	8006342 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
 8003940:	2804      	cmp	r0, #4
 8003942:	bf14      	ite	ne
 8003944:	f06f 0003 	mvnne.w	r0, #3
 8003948:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
}
 800394c:	b003      	add	sp, #12
 800394e:	f85d fb04 	ldr.w	pc, [sp], #4
 8003952:	bf00      	nop
 8003954:	2003e2a0 	.word	0x2003e2a0

08003958 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
 8003958:	f000 bd4c 	b.w	80043f4 <HAL_GetTick>

0800395c <Tuning_HSPI_Write.constprop.0>:
{
  int32_t ret = BSP_ERROR_NONE;
  XSPI_HSCalTypeDef sCfg;

  hhspi->Instance = HSPI1;
  hhspi->State    = HAL_XSPI_STATE_READY;
 800395c:	2302      	movs	r3, #2
static int32_t Tuning_HSPI_Write(XSPI_HandleTypeDef *hhspi)
 800395e:	b530      	push	{r4, r5, lr}
  hhspi->Instance = HSPI1;
 8003960:	4c0c      	ldr	r4, [pc, #48]	@ (8003994 <Tuning_HSPI_Write.constprop.0+0x38>)
static int32_t Tuning_HSPI_Write(XSPI_HandleTypeDef *hhspi)
 8003962:	b085      	sub	sp, #20

  sCfg.DelayValueType        = HAL_XSPI_CAL_DATA_OUTPUT_DELAY;
  sCfg.FineCalibrationUnit   = 0x11;
  sCfg.CoarseCalibrationUnit = 0x05;
 8003964:	2211      	movs	r2, #17
  hhspi->State    = HAL_XSPI_STATE_READY;
 8003966:	6563      	str	r3, [r4, #84]	@ 0x54
  sCfg.DelayValueType        = HAL_XSPI_CAL_DATA_OUTPUT_DELAY;
 8003968:	9300      	str	r3, [sp, #0]
  sCfg.CoarseCalibrationUnit = 0x05;
 800396a:	2305      	movs	r3, #5
 800396c:	e9cd 2301 	strd	r2, r3, [sp, #4]
  sCfg.MaxCalibration        = HAL_XSPI_MAXCAL_REACHED;
 8003970:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
  hhspi->Instance = HSPI1;
 8003974:	4d08      	ldr	r5, [pc, #32]	@ (8003998 <Tuning_HSPI_Write.constprop.0+0x3c>)
  if (HAL_XSPI_SetDelayValue(hhspi, &sCfg) != HAL_OK)
 8003976:	4669      	mov	r1, sp
 8003978:	4620      	mov	r0, r4
  hhspi->Instance = HSPI1;
 800397a:	6025      	str	r5, [r4, #0]
  sCfg.MaxCalibration        = HAL_XSPI_MAXCAL_REACHED;
 800397c:	9303      	str	r3, [sp, #12]
  if (HAL_XSPI_SetDelayValue(hhspi, &sCfg) != HAL_OK)
 800397e:	f007 fbaf 	bl	800b0e0 <HAL_XSPI_SetDelayValue>
 8003982:	b128      	cbz	r0, 8003990 <Tuning_HSPI_Write.constprop.0+0x34>
  {
    if (hhspi->Instance == HSPI1)
 8003984:	6823      	ldr	r3, [r4, #0]
    {
      ret = BSP_ERROR_PERIPH_FAILURE;
 8003986:	42ab      	cmp	r3, r5
 8003988:	bf14      	ite	ne
 800398a:	2000      	movne	r0, #0
 800398c:	f06f 0003 	mvneq.w	r0, #3
    }
  }

  /* Return BSP status */
  return ret;
}
 8003990:	b005      	add	sp, #20
 8003992:	bd30      	pop	{r4, r5, pc}
 8003994:	2003edec 	.word	0x2003edec
 8003998:	420d3400 	.word	0x420d3400

0800399c <MX_HSPI_RAM_Init>:
  * @param  hhspi          HSPI handle
  * @param  Init           HSPI config structure
  * @retval BSP status
  */
__weak HAL_StatusTypeDef MX_HSPI_RAM_Init(XSPI_HandleTypeDef *hhspi, MX_HSPI_InitTypeDef *Init)
{
 800399c:	b538      	push	{r3, r4, r5, lr}
 800399e:	4604      	mov	r4, r0
 80039a0:	460d      	mov	r5, r1
  HAL_StatusTypeDef status;
  uint32_t hspi_clk = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_HSPI);
 80039a2:	2000      	movs	r0, #0
 80039a4:	2101      	movs	r1, #1
 80039a6:	f005 f83b 	bl	8008a20 <HAL_RCCEx_GetPeriphCLKFreq>

  /* HSPI initialization */
  hhspi->Instance = HSPI1;

  hhspi->Init.FifoThresholdByte       = 2U;
 80039aa:	2302      	movs	r3, #2
 80039ac:	4a13      	ldr	r2, [pc, #76]	@ (80039fc <MX_HSPI_RAM_Init+0x60>)
  hhspi->Init.ChipSelectHighTimeCycle = 1U;
  hhspi->Init.FreeRunningClock        = HAL_XSPI_FREERUNCLK_DISABLE;
  hhspi->Init.ClockMode               = HAL_XSPI_CLOCK_MODE_0;
  hhspi->Init.WrapSize                = HAL_XSPI_WRAP_32_BYTES;
  hhspi->Init.ClockPrescaler          = Init->ClockPrescaler;
  hhspi->Init.SampleShifting          = Init->SampleShifting;
 80039ae:	68a9      	ldr	r1, [r5, #8]
  hhspi->Init.FifoThresholdByte       = 2U;
 80039b0:	e9c4 2300 	strd	r2, r3, [r4]
  hhspi->Init.MemoryType              = HAL_XSPI_MEMTYPE_APMEM_16BITS;
 80039b4:	2200      	movs	r2, #0
 80039b6:	f04f 63c0 	mov.w	r3, #100663296	@ 0x6000000
 80039ba:	e9c4 2302 	strd	r2, r3, [r4, #8]
  hhspi->Init.MemorySize              = Init->MemorySize;
 80039be:	682b      	ldr	r3, [r5, #0]
  hhspi->Init.ClockMode               = HAL_XSPI_CLOCK_MODE_0;
 80039c0:	61e2      	str	r2, [r4, #28]
  hhspi->Init.MemorySize              = Init->MemorySize;
 80039c2:	6123      	str	r3, [r4, #16]
  hhspi->Init.ChipSelectHighTimeCycle = 1U;
 80039c4:	2301      	movs	r3, #1
  hhspi->Init.FreeRunningClock        = HAL_XSPI_FREERUNCLK_DISABLE;
 80039c6:	e9c4 3205 	strd	r3, r2, [r4, #20]
  hhspi->Init.WrapSize                = HAL_XSPI_WRAP_32_BYTES;
 80039ca:	f44f 3340 	mov.w	r3, #196608	@ 0x30000
 80039ce:	6223      	str	r3, [r4, #32]
  hhspi->Init.ClockPrescaler          = Init->ClockPrescaler;
 80039d0:	686b      	ldr	r3, [r5, #4]
  hhspi->Init.DelayHoldQuarterCycle   = HAL_XSPI_DHQC_DISABLE;
 80039d2:	e9c4 120a 	strd	r1, r2, [r4, #40]	@ 0x28
  hhspi->Init.ClockPrescaler          = Init->ClockPrescaler;
 80039d6:	6263      	str	r3, [r4, #36]	@ 0x24
  hhspi->Init.ChipSelectBoundary      = 11U;
 80039d8:	210b      	movs	r1, #11
  hhspi->Init.DelayBlockBypass        = HAL_XSPI_DELAY_BLOCK_ON;
  /* tCEM = 2 us max => REFRESH+4 clock cycles for read */
  hhspi->Init.Refresh                 = ((2U * (hspi_clk / (Init->ClockPrescaler + 1))) / 1000000U) - 4U;
 80039da:	3301      	adds	r3, #1
 80039dc:	fbb0 f3f3 	udiv	r3, r0, r3
  hhspi->Init.DelayBlockBypass        = HAL_XSPI_DELAY_BLOCK_ON;
 80039e0:	e9c4 120c 	strd	r1, r2, [r4, #48]	@ 0x30
  hhspi->Init.Refresh                 = ((2U * (hspi_clk / (Init->ClockPrescaler + 1))) / 1000000U) - 4U;
 80039e4:	4906      	ldr	r1, [pc, #24]	@ (8003a00 <MX_HSPI_RAM_Init+0x64>)
 80039e6:	005b      	lsls	r3, r3, #1
 80039e8:	fbb3 f3f1 	udiv	r3, r3, r1
 80039ec:	3b04      	subs	r3, #4
  hhspi->Init.MaxTran                 = 0U;

  status = HAL_XSPI_Init(hhspi);
 80039ee:	4620      	mov	r0, r4
  hhspi->Init.MaxTran                 = 0U;
 80039f0:	e9c4 230e 	strd	r2, r3, [r4, #56]	@ 0x38

  return status;
}
 80039f4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  status = HAL_XSPI_Init(hhspi);
 80039f8:	f007 b842 	b.w	800aa80 <HAL_XSPI_Init>
 80039fc:	420d3400 	.word	0x420d3400
 8003a00:	000f4240 	.word	0x000f4240

08003a04 <BSP_HSPI_RAM_EnableMemoryMappedMode>:
  * @brief  Configure the HSPI in memory-mapped mode
  * @param  Instance  HSPI instance
  * @retval BSP status
  */
int32_t BSP_HSPI_RAM_EnableMemoryMappedMode(uint32_t Instance)
{
 8003a04:	b513      	push	{r0, r1, r4, lr}
  int32_t ret = BSP_ERROR_NONE;

  /* Check if the instance is supported */
  if (Instance >= HSPI_RAM_INSTANCES_NUMBER)
 8003a06:	bb48      	cbnz	r0, 8003a5c <BSP_HSPI_RAM_EnableMemoryMappedMode+0x58>
  {
    ret = BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    if (Tuning_HSPI_Write(&hhspi_ram[Instance]) != 0UL)
 8003a08:	f7ff ffa8 	bl	800395c <Tuning_HSPI_Write.constprop.0>
 8003a0c:	bb48      	cbnz	r0, 8003a62 <BSP_HSPI_RAM_EnableMemoryMappedMode+0x5e>
    {
      ret = BSP_ERROR_PERIPH_FAILURE;
    }
    else if (APS512XX_EnableMemoryMappedMode(&hhspi_ram[Instance],
                                             (uint32_t)APS512XX_READ_LATENCY((uint32_t)((uint32_t)(Hspi_Ram_Ctx[Instance].ReadLatencyCode)),
 8003a0e:	4c18      	ldr	r4, [pc, #96]	@ (8003a70 <BSP_HSPI_RAM_EnableMemoryMappedMode+0x6c>)
    else if (APS512XX_EnableMemoryMappedMode(&hhspi_ram[Instance],
 8003a10:	7863      	ldrb	r3, [r4, #1]
                                             (uint32_t)APS512XX_READ_LATENCY((uint32_t)((uint32_t)(Hspi_Ram_Ctx[Instance].ReadLatencyCode)),
 8003a12:	78a1      	ldrb	r1, [r4, #2]
    else if (APS512XX_EnableMemoryMappedMode(&hhspi_ram[Instance],
 8003a14:	069b      	lsls	r3, r3, #26
                                             (uint32_t)APS512XX_READ_LATENCY((uint32_t)((uint32_t)(Hspi_Ram_Ctx[Instance].ReadLatencyCode)),
 8003a16:	f3c1 0182 	ubfx	r1, r1, #2, #3
                                                                             (uint32_t)(Hspi_Ram_Ctx[Instance].LatencyType)),
                                             APS512XX_WRITE_LATENCY((uint32_t)(Hspi_Ram_Ctx[Instance].WriteLatencyCode)),
 8003a1a:	78e3      	ldrb	r3, [r4, #3]
    else if (APS512XX_EnableMemoryMappedMode(&hhspi_ram[Instance],
 8003a1c:	f101 0103 	add.w	r1, r1, #3
 8003a20:	bf48      	it	mi
 8003a22:	0049      	lslmi	r1, r1, #1
 8003a24:	2b1f      	cmp	r3, #31
 8003a26:	d913      	bls.n	8003a50 <BSP_HSPI_RAM_EnableMemoryMappedMode+0x4c>
                                             APS512XX_WRITE_LATENCY((uint32_t)(Hspi_Ram_Ctx[Instance].WriteLatencyCode)),
 8003a28:	0698      	lsls	r0, r3, #26
 8003a2a:	d413      	bmi.n	8003a54 <BSP_HSPI_RAM_EnableMemoryMappedMode+0x50>
 8003a2c:	0658      	lsls	r0, r3, #25
 8003a2e:	d513      	bpl.n	8003a58 <BSP_HSPI_RAM_EnableMemoryMappedMode+0x54>
 8003a30:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8003a34:	bf14      	ite	ne
 8003a36:	2206      	movne	r2, #6
 8003a38:	2205      	moveq	r2, #5
    else if (APS512XX_EnableMemoryMappedMode(&hhspi_ram[Instance],
 8003a3a:	7923      	ldrb	r3, [r4, #4]
 8003a3c:	480d      	ldr	r0, [pc, #52]	@ (8003a74 <BSP_HSPI_RAM_EnableMemoryMappedMode+0x70>)
 8003a3e:	9300      	str	r3, [sp, #0]
 8003a40:	79a3      	ldrb	r3, [r4, #6]
 8003a42:	f7ff f9ab 	bl	8002d9c <APS512XX_EnableMemoryMappedMode>
 8003a46:	b978      	cbnz	r0, 8003a68 <BSP_HSPI_RAM_EnableMemoryMappedMode+0x64>
    {
      ret = BSP_ERROR_COMPONENT_FAILURE;
    }
    else /* Update HSPI context if all operations are well done */
    {
      Hspi_Ram_Ctx[Instance].IsInitialized = HSPI_ACCESS_MMP;
 8003a48:	2302      	movs	r3, #2
 8003a4a:	7023      	strb	r3, [r4, #0]
    }
  }

  /* Return BSP status */
  return ret;
}
 8003a4c:	b002      	add	sp, #8
 8003a4e:	bd10      	pop	{r4, pc}
    else if (APS512XX_EnableMemoryMappedMode(&hhspi_ram[Instance],
 8003a50:	2203      	movs	r2, #3
 8003a52:	e7f2      	b.n	8003a3a <BSP_HSPI_RAM_EnableMemoryMappedMode+0x36>
                                             APS512XX_WRITE_LATENCY((uint32_t)(Hspi_Ram_Ctx[Instance].WriteLatencyCode)),
 8003a54:	2207      	movs	r2, #7
 8003a56:	e7f0      	b.n	8003a3a <BSP_HSPI_RAM_EnableMemoryMappedMode+0x36>
 8003a58:	2204      	movs	r2, #4
 8003a5a:	e7ee      	b.n	8003a3a <BSP_HSPI_RAM_EnableMemoryMappedMode+0x36>
    ret = BSP_ERROR_WRONG_PARAM;
 8003a5c:	f06f 0001 	mvn.w	r0, #1
 8003a60:	e7f4      	b.n	8003a4c <BSP_HSPI_RAM_EnableMemoryMappedMode+0x48>
      ret = BSP_ERROR_PERIPH_FAILURE;
 8003a62:	f06f 0003 	mvn.w	r0, #3
 8003a66:	e7f1      	b.n	8003a4c <BSP_HSPI_RAM_EnableMemoryMappedMode+0x48>
      ret = BSP_ERROR_COMPONENT_FAILURE;
 8003a68:	f06f 0004 	mvn.w	r0, #4
  return ret;
 8003a6c:	e7ee      	b.n	8003a4c <BSP_HSPI_RAM_EnableMemoryMappedMode+0x48>
 8003a6e:	bf00      	nop
 8003a70:	20000040 	.word	0x20000040
 8003a74:	2003edec 	.word	0x2003edec

08003a78 <BSP_HSPI_RAM_Config16BitsOctalRAM>:
  * @param  Instance    HSPI instance
  * @param  Cfg         pointer to the RAM config
  * @retval BSP status
  */
int32_t BSP_HSPI_RAM_Config16BitsOctalRAM(uint32_t Instance, BSP_HSPI_RAM_Cfg_t *Cfg)
{
 8003a78:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003a7a:	460c      	mov	r4, r1
  int32_t ret = BSP_ERROR_NONE;
  uint8_t reg[2];

  /* Check if the instance is supported */
  if ((Instance >= HSPI_RAM_INSTANCES_NUMBER)
 8003a7c:	2800      	cmp	r0, #0
 8003a7e:	f040 80b5 	bne.w	8003bec <BSP_HSPI_RAM_Config16BitsOctalRAM+0x174>
      || (Cfg->BurstLength == (BSP_HSPI_RAM_BurstLength_t)APS512XX_MR8_BL_2K_BYTES))
 8003a82:	790b      	ldrb	r3, [r1, #4]
 8003a84:	2b03      	cmp	r3, #3
 8003a86:	f000 80b1 	beq.w	8003bec <BSP_HSPI_RAM_Config16BitsOctalRAM+0x174>
    ret = BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    /* Check if MMP mode locked ***********************************************/
    if (Hspi_Ram_Ctx[Instance].IsInitialized == HSPI_ACCESS_MMP)
 8003a8a:	4d5b      	ldr	r5, [pc, #364]	@ (8003bf8 <BSP_HSPI_RAM_Config16BitsOctalRAM+0x180>)
 8003a8c:	782a      	ldrb	r2, [r5, #0]
 8003a8e:	2a02      	cmp	r2, #2
 8003a90:	f000 80af 	beq.w	8003bf2 <BSP_HSPI_RAM_Config16BitsOctalRAM+0x17a>
    }
    else
    {
      if ((Hspi_Ram_Ctx[Instance].IsInitialized  == HSPI_ACCESS_NONE) ||
          (Hspi_Ram_Ctx[Instance].LatencyType     != Cfg->LatencyType)  ||
          (Hspi_Ram_Ctx[Instance].ReadLatencyCode != Cfg->ReadLatencyCode))
 8003a94:	78ab      	ldrb	r3, [r5, #2]
      if ((Hspi_Ram_Ctx[Instance].IsInitialized  == HSPI_ACCESS_NONE) ||
 8003a96:	b332      	cbz	r2, 8003ae6 <BSP_HSPI_RAM_Config16BitsOctalRAM+0x6e>
 8003a98:	7869      	ldrb	r1, [r5, #1]
 8003a9a:	7822      	ldrb	r2, [r4, #0]
 8003a9c:	4291      	cmp	r1, r2
 8003a9e:	d122      	bne.n	8003ae6 <BSP_HSPI_RAM_Config16BitsOctalRAM+0x6e>
          (Hspi_Ram_Ctx[Instance].LatencyType     != Cfg->LatencyType)  ||
 8003aa0:	7862      	ldrb	r2, [r4, #1]
 8003aa2:	429a      	cmp	r2, r3
 8003aa4:	d11f      	bne.n	8003ae6 <BSP_HSPI_RAM_Config16BitsOctalRAM+0x6e>
        }
      }

      if (ret == BSP_ERROR_NONE)
      {
        if ((Hspi_Ram_Ctx[Instance].IsInitialized   == HSPI_ACCESS_NONE) ||
 8003aa6:	78ea      	ldrb	r2, [r5, #3]
 8003aa8:	78a3      	ldrb	r3, [r4, #2]
 8003aaa:	429a      	cmp	r2, r3
 8003aac:	d13d      	bne.n	8003b2a <BSP_HSPI_RAM_Config16BitsOctalRAM+0xb2>
        }
      }

      if (ret == BSP_ERROR_NONE)
      {
        if ((Hspi_Ram_Ctx[Instance].IsInitialized == HSPI_ACCESS_NONE)  ||
 8003aae:	792a      	ldrb	r2, [r5, #4]
 8003ab0:	78e3      	ldrb	r3, [r4, #3]
 8003ab2:	429a      	cmp	r2, r3
 8003ab4:	d150      	bne.n	8003b58 <BSP_HSPI_RAM_Config16BitsOctalRAM+0xe0>
            (Hspi_Ram_Ctx[Instance].BurstType      != Cfg->BurstType)   ||
 8003ab6:	796a      	ldrb	r2, [r5, #5]
 8003ab8:	7923      	ldrb	r3, [r4, #4]
 8003aba:	429a      	cmp	r2, r3
 8003abc:	d14c      	bne.n	8003b58 <BSP_HSPI_RAM_Config16BitsOctalRAM+0xe0>
            (Hspi_Ram_Ctx[Instance].BurstLength    != Cfg->BurstLength) ||
 8003abe:	79aa      	ldrb	r2, [r5, #6]
 8003ac0:	7963      	ldrb	r3, [r4, #5]
 8003ac2:	429a      	cmp	r2, r3
 8003ac4:	d148      	bne.n	8003b58 <BSP_HSPI_RAM_Config16BitsOctalRAM+0xe0>

      /* Update HSPI context if all operations are well done */
      if (ret == BSP_ERROR_NONE)
      {
        /* Update current status parameter *****************************************/
        Hspi_Ram_Ctx[Instance].IsInitialized    = HSPI_ACCESS_INDIRECT;
 8003ac6:	2301      	movs	r3, #1
 8003ac8:	702b      	strb	r3, [r5, #0]
        Hspi_Ram_Ctx[Instance].LatencyType      = Cfg->LatencyType;
 8003aca:	7823      	ldrb	r3, [r4, #0]
        Hspi_Ram_Ctx[Instance].ReadLatencyCode  = Cfg->ReadLatencyCode;
        Hspi_Ram_Ctx[Instance].WriteLatencyCode = Cfg->WriteLatencyCode;
        Hspi_Ram_Ctx[Instance].BurstType        = Cfg->BurstType;
        Hspi_Ram_Ctx[Instance].BurstLength      = Cfg->BurstLength;
        Hspi_Ram_Ctx[Instance].IOMode           = Cfg->IOMode;
 8003acc:	2000      	movs	r0, #0
        Hspi_Ram_Ctx[Instance].LatencyType      = Cfg->LatencyType;
 8003ace:	706b      	strb	r3, [r5, #1]
        Hspi_Ram_Ctx[Instance].ReadLatencyCode  = Cfg->ReadLatencyCode;
 8003ad0:	7863      	ldrb	r3, [r4, #1]
 8003ad2:	70ab      	strb	r3, [r5, #2]
        Hspi_Ram_Ctx[Instance].WriteLatencyCode = Cfg->WriteLatencyCode;
 8003ad4:	78a3      	ldrb	r3, [r4, #2]
 8003ad6:	70eb      	strb	r3, [r5, #3]
        Hspi_Ram_Ctx[Instance].BurstType        = Cfg->BurstType;
 8003ad8:	78e3      	ldrb	r3, [r4, #3]
 8003ada:	712b      	strb	r3, [r5, #4]
        Hspi_Ram_Ctx[Instance].BurstLength      = Cfg->BurstLength;
 8003adc:	7923      	ldrb	r3, [r4, #4]
 8003ade:	716b      	strb	r3, [r5, #5]
        Hspi_Ram_Ctx[Instance].IOMode           = Cfg->IOMode;
 8003ae0:	7963      	ldrb	r3, [r4, #5]
 8003ae2:	71ab      	strb	r3, [r5, #6]
 8003ae4:	e00b      	b.n	8003afe <BSP_HSPI_RAM_Config16BitsOctalRAM+0x86>
                             (uint32_t)APS512XX_READ_REG_LATENCY((uint32_t)(Hspi_Ram_Ctx[Instance].ReadLatencyCode))) != \
 8003ae6:	f3c3 0382 	ubfx	r3, r3, #2, #3
        if (APS512XX_ReadReg(&hhspi_ram[Instance], APS512XX_MR0_ADDRESS, reg,
 8003aea:	2100      	movs	r1, #0
 8003aec:	4843      	ldr	r0, [pc, #268]	@ (8003bfc <BSP_HSPI_RAM_Config16BitsOctalRAM+0x184>)
 8003aee:	3303      	adds	r3, #3
 8003af0:	aa01      	add	r2, sp, #4
 8003af2:	f7ff f9ac 	bl	8002e4e <APS512XX_ReadReg>
 8003af6:	4601      	mov	r1, r0
 8003af8:	b118      	cbz	r0, 8003b02 <BSP_HSPI_RAM_Config16BitsOctalRAM+0x8a>
              ret = BSP_ERROR_COMPONENT_FAILURE;
 8003afa:	f06f 0004 	mvn.w	r0, #4
    }
  }

  /* Return BSP status */
  return ret;
}
 8003afe:	b003      	add	sp, #12
 8003b00:	bdf0      	pop	{r4, r5, r6, r7, pc}
          MODIFY_REG(reg[0], ((uint32_t)APS512XX_MR0_LATENCY_TYPE | (uint32_t)APS512XX_MR0_READ_LATENCY_CODE |
 8003b02:	7863      	ldrb	r3, [r4, #1]
 8003b04:	7822      	ldrb	r2, [r4, #0]
          if (APS512XX_WriteReg(&hhspi_ram[Instance], APS512XX_MR0_ADDRESS, reg[0]) != APS512XX_OK)
 8003b06:	483d      	ldr	r0, [pc, #244]	@ (8003bfc <BSP_HSPI_RAM_Config16BitsOctalRAM+0x184>)
          MODIFY_REG(reg[0], ((uint32_t)APS512XX_MR0_LATENCY_TYPE | (uint32_t)APS512XX_MR0_READ_LATENCY_CODE |
 8003b08:	431a      	orrs	r2, r3
 8003b0a:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8003b0e:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8003b12:	431a      	orrs	r2, r3
 8003b14:	f042 0201 	orr.w	r2, r2, #1
 8003b18:	f88d 2004 	strb.w	r2, [sp, #4]
          if (APS512XX_WriteReg(&hhspi_ram[Instance], APS512XX_MR0_ADDRESS, reg[0]) != APS512XX_OK)
 8003b1c:	f7ff f9d3 	bl	8002ec6 <APS512XX_WriteReg>
 8003b20:	2800      	cmp	r0, #0
 8003b22:	d1ea      	bne.n	8003afa <BSP_HSPI_RAM_Config16BitsOctalRAM+0x82>
        if ((Hspi_Ram_Ctx[Instance].IsInitialized   == HSPI_ACCESS_NONE) ||
 8003b24:	782b      	ldrb	r3, [r5, #0]
 8003b26:	2b00      	cmp	r3, #0
 8003b28:	d1bd      	bne.n	8003aa6 <BSP_HSPI_RAM_Config16BitsOctalRAM+0x2e>
                               (uint32_t)APS512XX_READ_REG_LATENCY((uint32_t)(Hspi_Ram_Ctx[Instance].ReadLatencyCode))) != (int32_t)APS512XX_OK)
 8003b2a:	78ab      	ldrb	r3, [r5, #2]
          if (APS512XX_ReadReg(&hhspi_ram[Instance], APS512XX_MR4_ADDRESS, reg,
 8003b2c:	2104      	movs	r1, #4
                               (uint32_t)APS512XX_READ_REG_LATENCY((uint32_t)(Hspi_Ram_Ctx[Instance].ReadLatencyCode))) != (int32_t)APS512XX_OK)
 8003b2e:	f3c3 0382 	ubfx	r3, r3, #2, #3
          if (APS512XX_ReadReg(&hhspi_ram[Instance], APS512XX_MR4_ADDRESS, reg,
 8003b32:	4832      	ldr	r0, [pc, #200]	@ (8003bfc <BSP_HSPI_RAM_Config16BitsOctalRAM+0x184>)
 8003b34:	3303      	adds	r3, #3
 8003b36:	aa01      	add	r2, sp, #4
 8003b38:	f7ff f989 	bl	8002e4e <APS512XX_ReadReg>
 8003b3c:	2800      	cmp	r0, #0
 8003b3e:	d1dc      	bne.n	8003afa <BSP_HSPI_RAM_Config16BitsOctalRAM+0x82>
            MODIFY_REG(reg[0], (APS512XX_MR4_WRITE_LATENCY_CODE | APS512XX_MR4_RF_RATE | APS512XX_MR4_PASR),
 8003b40:	78a2      	ldrb	r2, [r4, #2]
            if (APS512XX_WriteReg(&hhspi_ram[Instance], APS512XX_MR4_ADDRESS, reg[0]) != APS512XX_OK)
 8003b42:	2104      	movs	r1, #4
 8003b44:	482d      	ldr	r0, [pc, #180]	@ (8003bfc <BSP_HSPI_RAM_Config16BitsOctalRAM+0x184>)
            MODIFY_REG(reg[0], (APS512XX_MR4_WRITE_LATENCY_CODE | APS512XX_MR4_RF_RATE | APS512XX_MR4_PASR),
 8003b46:	f88d 2004 	strb.w	r2, [sp, #4]
            if (APS512XX_WriteReg(&hhspi_ram[Instance], APS512XX_MR4_ADDRESS, reg[0]) != APS512XX_OK)
 8003b4a:	f7ff f9bc 	bl	8002ec6 <APS512XX_WriteReg>
 8003b4e:	2800      	cmp	r0, #0
 8003b50:	d1d3      	bne.n	8003afa <BSP_HSPI_RAM_Config16BitsOctalRAM+0x82>
        if ((Hspi_Ram_Ctx[Instance].IsInitialized == HSPI_ACCESS_NONE)  ||
 8003b52:	782b      	ldrb	r3, [r5, #0]
 8003b54:	2b00      	cmp	r3, #0
 8003b56:	d1aa      	bne.n	8003aae <BSP_HSPI_RAM_Config16BitsOctalRAM+0x36>
                               (uint32_t)APS512XX_READ_REG_LATENCY((uint32_t)(Hspi_Ram_Ctx[Instance].ReadLatencyCode))) != (int32_t)APS512XX_OK)
 8003b58:	78ab      	ldrb	r3, [r5, #2]
          if (APS512XX_ReadReg(&hhspi_ram[Instance], APS512XX_MR8_ADDRESS, reg,
 8003b5a:	4f28      	ldr	r7, [pc, #160]	@ (8003bfc <BSP_HSPI_RAM_Config16BitsOctalRAM+0x184>)
                               (uint32_t)APS512XX_READ_REG_LATENCY((uint32_t)(Hspi_Ram_Ctx[Instance].ReadLatencyCode))) != (int32_t)APS512XX_OK)
 8003b5c:	f3c3 0382 	ubfx	r3, r3, #2, #3
          if (APS512XX_ReadReg(&hhspi_ram[Instance], APS512XX_MR8_ADDRESS, reg,
 8003b60:	2108      	movs	r1, #8
 8003b62:	4638      	mov	r0, r7
 8003b64:	3303      	adds	r3, #3
 8003b66:	aa01      	add	r2, sp, #4
 8003b68:	f7ff f971 	bl	8002e4e <APS512XX_ReadReg>
 8003b6c:	2800      	cmp	r0, #0
 8003b6e:	d1c4      	bne.n	8003afa <BSP_HSPI_RAM_Config16BitsOctalRAM+0x82>
            MODIFY_REG(reg[0], ((uint32_t)APS512XX_MR8_X8_X16 | (uint32_t)APS512XX_MR8_BL),
 8003b70:	7923      	ldrb	r3, [r4, #4]
 8003b72:	7962      	ldrb	r2, [r4, #5]
            if (APS512XX_WriteReg(&hhspi_ram[Instance], APS512XX_MR8_ADDRESS, reg[0]) != APS512XX_OK)
 8003b74:	2108      	movs	r1, #8
            MODIFY_REG(reg[0], ((uint32_t)APS512XX_MR8_X8_X16 | (uint32_t)APS512XX_MR8_BL),
 8003b76:	431a      	orrs	r2, r3
 8003b78:	f89d 3004 	ldrb.w	r3, [sp, #4]
            if (APS512XX_WriteReg(&hhspi_ram[Instance], APS512XX_MR8_ADDRESS, reg[0]) != APS512XX_OK)
 8003b7c:	4638      	mov	r0, r7
            MODIFY_REG(reg[0], ((uint32_t)APS512XX_MR8_X8_X16 | (uint32_t)APS512XX_MR8_BL),
 8003b7e:	f023 0343 	bic.w	r3, r3, #67	@ 0x43
 8003b82:	431a      	orrs	r2, r3
 8003b84:	f88d 2004 	strb.w	r2, [sp, #4]
            if (APS512XX_WriteReg(&hhspi_ram[Instance], APS512XX_MR8_ADDRESS, reg[0]) != APS512XX_OK)
 8003b88:	f7ff f99d 	bl	8002ec6 <APS512XX_WriteReg>
 8003b8c:	4606      	mov	r6, r0
 8003b8e:	2800      	cmp	r0, #0
 8003b90:	d1b3      	bne.n	8003afa <BSP_HSPI_RAM_Config16BitsOctalRAM+0x82>
              if (Cfg->BurstType == BSP_HSPI_RAM_HYBRID_BURST)
 8003b92:	78e3      	ldrb	r3, [r4, #3]
 8003b94:	2b04      	cmp	r3, #4
 8003b96:	d127      	bne.n	8003be8 <BSP_HSPI_RAM_Config16BitsOctalRAM+0x170>
                switch (Cfg->BurstLength)
 8003b98:	7923      	ldrb	r3, [r4, #4]
 8003b9a:	2b01      	cmp	r3, #1
 8003b9c:	d01e      	beq.n	8003bdc <BSP_HSPI_RAM_Config16BitsOctalRAM+0x164>
 8003b9e:	2b02      	cmp	r3, #2
 8003ba0:	d01f      	beq.n	8003be2 <BSP_HSPI_RAM_Config16BitsOctalRAM+0x16a>
 8003ba2:	b913      	cbnz	r3, 8003baa <BSP_HSPI_RAM_Config16BitsOctalRAM+0x132>
                    hhspi_ram[Instance].Init.WrapSize = HAL_XSPI_WRAP_16_BYTES;
 8003ba4:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
                    hhspi_ram[Instance].Init.WrapSize = HAL_XSPI_WRAP_32_BYTES;
 8003ba8:	623b      	str	r3, [r7, #32]
              if (Cfg->IOMode == BSP_HSPI_RAM_IO_X16_MODE)
 8003baa:	7963      	ldrb	r3, [r4, #5]
              if (HAL_XSPI_DeInit(&hhspi_ram[Instance]) != HAL_OK)
 8003bac:	4813      	ldr	r0, [pc, #76]	@ (8003bfc <BSP_HSPI_RAM_Config16BitsOctalRAM+0x184>)
                hhspi_ram[Instance].Init.MemoryType = HAL_XSPI_MEMTYPE_APMEM_16BITS;
 8003bae:	2b40      	cmp	r3, #64	@ 0x40
 8003bb0:	bf14      	ite	ne
 8003bb2:	f04f 7300 	movne.w	r3, #33554432	@ 0x2000000
 8003bb6:	f04f 63c0 	moveq.w	r3, #100663296	@ 0x6000000
 8003bba:	60fb      	str	r3, [r7, #12]
              if (HAL_XSPI_DeInit(&hhspi_ram[Instance]) != HAL_OK)
 8003bbc:	f007 f81a 	bl	800abf4 <HAL_XSPI_DeInit>
                ret = BSP_ERROR_PERIPH_FAILURE;
 8003bc0:	2800      	cmp	r0, #0
              if (HAL_XSPI_Init(&hhspi_ram[Instance]) != HAL_OK)
 8003bc2:	480e      	ldr	r0, [pc, #56]	@ (8003bfc <BSP_HSPI_RAM_Config16BitsOctalRAM+0x184>)
                ret = BSP_ERROR_PERIPH_FAILURE;
 8003bc4:	bf18      	it	ne
 8003bc6:	f06f 0603 	mvnne.w	r6, #3
              if (HAL_XSPI_Init(&hhspi_ram[Instance]) != HAL_OK)
 8003bca:	f006 ff59 	bl	800aa80 <HAL_XSPI_Init>
 8003bce:	b910      	cbnz	r0, 8003bd6 <BSP_HSPI_RAM_Config16BitsOctalRAM+0x15e>
      if (ret == BSP_ERROR_NONE)
 8003bd0:	2e00      	cmp	r6, #0
 8003bd2:	f43f af78 	beq.w	8003ac6 <BSP_HSPI_RAM_Config16BitsOctalRAM+0x4e>
 8003bd6:	f06f 0003 	mvn.w	r0, #3
  return ret;
 8003bda:	e790      	b.n	8003afe <BSP_HSPI_RAM_Config16BitsOctalRAM+0x86>
                    hhspi_ram[Instance].Init.WrapSize = HAL_XSPI_WRAP_32_BYTES;
 8003bdc:	f44f 3340 	mov.w	r3, #196608	@ 0x30000
 8003be0:	e7e2      	b.n	8003ba8 <BSP_HSPI_RAM_Config16BitsOctalRAM+0x130>
                    hhspi_ram[Instance].Init.WrapSize = HAL_XSPI_WRAP_64_BYTES;
 8003be2:	f44f 2380 	mov.w	r3, #262144	@ 0x40000
 8003be6:	e7df      	b.n	8003ba8 <BSP_HSPI_RAM_Config16BitsOctalRAM+0x130>
                hhspi_ram[Instance].Init.WrapSize = HAL_XSPI_WRAP_NOT_SUPPORTED;
 8003be8:	6238      	str	r0, [r7, #32]
 8003bea:	e7de      	b.n	8003baa <BSP_HSPI_RAM_Config16BitsOctalRAM+0x132>
    ret = BSP_ERROR_WRONG_PARAM;
 8003bec:	f06f 0001 	mvn.w	r0, #1
 8003bf0:	e785      	b.n	8003afe <BSP_HSPI_RAM_Config16BitsOctalRAM+0x86>
      ret = BSP_ERROR_HSPI_MMP_LOCK_FAILURE;
 8003bf2:	f06f 001f 	mvn.w	r0, #31
 8003bf6:	e782      	b.n	8003afe <BSP_HSPI_RAM_Config16BitsOctalRAM+0x86>
 8003bf8:	20000040 	.word	0x20000040
 8003bfc:	2003edec 	.word	0x2003edec

08003c00 <BSP_HSPI_RAM_Init>:
{
 8003c00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003c04:	b0a1      	sub	sp, #132	@ 0x84
 8003c06:	9101      	str	r1, [sp, #4]
  if (Instance >= HSPI_RAM_INSTANCES_NUMBER)
 8003c08:	2800      	cmp	r0, #0
 8003c0a:	f040 82cb 	bne.w	80041a4 <BSP_HSPI_RAM_Init+0x5a4>
    if (Hspi_Ram_Ctx[Instance].IsInitialized == HSPI_ACCESS_NONE)
 8003c0e:	4b03      	ldr	r3, [pc, #12]	@ (8003c1c <BSP_HSPI_RAM_Init+0x1c>)
 8003c10:	781e      	ldrb	r6, [r3, #0]
 8003c12:	b12e      	cbz	r6, 8003c20 <BSP_HSPI_RAM_Init+0x20>
      ret = BSP_ERROR_NONE;
 8003c14:	2000      	movs	r0, #0
}
 8003c16:	b021      	add	sp, #132	@ 0x84
 8003c18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003c1c:	20000040 	.word	0x20000040
static void HSPI_RAM_MspInit(XSPI_HandleTypeDef *hhspi)
{
  static DMA_HandleTypeDef hdmatx, hdmarx;
  GPIO_InitTypeDef GPIO_InitStruct;

  __HAL_RCC_PWR_CLK_ENABLE();
 8003c20:	4cd3      	ldr	r4, [pc, #844]	@ (8003f70 <BSP_HSPI_RAM_Init+0x370>)
  SET_BIT(PWR->SVMCR, PWR_SVMCR_IO2SV);
 8003c22:	4ad4      	ldr	r2, [pc, #848]	@ (8003f74 <BSP_HSPI_RAM_Init+0x374>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8003c24:	f8d4 3094 	ldr.w	r3, [r4, #148]	@ 0x94
  HSPI_D13_GPIO_CLK_ENABLE();
  HSPI_D14_GPIO_CLK_ENABLE();
  HSPI_D15_GPIO_CLK_ENABLE();

  /*  Activate HSLV  */
  HAL_GPIO_EnableHighSPeedLowVoltage(HSPI_CS_GPIO_PORT, HSPI_CS_PIN);
 8003c28:	f44f 7100 	mov.w	r1, #512	@ 0x200
  __HAL_RCC_PWR_CLK_ENABLE();
 8003c2c:	f043 0304 	orr.w	r3, r3, #4
 8003c30:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 8003c34:	f8d4 3094 	ldr.w	r3, [r4, #148]	@ 0x94
  HAL_GPIO_EnableHighSPeedLowVoltage(HSPI_CS_GPIO_PORT, HSPI_CS_PIN);
 8003c38:	48cf      	ldr	r0, [pc, #828]	@ (8003f78 <BSP_HSPI_RAM_Init+0x378>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8003c3a:	f003 0304 	and.w	r3, r3, #4
 8003c3e:	9302      	str	r3, [sp, #8]
 8003c40:	9b02      	ldr	r3, [sp, #8]
  SET_BIT(PWR->SVMCR, PWR_SVMCR_IO2SV);
 8003c42:	6913      	ldr	r3, [r2, #16]
  /* HSPI CS GPIO pin configuration  */
  GPIO_InitStruct.Pin       = HSPI_CS_PIN;
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Pull      = GPIO_NOPULL;
  GPIO_InitStruct.Speed     = GPIO_SPEED_FREQ_HIGH;
  GPIO_InitStruct.Alternate = HSPI_CS_PIN_AF;
 8003c44:	2508      	movs	r5, #8
  SET_BIT(PWR->SVMCR, PWR_SVMCR_IO2SV);
 8003c46:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8003c4a:	6113      	str	r3, [r2, #16]
  HSPI_CLK_ENABLE();
 8003c4c:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
 8003c50:	f04f 0802 	mov.w	r8, #2
  HSPI_CLK_ENABLE();
 8003c54:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8003c58:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 8003c5c:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
  GPIO_InitStruct.Pin       = HSPI_CLK_PIN;
  GPIO_InitStruct.Alternate = HSPI_CLK_PIN_AF;
  HAL_GPIO_Init(HSPI_CLK_GPIO_PORT, &GPIO_InitStruct);

  /* HSPI D0 GPIO pin configuration  */
  GPIO_InitStruct.Pin       = HSPI_D0_PIN;
 8003c60:	f44f 6980 	mov.w	r9, #1024	@ 0x400
  HSPI_CLK_ENABLE();
 8003c64:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003c68:	9303      	str	r3, [sp, #12]
 8003c6a:	9b03      	ldr	r3, [sp, #12]
  HSPI_RAM_DMAx_CLK_ENABLE();
 8003c6c:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
  GPIO_InitStruct.Pin       = HSPI_D1_PIN;
  GPIO_InitStruct.Alternate = HSPI_D1_PIN_AF;
  HAL_GPIO_Init(HSPI_D1_GPIO_PORT, &GPIO_InitStruct);

  /* HSPI D2 GPIO pin configuration  */
  GPIO_InitStruct.Pin       = HSPI_D2_PIN;
 8003c70:	f44f 5b80 	mov.w	fp, #4096	@ 0x1000
  HSPI_RAM_DMAx_CLK_ENABLE();
 8003c74:	f043 0301 	orr.w	r3, r3, #1
 8003c78:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 8003c7c:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
  GPIO_InitStruct.Pin       = HSPI_D4_PIN;
  GPIO_InitStruct.Alternate = HSPI_D4_PIN_AF;
  HAL_GPIO_Init(HSPI_D4_GPIO_PORT, &GPIO_InitStruct);

  /* HSPI D5 GPIO pin configuration  */
  GPIO_InitStruct.Pin       = HSPI_D5_PIN;
 8003c80:	f44f 4a00 	mov.w	sl, #32768	@ 0x8000
  HSPI_RAM_DMAx_CLK_ENABLE();
 8003c84:	f003 0301 	and.w	r3, r3, #1
 8003c88:	9304      	str	r3, [sp, #16]
 8003c8a:	9b04      	ldr	r3, [sp, #16]
  HSPI_CLK_GPIO_CLK_ENABLE();
 8003c8c:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  GPIO_InitStruct.Alternate = HSPI_D5_PIN_AF;
  HAL_GPIO_Init(HSPI_D5_GPIO_PORT, &GPIO_InitStruct);

  /* HSPI D6 GPIO pin configuration  */
  GPIO_InitStruct.Pin       = HSPI_D6_PIN;
 8003c90:	2701      	movs	r7, #1
  HSPI_CLK_GPIO_CLK_ENABLE();
 8003c92:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003c96:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8003c9a:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003c9e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003ca2:	9305      	str	r3, [sp, #20]
 8003ca4:	9b05      	ldr	r3, [sp, #20]
  HSPI_DQS0_GPIO_CLK_ENABLE();
 8003ca6:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003caa:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003cae:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8003cb2:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003cb6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003cba:	9306      	str	r3, [sp, #24]
 8003cbc:	9b06      	ldr	r3, [sp, #24]
  HSPI_DQS1_GPIO_CLK_ENABLE();
 8003cbe:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003cc2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003cc6:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8003cca:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003cce:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003cd2:	9307      	str	r3, [sp, #28]
 8003cd4:	9b07      	ldr	r3, [sp, #28]
  HSPI_CS_GPIO_CLK_ENABLE();
 8003cd6:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003cda:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003cde:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8003ce2:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003ce6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003cea:	9308      	str	r3, [sp, #32]
 8003cec:	9b08      	ldr	r3, [sp, #32]
  HSPI_D0_GPIO_CLK_ENABLE();
 8003cee:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003cf2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003cf6:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8003cfa:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003cfe:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003d02:	9309      	str	r3, [sp, #36]	@ 0x24
 8003d04:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  HSPI_D1_GPIO_CLK_ENABLE();
 8003d06:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003d0a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003d0e:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8003d12:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003d16:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003d1a:	930a      	str	r3, [sp, #40]	@ 0x28
 8003d1c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  HSPI_D2_GPIO_CLK_ENABLE();
 8003d1e:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003d22:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003d26:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8003d2a:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003d2e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003d32:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003d34:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
  HSPI_D3_GPIO_CLK_ENABLE();
 8003d36:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003d3a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003d3e:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8003d42:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003d46:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003d4a:	930c      	str	r3, [sp, #48]	@ 0x30
 8003d4c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  HSPI_D4_GPIO_CLK_ENABLE();
 8003d4e:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003d52:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003d56:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8003d5a:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003d5e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003d62:	930d      	str	r3, [sp, #52]	@ 0x34
 8003d64:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
  HSPI_D5_GPIO_CLK_ENABLE();
 8003d66:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003d6a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003d6e:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8003d72:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003d76:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003d7a:	930e      	str	r3, [sp, #56]	@ 0x38
 8003d7c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
  HSPI_D6_GPIO_CLK_ENABLE();
 8003d7e:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003d82:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003d86:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8003d8a:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003d8e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003d92:	930f      	str	r3, [sp, #60]	@ 0x3c
 8003d94:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
  HSPI_D7_GPIO_CLK_ENABLE();
 8003d96:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003d9a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003d9e:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8003da2:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003da6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003daa:	9310      	str	r3, [sp, #64]	@ 0x40
 8003dac:	9b10      	ldr	r3, [sp, #64]	@ 0x40
  HSPI_D8_GPIO_CLK_ENABLE();
 8003dae:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003db2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003db6:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8003dba:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003dbe:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003dc2:	9311      	str	r3, [sp, #68]	@ 0x44
 8003dc4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
  HSPI_D9_GPIO_CLK_ENABLE();
 8003dc6:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003dca:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003dce:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8003dd2:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003dd6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003dda:	9312      	str	r3, [sp, #72]	@ 0x48
 8003ddc:	9b12      	ldr	r3, [sp, #72]	@ 0x48
  HSPI_D10_GPIO_CLK_ENABLE();
 8003dde:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003de2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003de6:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8003dea:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003dee:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003df2:	9313      	str	r3, [sp, #76]	@ 0x4c
 8003df4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
  HSPI_D11_GPIO_CLK_ENABLE();
 8003df6:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003dfa:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003dfe:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8003e02:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003e06:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003e0a:	9314      	str	r3, [sp, #80]	@ 0x50
 8003e0c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
  HSPI_D12_GPIO_CLK_ENABLE();
 8003e0e:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003e12:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003e16:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8003e1a:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003e1e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003e22:	9315      	str	r3, [sp, #84]	@ 0x54
 8003e24:	9b15      	ldr	r3, [sp, #84]	@ 0x54
  HSPI_D13_GPIO_CLK_ENABLE();
 8003e26:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003e2a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003e2e:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8003e32:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003e36:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003e3a:	9316      	str	r3, [sp, #88]	@ 0x58
 8003e3c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
  HSPI_D14_GPIO_CLK_ENABLE();
 8003e3e:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003e42:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003e46:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8003e4a:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003e4e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003e52:	9317      	str	r3, [sp, #92]	@ 0x5c
 8003e54:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
  HSPI_D15_GPIO_CLK_ENABLE();
 8003e56:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003e5a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8003e5e:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8003e62:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8003e66:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8003e6a:	9318      	str	r3, [sp, #96]	@ 0x60
 8003e6c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
  HAL_GPIO_EnableHighSPeedLowVoltage(HSPI_CS_GPIO_PORT, HSPI_CS_PIN);
 8003e6e:	f001 fdc1 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(HSPI_DQS0_GPIO_PORT, HSPI_DQS0_PIN);
 8003e72:	2104      	movs	r1, #4
 8003e74:	4841      	ldr	r0, [pc, #260]	@ (8003f7c <BSP_HSPI_RAM_Init+0x37c>)
 8003e76:	f001 fdbd 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(HSPI_DQS1_GPIO_PORT, HSPI_DQS1_PIN);
 8003e7a:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8003e7e:	483f      	ldr	r0, [pc, #252]	@ (8003f7c <BSP_HSPI_RAM_Init+0x37c>)
 8003e80:	f001 fdb8 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(HSPI_CLK_GPIO_PORT, HSPI_CLK_PIN);
 8003e84:	2108      	movs	r1, #8
 8003e86:	483d      	ldr	r0, [pc, #244]	@ (8003f7c <BSP_HSPI_RAM_Init+0x37c>)
 8003e88:	f001 fdb4 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(HSPI_NCLK_GPIO_PORT, HSPI_NCLK_PIN);
 8003e8c:	2110      	movs	r1, #16
 8003e8e:	483b      	ldr	r0, [pc, #236]	@ (8003f7c <BSP_HSPI_RAM_Init+0x37c>)
 8003e90:	f001 fdb0 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(HSPI_D0_GPIO_PORT, HSPI_D0_PIN);
 8003e94:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8003e98:	4837      	ldr	r0, [pc, #220]	@ (8003f78 <BSP_HSPI_RAM_Init+0x378>)
 8003e9a:	f001 fdab 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(HSPI_D1_GPIO_PORT, HSPI_D1_PIN);
 8003e9e:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8003ea2:	4835      	ldr	r0, [pc, #212]	@ (8003f78 <BSP_HSPI_RAM_Init+0x378>)
 8003ea4:	f001 fda6 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(HSPI_D2_GPIO_PORT, HSPI_D2_PIN);
 8003ea8:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8003eac:	4832      	ldr	r0, [pc, #200]	@ (8003f78 <BSP_HSPI_RAM_Init+0x378>)
 8003eae:	f001 fda1 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(HSPI_D3_GPIO_PORT, HSPI_D3_PIN);
 8003eb2:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8003eb6:	4830      	ldr	r0, [pc, #192]	@ (8003f78 <BSP_HSPI_RAM_Init+0x378>)
 8003eb8:	f001 fd9c 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(HSPI_D4_GPIO_PORT, HSPI_D4_PIN);
 8003ebc:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8003ec0:	482d      	ldr	r0, [pc, #180]	@ (8003f78 <BSP_HSPI_RAM_Init+0x378>)
 8003ec2:	f001 fd97 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(HSPI_D5_GPIO_PORT, HSPI_D5_PIN);
 8003ec6:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8003eca:	482b      	ldr	r0, [pc, #172]	@ (8003f78 <BSP_HSPI_RAM_Init+0x378>)
 8003ecc:	f001 fd92 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(HSPI_D6_GPIO_PORT, HSPI_D6_PIN);
 8003ed0:	2101      	movs	r1, #1
 8003ed2:	482a      	ldr	r0, [pc, #168]	@ (8003f7c <BSP_HSPI_RAM_Init+0x37c>)
 8003ed4:	f001 fd8e 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(HSPI_D7_GPIO_PORT, HSPI_D7_PIN);
 8003ed8:	2102      	movs	r1, #2
 8003eda:	4828      	ldr	r0, [pc, #160]	@ (8003f7c <BSP_HSPI_RAM_Init+0x37c>)
 8003edc:	f001 fd8a 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(HSPI_D8_GPIO_PORT, HSPI_D8_PIN);
 8003ee0:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8003ee4:	4825      	ldr	r0, [pc, #148]	@ (8003f7c <BSP_HSPI_RAM_Init+0x37c>)
 8003ee6:	f001 fd85 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(HSPI_D9_GPIO_PORT, HSPI_D9_PIN);
 8003eea:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8003eee:	4823      	ldr	r0, [pc, #140]	@ (8003f7c <BSP_HSPI_RAM_Init+0x37c>)
 8003ef0:	f001 fd80 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(HSPI_D10_GPIO_PORT, HSPI_D10_PIN);
 8003ef4:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8003ef8:	4820      	ldr	r0, [pc, #128]	@ (8003f7c <BSP_HSPI_RAM_Init+0x37c>)
 8003efa:	f001 fd7b 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(HSPI_D11_GPIO_PORT, HSPI_D11_PIN);
 8003efe:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8003f02:	481e      	ldr	r0, [pc, #120]	@ (8003f7c <BSP_HSPI_RAM_Init+0x37c>)
 8003f04:	f001 fd76 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(HSPI_D12_GPIO_PORT, HSPI_D12_PIN);
 8003f08:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8003f0c:	481b      	ldr	r0, [pc, #108]	@ (8003f7c <BSP_HSPI_RAM_Init+0x37c>)
 8003f0e:	f001 fd71 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(HSPI_D13_GPIO_PORT, HSPI_D13_PIN);
 8003f12:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8003f16:	4819      	ldr	r0, [pc, #100]	@ (8003f7c <BSP_HSPI_RAM_Init+0x37c>)
 8003f18:	f001 fd6c 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(HSPI_D14_GPIO_PORT, HSPI_D14_PIN);
 8003f1c:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8003f20:	4816      	ldr	r0, [pc, #88]	@ (8003f7c <BSP_HSPI_RAM_Init+0x37c>)
 8003f22:	f001 fd67 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  HAL_GPIO_EnableHighSPeedLowVoltage(HSPI_D15_GPIO_PORT, HSPI_D15_PIN);
 8003f26:	2101      	movs	r1, #1
 8003f28:	4815      	ldr	r0, [pc, #84]	@ (8003f80 <BSP_HSPI_RAM_Init+0x380>)
 8003f2a:	f001 fd63 	bl	80059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
 8003f2e:	f44f 7200 	mov.w	r2, #512	@ 0x200
  HSPI_FORCE_RESET();
 8003f32:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
  HAL_GPIO_Init(HSPI_CS_GPIO_PORT, &GPIO_InitStruct);
 8003f34:	4810      	ldr	r0, [pc, #64]	@ (8003f78 <BSP_HSPI_RAM_Init+0x378>)
  HSPI_FORCE_RESET();
 8003f36:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8003f3a:	66a3      	str	r3, [r4, #104]	@ 0x68
  HSPI_RELEASE_RESET();
 8003f3c:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
  HAL_GPIO_Init(HSPI_CS_GPIO_PORT, &GPIO_InitStruct);
 8003f3e:	a91b      	add	r1, sp, #108	@ 0x6c
  HSPI_RELEASE_RESET();
 8003f40:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8003f44:	66a3      	str	r3, [r4, #104]	@ 0x68
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
 8003f46:	e9cd 281b 	strd	r2, r8, [sp, #108]	@ 0x6c
  GPIO_InitStruct.Alternate = HSPI_CS_PIN_AF;
 8003f4a:	951f      	str	r5, [sp, #124]	@ 0x7c
  GPIO_InitStruct.Speed     = GPIO_SPEED_FREQ_HIGH;
 8003f4c:	e9cd 681d 	strd	r6, r8, [sp, #116]	@ 0x74
  HAL_GPIO_Init(HSPI_CS_GPIO_PORT, &GPIO_InitStruct);
 8003f50:	f001 fbac 	bl	80056ac <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = HSPI_DQS0_PIN;
 8003f54:	2304      	movs	r3, #4
  HAL_GPIO_Init(HSPI_DQS0_GPIO_PORT, &GPIO_InitStruct);
 8003f56:	4809      	ldr	r0, [pc, #36]	@ (8003f7c <BSP_HSPI_RAM_Init+0x37c>)
 8003f58:	a91b      	add	r1, sp, #108	@ 0x6c
  GPIO_InitStruct.Pin       = HSPI_DQS0_PIN;
 8003f5a:	931b      	str	r3, [sp, #108]	@ 0x6c
  GPIO_InitStruct.Alternate = HSPI_DQS0_PIN_AF;
 8003f5c:	951f      	str	r5, [sp, #124]	@ 0x7c
  HAL_GPIO_Init(HSPI_DQS0_GPIO_PORT, &GPIO_InitStruct);
 8003f5e:	f001 fba5 	bl	80056ac <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = HSPI_DQS1_PIN;
 8003f62:	f44f 7380 	mov.w	r3, #256	@ 0x100
  HAL_GPIO_Init(HSPI_DQS1_GPIO_PORT, &GPIO_InitStruct);
 8003f66:	4805      	ldr	r0, [pc, #20]	@ (8003f7c <BSP_HSPI_RAM_Init+0x37c>)
 8003f68:	a91b      	add	r1, sp, #108	@ 0x6c
  GPIO_InitStruct.Pin       = HSPI_DQS1_PIN;
 8003f6a:	931b      	str	r3, [sp, #108]	@ 0x6c
 8003f6c:	e00a      	b.n	8003f84 <BSP_HSPI_RAM_Init+0x384>
 8003f6e:	bf00      	nop
 8003f70:	46020c00 	.word	0x46020c00
 8003f74:	46020800 	.word	0x46020800
 8003f78:	42021c00 	.word	0x42021c00
 8003f7c:	42022000 	.word	0x42022000
 8003f80:	42022400 	.word	0x42022400
  GPIO_InitStruct.Alternate = HSPI_DQS1_PIN_AF;
 8003f84:	951f      	str	r5, [sp, #124]	@ 0x7c
  HAL_GPIO_Init(HSPI_DQS1_GPIO_PORT, &GPIO_InitStruct);
 8003f86:	f001 fb91 	bl	80056ac <HAL_GPIO_Init>
  HAL_GPIO_Init(HSPI_CLK_GPIO_PORT, &GPIO_InitStruct);
 8003f8a:	4889      	ldr	r0, [pc, #548]	@ (80041b0 <BSP_HSPI_RAM_Init+0x5b0>)
 8003f8c:	a91b      	add	r1, sp, #108	@ 0x6c
  GPIO_InitStruct.Pin       = HSPI_CLK_PIN;
 8003f8e:	951b      	str	r5, [sp, #108]	@ 0x6c
  GPIO_InitStruct.Alternate = HSPI_CLK_PIN_AF;
 8003f90:	951f      	str	r5, [sp, #124]	@ 0x7c
  HAL_GPIO_Init(HSPI_CLK_GPIO_PORT, &GPIO_InitStruct);
 8003f92:	f001 fb8b 	bl	80056ac <HAL_GPIO_Init>
  HAL_GPIO_Init(HSPI_D0_GPIO_PORT, &GPIO_InitStruct);
 8003f96:	4887      	ldr	r0, [pc, #540]	@ (80041b4 <BSP_HSPI_RAM_Init+0x5b4>)
 8003f98:	a91b      	add	r1, sp, #108	@ 0x6c
  GPIO_InitStruct.Pin       = HSPI_D0_PIN;
 8003f9a:	f8cd 906c 	str.w	r9, [sp, #108]	@ 0x6c
  GPIO_InitStruct.Alternate = HSPI_D0_PIN_AF;
 8003f9e:	951f      	str	r5, [sp, #124]	@ 0x7c
  HAL_GPIO_Init(HSPI_D0_GPIO_PORT, &GPIO_InitStruct);
 8003fa0:	f001 fb84 	bl	80056ac <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = HSPI_D1_PIN;
 8003fa4:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  HAL_GPIO_Init(HSPI_D1_GPIO_PORT, &GPIO_InitStruct);
 8003fa8:	4882      	ldr	r0, [pc, #520]	@ (80041b4 <BSP_HSPI_RAM_Init+0x5b4>)
 8003faa:	a91b      	add	r1, sp, #108	@ 0x6c
  GPIO_InitStruct.Pin       = HSPI_D1_PIN;
 8003fac:	931b      	str	r3, [sp, #108]	@ 0x6c
  GPIO_InitStruct.Alternate = HSPI_D1_PIN_AF;
 8003fae:	951f      	str	r5, [sp, #124]	@ 0x7c
  HAL_GPIO_Init(HSPI_D1_GPIO_PORT, &GPIO_InitStruct);
 8003fb0:	f001 fb7c 	bl	80056ac <HAL_GPIO_Init>
  HAL_GPIO_Init(HSPI_D2_GPIO_PORT, &GPIO_InitStruct);
 8003fb4:	487f      	ldr	r0, [pc, #508]	@ (80041b4 <BSP_HSPI_RAM_Init+0x5b4>)
 8003fb6:	a91b      	add	r1, sp, #108	@ 0x6c
  GPIO_InitStruct.Pin       = HSPI_D2_PIN;
 8003fb8:	f8cd b06c 	str.w	fp, [sp, #108]	@ 0x6c
  GPIO_InitStruct.Alternate = HSPI_D2_PIN_AF;
 8003fbc:	951f      	str	r5, [sp, #124]	@ 0x7c
  HAL_GPIO_Init(HSPI_D2_GPIO_PORT, &GPIO_InitStruct);
 8003fbe:	f001 fb75 	bl	80056ac <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = HSPI_D3_PIN;
 8003fc2:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  HAL_GPIO_Init(HSPI_D3_GPIO_PORT, &GPIO_InitStruct);
 8003fc6:	487b      	ldr	r0, [pc, #492]	@ (80041b4 <BSP_HSPI_RAM_Init+0x5b4>)
 8003fc8:	a91b      	add	r1, sp, #108	@ 0x6c
  GPIO_InitStruct.Pin       = HSPI_D3_PIN;
 8003fca:	931b      	str	r3, [sp, #108]	@ 0x6c
  GPIO_InitStruct.Alternate = HSPI_D3_PIN_AF;
 8003fcc:	951f      	str	r5, [sp, #124]	@ 0x7c
  HAL_GPIO_Init(HSPI_D3_GPIO_PORT, &GPIO_InitStruct);
 8003fce:	f001 fb6d 	bl	80056ac <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = HSPI_D4_PIN;
 8003fd2:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  HAL_GPIO_Init(HSPI_D4_GPIO_PORT, &GPIO_InitStruct);
 8003fd6:	4877      	ldr	r0, [pc, #476]	@ (80041b4 <BSP_HSPI_RAM_Init+0x5b4>)
 8003fd8:	a91b      	add	r1, sp, #108	@ 0x6c
  GPIO_InitStruct.Pin       = HSPI_D4_PIN;
 8003fda:	931b      	str	r3, [sp, #108]	@ 0x6c
  GPIO_InitStruct.Alternate = HSPI_D4_PIN_AF;
 8003fdc:	951f      	str	r5, [sp, #124]	@ 0x7c
  HAL_GPIO_Init(HSPI_D4_GPIO_PORT, &GPIO_InitStruct);
 8003fde:	f001 fb65 	bl	80056ac <HAL_GPIO_Init>
  HAL_GPIO_Init(HSPI_D5_GPIO_PORT, &GPIO_InitStruct);
 8003fe2:	4874      	ldr	r0, [pc, #464]	@ (80041b4 <BSP_HSPI_RAM_Init+0x5b4>)
 8003fe4:	a91b      	add	r1, sp, #108	@ 0x6c
  GPIO_InitStruct.Pin       = HSPI_D5_PIN;
 8003fe6:	f8cd a06c 	str.w	sl, [sp, #108]	@ 0x6c
  GPIO_InitStruct.Alternate = HSPI_D5_PIN_AF;
 8003fea:	951f      	str	r5, [sp, #124]	@ 0x7c
  HAL_GPIO_Init(HSPI_D5_GPIO_PORT, &GPIO_InitStruct);
 8003fec:	f001 fb5e 	bl	80056ac <HAL_GPIO_Init>
  GPIO_InitStruct.Alternate = HSPI_D6_PIN_AF;
  HAL_GPIO_Init(HSPI_D6_GPIO_PORT, &GPIO_InitStruct);
 8003ff0:	486f      	ldr	r0, [pc, #444]	@ (80041b0 <BSP_HSPI_RAM_Init+0x5b0>)
 8003ff2:	a91b      	add	r1, sp, #108	@ 0x6c
  GPIO_InitStruct.Alternate = HSPI_D6_PIN_AF;
 8003ff4:	951f      	str	r5, [sp, #124]	@ 0x7c
  GPIO_InitStruct.Pin       = HSPI_D6_PIN;
 8003ff6:	971b      	str	r7, [sp, #108]	@ 0x6c
  HAL_GPIO_Init(HSPI_D6_GPIO_PORT, &GPIO_InitStruct);
 8003ff8:	f001 fb58 	bl	80056ac <HAL_GPIO_Init>

  /* HSPI D7 GPIO pin configuration  */
  GPIO_InitStruct.Pin       = HSPI_D7_PIN;
  GPIO_InitStruct.Alternate = HSPI_D7_PIN_AF;
  HAL_GPIO_Init(HSPI_D7_GPIO_PORT, &GPIO_InitStruct);
 8003ffc:	486c      	ldr	r0, [pc, #432]	@ (80041b0 <BSP_HSPI_RAM_Init+0x5b0>)
 8003ffe:	a91b      	add	r1, sp, #108	@ 0x6c
  GPIO_InitStruct.Alternate = HSPI_D7_PIN_AF;
 8004000:	951f      	str	r5, [sp, #124]	@ 0x7c
  GPIO_InitStruct.Pin       = HSPI_D7_PIN;
 8004002:	f8cd 806c 	str.w	r8, [sp, #108]	@ 0x6c
  HAL_GPIO_Init(HSPI_D7_GPIO_PORT, &GPIO_InitStruct);
 8004006:	f001 fb51 	bl	80056ac <HAL_GPIO_Init>

  /* HSPI D8 GPIO pin configuration  */
  GPIO_InitStruct.Pin       = HSPI_D8_PIN;
 800400a:	f44f 7200 	mov.w	r2, #512	@ 0x200
  GPIO_InitStruct.Alternate = HSPI_D8_PIN_AF;
  HAL_GPIO_Init(HSPI_D8_GPIO_PORT, &GPIO_InitStruct);
 800400e:	4868      	ldr	r0, [pc, #416]	@ (80041b0 <BSP_HSPI_RAM_Init+0x5b0>)
 8004010:	a91b      	add	r1, sp, #108	@ 0x6c
  GPIO_InitStruct.Pin       = HSPI_D8_PIN;
 8004012:	921b      	str	r2, [sp, #108]	@ 0x6c
  GPIO_InitStruct.Alternate = HSPI_D8_PIN_AF;
 8004014:	951f      	str	r5, [sp, #124]	@ 0x7c
  HAL_GPIO_Init(HSPI_D8_GPIO_PORT, &GPIO_InitStruct);
 8004016:	f001 fb49 	bl	80056ac <HAL_GPIO_Init>

  /* HSPI D9 GPIO pin configuration  */
  GPIO_InitStruct.Pin       = HSPI_D9_PIN;
  GPIO_InitStruct.Alternate = HSPI_D9_PIN_AF;
  HAL_GPIO_Init(HSPI_D9_GPIO_PORT, &GPIO_InitStruct);
 800401a:	4865      	ldr	r0, [pc, #404]	@ (80041b0 <BSP_HSPI_RAM_Init+0x5b0>)
 800401c:	a91b      	add	r1, sp, #108	@ 0x6c
  GPIO_InitStruct.Pin       = HSPI_D9_PIN;
 800401e:	f8cd 906c 	str.w	r9, [sp, #108]	@ 0x6c
  GPIO_InitStruct.Alternate = HSPI_D9_PIN_AF;
 8004022:	951f      	str	r5, [sp, #124]	@ 0x7c
  HAL_GPIO_Init(HSPI_D9_GPIO_PORT, &GPIO_InitStruct);
 8004024:	f001 fb42 	bl	80056ac <HAL_GPIO_Init>

  /* HSPI D10 GPIO pin configuration  */
  GPIO_InitStruct.Pin       = HSPI_D10_PIN;
 8004028:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  GPIO_InitStruct.Alternate = HSPI_D10_PIN_AF;
  HAL_GPIO_Init(HSPI_D10_GPIO_PORT, &GPIO_InitStruct);
 800402c:	4860      	ldr	r0, [pc, #384]	@ (80041b0 <BSP_HSPI_RAM_Init+0x5b0>)
 800402e:	a91b      	add	r1, sp, #108	@ 0x6c
  GPIO_InitStruct.Pin       = HSPI_D10_PIN;
 8004030:	931b      	str	r3, [sp, #108]	@ 0x6c
  GPIO_InitStruct.Alternate = HSPI_D10_PIN_AF;
 8004032:	951f      	str	r5, [sp, #124]	@ 0x7c
  HAL_GPIO_Init(HSPI_D10_GPIO_PORT, &GPIO_InitStruct);
 8004034:	f001 fb3a 	bl	80056ac <HAL_GPIO_Init>

  /* HSPI D11 GPIO pin configuration  */
  GPIO_InitStruct.Pin       = HSPI_D11_PIN;
  GPIO_InitStruct.Alternate = HSPI_D11_PIN_AF;
  HAL_GPIO_Init(HSPI_D11_GPIO_PORT, &GPIO_InitStruct);
 8004038:	485d      	ldr	r0, [pc, #372]	@ (80041b0 <BSP_HSPI_RAM_Init+0x5b0>)
 800403a:	a91b      	add	r1, sp, #108	@ 0x6c
  GPIO_InitStruct.Pin       = HSPI_D11_PIN;
 800403c:	f8cd b06c 	str.w	fp, [sp, #108]	@ 0x6c
  GPIO_InitStruct.Alternate = HSPI_D11_PIN_AF;
 8004040:	951f      	str	r5, [sp, #124]	@ 0x7c
  HAL_GPIO_Init(HSPI_D11_GPIO_PORT, &GPIO_InitStruct);
 8004042:	f001 fb33 	bl	80056ac <HAL_GPIO_Init>

  /* HSPI D12 GPIO pin configuration  */
  GPIO_InitStruct.Pin       = HSPI_D12_PIN;
 8004046:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  GPIO_InitStruct.Alternate = HSPI_D12_PIN_AF;
  HAL_GPIO_Init(HSPI_D12_GPIO_PORT, &GPIO_InitStruct);
 800404a:	4859      	ldr	r0, [pc, #356]	@ (80041b0 <BSP_HSPI_RAM_Init+0x5b0>)
 800404c:	a91b      	add	r1, sp, #108	@ 0x6c
  GPIO_InitStruct.Pin       = HSPI_D12_PIN;
 800404e:	931b      	str	r3, [sp, #108]	@ 0x6c
  GPIO_InitStruct.Alternate = HSPI_D12_PIN_AF;
 8004050:	951f      	str	r5, [sp, #124]	@ 0x7c
  HAL_GPIO_Init(HSPI_D12_GPIO_PORT, &GPIO_InitStruct);
 8004052:	f001 fb2b 	bl	80056ac <HAL_GPIO_Init>

  /* HSPI D13 GPIO pin configuration  */
  GPIO_InitStruct.Pin       = HSPI_D13_PIN;
 8004056:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  GPIO_InitStruct.Pin       = HSPI_D15_PIN;
  GPIO_InitStruct.Alternate = HSPI_D15_PIN_AF;
  HAL_GPIO_Init(HSPI_D15_GPIO_PORT, &GPIO_InitStruct);

  hdmatx.Init.Request = GPDMA1_REQUEST_HSPI1;
  hdmatx.Instance = GPDMA1_Channel12;
 800405a:	f04f 0b72 	mov.w	fp, #114	@ 0x72
  HAL_GPIO_Init(HSPI_D13_GPIO_PORT, &GPIO_InitStruct);
 800405e:	4854      	ldr	r0, [pc, #336]	@ (80041b0 <BSP_HSPI_RAM_Init+0x5b0>)
 8004060:	a91b      	add	r1, sp, #108	@ 0x6c
  GPIO_InitStruct.Pin       = HSPI_D13_PIN;
 8004062:	931b      	str	r3, [sp, #108]	@ 0x6c
  GPIO_InitStruct.Alternate = HSPI_D13_PIN_AF;
 8004064:	951f      	str	r5, [sp, #124]	@ 0x7c
  HAL_GPIO_Init(HSPI_D13_GPIO_PORT, &GPIO_InitStruct);
 8004066:	f001 fb21 	bl	80056ac <HAL_GPIO_Init>
  HAL_GPIO_Init(HSPI_D14_GPIO_PORT, &GPIO_InitStruct);
 800406a:	4851      	ldr	r0, [pc, #324]	@ (80041b0 <BSP_HSPI_RAM_Init+0x5b0>)
 800406c:	a91b      	add	r1, sp, #108	@ 0x6c
  GPIO_InitStruct.Pin       = HSPI_D14_PIN;
 800406e:	f8cd a06c 	str.w	sl, [sp, #108]	@ 0x6c
  GPIO_InitStruct.Alternate = HSPI_D14_PIN_AF;
 8004072:	951f      	str	r5, [sp, #124]	@ 0x7c
  HAL_GPIO_Init(HSPI_D14_GPIO_PORT, &GPIO_InitStruct);
 8004074:	f001 fb1a 	bl	80056ac <HAL_GPIO_Init>
  HAL_GPIO_Init(HSPI_D15_GPIO_PORT, &GPIO_InitStruct);
 8004078:	484f      	ldr	r0, [pc, #316]	@ (80041b8 <BSP_HSPI_RAM_Init+0x5b8>)
 800407a:	a91b      	add	r1, sp, #108	@ 0x6c
  hdmatx.Init.Request = GPDMA1_REQUEST_HSPI1;
 800407c:	f8df a14c 	ldr.w	sl, [pc, #332]	@ 80041cc <BSP_HSPI_RAM_Init+0x5cc>
  GPIO_InitStruct.Alternate = HSPI_D15_PIN_AF;
 8004080:	951f      	str	r5, [sp, #124]	@ 0x7c
  GPIO_InitStruct.Pin       = HSPI_D15_PIN;
 8004082:	971b      	str	r7, [sp, #108]	@ 0x6c
  HAL_GPIO_Init(HSPI_D15_GPIO_PORT, &GPIO_InitStruct);
 8004084:	f001 fb12 	bl	80056ac <HAL_GPIO_Init>
  hdmatx.Instance = GPDMA1_Channel12;
 8004088:	4b4c      	ldr	r3, [pc, #304]	@ (80041bc <BSP_HSPI_RAM_Init+0x5bc>)
  HAL_NVIC_SetPriority(GPDMA1_Channel12_IRQn, 0x00, 0);
 800408a:	4631      	mov	r1, r6
 800408c:	4632      	mov	r2, r6
 800408e:	2054      	movs	r0, #84	@ 0x54
  hdmatx.Instance = GPDMA1_Channel12;
 8004090:	e9ca 3b00 	strd	r3, fp, [sl]
  HAL_NVIC_SetPriority(GPDMA1_Channel12_IRQn, 0x00, 0);
 8004094:	f000 f9d8 	bl	8004448 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(GPDMA1_Channel12_IRQn);
 8004098:	2054      	movs	r0, #84	@ 0x54
 800409a:	f000 fa05 	bl	80044a8 <HAL_NVIC_EnableIRQ>

  /* Configure the HSPI DMA transmit */
  hdmatx.Init.Direction           = DMA_MEMORY_TO_PERIPH;
  hdmatx.Init.SrcInc              = DMA_SINC_INCREMENTED;
  hdmatx.Init.DestInc             = DMA_DINC_FIXED;
  hdmatx.Init.Priority            = DMA_HIGH_PRIORITY;
 800409e:	f44f 0340 	mov.w	r3, #12582912	@ 0xc00000
  hdmatx.Init.SrcInc              = DMA_SINC_INCREMENTED;
 80040a2:	e9ca 9503 	strd	r9, r5, [sl, #12]
  hdmatx.Init.SrcBurstLength      = 1;
  hdmatx.Init.DestBurstLength     = 1;
  hdmatx.Init.TransferEventMode   = DMA_TCEM_BLOCK_TRANSFER;
  hdmatx.Init.SrcDataWidth        = DMA_SRC_DATAWIDTH_WORD ;
  hdmatx.Init.DestDataWidth       = DMA_DEST_DATAWIDTH_WORD  ;
 80040a6:	f44f 3900 	mov.w	r9, #131072	@ 0x20000
  hdmatx.Init.SrcBurstLength      = 1;
 80040aa:	e9ca 3708 	strd	r3, r7, [sl, #32]
  hdmatx.Init.DestInc             = DMA_DINC_FIXED;
 80040ae:	f8ca 6014 	str.w	r6, [sl, #20]
  hdmatx.Init.DestBurstLength     = 1;
 80040b2:	f8ca 7028 	str.w	r7, [sl, #40]	@ 0x28
  hdmatx.Init.TransferEventMode   = DMA_TCEM_BLOCK_TRANSFER;
 80040b6:	f8ca 6030 	str.w	r6, [sl, #48]	@ 0x30
  hdmatx.Init.SrcDataWidth        = DMA_SRC_DATAWIDTH_WORD ;
 80040ba:	f8ca 8018 	str.w	r8, [sl, #24]
  hdmatx.Init.DestDataWidth       = DMA_DEST_DATAWIDTH_WORD  ;
 80040be:	f8ca 901c 	str.w	r9, [sl, #28]

  /* Enable the GPDMA clock */
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 80040c2:	f8d4 2088 	ldr.w	r2, [r4, #136]	@ 0x88

  /* Initialize the DMA channel */
  __HAL_LINKDMA(hhspi, hdmatx, hdmatx);
 80040c6:	4d3e      	ldr	r5, [pc, #248]	@ (80041c0 <BSP_HSPI_RAM_Init+0x5c0>)
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 80040c8:	433a      	orrs	r2, r7
 80040ca:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
 80040ce:	f8d4 2088 	ldr.w	r2, [r4, #136]	@ 0x88
  HAL_DMA_Init(&hdmatx);
 80040d2:	4650      	mov	r0, sl
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 80040d4:	403a      	ands	r2, r7
 80040d6:	9219      	str	r2, [sp, #100]	@ 0x64
 80040d8:	9a19      	ldr	r2, [sp, #100]	@ 0x64
  __HAL_LINKDMA(hhspi, hdmatx, hdmatx);
 80040da:	f8c5 a04c 	str.w	sl, [r5, #76]	@ 0x4c
 80040de:	f8ca 505c 	str.w	r5, [sl, #92]	@ 0x5c

  hdmarx.Init.Request = GPDMA1_REQUEST_HSPI1;
 80040e2:	f8df a0ec 	ldr.w	sl, [pc, #236]	@ 80041d0 <BSP_HSPI_RAM_Init+0x5d0>
  HAL_DMA_Init(&hdmatx);
 80040e6:	f000 facb 	bl	8004680 <HAL_DMA_Init>
  hdmarx.Instance = GPDMA1_Channel7;
 80040ea:	4a36      	ldr	r2, [pc, #216]	@ (80041c4 <BSP_HSPI_RAM_Init+0x5c4>)
  HAL_NVIC_SetPriority(GPDMA1_Channel7_IRQn, 0x00, 0);
 80040ec:	4631      	mov	r1, r6
 80040ee:	2024      	movs	r0, #36	@ 0x24
  hdmarx.Instance = GPDMA1_Channel7;
 80040f0:	f8ca 2000 	str.w	r2, [sl]
  HAL_NVIC_SetPriority(GPDMA1_Channel7_IRQn, 0x00, 0);
 80040f4:	4632      	mov	r2, r6
  hdmarx.Init.Request = GPDMA1_REQUEST_HSPI1;
 80040f6:	f8ca b004 	str.w	fp, [sl, #4]
  HAL_NVIC_SetPriority(GPDMA1_Channel7_IRQn, 0x00, 0);
 80040fa:	f000 f9a5 	bl	8004448 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(GPDMA1_Channel7_IRQn);
 80040fe:	2024      	movs	r0, #36	@ 0x24
 8004100:	f000 f9d2 	bl	80044a8 <HAL_NVIC_EnableIRQ>

  /* Configure the HSPI DMA receive */
  hdmarx.Init.Direction           = DMA_PERIPH_TO_MEMORY;
  hdmarx.Init.SrcInc              = DMA_SINC_FIXED;
  hdmarx.Init.DestInc             = DMA_DINC_INCREMENTED;
  hdmarx.Init.Priority            = DMA_HIGH_PRIORITY;
 8004104:	f44f 0340 	mov.w	r3, #12582912	@ 0xc00000
  hdmarx.Init.DestInc             = DMA_DINC_INCREMENTED;
 8004108:	f44f 2200 	mov.w	r2, #524288	@ 0x80000
  hdmarx.Init.SrcInc              = DMA_SINC_FIXED;
 800410c:	e9ca 6603 	strd	r6, r6, [sl, #12]
  hdmarx.Init.SrcBurstLength      = 1;
 8004110:	e9ca 3708 	strd	r3, r7, [sl, #32]
  hdmarx.Init.DestBurstLength     = 1;
  hdmarx.Init.TransferEventMode   = DMA_TCEM_BLOCK_TRANSFER;
  hdmarx.Init.SrcDataWidth        = DMA_SRC_DATAWIDTH_WORD ;
  hdmarx.Init.DestDataWidth       = DMA_DEST_DATAWIDTH_WORD  ;
 8004114:	e9ca 8906 	strd	r8, r9, [sl, #24]
  hdmarx.Init.DestInc             = DMA_DINC_INCREMENTED;
 8004118:	f8ca 2014 	str.w	r2, [sl, #20]
  hdmarx.Init.DestBurstLength     = 1;
 800411c:	f8ca 7028 	str.w	r7, [sl, #40]	@ 0x28
  hdmarx.Init.TransferEventMode   = DMA_TCEM_BLOCK_TRANSFER;
 8004120:	f8ca 6030 	str.w	r6, [sl, #48]	@ 0x30

  /* Enable the GPDMA clock */
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 8004124:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88

  /* Initialize the DMA channel */
  __HAL_LINKDMA(hhspi, hdmarx, hdmarx);
  HAL_DMA_Init(&hdmarx);
 8004128:	4650      	mov	r0, sl
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 800412a:	433b      	orrs	r3, r7
 800412c:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 8004130:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
  __HAL_LINKDMA(hhspi, hdmarx, hdmarx);
 8004134:	f8c5 a050 	str.w	sl, [r5, #80]	@ 0x50
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 8004138:	403b      	ands	r3, r7
 800413a:	931a      	str	r3, [sp, #104]	@ 0x68
 800413c:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
  __HAL_LINKDMA(hhspi, hdmarx, hdmarx);
 800413e:	f8ca 505c 	str.w	r5, [sl, #92]	@ 0x5c
  HAL_DMA_Init(&hdmarx);
 8004142:	f000 fa9d 	bl	8004680 <HAL_DMA_Init>

  /* Enable and set priority of the HSPI and DMA interrupts */
  HAL_NVIC_SetPriority(HSPI1_IRQn, BSP_HSPI_RAM_IT_PRIORITY, 0);
 8004146:	4632      	mov	r2, r6
 8004148:	210f      	movs	r1, #15
 800414a:	2083      	movs	r0, #131	@ 0x83
 800414c:	f000 f97c 	bl	8004448 <HAL_NVIC_SetPriority>
  HAL_NVIC_SetPriority(HSPI_RAM_DMAx_IRQn, BSP_HSPI_RAM_DMA_IT_PRIORITY, 0);
 8004150:	210f      	movs	r1, #15
 8004152:	4632      	mov	r2, r6
 8004154:	201f      	movs	r0, #31
 8004156:	f000 f977 	bl	8004448 <HAL_NVIC_SetPriority>

  HAL_NVIC_EnableIRQ(HSPI1_IRQn);
 800415a:	2083      	movs	r0, #131	@ 0x83
 800415c:	f000 f9a4 	bl	80044a8 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_EnableIRQ(HSPI_RAM_DMAx_IRQn);
 8004160:	201f      	movs	r0, #31
 8004162:	f000 f9a1 	bl	80044a8 <HAL_NVIC_EnableIRQ>
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8004166:	f04f 6380 	mov.w	r3, #67108864	@ 0x4000000
 800416a:	fa93 f3a3 	rbit	r3, r3
  return __builtin_clz(value);
 800416e:	fab3 f383 	clz	r3, r3
      hspi_init.MemorySize     = (uint32_t)POSITION_VAL(APS512XX_RAM_SIZE);
 8004172:	931b      	str	r3, [sp, #108]	@ 0x6c
      hspi_init.SampleShifting = HAL_XSPI_SAMPLE_SHIFT_NONE;
 8004174:	2300      	movs	r3, #0
      if (MX_HSPI_RAM_Init(&hhspi_ram[Instance], &hspi_init) != HAL_OK)
 8004176:	4628      	mov	r0, r5
 8004178:	a91b      	add	r1, sp, #108	@ 0x6c
      hspi_init.ClockPrescaler = 0; /* HSPI clock = 160MHz / ClockPrescaler = 160MHz */
 800417a:	961c      	str	r6, [sp, #112]	@ 0x70
      hspi_init.SampleShifting = HAL_XSPI_SAMPLE_SHIFT_NONE;
 800417c:	931d      	str	r3, [sp, #116]	@ 0x74
      if (MX_HSPI_RAM_Init(&hhspi_ram[Instance], &hspi_init) != HAL_OK)
 800417e:	f7ff fc0d 	bl	800399c <MX_HSPI_RAM_Init>
 8004182:	b990      	cbnz	r0, 80041aa <BSP_HSPI_RAM_Init+0x5aa>
      else if (APS512XX_Reset(&hhspi_ram[Instance]) != 0)/*APS512XX_OK*/
 8004184:	4628      	mov	r0, r5
 8004186:	f7fe fed6 	bl	8002f36 <APS512XX_Reset>
 800418a:	b110      	cbz	r0, 8004192 <BSP_HSPI_RAM_Init+0x592>
        ret = BSP_ERROR_COMPONENT_FAILURE;
 800418c:	f06f 0004 	mvn.w	r0, #4
 8004190:	e541      	b.n	8003c16 <BSP_HSPI_RAM_Init+0x16>
      else if (BSP_HSPI_RAM_Config16BitsOctalRAM(Instance, Init) != BSP_ERROR_NONE)
 8004192:	9901      	ldr	r1, [sp, #4]
 8004194:	f7ff fc70 	bl	8003a78 <BSP_HSPI_RAM_Config16BitsOctalRAM>
 8004198:	2800      	cmp	r0, #0
 800419a:	d1f7      	bne.n	800418c <BSP_HSPI_RAM_Init+0x58c>
        Hspi_Ram_Ctx[Instance].IsInitialized = HSPI_ACCESS_INDIRECT;
 800419c:	2201      	movs	r2, #1
 800419e:	4b0a      	ldr	r3, [pc, #40]	@ (80041c8 <BSP_HSPI_RAM_Init+0x5c8>)
 80041a0:	701a      	strb	r2, [r3, #0]
        ret = BSP_ERROR_NONE;
 80041a2:	e537      	b.n	8003c14 <BSP_HSPI_RAM_Init+0x14>
    ret = BSP_ERROR_WRONG_PARAM;
 80041a4:	f06f 0001 	mvn.w	r0, #1
 80041a8:	e535      	b.n	8003c16 <BSP_HSPI_RAM_Init+0x16>
        ret = BSP_ERROR_PERIPH_FAILURE;
 80041aa:	f06f 0003 	mvn.w	r0, #3
  return ret;
 80041ae:	e532      	b.n	8003c16 <BSP_HSPI_RAM_Init+0x16>
 80041b0:	42022000 	.word	0x42022000
 80041b4:	42021c00 	.word	0x42021c00
 80041b8:	42022400 	.word	0x42022400
 80041bc:	40020650 	.word	0x40020650
 80041c0:	2003edec 	.word	0x2003edec
 80041c4:	400203d0 	.word	0x400203d0
 80041c8:	20000040 	.word	0x20000040
 80041cc:	2003ed74 	.word	0x2003ed74
 80041d0:	2003ecfc 	.word	0x2003ecfc

080041d4 <BSP_TS_Init>:
  * @param  Instance TS Instance.
  * @param  TS_Init  Pointer to TS initialization structure.
  * @retval BSP status.
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
 80041d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80041d8:	4607      	mov	r7, r0
  int32_t status = BSP_ERROR_NONE;

  if ((TS_Init == NULL) || (Instance >= TS_INSTANCES_NBR))
 80041da:	460d      	mov	r5, r1
{
 80041dc:	b089      	sub	sp, #36	@ 0x24
  if ((TS_Init == NULL) || (Instance >= TS_INSTANCES_NBR))
 80041de:	2900      	cmp	r1, #0
 80041e0:	d050      	beq.n	8004284 <BSP_TS_Init+0xb0>
 80041e2:	2800      	cmp	r0, #0
 80041e4:	d14e      	bne.n	8004284 <BSP_TS_Init+0xb0>
  int32_t                  status;
  SITRONIX_IO_t              IOCtx;
  static SITRONIX_Object_t SITRONIXObj;

  /* Configure the TS driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
 80041e6:	23e0      	movs	r3, #224	@ 0xe0
 80041e8:	f8ad 300c 	strh.w	r3, [sp, #12]
  IOCtx.Init        = BSP_I2C5_Init;
 80041ec:	4b27      	ldr	r3, [pc, #156]	@ (800428c <BSP_TS_Init+0xb8>)
  IOCtx.ReadReg     = BSP_I2C5_ReadReg;
  IOCtx.WriteReg    = BSP_I2C5_WriteReg;
  IOCtx.ReadData    = BSP_I2C5_Recv;
  IOCtx.GetTick     = BSP_GetTick;

  if (SITRONIX_RegisterBusIO(&SITRONIXObj, &IOCtx) != SITRONIX_OK)
 80041ee:	4c28      	ldr	r4, [pc, #160]	@ (8004290 <BSP_TS_Init+0xbc>)
  IOCtx.Init        = BSP_I2C5_Init;
 80041f0:	9301      	str	r3, [sp, #4]
  IOCtx.DeInit      = BSP_I2C5_DeInit;
 80041f2:	4b28      	ldr	r3, [pc, #160]	@ (8004294 <BSP_TS_Init+0xc0>)
  if (SITRONIX_RegisterBusIO(&SITRONIXObj, &IOCtx) != SITRONIX_OK)
 80041f4:	4620      	mov	r0, r4
  IOCtx.DeInit      = BSP_I2C5_DeInit;
 80041f6:	9302      	str	r3, [sp, #8]
  IOCtx.ReadReg     = BSP_I2C5_ReadReg;
 80041f8:	4b27      	ldr	r3, [pc, #156]	@ (8004298 <BSP_TS_Init+0xc4>)
  if (SITRONIX_RegisterBusIO(&SITRONIXObj, &IOCtx) != SITRONIX_OK)
 80041fa:	a901      	add	r1, sp, #4
  IOCtx.ReadReg     = BSP_I2C5_ReadReg;
 80041fc:	9305      	str	r3, [sp, #20]
  IOCtx.WriteReg    = BSP_I2C5_WriteReg;
 80041fe:	4b27      	ldr	r3, [pc, #156]	@ (800429c <BSP_TS_Init+0xc8>)
 8004200:	9304      	str	r3, [sp, #16]
  IOCtx.ReadData    = BSP_I2C5_Recv;
 8004202:	4b27      	ldr	r3, [pc, #156]	@ (80042a0 <BSP_TS_Init+0xcc>)
 8004204:	9306      	str	r3, [sp, #24]
  IOCtx.GetTick     = BSP_GetTick;
 8004206:	4b27      	ldr	r3, [pc, #156]	@ (80042a4 <BSP_TS_Init+0xd0>)
 8004208:	9307      	str	r3, [sp, #28]
  if (SITRONIX_RegisterBusIO(&SITRONIXObj, &IOCtx) != SITRONIX_OK)
 800420a:	f7ff f947 	bl	800349c <SITRONIX_RegisterBusIO>
 800420e:	4606      	mov	r6, r0
 8004210:	b110      	cbz	r0, 8004218 <BSP_TS_Init+0x44>
        status = BSP_ERROR_COMPONENT_FAILURE;
 8004212:	f06f 0604 	mvn.w	r6, #4
 8004216:	e031      	b.n	800427c <BSP_TS_Init+0xa8>
    status = BSP_ERROR_BUS_FAILURE;
  }
  else
  {
    Ts_CompObj[Instance] = &SITRONIXObj;
    Ts_Drv[Instance]     = (TS_Drv_t *) &SITRONIX_TS_Driver;
 8004218:	4b23      	ldr	r3, [pc, #140]	@ (80042a8 <BSP_TS_Init+0xd4>)
    Ts_CompObj[Instance] = &SITRONIXObj;
 800421a:	f8df 8094 	ldr.w	r8, [pc, #148]	@ 80042b0 <BSP_TS_Init+0xdc>
    Ts_Drv[Instance]     = (TS_Drv_t *) &SITRONIX_TS_Driver;
 800421e:	f8df 9094 	ldr.w	r9, [pc, #148]	@ 80042b4 <BSP_TS_Init+0xe0>
    if (Ts_Drv[Instance]->Init(Ts_CompObj[Instance]) < 0)
 8004222:	4620      	mov	r0, r4
    Ts_Drv[Instance]     = (TS_Drv_t *) &SITRONIX_TS_Driver;
 8004224:	f8c9 3000 	str.w	r3, [r9]
    Ts_CompObj[Instance] = &SITRONIXObj;
 8004228:	f8c8 4000 	str.w	r4, [r8]
    if (Ts_Drv[Instance]->Init(Ts_CompObj[Instance]) < 0)
 800422c:	681b      	ldr	r3, [r3, #0]
 800422e:	4798      	blx	r3
 8004230:	2800      	cmp	r0, #0
 8004232:	dbee      	blt.n	8004212 <BSP_TS_Init+0x3e>
      Ts_Ctx[Instance].Width       = TS_Init->Width;
 8004234:	682b      	ldr	r3, [r5, #0]
 8004236:	4c1d      	ldr	r4, [pc, #116]	@ (80042ac <BSP_TS_Init+0xd8>)
      if (Ts_Drv[Instance]->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 8004238:	f8d8 0000 	ldr.w	r0, [r8]
      Ts_Ctx[Instance].Width       = TS_Init->Width;
 800423c:	6023      	str	r3, [r4, #0]
      Ts_Ctx[Instance].Height      = TS_Init->Height;
 800423e:	686b      	ldr	r3, [r5, #4]
      if (Ts_Drv[Instance]->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 8004240:	a901      	add	r1, sp, #4
      Ts_Ctx[Instance].Height      = TS_Init->Height;
 8004242:	6063      	str	r3, [r4, #4]
      Ts_Ctx[Instance].Orientation = TS_Init->Orientation;
 8004244:	68ab      	ldr	r3, [r5, #8]
 8004246:	60a3      	str	r3, [r4, #8]
      Ts_Ctx[Instance].Accuracy    = TS_Init->Accuracy;
 8004248:	68eb      	ldr	r3, [r5, #12]
 800424a:	60e3      	str	r3, [r4, #12]
      if (Ts_Drv[Instance]->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 800424c:	f8d9 3000 	ldr.w	r3, [r9]
 8004250:	69db      	ldr	r3, [r3, #28]
 8004252:	4798      	blx	r3
 8004254:	2800      	cmp	r0, #0
 8004256:	dbdc      	blt.n	8004212 <BSP_TS_Init+0x3e>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
 8004258:	9b02      	ldr	r3, [sp, #8]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 800425a:	682a      	ldr	r2, [r5, #0]
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
 800425c:	6123      	str	r3, [r4, #16]
        Ts_Ctx[Instance].MaxY = Capabilities.MaxYl;
 800425e:	9b03      	ldr	r3, [sp, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
 8004260:	6869      	ldr	r1, [r5, #4]
        Ts_Ctx[Instance].MaxY = Capabilities.MaxYl;
 8004262:	f844 3f14 	str.w	r3, [r4, #20]!
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 8004266:	68eb      	ldr	r3, [r5, #12]
 8004268:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
 800426a:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 800426c:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
 800426e:	3301      	adds	r3, #1
        for (i = 0; i < TS_TOUCH_NBR; i++)
 8004270:	3701      	adds	r7, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 8004272:	f844 2f04 	str.w	r2, [r4, #4]!
        for (i = 0; i < TS_TOUCH_NBR; i++)
 8004276:	2f0a      	cmp	r7, #10
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
 8004278:	62a3      	str	r3, [r4, #40]	@ 0x28
        for (i = 0; i < TS_TOUCH_NBR; i++)
 800427a:	d1f9      	bne.n	8004270 <BSP_TS_Init+0x9c>
}
 800427c:	4630      	mov	r0, r6
 800427e:	b009      	add	sp, #36	@ 0x24
 8004280:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = BSP_ERROR_WRONG_PARAM;
 8004284:	f06f 0601 	mvn.w	r6, #1
  return status;
 8004288:	e7f8      	b.n	800427c <BSP_TS_Init+0xa8>
 800428a:	bf00      	nop
 800428c:	080037d9 	.word	0x080037d9
 8004290:	2003ee4c 	.word	0x2003ee4c
 8004294:	08003749 	.word	0x08003749
 8004298:	080038f1 	.word	0x080038f1
 800429c:	080038bd 	.word	0x080038bd
 80042a0:	08003925 	.word	0x08003925
 80042a4:	08003959 	.word	0x08003959
 80042a8:	20000010 	.word	0x20000010
 80042ac:	2003ee7c 	.word	0x2003ee7c
 80042b0:	2003eee8 	.word	0x2003eee8
 80042b4:	2003eee4 	.word	0x2003eee4

080042b8 <BSP_TS_GetState>:
{
 80042b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80042ba:	460c      	mov	r4, r1
 80042bc:	b085      	sub	sp, #20
  if (Instance >= TS_INSTANCES_NBR)
 80042be:	2800      	cmp	r0, #0
 80042c0:	d139      	bne.n	8004336 <BSP_TS_GetState+0x7e>
    if (Ts_Drv[Instance]->GetState(Ts_CompObj[Instance], &state) < 0)
 80042c2:	4b1e      	ldr	r3, [pc, #120]	@ (800433c <BSP_TS_GetState+0x84>)
 80042c4:	4a1e      	ldr	r2, [pc, #120]	@ (8004340 <BSP_TS_GetState+0x88>)
 80042c6:	681b      	ldr	r3, [r3, #0]
 80042c8:	6810      	ldr	r0, [r2, #0]
 80042ca:	691b      	ldr	r3, [r3, #16]
 80042cc:	a901      	add	r1, sp, #4
 80042ce:	4798      	blx	r3
 80042d0:	2800      	cmp	r0, #0
 80042d2:	db2d      	blt.n	8004330 <BSP_TS_GetState+0x78>
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0]) ?
 80042d4:	4b1b      	ldr	r3, [pc, #108]	@ (8004344 <BSP_TS_GetState+0x8c>)
    else if (state.TouchDetected != 0U)
 80042d6:	9e01      	ldr	r6, [sp, #4]
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0]) ?
 80042d8:	699d      	ldr	r5, [r3, #24]
      y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0]) ?
 80042da:	6c18      	ldr	r0, [r3, #64]	@ 0x40
    else if (state.TouchDetected != 0U)
 80042dc:	b326      	cbz	r6, 8004328 <BSP_TS_GetState+0x70>
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / (Ts_Ctx[Instance].MaxX);
 80042de:	6819      	ldr	r1, [r3, #0]
 80042e0:	9a02      	ldr	r2, [sp, #8]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / (Ts_Ctx[Instance].MaxY);
 80042e2:	685f      	ldr	r7, [r3, #4]
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / (Ts_Ctx[Instance].MaxX);
 80042e4:	4351      	muls	r1, r2
 80042e6:	691a      	ldr	r2, [r3, #16]
 80042e8:	fbb1 f1f2 	udiv	r1, r1, r2
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / (Ts_Ctx[Instance].MaxY);
 80042ec:	9a03      	ldr	r2, [sp, #12]
               (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]) :
 80042ee:	42a9      	cmp	r1, r5
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / (Ts_Ctx[Instance].MaxY);
 80042f0:	fb07 f202 	mul.w	r2, r7, r2
 80042f4:	695f      	ldr	r7, [r3, #20]
               (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]) :
 80042f6:	bf88      	it	hi
 80042f8:	eba1 0c05 	subhi.w	ip, r1, r5
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / (Ts_Ctx[Instance].MaxY);
 80042fc:	fbb2 f2f7 	udiv	r2, r2, r7
      if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
 8004300:	68df      	ldr	r7, [r3, #12]
               (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]) :
 8004302:	bf98      	it	ls
 8004304:	eba5 0c01 	subls.w	ip, r5, r1
               (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]) :
 8004308:	4282      	cmp	r2, r0
      TS_State->TouchDetected = state.TouchDetected;
 800430a:	6026      	str	r6, [r4, #0]
               (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]) :
 800430c:	bf8c      	ite	hi
 800430e:	1a16      	subhi	r6, r2, r0
 8004310:	1a86      	subls	r6, r0, r2
      if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
 8004312:	4567      	cmp	r7, ip
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / (Ts_Ctx[Instance].MaxX);
 8004314:	6061      	str	r1, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / (Ts_Ctx[Instance].MaxY);
 8004316:	60a2      	str	r2, [r4, #8]
      if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
 8004318:	d301      	bcc.n	800431e <BSP_TS_GetState+0x66>
 800431a:	42b7      	cmp	r7, r6
 800431c:	d205      	bcs.n	800432a <BSP_TS_GetState+0x72>
        Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
 800431e:	6199      	str	r1, [r3, #24]
        Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
 8004320:	641a      	str	r2, [r3, #64]	@ 0x40
  int32_t status = BSP_ERROR_NONE;
 8004322:	2000      	movs	r0, #0
}
 8004324:	b005      	add	sp, #20
 8004326:	bdf0      	pop	{r4, r5, r6, r7, pc}
      TS_State->TouchDetected = 0U;
 8004328:	6026      	str	r6, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
 800432a:	e9c4 5001 	strd	r5, r0, [r4, #4]
 800432e:	e7f8      	b.n	8004322 <BSP_TS_GetState+0x6a>
      status = BSP_ERROR_COMPONENT_FAILURE;
 8004330:	f06f 0004 	mvn.w	r0, #4
 8004334:	e7f6      	b.n	8004324 <BSP_TS_GetState+0x6c>
    status = BSP_ERROR_WRONG_PARAM;
 8004336:	f06f 0001 	mvn.w	r0, #1
  return status;
 800433a:	e7f3      	b.n	8004324 <BSP_TS_GetState+0x6c>
 800433c:	2003eee4 	.word	0x2003eee4
 8004340:	2003eee8 	.word	0x2003eee8
 8004344:	2003ee7c 	.word	0x2003ee7c

08004348 <SystemInit>:
   SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
  #endif

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set MSION bit */
  RCC->CR = RCC_CR_MSISON;
 8004348:	2201      	movs	r2, #1
   SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 800434a:	480e      	ldr	r0, [pc, #56]	@ (8004384 <SystemInit+0x3c>)
 800434c:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
 8004350:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8004354:	f8c0 3088 	str.w	r3, [r0, #136]	@ 0x88
  RCC->CR = RCC_CR_MSISON;
 8004358:	4b0b      	ldr	r3, [pc, #44]	@ (8004388 <SystemInit+0x40>)
 800435a:	601a      	str	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR1 = 0U;
 800435c:	2200      	movs	r2, #0
 800435e:	61da      	str	r2, [r3, #28]
  RCC->CFGR2 = 0U;
 8004360:	621a      	str	r2, [r3, #32]
  RCC->CFGR3 = 0U;
 8004362:	625a      	str	r2, [r3, #36]	@ 0x24

  /* Reset HSEON, CSSON , HSION, PLLxON bits */
  RCC->CR &= ~(RCC_CR_HSEON | RCC_CR_CSSON | RCC_CR_PLL1ON | RCC_CR_PLL2ON | RCC_CR_PLL3ON);
 8004364:	6819      	ldr	r1, [r3, #0]
 8004366:	f021 51a8 	bic.w	r1, r1, #352321536	@ 0x15000000
 800436a:	f421 2110 	bic.w	r1, r1, #589824	@ 0x90000
 800436e:	6019      	str	r1, [r3, #0]

  /* Reset PLLCFGR register */
  RCC->PLL1CFGR = 0U;
 8004370:	629a      	str	r2, [r3, #40]	@ 0x28

  /* Reset HSEBYP bit */
  RCC->CR &= ~(RCC_CR_HSEBYP);
 8004372:	6819      	ldr	r1, [r3, #0]
 8004374:	f421 2180 	bic.w	r1, r1, #262144	@ 0x40000
 8004378:	6019      	str	r1, [r3, #0]

  /* Disable all interrupts */
  RCC->CIER = 0U;
 800437a:	651a      	str	r2, [r3, #80]	@ 0x50

  /* Configure the Vector Table location add offset address ------------------*/
  #ifdef VECT_TAB_SRAM
    SCB->VTOR = SRAM1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
  #else
    SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800437c:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8004380:	6083      	str	r3, [r0, #8]
  #endif
}
 8004382:	4770      	bx	lr
 8004384:	e000ed00 	.word	0xe000ed00
 8004388:	46020c00 	.word	0x46020c00

0800438c <HAL_Init>:
  */
HAL_StatusTypeDef HAL_Init(void)
{
  /* Configure Flash prefetch */
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800438c:	4a0f      	ldr	r2, [pc, #60]	@ (80043cc <HAL_Init+0x40>)
{
 800438e:	b510      	push	{r4, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004390:	6813      	ldr	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004392:	2003      	movs	r0, #3
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004394:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004398:	6013      	str	r3, [r2, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800439a:	f000 f843 	bl	8004424 <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 800439e:	f002 fe53 	bl	8007048 <HAL_RCC_GetSysClockFreq>
 80043a2:	4b0b      	ldr	r3, [pc, #44]	@ (80043d0 <HAL_Init+0x44>)
 80043a4:	4a0b      	ldr	r2, [pc, #44]	@ (80043d4 <HAL_Init+0x48>)
 80043a6:	6a1b      	ldr	r3, [r3, #32]
 80043a8:	f003 030f 	and.w	r3, r3, #15
 80043ac:	5cd3      	ldrb	r3, [r2, r3]
 80043ae:	40d8      	lsrs	r0, r3
 80043b0:	4b09      	ldr	r3, [pc, #36]	@ (80043d8 <HAL_Init+0x4c>)
 80043b2:	6018      	str	r0, [r3, #0]

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 80043b4:	200f      	movs	r0, #15
 80043b6:	f7fc fffd 	bl	80013b4 <HAL_InitTick>
 80043ba:	4604      	mov	r4, r0
 80043bc:	b918      	cbnz	r0, 80043c6 <HAL_Init+0x3a>
  {
    return HAL_ERROR;
  }

  /* Init the low level hardware */
  HAL_MspInit();
 80043be:	f7fc fdf7 	bl	8000fb0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 80043c2:	4620      	mov	r0, r4
 80043c4:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80043c6:	2401      	movs	r4, #1
 80043c8:	e7fb      	b.n	80043c2 <HAL_Init+0x36>
 80043ca:	bf00      	nop
 80043cc:	40022000 	.word	0x40022000
 80043d0:	46020c00 	.word	0x46020c00
 80043d4:	08027054 	.word	0x08027054
 80043d8:	20000048 	.word	0x20000048

080043dc <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
 80043dc:	4a03      	ldr	r2, [pc, #12]	@ (80043ec <HAL_IncTick+0x10>)
 80043de:	4b04      	ldr	r3, [pc, #16]	@ (80043f0 <HAL_IncTick+0x14>)
 80043e0:	6811      	ldr	r1, [r2, #0]
 80043e2:	781b      	ldrb	r3, [r3, #0]
 80043e4:	440b      	add	r3, r1
 80043e6:	6013      	str	r3, [r2, #0]
}
 80043e8:	4770      	bx	lr
 80043ea:	bf00      	nop
 80043ec:	2003eeec 	.word	0x2003eeec
 80043f0:	2000004c 	.word	0x2000004c

080043f4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80043f4:	4b01      	ldr	r3, [pc, #4]	@ (80043fc <HAL_GetTick+0x8>)
 80043f6:	6818      	ldr	r0, [r3, #0]
}
 80043f8:	4770      	bx	lr
 80043fa:	bf00      	nop
 80043fc:	2003eeec 	.word	0x2003eeec

08004400 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8004400:	b538      	push	{r3, r4, r5, lr}
 8004402:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8004404:	f7ff fff6 	bl	80043f4 <HAL_GetTick>
 8004408:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800440a:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 800440c:	bf1e      	ittt	ne
 800440e:	4b04      	ldrne	r3, [pc, #16]	@ (8004420 <HAL_Delay+0x20>)
 8004410:	781b      	ldrbne	r3, [r3, #0]
 8004412:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8004414:	f7ff ffee 	bl	80043f4 <HAL_GetTick>
 8004418:	1b43      	subs	r3, r0, r5
 800441a:	42a3      	cmp	r3, r4
 800441c:	d3fa      	bcc.n	8004414 <HAL_Delay+0x14>
  {
  }
}
 800441e:	bd38      	pop	{r3, r4, r5, pc}
 8004420:	2000004c 	.word	0x2000004c

08004424 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004424:	4907      	ldr	r1, [pc, #28]	@ (8004444 <HAL_NVIC_SetPriorityGrouping+0x20>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004426:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004428:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800442a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800442e:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 8004432:	0412      	lsls	r2, r2, #16
 8004434:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8004436:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8004438:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 800443c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 8004440:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8004442:	4770      	bx	lr
 8004444:	e000ed00 	.word	0xe000ed00

08004448 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8004448:	4b15      	ldr	r3, [pc, #84]	@ (80044a0 <HAL_NVIC_SetPriority+0x58>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 800444a:	b530      	push	{r4, r5, lr}
 800444c:	68dc      	ldr	r4, [r3, #12]
 800444e:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004452:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004456:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004458:	2b04      	cmp	r3, #4
 800445a:	bf28      	it	cs
 800445c:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800445e:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004460:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004464:	bf94      	ite	ls
 8004466:	2400      	movls	r4, #0
 8004468:	3c03      	subhi	r4, #3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800446a:	fa05 f303 	lsl.w	r3, r5, r3
 800446e:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004472:	40a5      	lsls	r5, r4
 8004474:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004478:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 800447a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800447c:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004480:	bfac      	ite	ge
 8004482:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004486:	4a07      	ldrlt	r2, [pc, #28]	@ (80044a4 <HAL_NVIC_SetPriority+0x5c>)
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004488:	ea4f 1303 	mov.w	r3, r3, lsl #4
 800448c:	b2db      	uxtb	r3, r3
 800448e:	bfab      	itete	ge
 8004490:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004494:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004498:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800449c:	5413      	strblt	r3, [r2, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800449e:	bd30      	pop	{r4, r5, pc}
 80044a0:	e000ed00 	.word	0xe000ed00
 80044a4:	e000ed14 	.word	0xe000ed14

080044a8 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80044a8:	2800      	cmp	r0, #0
 80044aa:	db07      	blt.n	80044bc <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80044ac:	2301      	movs	r3, #1
 80044ae:	0941      	lsrs	r1, r0, #5
 80044b0:	4a03      	ldr	r2, [pc, #12]	@ (80044c0 <HAL_NVIC_EnableIRQ+0x18>)
 80044b2:	f000 001f 	and.w	r0, r0, #31
 80044b6:	4083      	lsls	r3, r0
 80044b8:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 80044bc:	4770      	bx	lr
 80044be:	bf00      	nop
 80044c0:	e000e100 	.word	0xe000e100

080044c4 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80044c4:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80044c6:	4604      	mov	r4, r0
 80044c8:	b908      	cbnz	r0, 80044ce <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
 80044ca:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
 80044cc:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
 80044ce:	7f43      	ldrb	r3, [r0, #29]
 80044d0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80044d4:	b913      	cbnz	r3, 80044dc <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
 80044d6:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
 80044d8:	f7fc fd82 	bl	8000fe0 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
 80044dc:	2302      	movs	r3, #2
 80044de:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 80044e0:	7923      	ldrb	r3, [r4, #4]
 80044e2:	b9e3      	cbnz	r3, 800451e <HAL_CRC_Init+0x5a>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 80044e4:	6823      	ldr	r3, [r4, #0]
 80044e6:	4a13      	ldr	r2, [pc, #76]	@ (8004534 <HAL_CRC_Init+0x70>)
 80044e8:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 80044ea:	689a      	ldr	r2, [r3, #8]
 80044ec:	f022 0218 	bic.w	r2, r2, #24
 80044f0:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 80044f2:	7962      	ldrb	r2, [r4, #5]
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 80044f4:	6823      	ldr	r3, [r4, #0]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 80044f6:	b9d2      	cbnz	r2, 800452e <HAL_CRC_Init+0x6a>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 80044f8:	f04f 32ff 	mov.w	r2, #4294967295
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 80044fc:	611a      	str	r2, [r3, #16]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 80044fe:	689a      	ldr	r2, [r3, #8]
 8004500:	6961      	ldr	r1, [r4, #20]
 8004502:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8004506:	430a      	orrs	r2, r1
 8004508:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 800450a:	689a      	ldr	r2, [r3, #8]
 800450c:	69a1      	ldr	r1, [r4, #24]
 800450e:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8004512:	430a      	orrs	r2, r1
 8004514:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
 8004516:	2301      	movs	r3, #1
  return HAL_OK;
 8004518:	2000      	movs	r0, #0
  hcrc->State = HAL_CRC_STATE_READY;
 800451a:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
 800451c:	e7d6      	b.n	80044cc <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 800451e:	4620      	mov	r0, r4
 8004520:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8004524:	f000 f808 	bl	8004538 <HAL_CRCEx_Polynomial_Set>
 8004528:	2800      	cmp	r0, #0
 800452a:	d0e2      	beq.n	80044f2 <HAL_CRC_Init+0x2e>
 800452c:	e7cd      	b.n	80044ca <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 800452e:	6922      	ldr	r2, [r4, #16]
 8004530:	e7e4      	b.n	80044fc <HAL_CRC_Init+0x38>
 8004532:	bf00      	nop
 8004534:	04c11db7 	.word	0x04c11db7

08004538 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 8004538:	07cb      	lsls	r3, r1, #31
{
 800453a:	b510      	push	{r4, lr}
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 800453c:	d50d      	bpl.n	800455a <HAL_CRCEx_Polynomial_Set+0x22>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 800453e:	231f      	movs	r3, #31
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8004540:	3b01      	subs	r3, #1
 8004542:	d31d      	bcc.n	8004580 <HAL_CRCEx_Polynomial_Set+0x48>
 8004544:	fa21 f403 	lsr.w	r4, r1, r3
 8004548:	07e4      	lsls	r4, r4, #31
 800454a:	d5f9      	bpl.n	8004540 <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
 800454c:	2a10      	cmp	r2, #16
 800454e:	d013      	beq.n	8004578 <HAL_CRCEx_Polynomial_Set+0x40>
 8004550:	2a10      	cmp	r2, #16
 8004552:	d804      	bhi.n	800455e <HAL_CRCEx_Polynomial_Set+0x26>
 8004554:	b13a      	cbz	r2, 8004566 <HAL_CRCEx_Polynomial_Set+0x2e>
 8004556:	2a08      	cmp	r2, #8
 8004558:	d010      	beq.n	800457c <HAL_CRCEx_Polynomial_Set+0x44>
 800455a:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
 800455c:	e00b      	b.n	8004576 <HAL_CRCEx_Polynomial_Set+0x3e>
    switch (PolyLength)
 800455e:	2a18      	cmp	r2, #24
 8004560:	d1fb      	bne.n	800455a <HAL_CRCEx_Polynomial_Set+0x22>
        if (msb >= HAL_CRC_LENGTH_7B)
 8004562:	2b06      	cmp	r3, #6
        if (msb >= HAL_CRC_LENGTH_16B)
 8004564:	d8f9      	bhi.n	800455a <HAL_CRCEx_Polynomial_Set+0x22>
    WRITE_REG(hcrc->Instance->POL, Pol);
 8004566:	6800      	ldr	r0, [r0, #0]
 8004568:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 800456a:	6883      	ldr	r3, [r0, #8]
 800456c:	f023 0318 	bic.w	r3, r3, #24
 8004570:	4313      	orrs	r3, r2
 8004572:	6083      	str	r3, [r0, #8]
 8004574:	2000      	movs	r0, #0
}
 8004576:	bd10      	pop	{r4, pc}
        if (msb >= HAL_CRC_LENGTH_8B)
 8004578:	2b07      	cmp	r3, #7
 800457a:	e7f3      	b.n	8004564 <HAL_CRCEx_Polynomial_Set+0x2c>
        if (msb >= HAL_CRC_LENGTH_16B)
 800457c:	2b0f      	cmp	r3, #15
 800457e:	e7f1      	b.n	8004564 <HAL_CRCEx_Polynomial_Set+0x2c>
    switch (PolyLength)
 8004580:	2a10      	cmp	r2, #16
 8004582:	d1e5      	bne.n	8004550 <HAL_CRCEx_Polynomial_Set+0x18>
 8004584:	e7e9      	b.n	800455a <HAL_CRCEx_Polynomial_Set+0x22>

08004586 <HAL_DCACHE_ErrorCallback>:
  * @brief  Error callback.
  * @param  hdcache Pointer to a DCACHE_HandleTypeDef structure that contains
  *                 the configuration information for the specified DCACHEx peripheral.
  * @retval None
  */
__weak void HAL_DCACHE_ErrorCallback(DCACHE_HandleTypeDef *hdcache)
 8004586:	4770      	bx	lr

08004588 <HAL_DCACHE_CleanByAddrCallback>:
__weak void HAL_DCACHE_CleanByAddrCallback(DCACHE_HandleTypeDef *hdcache)
 8004588:	4770      	bx	lr

0800458a <HAL_DCACHE_InvalidateByAddrCallback>:
__weak void HAL_DCACHE_InvalidateByAddrCallback(DCACHE_HandleTypeDef *hdcache)
 800458a:	4770      	bx	lr

0800458c <HAL_DCACHE_CleanAndInvalidateByAddrCallback>:
__weak void HAL_DCACHE_CleanAndInvalidateByAddrCallback(DCACHE_HandleTypeDef *hdcache)
 800458c:	4770      	bx	lr

0800458e <HAL_DCACHE_InvalidateCompleteCallback>:
__weak void HAL_DCACHE_InvalidateCompleteCallback(DCACHE_HandleTypeDef *hdcache)
 800458e:	4770      	bx	lr

08004590 <HAL_DCACHE_Enable>:
  if (hdcache == NULL)
 8004590:	4602      	mov	r2, r0
 8004592:	b150      	cbz	r0, 80045aa <HAL_DCACHE_Enable+0x1a>
  if (READ_BIT(hdcache->Instance->SR, (DCACHE_SR_BUSYF | DCACHE_SR_BUSYCMDF)) != 0U)
 8004594:	6801      	ldr	r1, [r0, #0]
 8004596:	6848      	ldr	r0, [r1, #4]
 8004598:	f010 0009 	ands.w	r0, r0, #9
 800459c:	d107      	bne.n	80045ae <HAL_DCACHE_Enable+0x1e>
    hdcache->ErrorCode = HAL_DCACHE_ERROR_NONE;
 800459e:	6290      	str	r0, [r2, #40]	@ 0x28
    SET_BIT(hdcache->Instance->CR, DCACHE_CR_EN);
 80045a0:	680b      	ldr	r3, [r1, #0]
 80045a2:	f043 0301 	orr.w	r3, r3, #1
 80045a6:	600b      	str	r3, [r1, #0]
 80045a8:	4770      	bx	lr
    return HAL_ERROR;
 80045aa:	2001      	movs	r0, #1
 80045ac:	4770      	bx	lr
    status =  HAL_BUSY;
 80045ae:	2002      	movs	r0, #2
}
 80045b0:	4770      	bx	lr
	...

080045b4 <HAL_DCACHE_Init>:
{
 80045b4:	b510      	push	{r4, lr}
  if (hdcache == NULL)
 80045b6:	4604      	mov	r4, r0
 80045b8:	b320      	cbz	r0, 8004604 <HAL_DCACHE_Init+0x50>
  if (hdcache->State == HAL_DCACHE_STATE_RESET)
 80045ba:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 80045be:	b983      	cbnz	r3, 80045e2 <HAL_DCACHE_Init+0x2e>
    hdcache->ErrorCallback                      = HAL_DCACHE_ErrorCallback;
 80045c0:	4b11      	ldr	r3, [pc, #68]	@ (8004608 <HAL_DCACHE_Init+0x54>)
 80045c2:	6083      	str	r3, [r0, #8]
    hdcache->CleanByAddrCallback                = HAL_DCACHE_CleanByAddrCallback;
 80045c4:	4b11      	ldr	r3, [pc, #68]	@ (800460c <HAL_DCACHE_Init+0x58>)
 80045c6:	60c3      	str	r3, [r0, #12]
    hdcache->InvalidateByAddrCallback           = HAL_DCACHE_InvalidateByAddrCallback;
 80045c8:	4b11      	ldr	r3, [pc, #68]	@ (8004610 <HAL_DCACHE_Init+0x5c>)
 80045ca:	6103      	str	r3, [r0, #16]
    hdcache->InvalidateCompleteCallback         = HAL_DCACHE_InvalidateCompleteCallback;
 80045cc:	4b11      	ldr	r3, [pc, #68]	@ (8004614 <HAL_DCACHE_Init+0x60>)
 80045ce:	6143      	str	r3, [r0, #20]
    hdcache->CleanAndInvalidateByAddrCallback   = HAL_DCACHE_CleanAndInvalidateByAddrCallback;
 80045d0:	4b11      	ldr	r3, [pc, #68]	@ (8004618 <HAL_DCACHE_Init+0x64>)
 80045d2:	6183      	str	r3, [r0, #24]
    if (hdcache->MspInitCallback == NULL)
 80045d4:	69c3      	ldr	r3, [r0, #28]
 80045d6:	b90b      	cbnz	r3, 80045dc <HAL_DCACHE_Init+0x28>
      hdcache->MspInitCallback = HAL_DCACHE_MspInit;
 80045d8:	4b10      	ldr	r3, [pc, #64]	@ (800461c <HAL_DCACHE_Init+0x68>)
 80045da:	61c3      	str	r3, [r0, #28]
    hdcache->MspInitCallback(hdcache);
 80045dc:	4620      	mov	r0, r4
 80045de:	69e3      	ldr	r3, [r4, #28]
 80045e0:	4798      	blx	r3
  hdcache->ErrorCode = HAL_DCACHE_ERROR_NONE;
 80045e2:	2300      	movs	r3, #0
 80045e4:	62a3      	str	r3, [r4, #40]	@ 0x28
  hdcache->State = HAL_DCACHE_STATE_READY;
 80045e6:	2301      	movs	r3, #1
  MODIFY_REG(hdcache->Instance->CR, DCACHE_CR_HBURST, hdcache->Init.ReadBurstType);
 80045e8:	6822      	ldr	r2, [r4, #0]
  hdcache->State = HAL_DCACHE_STATE_READY;
 80045ea:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
  MODIFY_REG(hdcache->Instance->CR, DCACHE_CR_HBURST, hdcache->Init.ReadBurstType);
 80045ee:	6813      	ldr	r3, [r2, #0]
 80045f0:	6861      	ldr	r1, [r4, #4]
 80045f2:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80045f6:	430b      	orrs	r3, r1
  status = HAL_DCACHE_Enable(hdcache);
 80045f8:	4620      	mov	r0, r4
}
 80045fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  MODIFY_REG(hdcache->Instance->CR, DCACHE_CR_HBURST, hdcache->Init.ReadBurstType);
 80045fe:	6013      	str	r3, [r2, #0]
  status = HAL_DCACHE_Enable(hdcache);
 8004600:	f7ff bfc6 	b.w	8004590 <HAL_DCACHE_Enable>
}
 8004604:	2001      	movs	r0, #1
 8004606:	bd10      	pop	{r4, pc}
 8004608:	08004587 	.word	0x08004587
 800460c:	08004589 	.word	0x08004589
 8004610:	0800458b 	.word	0x0800458b
 8004614:	0800458f 	.word	0x0800458f
 8004618:	0800458d 	.word	0x0800458d
 800461c:	08001011 	.word	0x08001011

08004620 <HAL_DCACHE_Invalidate>:
{
 8004620:	b538      	push	{r3, r4, r5, lr}
  if (hdcache == NULL)
 8004622:	4604      	mov	r4, r0
 8004624:	b340      	cbz	r0, 8004678 <HAL_DCACHE_Invalidate+0x58>
  if (READ_BIT(hdcache->Instance->SR, (DCACHE_SR_BUSYF | DCACHE_SR_BUSYCMDF)) != 0U)
 8004626:	6803      	ldr	r3, [r0, #0]
 8004628:	685a      	ldr	r2, [r3, #4]
 800462a:	f012 0209 	ands.w	r2, r2, #9
 800462e:	d125      	bne.n	800467c <HAL_DCACHE_Invalidate+0x5c>
    hdcache->ErrorCode = HAL_DCACHE_ERROR_NONE;
 8004630:	6282      	str	r2, [r0, #40]	@ 0x28
    hdcache->State = HAL_DCACHE_STATE_READY;
 8004632:	2201      	movs	r2, #1
 8004634:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
    WRITE_REG(hdcache->Instance->FCR, (DCACHE_FCR_CBSYENDF | DCACHE_FCR_CCMDENDF));
 8004638:	2212      	movs	r2, #18
 800463a:	60da      	str	r2, [r3, #12]
    MODIFY_REG(hdcache->Instance->CR, DCACHE_CR_CACHECMD, 0U);
 800463c:	681a      	ldr	r2, [r3, #0]
 800463e:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 8004642:	601a      	str	r2, [r3, #0]
    SET_BIT(hdcache->Instance->CR, DCACHE_CR_CACHEINV);
 8004644:	681a      	ldr	r2, [r3, #0]
 8004646:	f042 0202 	orr.w	r2, r2, #2
 800464a:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
 800464c:	f7ff fed2 	bl	80043f4 <HAL_GetTick>
 8004650:	4605      	mov	r5, r0
    while (READ_BIT(hdcache->Instance->SR, DCACHE_SR_BUSYF) != 0U)
 8004652:	6823      	ldr	r3, [r4, #0]
 8004654:	6858      	ldr	r0, [r3, #4]
 8004656:	f010 0001 	ands.w	r0, r0, #1
 800465a:	d00e      	beq.n	800467a <HAL_DCACHE_Invalidate+0x5a>
      if ((HAL_GetTick() - tickstart) > DCACHE_COMMAND_TIMEOUT_VALUE)
 800465c:	f7ff feca 	bl	80043f4 <HAL_GetTick>
 8004660:	1b40      	subs	r0, r0, r5
 8004662:	28c8      	cmp	r0, #200	@ 0xc8
 8004664:	d9f5      	bls.n	8004652 <HAL_DCACHE_Invalidate+0x32>
        if (READ_BIT(hdcache->Instance->SR, DCACHE_SR_BUSYF) != 0U)
 8004666:	6823      	ldr	r3, [r4, #0]
 8004668:	685b      	ldr	r3, [r3, #4]
 800466a:	07db      	lsls	r3, r3, #31
 800466c:	d5f1      	bpl.n	8004652 <HAL_DCACHE_Invalidate+0x32>
          hdcache->ErrorCode = HAL_DCACHE_ERROR_TIMEOUT;
 800466e:	2310      	movs	r3, #16
 8004670:	62a3      	str	r3, [r4, #40]	@ 0x28
          hdcache->State = HAL_DCACHE_STATE_ERROR;
 8004672:	2306      	movs	r3, #6
 8004674:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
    return HAL_ERROR;
 8004678:	2001      	movs	r0, #1
}
 800467a:	bd38      	pop	{r3, r4, r5, pc}
    status =  HAL_BUSY;
 800467c:	2002      	movs	r0, #2
 800467e:	e7fc      	b.n	800467a <HAL_DCACHE_Invalidate+0x5a>

08004680 <HAL_DMA_Init>:
  * @param  hdma : Pointer to a DMA_HandleTypeDef structure that contains the configuration information for the
  *                specified DMA Channel.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *const hdma)
{
 8004680:	b538      	push	{r3, r4, r5, lr}
 8004682:	4604      	mov	r4, r0
  /* Get tick number */
  uint32_t tickstart = HAL_GetTick();
 8004684:	f7ff feb6 	bl	80043f4 <HAL_GetTick>
 8004688:	4605      	mov	r5, r0

  /* Check the DMA peripheral handle parameter */
  if (hdma == NULL)
 800468a:	2c00      	cmp	r4, #0
 800468c:	f000 81a6 	beq.w	80049dc <HAL_DMA_Init+0x35c>
    assert_param(IS_DMA_BURST_LENGTH(hdma->Init.DestBurstLength));
    assert_param(IS_DMA_TRANSFER_ALLOCATED_PORT(hdma->Init.TransferAllocatedPort));
  }

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 8004690:	2300      	movs	r3, #0
 8004692:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c

  /* Update the DMA channel state */
  hdma->State = HAL_DMA_STATE_BUSY;
 8004696:	2302      	movs	r3, #2
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8004698:	6822      	ldr	r2, [r4, #0]
  hdma->State = HAL_DMA_STATE_BUSY;
 800469a:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54

  /* Disable the DMA channel */
  __HAL_DMA_DISABLE(hdma);
 800469e:	6953      	ldr	r3, [r2, #20]
 80046a0:	f043 0306 	orr.w	r3, r3, #6
 80046a4:	6153      	str	r3, [r2, #20]

  /* Check if the DMA channel is effectively disabled */
  while ((hdma->Instance->CCR & DMA_CCR_EN) != 0U)
 80046a6:	6823      	ldr	r3, [r4, #0]
 80046a8:	695a      	ldr	r2, [r3, #20]
 80046aa:	07d2      	lsls	r2, r2, #31
 80046ac:	f100 818b 	bmi.w	80049c6 <HAL_DMA_Init+0x346>

  /* Prepare DMA Channel Control Register (CCR) value *****************************************************************/
  tmpreg = hdma->Init.Priority;

  /* Write DMA Channel Control Register (CCR) */
  MODIFY_REG(hdma->Instance->CCR, DMA_CCR_PRIO | DMA_CCR_LAP | DMA_CCR_LSM, tmpreg);
 80046b0:	695a      	ldr	r2, [r3, #20]
 80046b2:	6a21      	ldr	r1, [r4, #32]
 80046b4:	f422 0243 	bic.w	r2, r2, #12779520	@ 0xc30000
 80046b8:	430a      	orrs	r2, r1
 80046ba:	615a      	str	r2, [r3, #20]

  /* Prepare DMA Channel Transfer Register (CTR1) value ***************************************************************/
  tmpreg = hdma->Init.DestInc | hdma->Init.DestDataWidth | hdma->Init.SrcInc | hdma->Init.SrcDataWidth;
 80046bc:	69e1      	ldr	r1, [r4, #28]
 80046be:	6962      	ldr	r2, [r4, #20]

  /* Add parameters specific to GPDMA */
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 80046c0:	4db0      	ldr	r5, [pc, #704]	@ (8004984 <HAL_DMA_Init+0x304>)
  tmpreg = hdma->Init.DestInc | hdma->Init.DestDataWidth | hdma->Init.SrcInc | hdma->Init.SrcDataWidth;
 80046c2:	430a      	orrs	r2, r1
 80046c4:	6921      	ldr	r1, [r4, #16]
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 80046c6:	42ab      	cmp	r3, r5
  tmpreg = hdma->Init.DestInc | hdma->Init.DestDataWidth | hdma->Init.SrcInc | hdma->Init.SrcDataWidth;
 80046c8:	ea42 0201 	orr.w	r2, r2, r1
 80046cc:	69a1      	ldr	r1, [r4, #24]
 80046ce:	48ae      	ldr	r0, [pc, #696]	@ (8004988 <HAL_DMA_Init+0x308>)
 80046d0:	ea42 0201 	orr.w	r2, r2, r1
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 80046d4:	f000 8087 	beq.w	80047e6 <HAL_DMA_Init+0x166>
 80046d8:	49ac      	ldr	r1, [pc, #688]	@ (800498c <HAL_DMA_Init+0x30c>)
 80046da:	428b      	cmp	r3, r1
 80046dc:	f000 8083 	beq.w	80047e6 <HAL_DMA_Init+0x166>
 80046e0:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 80046e4:	3180      	adds	r1, #128	@ 0x80
 80046e6:	428b      	cmp	r3, r1
 80046e8:	d07d      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 80046ea:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 80046ee:	428b      	cmp	r3, r1
 80046f0:	d079      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 80046f2:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 80046f6:	3180      	adds	r1, #128	@ 0x80
 80046f8:	428b      	cmp	r3, r1
 80046fa:	d074      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 80046fc:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004700:	428b      	cmp	r3, r1
 8004702:	d070      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 8004704:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004708:	3180      	adds	r1, #128	@ 0x80
 800470a:	428b      	cmp	r3, r1
 800470c:	d06b      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 800470e:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004712:	428b      	cmp	r3, r1
 8004714:	d067      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 8004716:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 800471a:	3180      	adds	r1, #128	@ 0x80
 800471c:	428b      	cmp	r3, r1
 800471e:	d062      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 8004720:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004724:	428b      	cmp	r3, r1
 8004726:	d05e      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 8004728:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 800472c:	3180      	adds	r1, #128	@ 0x80
 800472e:	428b      	cmp	r3, r1
 8004730:	d059      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 8004732:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004736:	428b      	cmp	r3, r1
 8004738:	d055      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 800473a:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 800473e:	3180      	adds	r1, #128	@ 0x80
 8004740:	428b      	cmp	r3, r1
 8004742:	d050      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 8004744:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004748:	428b      	cmp	r3, r1
 800474a:	d04c      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 800474c:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004750:	3180      	adds	r1, #128	@ 0x80
 8004752:	428b      	cmp	r3, r1
 8004754:	d047      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 8004756:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 800475a:	428b      	cmp	r3, r1
 800475c:	d043      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 800475e:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004762:	3180      	adds	r1, #128	@ 0x80
 8004764:	428b      	cmp	r3, r1
 8004766:	d03e      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 8004768:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 800476c:	428b      	cmp	r3, r1
 800476e:	d03a      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 8004770:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004774:	3180      	adds	r1, #128	@ 0x80
 8004776:	428b      	cmp	r3, r1
 8004778:	d035      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 800477a:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 800477e:	428b      	cmp	r3, r1
 8004780:	d031      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 8004782:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004786:	3180      	adds	r1, #128	@ 0x80
 8004788:	428b      	cmp	r3, r1
 800478a:	d02c      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 800478c:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004790:	428b      	cmp	r3, r1
 8004792:	d028      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 8004794:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004798:	3180      	adds	r1, #128	@ 0x80
 800479a:	428b      	cmp	r3, r1
 800479c:	d023      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 800479e:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 80047a2:	428b      	cmp	r3, r1
 80047a4:	d01f      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 80047a6:	4283      	cmp	r3, r0
 80047a8:	d01d      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 80047aa:	3180      	adds	r1, #128	@ 0x80
 80047ac:	428b      	cmp	r3, r1
 80047ae:	d01a      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 80047b0:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 80047b4:	3180      	adds	r1, #128	@ 0x80
 80047b6:	428b      	cmp	r3, r1
 80047b8:	d015      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 80047ba:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 80047be:	428b      	cmp	r3, r1
 80047c0:	d011      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 80047c2:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 80047c6:	3180      	adds	r1, #128	@ 0x80
 80047c8:	428b      	cmp	r3, r1
 80047ca:	d00c      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 80047cc:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 80047d0:	428b      	cmp	r3, r1
 80047d2:	d008      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 80047d4:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 80047d8:	3180      	adds	r1, #128	@ 0x80
 80047da:	428b      	cmp	r3, r1
 80047dc:	d003      	beq.n	80047e6 <HAL_DMA_Init+0x166>
 80047de:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 80047e2:	428b      	cmp	r3, r1
 80047e4:	d10d      	bne.n	8004802 <HAL_DMA_Init+0x182>
  {
    tmpreg |= (hdma->Init.TransferAllocatedPort                                             |
               (((hdma->Init.DestBurstLength - 1U) << DMA_CTR1_DBL_1_Pos) & DMA_CTR1_DBL_1) |
 80047e6:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 80047e8:	3901      	subs	r1, #1
 80047ea:	0509      	lsls	r1, r1, #20
 80047ec:	f001 717c 	and.w	r1, r1, #66060288	@ 0x3f00000
 80047f0:	4311      	orrs	r1, r2
 80047f2:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80047f4:	4311      	orrs	r1, r2
               (((hdma->Init.SrcBurstLength - 1U) << DMA_CTR1_SBL_1_Pos) & DMA_CTR1_SBL_1));
 80047f6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80047f8:	3a01      	subs	r2, #1
 80047fa:	0112      	lsls	r2, r2, #4
 80047fc:	f402 727c 	and.w	r2, r2, #1008	@ 0x3f0
    tmpreg |= (hdma->Init.TransferAllocatedPort                                             |
 8004800:	430a      	orrs	r2, r1
  }

  /* Write DMA Channel Transfer Register 1 (CTR1) */
  MODIFY_REG(hdma->Instance->CTR1, ~(DMA_CTR1_SSEC | DMA_CTR1_DSEC), tmpreg);
 8004802:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 8004804:	f001 2180 	and.w	r1, r1, #2147516416	@ 0x80008000
 8004808:	430a      	orrs	r2, r1
 800480a:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Prepare DMA Channel Transfer Register 2 (CTR2) value *************************************************************/
  tmpreg = hdma->Init.BlkHWRequest | (hdma->Init.Request & DMA_CTR2_REQSEL) | hdma->Init.TransferEventMode;
 800480c:	68a1      	ldr	r1, [r4, #8]
 800480e:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8004810:	4311      	orrs	r1, r2
 8004812:	6862      	ldr	r2, [r4, #4]
 8004814:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8004818:	4311      	orrs	r1, r2

  /* Memory to Peripheral Transfer */
  if ((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 800481a:	68e2      	ldr	r2, [r4, #12]
 800481c:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8004820:	f040 80de 	bne.w	80049e0 <HAL_DMA_Init+0x360>
  {
    if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8004824:	42ab      	cmp	r3, r5
 8004826:	f000 8087 	beq.w	8004938 <HAL_DMA_Init+0x2b8>
 800482a:	4a58      	ldr	r2, [pc, #352]	@ (800498c <HAL_DMA_Init+0x30c>)
 800482c:	4293      	cmp	r3, r2
 800482e:	f000 8083 	beq.w	8004938 <HAL_DMA_Init+0x2b8>
 8004832:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004836:	3280      	adds	r2, #128	@ 0x80
 8004838:	4293      	cmp	r3, r2
 800483a:	d07d      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 800483c:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004840:	4293      	cmp	r3, r2
 8004842:	d079      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 8004844:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004848:	3280      	adds	r2, #128	@ 0x80
 800484a:	4293      	cmp	r3, r2
 800484c:	d074      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 800484e:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004852:	4293      	cmp	r3, r2
 8004854:	d070      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 8004856:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800485a:	3280      	adds	r2, #128	@ 0x80
 800485c:	4293      	cmp	r3, r2
 800485e:	d06b      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 8004860:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004864:	4293      	cmp	r3, r2
 8004866:	d067      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 8004868:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800486c:	3280      	adds	r2, #128	@ 0x80
 800486e:	4293      	cmp	r3, r2
 8004870:	d062      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 8004872:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004876:	4293      	cmp	r3, r2
 8004878:	d05e      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 800487a:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800487e:	3280      	adds	r2, #128	@ 0x80
 8004880:	4293      	cmp	r3, r2
 8004882:	d059      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 8004884:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004888:	4293      	cmp	r3, r2
 800488a:	d055      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 800488c:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004890:	3280      	adds	r2, #128	@ 0x80
 8004892:	4293      	cmp	r3, r2
 8004894:	d050      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 8004896:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800489a:	4293      	cmp	r3, r2
 800489c:	d04c      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 800489e:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80048a2:	3280      	adds	r2, #128	@ 0x80
 80048a4:	4293      	cmp	r3, r2
 80048a6:	d047      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 80048a8:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80048ac:	4293      	cmp	r3, r2
 80048ae:	d043      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 80048b0:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80048b4:	3280      	adds	r2, #128	@ 0x80
 80048b6:	4293      	cmp	r3, r2
 80048b8:	d03e      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 80048ba:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80048be:	4293      	cmp	r3, r2
 80048c0:	d03a      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 80048c2:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80048c6:	3280      	adds	r2, #128	@ 0x80
 80048c8:	4293      	cmp	r3, r2
 80048ca:	d035      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 80048cc:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80048d0:	4293      	cmp	r3, r2
 80048d2:	d031      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 80048d4:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80048d8:	3280      	adds	r2, #128	@ 0x80
 80048da:	4293      	cmp	r3, r2
 80048dc:	d02c      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 80048de:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80048e2:	4293      	cmp	r3, r2
 80048e4:	d028      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 80048e6:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80048ea:	3280      	adds	r2, #128	@ 0x80
 80048ec:	4293      	cmp	r3, r2
 80048ee:	d023      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 80048f0:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80048f4:	4293      	cmp	r3, r2
 80048f6:	d01f      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 80048f8:	4283      	cmp	r3, r0
 80048fa:	d01d      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 80048fc:	3280      	adds	r2, #128	@ 0x80
 80048fe:	4293      	cmp	r3, r2
 8004900:	d01a      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 8004902:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004906:	3280      	adds	r2, #128	@ 0x80
 8004908:	4293      	cmp	r3, r2
 800490a:	d015      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 800490c:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004910:	4293      	cmp	r3, r2
 8004912:	d011      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 8004914:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004918:	3280      	adds	r2, #128	@ 0x80
 800491a:	4293      	cmp	r3, r2
 800491c:	d00c      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 800491e:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004922:	4293      	cmp	r3, r2
 8004924:	d008      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 8004926:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800492a:	3280      	adds	r2, #128	@ 0x80
 800492c:	4293      	cmp	r3, r2
 800492e:	d003      	beq.n	8004938 <HAL_DMA_Init+0x2b8>
 8004930:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004934:	4293      	cmp	r3, r2
 8004936:	d101      	bne.n	800493c <HAL_DMA_Init+0x2bc>
    {
      tmpreg |= DMA_CTR2_DREQ;
 8004938:	f441 6180 	orr.w	r1, r1, #1024	@ 0x400
  {
    /* Nothing to do */
  }

  /* Write DMA Channel Transfer Register 2 (CTR2) */
  MODIFY_REG(hdma->Instance->CTR2, (DMA_CTR2_TCEM  | DMA_CTR2_TRIGPOL | DMA_CTR2_TRIGSEL | DMA_CTR2_TRIGM |
 800493c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44

  /* Write DMA Channel Block Register 1 (CBR1) ************************************************************************/
  WRITE_REG(hdma->Instance->CBR1, 0U);

  /* If 2D Addressing is supported by current channel */
  if (IS_DMA_2D_ADDRESSING_INSTANCE(hdma->Instance) != 0U)
 800493e:	4283      	cmp	r3, r0
  MODIFY_REG(hdma->Instance->CTR2, (DMA_CTR2_TCEM  | DMA_CTR2_TRIGPOL | DMA_CTR2_TRIGSEL | DMA_CTR2_TRIGM |
 8004940:	f022 4243 	bic.w	r2, r2, #3271557120	@ 0xc3000000
 8004944:	f422 127f 	bic.w	r2, r2, #4177920	@ 0x3fc000
 8004948:	f422 6267 	bic.w	r2, r2, #3696	@ 0xe70
 800494c:	f022 020f 	bic.w	r2, r2, #15
 8004950:	ea42 0201 	orr.w	r2, r2, r1
 8004954:	645a      	str	r2, [r3, #68]	@ 0x44
  WRITE_REG(hdma->Instance->CBR1, 0U);
 8004956:	f04f 0200 	mov.w	r2, #0
 800495a:	649a      	str	r2, [r3, #72]	@ 0x48
  if (IS_DMA_2D_ADDRESSING_INSTANCE(hdma->Instance) != 0U)
 800495c:	d027      	beq.n	80049ae <HAL_DMA_Init+0x32e>
 800495e:	4a0c      	ldr	r2, [pc, #48]	@ (8004990 <HAL_DMA_Init+0x310>)
 8004960:	4293      	cmp	r3, r2
 8004962:	d024      	beq.n	80049ae <HAL_DMA_Init+0x32e>
 8004964:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004968:	3280      	adds	r2, #128	@ 0x80
 800496a:	4293      	cmp	r3, r2
 800496c:	d01f      	beq.n	80049ae <HAL_DMA_Init+0x32e>
 800496e:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004972:	4293      	cmp	r3, r2
 8004974:	d01b      	beq.n	80049ae <HAL_DMA_Init+0x32e>
 8004976:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800497a:	3280      	adds	r2, #128	@ 0x80
 800497c:	4293      	cmp	r3, r2
 800497e:	d016      	beq.n	80049ae <HAL_DMA_Init+0x32e>
 8004980:	e008      	b.n	8004994 <HAL_DMA_Init+0x314>
 8004982:	bf00      	nop
 8004984:	40020050 	.word	0x40020050
 8004988:	40020650 	.word	0x40020650
 800498c:	50020050 	.word	0x50020050
 8004990:	50020650 	.word	0x50020650
 8004994:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004998:	4293      	cmp	r3, r2
 800499a:	d008      	beq.n	80049ae <HAL_DMA_Init+0x32e>
 800499c:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80049a0:	3280      	adds	r2, #128	@ 0x80
 80049a2:	4293      	cmp	r3, r2
 80049a4:	d003      	beq.n	80049ae <HAL_DMA_Init+0x32e>
 80049a6:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80049aa:	4293      	cmp	r3, r2
 80049ac:	d102      	bne.n	80049b4 <HAL_DMA_Init+0x334>
  {
    /* Write DMA Channel Transfer Register 3 (CTR3) *******************************************************************/
    WRITE_REG(hdma->Instance->CTR3, 0U);
 80049ae:	2200      	movs	r2, #0
 80049b0:	655a      	str	r2, [r3, #84]	@ 0x54

    /* Write DMA Channel Block Register 2 (CBR2) **********************************************************************/
    WRITE_REG(hdma->Instance->CBR2, 0U);
 80049b2:	659a      	str	r2, [r3, #88]	@ 0x58
  }

  /* Write DMA Channel linked-list address register (CLLR) ************************************************************/
  WRITE_REG(hdma->Instance->CLLR, 0U);
 80049b4:	2000      	movs	r0, #0
 80049b6:	67d8      	str	r0, [r3, #124]	@ 0x7c
  hdma->Mode = hdma->Init.Mode;
 80049b8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80049ba:	65a0      	str	r0, [r4, #88]	@ 0x58
  hdma->Mode = hdma->Init.Mode;
 80049bc:	6523      	str	r3, [r4, #80]	@ 0x50
  hdma->State = HAL_DMA_STATE_READY;
 80049be:	2301      	movs	r3, #1
 80049c0:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
  return HAL_OK;
 80049c4:	e00b      	b.n	80049de <HAL_DMA_Init+0x35e>
    if ((HAL_GetTick() - tickstart) > HAL_TIMEOUT_DMA_ABORT)
 80049c6:	f7ff fd15 	bl	80043f4 <HAL_GetTick>
 80049ca:	1b40      	subs	r0, r0, r5
 80049cc:	2805      	cmp	r0, #5
 80049ce:	f67f ae6a 	bls.w	80046a6 <HAL_DMA_Init+0x26>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80049d2:	2310      	movs	r3, #16
 80049d4:	65a3      	str	r3, [r4, #88]	@ 0x58
      hdma->State = HAL_DMA_STATE_ERROR;
 80049d6:	2303      	movs	r3, #3
 80049d8:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
    return HAL_ERROR;
 80049dc:	2001      	movs	r0, #1
}
 80049de:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hdma->Init.Direction) == DMA_MEMORY_TO_MEMORY)
 80049e0:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
    tmpreg |= DMA_CTR2_SWREQ;
 80049e4:	bf08      	it	eq
 80049e6:	f441 7100 	orreq.w	r1, r1, #512	@ 0x200
 80049ea:	e7a7      	b.n	800493c <HAL_DMA_Init+0x2bc>

080049ec <HAL_DMA_Abort>:
{
 80049ec:	b538      	push	{r3, r4, r5, lr}
 80049ee:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
 80049f0:	f7ff fd00 	bl	80043f4 <HAL_GetTick>
 80049f4:	4605      	mov	r5, r0
  if (hdma == NULL)
 80049f6:	b144      	cbz	r4, 8004a0a <HAL_DMA_Abort+0x1e>
  if (hdma->State != HAL_DMA_STATE_BUSY)
 80049f8:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 80049fc:	2b02      	cmp	r3, #2
 80049fe:	d006      	beq.n	8004a0e <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004a00:	2320      	movs	r3, #32
 8004a02:	65a3      	str	r3, [r4, #88]	@ 0x58
    __HAL_UNLOCK(hdma);
 8004a04:	2300      	movs	r3, #0
 8004a06:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
    return HAL_ERROR;
 8004a0a:	2001      	movs	r0, #1
}
 8004a0c:	bd38      	pop	{r3, r4, r5, pc}
    hdma->Instance->CCR |= DMA_CCR_SUSP;
 8004a0e:	6822      	ldr	r2, [r4, #0]
 8004a10:	6953      	ldr	r3, [r2, #20]
 8004a12:	f043 0304 	orr.w	r3, r3, #4
 8004a16:	6153      	str	r3, [r2, #20]
    hdma->State = HAL_DMA_STATE_SUSPEND;
 8004a18:	2305      	movs	r3, #5
 8004a1a:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
    while ((hdma->Instance->CSR & DMA_CSR_SUSPF) == 0U)
 8004a1e:	6823      	ldr	r3, [r4, #0]
 8004a20:	691a      	ldr	r2, [r3, #16]
 8004a22:	0490      	lsls	r0, r2, #18
 8004a24:	d519      	bpl.n	8004a5a <HAL_DMA_Abort+0x6e>
    hdma->Instance->CCR |= DMA_CCR_RESET;
 8004a26:	695a      	ldr	r2, [r3, #20]
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8004a28:	6d21      	ldr	r1, [r4, #80]	@ 0x50
    hdma->Instance->CCR |= DMA_CCR_RESET;
 8004a2a:	f042 0202 	orr.w	r2, r2, #2
 8004a2e:	615a      	str	r2, [r3, #20]
    hdma->State = HAL_DMA_STATE_ABORT;
 8004a30:	2204      	movs	r2, #4
 8004a32:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
    __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_TC | DMA_FLAG_HT | DMA_FLAG_DTE | DMA_FLAG_ULE | DMA_FLAG_USE | DMA_FLAG_SUSP |
 8004a36:	f44f 42fe 	mov.w	r2, #32512	@ 0x7f00
 8004a3a:	60da      	str	r2, [r3, #12]
    hdma->State = HAL_DMA_STATE_READY;
 8004a3c:	2201      	movs	r2, #1
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8004a3e:	0609      	lsls	r1, r1, #24
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8004a40:	bf48      	it	mi
 8004a42:	6f61      	ldrmi	r1, [r4, #116]	@ 0x74
    hdma->State = HAL_DMA_STATE_READY;
 8004a44:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hdma);
 8004a48:	f04f 0000 	mov.w	r0, #0
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8004a4c:	bf42      	ittt	mi
 8004a4e:	730a      	strbmi	r2, [r1, #12]
      hdma->Instance->CBR1 = 0U;
 8004a50:	2200      	movmi	r2, #0
 8004a52:	649a      	strmi	r2, [r3, #72]	@ 0x48
    __HAL_UNLOCK(hdma);
 8004a54:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
  return HAL_OK;
 8004a58:	e7d8      	b.n	8004a0c <HAL_DMA_Abort+0x20>
      if ((HAL_GetTick() - tickstart) > HAL_TIMEOUT_DMA_ABORT)
 8004a5a:	f7ff fccb 	bl	80043f4 <HAL_GetTick>
 8004a5e:	1b40      	subs	r0, r0, r5
 8004a60:	2805      	cmp	r0, #5
 8004a62:	d9dc      	bls.n	8004a1e <HAL_DMA_Abort+0x32>
        hdma->ErrorCode |= HAL_DMA_ERROR_TIMEOUT;
 8004a64:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8004a66:	f043 0310 	orr.w	r3, r3, #16
 8004a6a:	65a3      	str	r3, [r4, #88]	@ 0x58
        hdma->State = HAL_DMA_STATE_ERROR;
 8004a6c:	2303      	movs	r3, #3
 8004a6e:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
        if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8004a72:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8004a74:	061d      	lsls	r5, r3, #24
 8004a76:	d5c5      	bpl.n	8004a04 <HAL_DMA_Abort+0x18>
          hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8004a78:	2201      	movs	r2, #1
 8004a7a:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8004a7c:	731a      	strb	r2, [r3, #12]
        __HAL_UNLOCK(hdma);
 8004a7e:	e7c1      	b.n	8004a04 <HAL_DMA_Abort+0x18>

08004a80 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8004a80:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8004a82:	4604      	mov	r4, r0
 8004a84:	2800      	cmp	r0, #0
 8004a86:	d036      	beq.n	8004af6 <HAL_DMA2D_Init+0x76>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8004a88:	f890 3059 	ldrb.w	r3, [r0, #89]	@ 0x59
 8004a8c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004a90:	b91b      	cbnz	r3, 8004a9a <HAL_DMA2D_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8004a92:	f880 2058 	strb.w	r2, [r0, #88]	@ 0x58
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8004a96:	f7fc fae7 	bl	8001068 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004a9a:	2302      	movs	r3, #2
 8004a9c:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8004aa0:	6823      	ldr	r3, [r4, #0]
 8004aa2:	69e0      	ldr	r0, [r4, #28]
 8004aa4:	6819      	ldr	r1, [r3, #0]
 8004aa6:	6862      	ldr	r2, [r4, #4]
 8004aa8:	f421 21e0 	bic.w	r1, r1, #458752	@ 0x70000
 8004aac:	4302      	orrs	r2, r0
 8004aae:	f021 0140 	bic.w	r1, r1, #64	@ 0x40
 8004ab2:	430a      	orrs	r2, r1
 8004ab4:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 8004ab6:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8004ab8:	69a0      	ldr	r0, [r4, #24]
 8004aba:	68a2      	ldr	r2, [r4, #8]
 8004abc:	f421 7183 	bic.w	r1, r1, #262	@ 0x106
 8004ac0:	4302      	orrs	r2, r0
 8004ac2:	f021 0101 	bic.w	r1, r1, #1
 8004ac6:	430a      	orrs	r2, r1
 8004ac8:	635a      	str	r2, [r3, #52]	@ 0x34
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004aca:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8004acc:	68e1      	ldr	r1, [r4, #12]
 8004ace:	0c12      	lsrs	r2, r2, #16
 8004ad0:	0412      	lsls	r2, r2, #16
 8004ad2:	430a      	orrs	r2, r1
 8004ad4:	641a      	str	r2, [r3, #64]	@ 0x40
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
 8004ad6:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8004ad8:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
 8004adc:	0552      	lsls	r2, r2, #21
 8004ade:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
 8004ae2:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
 8004ae6:	430a      	orrs	r2, r1
 8004ae8:	635a      	str	r2, [r3, #52]	@ 0x34
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004aea:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004aec:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004aee:	65e0      	str	r0, [r4, #92]	@ 0x5c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004af0:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59

  return HAL_OK;
}
 8004af4:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004af6:	2001      	movs	r0, #1
 8004af8:	e7fc      	b.n	8004af4 <HAL_DMA2D_Init+0x74>

08004afa <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 8004afa:	4770      	bx	lr

08004afc <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 8004afc:	4770      	bx	lr

08004afe <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004afe:	6803      	ldr	r3, [r0, #0]
{
 8004b00:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004b02:	685e      	ldr	r6, [r3, #4]
{
 8004b04:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004b06:	07f2      	lsls	r2, r6, #31
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8004b08:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004b0a:	d514      	bpl.n	8004b36 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 8004b0c:	05e9      	lsls	r1, r5, #23
 8004b0e:	d512      	bpl.n	8004b36 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004b10:	681a      	ldr	r2, [r3, #0]
 8004b12:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8004b16:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8004b18:	6dc2      	ldr	r2, [r0, #92]	@ 0x5c
 8004b1a:	f042 0201 	orr.w	r2, r2, #1
 8004b1e:	65c2      	str	r2, [r0, #92]	@ 0x5c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8004b20:	2201      	movs	r2, #1
 8004b22:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004b24:	2304      	movs	r3, #4
 8004b26:	f880 3059 	strb.w	r3, [r0, #89]	@ 0x59
      __HAL_UNLOCK(hdma2d);
 8004b2a:	2300      	movs	r3, #0
 8004b2c:	f880 3058 	strb.w	r3, [r0, #88]	@ 0x58
      if (hdma2d->XferErrorCallback != NULL)
 8004b30:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8004b32:	b103      	cbz	r3, 8004b36 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 8004b34:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8004b36:	06b2      	lsls	r2, r6, #26
 8004b38:	d516      	bpl.n	8004b68 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 8004b3a:	04ab      	lsls	r3, r5, #18
 8004b3c:	d514      	bpl.n	8004b68 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8004b3e:	6823      	ldr	r3, [r4, #0]
 8004b40:	681a      	ldr	r2, [r3, #0]
 8004b42:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8004b46:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8004b48:	2220      	movs	r2, #32
 8004b4a:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8004b4c:	6de3      	ldr	r3, [r4, #92]	@ 0x5c
 8004b4e:	f043 0302 	orr.w	r3, r3, #2
 8004b52:	65e3      	str	r3, [r4, #92]	@ 0x5c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004b54:	2304      	movs	r3, #4
 8004b56:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
      __HAL_UNLOCK(hdma2d);
 8004b5a:	2300      	movs	r3, #0
 8004b5c:	f884 3058 	strb.w	r3, [r4, #88]	@ 0x58
      if (hdma2d->XferErrorCallback != NULL)
 8004b60:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004b62:	b10b      	cbz	r3, 8004b68 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8004b64:	4620      	mov	r0, r4
 8004b66:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8004b68:	0730      	lsls	r0, r6, #28
 8004b6a:	d516      	bpl.n	8004b9a <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8004b6c:	0529      	lsls	r1, r5, #20
 8004b6e:	d514      	bpl.n	8004b9a <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8004b70:	6823      	ldr	r3, [r4, #0]
 8004b72:	681a      	ldr	r2, [r3, #0]
 8004b74:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004b78:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004b7a:	2208      	movs	r2, #8
 8004b7c:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8004b7e:	6de3      	ldr	r3, [r4, #92]	@ 0x5c
 8004b80:	f043 0304 	orr.w	r3, r3, #4
 8004b84:	65e3      	str	r3, [r4, #92]	@ 0x5c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004b86:	2304      	movs	r3, #4
 8004b88:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
      __HAL_UNLOCK(hdma2d);
 8004b8c:	2300      	movs	r3, #0
 8004b8e:	f884 3058 	strb.w	r3, [r4, #88]	@ 0x58
      if (hdma2d->XferErrorCallback != NULL)
 8004b92:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004b94:	b10b      	cbz	r3, 8004b9a <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8004b96:	4620      	mov	r0, r4
 8004b98:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8004b9a:	0772      	lsls	r2, r6, #29
 8004b9c:	d50b      	bpl.n	8004bb6 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 8004b9e:	056b      	lsls	r3, r5, #21
 8004ba0:	d509      	bpl.n	8004bb6 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004ba2:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004ba4:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004ba6:	681a      	ldr	r2, [r3, #0]
 8004ba8:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004bac:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8004bae:	2204      	movs	r2, #4
 8004bb0:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004bb2:	f7ff ffa2 	bl	8004afa <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004bb6:	07b0      	lsls	r0, r6, #30
 8004bb8:	d514      	bpl.n	8004be4 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8004bba:	05a9      	lsls	r1, r5, #22
 8004bbc:	d512      	bpl.n	8004be4 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8004bbe:	6823      	ldr	r3, [r4, #0]
 8004bc0:	681a      	ldr	r2, [r3, #0]
 8004bc2:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8004bc6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8004bc8:	2202      	movs	r2, #2
 8004bca:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004bcc:	6de3      	ldr	r3, [r4, #92]	@ 0x5c
 8004bce:	65e3      	str	r3, [r4, #92]	@ 0x5c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004bd0:	2301      	movs	r3, #1
 8004bd2:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
      __HAL_UNLOCK(hdma2d);
 8004bd6:	2300      	movs	r3, #0
 8004bd8:	f884 3058 	strb.w	r3, [r4, #88]	@ 0x58
      if (hdma2d->XferCpltCallback != NULL)
 8004bdc:	6a23      	ldr	r3, [r4, #32]
 8004bde:	b10b      	cbz	r3, 8004be4 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 8004be0:	4620      	mov	r0, r4
 8004be2:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8004be4:	06f2      	lsls	r2, r6, #27
 8004be6:	d513      	bpl.n	8004c10 <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004be8:	04eb      	lsls	r3, r5, #19
 8004bea:	d511      	bpl.n	8004c10 <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004bec:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004bee:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004bf0:	681a      	ldr	r2, [r3, #0]
 8004bf2:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8004bf6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004bf8:	2210      	movs	r2, #16
 8004bfa:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004bfc:	6de3      	ldr	r3, [r4, #92]	@ 0x5c
 8004bfe:	65e3      	str	r3, [r4, #92]	@ 0x5c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004c00:	2301      	movs	r3, #1
 8004c02:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
      __HAL_UNLOCK(hdma2d);
 8004c06:	2300      	movs	r3, #0
 8004c08:	f884 3058 	strb.w	r3, [r4, #88]	@ 0x58
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004c0c:	f7ff ff76 	bl	8004afc <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8004c10:	bd70      	pop	{r4, r5, r6, pc}

08004c12 <DSI_ShortWrite.constprop.0>:
  *                 This parameter can be any value of @arg DSI_DCS_Command or a
  *                 generic command code.
  * @param  Param2  DSC parameter or second generic parameter.
  * @retval HAL status
  */
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
 8004c12:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004c16:	4607      	mov	r7, r0
 8004c18:	460d      	mov	r5, r1
 8004c1a:	4614      	mov	r4, r2
 8004c1c:	461e      	mov	r6, r3
                                        uint32_t Param2)
{
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 8004c1e:	f7ff fbe9 	bl	80043f4 <HAL_GetTick>
 8004c22:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 8004c24:	683b      	ldr	r3, [r7, #0]
 8004c26:	6f5a      	ldr	r2, [r3, #116]	@ 0x74
 8004c28:	07d2      	lsls	r2, r2, #31
 8004c2a:	d50a      	bpl.n	8004c42 <DSI_ShortWrite.constprop.0+0x30>

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));

  return HAL_OK;
 8004c2c:	2000      	movs	r0, #0
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 8004c2e:	9a06      	ldr	r2, [sp, #24]
 8004c30:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
 8004c34:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8004c38:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 8004c3c:	66dc      	str	r4, [r3, #108]	@ 0x6c
}
 8004c3e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8004c42:	f7ff fbd7 	bl	80043f4 <HAL_GetTick>
 8004c46:	eba0 0008 	sub.w	r0, r0, r8
 8004c4a:	2864      	cmp	r0, #100	@ 0x64
 8004c4c:	d9ea      	bls.n	8004c24 <DSI_ShortWrite.constprop.0+0x12>
      return HAL_TIMEOUT;
 8004c4e:	2003      	movs	r0, #3
 8004c50:	e7f5      	b.n	8004c3e <DSI_ShortWrite.constprop.0+0x2c>

08004c52 <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004c52:	7e03      	ldrb	r3, [r0, #24]
{
 8004c54:	4602      	mov	r2, r0
  __HAL_LOCK(hdsi);
 8004c56:	2b01      	cmp	r3, #1
 8004c58:	d064      	beq.n	8004d24 <HAL_DSI_ConfigErrorMonitor+0xd2>

  hdsi->Instance->IER[0U] = 0U;
 8004c5a:	6803      	ldr	r3, [r0, #0]
 8004c5c:	2000      	movs	r0, #0
 8004c5e:	f8c3 00c4 	str.w	r0, [r3, #196]	@ 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8004c62:	f8c3 00c8 	str.w	r0, [r3, #200]	@ 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 8004c66:	07c8      	lsls	r0, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 8004c68:	bf48      	it	mi
 8004c6a:	f8d3 00c4 	ldrmi.w	r0, [r3, #196]	@ 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 8004c6e:	6211      	str	r1, [r2, #32]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 8004c70:	bf42      	ittt	mi
 8004c72:	ea6f 4010 	mvnmi.w	r0, r0, lsr #16
 8004c76:	ea6f 4000 	mvnmi.w	r0, r0, lsl #16
 8004c7a:	f8c3 00c4 	strmi.w	r0, [r3, #196]	@ 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 8004c7e:	0788      	lsls	r0, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 8004c80:	bf42      	ittt	mi
 8004c82:	f8d3 00c4 	ldrmi.w	r0, [r3, #196]	@ 0xc4
 8004c86:	f440 10f8 	orrmi.w	r0, r0, #2031616	@ 0x1f0000
 8004c8a:	f8c3 00c4 	strmi.w	r0, [r3, #196]	@ 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 8004c8e:	0748      	lsls	r0, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 8004c90:	bf42      	ittt	mi
 8004c92:	f8d3 00c8 	ldrmi.w	r0, [r3, #200]	@ 0xc8
 8004c96:	f040 0001 	orrmi.w	r0, r0, #1
 8004c9a:	f8c3 00c8 	strmi.w	r0, [r3, #200]	@ 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 8004c9e:	0708      	lsls	r0, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 8004ca0:	bf42      	ittt	mi
 8004ca2:	f8d3 00c8 	ldrmi.w	r0, [r3, #200]	@ 0xc8
 8004ca6:	f040 0002 	orrmi.w	r0, r0, #2
 8004caa:	f8c3 00c8 	strmi.w	r0, [r3, #200]	@ 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 8004cae:	06c8      	lsls	r0, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 8004cb0:	bf42      	ittt	mi
 8004cb2:	f8d3 00c8 	ldrmi.w	r0, [r3, #200]	@ 0xc8
 8004cb6:	f040 000c 	orrmi.w	r0, r0, #12
 8004cba:	f8c3 00c8 	strmi.w	r0, [r3, #200]	@ 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 8004cbe:	0688      	lsls	r0, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 8004cc0:	bf42      	ittt	mi
 8004cc2:	f8d3 00c8 	ldrmi.w	r0, [r3, #200]	@ 0xc8
 8004cc6:	f040 0010 	orrmi.w	r0, r0, #16
 8004cca:	f8c3 00c8 	strmi.w	r0, [r3, #200]	@ 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 8004cce:	0648      	lsls	r0, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 8004cd0:	bf42      	ittt	mi
 8004cd2:	f8d3 00c8 	ldrmi.w	r0, [r3, #200]	@ 0xc8
 8004cd6:	f040 0020 	orrmi.w	r0, r0, #32
 8004cda:	f8c3 00c8 	strmi.w	r0, [r3, #200]	@ 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 8004cde:	0608      	lsls	r0, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 8004ce0:	bf42      	ittt	mi
 8004ce2:	f8d3 00c8 	ldrmi.w	r0, [r3, #200]	@ 0xc8
 8004ce6:	f040 0040 	orrmi.w	r0, r0, #64	@ 0x40
 8004cea:	f8c3 00c8 	strmi.w	r0, [r3, #200]	@ 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 8004cee:	05c8      	lsls	r0, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 8004cf0:	bf42      	ittt	mi
 8004cf2:	f8d3 00c8 	ldrmi.w	r0, [r3, #200]	@ 0xc8
 8004cf6:	f040 0080 	orrmi.w	r0, r0, #128	@ 0x80
 8004cfa:	f8c3 00c8 	strmi.w	r0, [r3, #200]	@ 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 8004cfe:	0588      	lsls	r0, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 8004d00:	bf42      	ittt	mi
 8004d02:	f8d3 00c8 	ldrmi.w	r0, [r3, #200]	@ 0xc8
 8004d06:	f440 50f8 	orrmi.w	r0, r0, #7936	@ 0x1f00
 8004d0a:	f8c3 00c8 	strmi.w	r0, [r3, #200]	@ 0xc8
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PBU_MASK;
  }
  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 8004d0e:	2000      	movs	r0, #0
  if ((ActiveErrors & HAL_DSI_ERROR_PBU) != 0U)
 8004d10:	0549      	lsls	r1, r1, #21
    hdsi->Instance->IER[1U] |= DSI_ERROR_PBU_MASK;
 8004d12:	bf42      	ittt	mi
 8004d14:	f8d3 10c8 	ldrmi.w	r1, [r3, #200]	@ 0xc8
 8004d18:	f441 2100 	orrmi.w	r1, r1, #524288	@ 0x80000
 8004d1c:	f8c3 10c8 	strmi.w	r1, [r3, #200]	@ 0xc8
  __HAL_UNLOCK(hdsi);
 8004d20:	7610      	strb	r0, [r2, #24]

  return HAL_OK;
 8004d22:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004d24:	2002      	movs	r0, #2
}
 8004d26:	4770      	bx	lr

08004d28 <HAL_DSI_Init>:
{
 8004d28:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004d2a:	460d      	mov	r5, r1
  if (hdsi == NULL)
 8004d2c:	4604      	mov	r4, r0
 8004d2e:	2800      	cmp	r0, #0
 8004d30:	f000 80ec 	beq.w	8004f0c <HAL_DSI_Init+0x1e4>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 8004d34:	7e43      	ldrb	r3, [r0, #25]
 8004d36:	b90b      	cbnz	r3, 8004d3c <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 8004d38:	f7fc f9ba 	bl	80010b0 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 8004d3c:	2303      	movs	r3, #3
  hdsi->Instance->BCFGR |= DSI_BCFGR_PWRUP;
 8004d3e:	6822      	ldr	r2, [r4, #0]
  hdsi->State = HAL_DSI_STATE_BUSY;
 8004d40:	7663      	strb	r3, [r4, #25]
  hdsi->Instance->BCFGR |= DSI_BCFGR_PWRUP;
 8004d42:	f8d2 3808 	ldr.w	r3, [r2, #2056]	@ 0x808
  HAL_Delay(2);
 8004d46:	2002      	movs	r0, #2
  hdsi->Instance->BCFGR |= DSI_BCFGR_PWRUP;
 8004d48:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004d4c:	f8c2 3808 	str.w	r3, [r2, #2056]	@ 0x808
  HAL_Delay(2);
 8004d50:	f7ff fb56 	bl	8004400 <HAL_Delay>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 8004d54:	6823      	ldr	r3, [r4, #0]
 8004d56:	f8d3 2430 	ldr.w	r2, [r3, #1072]	@ 0x430
 8004d5a:	f022 52ff 	bic.w	r2, r2, #534773760	@ 0x1fe00000
 8004d5e:	f422 12ff 	bic.w	r2, r2, #2088960	@ 0x1fe000
 8004d62:	f422 52ff 	bic.w	r2, r2, #8160	@ 0x1fe0
 8004d66:	f022 021c 	bic.w	r2, r2, #28
 8004d6a:	f8c3 2430 	str.w	r2, [r3, #1072]	@ 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 8004d6e:	e9d5 0200 	ldrd	r0, r2, [r5]
 8004d72:	02d2      	lsls	r2, r2, #11
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 8004d74:	ea42 0280 	orr.w	r2, r2, r0, lsl #2
                            ((PLLInit->PLLODF) << DSI_WRPCR_PLL_ODF_Pos));
 8004d78:	68a8      	ldr	r0, [r5, #8]
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 8004d7a:	f8d3 1430 	ldr.w	r1, [r3, #1072]	@ 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 8004d7e:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 8004d82:	430a      	orrs	r2, r1
 8004d84:	f8c3 2430 	str.w	r2, [r3, #1072]	@ 0x430
  hdsi->Instance->DPCBCR &= ~DSI_DPCBCR;
 8004d88:	f8d3 2c04 	ldr.w	r2, [r3, #3076]	@ 0xc04
 8004d8c:	f022 02f8 	bic.w	r2, r2, #248	@ 0xf8
 8004d90:	f8c3 2c04 	str.w	r2, [r3, #3076]	@ 0xc04
  hdsi->Instance->DPCBCR |= (hdsi->Init.PHYFrequencyRange << DSI_DPCBCR_Pos);
 8004d94:	f8d3 1c04 	ldr.w	r1, [r3, #3076]	@ 0xc04
 8004d98:	6922      	ldr	r2, [r4, #16]
 8004d9a:	ea41 01c2 	orr.w	r1, r1, r2, lsl #3
 8004d9e:	f8c3 1c04 	str.w	r1, [r3, #3076]	@ 0xc04
  hdsi->Instance->DPCSRCR = DSI_DPHY_SLEW_HS_TX_SPEED;
 8004da2:	210e      	movs	r1, #14
 8004da4:	f8c3 1c34 	str.w	r1, [r3, #3124]	@ 0xc34
  hdsi->Instance->DPDL0BCR &= ~DSI_DPDL0BCR;
 8004da8:	f8d3 0c70 	ldr.w	r0, [r3, #3184]	@ 0xc70
 8004dac:	f020 001f 	bic.w	r0, r0, #31
 8004db0:	f8c3 0c70 	str.w	r0, [r3, #3184]	@ 0xc70
  hdsi->Instance->DPDL0BCR = (hdsi->Init.PHYFrequencyRange << DSI_DPDL0BCR_Pos);
 8004db4:	f8c3 2c70 	str.w	r2, [r3, #3184]	@ 0xc70
  hdsi->Instance->DPDL0SRCR = DSI_DPHY_SLEW_HS_TX_SPEED;
 8004db8:	f8c3 1ca0 	str.w	r1, [r3, #3232]	@ 0xca0
  hdsi->Instance->DPDL1BCR &= ~DSI_DPDL1BCR;
 8004dbc:	f8d3 0d08 	ldr.w	r0, [r3, #3336]	@ 0xd08
 8004dc0:	f020 001f 	bic.w	r0, r0, #31
 8004dc4:	f8c3 0d08 	str.w	r0, [r3, #3336]	@ 0xd08
  hdsi->Instance->DPDL1BCR = (hdsi->Init.PHYFrequencyRange << DSI_DPDL1BCR_Pos);
 8004dc8:	f8c3 2d08 	str.w	r2, [r3, #3336]	@ 0xd08
  hdsi->Instance->DPDL1SRCR = DSI_DPHY_SLEW_HS_TX_SPEED;
 8004dcc:	f8c3 1d38 	str.w	r1, [r3, #3384]	@ 0xd38
  hdsi->Instance->DPDL0HSOCR &= ~DSI_DPDL0HSOCR;
 8004dd0:	f8d3 1c5c 	ldr.w	r1, [r3, #3164]	@ 0xc5c
 8004dd4:	f021 01f0 	bic.w	r1, r1, #240	@ 0xf0
 8004dd8:	f8c3 1c5c 	str.w	r1, [r3, #3164]	@ 0xc5c
  hdsi->Instance->DPDL1HSOCR &= ~DSI_DPDL1HSOCR;
 8004ddc:	f8d3 1cf4 	ldr.w	r1, [r3, #3316]	@ 0xcf4
 8004de0:	f021 01f0 	bic.w	r1, r1, #240	@ 0xf0
 8004de4:	f8c3 1cf4 	str.w	r1, [r3, #3316]	@ 0xcf4
  if ((hdsi->Init.PHYFrequencyRange == DSI_DPHY_FRANGE_100MHZ_120MHZ) || \
 8004de8:	1e51      	subs	r1, r2, #1
 8004dea:	2901      	cmp	r1, #1
 8004dec:	d908      	bls.n	8004e00 <HAL_DSI_Init+0xd8>
 8004dee:	2a08      	cmp	r2, #8
 8004df0:	d80b      	bhi.n	8004e0a <HAL_DSI_Init+0xe2>
 8004df2:	e8df f002 	tbb	[pc, r2]
 8004df6:	0a80      	.short	0x0a80
 8004df8:	0580800a 	.word	0x0580800a
 8004dfc:	8280      	.short	0x8280
 8004dfe:	82          	.byte	0x82
 8004dff:	00          	.byte	0x00
    hdsi->Instance->DPDL0HSOCR = (DSI_HS_PREPARE_OFFSET0 << DSI_DPDL0HSOCR_Pos);
 8004e00:	2200      	movs	r2, #0
    hdsi->Instance->DPDL0HSOCR = (DSI_HS_PREPARE_OFFSET2 << DSI_DPDL0HSOCR_Pos);
 8004e02:	f8c3 2c5c 	str.w	r2, [r3, #3164]	@ 0xc5c
    hdsi->Instance->DPDL1HSOCR = (DSI_HS_PREPARE_OFFSET2 << DSI_DPDL1HSOCR_Pos);
 8004e06:	f8c3 2cf4 	str.w	r2, [r3, #3316]	@ 0xcf4
  hdsi->Instance->DPDL0LPXOCR &= ~DSI_DPDL0LPXOCR;
 8004e0a:	f8d3 2c60 	ldr.w	r2, [r3, #3168]	@ 0xc60
  hdsi->Instance->WRPCR |= (PLLInit->PLLVCORange << DSI_WRPCR_BC_Pos);
 8004e0e:	68e9      	ldr	r1, [r5, #12]
  hdsi->Instance->DPDL0LPXOCR &= ~DSI_DPDL0LPXOCR;
 8004e10:	f022 020f 	bic.w	r2, r2, #15
 8004e14:	f8c3 2c60 	str.w	r2, [r3, #3168]	@ 0xc60
  hdsi->Instance->DPDL1LPXOCR &= ~DSI_DPDL1LPXOCR;
 8004e18:	f8d3 2cf8 	ldr.w	r2, [r3, #3320]	@ 0xcf8
  HAL_Delay(1);
 8004e1c:	2001      	movs	r0, #1
  hdsi->Instance->DPDL1LPXOCR &= ~DSI_DPDL1LPXOCR;
 8004e1e:	f022 020f 	bic.w	r2, r2, #15
 8004e22:	f8c3 2cf8 	str.w	r2, [r3, #3320]	@ 0xcf8
  hdsi->Instance->DPDL0LPXOCR = hdsi->Init.PHYLowPowerOffset;
 8004e26:	6962      	ldr	r2, [r4, #20]
 8004e28:	f8c3 2c60 	str.w	r2, [r3, #3168]	@ 0xc60
  hdsi->Instance->DPDL1LPXOCR = hdsi->Init.PHYLowPowerOffset;
 8004e2c:	f8c3 2cf8 	str.w	r2, [r3, #3320]	@ 0xcf8
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_BC);
 8004e30:	f8d3 2430 	ldr.w	r2, [r3, #1072]	@ 0x430
 8004e34:	f022 5200 	bic.w	r2, r2, #536870912	@ 0x20000000
 8004e38:	f8c3 2430 	str.w	r2, [r3, #1072]	@ 0x430
  hdsi->Instance->WRPCR |= (PLLInit->PLLVCORange << DSI_WRPCR_BC_Pos);
 8004e3c:	f8d3 2430 	ldr.w	r2, [r3, #1072]	@ 0x430
 8004e40:	ea42 7241 	orr.w	r2, r2, r1, lsl #29
 8004e44:	f8c3 2430 	str.w	r2, [r3, #1072]	@ 0x430
  hdsi->Instance->WPTR |= (PLLInit->PLLChargePump << DSI_WPTR_CP_Pos);
 8004e48:	e9d5 2104 	ldrd	r2, r1, [r5, #16]
 8004e4c:	0212      	lsls	r2, r2, #8
 8004e4e:	ea42 3201 	orr.w	r2, r2, r1, lsl #12
  hdsi->Instance->WPTR &= ~(DSI_WPTR_LPF | DSI_WPTR_CP);
 8004e52:	f8d3 1434 	ldr.w	r1, [r3, #1076]	@ 0x434
 8004e56:	f421 417f 	bic.w	r1, r1, #65280	@ 0xff00
  hdsi->Instance->WPTR |= (PLLInit->PLLChargePump << DSI_WPTR_CP_Pos);
 8004e5a:	430a      	orrs	r2, r1
 8004e5c:	f8c3 2434 	str.w	r2, [r3, #1076]	@ 0x434
  __HAL_DSI_PLL_ENABLE(hdsi);
 8004e60:	2200      	movs	r2, #0
 8004e62:	9201      	str	r2, [sp, #4]
 8004e64:	f8d3 2430 	ldr.w	r2, [r3, #1072]	@ 0x430
 8004e68:	f042 0201 	orr.w	r2, r2, #1
 8004e6c:	f8c3 2430 	str.w	r2, [r3, #1072]	@ 0x430
 8004e70:	f8d3 3430 	ldr.w	r3, [r3, #1072]	@ 0x430
 8004e74:	f003 0301 	and.w	r3, r3, #1
 8004e78:	9301      	str	r3, [sp, #4]
 8004e7a:	9b01      	ldr	r3, [sp, #4]
  HAL_Delay(1);
 8004e7c:	f7ff fac0 	bl	8004400 <HAL_Delay>
  tickstart = HAL_GetTick();
 8004e80:	f7ff fab8 	bl	80043f4 <HAL_GetTick>
 8004e84:	4605      	mov	r5, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 8004e86:	6823      	ldr	r3, [r4, #0]
 8004e88:	f8d3 240c 	ldr.w	r2, [r3, #1036]	@ 0x40c
 8004e8c:	05d2      	lsls	r2, r2, #23
 8004e8e:	d536      	bpl.n	8004efe <HAL_DSI_Init+0x1d6>
  hdsi->Instance->IER[0U] = 0U;
 8004e90:	2000      	movs	r0, #0
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8004e92:	f8d3 20a0 	ldr.w	r2, [r3, #160]	@ 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8004e96:	6861      	ldr	r1, [r4, #4]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8004e98:	f042 0206 	orr.w	r2, r2, #6
 8004e9c:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 8004ea0:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8004ea4:	f022 0203 	bic.w	r2, r2, #3
 8004ea8:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8004eac:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8004eb0:	430a      	orrs	r2, r1
 8004eb2:	f042 0201 	orr.w	r2, r2, #1
 8004eb6:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8004eba:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8004ebe:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8004ec0:	f022 0203 	bic.w	r2, r2, #3
 8004ec4:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8004ec8:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 8004ecc:	430a      	orrs	r2, r1
 8004ece:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8004ed2:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8004ed4:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8004ed6:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 8004eda:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8004edc:	689a      	ldr	r2, [r3, #8]
 8004ede:	430a      	orrs	r2, r1
 8004ee0:	609a      	str	r2, [r3, #8]
  hdsi->Instance->IER[0U] = 0U;
 8004ee2:	f8c3 00c4 	str.w	r0, [r3, #196]	@ 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8004ee6:	f8c3 00c8 	str.w	r0, [r3, #200]	@ 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 8004eea:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 8004eec:	61e0      	str	r0, [r4, #28]
  hdsi->ErrorMsk = 0U;
 8004eee:	6220      	str	r0, [r4, #32]
  hdsi->State = HAL_DSI_STATE_READY;
 8004ef0:	7663      	strb	r3, [r4, #25]
}
 8004ef2:	b003      	add	sp, #12
 8004ef4:	bd30      	pop	{r4, r5, pc}
    hdsi->Instance->DPDL0HSOCR = (DSI_HS_PREPARE_OFFSET1 << DSI_DPDL0HSOCR_Pos);
 8004ef6:	2210      	movs	r2, #16
 8004ef8:	e783      	b.n	8004e02 <HAL_DSI_Init+0xda>
    hdsi->Instance->DPDL0HSOCR = (DSI_HS_PREPARE_OFFSET2 << DSI_DPDL0HSOCR_Pos);
 8004efa:	2220      	movs	r2, #32
 8004efc:	e781      	b.n	8004e02 <HAL_DSI_Init+0xda>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8004efe:	f7ff fa79 	bl	80043f4 <HAL_GetTick>
 8004f02:	1b40      	subs	r0, r0, r5
 8004f04:	2864      	cmp	r0, #100	@ 0x64
 8004f06:	d9be      	bls.n	8004e86 <HAL_DSI_Init+0x15e>
      return HAL_TIMEOUT;
 8004f08:	2003      	movs	r0, #3
 8004f0a:	e7f2      	b.n	8004ef2 <HAL_DSI_Init+0x1ca>
    return HAL_ERROR;
 8004f0c:	2001      	movs	r0, #1
 8004f0e:	e7f0      	b.n	8004ef2 <HAL_DSI_Init+0x1ca>

08004f10 <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004f10:	7e02      	ldrb	r2, [r0, #24]
{
 8004f12:	4603      	mov	r3, r0
  __HAL_LOCK(hdsi);
 8004f14:	2a01      	cmp	r2, #1
 8004f16:	d00c      	beq.n	8004f32 <HAL_DSI_SetGenericVCID+0x22>

  /* Update the GVCIDR register with the Tx and Rx Virtual channel ID */
  hdsi->Instance->GVCIDR &= ~(DSI_GVCIDR_VCIDRX | DSI_GVCIDR_VCIDTX);
 8004f18:	6802      	ldr	r2, [r0, #0]
  hdsi->Instance->GVCIDR |= ((VirtualChannelID << DSI_GVCIDR_VCIDRX_Pos) | \
 8004f1a:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  hdsi->Instance->GVCIDR &= ~(DSI_GVCIDR_VCIDRX | DSI_GVCIDR_VCIDTX);
 8004f1e:	6b10      	ldr	r0, [r2, #48]	@ 0x30
 8004f20:	f020 1003 	bic.w	r0, r0, #196611	@ 0x30003
 8004f24:	6310      	str	r0, [r2, #48]	@ 0x30
  hdsi->Instance->GVCIDR |= ((VirtualChannelID << DSI_GVCIDR_VCIDRX_Pos) | \
 8004f26:	6b10      	ldr	r0, [r2, #48]	@ 0x30
 8004f28:	4301      	orrs	r1, r0
                             (VirtualChannelID << DSI_GVCIDR_VCIDTX_Pos));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004f2a:	2000      	movs	r0, #0
  hdsi->Instance->GVCIDR |= ((VirtualChannelID << DSI_GVCIDR_VCIDRX_Pos) | \
 8004f2c:	6311      	str	r1, [r2, #48]	@ 0x30
  __HAL_UNLOCK(hdsi);
 8004f2e:	7618      	strb	r0, [r3, #24]

  return HAL_OK;
 8004f30:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004f32:	2002      	movs	r0, #2
}
 8004f34:	4770      	bx	lr
	...

08004f38 <HAL_DSI_ConfigVideoMode>:
  * @param  VidCfg pointer to a DSI_VidCfgTypeDef structure that contains
  *                the DSI video mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigVideoMode(DSI_HandleTypeDef *hdsi, DSI_VidCfgTypeDef *VidCfg)
{
 8004f38:	b570      	push	{r4, r5, r6, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004f3a:	7e03      	ldrb	r3, [r0, #24]
{
 8004f3c:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 8004f3e:	2b01      	cmp	r3, #1
 8004f40:	f000 80f8 	beq.w	8005134 <HAL_DSI_ConfigVideoMode+0x1fc>
 8004f44:	2301      	movs	r3, #1
 8004f46:	7603      	strb	r3, [r0, #24]
  {
    assert_param(IS_DSI_LOOSELY_PACKED(VidCfg->LooselyPacked));
  }

  /* Select video mode by resetting CMDM and DSIM bits */
  hdsi->Instance->MCR &= ~DSI_MCR_CMDM;
 8004f48:	6823      	ldr	r3, [r4, #0]
  if (VidCfg->ColorCoding == DSI_RGB666)
 8004f4a:	6848      	ldr	r0, [r1, #4]
  hdsi->Instance->MCR &= ~DSI_MCR_CMDM;
 8004f4c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;

  /* Configure the video mode transmission type */
  hdsi->Instance->VMCR &= ~DSI_VMCR_VMT;
  hdsi->Instance->VMCR |= VidCfg->Mode;
 8004f4e:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->MCR &= ~DSI_MCR_CMDM;
 8004f50:	f022 0201 	bic.w	r2, r2, #1
 8004f54:	635a      	str	r2, [r3, #52]	@ 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 8004f56:	f8d3 2400 	ldr.w	r2, [r3, #1024]	@ 0x400
  hdsi->Instance->VPCR &= ~DSI_VPCR_VPSIZE;
  hdsi->Instance->VPCR |= VidCfg->PacketSize;

  /* Set the chunks number to be transmitted through the DSI link */
  hdsi->Instance->VCCR &= ~DSI_VCCR_NUMC;
  hdsi->Instance->VCCR |= VidCfg->NumberOfChunks;
 8004f5a:	694e      	ldr	r6, [r1, #20]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 8004f5c:	f022 0201 	bic.w	r2, r2, #1
 8004f60:	f8c3 2400 	str.w	r2, [r3, #1024]	@ 0x400
  hdsi->Instance->VMCR &= ~DSI_VMCR_VMT;
 8004f64:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
  hdsi->Instance->WCFGR |= ((VidCfg->ColorCoding) << 1U);

  /* Enable/disable the loosely packed variant to 18-bit configuration */
  if (VidCfg->ColorCoding == DSI_RGB666)
 8004f66:	2803      	cmp	r0, #3
  hdsi->Instance->VMCR &= ~DSI_VMCR_VMT;
 8004f68:	f022 0203 	bic.w	r2, r2, #3
 8004f6c:	639a      	str	r2, [r3, #56]	@ 0x38
  hdsi->Instance->VMCR |= VidCfg->Mode;
 8004f6e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8004f70:	ea42 0205 	orr.w	r2, r2, r5
 8004f74:	639a      	str	r2, [r3, #56]	@ 0x38
  hdsi->Instance->VPCR &= ~DSI_VPCR_VPSIZE;
 8004f76:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
  hdsi->Instance->VPCR |= VidCfg->PacketSize;
 8004f78:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->VPCR &= ~DSI_VPCR_VPSIZE;
 8004f7a:	f422 527f 	bic.w	r2, r2, #16320	@ 0x3fc0
 8004f7e:	f022 023f 	bic.w	r2, r2, #63	@ 0x3f
 8004f82:	63da      	str	r2, [r3, #60]	@ 0x3c
  hdsi->Instance->VPCR |= VidCfg->PacketSize;
 8004f84:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8004f86:	ea42 0205 	orr.w	r2, r2, r5
 8004f8a:	63da      	str	r2, [r3, #60]	@ 0x3c
  hdsi->Instance->VCCR &= ~DSI_VCCR_NUMC;
 8004f8c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8004f8e:	4d6a      	ldr	r5, [pc, #424]	@ (8005138 <HAL_DSI_ConfigVideoMode+0x200>)
 8004f90:	ea02 0205 	and.w	r2, r2, r5
 8004f94:	641a      	str	r2, [r3, #64]	@ 0x40
  hdsi->Instance->VCCR |= VidCfg->NumberOfChunks;
 8004f96:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8004f98:	ea42 0206 	orr.w	r2, r2, r6
 8004f9c:	641a      	str	r2, [r3, #64]	@ 0x40
  hdsi->Instance->VNPCR &= ~DSI_VNPCR_NPSIZE;
 8004f9e:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8004fa0:	ea02 0205 	and.w	r2, r2, r5
 8004fa4:	645a      	str	r2, [r3, #68]	@ 0x44
  hdsi->Instance->VNPCR |= VidCfg->NullPacketSize;
 8004fa6:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8004fa8:	698d      	ldr	r5, [r1, #24]
 8004faa:	ea42 0205 	orr.w	r2, r2, r5
 8004fae:	645a      	str	r2, [r3, #68]	@ 0x44
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 8004fb0:	68da      	ldr	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= VidCfg->VirtualChannelID;
 8004fb2:	680d      	ldr	r5, [r1, #0]
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 8004fb4:	f022 0203 	bic.w	r2, r2, #3
 8004fb8:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= VidCfg->VirtualChannelID;
 8004fba:	68da      	ldr	r2, [r3, #12]
 8004fbc:	ea42 0205 	orr.w	r2, r2, r5
 8004fc0:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 8004fc2:	695a      	ldr	r2, [r3, #20]
 8004fc4:	f022 0207 	bic.w	r2, r2, #7
 8004fc8:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (VidCfg->DEPolarity | VidCfg->VSPolarity | VidCfg->HSPolarity);
 8004fca:	e9d1 6208 	ldrd	r6, r2, [r1, #32]
 8004fce:	ea42 0206 	orr.w	r2, r2, r6
 8004fd2:	69ce      	ldr	r6, [r1, #28]
 8004fd4:	695d      	ldr	r5, [r3, #20]
 8004fd6:	ea42 0206 	orr.w	r2, r2, r6
 8004fda:	ea42 0205 	orr.w	r2, r2, r5
 8004fde:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 8004fe0:	691a      	ldr	r2, [r3, #16]
 8004fe2:	f022 020f 	bic.w	r2, r2, #15
 8004fe6:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= VidCfg->ColorCoding;
 8004fe8:	691a      	ldr	r2, [r3, #16]
 8004fea:	ea42 0200 	orr.w	r2, r2, r0
 8004fee:	611a      	str	r2, [r3, #16]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 8004ff0:	f8d3 2400 	ldr.w	r2, [r3, #1024]	@ 0x400
 8004ff4:	f022 020e 	bic.w	r2, r2, #14
 8004ff8:	f8c3 2400 	str.w	r2, [r3, #1024]	@ 0x400
  hdsi->Instance->WCFGR |= ((VidCfg->ColorCoding) << 1U);
 8004ffc:	f8d3 2400 	ldr.w	r2, [r3, #1024]	@ 0x400
 8005000:	ea42 0240 	orr.w	r2, r2, r0, lsl #1
 8005004:	f8c3 2400 	str.w	r2, [r3, #1024]	@ 0x400
  if (VidCfg->ColorCoding == DSI_RGB666)
 8005008:	d107      	bne.n	800501a <HAL_DSI_ConfigVideoMode+0xe2>
  {
    hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_LPE;
 800500a:	691a      	ldr	r2, [r3, #16]
    hdsi->Instance->LCOLCR |= VidCfg->LooselyPacked;
 800500c:	6888      	ldr	r0, [r1, #8]
    hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_LPE;
 800500e:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8005012:	611a      	str	r2, [r3, #16]
    hdsi->Instance->LCOLCR |= VidCfg->LooselyPacked;
 8005014:	691a      	ldr	r2, [r3, #16]
 8005016:	4302      	orrs	r2, r0
 8005018:	611a      	str	r2, [r3, #16]
  }

  /* Set the Horizontal Synchronization Active (HSA) in lane byte clock cycles */
  hdsi->Instance->VHSACR &= ~DSI_VHSACR_HSA;
 800501a:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 800501c:	4847      	ldr	r0, [pc, #284]	@ (800513c <HAL_DSI_ConfigVideoMode+0x204>)
  hdsi->Instance->VHSACR |= VidCfg->HorizontalSyncActive;
 800501e:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
  hdsi->Instance->VHSACR &= ~DSI_VHSACR_HSA;
 8005020:	4002      	ands	r2, r0
 8005022:	649a      	str	r2, [r3, #72]	@ 0x48
  hdsi->Instance->VHSACR |= VidCfg->HorizontalSyncActive;
 8005024:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8005026:	432a      	orrs	r2, r5
 8005028:	649a      	str	r2, [r3, #72]	@ 0x48

  /* Set the Horizontal Back Porch (HBP) in lane byte clock cycles */
  hdsi->Instance->VHBPCR &= ~DSI_VHBPCR_HBP;
 800502a:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
  hdsi->Instance->VLCR &= ~DSI_VLCR_HLINE;
  hdsi->Instance->VLCR |= VidCfg->HorizontalLine;

  /* Set the Vertical Synchronization Active (VSA) */
  hdsi->Instance->VVSACR &= ~DSI_VVSACR_VSA;
  hdsi->Instance->VVSACR |= VidCfg->VerticalSyncActive;
 800502c:	6b4d      	ldr	r5, [r1, #52]	@ 0x34
  hdsi->Instance->VHBPCR &= ~DSI_VHBPCR_HBP;
 800502e:	4002      	ands	r2, r0
 8005030:	64da      	str	r2, [r3, #76]	@ 0x4c
  hdsi->Instance->VHBPCR |= VidCfg->HorizontalBackPorch;
 8005032:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8005034:	6ac8      	ldr	r0, [r1, #44]	@ 0x2c
 8005036:	4302      	orrs	r2, r0
 8005038:	64da      	str	r2, [r3, #76]	@ 0x4c
  hdsi->Instance->VLCR &= ~DSI_VLCR_HLINE;
 800503a:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
  hdsi->Instance->VLCR |= VidCfg->HorizontalLine;
 800503c:	6b08      	ldr	r0, [r1, #48]	@ 0x30
  hdsi->Instance->VLCR &= ~DSI_VLCR_HLINE;
 800503e:	f422 42ff 	bic.w	r2, r2, #32640	@ 0x7f80
 8005042:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 8005046:	651a      	str	r2, [r3, #80]	@ 0x50
  hdsi->Instance->VLCR |= VidCfg->HorizontalLine;
 8005048:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800504a:	4302      	orrs	r2, r0
 800504c:	651a      	str	r2, [r3, #80]	@ 0x50
  hdsi->Instance->VVSACR &= ~DSI_VVSACR_VSA;
 800504e:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8005050:	483b      	ldr	r0, [pc, #236]	@ (8005140 <HAL_DSI_ConfigVideoMode+0x208>)
 8005052:	4002      	ands	r2, r0
 8005054:	655a      	str	r2, [r3, #84]	@ 0x54
  hdsi->Instance->VVSACR |= VidCfg->VerticalSyncActive;
 8005056:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8005058:	432a      	orrs	r2, r5
 800505a:	655a      	str	r2, [r3, #84]	@ 0x54

  /* Set the Vertical Back Porch (VBP)*/
  hdsi->Instance->VVBPCR &= ~DSI_VVBPCR_VBP;
 800505c:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
  hdsi->Instance->VVBPCR |= VidCfg->VerticalBackPorch;
 800505e:	6b8d      	ldr	r5, [r1, #56]	@ 0x38
  hdsi->Instance->VVBPCR &= ~DSI_VVBPCR_VBP;
 8005060:	4002      	ands	r2, r0
 8005062:	659a      	str	r2, [r3, #88]	@ 0x58
  hdsi->Instance->VVBPCR |= VidCfg->VerticalBackPorch;
 8005064:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
 8005066:	432a      	orrs	r2, r5
 8005068:	659a      	str	r2, [r3, #88]	@ 0x58

  /* Set the Vertical Front Porch (VFP)*/
  hdsi->Instance->VVFPCR &= ~DSI_VVFPCR_VFP;
 800506a:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 800506c:	4002      	ands	r2, r0
 800506e:	65da      	str	r2, [r3, #92]	@ 0x5c
  hdsi->Instance->VVFPCR |= VidCfg->VerticalFrontPorch;
 8005070:	6bc8      	ldr	r0, [r1, #60]	@ 0x3c
 8005072:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8005074:	4302      	orrs	r2, r0
 8005076:	65da      	str	r2, [r3, #92]	@ 0x5c

  /* Set the Vertical Active period*/
  hdsi->Instance->VVACR &= ~DSI_VVACR_VA;
 8005078:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 800507a:	f422 527f 	bic.w	r2, r2, #16320	@ 0x3fc0
 800507e:	f022 023f 	bic.w	r2, r2, #63	@ 0x3f
 8005082:	661a      	str	r2, [r3, #96]	@ 0x60
  hdsi->Instance->VVACR |= VidCfg->VerticalActive;
 8005084:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 8005086:	6c08      	ldr	r0, [r1, #64]	@ 0x40
 8005088:	4302      	orrs	r2, r0
 800508a:	661a      	str	r2, [r3, #96]	@ 0x60

  /* Configure the command transmission mode */
  hdsi->Instance->VMCR &= ~DSI_VMCR_LPCE;
 800508c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  hdsi->Instance->VMCR |= VidCfg->LPCommandEnable;
 800508e:	6c48      	ldr	r0, [r1, #68]	@ 0x44
  hdsi->Instance->VMCR &= ~DSI_VMCR_LPCE;
 8005090:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8005094:	639a      	str	r2, [r3, #56]	@ 0x38
  hdsi->Instance->VMCR |= VidCfg->LPCommandEnable;
 8005096:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8005098:	4302      	orrs	r2, r0
 800509a:	639a      	str	r2, [r3, #56]	@ 0x38

  /* Low power largest packet size */
  hdsi->Instance->LPMCR &= ~DSI_LPMCR_LPSIZE;
 800509c:	699a      	ldr	r2, [r3, #24]
  hdsi->Instance->LPMCR |= ((VidCfg->LPLargestPacketSize) << 16U);
 800509e:	6c88      	ldr	r0, [r1, #72]	@ 0x48
  hdsi->Instance->LPMCR &= ~DSI_LPMCR_LPSIZE;
 80050a0:	f422 027f 	bic.w	r2, r2, #16711680	@ 0xff0000
 80050a4:	619a      	str	r2, [r3, #24]
  hdsi->Instance->LPMCR |= ((VidCfg->LPLargestPacketSize) << 16U);
 80050a6:	699a      	ldr	r2, [r3, #24]
 80050a8:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80050ac:	619a      	str	r2, [r3, #24]

  /* Low power VACT largest packet size */
  hdsi->Instance->LPMCR &= ~DSI_LPMCR_VLPSIZE;
 80050ae:	699a      	ldr	r2, [r3, #24]
  hdsi->Instance->LPMCR |= VidCfg->LPVACTLargestPacketSize;
 80050b0:	6cc8      	ldr	r0, [r1, #76]	@ 0x4c
  hdsi->Instance->LPMCR &= ~DSI_LPMCR_VLPSIZE;
 80050b2:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 80050b6:	619a      	str	r2, [r3, #24]
  hdsi->Instance->LPMCR |= VidCfg->LPVACTLargestPacketSize;
 80050b8:	699a      	ldr	r2, [r3, #24]
 80050ba:	4302      	orrs	r2, r0
 80050bc:	619a      	str	r2, [r3, #24]

  /* Enable LP transition in HFP period */
  hdsi->Instance->VMCR &= ~DSI_VMCR_LPHFPE;
 80050be:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  hdsi->Instance->VMCR |= VidCfg->LPHorizontalFrontPorchEnable;
 80050c0:	6d08      	ldr	r0, [r1, #80]	@ 0x50
  hdsi->Instance->VMCR &= ~DSI_VMCR_LPHFPE;
 80050c2:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80050c6:	639a      	str	r2, [r3, #56]	@ 0x38
  hdsi->Instance->VMCR |= VidCfg->LPHorizontalFrontPorchEnable;
 80050c8:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80050ca:	4302      	orrs	r2, r0
 80050cc:	639a      	str	r2, [r3, #56]	@ 0x38

  /* Enable LP transition in HBP period */
  hdsi->Instance->VMCR &= ~DSI_VMCR_LPHBPE;
 80050ce:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  hdsi->Instance->VMCR |= VidCfg->LPHorizontalBackPorchEnable;
 80050d0:	6d48      	ldr	r0, [r1, #84]	@ 0x54
  hdsi->Instance->VMCR &= ~DSI_VMCR_LPHBPE;
 80050d2:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 80050d6:	639a      	str	r2, [r3, #56]	@ 0x38
  hdsi->Instance->VMCR |= VidCfg->LPHorizontalBackPorchEnable;
 80050d8:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80050da:	4302      	orrs	r2, r0
 80050dc:	639a      	str	r2, [r3, #56]	@ 0x38

  /* Enable LP transition in VACT period */
  hdsi->Instance->VMCR &= ~DSI_VMCR_LPVAE;
 80050de:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  hdsi->Instance->VMCR |= VidCfg->LPVerticalActiveEnable;
 80050e0:	6d88      	ldr	r0, [r1, #88]	@ 0x58
  hdsi->Instance->VMCR &= ~DSI_VMCR_LPVAE;
 80050e2:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80050e6:	639a      	str	r2, [r3, #56]	@ 0x38
  hdsi->Instance->VMCR |= VidCfg->LPVerticalActiveEnable;
 80050e8:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80050ea:	4302      	orrs	r2, r0
 80050ec:	639a      	str	r2, [r3, #56]	@ 0x38

  /* Enable LP transition in VFP period */
  hdsi->Instance->VMCR &= ~DSI_VMCR_LPVFPE;
 80050ee:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  hdsi->Instance->VMCR |= VidCfg->LPVerticalFrontPorchEnable;
 80050f0:	6dc8      	ldr	r0, [r1, #92]	@ 0x5c
  hdsi->Instance->VMCR &= ~DSI_VMCR_LPVFPE;
 80050f2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80050f6:	639a      	str	r2, [r3, #56]	@ 0x38
  hdsi->Instance->VMCR |= VidCfg->LPVerticalFrontPorchEnable;
 80050f8:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80050fa:	4302      	orrs	r2, r0
 80050fc:	639a      	str	r2, [r3, #56]	@ 0x38

  /* Enable LP transition in VBP period */
  hdsi->Instance->VMCR &= ~DSI_VMCR_LPVBPE;
 80050fe:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  hdsi->Instance->VMCR |= VidCfg->LPVerticalBackPorchEnable;
 8005100:	6e08      	ldr	r0, [r1, #96]	@ 0x60
  hdsi->Instance->VMCR &= ~DSI_VMCR_LPVBPE;
 8005102:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8005106:	639a      	str	r2, [r3, #56]	@ 0x38
  hdsi->Instance->VMCR |= VidCfg->LPVerticalBackPorchEnable;
 8005108:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800510a:	4302      	orrs	r2, r0
 800510c:	639a      	str	r2, [r3, #56]	@ 0x38

  /* Enable LP transition in vertical sync period */
  hdsi->Instance->VMCR &= ~DSI_VMCR_LPVSAE;
 800510e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  hdsi->Instance->VMCR |= VidCfg->LPVerticalSyncActiveEnable;
 8005110:	6e48      	ldr	r0, [r1, #100]	@ 0x64
  hdsi->Instance->VMCR &= ~DSI_VMCR_LPVSAE;
 8005112:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8005116:	639a      	str	r2, [r3, #56]	@ 0x38
  hdsi->Instance->VMCR |= VidCfg->LPVerticalSyncActiveEnable;
 8005118:	6b9a      	ldr	r2, [r3, #56]	@ 0x38

  /* Enable the request for an acknowledge response at the end of a frame */
  hdsi->Instance->VMCR &= ~DSI_VMCR_FBTAAE;
  hdsi->Instance->VMCR |= VidCfg->FrameBTAAcknowledgeEnable;
 800511a:	6e89      	ldr	r1, [r1, #104]	@ 0x68
  hdsi->Instance->VMCR |= VidCfg->LPVerticalSyncActiveEnable;
 800511c:	4302      	orrs	r2, r0

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800511e:	2000      	movs	r0, #0
  hdsi->Instance->VMCR |= VidCfg->LPVerticalSyncActiveEnable;
 8005120:	639a      	str	r2, [r3, #56]	@ 0x38
  hdsi->Instance->VMCR &= ~DSI_VMCR_FBTAAE;
 8005122:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8005124:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8005128:	639a      	str	r2, [r3, #56]	@ 0x38
  hdsi->Instance->VMCR |= VidCfg->FrameBTAAcknowledgeEnable;
 800512a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800512c:	430a      	orrs	r2, r1
 800512e:	639a      	str	r2, [r3, #56]	@ 0x38
  __HAL_UNLOCK(hdsi);
 8005130:	7620      	strb	r0, [r4, #24]

  return HAL_OK;
}
 8005132:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdsi);
 8005134:	2002      	movs	r0, #2
 8005136:	e7fc      	b.n	8005132 <HAL_DSI_ConfigVideoMode+0x1fa>
 8005138:	ffffe000 	.word	0xffffe000
 800513c:	fffff000 	.word	0xfffff000
 8005140:	fffffc00 	.word	0xfffffc00

08005144 <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005144:	7e02      	ldrb	r2, [r0, #24]
{
 8005146:	4603      	mov	r3, r0
  __HAL_LOCK(hdsi);
 8005148:	2a01      	cmp	r2, #1
 800514a:	d00a      	beq.n	8005162 <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 800514c:	6802      	ldr	r2, [r0, #0]
 800514e:	6ad0      	ldr	r0, [r2, #44]	@ 0x2c
 8005150:	f020 003f 	bic.w	r0, r0, #63	@ 0x3f
 8005154:	62d0      	str	r0, [r2, #44]	@ 0x2c
  hdsi->Instance->PCR |= FlowControl;
 8005156:	6ad0      	ldr	r0, [r2, #44]	@ 0x2c
 8005158:	4301      	orrs	r1, r0

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800515a:	2000      	movs	r0, #0
  hdsi->Instance->PCR |= FlowControl;
 800515c:	62d1      	str	r1, [r2, #44]	@ 0x2c
  __HAL_UNLOCK(hdsi);
 800515e:	7618      	strb	r0, [r3, #24]

  return HAL_OK;
 8005160:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8005162:	2002      	movs	r0, #2
}
 8005164:	4770      	bx	lr

08005166 <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 8005166:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005168:	7e03      	ldrb	r3, [r0, #24]
{
 800516a:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 800516c:	2b01      	cmp	r3, #1
 800516e:	d049      	beq.n	8005204 <HAL_DSI_ConfigPhyTimer+0x9e>

  /* Insert LPX Offset into the timings */
  PhyTimers->ClockLaneHS2LPTime = PhyTimers->ClockLaneHS2LPTime + hdsi->Init.PHYLowPowerOffset;
 8005170:	6940      	ldr	r0, [r0, #20]
  PhyTimers->ClockLaneLP2HSTime = PhyTimers->ClockLaneLP2HSTime + (3U * hdsi->Init.PHYLowPowerOffset);
 8005172:	684d      	ldr	r5, [r1, #4]
  PhyTimers->ClockLaneHS2LPTime = PhyTimers->ClockLaneHS2LPTime + hdsi->Init.PHYLowPowerOffset;
 8005174:	680a      	ldr	r2, [r1, #0]
  PhyTimers->ClockLaneLP2HSTime = PhyTimers->ClockLaneLP2HSTime + (3U * hdsi->Init.PHYLowPowerOffset);
 8005176:	eb00 0340 	add.w	r3, r0, r0, lsl #1
  PhyTimers->ClockLaneHS2LPTime = PhyTimers->ClockLaneHS2LPTime + hdsi->Init.PHYLowPowerOffset;
 800517a:	4402      	add	r2, r0
  PhyTimers->ClockLaneLP2HSTime = PhyTimers->ClockLaneLP2HSTime + (3U * hdsi->Init.PHYLowPowerOffset);
 800517c:	442b      	add	r3, r5
  PhyTimers->DataLaneLP2HSTime  = PhyTimers->DataLaneLP2HSTime + (2U * hdsi->Init.PHYLowPowerOffset);

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800517e:	429a      	cmp	r2, r3
  PhyTimers->ClockLaneHS2LPTime = PhyTimers->ClockLaneHS2LPTime + hdsi->Init.PHYLowPowerOffset;
 8005180:	600a      	str	r2, [r1, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 8005182:	bf38      	it	cc
 8005184:	461a      	movcc	r2, r3
  PhyTimers->DataLaneLP2HSTime  = PhyTimers->DataLaneLP2HSTime + (2U * hdsi->Init.PHYLowPowerOffset);
 8005186:	68cd      	ldr	r5, [r1, #12]
  PhyTimers->ClockLaneLP2HSTime = PhyTimers->ClockLaneLP2HSTime + (3U * hdsi->Init.PHYLowPowerOffset);
 8005188:	604b      	str	r3, [r1, #4]
     Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800518a:	6823      	ldr	r3, [r4, #0]
  PhyTimers->DataLaneLP2HSTime  = PhyTimers->DataLaneLP2HSTime + (2U * hdsi->Init.PHYLowPowerOffset);
 800518c:	eb05 0540 	add.w	r5, r5, r0, lsl #1
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 8005190:	f8d3 0098 	ldr.w	r0, [r3, #152]	@ 0x98
  PhyTimers->DataLaneLP2HSTime  = PhyTimers->DataLaneLP2HSTime + (2U * hdsi->Init.PHYLowPowerOffset);
 8005194:	60cd      	str	r5, [r1, #12]
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 8005196:	f000 20fc 	and.w	r0, r0, #4227922944	@ 0xfc00fc00
 800519a:	f8c3 0098 	str.w	r0, [r3, #152]	@ 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 800519e:	f8d3 0098 	ldr.w	r0, [r3, #152]	@ 0x98
 80051a2:	4310      	orrs	r0, r2
 80051a4:	ea40 4202 	orr.w	r2, r0, r2, lsl #16
 80051a8:	f8c3 2098 	str.w	r2, [r3, #152]	@ 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 80051ac:	f8d3 209c 	ldr.w	r2, [r3, #156]	@ 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneLP2HSTime | ((PhyTimers->DataLaneHS2LPTime) << 16U));
 80051b0:	6888      	ldr	r0, [r1, #8]
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 80051b2:	f002 22fc 	and.w	r2, r2, #4227922944	@ 0xfc00fc00
 80051b6:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneLP2HSTime | ((PhyTimers->DataLaneHS2LPTime) << 16U));
 80051ba:	f8d3 209c 	ldr.w	r2, [r3, #156]	@ 0x9c
 80051be:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80051c2:	432a      	orrs	r2, r5
 80051c4:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
  hdsi->Instance->DLTRCR &= ~DSI_DLTRCR_MRD_TIME;
 80051c8:	f8d3 20f4 	ldr.w	r2, [r3, #244]	@ 0xf4
  hdsi->Instance->DLTRCR |= PhyTimers->DataLaneMaxReadTime;
 80051cc:	6908      	ldr	r0, [r1, #16]
  hdsi->Instance->DLTRCR &= ~DSI_DLTRCR_MRD_TIME;
 80051ce:	f422 42ff 	bic.w	r2, r2, #32640	@ 0x7f80
 80051d2:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 80051d6:	f8c3 20f4 	str.w	r2, [r3, #244]	@ 0xf4
  hdsi->Instance->DLTRCR |= PhyTimers->DataLaneMaxReadTime;
 80051da:	f8d3 20f4 	ldr.w	r2, [r3, #244]	@ 0xf4

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 80051de:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTRCR |= PhyTimers->DataLaneMaxReadTime;
 80051e0:	4302      	orrs	r2, r0

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80051e2:	2000      	movs	r0, #0
  hdsi->Instance->DLTRCR |= PhyTimers->DataLaneMaxReadTime;
 80051e4:	f8c3 20f4 	str.w	r2, [r3, #244]	@ 0xf4
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 80051e8:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 80051ec:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 80051f0:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 80051f4:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 80051f8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80051fc:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
  __HAL_UNLOCK(hdsi);
 8005200:	7620      	strb	r0, [r4, #24]

  return HAL_OK;
}
 8005202:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8005204:	2002      	movs	r0, #2
 8005206:	e7fc      	b.n	8005202 <HAL_DSI_ConfigPhyTimer+0x9c>

08005208 <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 8005208:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800520a:	7e03      	ldrb	r3, [r0, #24]
{
 800520c:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 800520e:	2b01      	cmp	r3, #1
 8005210:	d05b      	beq.n	80052ca <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8005212:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 8005214:	6808      	ldr	r0, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8005216:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 8005218:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800521a:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 800521e:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 8005220:	689a      	ldr	r2, [r3, #8]
 8005222:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8005226:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 8005228:	6f9a      	ldr	r2, [r3, #120]	@ 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800522a:	6848      	ldr	r0, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800522c:	b292      	uxth	r2, r2
 800522e:	679a      	str	r2, [r3, #120]	@ 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 8005230:	6f9a      	ldr	r2, [r3, #120]	@ 0x78
 8005232:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005236:	679a      	str	r2, [r3, #120]	@ 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 8005238:	6f98      	ldr	r0, [r3, #120]	@ 0x78
 800523a:	4a25      	ldr	r2, [pc, #148]	@ (80052d0 <HAL_DSI_ConfigHostTimeouts+0xc8>)
 800523c:	4010      	ands	r0, r2
 800523e:	6798      	str	r0, [r3, #120]	@ 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 8005240:	6f98      	ldr	r0, [r3, #120]	@ 0x78
 8005242:	4328      	orrs	r0, r5
 8005244:	6798      	str	r0, [r3, #120]	@ 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 8005246:	6fd8      	ldr	r0, [r3, #124]	@ 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 8005248:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 800524a:	4010      	ands	r0, r2
 800524c:	67d8      	str	r0, [r3, #124]	@ 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800524e:	6fd8      	ldr	r0, [r3, #124]	@ 0x7c
 8005250:	4328      	orrs	r0, r5
 8005252:	67d8      	str	r0, [r3, #124]	@ 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 8005254:	f8d3 0080 	ldr.w	r0, [r3, #128]	@ 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 8005258:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800525a:	4010      	ands	r0, r2
 800525c:	f8c3 0080 	str.w	r0, [r3, #128]	@ 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 8005260:	f8d3 0080 	ldr.w	r0, [r3, #128]	@ 0x80
 8005264:	4328      	orrs	r0, r5
 8005266:	f8c3 0080 	str.w	r0, [r3, #128]	@ 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800526a:	f8d3 0084 	ldr.w	r0, [r3, #132]	@ 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800526e:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 8005270:	4010      	ands	r0, r2
 8005272:	f8c3 0084 	str.w	r0, [r3, #132]	@ 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 8005276:	f8d3 0084 	ldr.w	r0, [r3, #132]	@ 0x84
 800527a:	4328      	orrs	r0, r5
 800527c:	f8c3 0084 	str.w	r0, [r3, #132]	@ 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 8005280:	f8d3 0084 	ldr.w	r0, [r3, #132]	@ 0x84
 8005284:	f020 7080 	bic.w	r0, r0, #16777216	@ 0x1000000
 8005288:	f8c3 0084 	str.w	r0, [r3, #132]	@ 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 800528c:	f8d3 0084 	ldr.w	r0, [r3, #132]	@ 0x84
 8005290:	698d      	ldr	r5, [r1, #24]
 8005292:	4328      	orrs	r0, r5
 8005294:	f8c3 0084 	str.w	r0, [r3, #132]	@ 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 8005298:	f8d3 0088 	ldr.w	r0, [r3, #136]	@ 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800529c:	69cd      	ldr	r5, [r1, #28]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800529e:	4010      	ands	r0, r2
 80052a0:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 80052a4:	f8d3 0088 	ldr.w	r0, [r3, #136]	@ 0x88

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 80052a8:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 80052aa:	4328      	orrs	r0, r5
 80052ac:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 80052b0:	f8d3 008c 	ldr.w	r0, [r3, #140]	@ 0x8c
 80052b4:	4002      	ands	r2, r0

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80052b6:	2000      	movs	r0, #0
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 80052b8:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 80052bc:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 80052c0:	430a      	orrs	r2, r1
 80052c2:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  __HAL_UNLOCK(hdsi);
 80052c6:	7620      	strb	r0, [r4, #24]

  return HAL_OK;
}
 80052c8:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80052ca:	2002      	movs	r0, #2
 80052cc:	e7fc      	b.n	80052c8 <HAL_DSI_ConfigHostTimeouts+0xc0>
 80052ce:	bf00      	nop
 80052d0:	ffff0000 	.word	0xffff0000

080052d4 <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80052d4:	7e03      	ldrb	r3, [r0, #24]
{
 80052d6:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 80052d8:	2b01      	cmp	r3, #1
 80052da:	d01c      	beq.n	8005316 <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 80052dc:	2300      	movs	r3, #0
 80052de:	6802      	ldr	r2, [r0, #0]
 80052e0:	9300      	str	r3, [sp, #0]
 80052e2:	6851      	ldr	r1, [r2, #4]
 80052e4:	f041 0101 	orr.w	r1, r1, #1
 80052e8:	6051      	str	r1, [r2, #4]
 80052ea:	6851      	ldr	r1, [r2, #4]
 80052ec:	f001 0101 	and.w	r1, r1, #1
 80052f0:	9100      	str	r1, [sp, #0]
 80052f2:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 80052f4:	9301      	str	r3, [sp, #4]
 80052f6:	f8d2 1404 	ldr.w	r1, [r2, #1028]	@ 0x404
 80052fa:	f041 0108 	orr.w	r1, r1, #8
 80052fe:	f8c2 1404 	str.w	r1, [r2, #1028]	@ 0x404
 8005302:	f8d2 2404 	ldr.w	r2, [r2, #1028]	@ 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005306:	7603      	strb	r3, [r0, #24]

  return HAL_OK;
 8005308:	4618      	mov	r0, r3
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 800530a:	f002 0208 	and.w	r2, r2, #8
 800530e:	9201      	str	r2, [sp, #4]
 8005310:	9a01      	ldr	r2, [sp, #4]
}
 8005312:	b002      	add	sp, #8
 8005314:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8005316:	2002      	movs	r0, #2
 8005318:	e7fb      	b.n	8005312 <HAL_DSI_Start+0x3e>

0800531a <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 800531a:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 800531c:	7e05      	ldrb	r5, [r0, #24]
{
 800531e:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 8005320:	2d01      	cmp	r5, #1
 8005322:	d009      	beq.n	8005338 <HAL_DSI_ShortWrite+0x1e>
 8005324:	2501      	movs	r5, #1
 8005326:	7605      	strb	r5, [r0, #24]

  status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 8005328:	9d06      	ldr	r5, [sp, #24]
 800532a:	9500      	str	r5, [sp, #0]
 800532c:	f7ff fc71 	bl	8004c12 <DSI_ShortWrite.constprop.0>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005330:	2300      	movs	r3, #0
 8005332:	7623      	strb	r3, [r4, #24]

  return status;
}
 8005334:	b003      	add	sp, #12
 8005336:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8005338:	2002      	movs	r0, #2
 800533a:	e7fb      	b.n	8005334 <HAL_DSI_ShortWrite+0x1a>

0800533c <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 800533c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005340:	461c      	mov	r4, r3
 8005342:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	@ 0x28
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 8005346:	7e03      	ldrb	r3, [r0, #24]
{
 8005348:	4606      	mov	r6, r0
  __HAL_LOCK(hdsi);
 800534a:	2b01      	cmp	r3, #1
{
 800534c:	460f      	mov	r7, r1
 800534e:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 8005350:	d051      	beq.n	80053f6 <HAL_DSI_LongWrite+0xba>
 8005352:	2301      	movs	r3, #1
 8005354:	7603      	strb	r3, [r0, #24]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 8005356:	f7ff f84d 	bl	80043f4 <HAL_GetTick>
 800535a:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800535c:	6832      	ldr	r2, [r6, #0]
 800535e:	6f53      	ldr	r3, [r2, #116]	@ 0x74
 8005360:	f013 0a01 	ands.w	sl, r3, #1
 8005364:	d019      	beq.n	800539a <HAL_DSI_LongWrite+0x5e>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 8005366:	2c03      	cmp	r4, #3
 8005368:	4620      	mov	r0, r4

  for (count = 0U; count < nbBytes; count++)
 800536a:	f04f 0300 	mov.w	r3, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800536e:	bf28      	it	cs
 8005370:	2003      	movcs	r0, #3
  for (count = 0U; count < nbBytes; count++)
 8005372:	4283      	cmp	r3, r0
 8005374:	d11c      	bne.n	80053b0 <HAL_DSI_LongWrite+0x74>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 8005376:	1ae0      	subs	r0, r4, r3
  hdsi->Instance->GPDR = fifoword;
 8005378:	f8c2 9070 	str.w	r9, [r2, #112]	@ 0x70
  pparams += nbBytes;
 800537c:	4443      	add	r3, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 800537e:	bb08      	cbnz	r0, 80053c4 <HAL_DSI_LongWrite+0x88>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 8005380:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 8005382:	0223      	lsls	r3, r4, #8
 8005384:	ea45 1587 	orr.w	r5, r5, r7, lsl #6
 8005388:	b29b      	uxth	r3, r3
 800538a:	0224      	lsls	r4, r4, #8
 800538c:	431d      	orrs	r5, r3
 800538e:	f404 047f 	and.w	r4, r4, #16711680	@ 0xff0000
 8005392:	4325      	orrs	r5, r4
 8005394:	66d5      	str	r5, [r2, #108]	@ 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005396:	7630      	strb	r0, [r6, #24]

  return HAL_OK;
 8005398:	e008      	b.n	80053ac <HAL_DSI_LongWrite+0x70>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800539a:	f7ff f82b 	bl	80043f4 <HAL_GetTick>
 800539e:	eba0 000b 	sub.w	r0, r0, fp
 80053a2:	2864      	cmp	r0, #100	@ 0x64
 80053a4:	d9da      	bls.n	800535c <HAL_DSI_LongWrite+0x20>
      return HAL_TIMEOUT;
 80053a6:	2003      	movs	r0, #3
      __HAL_UNLOCK(hdsi);
 80053a8:	f886 a018 	strb.w	sl, [r6, #24]
}
 80053ac:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 80053b0:	f818 1003 	ldrb.w	r1, [r8, r3]
 80053b4:	3301      	adds	r3, #1
 80053b6:	ea4f 0cc3 	mov.w	ip, r3, lsl #3
 80053ba:	fa01 f10c 	lsl.w	r1, r1, ip
 80053be:	ea49 0901 	orr.w	r9, r9, r1
  for (count = 0U; count < nbBytes; count++)
 80053c2:	e7d6      	b.n	8005372 <HAL_DSI_LongWrite+0x36>
    fifoword = 0U;
 80053c4:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 80053c8:	2804      	cmp	r0, #4
 80053ca:	4686      	mov	lr, r0
    for (count = 0U; count < nbBytes; count++)
 80053cc:	4661      	mov	r1, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 80053ce:	bf28      	it	cs
 80053d0:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 80053d4:	f813 8001 	ldrb.w	r8, [r3, r1]
 80053d8:	ea4f 09c1 	mov.w	r9, r1, lsl #3
    for (count = 0U; count < nbBytes; count++)
 80053dc:	3101      	adds	r1, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 80053de:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 80053e2:	458e      	cmp	lr, r1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 80053e4:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 80053e8:	d1f4      	bne.n	80053d4 <HAL_DSI_LongWrite+0x98>
    hdsi->Instance->GPDR = fifoword;
 80053ea:	f8c2 c070 	str.w	ip, [r2, #112]	@ 0x70
    uicounter -= nbBytes;
 80053ee:	eba0 000e 	sub.w	r0, r0, lr
    pparams += nbBytes;
 80053f2:	4473      	add	r3, lr
 80053f4:	e7c3      	b.n	800537e <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 80053f6:	2002      	movs	r0, #2
 80053f8:	e7d8      	b.n	80053ac <HAL_DSI_LongWrite+0x70>
	...

080053fc <HAL_DSI_EnterULPM>:
  * @param  hdsi  pointer to a DSI_HandleTypeDef structure that contains
  *               the configuration information for the DSI.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_EnterULPM(DSI_HandleTypeDef *hdsi)
{
 80053fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart;

  /* Process locked */
  __HAL_LOCK(hdsi);
 80053fe:	7e03      	ldrb	r3, [r0, #24]
{
 8005400:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 8005402:	2b01      	cmp	r3, #1
 8005404:	f000 8091 	beq.w	800552a <HAL_DSI_EnterULPM+0x12e>
 8005408:	2001      	movs	r0, #1

  /* Verify the initial status of the DSI Host */

  /* Verify that the clock lane and the digital section of the D-PHY are enabled */
  if ((hdsi->Instance->PCTLR & (DSI_PCTLR_CKE | DSI_PCTLR_DEN)) != (DSI_PCTLR_CKE | DSI_PCTLR_DEN))
 800540a:	6823      	ldr	r3, [r4, #0]
  __HAL_LOCK(hdsi);
 800540c:	7620      	strb	r0, [r4, #24]
  if ((hdsi->Instance->PCTLR & (DSI_PCTLR_CKE | DSI_PCTLR_DEN)) != (DSI_PCTLR_CKE | DSI_PCTLR_DEN))
 800540e:	f8d3 20a0 	ldr.w	r2, [r3, #160]	@ 0xa0
 8005412:	f002 0206 	and.w	r2, r2, #6
 8005416:	2a06      	cmp	r2, #6
 8005418:	d004      	beq.n	8005424 <HAL_DSI_EnterULPM+0x28>
  {
    /* Process Unlocked */
    __HAL_UNLOCK(hdsi);
 800541a:	2300      	movs	r3, #0
    return HAL_ERROR;
 800541c:	2001      	movs	r0, #1
    __HAL_UNLOCK(hdsi);
 800541e:	7623      	strb	r3, [r4, #24]

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
}
 8005420:	b003      	add	sp, #12
 8005422:	bd30      	pop	{r4, r5, pc}
  if ((hdsi->Instance->WRPCR & DSI_WRPCR_PLLEN) != DSI_WRPCR_PLLEN)
 8005424:	f8d3 2430 	ldr.w	r2, [r3, #1072]	@ 0x430
 8005428:	07d5      	lsls	r5, r2, #31
 800542a:	d5f6      	bpl.n	800541a <HAL_DSI_EnterULPM+0x1e>
  else if ((hdsi->Instance->BCFGR  & DSI_BCFGR_PWRUP) != DSI_BCFGR_PWRUP)
 800542c:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 8005430:	0651      	lsls	r1, r2, #25
 8005432:	d5f2      	bpl.n	800541a <HAL_DSI_EnterULPM+0x1e>
  if ((hdsi->Instance->PUCR & (DSI_PUCR_UEDL | DSI_PUCR_URDL | DSI_PUCR_UECL | DSI_PUCR_URCL)) != 0U)
 8005434:	f8d3 20a8 	ldr.w	r2, [r3, #168]	@ 0xa8
 8005438:	0712      	lsls	r2, r2, #28
 800543a:	d1ee      	bne.n	800541a <HAL_DSI_EnterULPM+0x1e>
  if ((hdsi->Instance->PTTCR & DSI_PTTCR_TX_TRIG) != 0U)
 800543c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 8005440:	071d      	lsls	r5, r3, #28
 8005442:	d1ea      	bne.n	800541a <HAL_DSI_EnterULPM+0x1e>
  HAL_Delay(1);
 8005444:	f7fe ffdc 	bl	8004400 <HAL_Delay>
  tickstart = HAL_GetTick();
 8005448:	f7fe ffd4 	bl	80043f4 <HAL_GetTick>
 800544c:	4605      	mov	r5, r0
  while ((__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U))
 800544e:	6823      	ldr	r3, [r4, #0]
 8005450:	f8d3 240c 	ldr.w	r2, [r3, #1036]	@ 0x40c
 8005454:	05d0      	lsls	r0, r2, #23
 8005456:	d536      	bpl.n	80054c6 <HAL_DSI_EnterULPM+0xca>
  if ((hdsi->Instance->PCONFR & DSI_PCONFR_NL) == DSI_ONE_DATA_LANE)
 8005458:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 800545c:	0791      	lsls	r1, r2, #30
 800545e:	d13b      	bne.n	80054d8 <HAL_DSI_EnterULPM+0xdc>
    if ((hdsi->Instance->PSR & (DSI_PSR_UAN0 | DSI_PSR_PSS0)) != (DSI_PSR_UAN0 | DSI_PSR_PSS0))
 8005460:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 8005464:	f002 0230 	and.w	r2, r2, #48	@ 0x30
 8005468:	2a30      	cmp	r2, #48	@ 0x30
    if ((hdsi->Instance->PSR & (DSI_PSR_UAN0 | DSI_PSR_PSS0 | DSI_PSR_PSS1 | \
 800546a:	d1d6      	bne.n	800541a <HAL_DSI_EnterULPM+0x1e>
  hdsi->Instance->CLCR &= ~DSI_CLCR_DPCC;
 800546c:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
  __HAL_RCC_DSI_CONFIG(RCC_DSICLKSOURCE_PLL3);
 8005470:	492f      	ldr	r1, [pc, #188]	@ (8005530 <HAL_DSI_EnterULPM+0x134>)
  hdsi->Instance->CLCR &= ~DSI_CLCR_DPCC;
 8005472:	f022 0201 	bic.w	r2, r2, #1
 8005476:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
  __HAL_RCC_DSI_CONFIG(RCC_DSICLKSOURCE_PLL3);
 800547a:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 800547e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8005482:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  hdsi->Instance->PUCR |= (DSI_PUCR_URCL | DSI_PUCR_URDL);
 8005486:	f8d3 20a8 	ldr.w	r2, [r3, #168]	@ 0xa8
 800548a:	f042 0205 	orr.w	r2, r2, #5
 800548e:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
  tickstart = HAL_GetTick();
 8005492:	f7fe ffaf 	bl	80043f4 <HAL_GetTick>
  if ((hdsi->Instance->PCONFR & DSI_PCONFR_NL) == DSI_ONE_DATA_LANE)
 8005496:	6823      	ldr	r3, [r4, #0]
  tickstart = HAL_GetTick();
 8005498:	4605      	mov	r5, r0
  if ((hdsi->Instance->PCONFR & DSI_PCONFR_NL) == DSI_ONE_DATA_LANE)
 800549a:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 800549e:	0792      	lsls	r2, r2, #30
 80054a0:	d02c      	beq.n	80054fc <HAL_DSI_EnterULPM+0x100>
  else if ((hdsi->Instance->PCONFR & DSI_PCONFR_NL) == DSI_TWO_DATA_LANES)
 80054a2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 80054a6:	f003 0303 	and.w	r3, r3, #3
 80054aa:	2b01      	cmp	r3, #1
 80054ac:	d1b5      	bne.n	800541a <HAL_DSI_EnterULPM+0x1e>
    while ((hdsi->Instance->PSR & (DSI_PSR_UAN0 | DSI_PSR_UAN1 | DSI_PSR_UANC)) != 0U)
 80054ae:	6823      	ldr	r3, [r4, #0]
 80054b0:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 80054b4:	f413 7f94 	tst.w	r3, #296	@ 0x128
 80054b8:	d026      	beq.n	8005508 <HAL_DSI_EnterULPM+0x10c>
      if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 80054ba:	f7fe ff9b 	bl	80043f4 <HAL_GetTick>
 80054be:	1b40      	subs	r0, r0, r5
 80054c0:	2864      	cmp	r0, #100	@ 0x64
 80054c2:	d9f4      	bls.n	80054ae <HAL_DSI_EnterULPM+0xb2>
 80054c4:	e004      	b.n	80054d0 <HAL_DSI_EnterULPM+0xd4>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 80054c6:	f7fe ff95 	bl	80043f4 <HAL_GetTick>
 80054ca:	1b40      	subs	r0, r0, r5
 80054cc:	2864      	cmp	r0, #100	@ 0x64
 80054ce:	d9be      	bls.n	800544e <HAL_DSI_EnterULPM+0x52>
      __HAL_UNLOCK(hdsi);
 80054d0:	2300      	movs	r3, #0
      return HAL_TIMEOUT;
 80054d2:	2003      	movs	r0, #3
      __HAL_UNLOCK(hdsi);
 80054d4:	7623      	strb	r3, [r4, #24]
      return HAL_TIMEOUT;
 80054d6:	e7a3      	b.n	8005420 <HAL_DSI_EnterULPM+0x24>
  else if ((hdsi->Instance->PCONFR & DSI_PCONFR_NL) == DSI_TWO_DATA_LANES)
 80054d8:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 80054dc:	f002 0203 	and.w	r2, r2, #3
 80054e0:	2a01      	cmp	r2, #1
 80054e2:	d19a      	bne.n	800541a <HAL_DSI_EnterULPM+0x1e>
    if ((hdsi->Instance->PSR & (DSI_PSR_UAN0 | DSI_PSR_PSS0 | DSI_PSR_PSS1 | \
 80054e4:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 80054e8:	f402 72d8 	and.w	r2, r2, #432	@ 0x1b0
 80054ec:	f5b2 7fd8 	cmp.w	r2, #432	@ 0x1b0
 80054f0:	e7bb      	b.n	800546a <HAL_DSI_EnterULPM+0x6e>
      if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 80054f2:	f7fe ff7f 	bl	80043f4 <HAL_GetTick>
 80054f6:	1b40      	subs	r0, r0, r5
 80054f8:	2864      	cmp	r0, #100	@ 0x64
 80054fa:	d8e9      	bhi.n	80054d0 <HAL_DSI_EnterULPM+0xd4>
    while ((hdsi->Instance->PSR & (DSI_PSR_UAN0 | DSI_PSR_UANC)) != 0U)
 80054fc:	6823      	ldr	r3, [r4, #0]
 80054fe:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 8005502:	f013 0f28 	tst.w	r3, #40	@ 0x28
 8005506:	d1f4      	bne.n	80054f2 <HAL_DSI_EnterULPM+0xf6>
  __HAL_DSI_PLL_DISABLE(hdsi);
 8005508:	2000      	movs	r0, #0
 800550a:	6823      	ldr	r3, [r4, #0]
 800550c:	9001      	str	r0, [sp, #4]
 800550e:	f8d3 2430 	ldr.w	r2, [r3, #1072]	@ 0x430
 8005512:	f022 0201 	bic.w	r2, r2, #1
 8005516:	f8c3 2430 	str.w	r2, [r3, #1072]	@ 0x430
 800551a:	f8d3 3430 	ldr.w	r3, [r3, #1072]	@ 0x430
  __HAL_UNLOCK(hdsi);
 800551e:	7620      	strb	r0, [r4, #24]
  __HAL_DSI_PLL_DISABLE(hdsi);
 8005520:	f003 0301 	and.w	r3, r3, #1
 8005524:	9301      	str	r3, [sp, #4]
 8005526:	9b01      	ldr	r3, [sp, #4]
  return HAL_OK;
 8005528:	e77a      	b.n	8005420 <HAL_DSI_EnterULPM+0x24>
  __HAL_LOCK(hdsi);
 800552a:	2002      	movs	r0, #2
 800552c:	e778      	b.n	8005420 <HAL_DSI_EnterULPM+0x24>
 800552e:	bf00      	nop
 8005530:	46020c00 	.word	0x46020c00

08005534 <HAL_DSI_ExitULPM>:
  * @param  hdsi  pointer to a DSI_HandleTypeDef structure that contains
  *               the configuration information for the DSI.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ExitULPM(DSI_HandleTypeDef *hdsi)
{
 8005534:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart;

  /* Process locked */
  __HAL_LOCK(hdsi);
 8005536:	7e03      	ldrb	r3, [r0, #24]
{
 8005538:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 800553a:	2b01      	cmp	r3, #1
 800553c:	f000 80b1 	beq.w	80056a2 <HAL_DSI_ExitULPM+0x16e>
 8005540:	2301      	movs	r3, #1
 8005542:	7603      	strb	r3, [r0, #24]

  /* Verify that all active lanes are in ULPM */
  if ((hdsi->Instance->PCONFR & DSI_PCONFR_NL) == DSI_ONE_DATA_LANE)
 8005544:	6803      	ldr	r3, [r0, #0]
 8005546:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 800554a:	0791      	lsls	r1, r2, #30
 800554c:	d109      	bne.n	8005562 <HAL_DSI_ExitULPM+0x2e>
  {
    if ((hdsi->Instance->PSR & (DSI_PSR_RUE0 | DSI_PSR_UAN0 | DSI_PSR_PSS0 | \
 800554e:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 8005552:	f012 0f7e 	tst.w	r2, #126	@ 0x7e
 8005556:	d00f      	beq.n	8005578 <HAL_DSI_ExitULPM+0x44>
                                DSI_PSR_UANC | DSI_PSR_PSSC | DSI_PSR_PD)) != 0U)
    {
      /* Process Unlocked */
      __HAL_UNLOCK(hdsi);
 8005558:	2300      	movs	r3, #0

      return HAL_ERROR;
 800555a:	2001      	movs	r0, #1
      __HAL_UNLOCK(hdsi);
 800555c:	7623      	strb	r3, [r4, #24]

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
}
 800555e:	b003      	add	sp, #12
 8005560:	bd30      	pop	{r4, r5, pc}
  else if ((hdsi->Instance->PCONFR & DSI_PCONFR_NL) == DSI_TWO_DATA_LANES)
 8005562:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 8005566:	f002 0203 	and.w	r2, r2, #3
 800556a:	2a01      	cmp	r2, #1
 800556c:	d1f4      	bne.n	8005558 <HAL_DSI_ExitULPM+0x24>
    if ((hdsi->Instance->PSR & (DSI_PSR_RUE0 | DSI_PSR_UAN0 | DSI_PSR_PSS0 | DSI_PSR_UAN1 | \
 800556e:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 8005572:	f412 7fff 	tst.w	r2, #510	@ 0x1fe
 8005576:	e7ee      	b.n	8005556 <HAL_DSI_ExitULPM+0x22>
  __HAL_DSI_PLL_ENABLE(hdsi);
 8005578:	2200      	movs	r2, #0
 800557a:	9201      	str	r2, [sp, #4]
 800557c:	f8d3 2430 	ldr.w	r2, [r3, #1072]	@ 0x430
  HAL_Delay(1);
 8005580:	2001      	movs	r0, #1
  __HAL_DSI_PLL_ENABLE(hdsi);
 8005582:	f042 0201 	orr.w	r2, r2, #1
 8005586:	f8c3 2430 	str.w	r2, [r3, #1072]	@ 0x430
 800558a:	f8d3 3430 	ldr.w	r3, [r3, #1072]	@ 0x430
 800558e:	f003 0301 	and.w	r3, r3, #1
 8005592:	9301      	str	r3, [sp, #4]
 8005594:	9b01      	ldr	r3, [sp, #4]
  HAL_Delay(1);
 8005596:	f7fe ff33 	bl	8004400 <HAL_Delay>
  tickstart = HAL_GetTick();
 800559a:	f7fe ff2b 	bl	80043f4 <HAL_GetTick>
 800559e:	4605      	mov	r5, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 80055a0:	6823      	ldr	r3, [r4, #0]
 80055a2:	f8d3 240c 	ldr.w	r2, [r3, #1036]	@ 0x40c
 80055a6:	05d2      	lsls	r2, r2, #23
 80055a8:	d521      	bpl.n	80055ee <HAL_DSI_ExitULPM+0xba>
  hdsi->Instance->PUCR |= (DSI_PUCR_UECL | DSI_PUCR_UEDL);
 80055aa:	f8d3 20a8 	ldr.w	r2, [r3, #168]	@ 0xa8
 80055ae:	f042 020a 	orr.w	r2, r2, #10
 80055b2:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
  tickstart = HAL_GetTick();
 80055b6:	f7fe ff1d 	bl	80043f4 <HAL_GetTick>
  if ((hdsi->Instance->PCONFR & DSI_PCONFR_NL) == DSI_ONE_DATA_LANE)
 80055ba:	6823      	ldr	r3, [r4, #0]
  tickstart = HAL_GetTick();
 80055bc:	4605      	mov	r5, r0
  if ((hdsi->Instance->PCONFR & DSI_PCONFR_NL) == DSI_ONE_DATA_LANE)
 80055be:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 80055c2:	0790      	lsls	r0, r2, #30
 80055c4:	d021      	beq.n	800560a <HAL_DSI_ExitULPM+0xd6>
  else if ((hdsi->Instance->PCONFR & DSI_PCONFR_NL) == DSI_TWO_DATA_LANES)
 80055c6:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 80055ca:	f003 0303 	and.w	r3, r3, #3
 80055ce:	2b01      	cmp	r3, #1
 80055d0:	d1c2      	bne.n	8005558 <HAL_DSI_ExitULPM+0x24>
    while ((hdsi->Instance->PSR & (DSI_PSR_UAN0 | DSI_PSR_UAN1 | DSI_PSR_UANC)) != (DSI_PSR_UAN0 | DSI_PSR_UAN1 |
 80055d2:	6823      	ldr	r3, [r4, #0]
 80055d4:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 80055d8:	f403 7394 	and.w	r3, r3, #296	@ 0x128
 80055dc:	f5b3 7f94 	cmp.w	r3, #296	@ 0x128
 80055e0:	d01a      	beq.n	8005618 <HAL_DSI_ExitULPM+0xe4>
      if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 80055e2:	f7fe ff07 	bl	80043f4 <HAL_GetTick>
 80055e6:	1b40      	subs	r0, r0, r5
 80055e8:	2864      	cmp	r0, #100	@ 0x64
 80055ea:	d9f2      	bls.n	80055d2 <HAL_DSI_ExitULPM+0x9e>
 80055ec:	e004      	b.n	80055f8 <HAL_DSI_ExitULPM+0xc4>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 80055ee:	f7fe ff01 	bl	80043f4 <HAL_GetTick>
 80055f2:	1b40      	subs	r0, r0, r5
 80055f4:	2864      	cmp	r0, #100	@ 0x64
 80055f6:	d9d3      	bls.n	80055a0 <HAL_DSI_ExitULPM+0x6c>
      __HAL_UNLOCK(hdsi);
 80055f8:	2300      	movs	r3, #0
      return HAL_TIMEOUT;
 80055fa:	2003      	movs	r0, #3
      __HAL_UNLOCK(hdsi);
 80055fc:	7623      	strb	r3, [r4, #24]
      return HAL_TIMEOUT;
 80055fe:	e7ae      	b.n	800555e <HAL_DSI_ExitULPM+0x2a>
      if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8005600:	f7fe fef8 	bl	80043f4 <HAL_GetTick>
 8005604:	1b40      	subs	r0, r0, r5
 8005606:	2864      	cmp	r0, #100	@ 0x64
 8005608:	d8f6      	bhi.n	80055f8 <HAL_DSI_ExitULPM+0xc4>
    while ((hdsi->Instance->PSR & (DSI_PSR_UAN0 | DSI_PSR_UANC)) != (DSI_PSR_UAN0 | DSI_PSR_UANC))
 800560a:	6823      	ldr	r3, [r4, #0]
 800560c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 8005610:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 8005614:	2b28      	cmp	r3, #40	@ 0x28
 8005616:	d1f3      	bne.n	8005600 <HAL_DSI_ExitULPM+0xcc>
  HAL_Delay(1U);
 8005618:	2001      	movs	r0, #1
 800561a:	f7fe fef1 	bl	8004400 <HAL_Delay>
  hdsi->Instance->PUCR = 0U;
 800561e:	2200      	movs	r2, #0
 8005620:	6823      	ldr	r3, [r4, #0]
  __HAL_RCC_DSI_CONFIG(RCC_DSICLKSOURCE_DSIPHY);
 8005622:	4921      	ldr	r1, [pc, #132]	@ (80056a8 <HAL_DSI_ExitULPM+0x174>)
  hdsi->Instance->PUCR = 0U;
 8005624:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
  __HAL_RCC_DSI_CONFIG(RCC_DSICLKSOURCE_DSIPHY);
 8005628:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 800562c:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8005630:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  hdsi->Instance->CLCR |= DSI_CLCR_DPCC;
 8005634:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8005638:	f042 0201 	orr.w	r2, r2, #1
 800563c:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
  if ((hdsi->Instance->WRPCR & DSI_WRPCR_PLLEN) != DSI_WRPCR_PLLEN)
 8005640:	f8d3 2430 	ldr.w	r2, [r3, #1072]	@ 0x430
 8005644:	07d1      	lsls	r1, r2, #31
 8005646:	d587      	bpl.n	8005558 <HAL_DSI_ExitULPM+0x24>
  if ((hdsi->Instance->PCONFR & DSI_PCONFR_NL) == DSI_ONE_DATA_LANE)
 8005648:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 800564c:	0792      	lsls	r2, r2, #30
 800564e:	d114      	bne.n	800567a <HAL_DSI_ExitULPM+0x146>
    if ((hdsi->Instance->PSR & (DSI_PSR_UAN0 | DSI_PSR_PSS0)) != (DSI_PSR_UAN0 | DSI_PSR_PSS0))
 8005650:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 8005654:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 8005658:	2b30      	cmp	r3, #48	@ 0x30
    if ((hdsi->Instance->PSR & (DSI_PSR_UAN0 | DSI_PSR_PSS0 | DSI_PSR_PSS1 | \
 800565a:	f47f af7d 	bne.w	8005558 <HAL_DSI_ExitULPM+0x24>
  HAL_Delay(1);
 800565e:	2001      	movs	r0, #1
 8005660:	f7fe fece 	bl	8004400 <HAL_Delay>
  tickstart = HAL_GetTick();
 8005664:	f7fe fec6 	bl	80043f4 <HAL_GetTick>
 8005668:	4605      	mov	r5, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 800566a:	6823      	ldr	r3, [r4, #0]
 800566c:	f8d3 340c 	ldr.w	r3, [r3, #1036]	@ 0x40c
 8005670:	05db      	lsls	r3, r3, #23
 8005672:	d510      	bpl.n	8005696 <HAL_DSI_ExitULPM+0x162>
  __HAL_UNLOCK(hdsi);
 8005674:	2000      	movs	r0, #0
 8005676:	7620      	strb	r0, [r4, #24]
  return HAL_OK;
 8005678:	e771      	b.n	800555e <HAL_DSI_ExitULPM+0x2a>
  else if ((hdsi->Instance->PCONFR & DSI_PCONFR_NL) == DSI_TWO_DATA_LANES)
 800567a:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 800567e:	f002 0203 	and.w	r2, r2, #3
 8005682:	2a01      	cmp	r2, #1
 8005684:	f47f af68 	bne.w	8005558 <HAL_DSI_ExitULPM+0x24>
    if ((hdsi->Instance->PSR & (DSI_PSR_UAN0 | DSI_PSR_PSS0 | DSI_PSR_PSS1 | \
 8005688:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800568c:	f403 73d8 	and.w	r3, r3, #432	@ 0x1b0
 8005690:	f5b3 7fd8 	cmp.w	r3, #432	@ 0x1b0
 8005694:	e7e1      	b.n	800565a <HAL_DSI_ExitULPM+0x126>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8005696:	f7fe fead 	bl	80043f4 <HAL_GetTick>
 800569a:	1b40      	subs	r0, r0, r5
 800569c:	2864      	cmp	r0, #100	@ 0x64
 800569e:	d9e4      	bls.n	800566a <HAL_DSI_ExitULPM+0x136>
 80056a0:	e7aa      	b.n	80055f8 <HAL_DSI_ExitULPM+0xc4>
  __HAL_LOCK(hdsi);
 80056a2:	2002      	movs	r0, #2
 80056a4:	e75b      	b.n	800555e <HAL_DSI_ExitULPM+0x2a>
 80056a6:	bf00      	nop
 80056a8:	46020c00 	.word	0x46020c00

080056ac <HAL_GPIO_Init>:
  * @param  pGPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, const GPIO_InitTypeDef *pGPIO_Init)
{
 80056ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /* Configure the External Interrupt or event for the current IO */
      if ((pGPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        tmp = EXTI->EXTICR[position >> 2U];
        tmp &= ~((0x0FUL) << (8U * (position & 0x03U)));
        tmp |= (GPIO_GET_INDEX(GPIOx) << (8U * (position & 0x03U)));
 80056b0:	4b81      	ldr	r3, [pc, #516]	@ (80058b8 <HAL_GPIO_Init+0x20c>)
{
 80056b2:	b085      	sub	sp, #20
        tmp |= (GPIO_GET_INDEX(GPIOx) << (8U * (position & 0x03U)));
 80056b4:	ea03 2390 	and.w	r3, r3, r0, lsr #10
 80056b8:	9303      	str	r3, [sp, #12]
 80056ba:	4b80      	ldr	r3, [pc, #512]	@ (80058bc <HAL_GPIO_Init+0x210>)
  uint32_t position = 0U;
 80056bc:	2200      	movs	r2, #0
 80056be:	9302      	str	r3, [sp, #8]
        tmp &= ~(GPIO_PUPDR_PUPD0 << (pin_position * 2U));
 80056c0:	f04f 0e03 	mov.w	lr, #3
  while (((pGPIO_Init->Pin) >> position) != 0U)
 80056c4:	4603      	mov	r3, r0
        EXTI->EXTICR[position >> 2U] = tmp;

        /* Clear Rising Falling edge configuration */
        tmp = EXTI->RTSR1;
 80056c6:	4f7e      	ldr	r7, [pc, #504]	@ (80058c0 <HAL_GPIO_Init+0x214>)
  while (((pGPIO_Init->Pin) >> position) != 0U)
 80056c8:	680e      	ldr	r6, [r1, #0]
 80056ca:	fa36 f402 	lsrs.w	r4, r6, r2
 80056ce:	d102      	bne.n	80056d6 <HAL_GPIO_Init+0x2a>
        EXTI->IMR1 = tmp;
      }
    }
    position++;
  }
}
 80056d0:	b005      	add	sp, #20
 80056d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = (pGPIO_Init->Pin) & (1UL << position);
 80056d6:	2401      	movs	r4, #1
 80056d8:	fa04 fc02 	lsl.w	ip, r4, r2
    if (iocurrent != 0U)
 80056dc:	ea1c 0406 	ands.w	r4, ip, r6
 80056e0:	9401      	str	r4, [sp, #4]
 80056e2:	f000 808e 	beq.w	8005802 <HAL_GPIO_Init+0x156>
      if (GPIOx == LPGPIO1)
 80056e6:	4c77      	ldr	r4, [pc, #476]	@ (80058c4 <HAL_GPIO_Init+0x218>)
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE_OUTPUT_PP) << position);
 80056e8:	684d      	ldr	r5, [r1, #4]
      if (GPIOx == LPGPIO1)
 80056ea:	42a0      	cmp	r0, r4
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 80056ec:	f025 0810 	bic.w	r8, r5, #16
      if (GPIOx == LPGPIO1)
 80056f0:	f040 808c 	bne.w	800580c <HAL_GPIO_Init+0x160>
        tmp &= ~(0x0FUL << (((pin_position) & 0x07U) * 4U));
 80056f4:	260f      	movs	r6, #15
        tmp = GPIOx->MODER;
 80056f6:	6804      	ldr	r4, [r0, #0]
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE_OUTPUT_PP) << position);
 80056f8:	f005 0301 	and.w	r3, r5, #1
        tmp &= ~(LPGPIO_MODER_MOD0 << position);
 80056fc:	ea24 040c 	bic.w	r4, r4, ip
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE_OUTPUT_PP) << position);
 8005700:	4093      	lsls	r3, r2
 8005702:	4323      	orrs	r3, r4
        pin_position = LPGPIO_Map[position].Pin_Pos;
 8005704:	9c02      	ldr	r4, [sp, #8]
        GPIOx->MODER = tmp;
 8005706:	6003      	str	r3, [r0, #0]
        pin_position = LPGPIO_Map[position].Pin_Pos;
 8005708:	6864      	ldr	r4, [r4, #4]
        p_gpio = LPGPIO_Map[position].GPIO_PORT;
 800570a:	9b02      	ldr	r3, [sp, #8]
        tmp &= ~(0x0FUL << (((pin_position) & 0x07U) * 4U));
 800570c:	f004 0c07 	and.w	ip, r4, #7
 8005710:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8005714:	fa06 fa0c 	lsl.w	sl, r6, ip
        tmp |= ((GPIO_AF11_LPGPIO1 & 0x0FUL) << (((pin_position) & 0x07U) * 4U));
 8005718:	260b      	movs	r6, #11
 800571a:	fa06 fc0c 	lsl.w	ip, r6, ip
        tmp |= ((GPIO_MODE_AF_PP & 0x0FUL) << (pin_position * 2U));
 800571e:	2602      	movs	r6, #2
        p_gpio = LPGPIO_Map[position].GPIO_PORT;
 8005720:	681b      	ldr	r3, [r3, #0]
        tmp = p_gpio->AFR[(pin_position) >> 3U];
 8005722:	ea4f 09d4 	mov.w	r9, r4, lsr #3
 8005726:	eb03 0989 	add.w	r9, r3, r9, lsl #2
 800572a:	f8d9 b020 	ldr.w	fp, [r9, #32]
        tmp &= ~(0x0FUL << (((pin_position) & 0x07U) * 4U));
 800572e:	ea2b 0a0a 	bic.w	sl, fp, sl
        tmp |= ((GPIO_AF11_LPGPIO1 & 0x0FUL) << (((pin_position) & 0x07U) * 4U));
 8005732:	ea4c 0c0a 	orr.w	ip, ip, sl
        p_gpio->AFR[(pin_position) >> 3U] = tmp;
 8005736:	f8c9 c020 	str.w	ip, [r9, #32]
        tmp = p_gpio->MODER;
 800573a:	f8d3 9000 	ldr.w	r9, [r3]
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * 2U));
 800573e:	ea4f 0c44 	mov.w	ip, r4, lsl #1
 8005742:	fa0e fa0c 	lsl.w	sl, lr, ip
 8005746:	ea29 090a 	bic.w	r9, r9, sl
        tmp |= ((GPIO_MODE_AF_PP & 0x0FUL) << (pin_position * 2U));
 800574a:	fa06 fc0c 	lsl.w	ip, r6, ip
 800574e:	ea4c 0c09 	orr.w	ip, ip, r9
        p_gpio->MODER = tmp;
 8005752:	f8c3 c000 	str.w	ip, [r3]
      if ((pGPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8005756:	f108 38ff 	add.w	r8, r8, #4294967295
 800575a:	f1b8 0f01 	cmp.w	r8, #1
 800575e:	f240 8082 	bls.w	8005866 <HAL_GPIO_Init+0x1ba>
      if (pGPIO_Init->Mode != GPIO_MODE_ANALOG)
 8005762:	2d03      	cmp	r5, #3
 8005764:	d04d      	beq.n	8005802 <HAL_GPIO_Init+0x156>
        tmp = p_gpio->PUPDR;
 8005766:	f8d3 800c 	ldr.w	r8, [r3, #12]
        tmp |= ((pGPIO_Init->Pull) << (pin_position * 2U));
 800576a:	688e      	ldr	r6, [r1, #8]
        tmp &= ~(GPIO_PUPDR_PUPD0 << (pin_position * 2U));
 800576c:	0064      	lsls	r4, r4, #1
 800576e:	fa0e fc04 	lsl.w	ip, lr, r4
 8005772:	ea28 0c0c 	bic.w	ip, r8, ip
        tmp |= ((pGPIO_Init->Pull) << (pin_position * 2U));
 8005776:	fa06 f404 	lsl.w	r4, r6, r4
 800577a:	ea44 040c 	orr.w	r4, r4, ip
        p_gpio->PUPDR = tmp;
 800577e:	60dc      	str	r4, [r3, #12]
      if ((pGPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8005780:	00ec      	lsls	r4, r5, #3
 8005782:	d53e      	bpl.n	8005802 <HAL_GPIO_Init+0x156>
        tmp &= ~((0x0FUL) << (8U * (position & 0x03U)));
 8005784:	260f      	movs	r6, #15
 8005786:	f022 0c03 	bic.w	ip, r2, #3
 800578a:	f10c 4c8c 	add.w	ip, ip, #1174405120	@ 0x46000000
 800578e:	f002 0403 	and.w	r4, r2, #3
 8005792:	f50c 3c08 	add.w	ip, ip, #139264	@ 0x22000
 8005796:	00e4      	lsls	r4, r4, #3
        tmp = EXTI->EXTICR[position >> 2U];
 8005798:	f8dc 9060 	ldr.w	r9, [ip, #96]	@ 0x60
        tmp &= ~((0x0FUL) << (8U * (position & 0x03U)));
 800579c:	fa06 f804 	lsl.w	r8, r6, r4
        tmp |= (GPIO_GET_INDEX(GPIOx) << (8U * (position & 0x03U)));
 80057a0:	9e03      	ldr	r6, [sp, #12]
        tmp &= ~((0x0FUL) << (8U * (position & 0x03U)));
 80057a2:	ea29 0808 	bic.w	r8, r9, r8
        tmp |= (GPIO_GET_INDEX(GPIOx) << (8U * (position & 0x03U)));
 80057a6:	fa06 f404 	lsl.w	r4, r6, r4
        tmp &= ~((uint32_t)iocurrent);
 80057aa:	9e01      	ldr	r6, [sp, #4]
        tmp |= (GPIO_GET_INDEX(GPIOx) << (8U * (position & 0x03U)));
 80057ac:	ea44 0408 	orr.w	r4, r4, r8
        EXTI->EXTICR[position >> 2U] = tmp;
 80057b0:	f8cc 4060 	str.w	r4, [ip, #96]	@ 0x60
        tmp &= ~((uint32_t)iocurrent);
 80057b4:	ea6f 0c06 	mvn.w	ip, r6
        if ((pGPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80057b8:	02ee      	lsls	r6, r5, #11
          tmp |= iocurrent;
 80057ba:	bf48      	it	mi
 80057bc:	9e01      	ldrmi	r6, [sp, #4]
        tmp = EXTI->RTSR1;
 80057be:	683c      	ldr	r4, [r7, #0]
          tmp |= iocurrent;
 80057c0:	bf4c      	ite	mi
 80057c2:	4334      	orrmi	r4, r6
        tmp &= ~((uint32_t)iocurrent);
 80057c4:	ea0c 0404 	andpl.w	r4, ip, r4
        EXTI->RTSR1 = tmp;
 80057c8:	603c      	str	r4, [r7, #0]
        if ((pGPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80057ca:	02ae      	lsls	r6, r5, #10
        tmp = EXTI->FTSR1;
 80057cc:	687c      	ldr	r4, [r7, #4]
          tmp |= iocurrent;
 80057ce:	bf4a      	itet	mi
 80057d0:	9e01      	ldrmi	r6, [sp, #4]
        tmp &= ~((uint32_t)iocurrent);
 80057d2:	ea0c 0404 	andpl.w	r4, ip, r4
          tmp |= iocurrent;
 80057d6:	4334      	orrmi	r4, r6
        EXTI->FTSR1 = tmp;
 80057d8:	607c      	str	r4, [r7, #4]
        if ((pGPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80057da:	03ae      	lsls	r6, r5, #14
        tmp = EXTI->EMR1;
 80057dc:	f8d7 4084 	ldr.w	r4, [r7, #132]	@ 0x84
          tmp |= iocurrent;
 80057e0:	bf4a      	itet	mi
 80057e2:	9e01      	ldrmi	r6, [sp, #4]
        tmp &= ~((uint32_t)iocurrent);
 80057e4:	ea0c 0404 	andpl.w	r4, ip, r4
          tmp |= iocurrent;
 80057e8:	4334      	orrmi	r4, r6
        EXTI->EMR1 = tmp;
 80057ea:	f8c7 4084 	str.w	r4, [r7, #132]	@ 0x84
        if ((pGPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80057ee:	03ed      	lsls	r5, r5, #15
        tmp = EXTI->IMR1;
 80057f0:	f8d7 4080 	ldr.w	r4, [r7, #128]	@ 0x80
          tmp |= iocurrent;
 80057f4:	bf4a      	itet	mi
 80057f6:	9d01      	ldrmi	r5, [sp, #4]
        tmp &= ~((uint32_t)iocurrent);
 80057f8:	ea0c 0404 	andpl.w	r4, ip, r4
          tmp |= iocurrent;
 80057fc:	432c      	orrmi	r4, r5
        EXTI->IMR1 = tmp;
 80057fe:	f8c7 4080 	str.w	r4, [r7, #128]	@ 0x80
    position++;
 8005802:	9c02      	ldr	r4, [sp, #8]
 8005804:	3201      	adds	r2, #1
 8005806:	3408      	adds	r4, #8
 8005808:	9402      	str	r4, [sp, #8]
 800580a:	e75d      	b.n	80056c8 <HAL_GPIO_Init+0x1c>
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 800580c:	ea4f 0942 	mov.w	r9, r2, lsl #1
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * 2U));
 8005810:	fa0e f409 	lsl.w	r4, lr, r9
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * 2U));
 8005814:	f005 0c03 	and.w	ip, r5, #3
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 8005818:	f1b8 0f02 	cmp.w	r8, #2
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * 2U));
 800581c:	ea6f 0404 	mvn.w	r4, r4
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * 2U));
 8005820:	fa0c fc09 	lsl.w	ip, ip, r9
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 8005824:	d13e      	bne.n	80058a4 <HAL_GPIO_Init+0x1f8>
        tmp &= ~(0x0FUL << ((position & 0x07U) * 4U));
 8005826:	260f      	movs	r6, #15
        tmp = GPIOx->AFR[position >> 3U];
 8005828:	ea4f 08d2 	mov.w	r8, r2, lsr #3
        tmp &= ~(0x0FUL << ((position & 0x07U) * 4U));
 800582c:	f002 0907 	and.w	r9, r2, #7
 8005830:	eb00 0888 	add.w	r8, r0, r8, lsl #2
 8005834:	ea4f 0989 	mov.w	r9, r9, lsl #2
        tmp = GPIOx->AFR[position >> 3U];
 8005838:	f8d8 a020 	ldr.w	sl, [r8, #32]
        tmp &= ~(0x0FUL << ((position & 0x07U) * 4U));
 800583c:	fa06 fb09 	lsl.w	fp, r6, r9
        tmp |= ((pGPIO_Init->Alternate & 0x0FUL) << ((position & 0x07U) * 4U));
 8005840:	690e      	ldr	r6, [r1, #16]
        tmp &= ~(0x0FUL << ((position & 0x07U) * 4U));
 8005842:	ea2a 0a0b 	bic.w	sl, sl, fp
        tmp |= ((pGPIO_Init->Alternate & 0x0FUL) << ((position & 0x07U) * 4U));
 8005846:	f006 0b0f 	and.w	fp, r6, #15
 800584a:	fa0b fb09 	lsl.w	fp, fp, r9
 800584e:	ea4b 0b0a 	orr.w	fp, fp, sl
        GPIOx->AFR[position >> 3U] = tmp;
 8005852:	f8c8 b020 	str.w	fp, [r8, #32]
        tmp = p_gpio->MODER;
 8005856:	f8d3 8000 	ldr.w	r8, [r3]
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * 2U));
 800585a:	ea04 0808 	and.w	r8, r4, r8
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * 2U));
 800585e:	ea48 040c 	orr.w	r4, r8, ip
        p_gpio->MODER = tmp;
 8005862:	601c      	str	r4, [r3, #0]
    pin_position = position;
 8005864:	4614      	mov	r4, r2
        tmp |= (pGPIO_Init->Speed << (pin_position * 2U));
 8005866:	68ce      	ldr	r6, [r1, #12]
        tmp &= ~(GPIO_OSPEEDR_OSPEED0 << (pin_position * 2U));
 8005868:	ea4f 0844 	mov.w	r8, r4, lsl #1
 800586c:	fa0e f908 	lsl.w	r9, lr, r8
        tmp |= (pGPIO_Init->Speed << (pin_position * 2U));
 8005870:	fa06 f808 	lsl.w	r8, r6, r8
        tmp &= ~(GPIO_OTYPER_OT0 << pin_position);
 8005874:	2601      	movs	r6, #1
        tmp = p_gpio->OSPEEDR;
 8005876:	f8d3 c008 	ldr.w	ip, [r3, #8]
        tmp &= ~(GPIO_OSPEEDR_OSPEED0 << (pin_position * 2U));
 800587a:	ea2c 0c09 	bic.w	ip, ip, r9
        tmp |= (pGPIO_Init->Speed << (pin_position * 2U));
 800587e:	ea48 080c 	orr.w	r8, r8, ip
        p_gpio->OSPEEDR = tmp;
 8005882:	f8c3 8008 	str.w	r8, [r3, #8]
        tmp = p_gpio->OTYPER;
 8005886:	f8d3 8004 	ldr.w	r8, [r3, #4]
        tmp &= ~(GPIO_OTYPER_OT0 << pin_position);
 800588a:	fa06 fc04 	lsl.w	ip, r6, r4
 800588e:	ea28 080c 	bic.w	r8, r8, ip
        tmp |= (((pGPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << pin_position);
 8005892:	f3c5 1c00 	ubfx	ip, r5, #4, #1
 8005896:	fa0c fc04 	lsl.w	ip, ip, r4
 800589a:	ea4c 0c08 	orr.w	ip, ip, r8
        p_gpio->OTYPER = tmp;
 800589e:	f8c3 c004 	str.w	ip, [r3, #4]
 80058a2:	e75e      	b.n	8005762 <HAL_GPIO_Init+0xb6>
        tmp = p_gpio->MODER;
 80058a4:	f8d3 9000 	ldr.w	r9, [r3]
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * 2U));
 80058a8:	ea04 0409 	and.w	r4, r4, r9
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * 2U));
 80058ac:	ea44 040c 	orr.w	r4, r4, ip
        p_gpio->MODER = tmp;
 80058b0:	601c      	str	r4, [r3, #0]
    pin_position = position;
 80058b2:	4614      	mov	r4, r2
 80058b4:	e74f      	b.n	8005756 <HAL_GPIO_Init+0xaa>
 80058b6:	bf00      	nop
 80058b8:	002f7f7f 	.word	0x002f7f7f
 80058bc:	08027064 	.word	0x08027064
 80058c0:	46022000 	.word	0x46022000
 80058c4:	46020000 	.word	0x46020000

080058c8 <HAL_GPIO_DeInit>:

        /*------------------------- EXTI Mode Configuration --------------------*/
        /* Clear the External Interrupt or Event for the current IO */
        tmp = EXTI->EXTICR[position >> 2U];
        tmp &= ((0x0FUL) << (8U * (position & 0x03U)));
        if (tmp == (GPIO_GET_INDEX(GPIOx) << (8U * (position & 0x03U))))
 80058c8:	4b3c      	ldr	r3, [pc, #240]	@ (80059bc <HAL_GPIO_DeInit+0xf4>)
{
 80058ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    iocurrent = (GPIO_Pin) & (1UL << position);
 80058ce:	f04f 0c01 	mov.w	ip, #1
        if (tmp == (GPIO_GET_INDEX(GPIOx) << (8U * (position & 0x03U))))
 80058d2:	ea03 2890 	and.w	r8, r3, r0, lsr #10
  uint32_t position = 0U;
 80058d6:	2400      	movs	r4, #0
  while ((GPIO_Pin >> position) != 0U)
 80058d8:	4603      	mov	r3, r0
        }
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      p_gpio->MODER |= (GPIO_MODER_MODE0 << (pin_position * 2U));
 80058da:	f04f 0903 	mov.w	r9, #3

      /* Configure the default Alternate Function in current IO */
      p_gpio->AFR[pin_position >> 3U] &= ~(0x0FUL << ((pin_position & 0x07U) * 4U));
 80058de:	f04f 0e0f 	mov.w	lr, #15
 80058e2:	4f37      	ldr	r7, [pc, #220]	@ (80059c0 <HAL_GPIO_DeInit+0xf8>)
  while ((GPIO_Pin >> position) != 0U)
 80058e4:	fa31 f204 	lsrs.w	r2, r1, r4
 80058e8:	d101      	bne.n	80058ee <HAL_GPIO_DeInit+0x26>
      p_gpio->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (pin_position * 2U));
    }

    position++;
  }
}
 80058ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = (GPIO_Pin) & (1UL << position);
 80058ee:	fa0c f604 	lsl.w	r6, ip, r4
    if (iocurrent != 0U)
 80058f2:	400e      	ands	r6, r1
 80058f4:	d02d      	beq.n	8005952 <HAL_GPIO_DeInit+0x8a>
      if (GPIOx == LPGPIO1)
 80058f6:	4a33      	ldr	r2, [pc, #204]	@ (80059c4 <HAL_GPIO_DeInit+0xfc>)
 80058f8:	4290      	cmp	r0, r2
 80058fa:	d12d      	bne.n	8005958 <HAL_GPIO_DeInit+0x90>
        pin_position = LPGPIO_Map[position].Pin_Pos;
 80058fc:	e9d7 3200 	ldrd	r3, r2, [r7]
        LPGPIO1->MODER &= ~(1U << pin_position);
 8005900:	6805      	ldr	r5, [r0, #0]
 8005902:	fa0c f602 	lsl.w	r6, ip, r2
 8005906:	ea25 0506 	bic.w	r5, r5, r6
 800590a:	6005      	str	r5, [r0, #0]
      p_gpio->MODER |= (GPIO_MODER_MODE0 << (pin_position * 2U));
 800590c:	681e      	ldr	r6, [r3, #0]
 800590e:	0055      	lsls	r5, r2, #1
 8005910:	fa09 f505 	lsl.w	r5, r9, r5
 8005914:	432e      	orrs	r6, r5
      p_gpio->AFR[pin_position >> 3U] &= ~(0x0FUL << ((pin_position & 0x07U) * 4U));
 8005916:	ea4f 0ad2 	mov.w	sl, r2, lsr #3
      p_gpio->MODER |= (GPIO_MODER_MODE0 << (pin_position * 2U));
 800591a:	601e      	str	r6, [r3, #0]
      p_gpio->AFR[pin_position >> 3U] &= ~(0x0FUL << ((pin_position & 0x07U) * 4U));
 800591c:	eb03 0a8a 	add.w	sl, r3, sl, lsl #2
 8005920:	f002 0607 	and.w	r6, r2, #7
 8005924:	f8da b020 	ldr.w	fp, [sl, #32]
 8005928:	00b6      	lsls	r6, r6, #2
 800592a:	fa0e f606 	lsl.w	r6, lr, r6
 800592e:	ea2b 0606 	bic.w	r6, fp, r6
 8005932:	f8ca 6020 	str.w	r6, [sl, #32]
      p_gpio->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (pin_position * 2U));
 8005936:	689e      	ldr	r6, [r3, #8]
      p_gpio->OTYPER  &= ~(GPIO_OTYPER_OT0 << pin_position);
 8005938:	fa0c f202 	lsl.w	r2, ip, r2
      p_gpio->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (pin_position * 2U));
 800593c:	ea26 0605 	bic.w	r6, r6, r5
 8005940:	609e      	str	r6, [r3, #8]
      p_gpio->OTYPER  &= ~(GPIO_OTYPER_OT0 << pin_position);
 8005942:	685e      	ldr	r6, [r3, #4]
 8005944:	ea26 0202 	bic.w	r2, r6, r2
 8005948:	605a      	str	r2, [r3, #4]
      p_gpio->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (pin_position * 2U));
 800594a:	68da      	ldr	r2, [r3, #12]
 800594c:	ea22 0205 	bic.w	r2, r2, r5
 8005950:	60da      	str	r2, [r3, #12]
    position++;
 8005952:	3401      	adds	r4, #1
 8005954:	3708      	adds	r7, #8
 8005956:	e7c5      	b.n	80058e4 <HAL_GPIO_DeInit+0x1c>
        tmp = EXTI->EXTICR[position >> 2U];
 8005958:	f024 0503 	bic.w	r5, r4, #3
 800595c:	f105 458c 	add.w	r5, r5, #1174405120	@ 0x46000000
 8005960:	f505 3508 	add.w	r5, r5, #139264	@ 0x22000
        tmp &= ((0x0FUL) << (8U * (position & 0x03U)));
 8005964:	f004 0203 	and.w	r2, r4, #3
 8005968:	00d2      	lsls	r2, r2, #3
        tmp = EXTI->EXTICR[position >> 2U];
 800596a:	f8d5 b060 	ldr.w	fp, [r5, #96]	@ 0x60
        tmp &= ((0x0FUL) << (8U * (position & 0x03U)));
 800596e:	fa0e fa02 	lsl.w	sl, lr, r2
 8005972:	ea0a 0b0b 	and.w	fp, sl, fp
        if (tmp == (GPIO_GET_INDEX(GPIOx) << (8U * (position & 0x03U))))
 8005976:	fa08 f202 	lsl.w	r2, r8, r2
 800597a:	455a      	cmp	r2, fp
 800597c:	d11b      	bne.n	80059b6 <HAL_GPIO_DeInit+0xee>
          EXTI->IMR1 &= ~(iocurrent);
 800597e:	4a12      	ldr	r2, [pc, #72]	@ (80059c8 <HAL_GPIO_DeInit+0x100>)
 8005980:	f8d2 b080 	ldr.w	fp, [r2, #128]	@ 0x80
 8005984:	ea2b 0b06 	bic.w	fp, fp, r6
 8005988:	f8c2 b080 	str.w	fp, [r2, #128]	@ 0x80
          EXTI->EMR1 &= ~(iocurrent);
 800598c:	f8d2 b084 	ldr.w	fp, [r2, #132]	@ 0x84
 8005990:	ea2b 0b06 	bic.w	fp, fp, r6
 8005994:	f8c2 b084 	str.w	fp, [r2, #132]	@ 0x84
          EXTI->RTSR1 &= ~(iocurrent);
 8005998:	f8d2 b000 	ldr.w	fp, [r2]
 800599c:	ea2b 0b06 	bic.w	fp, fp, r6
 80059a0:	f8c2 b000 	str.w	fp, [r2]
          EXTI->FTSR1 &= ~(iocurrent);
 80059a4:	f8d2 b004 	ldr.w	fp, [r2, #4]
 80059a8:	ea2b 0606 	bic.w	r6, fp, r6
 80059ac:	6056      	str	r6, [r2, #4]
          EXTI->EXTICR[position >> 2U] &= ~tmp;
 80059ae:	6e2a      	ldr	r2, [r5, #96]	@ 0x60
 80059b0:	ea22 020a 	bic.w	r2, r2, sl
 80059b4:	662a      	str	r2, [r5, #96]	@ 0x60
    pin_position = position;
 80059b6:	4622      	mov	r2, r4
 80059b8:	e7a8      	b.n	800590c <HAL_GPIO_DeInit+0x44>
 80059ba:	bf00      	nop
 80059bc:	002f7f7f 	.word	0x002f7f7f
 80059c0:	08027064 	.word	0x08027064
 80059c4:	46020000 	.word	0x46020000
 80059c8:	46022000 	.word	0x46022000

080059cc <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0U)
 80059cc:	6903      	ldr	r3, [r0, #16]
 80059ce:	4219      	tst	r1, r3
  {
    bitstatus = GPIO_PIN_RESET;
  }

  return bitstatus;
}
 80059d0:	bf14      	ite	ne
 80059d2:	2001      	movne	r0, #1
 80059d4:	2000      	moveq	r0, #0
 80059d6:	4770      	bx	lr

080059d8 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 80059d8:	b10a      	cbz	r2, 80059de <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 80059da:	6181      	str	r1, [r0, #24]
 80059dc:	4770      	bx	lr
  }
  else
  {
    GPIOx->BRR  = (uint32_t)GPIO_Pin;
 80059de:	6281      	str	r1, [r0, #40]	@ 0x28
  }
}
 80059e0:	4770      	bx	lr

080059e2 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 80059e2:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 80059e4:	ea01 0203 	and.w	r2, r1, r3
 80059e8:	ea21 0103 	bic.w	r1, r1, r3
 80059ec:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80059f0:	6181      	str	r1, [r0, #24]
}
 80059f2:	4770      	bx	lr

080059f4 <HAL_GPIO_EnableHighSPeedLowVoltage>:
  * @param  GPIO_Pin: specifies the port bit to be written.
  *         This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_EnableHighSPeedLowVoltage(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
 80059f4:	b5f0      	push	{r4, r5, r6, r7, lr}
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80059f6:	fa91 fea1 	rbit	lr, r1

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Save GPIO port address */
  p_gpio = GPIOx;
 80059fa:	4604      	mov	r4, r0
  uint32_t position = 0U;
 80059fc:	2300      	movs	r3, #0

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0U)
  {
    /* Get current io position */
    iocurrent = GPIO_Pin & (1UL << position);
 80059fe:	2601      	movs	r6, #1

    if (iocurrent != 0U)
    {
      /* In case of LPGPIO Port */
      if (GPIOx == LPGPIO1)
 8005a00:	f8df c038 	ldr.w	ip, [pc, #56]	@ 8005a3c <HAL_GPIO_EnableHighSPeedLowVoltage+0x48>
      {
        /* Get GPIO pin position */
        position = POSITION_VAL(GPIO_Pin);

        /* Save GPIO Port and pin index */
        p_gpio = LPGPIO_Map[position].GPIO_PORT;
 8005a04:	4f0c      	ldr	r7, [pc, #48]	@ (8005a38 <HAL_GPIO_EnableHighSPeedLowVoltage+0x44>)
  while ((GPIO_Pin >> position) != 0U)
 8005a06:	fa51 f203 	asrs.w	r2, r1, r3
 8005a0a:	d100      	bne.n	8005a0e <HAL_GPIO_EnableHighSPeedLowVoltage+0x1a>
      /* Set HSLVR gpio pin */
      SET_BIT(p_gpio->HSLVR, pin_position);
    }
    position++;
  }
}
 8005a0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    iocurrent = GPIO_Pin & (1UL << position);
 8005a0e:	fa06 f203 	lsl.w	r2, r6, r3
    if (iocurrent != 0U)
 8005a12:	4211      	tst	r1, r2
 8005a14:	d00d      	beq.n	8005a32 <HAL_GPIO_EnableHighSPeedLowVoltage+0x3e>
      if (GPIOx == LPGPIO1)
 8005a16:	4560      	cmp	r0, ip
 8005a18:	d108      	bne.n	8005a2c <HAL_GPIO_EnableHighSPeedLowVoltage+0x38>
  return __builtin_clz(value);
 8005a1a:	fabe f38e 	clz	r3, lr
        pin_position = (1UL << (LPGPIO_Map[position].Pin_Pos));
 8005a1e:	eb07 02c3 	add.w	r2, r7, r3, lsl #3
 8005a22:	6852      	ldr	r2, [r2, #4]
        p_gpio = LPGPIO_Map[position].GPIO_PORT;
 8005a24:	f857 4033 	ldr.w	r4, [r7, r3, lsl #3]
        pin_position = (1UL << (LPGPIO_Map[position].Pin_Pos));
 8005a28:	fa06 f202 	lsl.w	r2, r6, r2
      SET_BIT(p_gpio->HSLVR, pin_position);
 8005a2c:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
 8005a2e:	432a      	orrs	r2, r5
 8005a30:	62e2      	str	r2, [r4, #44]	@ 0x2c
    position++;
 8005a32:	3301      	adds	r3, #1
 8005a34:	e7e7      	b.n	8005a06 <HAL_GPIO_EnableHighSPeedLowVoltage+0x12>
 8005a36:	bf00      	nop
 8005a38:	08027064 	.word	0x08027064
 8005a3c:	46020000 	.word	0x46020000

08005a40 <HAL_GPIO_EXTI_Rising_Callback>:
  UNUSED(GPIO_Pin);

  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Rising_Callback could be implemented in the user file
   */
}
 8005a40:	4770      	bx	lr
	...

08005a44 <HAL_GPIO_EXTI_IRQHandler>:
{
 8005a44:	b538      	push	{r3, r4, r5, lr}
  if (__HAL_GPIO_EXTI_GET_RISING_IT(GPIO_Pin) != 0U)
 8005a46:	4d08      	ldr	r5, [pc, #32]	@ (8005a68 <HAL_GPIO_EXTI_IRQHandler+0x24>)
{
 8005a48:	4604      	mov	r4, r0
  if (__HAL_GPIO_EXTI_GET_RISING_IT(GPIO_Pin) != 0U)
 8005a4a:	68eb      	ldr	r3, [r5, #12]
 8005a4c:	4203      	tst	r3, r0
 8005a4e:	d002      	beq.n	8005a56 <HAL_GPIO_EXTI_IRQHandler+0x12>
    __HAL_GPIO_EXTI_CLEAR_RISING_IT(GPIO_Pin);
 8005a50:	60e8      	str	r0, [r5, #12]
    HAL_GPIO_EXTI_Rising_Callback(GPIO_Pin);
 8005a52:	f7ff fff5 	bl	8005a40 <HAL_GPIO_EXTI_Rising_Callback>
  if (__HAL_GPIO_EXTI_GET_FALLING_IT(GPIO_Pin) != 0U)
 8005a56:	692b      	ldr	r3, [r5, #16]
 8005a58:	421c      	tst	r4, r3
 8005a5a:	d003      	beq.n	8005a64 <HAL_GPIO_EXTI_IRQHandler+0x20>
    HAL_GPIO_EXTI_Falling_Callback(GPIO_Pin);
 8005a5c:	4620      	mov	r0, r4
    __HAL_GPIO_EXTI_CLEAR_FALLING_IT(GPIO_Pin);
 8005a5e:	612c      	str	r4, [r5, #16]
    HAL_GPIO_EXTI_Falling_Callback(GPIO_Pin);
 8005a60:	f7fb fe56 	bl	8001710 <HAL_GPIO_EXTI_Falling_Callback>
}
 8005a64:	bd38      	pop	{r3, r4, r5, pc}
 8005a66:	bf00      	nop
 8005a68:	46022000 	.word	0x46022000

08005a6c <HAL_GPU2D_Init>:
  * @param  hgpu2d pointer to a GPU2D_HandleTypeDef structure that contains
  *                the configuration information for the GPU2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_GPU2D_Init(GPU2D_HandleTypeDef *hgpu2d)
{
 8005a6c:	b510      	push	{r4, lr}
  /* Check the GPU2D handle validity */
  if (hgpu2d == NULL)
 8005a6e:	4604      	mov	r4, r0
 8005a70:	b170      	cbz	r0, 8005a90 <HAL_GPU2D_Init+0x24>
  }

  /* Check the parameters */
  assert_param(IS_GPU2D_ALL_INSTANCE(hgpu2d->Instance));

  if (hgpu2d->State == HAL_GPU2D_STATE_RESET)
 8005a72:	7943      	ldrb	r3, [r0, #5]
 8005a74:	b93b      	cbnz	r3, 8005a86 <HAL_GPU2D_Init+0x1a>

    /* Init the low level hardware */
    hgpu2d->MspInitCallback(hgpu2d);
#else /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 0 */
    /* Init the low level hardware */
    HAL_GPU2D_MspInit(hgpu2d);
 8005a76:	f7fb fb33 	bl	80010e0 <HAL_GPU2D_MspInit>
  /* Reset the CommandListCpltCallback handler */
  hgpu2d->CommandListCpltCallback = NULL;
#endif /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 1 */

  /* Update error code */
  hgpu2d->ErrorCode = HAL_GPU2D_ERROR_NONE;
 8005a7a:	2000      	movs	r0, #0

  /* Initialize the GPU2D state*/
  hgpu2d->State = HAL_GPU2D_STATE_READY;

  /* Release Lock */
  __HAL_UNLOCK(hgpu2d);
 8005a7c:	f44f 7380 	mov.w	r3, #256	@ 0x100
  hgpu2d->ErrorCode = HAL_GPU2D_ERROR_NONE;
 8005a80:	60a0      	str	r0, [r4, #8]
  __HAL_UNLOCK(hgpu2d);
 8005a82:	80a3      	strh	r3, [r4, #4]

  return HAL_OK;
}
 8005a84:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hgpu2d);
 8005a86:	7903      	ldrb	r3, [r0, #4]
 8005a88:	2b01      	cmp	r3, #1
 8005a8a:	d1f6      	bne.n	8005a7a <HAL_GPU2D_Init+0xe>
 8005a8c:	2002      	movs	r0, #2
 8005a8e:	e7f9      	b.n	8005a84 <HAL_GPU2D_Init+0x18>
    return HAL_ERROR;
 8005a90:	2001      	movs	r0, #1
 8005a92:	e7f7      	b.n	8005a84 <HAL_GPU2D_Init+0x18>

08005a94 <HAL_GPU2D_ReadRegister>:
  assert_param(IS_GPU2D_ALL_INSTANCE(hgpu2d->Instance));
  assert_param(IS_GPU2D_OFFSET(offset));

  /* No locking is required since reading a register is an atomic operation
   * and doesn't incur a state change in hal_gpu2d. */
  value = GPU2D_ReadReg(hgpu2d->Instance, offset);
 8005a94:	6803      	ldr	r3, [r0, #0]
 8005a96:	58c8      	ldr	r0, [r1, r3]

  return value;
}
 8005a98:	4770      	bx	lr

08005a9a <HAL_GPU2D_WriteRegister>:
  assert_param(IS_GPU2D_ALL_INSTANCE(hgpu2d->Instance));
  assert_param(IS_GPU2D_OFFSET(offset));

  /* No locking is required since writing a register is an atomic operation
   * and doesn't incur a state change in hal_gpu2d. */
  GPU2D_WriteReg(hgpu2d->Instance, offset, value);
 8005a9a:	6803      	ldr	r3, [r0, #0]

  return HAL_OK;
}
 8005a9c:	2000      	movs	r0, #0
  GPU2D_WriteReg(hgpu2d->Instance, offset, value);
 8005a9e:	50ca      	str	r2, [r1, r3]
}
 8005aa0:	4770      	bx	lr

08005aa2 <HAL_GPU2D_IRQHandler>:
  *                the configuration information for the GPU2D.
  * @retval None
  */
void HAL_GPU2D_IRQHandler(GPU2D_HandleTypeDef *hgpu2d)
{
  uint32_t isr_flags = GPU2D_ReadReg(hgpu2d->Instance, GPU2D_ITCTRL);
 8005aa2:	6802      	ldr	r2, [r0, #0]
{
 8005aa4:	b508      	push	{r3, lr}
  uint32_t isr_flags = GPU2D_ReadReg(hgpu2d->Instance, GPU2D_ITCTRL);
 8005aa6:	f8d2 10f8 	ldr.w	r1, [r2, #248]	@ 0xf8

  /* Command List Complete Interrupt management */
  if ((isr_flags & GPU2D_FLAG_CLC) != 0U)
 8005aaa:	07c9      	lsls	r1, r1, #31
 8005aac:	d50a      	bpl.n	8005ac4 <HAL_GPU2D_IRQHandler+0x22>
  {
    uint32_t last_cl_id;

    /* Clear the completion flag */
    __HAL_GPU2D_CLEAR_FLAG(hgpu2d, GPU2D_FLAG_CLC);
 8005aae:	f8d2 10f8 	ldr.w	r1, [r2, #248]	@ 0xf8
 8005ab2:	f021 0101 	bic.w	r1, r1, #1
 8005ab6:	f8c2 10f8 	str.w	r1, [r2, #248]	@ 0xf8

    last_cl_id = GPU2D_ReadReg(hgpu2d->Instance, GPU2D_CLID);
 8005aba:	6803      	ldr	r3, [r0, #0]
 8005abc:	f8d3 1148 	ldr.w	r1, [r3, #328]	@ 0x148
    if (hgpu2d->CommandListCpltCallback != NULL)
    {
      hgpu2d->CommandListCpltCallback(hgpu2d, last_cl_id);
    }
#else /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 0 */
    HAL_GPU2D_CommandListCpltCallback(hgpu2d, last_cl_id);
 8005ac0:	f7fc fc1e 	bl	8002300 <HAL_GPU2D_CommandListCpltCallback>
#endif /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 1 */
  }
}
 8005ac4:	bd08      	pop	{r3, pc}

08005ac6 <HAL_GPU2D_ErrorCallback>:
            the HAL_GPU2D_ErrorCallback can be implemented in the user file.
            The default implementation stops the execution as an error is considered
            fatal and non recoverable.
   */

  for (;;)
 8005ac6:	e7fe      	b.n	8005ac6 <HAL_GPU2D_ErrorCallback>

08005ac8 <HAL_GPU2D_ER_IRQHandler>:
{
 8005ac8:	b508      	push	{r3, lr}
  HAL_GPU2D_ErrorCallback(hgpu2d);
 8005aca:	f7ff fffc 	bl	8005ac6 <HAL_GPU2D_ErrorCallback>
}
 8005ace:	bd08      	pop	{r3, pc}

08005ad0 <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8005ad0:	6803      	ldr	r3, [r0, #0]
 8005ad2:	699a      	ldr	r2, [r3, #24]
 8005ad4:	0791      	lsls	r1, r2, #30
  {
    hi2c->Instance->TXDR = 0x00U;
 8005ad6:	bf44      	itt	mi
 8005ad8:	2200      	movmi	r2, #0
 8005ada:	629a      	strmi	r2, [r3, #40]	@ 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005adc:	699a      	ldr	r2, [r3, #24]
 8005ade:	07d2      	lsls	r2, r2, #31
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8005ae0:	bf5e      	ittt	pl
 8005ae2:	699a      	ldrpl	r2, [r3, #24]
 8005ae4:	f042 0201 	orrpl.w	r2, r2, #1
 8005ae8:	619a      	strpl	r2, [r3, #24]
  }
}
 8005aea:	4770      	bx	lr

08005aec <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 8005aec:	b530      	push	{r4, r5, lr}
 8005aee:	9d03      	ldr	r5, [sp, #12]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 8005af0:	6804      	ldr	r4, [r0, #0]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8005af2:	432b      	orrs	r3, r5
 8005af4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  MODIFY_REG(hi2c->Instance->CR2, \
 8005af8:	4a06      	ldr	r2, [pc, #24]	@ (8005b14 <I2C_TransferConfig+0x28>)
 8005afa:	6860      	ldr	r0, [r4, #4]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8005afc:	f3c1 0109 	ubfx	r1, r1, #0, #10
 8005b00:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->CR2, \
 8005b02:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8005b06:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
  MODIFY_REG(hi2c->Instance->CR2, \
 8005b0a:	ea20 0002 	bic.w	r0, r0, r2
 8005b0e:	4303      	orrs	r3, r0
 8005b10:	6063      	str	r3, [r4, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 8005b12:	bd30      	pop	{r4, r5, pc}
 8005b14:	03ff63ff 	.word	0x03ff63ff

08005b18 <I2C_IsErrorOccurred>:
  uint32_t itflag   = hi2c->Instance->ISR;
 8005b18:	6803      	ldr	r3, [r0, #0]
{
 8005b1a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint32_t itflag   = hi2c->Instance->ISR;
 8005b1e:	699c      	ldr	r4, [r3, #24]
{
 8005b20:	4605      	mov	r5, r0
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8005b22:	f014 0410 	ands.w	r4, r4, #16
{
 8005b26:	460f      	mov	r7, r1
 8005b28:	4616      	mov	r6, r2
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8005b2a:	d06f      	beq.n	8005c0c <I2C_IsErrorOccurred+0xf4>
  uint32_t error_code = 0;
 8005b2c:	2400      	movs	r4, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005b2e:	2210      	movs	r2, #16
  HAL_StatusTypeDef status = HAL_OK;
 8005b30:	46a0      	mov	r8, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005b32:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8005b34:	682b      	ldr	r3, [r5, #0]
 8005b36:	699a      	ldr	r2, [r3, #24]
 8005b38:	0690      	lsls	r0, r2, #26
 8005b3a:	d461      	bmi.n	8005c00 <I2C_IsErrorOccurred+0xe8>
 8005b3c:	f1b8 0f00 	cmp.w	r8, #0
 8005b40:	d035      	beq.n	8005bae <I2C_IsErrorOccurred+0x96>
    status = HAL_ERROR;
 8005b42:	2001      	movs	r0, #1
    error_code |= HAL_I2C_ERROR_AF;
 8005b44:	f044 0404 	orr.w	r4, r4, #4
  itflag = hi2c->Instance->ISR;
 8005b48:	682e      	ldr	r6, [r5, #0]
 8005b4a:	69b3      	ldr	r3, [r6, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 8005b4c:	05d9      	lsls	r1, r3, #23
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8005b4e:	bf41      	itttt	mi
 8005b50:	f44f 7280 	movmi.w	r2, #256	@ 0x100
    status = HAL_ERROR;
 8005b54:	2001      	movmi	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8005b56:	61f2      	strmi	r2, [r6, #28]
    error_code |= HAL_I2C_ERROR_BERR;
 8005b58:	f044 0401 	orrmi.w	r4, r4, #1
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 8005b5c:	055a      	lsls	r2, r3, #21
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8005b5e:	bf41      	itttt	mi
 8005b60:	f44f 6280 	movmi.w	r2, #1024	@ 0x400
    status = HAL_ERROR;
 8005b64:	2001      	movmi	r0, #1
    error_code |= HAL_I2C_ERROR_OVR;
 8005b66:	f044 0408 	orrmi.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8005b6a:	61f2      	strmi	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 8005b6c:	059b      	lsls	r3, r3, #22
 8005b6e:	d54f      	bpl.n	8005c10 <I2C_IsErrorOccurred+0xf8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8005b70:	f44f 7300 	mov.w	r3, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
 8005b74:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8005b78:	61f3      	str	r3, [r6, #28]
    I2C_Flush_TXDR(hi2c);
 8005b7a:	4628      	mov	r0, r5
 8005b7c:	f7ff ffa8 	bl	8005ad0 <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 8005b80:	6873      	ldr	r3, [r6, #4]
    __HAL_UNLOCK(hi2c);
 8005b82:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 8005b84:	f023 73ff 	bic.w	r3, r3, #33423360	@ 0x1fe0000
 8005b88:	f423 338b 	bic.w	r3, r3, #71168	@ 0x11600
 8005b8c:	f423 73ff 	bic.w	r3, r3, #510	@ 0x1fe
 8005b90:	f023 0301 	bic.w	r3, r3, #1
 8005b94:	6073      	str	r3, [r6, #4]
    hi2c->ErrorCode |= error_code;
 8005b96:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 8005b98:	4323      	orrs	r3, r4
 8005b9a:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8005b9c:	2320      	movs	r3, #32
 8005b9e:	f885 3041 	strb.w	r3, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005ba2:	2300      	movs	r3, #0
 8005ba4:	f885 3042 	strb.w	r3, [r5, #66]	@ 0x42
    __HAL_UNLOCK(hi2c);
 8005ba8:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
 8005bac:	e032      	b.n	8005c14 <I2C_IsErrorOccurred+0xfc>
      if (Timeout != HAL_MAX_DELAY)
 8005bae:	1c7a      	adds	r2, r7, #1
 8005bb0:	d0c1      	beq.n	8005b36 <I2C_IsErrorOccurred+0x1e>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8005bb2:	f7fe fc1f 	bl	80043f4 <HAL_GetTick>
 8005bb6:	1b80      	subs	r0, r0, r6
 8005bb8:	42b8      	cmp	r0, r7
 8005bba:	d801      	bhi.n	8005bc0 <I2C_IsErrorOccurred+0xa8>
 8005bbc:	2f00      	cmp	r7, #0
 8005bbe:	d1b9      	bne.n	8005b34 <I2C_IsErrorOccurred+0x1c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 8005bc0:	682b      	ldr	r3, [r5, #0]
 8005bc2:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
 8005bc4:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8005bc8:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
 8005bca:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8005bcc:	0400      	lsls	r0, r0, #16
 8005bce:	d50a      	bpl.n	8005be6 <I2C_IsErrorOccurred+0xce>
 8005bd0:	0449      	lsls	r1, r1, #17
 8005bd2:	d408      	bmi.n	8005be6 <I2C_IsErrorOccurred+0xce>
              (tmp1 != I2C_CR2_STOP) && \
 8005bd4:	2a20      	cmp	r2, #32
 8005bd6:	d006      	beq.n	8005be6 <I2C_IsErrorOccurred+0xce>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8005bd8:	685a      	ldr	r2, [r3, #4]
 8005bda:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005bde:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
 8005be0:	f7fe fc08 	bl	80043f4 <HAL_GetTick>
 8005be4:	4606      	mov	r6, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8005be6:	682b      	ldr	r3, [r5, #0]
 8005be8:	699b      	ldr	r3, [r3, #24]
 8005bea:	069b      	lsls	r3, r3, #26
 8005bec:	d4a2      	bmi.n	8005b34 <I2C_IsErrorOccurred+0x1c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 8005bee:	f7fe fc01 	bl	80043f4 <HAL_GetTick>
 8005bf2:	1b80      	subs	r0, r0, r6
 8005bf4:	2819      	cmp	r0, #25
 8005bf6:	d9f6      	bls.n	8005be6 <I2C_IsErrorOccurred+0xce>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
 8005bf8:	2420      	movs	r4, #32
              status = HAL_ERROR;
 8005bfa:	f04f 0801 	mov.w	r8, #1
 8005bfe:	e799      	b.n	8005b34 <I2C_IsErrorOccurred+0x1c>
    if (status == HAL_OK)
 8005c00:	f1b8 0f00 	cmp.w	r8, #0
 8005c04:	d19d      	bne.n	8005b42 <I2C_IsErrorOccurred+0x2a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005c06:	2220      	movs	r2, #32
 8005c08:	61da      	str	r2, [r3, #28]
 8005c0a:	e79a      	b.n	8005b42 <I2C_IsErrorOccurred+0x2a>
  HAL_StatusTypeDef status = HAL_OK;
 8005c0c:	4620      	mov	r0, r4
 8005c0e:	e79b      	b.n	8005b48 <I2C_IsErrorOccurred+0x30>
  if (status != HAL_OK)
 8005c10:	2800      	cmp	r0, #0
 8005c12:	d1b2      	bne.n	8005b7a <I2C_IsErrorOccurred+0x62>
}
 8005c14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005c18 <I2C_WaitOnTXISFlagUntilTimeout>:
{
 8005c18:	b570      	push	{r4, r5, r6, lr}
 8005c1a:	4604      	mov	r4, r0
 8005c1c:	460d      	mov	r5, r1
 8005c1e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8005c20:	6823      	ldr	r3, [r4, #0]
 8005c22:	699b      	ldr	r3, [r3, #24]
 8005c24:	079b      	lsls	r3, r3, #30
 8005c26:	d501      	bpl.n	8005c2c <I2C_WaitOnTXISFlagUntilTimeout+0x14>
  return HAL_OK;
 8005c28:	2000      	movs	r0, #0
 8005c2a:	e01f      	b.n	8005c6c <I2C_WaitOnTXISFlagUntilTimeout+0x54>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8005c2c:	4632      	mov	r2, r6
 8005c2e:	4629      	mov	r1, r5
 8005c30:	4620      	mov	r0, r4
 8005c32:	f7ff ff71 	bl	8005b18 <I2C_IsErrorOccurred>
 8005c36:	b9c0      	cbnz	r0, 8005c6a <I2C_WaitOnTXISFlagUntilTimeout+0x52>
    if (Timeout != HAL_MAX_DELAY)
 8005c38:	1c6a      	adds	r2, r5, #1
 8005c3a:	d0f1      	beq.n	8005c20 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005c3c:	f7fe fbda 	bl	80043f4 <HAL_GetTick>
 8005c40:	1b80      	subs	r0, r0, r6
 8005c42:	42a8      	cmp	r0, r5
 8005c44:	d801      	bhi.n	8005c4a <I2C_WaitOnTXISFlagUntilTimeout+0x32>
 8005c46:	2d00      	cmp	r5, #0
 8005c48:	d1ea      	bne.n	8005c20 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
 8005c4a:	6823      	ldr	r3, [r4, #0]
 8005c4c:	699b      	ldr	r3, [r3, #24]
 8005c4e:	f013 0302 	ands.w	r3, r3, #2
 8005c52:	d1e5      	bne.n	8005c20 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005c54:	6c62      	ldr	r2, [r4, #68]	@ 0x44
          __HAL_UNLOCK(hi2c);
 8005c56:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005c5a:	f042 0220 	orr.w	r2, r2, #32
 8005c5e:	6462      	str	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8005c60:	2220      	movs	r2, #32
 8005c62:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8005c66:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      return HAL_ERROR;
 8005c6a:	2001      	movs	r0, #1
}
 8005c6c:	bd70      	pop	{r4, r5, r6, pc}

08005c6e <I2C_WaitOnFlagUntilTimeout>:
{
 8005c6e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005c72:	4604      	mov	r4, r0
 8005c74:	4688      	mov	r8, r1
 8005c76:	4616      	mov	r6, r2
 8005c78:	461d      	mov	r5, r3
 8005c7a:	9f06      	ldr	r7, [sp, #24]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8005c7c:	6822      	ldr	r2, [r4, #0]
 8005c7e:	6993      	ldr	r3, [r2, #24]
 8005c80:	ea38 0303 	bics.w	r3, r8, r3
 8005c84:	bf0c      	ite	eq
 8005c86:	2301      	moveq	r3, #1
 8005c88:	2300      	movne	r3, #0
 8005c8a:	42b3      	cmp	r3, r6
 8005c8c:	d001      	beq.n	8005c92 <I2C_WaitOnFlagUntilTimeout+0x24>
  return HAL_OK;
 8005c8e:	2000      	movs	r0, #0
 8005c90:	e01e      	b.n	8005cd0 <I2C_WaitOnFlagUntilTimeout+0x62>
    if (Timeout != HAL_MAX_DELAY)
 8005c92:	1c6b      	adds	r3, r5, #1
 8005c94:	d0f3      	beq.n	8005c7e <I2C_WaitOnFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005c96:	f7fe fbad 	bl	80043f4 <HAL_GetTick>
 8005c9a:	1bc0      	subs	r0, r0, r7
 8005c9c:	42a8      	cmp	r0, r5
 8005c9e:	d801      	bhi.n	8005ca4 <I2C_WaitOnFlagUntilTimeout+0x36>
 8005ca0:	2d00      	cmp	r5, #0
 8005ca2:	d1eb      	bne.n	8005c7c <I2C_WaitOnFlagUntilTimeout+0xe>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8005ca4:	6823      	ldr	r3, [r4, #0]
 8005ca6:	699b      	ldr	r3, [r3, #24]
 8005ca8:	ea38 0303 	bics.w	r3, r8, r3
 8005cac:	bf0c      	ite	eq
 8005cae:	2301      	moveq	r3, #1
 8005cb0:	2300      	movne	r3, #0
 8005cb2:	42b3      	cmp	r3, r6
 8005cb4:	d1e2      	bne.n	8005c7c <I2C_WaitOnFlagUntilTimeout+0xe>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005cb6:	6c63      	ldr	r3, [r4, #68]	@ 0x44
          return HAL_ERROR;
 8005cb8:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005cba:	f043 0320 	orr.w	r3, r3, #32
 8005cbe:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8005cc0:	2320      	movs	r3, #32
 8005cc2:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8005cc6:	2300      	movs	r3, #0
 8005cc8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
 8005ccc:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8005cd0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005cd4 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 8005cd4:	b570      	push	{r4, r5, r6, lr}
 8005cd6:	4604      	mov	r4, r0
 8005cd8:	460d      	mov	r5, r1
 8005cda:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8005cdc:	6823      	ldr	r3, [r4, #0]
 8005cde:	699b      	ldr	r3, [r3, #24]
 8005ce0:	069b      	lsls	r3, r3, #26
 8005ce2:	d501      	bpl.n	8005ce8 <I2C_WaitOnSTOPFlagUntilTimeout+0x14>
  return HAL_OK;
 8005ce4:	2000      	movs	r0, #0
 8005ce6:	e01d      	b.n	8005d24 <I2C_WaitOnSTOPFlagUntilTimeout+0x50>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8005ce8:	4632      	mov	r2, r6
 8005cea:	4629      	mov	r1, r5
 8005cec:	4620      	mov	r0, r4
 8005cee:	f7ff ff13 	bl	8005b18 <I2C_IsErrorOccurred>
 8005cf2:	b9b0      	cbnz	r0, 8005d22 <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005cf4:	f7fe fb7e 	bl	80043f4 <HAL_GetTick>
 8005cf8:	1b80      	subs	r0, r0, r6
 8005cfa:	42a8      	cmp	r0, r5
 8005cfc:	d801      	bhi.n	8005d02 <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
 8005cfe:	2d00      	cmp	r5, #0
 8005d00:	d1ec      	bne.n	8005cdc <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
 8005d02:	6823      	ldr	r3, [r4, #0]
 8005d04:	699b      	ldr	r3, [r3, #24]
 8005d06:	f013 0320 	ands.w	r3, r3, #32
 8005d0a:	d1e7      	bne.n	8005cdc <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005d0c:	6c62      	ldr	r2, [r4, #68]	@ 0x44
        __HAL_UNLOCK(hi2c);
 8005d0e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005d12:	f042 0220 	orr.w	r2, r2, #32
 8005d16:	6462      	str	r2, [r4, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8005d18:	2220      	movs	r2, #32
 8005d1a:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8005d1e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      return HAL_ERROR;
 8005d22:	2001      	movs	r0, #1
}
 8005d24:	bd70      	pop	{r4, r5, r6, pc}

08005d26 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8005d26:	b570      	push	{r4, r5, r6, lr}
 8005d28:	4604      	mov	r4, r0
 8005d2a:	460d      	mov	r5, r1
 8005d2c:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8005d2e:	6823      	ldr	r3, [r4, #0]
 8005d30:	699b      	ldr	r3, [r3, #24]
 8005d32:	075b      	lsls	r3, r3, #29
 8005d34:	d40e      	bmi.n	8005d54 <I2C_WaitOnRXNEFlagUntilTimeout+0x2e>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8005d36:	4632      	mov	r2, r6
 8005d38:	4629      	mov	r1, r5
 8005d3a:	4620      	mov	r0, r4
 8005d3c:	f7ff feec 	bl	8005b18 <I2C_IsErrorOccurred>
 8005d40:	bb30      	cbnz	r0, 8005d90 <I2C_WaitOnRXNEFlagUntilTimeout+0x6a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8005d42:	6823      	ldr	r3, [r4, #0]
 8005d44:	699a      	ldr	r2, [r3, #24]
 8005d46:	0690      	lsls	r0, r2, #26
 8005d48:	d524      	bpl.n	8005d94 <I2C_WaitOnRXNEFlagUntilTimeout+0x6e>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET) && (hi2c->XferSize > 0U))
 8005d4a:	699a      	ldr	r2, [r3, #24]
 8005d4c:	0751      	lsls	r1, r2, #29
 8005d4e:	d503      	bpl.n	8005d58 <I2C_WaitOnRXNEFlagUntilTimeout+0x32>
 8005d50:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
 8005d52:	b10a      	cbz	r2, 8005d58 <I2C_WaitOnRXNEFlagUntilTimeout+0x32>
        return HAL_OK;
 8005d54:	2000      	movs	r0, #0
}
 8005d56:	bd70      	pop	{r4, r5, r6, pc}
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005d58:	699a      	ldr	r2, [r3, #24]
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005d5a:	2120      	movs	r1, #32
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005d5c:	f012 0210 	ands.w	r2, r2, #16
          __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005d60:	bf1e      	ittt	ne
 8005d62:	2210      	movne	r2, #16
 8005d64:	61da      	strne	r2, [r3, #28]
          hi2c->ErrorCode = HAL_I2C_ERROR_AF;
 8005d66:	2204      	movne	r2, #4
          hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005d68:	6462      	str	r2, [r4, #68]	@ 0x44
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005d6a:	61d9      	str	r1, [r3, #28]
        I2C_RESET_CR2(hi2c);
 8005d6c:	685a      	ldr	r2, [r3, #4]
 8005d6e:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 8005d72:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 8005d76:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 8005d7a:	f022 0201 	bic.w	r2, r2, #1
 8005d7e:	605a      	str	r2, [r3, #4]
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8005d80:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 8005d82:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8005d86:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
 8005d8a:	2300      	movs	r3, #0
 8005d8c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8005d90:	2001      	movs	r0, #1
 8005d92:	e7e0      	b.n	8005d56 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005d94:	f7fe fb2e 	bl	80043f4 <HAL_GetTick>
 8005d98:	1b80      	subs	r0, r0, r6
 8005d9a:	42a8      	cmp	r0, r5
 8005d9c:	d801      	bhi.n	8005da2 <I2C_WaitOnRXNEFlagUntilTimeout+0x7c>
 8005d9e:	2d00      	cmp	r5, #0
 8005da0:	d1c5      	bne.n	8005d2e <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 8005da2:	6823      	ldr	r3, [r4, #0]
 8005da4:	699b      	ldr	r3, [r3, #24]
 8005da6:	075a      	lsls	r2, r3, #29
 8005da8:	d4c1      	bmi.n	8005d2e <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005daa:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8005dac:	f043 0320 	orr.w	r3, r3, #32
 8005db0:	6463      	str	r3, [r4, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8005db2:	2320      	movs	r3, #32
 8005db4:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        return HAL_ERROR;
 8005db8:	e7e7      	b.n	8005d8a <I2C_WaitOnRXNEFlagUntilTimeout+0x64>

08005dba <HAL_I2C_MspInit>:
}
 8005dba:	4770      	bx	lr

08005dbc <HAL_I2C_Init>:
{
 8005dbc:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8005dbe:	4604      	mov	r4, r0
 8005dc0:	2800      	cmp	r0, #0
 8005dc2:	d04e      	beq.n	8005e62 <HAL_I2C_Init+0xa6>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8005dc4:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 8005dc8:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005dcc:	b91b      	cbnz	r3, 8005dd6 <HAL_I2C_Init+0x1a>
    hi2c->Lock = HAL_UNLOCKED;
 8005dce:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
 8005dd2:	f7ff fff2 	bl	8005dba <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005dd6:	2324      	movs	r3, #36	@ 0x24
 8005dd8:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
 8005ddc:	6823      	ldr	r3, [r4, #0]
 8005dde:	681a      	ldr	r2, [r3, #0]
 8005de0:	f022 0201 	bic.w	r2, r2, #1
 8005de4:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8005de6:	6862      	ldr	r2, [r4, #4]
 8005de8:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8005dec:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8005dee:	689a      	ldr	r2, [r3, #8]
 8005df0:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8005df4:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8005df6:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8005dfa:	2901      	cmp	r1, #1
 8005dfc:	d106      	bne.n	8005e0c <HAL_I2C_Init+0x50>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8005dfe:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8005e02:	609a      	str	r2, [r3, #8]
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8005e04:	685a      	ldr	r2, [r3, #4]
 8005e06:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8005e0a:	e007      	b.n	8005e1c <HAL_I2C_Init+0x60>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8005e0c:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8005e10:	2902      	cmp	r1, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8005e12:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8005e14:	d1f6      	bne.n	8005e04 <HAL_I2C_Init+0x48>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8005e16:	685a      	ldr	r2, [r3, #4]
 8005e18:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8005e1c:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8005e1e:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005e20:	2000      	movs	r0, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8005e22:	f042 7200 	orr.w	r2, r2, #33554432	@ 0x2000000
 8005e26:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8005e2a:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8005e2c:	68da      	ldr	r2, [r3, #12]
 8005e2e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8005e32:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8005e34:	e9d4 2104 	ldrd	r2, r1, [r4, #16]
 8005e38:	430a      	orrs	r2, r1
                          (hi2c->Init.OwnAddress2Masks << 8));
 8005e3a:	69a1      	ldr	r1, [r4, #24]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8005e3c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005e40:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8005e42:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 8005e46:	430a      	orrs	r2, r1
 8005e48:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 8005e4a:	681a      	ldr	r2, [r3, #0]
 8005e4c:	f042 0201 	orr.w	r2, r2, #1
 8005e50:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 8005e52:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005e54:	6460      	str	r0, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8005e56:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8005e5a:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005e5c:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
}
 8005e60:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005e62:	2001      	movs	r0, #1
 8005e64:	e7fc      	b.n	8005e60 <HAL_I2C_Init+0xa4>

08005e66 <HAL_I2C_MspDeInit>:
__weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
 8005e66:	4770      	bx	lr

08005e68 <HAL_I2C_DeInit>:
{
 8005e68:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8005e6a:	4604      	mov	r4, r0
 8005e6c:	b198      	cbz	r0, 8005e96 <HAL_I2C_DeInit+0x2e>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005e6e:	2324      	movs	r3, #36	@ 0x24
  __HAL_I2C_DISABLE(hi2c);
 8005e70:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005e72:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
 8005e76:	6813      	ldr	r3, [r2, #0]
 8005e78:	f023 0301 	bic.w	r3, r3, #1
 8005e7c:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 8005e7e:	f7ff fff2 	bl	8005e66 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005e82:	2000      	movs	r0, #0
 8005e84:	6460      	str	r0, [r4, #68]	@ 0x44
  __HAL_UNLOCK(hi2c);
 8005e86:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_RESET;
 8005e8a:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8005e8e:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005e90:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
}
 8005e94:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005e96:	2001      	movs	r0, #1
 8005e98:	e7fc      	b.n	8005e94 <HAL_I2C_DeInit+0x2c>
	...

08005e9c <HAL_I2C_Master_Receive>:
{
 8005e9c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8005ea0:	4698      	mov	r8, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005ea2:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 8005ea6:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005ea8:	2b20      	cmp	r3, #32
{
 8005eaa:	460e      	mov	r6, r1
 8005eac:	4691      	mov	r9, r2
 8005eae:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005eb0:	f040 8087 	bne.w	8005fc2 <HAL_I2C_Master_Receive+0x126>
    __HAL_LOCK(hi2c);
 8005eb4:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 8005eb8:	2b01      	cmp	r3, #1
 8005eba:	f000 8082 	beq.w	8005fc2 <HAL_I2C_Master_Receive+0x126>
 8005ebe:	f04f 0a01 	mov.w	sl, #1
 8005ec2:	f880 a040 	strb.w	sl, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 8005ec6:	f7fe fa95 	bl	80043f4 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005eca:	2319      	movs	r3, #25
    tickstart = HAL_GetTick();
 8005ecc:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005ece:	9000      	str	r0, [sp, #0]
 8005ed0:	4652      	mov	r2, sl
 8005ed2:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8005ed6:	4620      	mov	r0, r4
 8005ed8:	f7ff fec9 	bl	8005c6e <I2C_WaitOnFlagUntilTimeout>
 8005edc:	b118      	cbz	r0, 8005ee6 <HAL_I2C_Master_Receive+0x4a>
      return HAL_ERROR;
 8005ede:	2001      	movs	r0, #1
}
 8005ee0:	b002      	add	sp, #8
 8005ee2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005ee6:	2322      	movs	r3, #34	@ 0x22
 8005ee8:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MASTER;
 8005eec:	2310      	movs	r3, #16
 8005eee:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005ef2:	6460      	str	r0, [r4, #68]	@ 0x44
    hi2c->XferCount = Size;
 8005ef4:	f8a4 802a 	strh.w	r8, [r4, #42]	@ 0x2a
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005ef8:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
    hi2c->pBuffPtr  = pData;
 8005efa:	f8c4 9024 	str.w	r9, [r4, #36]	@ 0x24
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005efe:	b29b      	uxth	r3, r3
 8005f00:	2bff      	cmp	r3, #255	@ 0xff
    hi2c->XferISR   = NULL;
 8005f02:	6360      	str	r0, [r4, #52]	@ 0x34
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005f04:	4b30      	ldr	r3, [pc, #192]	@ (8005fc8 <HAL_I2C_Master_Receive+0x12c>)
 8005f06:	d926      	bls.n	8005f56 <HAL_I2C_Master_Receive+0xba>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8005f08:	22ff      	movs	r2, #255	@ 0xff
 8005f0a:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8005f0c:	9300      	str	r3, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8005f0e:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005f12:	4631      	mov	r1, r6
 8005f14:	4620      	mov	r0, r4
 8005f16:	f7ff fde9 	bl	8005aec <I2C_TransferConfig>
    while (hi2c->XferCount > 0U)
 8005f1a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005f1c:	462a      	mov	r2, r5
    while (hi2c->XferCount > 0U)
 8005f1e:	b29b      	uxth	r3, r3
      if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005f20:	4639      	mov	r1, r7
 8005f22:	4620      	mov	r0, r4
    while (hi2c->XferCount > 0U)
 8005f24:	b9fb      	cbnz	r3, 8005f66 <HAL_I2C_Master_Receive+0xca>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005f26:	f7ff fed5 	bl	8005cd4 <I2C_WaitOnSTOPFlagUntilTimeout>
 8005f2a:	2800      	cmp	r0, #0
 8005f2c:	d1d7      	bne.n	8005ede <HAL_I2C_Master_Receive+0x42>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005f2e:	2120      	movs	r1, #32
 8005f30:	6823      	ldr	r3, [r4, #0]
 8005f32:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8005f34:	685a      	ldr	r2, [r3, #4]
 8005f36:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 8005f3a:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 8005f3e:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 8005f42:	f022 0201 	bic.w	r2, r2, #1
 8005f46:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8005f48:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8005f4c:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8005f50:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 8005f54:	e7c4      	b.n	8005ee0 <HAL_I2C_Master_Receive+0x44>
      hi2c->XferSize = hi2c->XferCount;
 8005f56:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
 8005f58:	b292      	uxth	r2, r2
 8005f5a:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005f5c:	9300      	str	r3, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005f5e:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8005f62:	b2d2      	uxtb	r2, r2
 8005f64:	e7d5      	b.n	8005f12 <HAL_I2C_Master_Receive+0x76>
      if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005f66:	f7ff fede 	bl	8005d26 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005f6a:	2800      	cmp	r0, #0
 8005f6c:	d1b7      	bne.n	8005ede <HAL_I2C_Master_Receive+0x42>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 8005f6e:	6823      	ldr	r3, [r4, #0]
 8005f70:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8005f72:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005f74:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 8005f76:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      hi2c->XferSize--;
 8005f78:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
 8005f7a:	3301      	adds	r3, #1
 8005f7c:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8005f7e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8005f80:	3a01      	subs	r2, #1
      hi2c->XferCount--;
 8005f82:	3b01      	subs	r3, #1
 8005f84:	b29b      	uxth	r3, r3
 8005f86:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005f88:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8005f8a:	b292      	uxth	r2, r2
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005f8c:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 8005f8e:	8522      	strh	r2, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005f90:	2b00      	cmp	r3, #0
 8005f92:	d0c2      	beq.n	8005f1a <HAL_I2C_Master_Receive+0x7e>
 8005f94:	2a00      	cmp	r2, #0
 8005f96:	d1c0      	bne.n	8005f1a <HAL_I2C_Master_Receive+0x7e>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8005f98:	463b      	mov	r3, r7
 8005f9a:	2180      	movs	r1, #128	@ 0x80
 8005f9c:	4620      	mov	r0, r4
 8005f9e:	9500      	str	r5, [sp, #0]
 8005fa0:	f7ff fe65 	bl	8005c6e <I2C_WaitOnFlagUntilTimeout>
 8005fa4:	2800      	cmp	r0, #0
 8005fa6:	d19a      	bne.n	8005ede <HAL_I2C_Master_Receive+0x42>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005fa8:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005faa:	b29b      	uxth	r3, r3
 8005fac:	2bff      	cmp	r3, #255	@ 0xff
 8005fae:	d903      	bls.n	8005fb8 <HAL_I2C_Master_Receive+0x11c>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005fb0:	22ff      	movs	r2, #255	@ 0xff
 8005fb2:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8005fb4:	9000      	str	r0, [sp, #0]
 8005fb6:	e7aa      	b.n	8005f0e <HAL_I2C_Master_Receive+0x72>
          hi2c->XferSize = hi2c->XferCount;
 8005fb8:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
 8005fba:	b292      	uxth	r2, r2
 8005fbc:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005fbe:	9000      	str	r0, [sp, #0]
 8005fc0:	e7cd      	b.n	8005f5e <HAL_I2C_Master_Receive+0xc2>
    __HAL_LOCK(hi2c);
 8005fc2:	2002      	movs	r0, #2
 8005fc4:	e78c      	b.n	8005ee0 <HAL_I2C_Master_Receive+0x44>
 8005fc6:	bf00      	nop
 8005fc8:	80002400 	.word	0x80002400

08005fcc <HAL_I2C_Mem_Write>:
{
 8005fcc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005fd0:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005fd2:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 8005fd6:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005fd8:	2b20      	cmp	r3, #32
{
 8005fda:	460f      	mov	r7, r1
 8005fdc:	4616      	mov	r6, r2
 8005fde:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
 8005fe2:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005fe6:	f040 80c6 	bne.w	8006176 <HAL_I2C_Mem_Write+0x1aa>
    if ((pData == NULL) || (Size == 0U))
 8005fea:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005fec:	b113      	cbz	r3, 8005ff4 <HAL_I2C_Mem_Write+0x28>
 8005fee:	f1ba 0f00 	cmp.w	sl, #0
 8005ff2:	d106      	bne.n	8006002 <HAL_I2C_Mem_Write+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8005ff4:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8005ff8:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 8005ffa:	2001      	movs	r0, #1
}
 8005ffc:	b003      	add	sp, #12
 8005ffe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 8006002:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 8006006:	2b01      	cmp	r3, #1
 8006008:	f000 80b5 	beq.w	8006176 <HAL_I2C_Mem_Write+0x1aa>
 800600c:	f04f 0b01 	mov.w	fp, #1
 8006010:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 8006014:	f7fe f9ee 	bl	80043f4 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8006018:	2319      	movs	r3, #25
    tickstart = HAL_GetTick();
 800601a:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 800601c:	9000      	str	r0, [sp, #0]
 800601e:	465a      	mov	r2, fp
 8006020:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8006024:	4620      	mov	r0, r4
 8006026:	f7ff fe22 	bl	8005c6e <I2C_WaitOnFlagUntilTimeout>
 800602a:	2800      	cmp	r0, #0
 800602c:	d1e5      	bne.n	8005ffa <HAL_I2C_Mem_Write+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800602e:	2321      	movs	r3, #33	@ 0x21
 8006030:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006034:	2340      	movs	r3, #64	@ 0x40
 8006036:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
 800603a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800603c:	6460      	str	r0, [r4, #68]	@ 0x44
    hi2c->pBuffPtr  = pData;
 800603e:	6263      	str	r3, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8006040:	4b4e      	ldr	r3, [pc, #312]	@ (800617c <HAL_I2C_Mem_Write+0x1b0>)
    hi2c->XferISR   = NULL;
 8006042:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8006044:	4639      	mov	r1, r7
 8006046:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
 8006048:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 800604c:	fa5f f289 	uxtb.w	r2, r9
 8006050:	9300      	str	r3, [sp, #0]
 8006052:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8006056:	f7ff fd49 	bl	8005aec <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800605a:	462a      	mov	r2, r5
 800605c:	4641      	mov	r1, r8
 800605e:	4620      	mov	r0, r4
 8006060:	f7ff fdda 	bl	8005c18 <I2C_WaitOnTXISFlagUntilTimeout>
 8006064:	bb18      	cbnz	r0, 80060ae <HAL_I2C_Mem_Write+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006066:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800606a:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800606c:	d115      	bne.n	800609a <HAL_I2C_Mem_Write+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800606e:	b2f6      	uxtb	r6, r6
 8006070:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8006072:	2200      	movs	r2, #0
 8006074:	4643      	mov	r3, r8
 8006076:	2180      	movs	r1, #128	@ 0x80
 8006078:	4620      	mov	r0, r4
 800607a:	9500      	str	r5, [sp, #0]
 800607c:	f7ff fdf7 	bl	8005c6e <I2C_WaitOnFlagUntilTimeout>
 8006080:	b9a8      	cbnz	r0, 80060ae <HAL_I2C_Mem_Write+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8006082:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006084:	b29b      	uxth	r3, r3
 8006086:	2bff      	cmp	r3, #255	@ 0xff
 8006088:	d815      	bhi.n	80060b6 <HAL_I2C_Mem_Write+0xea>
      hi2c->XferSize = hi2c->XferCount;
 800608a:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 800608c:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
      hi2c->XferSize = hi2c->XferCount;
 8006090:	b292      	uxth	r2, r2
 8006092:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8006094:	9000      	str	r0, [sp, #0]
 8006096:	b2d2      	uxtb	r2, r2
 8006098:	e012      	b.n	80060c0 <HAL_I2C_Mem_Write+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 800609a:	0a32      	lsrs	r2, r6, #8
 800609c:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800609e:	4641      	mov	r1, r8
 80060a0:	462a      	mov	r2, r5
 80060a2:	4620      	mov	r0, r4
 80060a4:	f7ff fdb8 	bl	8005c18 <I2C_WaitOnTXISFlagUntilTimeout>
 80060a8:	b908      	cbnz	r0, 80060ae <HAL_I2C_Mem_Write+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80060aa:	6823      	ldr	r3, [r4, #0]
 80060ac:	e7df      	b.n	800606e <HAL_I2C_Mem_Write+0xa2>
      __HAL_UNLOCK(hi2c);
 80060ae:	2300      	movs	r3, #0
 80060b0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 80060b4:	e7a1      	b.n	8005ffa <HAL_I2C_Mem_Write+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80060b6:	22ff      	movs	r2, #255	@ 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 80060b8:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80060bc:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 80060be:	9000      	str	r0, [sp, #0]
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 80060c0:	4639      	mov	r1, r7
 80060c2:	4620      	mov	r0, r4
 80060c4:	f7ff fd12 	bl	8005aec <I2C_TransferConfig>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80060c8:	462a      	mov	r2, r5
 80060ca:	4641      	mov	r1, r8
 80060cc:	4620      	mov	r0, r4
 80060ce:	f7ff fda3 	bl	8005c18 <I2C_WaitOnTXISFlagUntilTimeout>
 80060d2:	2800      	cmp	r0, #0
 80060d4:	d191      	bne.n	8005ffa <HAL_I2C_Mem_Write+0x2e>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 80060d6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80060d8:	6822      	ldr	r2, [r4, #0]
 80060da:	f813 1b01 	ldrb.w	r1, [r3], #1
 80060de:	6291      	str	r1, [r2, #40]	@ 0x28
      hi2c->pBuffPtr++;
 80060e0:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 80060e2:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 80060e4:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 80060e6:	3b01      	subs	r3, #1
 80060e8:	b29b      	uxth	r3, r3
 80060ea:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80060ec:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 80060ee:	3a01      	subs	r2, #1
 80060f0:	b292      	uxth	r2, r2
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80060f2:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 80060f4:	8522      	strh	r2, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80060f6:	b1b3      	cbz	r3, 8006126 <HAL_I2C_Mem_Write+0x15a>
 80060f8:	b9aa      	cbnz	r2, 8006126 <HAL_I2C_Mem_Write+0x15a>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 80060fa:	4643      	mov	r3, r8
 80060fc:	2180      	movs	r1, #128	@ 0x80
 80060fe:	4620      	mov	r0, r4
 8006100:	9500      	str	r5, [sp, #0]
 8006102:	f7ff fdb4 	bl	8005c6e <I2C_WaitOnFlagUntilTimeout>
 8006106:	2800      	cmp	r0, #0
 8006108:	f47f af77 	bne.w	8005ffa <HAL_I2C_Mem_Write+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 800610c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800610e:	b29b      	uxth	r3, r3
 8006110:	2bff      	cmp	r3, #255	@ 0xff
 8006112:	d928      	bls.n	8006166 <HAL_I2C_Mem_Write+0x19a>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8006114:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8006116:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
 800611a:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 800611c:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800611e:	4639      	mov	r1, r7
 8006120:	4620      	mov	r0, r4
 8006122:	f7ff fce3 	bl	8005aec <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8006126:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006128:	b29b      	uxth	r3, r3
 800612a:	2b00      	cmp	r3, #0
 800612c:	d1cc      	bne.n	80060c8 <HAL_I2C_Mem_Write+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800612e:	462a      	mov	r2, r5
 8006130:	4641      	mov	r1, r8
 8006132:	4620      	mov	r0, r4
 8006134:	f7ff fdce 	bl	8005cd4 <I2C_WaitOnSTOPFlagUntilTimeout>
 8006138:	2800      	cmp	r0, #0
 800613a:	f47f af5e 	bne.w	8005ffa <HAL_I2C_Mem_Write+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800613e:	2120      	movs	r1, #32
 8006140:	6823      	ldr	r3, [r4, #0]
 8006142:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8006144:	685a      	ldr	r2, [r3, #4]
 8006146:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 800614a:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 800614e:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 8006152:	f022 0201 	bic.w	r2, r2, #1
 8006156:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8006158:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 800615c:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8006160:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 8006164:	e74a      	b.n	8005ffc <HAL_I2C_Mem_Write+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8006166:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8006168:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
 800616c:	b292      	uxth	r2, r2
 800616e:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8006170:	9000      	str	r0, [sp, #0]
 8006172:	b2d2      	uxtb	r2, r2
 8006174:	e7d3      	b.n	800611e <HAL_I2C_Mem_Write+0x152>
    __HAL_LOCK(hi2c);
 8006176:	2002      	movs	r0, #2
 8006178:	e740      	b.n	8005ffc <HAL_I2C_Mem_Write+0x30>
 800617a:	bf00      	nop
 800617c:	80002000 	.word	0x80002000

08006180 <HAL_I2C_Mem_Read>:
{
 8006180:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006184:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006186:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 800618a:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800618c:	2b20      	cmp	r3, #32
{
 800618e:	460f      	mov	r7, r1
 8006190:	4616      	mov	r6, r2
 8006192:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
 8006196:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 800619a:	f040 80c9 	bne.w	8006330 <HAL_I2C_Mem_Read+0x1b0>
    if ((pData == NULL) || (Size == 0U))
 800619e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80061a0:	b113      	cbz	r3, 80061a8 <HAL_I2C_Mem_Read+0x28>
 80061a2:	f1ba 0f00 	cmp.w	sl, #0
 80061a6:	d106      	bne.n	80061b6 <HAL_I2C_Mem_Read+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 80061a8:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80061ac:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 80061ae:	2001      	movs	r0, #1
}
 80061b0:	b003      	add	sp, #12
 80061b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 80061b6:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 80061ba:	2b01      	cmp	r3, #1
 80061bc:	f000 80b8 	beq.w	8006330 <HAL_I2C_Mem_Read+0x1b0>
 80061c0:	f04f 0b01 	mov.w	fp, #1
 80061c4:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 80061c8:	f7fe f914 	bl	80043f4 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 80061cc:	2319      	movs	r3, #25
 80061ce:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
 80061d0:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 80061d2:	465a      	mov	r2, fp
 80061d4:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80061d8:	4620      	mov	r0, r4
 80061da:	f7ff fd48 	bl	8005c6e <I2C_WaitOnFlagUntilTimeout>
 80061de:	4603      	mov	r3, r0
 80061e0:	2800      	cmp	r0, #0
 80061e2:	d1e4      	bne.n	80061ae <HAL_I2C_Mem_Read+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80061e4:	2222      	movs	r2, #34	@ 0x22
 80061e6:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80061ea:	2240      	movs	r2, #64	@ 0x40
 80061ec:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
 80061f0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80061f2:	6460      	str	r0, [r4, #68]	@ 0x44
    hi2c->pBuffPtr  = pData;
 80061f4:	6262      	str	r2, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 80061f6:	4a4f      	ldr	r2, [pc, #316]	@ (8006334 <HAL_I2C_Mem_Read+0x1b4>)
    hi2c->XferISR   = NULL;
 80061f8:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 80061fa:	4639      	mov	r1, r7
 80061fc:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
 80061fe:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8006202:	9200      	str	r2, [sp, #0]
 8006204:	fa5f f289 	uxtb.w	r2, r9
 8006208:	f7ff fc70 	bl	8005aec <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800620c:	462a      	mov	r2, r5
 800620e:	4641      	mov	r1, r8
 8006210:	4620      	mov	r0, r4
 8006212:	f7ff fd01 	bl	8005c18 <I2C_WaitOnTXISFlagUntilTimeout>
 8006216:	bb20      	cbnz	r0, 8006262 <HAL_I2C_Mem_Read+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006218:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800621c:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800621e:	d116      	bne.n	800624e <HAL_I2C_Mem_Read+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8006220:	b2f6      	uxtb	r6, r6
 8006222:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8006224:	2200      	movs	r2, #0
 8006226:	4643      	mov	r3, r8
 8006228:	2140      	movs	r1, #64	@ 0x40
 800622a:	4620      	mov	r0, r4
 800622c:	9500      	str	r5, [sp, #0]
 800622e:	f7ff fd1e 	bl	8005c6e <I2C_WaitOnFlagUntilTimeout>
 8006232:	b9b0      	cbnz	r0, 8006262 <HAL_I2C_Mem_Read+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8006234:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006236:	b29b      	uxth	r3, r3
 8006238:	2bff      	cmp	r3, #255	@ 0xff
 800623a:	4b3f      	ldr	r3, [pc, #252]	@ (8006338 <HAL_I2C_Mem_Read+0x1b8>)
 800623c:	d815      	bhi.n	800626a <HAL_I2C_Mem_Read+0xea>
      hi2c->XferSize = hi2c->XferCount;
 800623e:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
 8006240:	b292      	uxth	r2, r2
 8006242:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8006244:	9300      	str	r3, [sp, #0]
 8006246:	b2d2      	uxtb	r2, r2
 8006248:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 800624c:	e012      	b.n	8006274 <HAL_I2C_Mem_Read+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 800624e:	0a32      	lsrs	r2, r6, #8
 8006250:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006252:	4641      	mov	r1, r8
 8006254:	462a      	mov	r2, r5
 8006256:	4620      	mov	r0, r4
 8006258:	f7ff fcde 	bl	8005c18 <I2C_WaitOnTXISFlagUntilTimeout>
 800625c:	b908      	cbnz	r0, 8006262 <HAL_I2C_Mem_Read+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800625e:	6823      	ldr	r3, [r4, #0]
 8006260:	e7de      	b.n	8006220 <HAL_I2C_Mem_Read+0xa0>
      __HAL_UNLOCK(hi2c);
 8006262:	2300      	movs	r3, #0
 8006264:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8006268:	e7a1      	b.n	80061ae <HAL_I2C_Mem_Read+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 800626a:	22ff      	movs	r2, #255	@ 0xff
 800626c:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 800626e:	9300      	str	r3, [sp, #0]
 8006270:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8006274:	4639      	mov	r1, r7
 8006276:	4620      	mov	r0, r4
 8006278:	f7ff fc38 	bl	8005aec <I2C_TransferConfig>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 800627c:	4643      	mov	r3, r8
 800627e:	2200      	movs	r2, #0
 8006280:	2104      	movs	r1, #4
 8006282:	4620      	mov	r0, r4
 8006284:	9500      	str	r5, [sp, #0]
 8006286:	f7ff fcf2 	bl	8005c6e <I2C_WaitOnFlagUntilTimeout>
 800628a:	2800      	cmp	r0, #0
 800628c:	d18f      	bne.n	80061ae <HAL_I2C_Mem_Read+0x2e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 800628e:	6823      	ldr	r3, [r4, #0]
 8006290:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8006292:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006294:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 8006296:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      hi2c->XferSize--;
 8006298:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
 800629a:	3301      	adds	r3, #1
 800629c:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 800629e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 80062a0:	3a01      	subs	r2, #1
      hi2c->XferCount--;
 80062a2:	3b01      	subs	r3, #1
 80062a4:	b29b      	uxth	r3, r3
 80062a6:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80062a8:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 80062aa:	b292      	uxth	r2, r2
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80062ac:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 80062ae:	8522      	strh	r2, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80062b0:	b1b3      	cbz	r3, 80062e0 <HAL_I2C_Mem_Read+0x160>
 80062b2:	b9aa      	cbnz	r2, 80062e0 <HAL_I2C_Mem_Read+0x160>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 80062b4:	4643      	mov	r3, r8
 80062b6:	2180      	movs	r1, #128	@ 0x80
 80062b8:	4620      	mov	r0, r4
 80062ba:	9500      	str	r5, [sp, #0]
 80062bc:	f7ff fcd7 	bl	8005c6e <I2C_WaitOnFlagUntilTimeout>
 80062c0:	2800      	cmp	r0, #0
 80062c2:	f47f af74 	bne.w	80061ae <HAL_I2C_Mem_Read+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80062c6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80062c8:	b29b      	uxth	r3, r3
 80062ca:	2bff      	cmp	r3, #255	@ 0xff
 80062cc:	d928      	bls.n	8006320 <HAL_I2C_Mem_Read+0x1a0>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 80062ce:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 80062d0:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
 80062d4:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 80062d6:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80062d8:	4639      	mov	r1, r7
 80062da:	4620      	mov	r0, r4
 80062dc:	f7ff fc06 	bl	8005aec <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 80062e0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80062e2:	b29b      	uxth	r3, r3
 80062e4:	2b00      	cmp	r3, #0
 80062e6:	d1c9      	bne.n	800627c <HAL_I2C_Mem_Read+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80062e8:	462a      	mov	r2, r5
 80062ea:	4641      	mov	r1, r8
 80062ec:	4620      	mov	r0, r4
 80062ee:	f7ff fcf1 	bl	8005cd4 <I2C_WaitOnSTOPFlagUntilTimeout>
 80062f2:	2800      	cmp	r0, #0
 80062f4:	f47f af5b 	bne.w	80061ae <HAL_I2C_Mem_Read+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80062f8:	2120      	movs	r1, #32
 80062fa:	6823      	ldr	r3, [r4, #0]
 80062fc:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 80062fe:	685a      	ldr	r2, [r3, #4]
 8006300:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 8006304:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 8006308:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 800630c:	f022 0201 	bic.w	r2, r2, #1
 8006310:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8006312:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8006316:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 800631a:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 800631e:	e747      	b.n	80061b0 <HAL_I2C_Mem_Read+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8006320:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8006322:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
 8006326:	b292      	uxth	r2, r2
 8006328:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800632a:	9000      	str	r0, [sp, #0]
 800632c:	b2d2      	uxtb	r2, r2
 800632e:	e7d3      	b.n	80062d8 <HAL_I2C_Mem_Read+0x158>
    __HAL_LOCK(hi2c);
 8006330:	2002      	movs	r0, #2
 8006332:	e73d      	b.n	80061b0 <HAL_I2C_Mem_Read+0x30>
 8006334:	80002000 	.word	0x80002000
 8006338:	80002400 	.word	0x80002400

0800633c <HAL_I2C_GetState>:
  return hi2c->State;
 800633c:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
}
 8006340:	4770      	bx	lr

08006342 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
 8006342:	6c40      	ldr	r0, [r0, #68]	@ 0x44
}
 8006344:	4770      	bx	lr

08006346 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8006346:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006348:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
{
 800634c:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800634e:	2a20      	cmp	r2, #32
 8006350:	b2d4      	uxtb	r4, r2
 8006352:	d11c      	bne.n	800638e <HAL_I2CEx_ConfigAnalogFilter+0x48>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8006354:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 8006358:	2a01      	cmp	r2, #1
 800635a:	d018      	beq.n	800638e <HAL_I2CEx_ConfigAnalogFilter+0x48>

    hi2c->State = HAL_I2C_STATE_BUSY;
 800635c:	2224      	movs	r2, #36	@ 0x24
 800635e:	f880 2041 	strb.w	r2, [r0, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8006362:	6802      	ldr	r2, [r0, #0]
 8006364:	6810      	ldr	r0, [r2, #0]
 8006366:	f020 0001 	bic.w	r0, r0, #1
 800636a:	6010      	str	r0, [r2, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 800636c:	6810      	ldr	r0, [r2, #0]
 800636e:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
 8006372:	6010      	str	r0, [r2, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 8006374:	6810      	ldr	r0, [r2, #0]
 8006376:	4301      	orrs	r1, r0
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8006378:	2000      	movs	r0, #0
    hi2c->Instance->CR1 |= AnalogFilter;
 800637a:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 800637c:	6811      	ldr	r1, [r2, #0]
 800637e:	f041 0101 	orr.w	r1, r1, #1
 8006382:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8006384:	f883 4041 	strb.w	r4, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8006388:	f883 0040 	strb.w	r0, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
 800638c:	bd10      	pop	{r4, pc}
    __HAL_LOCK(hi2c);
 800638e:	2002      	movs	r0, #2
 8006390:	e7fc      	b.n	800638c <HAL_I2CEx_ConfigAnalogFilter+0x46>

08006392 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8006392:	b510      	push	{r4, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006394:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
{
 8006398:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800639a:	2a20      	cmp	r2, #32
 800639c:	b2d4      	uxtb	r4, r2
 800639e:	d11b      	bne.n	80063d8 <HAL_I2CEx_ConfigDigitalFilter+0x46>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 80063a0:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 80063a4:	2a01      	cmp	r2, #1
 80063a6:	d017      	beq.n	80063d8 <HAL_I2CEx_ConfigDigitalFilter+0x46>

    hi2c->State = HAL_I2C_STATE_BUSY;
 80063a8:	2224      	movs	r2, #36	@ 0x24
 80063aa:	f880 2041 	strb.w	r2, [r0, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80063ae:	6802      	ldr	r2, [r0, #0]
 80063b0:	6810      	ldr	r0, [r2, #0]
 80063b2:	f020 0001 	bic.w	r0, r0, #1
 80063b6:	6010      	str	r0, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 80063b8:	6810      	ldr	r0, [r2, #0]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 80063ba:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 80063be:	ea40 2101 	orr.w	r1, r0, r1, lsl #8
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80063c2:	2000      	movs	r0, #0
    hi2c->Instance->CR1 = tmpreg;
 80063c4:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 80063c6:	6811      	ldr	r1, [r2, #0]
 80063c8:	f041 0101 	orr.w	r1, r1, #1
 80063cc:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 80063ce:	f883 4041 	strb.w	r4, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 80063d2:	f883 0040 	strb.w	r0, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
 80063d6:	bd10      	pop	{r4, pc}
    __HAL_LOCK(hi2c);
 80063d8:	2002      	movs	r0, #2
 80063da:	e7fc      	b.n	80063d6 <HAL_I2CEx_ConfigDigitalFilter+0x44>

080063dc <HAL_ICACHE_ConfigAssociativityMode>:
  *            @arg ICACHE_1WAY   1-way cache (direct mapped cache)
  *            @arg ICACHE_2WAYS  2-ways set associative cache (default)
  * @retval HAL status (HAL_OK/HAL_ERROR)
  */
HAL_StatusTypeDef HAL_ICACHE_ConfigAssociativityMode(uint32_t AssociativityMode)
{
 80063dc:	4601      	mov	r1, r0

  /* Check the parameters */
  assert_param(IS_ICACHE_ASSOCIATIVITY_MODE(AssociativityMode));

  /* Check cache is not enabled */
  if (READ_BIT(ICACHE->CR, ICACHE_CR_EN) != 0U)
 80063de:	4a06      	ldr	r2, [pc, #24]	@ (80063f8 <HAL_ICACHE_ConfigAssociativityMode+0x1c>)
 80063e0:	6810      	ldr	r0, [r2, #0]
 80063e2:	f010 0001 	ands.w	r0, r0, #1
  {
    status = HAL_ERROR;
  }
  else
  {
    MODIFY_REG(ICACHE->CR, ICACHE_CR_WAYSEL, AssociativityMode);
 80063e6:	bf09      	itett	eq
 80063e8:	6813      	ldreq	r3, [r2, #0]
    status = HAL_ERROR;
 80063ea:	2001      	movne	r0, #1
    MODIFY_REG(ICACHE->CR, ICACHE_CR_WAYSEL, AssociativityMode);
 80063ec:	f023 0304 	biceq.w	r3, r3, #4
 80063f0:	430b      	orreq	r3, r1
 80063f2:	bf08      	it	eq
 80063f4:	6013      	streq	r3, [r2, #0]
  }

  return status;
}
 80063f6:	4770      	bx	lr
 80063f8:	40030400 	.word	0x40030400

080063fc <HAL_ICACHE_Enable>:
  *         cache operation completes.
  * @retval HAL status (HAL_OK)
  */
HAL_StatusTypeDef HAL_ICACHE_Enable(void)
{
  SET_BIT(ICACHE->CR, ICACHE_CR_EN);
 80063fc:	4a03      	ldr	r2, [pc, #12]	@ (800640c <HAL_ICACHE_Enable+0x10>)

  return HAL_OK;
}
 80063fe:	2000      	movs	r0, #0
  SET_BIT(ICACHE->CR, ICACHE_CR_EN);
 8006400:	6813      	ldr	r3, [r2, #0]
 8006402:	f043 0301 	orr.w	r3, r3, #1
 8006406:	6013      	str	r3, [r2, #0]
}
 8006408:	4770      	bx	lr
 800640a:	bf00      	nop
 800640c:	40030400 	.word	0x40030400

08006410 <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8006410:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8006414:	f04f 0e00 	mov.w	lr, #0
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006418:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800641a:	01d2      	lsls	r2, r2, #7
 800641c:	3284      	adds	r2, #132	@ 0x84
 800641e:	1883      	adds	r3, r0, r2
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006420:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006422:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006424:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006426:	f005 25f0 	and.w	r5, r5, #4026593280	@ 0xf000f000
 800642a:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800642c:	68c5      	ldr	r5, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800642e:	f8d1 c000 	ldr.w	ip, [r1]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006432:	f3c5 450b 	ubfx	r5, r5, #16, #12
 8006436:	f10c 0701 	add.w	r7, ip, #1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800643a:	f3c6 460b 	ubfx	r6, r6, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800643e:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006440:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006442:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8006446:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8006448:	68c6      	ldr	r6, [r0, #12]
 800644a:	68cd      	ldr	r5, [r1, #12]
 800644c:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8006450:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8006452:	689d      	ldr	r5, [r3, #8]
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8006454:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8006458:	f005 25f0 	and.w	r5, r5, #4026593280	@ 0xf000f000
 800645c:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800645e:	68c7      	ldr	r7, [r0, #12]
 8006460:	688d      	ldr	r5, [r1, #8]
 8006462:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8006466:	3501      	adds	r5, #1
 8006468:	443d      	add	r5, r7
 800646a:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 800646e:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006470:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006472:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006474:	f025 0507 	bic.w	r5, r5, #7
 8006478:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800647a:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800647c:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800647e:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8006482:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8006486:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800648a:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 800648e:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8006492:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8006496:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 800649a:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800649c:	695d      	ldr	r5, [r3, #20]
 800649e:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 80064a2:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80064a4:	694d      	ldr	r5, [r1, #20]
 80064a6:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80064a8:	69dd      	ldr	r5, [r3, #28]
 80064aa:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 80064ae:	f025 0507 	bic.w	r5, r5, #7
 80064b2:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80064b4:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 80064b8:	433d      	orrs	r5, r7
 80064ba:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80064bc:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80064be:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80064c0:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80064c4:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80064c6:	b31e      	cbz	r6, 8006510 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80064c8:	2e01      	cmp	r6, #1
 80064ca:	d023      	beq.n	8006514 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80064cc:	1eb5      	subs	r5, r6, #2
 80064ce:	2d02      	cmp	r5, #2
 80064d0:	d922      	bls.n	8006518 <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
  {
    tmp = 2U;
 80064d2:	2e07      	cmp	r6, #7
 80064d4:	bf14      	ite	ne
 80064d6:	2501      	movne	r5, #1
 80064d8:	2502      	moveq	r5, #2
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80064da:	6ade      	ldr	r6, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80064dc:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80064e0:	f006 26e0 	and.w	r6, r6, #3758153728	@ 0xe000e000
 80064e4:	62de      	str	r6, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80064e6:	6a8e      	ldr	r6, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80064e8:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80064ea:	436e      	muls	r6, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80064ec:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80064ee:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 80064f2:	62dc      	str	r4, [r3, #44]	@ 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80064f4:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80064f6:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80064f8:	f424 64ff 	bic.w	r4, r4, #2040	@ 0x7f8
 80064fc:	f024 0407 	bic.w	r4, r4, #7
 8006500:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006502:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8006504:	5883      	ldr	r3, [r0, r2]
 8006506:	f043 0301 	orr.w	r3, r3, #1
 800650a:	5083      	str	r3, [r0, r2]
}
 800650c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8006510:	2504      	movs	r5, #4
 8006512:	e7e2      	b.n	80064da <LTDC_SetConfig+0xca>
    tmp = 3U;
 8006514:	2503      	movs	r5, #3
 8006516:	e7e0      	b.n	80064da <LTDC_SetConfig+0xca>
    tmp = 2U;
 8006518:	2502      	movs	r5, #2
 800651a:	e7de      	b.n	80064da <LTDC_SetConfig+0xca>

0800651c <HAL_LTDC_Init>:
{
 800651c:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800651e:	4604      	mov	r4, r0
 8006520:	2800      	cmp	r0, #0
 8006522:	d063      	beq.n	80065ec <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8006524:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8006528:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800652c:	b91b      	cbnz	r3, 8006536 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800652e:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 8006532:	f7fa fe1f 	bl	8001174 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006536:	2302      	movs	r3, #2
 8006538:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800653c:	6823      	ldr	r3, [r4, #0]
 800653e:	699a      	ldr	r2, [r3, #24]
 8006540:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8006544:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006546:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800654a:	4302      	orrs	r2, r0
 800654c:	68e0      	ldr	r0, [r4, #12]
 800654e:	6999      	ldr	r1, [r3, #24]
 8006550:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8006552:	6920      	ldr	r0, [r4, #16]
 8006554:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006556:	430a      	orrs	r2, r1
 8006558:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800655a:	689a      	ldr	r2, [r3, #8]
 800655c:	4924      	ldr	r1, [pc, #144]	@ (80065f0 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800655e:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006560:	400a      	ands	r2, r1
 8006562:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8006564:	689a      	ldr	r2, [r3, #8]
 8006566:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800656a:	69a0      	ldr	r0, [r4, #24]
 800656c:	4302      	orrs	r2, r0
 800656e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8006570:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8006572:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8006574:	400a      	ands	r2, r1
 8006576:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8006578:	68da      	ldr	r2, [r3, #12]
 800657a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800657e:	6a20      	ldr	r0, [r4, #32]
 8006580:	4302      	orrs	r2, r0
 8006582:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8006584:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8006586:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8006588:	400a      	ands	r2, r1
 800658a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800658c:	691a      	ldr	r2, [r3, #16]
 800658e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006592:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8006594:	4302      	orrs	r2, r0
 8006596:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8006598:	695a      	ldr	r2, [r3, #20]
 800659a:	400a      	ands	r2, r1
 800659c:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800659e:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80065a0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80065a2:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80065a6:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80065a8:	430a      	orrs	r2, r1
 80065aa:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80065ac:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80065ae:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80065b2:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80065b6:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80065ba:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80065bc:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 80065be:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 80065c2:	432a      	orrs	r2, r5
 80065c4:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80065c8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80065cc:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80065ce:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80065d0:	2000      	movs	r0, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80065d2:	f042 0206 	orr.w	r2, r2, #6
 80065d6:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80065d8:	699a      	ldr	r2, [r3, #24]
 80065da:	f042 0201 	orr.w	r2, r2, #1
 80065de:	619a      	str	r2, [r3, #24]
  hltdc->State = HAL_LTDC_STATE_READY;
 80065e0:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80065e2:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80065e6:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 80065ea:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80065ec:	2001      	movs	r0, #1
 80065ee:	e7fc      	b.n	80065ea <HAL_LTDC_Init+0xce>
 80065f0:	f000f800 	.word	0xf000f800

080065f4 <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 80065f4:	4770      	bx	lr

080065f6 <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 80065f6:	4770      	bx	lr

080065f8 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80065f8:	6803      	ldr	r3, [r0, #0]
{
 80065fa:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80065fc:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
{
 80065fe:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8006600:	0772      	lsls	r2, r6, #29
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8006602:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8006604:	d514      	bpl.n	8006630 <HAL_LTDC_IRQHandler+0x38>
 8006606:	0769      	lsls	r1, r5, #29
 8006608:	d512      	bpl.n	8006630 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800660a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800660c:	f022 0204 	bic.w	r2, r2, #4
 8006610:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8006612:	2204      	movs	r2, #4
 8006614:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8006616:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 800661a:	f043 0301 	orr.w	r3, r3, #1
 800661e:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 8006622:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8006624:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8006628:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800662c:	f7ff ffe2 	bl	80065f4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8006630:	07b2      	lsls	r2, r6, #30
 8006632:	d516      	bpl.n	8006662 <HAL_LTDC_IRQHandler+0x6a>
 8006634:	07ab      	lsls	r3, r5, #30
 8006636:	d514      	bpl.n	8006662 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8006638:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
 800663a:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800663c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800663e:	f022 0202 	bic.w	r2, r2, #2
 8006642:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8006644:	2202      	movs	r2, #2
 8006646:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8006648:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 800664c:	4313      	orrs	r3, r2
 800664e:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8006652:	2304      	movs	r3, #4
 8006654:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8006658:	2300      	movs	r3, #0
 800665a:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800665e:	f7ff ffc9 	bl	80065f4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8006662:	07f0      	lsls	r0, r6, #31
 8006664:	d510      	bpl.n	8006688 <HAL_LTDC_IRQHandler+0x90>
 8006666:	07e9      	lsls	r1, r5, #31
 8006668:	d50e      	bpl.n	8006688 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800666a:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
 800666c:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800666e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006670:	f022 0201 	bic.w	r2, r2, #1
 8006674:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8006676:	2201      	movs	r2, #1
 8006678:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 800667a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800667c:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8006680:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8006684:	f7fb fe0a 	bl	800229c <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8006688:	0732      	lsls	r2, r6, #28
 800668a:	d511      	bpl.n	80066b0 <HAL_LTDC_IRQHandler+0xb8>
 800668c:	072b      	lsls	r3, r5, #28
 800668e:	d50f      	bpl.n	80066b0 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8006690:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ReloadEventCallback(hltdc);
 8006692:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8006694:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006696:	f022 0208 	bic.w	r2, r2, #8
 800669a:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800669c:	2208      	movs	r2, #8
 800669e:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 80066a0:	2301      	movs	r3, #1
 80066a2:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 80066a6:	2300      	movs	r3, #0
 80066a8:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80066ac:	f7ff ffa3 	bl	80065f6 <HAL_LTDC_ReloadEventCallback>
}
 80066b0:	bd70      	pop	{r4, r5, r6, pc}

080066b2 <HAL_LTDC_ConfigLayer>:
{
 80066b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80066b6:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
{
 80066ba:	4606      	mov	r6, r0
  __HAL_LOCK(hltdc);
 80066bc:	2b01      	cmp	r3, #1
{
 80066be:	460f      	mov	r7, r1
 80066c0:	4694      	mov	ip, r2
 80066c2:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80066c6:	d01f      	beq.n	8006708 <HAL_LTDC_ConfigLayer+0x56>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80066c8:	2434      	movs	r4, #52	@ 0x34
  __HAL_LOCK(hltdc);
 80066ca:	f04f 0801 	mov.w	r8, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80066ce:	460d      	mov	r5, r1
 80066d0:	fb04 6402 	mla	r4, r4, r2, r6
  __HAL_LOCK(hltdc);
 80066d4:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80066d8:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80066dc:	3438      	adds	r4, #56	@ 0x38
 80066de:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80066e0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80066e2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80066e4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80066e6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80066e8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80066ea:	682b      	ldr	r3, [r5, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80066ec:	4630      	mov	r0, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80066ee:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80066f0:	4662      	mov	r2, ip
 80066f2:	4639      	mov	r1, r7
 80066f4:	f7ff fe8c 	bl	8006410 <LTDC_SetConfig>
  __HAL_UNLOCK(hltdc);
 80066f8:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80066fa:	6833      	ldr	r3, [r6, #0]
 80066fc:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8006700:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8006704:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 8006708:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800670c <HAL_LTDC_SetAddress>:
{
 800670c:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hltdc);
 800670e:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
{
 8006712:	4604      	mov	r4, r0
  __HAL_LOCK(hltdc);
 8006714:	2b01      	cmp	r3, #1
 8006716:	f04f 0302 	mov.w	r3, #2
 800671a:	d015      	beq.n	8006748 <HAL_LTDC_SetAddress+0x3c>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800671c:	f880 30a1 	strb.w	r3, [r0, #161]	@ 0xa1
  pLayerCfg->FBStartAdress = Address;
 8006720:	2334      	movs	r3, #52	@ 0x34
  __HAL_LOCK(hltdc);
 8006722:	2601      	movs	r6, #1
  pLayerCfg->FBStartAdress = Address;
 8006724:	4353      	muls	r3, r2
 8006726:	18c5      	adds	r5, r0, r3
  __HAL_LOCK(hltdc);
 8006728:	f880 60a0 	strb.w	r6, [r0, #160]	@ 0xa0
  pLayerCfg->FBStartAdress = Address;
 800672c:	65e9      	str	r1, [r5, #92]	@ 0x5c
  pLayerCfg = &hltdc->LayerCfg[LayerIdx];
 800672e:	f103 0138 	add.w	r1, r3, #56	@ 0x38
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8006732:	4401      	add	r1, r0
 8006734:	f7ff fe6c 	bl	8006410 <LTDC_SetConfig>
  __HAL_UNLOCK(hltdc);
 8006738:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800673a:	6823      	ldr	r3, [r4, #0]
 800673c:	625e      	str	r6, [r3, #36]	@ 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 800673e:	f884 60a1 	strb.w	r6, [r4, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8006742:	f884 00a0 	strb.w	r0, [r4, #160]	@ 0xa0
}
 8006746:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hltdc);
 8006748:	4618      	mov	r0, r3
 800674a:	e7fc      	b.n	8006746 <HAL_LTDC_SetAddress+0x3a>

0800674c <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800674c:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
{
 8006750:	4603      	mov	r3, r0
  __HAL_LOCK(hltdc);
 8006752:	2a01      	cmp	r2, #1
 8006754:	f04f 0002 	mov.w	r0, #2
 8006758:	d012      	beq.n	8006780 <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800675a:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800675c:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006760:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 8006762:	f020 0001 	bic.w	r0, r0, #1
 8006766:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8006768:	4806      	ldr	r0, [pc, #24]	@ (8006784 <HAL_LTDC_ProgramLineEvent+0x38>)
 800676a:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800676c:	6b51      	ldr	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 800676e:	2000      	movs	r0, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8006770:	f041 0101 	orr.w	r1, r1, #1
 8006774:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8006776:	2201      	movs	r2, #1
  __HAL_UNLOCK(hltdc);
 8006778:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_READY;
 800677c:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
}
 8006780:	4770      	bx	lr
 8006782:	bf00      	nop
 8006784:	40016800 	.word	0x40016800

08006788 <OSPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart : Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef OSPI_WaitFlagStateUntilTimeout(OSPI_HandleTypeDef *hospi, uint32_t Flag,
                                                        FlagStatus State, uint32_t Tickstart, uint32_t Timeout)
{
 8006788:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800678c:	4604      	mov	r4, r0
 800678e:	460e      	mov	r6, r1
 8006790:	4615      	mov	r5, r2
 8006792:	461f      	mov	r7, r3
 8006794:	f8dd 8018 	ldr.w	r8, [sp, #24]
  /* Wait until flag is in expected state */
  while ((__HAL_OSPI_GET_FLAG(hospi, Flag)) != State)
 8006798:	6822      	ldr	r2, [r4, #0]
 800679a:	6a13      	ldr	r3, [r2, #32]
 800679c:	4233      	tst	r3, r6
 800679e:	bf14      	ite	ne
 80067a0:	2301      	movne	r3, #1
 80067a2:	2300      	moveq	r3, #0
 80067a4:	42ab      	cmp	r3, r5
 80067a6:	d101      	bne.n	80067ac <OSPI_WaitFlagStateUntilTimeout+0x24>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 80067a8:	2000      	movs	r0, #0
 80067aa:	e017      	b.n	80067dc <OSPI_WaitFlagStateUntilTimeout+0x54>
    if (Timeout != HAL_MAX_DELAY)
 80067ac:	f1b8 3fff 	cmp.w	r8, #4294967295
 80067b0:	d0f3      	beq.n	800679a <OSPI_WaitFlagStateUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80067b2:	f7fd fe1f 	bl	80043f4 <HAL_GetTick>
 80067b6:	1bc0      	subs	r0, r0, r7
 80067b8:	4540      	cmp	r0, r8
 80067ba:	d802      	bhi.n	80067c2 <OSPI_WaitFlagStateUntilTimeout+0x3a>
 80067bc:	f1b8 0f00 	cmp.w	r8, #0
 80067c0:	d1ea      	bne.n	8006798 <OSPI_WaitFlagStateUntilTimeout+0x10>
        if ((hospi->Instance->SR & Flag) != (uint32_t)State)
 80067c2:	6823      	ldr	r3, [r4, #0]
 80067c4:	6a1b      	ldr	r3, [r3, #32]
 80067c6:	4033      	ands	r3, r6
 80067c8:	42ab      	cmp	r3, r5
 80067ca:	d0e5      	beq.n	8006798 <OSPI_WaitFlagStateUntilTimeout+0x10>
          hospi->State     = HAL_OSPI_STATE_ERROR;
 80067cc:	f44f 7300 	mov.w	r3, #512	@ 0x200
          hospi->ErrorCode |= HAL_OSPI_ERROR_TIMEOUT;
 80067d0:	2001      	movs	r0, #1
          hospi->State     = HAL_OSPI_STATE_ERROR;
 80067d2:	6523      	str	r3, [r4, #80]	@ 0x50
          hospi->ErrorCode |= HAL_OSPI_ERROR_TIMEOUT;
 80067d4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80067d6:	f043 0301 	orr.w	r3, r3, #1
 80067da:	6563      	str	r3, [r4, #84]	@ 0x54
}
 80067dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080067e0 <HAL_OSPI_Init>:
{
 80067e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80067e2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80067e4:	f7fd fe06 	bl	80043f4 <HAL_GetTick>
 80067e8:	4606      	mov	r6, r0
  if (hospi == NULL)
 80067ea:	2c00      	cmp	r4, #0
 80067ec:	d068      	beq.n	80068c0 <HAL_OSPI_Init+0xe0>
    hospi->ErrorCode = HAL_OSPI_ERROR_NONE;
 80067ee:	2300      	movs	r3, #0
 80067f0:	6563      	str	r3, [r4, #84]	@ 0x54
    if (hospi->State == HAL_OSPI_STATE_RESET)
 80067f2:	6d27      	ldr	r7, [r4, #80]	@ 0x50
 80067f4:	2f00      	cmp	r7, #0
 80067f6:	d15e      	bne.n	80068b6 <HAL_OSPI_Init+0xd6>
      HAL_OSPI_MspInit(hospi);
 80067f8:	4620      	mov	r0, r4
 80067fa:	f7fa fce7 	bl	80011cc <HAL_OSPI_MspInit>
  hospi->Timeout = Timeout;
 80067fe:	f241 3288 	movw	r2, #5000	@ 0x1388
      MODIFY_REG(hospi->Instance->DCR1,
 8006802:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8006804:	68e1      	ldr	r1, [r4, #12]
 8006806:	6825      	ldr	r5, [r4, #0]
 8006808:	4319      	orrs	r1, r3
 800680a:	69e3      	ldr	r3, [r4, #28]
 800680c:	68a8      	ldr	r0, [r5, #8]
 800680e:	4319      	orrs	r1, r3
 8006810:	4b2c      	ldr	r3, [pc, #176]	@ (80068c4 <HAL_OSPI_Init+0xe4>)
  hospi->Timeout = Timeout;
 8006812:	65a2      	str	r2, [r4, #88]	@ 0x58
      MODIFY_REG(hospi->Instance->DCR1,
 8006814:	4003      	ands	r3, r0
 8006816:	4319      	orrs	r1, r3
 8006818:	6923      	ldr	r3, [r4, #16]
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 800681a:	4620      	mov	r0, r4
      MODIFY_REG(hospi->Instance->DCR1,
 800681c:	3b01      	subs	r3, #1
 800681e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8006822:	6963      	ldr	r3, [r4, #20]
 8006824:	3b01      	subs	r3, #1
 8006826:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
 800682a:	60a9      	str	r1, [r5, #8]
      MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_WRAPSIZE, hospi->Init.WrapSize);
 800682c:	68eb      	ldr	r3, [r5, #12]
 800682e:	6a21      	ldr	r1, [r4, #32]
 8006830:	f423 23e0 	bic.w	r3, r3, #458752	@ 0x70000
 8006834:	430b      	orrs	r3, r1
 8006836:	60eb      	str	r3, [r5, #12]
      hospi->Instance->DCR3 = ((hospi->Init.ChipSelectBoundary << OCTOSPI_DCR3_CSBOUND_Pos) |
 8006838:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800683a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800683c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8006840:	612b      	str	r3, [r5, #16]
      hospi->Instance->DCR4 = hospi->Init.Refresh;
 8006842:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FTHRES, ((hospi->Init.FifoThreshold - 1U) << OCTOSPI_CR_FTHRES_Pos));
 8006844:	6861      	ldr	r1, [r4, #4]
      hospi->Instance->DCR4 = hospi->Init.Refresh;
 8006846:	616b      	str	r3, [r5, #20]
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FTHRES, ((hospi->Init.FifoThreshold - 1U) << OCTOSPI_CR_FTHRES_Pos));
 8006848:	682b      	ldr	r3, [r5, #0]
 800684a:	3901      	subs	r1, #1
 800684c:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 8006850:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8006854:	602b      	str	r3, [r5, #0]
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 8006856:	2120      	movs	r1, #32
 8006858:	9200      	str	r2, [sp, #0]
 800685a:	4633      	mov	r3, r6
 800685c:	463a      	mov	r2, r7
 800685e:	f7ff ff93 	bl	8006788 <OSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8006862:	bb48      	cbnz	r0, 80068b8 <HAL_OSPI_Init+0xd8>
        MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_PRESCALER,
 8006864:	6823      	ldr	r3, [r4, #0]
 8006866:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8006868:	68d9      	ldr	r1, [r3, #12]
 800686a:	3a01      	subs	r2, #1
 800686c:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8006870:	430a      	orrs	r2, r1
 8006872:	60da      	str	r2, [r3, #12]
        MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_DMM, hospi->Init.DualQuad);
 8006874:	681a      	ldr	r2, [r3, #0]
 8006876:	68a1      	ldr	r1, [r4, #8]
 8006878:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800687c:	430a      	orrs	r2, r1
 800687e:	601a      	str	r2, [r3, #0]
        MODIFY_REG(hospi->Instance->TCR, (OCTOSPI_TCR_SSHIFT | OCTOSPI_TCR_DHQC),
 8006880:	f8d3 1108 	ldr.w	r1, [r3, #264]	@ 0x108
 8006884:	e9d4 200a 	ldrd	r2, r0, [r4, #40]	@ 0x28
 8006888:	f021 41a0 	bic.w	r1, r1, #1342177280	@ 0x50000000
 800688c:	4302      	orrs	r2, r0
 800688e:	430a      	orrs	r2, r1
 8006890:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108
        __HAL_OSPI_ENABLE(hospi);
 8006894:	681a      	ldr	r2, [r3, #0]
 8006896:	f042 0201 	orr.w	r2, r2, #1
 800689a:	601a      	str	r2, [r3, #0]
        if (hospi->Init.FreeRunningClock == HAL_OSPI_FREERUNCLK_ENABLE)
 800689c:	69a2      	ldr	r2, [r4, #24]
 800689e:	2a02      	cmp	r2, #2
          SET_BIT(hospi->Instance->DCR1, OCTOSPI_DCR1_FRCK);
 80068a0:	bf02      	ittt	eq
 80068a2:	689a      	ldreq	r2, [r3, #8]
 80068a4:	f042 0202 	orreq.w	r2, r2, #2
 80068a8:	609a      	streq	r2, [r3, #8]
        if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 80068aa:	68e3      	ldr	r3, [r4, #12]
 80068ac:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 80068b0:	d104      	bne.n	80068bc <HAL_OSPI_Init+0xdc>
          hospi->State = HAL_OSPI_STATE_HYPERBUS_INIT;
 80068b2:	2301      	movs	r3, #1
 80068b4:	6523      	str	r3, [r4, #80]	@ 0x50
  HAL_StatusTypeDef status = HAL_OK;
 80068b6:	2000      	movs	r0, #0
}
 80068b8:	b003      	add	sp, #12
 80068ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hospi->State = HAL_OSPI_STATE_READY;
 80068bc:	2302      	movs	r3, #2
 80068be:	e7f9      	b.n	80068b4 <HAL_OSPI_Init+0xd4>
    status = HAL_ERROR;
 80068c0:	2001      	movs	r0, #1
 80068c2:	e7f9      	b.n	80068b8 <HAL_OSPI_Init+0xd8>
 80068c4:	f8e0c0f4 	.word	0xf8e0c0f4

080068c8 <HAL_OSPI_Abort>:
{
 80068c8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80068ca:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80068cc:	f7fd fd92 	bl	80043f4 <HAL_GetTick>
  state = hospi->State;
 80068d0:	6d23      	ldr	r3, [r4, #80]	@ 0x50
  uint32_t tickstart = HAL_GetTick();
 80068d2:	4605      	mov	r5, r0
  if (((state & OSPI_BUSY_STATE_MASK) != 0U) || ((state & OSPI_CFG_STATE_MASK) != 0U))
 80068d4:	f013 0f0c 	tst.w	r3, #12
 80068d8:	d032      	beq.n	8006940 <HAL_OSPI_Abort+0x78>
    if ((hospi->Instance->CR & OCTOSPI_CR_DMAEN) != 0U)
 80068da:	6823      	ldr	r3, [r4, #0]
 80068dc:	681a      	ldr	r2, [r3, #0]
 80068de:	0751      	lsls	r1, r2, #29
 80068e0:	d507      	bpl.n	80068f2 <HAL_OSPI_Abort+0x2a>
      CLEAR_BIT(hospi->Instance->CR, OCTOSPI_CR_DMAEN);
 80068e2:	681a      	ldr	r2, [r3, #0]
      status = HAL_DMA_Abort(hospi->hdma);
 80068e4:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
      CLEAR_BIT(hospi->Instance->CR, OCTOSPI_CR_DMAEN);
 80068e6:	f022 0204 	bic.w	r2, r2, #4
 80068ea:	601a      	str	r2, [r3, #0]
      status = HAL_DMA_Abort(hospi->hdma);
 80068ec:	f7fe f87e 	bl	80049ec <HAL_DMA_Abort>
      if (status != HAL_OK)
 80068f0:	bb00      	cbnz	r0, 8006934 <HAL_OSPI_Abort+0x6c>
  HAL_StatusTypeDef status = HAL_OK;
 80068f2:	2000      	movs	r0, #0
    if (__HAL_OSPI_GET_FLAG(hospi, HAL_OSPI_FLAG_BUSY) != RESET)
 80068f4:	6823      	ldr	r3, [r4, #0]
 80068f6:	6a1a      	ldr	r2, [r3, #32]
 80068f8:	0692      	lsls	r2, r2, #26
 80068fa:	d51e      	bpl.n	800693a <HAL_OSPI_Abort+0x72>
      SET_BIT(hospi->Instance->CR, OCTOSPI_CR_ABORT);
 80068fc:	681a      	ldr	r2, [r3, #0]
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_TC, SET, tickstart, hospi->Timeout);
 80068fe:	2102      	movs	r1, #2
      SET_BIT(hospi->Instance->CR, OCTOSPI_CR_ABORT);
 8006900:	f042 0202 	orr.w	r2, r2, #2
 8006904:	601a      	str	r2, [r3, #0]
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_TC, SET, tickstart, hospi->Timeout);
 8006906:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8006908:	2201      	movs	r2, #1
 800690a:	9300      	str	r3, [sp, #0]
 800690c:	4620      	mov	r0, r4
 800690e:	462b      	mov	r3, r5
 8006910:	f7ff ff3a 	bl	8006788 <OSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8006914:	b960      	cbnz	r0, 8006930 <HAL_OSPI_Abort+0x68>
        __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TC);
 8006916:	2602      	movs	r6, #2
 8006918:	6823      	ldr	r3, [r4, #0]
        status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 800691a:	4602      	mov	r2, r0
        __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TC);
 800691c:	625e      	str	r6, [r3, #36]	@ 0x24
        status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 800691e:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8006920:	2120      	movs	r1, #32
 8006922:	9300      	str	r3, [sp, #0]
 8006924:	4620      	mov	r0, r4
 8006926:	462b      	mov	r3, r5
 8006928:	f7ff ff2e 	bl	8006788 <OSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800692c:	b900      	cbnz	r0, 8006930 <HAL_OSPI_Abort+0x68>
          hospi->State = HAL_OSPI_STATE_READY;
 800692e:	6526      	str	r6, [r4, #80]	@ 0x50
}
 8006930:	b002      	add	sp, #8
 8006932:	bd70      	pop	{r4, r5, r6, pc}
        hospi->ErrorCode = HAL_OSPI_ERROR_DMA;
 8006934:	2304      	movs	r3, #4
 8006936:	6563      	str	r3, [r4, #84]	@ 0x54
 8006938:	e7dc      	b.n	80068f4 <HAL_OSPI_Abort+0x2c>
      hospi->State = HAL_OSPI_STATE_READY;
 800693a:	2302      	movs	r3, #2
 800693c:	6523      	str	r3, [r4, #80]	@ 0x50
 800693e:	e7f7      	b.n	8006930 <HAL_OSPI_Abort+0x68>
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8006940:	2310      	movs	r3, #16
    status = HAL_ERROR;
 8006942:	2001      	movs	r0, #1
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8006944:	6563      	str	r3, [r4, #84]	@ 0x54
 8006946:	e7f3      	b.n	8006930 <HAL_OSPI_Abort+0x68>

08006948 <HAL_OSPIM_Config>:
{
 8006948:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if (hospi->Instance == (OCTOSPI_TypeDef *)OCTOSPI1)
 800694c:	6803      	ldr	r3, [r0, #0]
 800694e:	f8df 92ec 	ldr.w	r9, [pc, #748]	@ 8006c3c <HAL_OSPIM_Config+0x2f4>
{
 8006952:	468c      	mov	ip, r1
    other_instance = 1U;
 8006954:	454b      	cmp	r3, r9
 8006956:	bf15      	itete	ne
 8006958:	2300      	movne	r3, #0
 800695a:	2301      	moveq	r3, #1
 800695c:	2601      	movne	r6, #1
 800695e:	2600      	moveq	r6, #0
 8006960:	2701      	movs	r7, #1
    status = HAL_ERROR;
  }
  else
  {
    /* Initialize the structure */
    cfg->ClkPort    = 0U;
 8006962:	2400      	movs	r4, #0
{
 8006964:	b093      	sub	sp, #76	@ 0x4c
    }

    /* Get the information about the instance */
    for (index = 0U; index < OSPI_IOM_NB_PORTS; index ++)
    {
      reg = OCTOSPIM->PCR[index];
 8006966:	f8df e2c8 	ldr.w	lr, [pc, #712]	@ 8006c30 <HAL_OSPIM_Config+0x2e8>
    other_instance = 1U;
 800696a:	9302      	str	r3, [sp, #8]
 800696c:	ab06      	add	r3, sp, #24
    if (instance_nb == 2U)
 800696e:	2f02      	cmp	r7, #2
    cfg->DQSPort    = 0U;
 8006970:	e9c3 4400 	strd	r4, r4, [r3]
    cfg->IOLowPort  = 0U;
 8006974:	e9c3 4402 	strd	r4, r4, [r3, #8]
    cfg->IOHighPort = 0U;
 8006978:	611c      	str	r4, [r3, #16]
    if (instance_nb == 2U)
 800697a:	f040 811a 	bne.w	8006bb2 <HAL_OSPIM_Config+0x26a>
      if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) == 0U)
 800697e:	4aac      	ldr	r2, [pc, #688]	@ (8006c30 <HAL_OSPIM_Config+0x2e8>)
        value = (OCTOSPIM_PCR_CLKSRC | OCTOSPIM_PCR_DQSSRC | OCTOSPIM_PCR_NCSSRC
 8006980:	48ac      	ldr	r0, [pc, #688]	@ (8006c34 <HAL_OSPIM_Config+0x2ec>)
      if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) == 0U)
 8006982:	6812      	ldr	r2, [r2, #0]
        value = (OCTOSPIM_PCR_CLKSRC | OCTOSPIM_PCR_DQSSRC | OCTOSPIM_PCR_NCSSRC
 8006984:	f012 0f01 	tst.w	r2, #1
 8006988:	bf18      	it	ne
 800698a:	f44f 7000 	movne.w	r0, #512	@ 0x200
    for (index = 0U; index < OSPI_IOM_NB_PORTS; index ++)
 800698e:	2500      	movs	r5, #0
      reg = OCTOSPIM->PCR[index];
 8006990:	eb0e 0285 	add.w	r2, lr, r5, lsl #2
 8006994:	6852      	ldr	r2, [r2, #4]
      {
        /* The clock is enabled on this port */
        if ((reg & OCTOSPIM_PCR_CLKSRC) == (value & OCTOSPIM_PCR_CLKSRC))
        {
          /* The clock correspond to the instance passed as parameter */
          cfg->ClkPort = index + 1U;
 8006996:	1c69      	adds	r1, r5, #1
      if ((reg & OCTOSPIM_PCR_CLKEN) != 0U)
 8006998:	07d5      	lsls	r5, r2, #31
 800699a:	d504      	bpl.n	80069a6 <HAL_OSPIM_Config+0x5e>
        if ((reg & OCTOSPIM_PCR_CLKSRC) == (value & OCTOSPIM_PCR_CLKSRC))
 800699c:	ea82 0500 	eor.w	r5, r2, r0
 80069a0:	07ad      	lsls	r5, r5, #30
          cfg->ClkPort = index + 1U;
 80069a2:	bf58      	it	pl
 80069a4:	6019      	strpl	r1, [r3, #0]
        }
      }

      if ((reg & OCTOSPIM_PCR_DQSEN) != 0U)
 80069a6:	06d5      	lsls	r5, r2, #27
 80069a8:	d504      	bpl.n	80069b4 <HAL_OSPIM_Config+0x6c>
      {
        /* The DQS is enabled on this port */
        if ((reg & OCTOSPIM_PCR_DQSSRC) == (value & OCTOSPIM_PCR_DQSSRC))
 80069aa:	ea82 0500 	eor.w	r5, r2, r0
 80069ae:	06ad      	lsls	r5, r5, #26
        {
          /* The DQS correspond to the instance passed as parameter */
          cfg->DQSPort = index + 1U;
 80069b0:	bf58      	it	pl
 80069b2:	6059      	strpl	r1, [r3, #4]
        }
      }

      if ((reg & OCTOSPIM_PCR_NCSEN) != 0U)
 80069b4:	05d5      	lsls	r5, r2, #23
 80069b6:	d504      	bpl.n	80069c2 <HAL_OSPIM_Config+0x7a>
      {
        /* The nCS is enabled on this port */
        if ((reg & OCTOSPIM_PCR_NCSSRC) == (value & OCTOSPIM_PCR_NCSSRC))
 80069b8:	ea82 0500 	eor.w	r5, r2, r0
 80069bc:	05ad      	lsls	r5, r5, #22
        {
          /* The nCS correspond to the instance passed as parameter */
          cfg->NCSPort = index + 1U;
 80069be:	bf58      	it	pl
 80069c0:	6099      	strpl	r1, [r3, #8]
        }
      }

      if ((reg & OCTOSPIM_PCR_IOLEN) != 0U)
 80069c2:	03d5      	lsls	r5, r2, #15
 80069c4:	d50a      	bpl.n	80069dc <HAL_OSPIM_Config+0x94>
      {
        /* The IO Low is enabled on this port */
        if ((reg & OCTOSPIM_PCR_IOLSRC_1) == (value & OCTOSPIM_PCR_IOLSRC_1))
 80069c6:	ea82 0500 	eor.w	r5, r2, r0
 80069ca:	036d      	lsls	r5, r5, #13
 80069cc:	d406      	bmi.n	80069dc <HAL_OSPIM_Config+0x94>
        {
          /* The IO Low correspond to the instance passed as parameter */
          if ((reg & OCTOSPIM_PCR_IOLSRC_0) == 0U)
 80069ce:	0395      	lsls	r5, r2, #14
          {
            cfg->IOLowPort = (OCTOSPIM_PCR_IOLEN | (index + 1U));
 80069d0:	bf54      	ite	pl
 80069d2:	f441 3580 	orrpl.w	r5, r1, #65536	@ 0x10000
          }
          else
          {
            cfg->IOLowPort = (OCTOSPIM_PCR_IOHEN | (index + 1U));
 80069d6:	f041 7580 	orrmi.w	r5, r1, #16777216	@ 0x1000000
 80069da:	60dd      	str	r5, [r3, #12]
          }
        }
      }

      if ((reg & OCTOSPIM_PCR_IOHEN) != 0U)
 80069dc:	01d5      	lsls	r5, r2, #7
 80069de:	d50a      	bpl.n	80069f6 <HAL_OSPIM_Config+0xae>
      {
        /* The IO High is enabled on this port */
        if ((reg & OCTOSPIM_PCR_IOHSRC_1) == (value & OCTOSPIM_PCR_IOHSRC_1))
 80069e0:	ea82 0500 	eor.w	r5, r2, r0
 80069e4:	016d      	lsls	r5, r5, #5
 80069e6:	d406      	bmi.n	80069f6 <HAL_OSPIM_Config+0xae>
        {
          /* The IO High correspond to the instance passed as parameter */
          if ((reg & OCTOSPIM_PCR_IOHSRC_0) == 0U)
 80069e8:	0195      	lsls	r5, r2, #6
          {
            cfg->IOHighPort = (OCTOSPIM_PCR_IOLEN | (index + 1U));
 80069ea:	bf54      	ite	pl
 80069ec:	f441 3280 	orrpl.w	r2, r1, #65536	@ 0x10000
          }
          else
          {
            cfg->IOHighPort = (OCTOSPIM_PCR_IOHEN | (index + 1U));
 80069f0:	f041 7280 	orrmi.w	r2, r1, #16777216	@ 0x1000000
 80069f4:	611a      	str	r2, [r3, #16]
    for (index = 0U; index < OSPI_IOM_NB_PORTS; index ++)
 80069f6:	2902      	cmp	r1, #2
 80069f8:	f04f 0501 	mov.w	r5, #1
 80069fc:	d1c8      	bne.n	8006990 <HAL_OSPIM_Config+0x48>
  for (index = 0U; index < OSPI_NB_INSTANCE; index++)
 80069fe:	42af      	cmp	r7, r5
 8006a00:	f103 0318 	add.w	r3, r3, #24
 8006a04:	f000 80d3 	beq.w	8006bae <HAL_OSPIM_Config+0x266>
    if ((OCTOSPI1->CR & OCTOSPI_CR_EN) != 0U)
 8006a08:	f8d9 7000 	ldr.w	r7, [r9]
    if ((OCTOSPI2->CR & OCTOSPI_CR_EN) != 0U)
 8006a0c:	f8df a230 	ldr.w	sl, [pc, #560]	@ 8006c40 <HAL_OSPIM_Config+0x2f8>
    if ((OCTOSPI1->CR & OCTOSPI_CR_EN) != 0U)
 8006a10:	402f      	ands	r7, r5
      CLEAR_BIT(OCTOSPI1->CR, OCTOSPI_CR_EN);
 8006a12:	bf1f      	itttt	ne
 8006a14:	f8d9 3000 	ldrne.w	r3, [r9]
      ospi_enabled |= 0x1U;
 8006a18:	462f      	movne	r7, r5
      CLEAR_BIT(OCTOSPI1->CR, OCTOSPI_CR_EN);
 8006a1a:	f023 0301 	bicne.w	r3, r3, #1
 8006a1e:	f8c9 3000 	strne.w	r3, [r9]
    if ((OCTOSPI2->CR & OCTOSPI_CR_EN) != 0U)
 8006a22:	f8da 3000 	ldr.w	r3, [sl]
 8006a26:	07d9      	lsls	r1, r3, #31
    CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].NCSPort - 1U)], OCTOSPIM_PCR_NCSEN);
 8006a28:	f04f 0118 	mov.w	r1, #24
      CLEAR_BIT(OCTOSPI2->CR, OCTOSPI_CR_EN);
 8006a2c:	bf49      	itett	mi
 8006a2e:	f8da 3000 	ldrmi.w	r3, [sl]
 8006a32:	9704      	strpl	r7, [sp, #16]
 8006a34:	f023 0301 	bicmi.w	r3, r3, #1
 8006a38:	f8ca 3000 	strmi.w	r3, [sl]
      ospi_enabled |= 0x2U;
 8006a3c:	bf44      	itt	mi
 8006a3e:	f047 0302 	orrmi.w	r3, r7, #2
 8006a42:	9304      	strmi	r3, [sp, #16]
    CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].NCSPort - 1U)], OCTOSPIM_PCR_NCSEN);
 8006a44:	ab12      	add	r3, sp, #72	@ 0x48
 8006a46:	fb01 3106 	mla	r1, r1, r6, r3
 8006a4a:	f851 2c28 	ldr.w	r2, [r1, #-40]
 8006a4e:	4b78      	ldr	r3, [pc, #480]	@ (8006c30 <HAL_OSPIM_Config+0x2e8>)
 8006a50:	3a01      	subs	r2, #1
 8006a52:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 8006a56:	6850      	ldr	r0, [r2, #4]
 8006a58:	f420 7080 	bic.w	r0, r0, #256	@ 0x100
 8006a5c:	6050      	str	r0, [r2, #4]
    if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) != 0U)
 8006a5e:	681a      	ldr	r2, [r3, #0]
 8006a60:	07d2      	lsls	r2, r2, #31
 8006a62:	f140 80a8 	bpl.w	8006bb6 <HAL_OSPIM_Config+0x26e>
      CLEAR_BIT(OCTOSPIM->CR, OCTOSPIM_CR_MUXEN);
 8006a66:	681a      	ldr	r2, [r3, #0]
 8006a68:	f022 0201 	bic.w	r2, r2, #1
 8006a6c:	601a      	str	r2, [r3, #0]
      if (other_instance == 1U)
 8006a6e:	9a02      	ldr	r2, [sp, #8]
 8006a70:	b362      	cbz	r2, 8006acc <HAL_OSPIM_Config+0x184>
        SET_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].ClkPort - 1U)], OCTOSPIM_PCR_CLKSRC);
 8006a72:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8006a74:	3a01      	subs	r2, #1
 8006a76:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 8006a7a:	6851      	ldr	r1, [r2, #4]
 8006a7c:	f041 0102 	orr.w	r1, r1, #2
 8006a80:	6051      	str	r1, [r2, #4]
        if (IOM_cfg[other_instance].DQSPort != 0U)
 8006a82:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8006a84:	b132      	cbz	r2, 8006a94 <HAL_OSPIM_Config+0x14c>
          SET_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].DQSPort - 1U)], OCTOSPIM_PCR_DQSSRC);
 8006a86:	3a01      	subs	r2, #1
 8006a88:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8006a8c:	685a      	ldr	r2, [r3, #4]
 8006a8e:	f042 0220 	orr.w	r2, r2, #32
 8006a92:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[other_instance].IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8006a94:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006a96:	b15b      	cbz	r3, 8006ab0 <HAL_OSPIM_Config+0x168>
          SET_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOLowPort - 1U)& OSPI_IOM_PORT_MASK)], \
 8006a98:	3b01      	subs	r3, #1
 8006a9a:	f003 0301 	and.w	r3, r3, #1
 8006a9e:	009b      	lsls	r3, r3, #2
 8006aa0:	f103 4384 	add.w	r3, r3, #1107296256	@ 0x42000000
 8006aa4:	f503 2344 	add.w	r3, r3, #802816	@ 0xc4000
 8006aa8:	685a      	ldr	r2, [r3, #4]
 8006aaa:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 8006aae:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[other_instance].IOHighPort != HAL_OSPIM_IOPORT_NONE)
 8006ab0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8006ab2:	b15b      	cbz	r3, 8006acc <HAL_OSPIM_Config+0x184>
          SET_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOHighPort - 1U)& OSPI_IOM_PORT_MASK)], \
 8006ab4:	3b01      	subs	r3, #1
 8006ab6:	f003 0301 	and.w	r3, r3, #1
 8006aba:	009b      	lsls	r3, r3, #2
 8006abc:	f103 4384 	add.w	r3, r3, #1107296256	@ 0x42000000
 8006ac0:	f503 2344 	add.w	r3, r3, #802816	@ 0xc4000
 8006ac4:	685a      	ldr	r2, [r3, #4]
 8006ac6:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[instance].IOHighPort - 1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOHEN);
 8006aca:	605a      	str	r2, [r3, #4]
    if ((cfg->ClkPort == IOM_cfg[other_instance].ClkPort) || (cfg->DQSPort == IOM_cfg[other_instance].DQSPort)     ||
 8006acc:	f04f 0818 	mov.w	r8, #24
 8006ad0:	f8dc 3000 	ldr.w	r3, [ip]
 8006ad4:	aa12      	add	r2, sp, #72	@ 0x48
 8006ad6:	9303      	str	r3, [sp, #12]
 8006ad8:	9b02      	ldr	r3, [sp, #8]
 8006ada:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8006ade:	fb08 2803 	mla	r8, r8, r3, r2
        (cfg->IOHighPort == IOM_cfg[other_instance].IOHighPort))
 8006ae2:	f858 0c20 	ldr.w	r0, [r8, #-32]
    if ((cfg->ClkPort == IOM_cfg[other_instance].ClkPort) || (cfg->DQSPort == IOM_cfg[other_instance].DQSPort)     ||
 8006ae6:	f858 ec30 	ldr.w	lr, [r8, #-48]
        (cfg->IOHighPort == IOM_cfg[other_instance].IOHighPort))
 8006aea:	9001      	str	r0, [sp, #4]
    if ((cfg->ClkPort == IOM_cfg[other_instance].ClkPort) || (cfg->DQSPort == IOM_cfg[other_instance].DQSPort)     ||
 8006aec:	9803      	ldr	r0, [sp, #12]
        (cfg->NCSPort == IOM_cfg[other_instance].NCSPort) || (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) ||
 8006aee:	f8dc 3008 	ldr.w	r3, [ip, #8]
    if ((cfg->ClkPort == IOM_cfg[other_instance].ClkPort) || (cfg->DQSPort == IOM_cfg[other_instance].DQSPort)     ||
 8006af2:	4570      	cmp	r0, lr
        (cfg->NCSPort == IOM_cfg[other_instance].NCSPort) || (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) ||
 8006af4:	9305      	str	r3, [sp, #20]
    if ((cfg->ClkPort == IOM_cfg[other_instance].ClkPort) || (cfg->DQSPort == IOM_cfg[other_instance].DQSPort)     ||
 8006af6:	f858 1c2c 	ldr.w	r1, [r8, #-44]
        (cfg->NCSPort == IOM_cfg[other_instance].NCSPort) || (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) ||
 8006afa:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8006afe:	f858 4c24 	ldr.w	r4, [r8, #-36]
        (cfg->IOHighPort == IOM_cfg[other_instance].IOHighPort))
 8006b02:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8006b06:	f8df b128 	ldr.w	fp, [pc, #296]	@ 8006c30 <HAL_OSPIM_Config+0x2e8>
    if ((cfg->ClkPort == IOM_cfg[other_instance].ClkPort) || (cfg->DQSPort == IOM_cfg[other_instance].DQSPort)     ||
 8006b0a:	f000 809b 	beq.w	8006c44 <HAL_OSPIM_Config+0x2fc>
 8006b0e:	42a9      	cmp	r1, r5
 8006b10:	d00a      	beq.n	8006b28 <HAL_OSPIM_Config+0x1e0>
 8006b12:	f858 8c28 	ldr.w	r8, [r8, #-40]
 8006b16:	9805      	ldr	r0, [sp, #20]
 8006b18:	4540      	cmp	r0, r8
 8006b1a:	d005      	beq.n	8006b28 <HAL_OSPIM_Config+0x1e0>
        (cfg->NCSPort == IOM_cfg[other_instance].NCSPort) || (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) ||
 8006b1c:	4294      	cmp	r4, r2
 8006b1e:	d003      	beq.n	8006b28 <HAL_OSPIM_Config+0x1e0>
 8006b20:	9801      	ldr	r0, [sp, #4]
 8006b22:	4283      	cmp	r3, r0
 8006b24:	f040 809e 	bne.w	8006c64 <HAL_OSPIM_Config+0x31c>
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].ClkPort - 1U)], OCTOSPIM_PCR_CLKEN);
 8006b28:	f10e 3eff 	add.w	lr, lr, #4294967295
 8006b2c:	eb0b 0e8e 	add.w	lr, fp, lr, lsl #2
 8006b30:	f8de 8004 	ldr.w	r8, [lr, #4]
 8006b34:	f028 0801 	bic.w	r8, r8, #1
 8006b38:	f8ce 8004 	str.w	r8, [lr, #4]
        if (IOM_cfg[other_instance].DQSPort != 0U)
 8006b3c:	b141      	cbz	r1, 8006b50 <HAL_OSPIM_Config+0x208>
          CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].DQSPort - 1U)], OCTOSPIM_PCR_DQSEN);
 8006b3e:	3901      	subs	r1, #1
 8006b40:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8006b44:	f8d1 e004 	ldr.w	lr, [r1, #4]
 8006b48:	f02e 0e10 	bic.w	lr, lr, #16
 8006b4c:	f8c1 e004 	str.w	lr, [r1, #4]
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].NCSPort - 1U)], OCTOSPIM_PCR_NCSEN);
 8006b50:	2118      	movs	r1, #24
 8006b52:	9802      	ldr	r0, [sp, #8]
 8006b54:	f10d 0e48 	add.w	lr, sp, #72	@ 0x48
 8006b58:	fb01 e100 	mla	r1, r1, r0, lr
 8006b5c:	f851 1c28 	ldr.w	r1, [r1, #-40]
 8006b60:	ea4f 0e81 	mov.w	lr, r1, lsl #2
 8006b64:	4934      	ldr	r1, [pc, #208]	@ (8006c38 <HAL_OSPIM_Config+0x2f0>)
 8006b66:	4471      	add	r1, lr
 8006b68:	f8d1 e004 	ldr.w	lr, [r1, #4]
 8006b6c:	f42e 7e80 	bic.w	lr, lr, #256	@ 0x100
 8006b70:	f8c1 e004 	str.w	lr, [r1, #4]
        if (IOM_cfg[other_instance].IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8006b74:	b15c      	cbz	r4, 8006b8e <HAL_OSPIM_Config+0x246>
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006b76:	3c01      	subs	r4, #1
 8006b78:	f004 0401 	and.w	r4, r4, #1
 8006b7c:	00a4      	lsls	r4, r4, #2
 8006b7e:	f104 4484 	add.w	r4, r4, #1107296256	@ 0x42000000
 8006b82:	f504 2444 	add.w	r4, r4, #802816	@ 0xc4000
 8006b86:	6861      	ldr	r1, [r4, #4]
 8006b88:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
 8006b8c:	6061      	str	r1, [r4, #4]
        if (IOM_cfg[other_instance].IOHighPort != HAL_OSPIM_IOPORT_NONE)
 8006b8e:	9901      	ldr	r1, [sp, #4]
 8006b90:	2900      	cmp	r1, #0
 8006b92:	d067      	beq.n	8006c64 <HAL_OSPIM_Config+0x31c>
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006b94:	1e48      	subs	r0, r1, #1
 8006b96:	f000 0001 	and.w	r0, r0, #1
 8006b9a:	0080      	lsls	r0, r0, #2
 8006b9c:	f100 4084 	add.w	r0, r0, #1107296256	@ 0x42000000
 8006ba0:	f500 2044 	add.w	r0, r0, #802816	@ 0xc4000
 8006ba4:	6841      	ldr	r1, [r0, #4]
 8006ba6:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
 8006baa:	6041      	str	r1, [r0, #4]
 8006bac:	e05a      	b.n	8006c64 <HAL_OSPIM_Config+0x31c>
 8006bae:	460f      	mov	r7, r1
 8006bb0:	e6dd      	b.n	800696e <HAL_OSPIM_Config+0x26>
  uint32_t value = 0U;
 8006bb2:	2000      	movs	r0, #0
 8006bb4:	e6eb      	b.n	800698e <HAL_OSPIM_Config+0x46>
      if (IOM_cfg[instance].ClkPort != 0U)
 8006bb6:	f851 2c30 	ldr.w	r2, [r1, #-48]
 8006bba:	2a00      	cmp	r2, #0
 8006bbc:	d086      	beq.n	8006acc <HAL_OSPIM_Config+0x184>
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].ClkPort - 1U)], OCTOSPIM_PCR_CLKEN);
 8006bbe:	3a01      	subs	r2, #1
 8006bc0:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 8006bc4:	6850      	ldr	r0, [r2, #4]
 8006bc6:	f020 0001 	bic.w	r0, r0, #1
 8006bca:	6050      	str	r0, [r2, #4]
        if (IOM_cfg[instance].DQSPort != 0U)
 8006bcc:	f851 2c2c 	ldr.w	r2, [r1, #-44]
 8006bd0:	b132      	cbz	r2, 8006be0 <HAL_OSPIM_Config+0x298>
          CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].DQSPort - 1U)], OCTOSPIM_PCR_DQSEN);
 8006bd2:	3a01      	subs	r2, #1
 8006bd4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8006bd8:	685a      	ldr	r2, [r3, #4]
 8006bda:	f022 0210 	bic.w	r2, r2, #16
 8006bde:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[instance].IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8006be0:	2318      	movs	r3, #24
 8006be2:	aa12      	add	r2, sp, #72	@ 0x48
 8006be4:	fb03 2306 	mla	r3, r3, r6, r2
 8006be8:	f853 3c24 	ldr.w	r3, [r3, #-36]
 8006bec:	b15b      	cbz	r3, 8006c06 <HAL_OSPIM_Config+0x2be>
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[instance].IOLowPort - 1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOLEN);
 8006bee:	3b01      	subs	r3, #1
 8006bf0:	f003 0301 	and.w	r3, r3, #1
 8006bf4:	009b      	lsls	r3, r3, #2
 8006bf6:	f103 4384 	add.w	r3, r3, #1107296256	@ 0x42000000
 8006bfa:	f503 2344 	add.w	r3, r3, #802816	@ 0xc4000
 8006bfe:	685a      	ldr	r2, [r3, #4]
 8006c00:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8006c04:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[instance].IOHighPort != HAL_OSPIM_IOPORT_NONE)
 8006c06:	2318      	movs	r3, #24
 8006c08:	aa12      	add	r2, sp, #72	@ 0x48
 8006c0a:	fb03 2306 	mla	r3, r3, r6, r2
 8006c0e:	f853 3c20 	ldr.w	r3, [r3, #-32]
 8006c12:	2b00      	cmp	r3, #0
 8006c14:	f43f af5a 	beq.w	8006acc <HAL_OSPIM_Config+0x184>
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[instance].IOHighPort - 1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOHEN);
 8006c18:	3b01      	subs	r3, #1
 8006c1a:	f003 0301 	and.w	r3, r3, #1
 8006c1e:	009b      	lsls	r3, r3, #2
 8006c20:	f103 4384 	add.w	r3, r3, #1107296256	@ 0x42000000
 8006c24:	f503 2344 	add.w	r3, r3, #802816	@ 0xc4000
 8006c28:	685a      	ldr	r2, [r3, #4]
 8006c2a:	f022 7280 	bic.w	r2, r2, #16777216	@ 0x1000000
 8006c2e:	e74c      	b.n	8006aca <HAL_OSPIM_Config+0x182>
 8006c30:	420c4000 	.word	0x420c4000
 8006c34:	04040222 	.word	0x04040222
 8006c38:	420c3ffc 	.word	0x420c3ffc
 8006c3c:	420d1400 	.word	0x420d1400
 8006c40:	420d2400 	.word	0x420d2400
      if ((cfg->ClkPort   == IOM_cfg[other_instance].ClkPort)   &&
 8006c44:	42a9      	cmp	r1, r5
 8006c46:	f47f af6f 	bne.w	8006b28 <HAL_OSPIM_Config+0x1e0>
          (cfg->DQSPort    == IOM_cfg[other_instance].DQSPort)  &&
 8006c4a:	4294      	cmp	r4, r2
 8006c4c:	f47f af6c 	bne.w	8006b28 <HAL_OSPIM_Config+0x1e0>
          (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) &&
 8006c50:	9801      	ldr	r0, [sp, #4]
 8006c52:	4283      	cmp	r3, r0
 8006c54:	f47f af68 	bne.w	8006b28 <HAL_OSPIM_Config+0x1e0>
        SET_BIT(OCTOSPIM->CR, OCTOSPIM_CR_MUXEN);
 8006c58:	f8db 1000 	ldr.w	r1, [fp]
 8006c5c:	f041 0101 	orr.w	r1, r1, #1
 8006c60:	f8cb 1000 	str.w	r1, [fp]
    MODIFY_REG(OCTOSPIM->PCR[(cfg->NCSPort - 1U)], (OCTOSPIM_PCR_NCSEN | OCTOSPIM_PCR_NCSSRC),
 8006c64:	9905      	ldr	r1, [sp, #20]
 8006c66:	4c74      	ldr	r4, [pc, #464]	@ (8006e38 <HAL_OSPIM_Config+0x4f0>)
 8006c68:	3901      	subs	r1, #1
 8006c6a:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8006c6e:	6848      	ldr	r0, [r1, #4]
 8006c70:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 8006c74:	ea40 2046 	orr.w	r0, r0, r6, lsl #9
 8006c78:	f440 7080 	orr.w	r0, r0, #256	@ 0x100
 8006c7c:	6048      	str	r0, [r1, #4]
    if (((cfg->Req2AckTime) >= 1U) && ((cfg->Req2AckTime) <= 256U))
 8006c7e:	f8dc 0014 	ldr.w	r0, [ip, #20]
 8006c82:	3801      	subs	r0, #1
 8006c84:	28ff      	cmp	r0, #255	@ 0xff
 8006c86:	d80a      	bhi.n	8006c9e <HAL_OSPIM_Config+0x356>
      if ((cfg->Req2AckTime - 1U) > ((OCTOSPIM->CR & OCTOSPIM_CR_REQ2ACK_TIME) >> OCTOSPIM_CR_REQ2ACK_TIME_Pos))
 8006c88:	6821      	ldr	r1, [r4, #0]
 8006c8a:	f3c1 4107 	ubfx	r1, r1, #16, #8
 8006c8e:	4288      	cmp	r0, r1
        MODIFY_REG(OCTOSPIM->CR, OCTOSPIM_CR_REQ2ACK_TIME, ((cfg->Req2AckTime - 1U) << OCTOSPIM_CR_REQ2ACK_TIME_Pos));
 8006c90:	bf81      	itttt	hi
 8006c92:	6821      	ldrhi	r1, [r4, #0]
 8006c94:	f421 017f 	bichi.w	r1, r1, #16711680	@ 0xff0000
 8006c98:	ea41 4100 	orrhi.w	r1, r1, r0, lsl #16
 8006c9c:	6021      	strhi	r1, [r4, #0]
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort - 1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC), OCTOSPIM_PCR_CLKEN);
 8006c9e:	9803      	ldr	r0, [sp, #12]
    if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) != 0U)
 8006ca0:	6821      	ldr	r1, [r4, #0]
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort - 1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC), OCTOSPIM_PCR_CLKEN);
 8006ca2:	3801      	subs	r0, #1
    if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) != 0U)
 8006ca4:	f011 0f01 	tst.w	r1, #1
 8006ca8:	ea4f 0080 	mov.w	r0, r0, lsl #2
 8006cac:	f402 3c80 	and.w	ip, r2, #65536	@ 0x10000
 8006cb0:	f403 3180 	and.w	r1, r3, #65536	@ 0x10000
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort - 1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC), OCTOSPIM_PCR_CLKEN);
 8006cb4:	4420      	add	r0, r4
    if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) != 0U)
 8006cb6:	d063      	beq.n	8006d80 <HAL_OSPIM_Config+0x438>
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort - 1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC), OCTOSPIM_PCR_CLKEN);
 8006cb8:	6846      	ldr	r6, [r0, #4]
 8006cba:	f026 0603 	bic.w	r6, r6, #3
 8006cbe:	f046 0601 	orr.w	r6, r6, #1
 8006cc2:	6046      	str	r6, [r0, #4]
      if (cfg->DQSPort != 0U)
 8006cc4:	b145      	cbz	r5, 8006cd8 <HAL_OSPIM_Config+0x390>
        MODIFY_REG(OCTOSPIM->PCR[(cfg->DQSPort - 1U)], (OCTOSPIM_PCR_DQSEN | OCTOSPIM_PCR_DQSSRC), OCTOSPIM_PCR_DQSEN);
 8006cc6:	3d01      	subs	r5, #1
 8006cc8:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8006ccc:	6868      	ldr	r0, [r5, #4]
 8006cce:	f020 0030 	bic.w	r0, r0, #48	@ 0x30
 8006cd2:	f040 0010 	orr.w	r0, r0, #16
 8006cd6:	6068      	str	r0, [r5, #4]
      if ((cfg->IOLowPort & OCTOSPIM_PCR_IOLEN) != 0U)
 8006cd8:	f1bc 0f00 	cmp.w	ip, #0
 8006cdc:	d030      	beq.n	8006d40 <HAL_OSPIM_Config+0x3f8>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006cde:	3a01      	subs	r2, #1
 8006ce0:	f002 0201 	and.w	r2, r2, #1
 8006ce4:	0092      	lsls	r2, r2, #2
 8006ce6:	f102 4284 	add.w	r2, r2, #1107296256	@ 0x42000000
 8006cea:	f502 2244 	add.w	r2, r2, #802816	@ 0xc4000
 8006cee:	6850      	ldr	r0, [r2, #4]
 8006cf0:	f420 20e0 	bic.w	r0, r0, #458752	@ 0x70000
 8006cf4:	f440 3080 	orr.w	r0, r0, #65536	@ 0x10000
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006cf8:	6050      	str	r0, [r2, #4]
      if ((cfg->IOHighPort & OCTOSPIM_PCR_IOLEN) != 0U)
 8006cfa:	b389      	cbz	r1, 8006d60 <HAL_OSPIM_Config+0x418>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006cfc:	3b01      	subs	r3, #1
 8006cfe:	f003 0301 	and.w	r3, r3, #1
 8006d02:	009b      	lsls	r3, r3, #2
 8006d04:	f103 4384 	add.w	r3, r3, #1107296256	@ 0x42000000
 8006d08:	f503 2344 	add.w	r3, r3, #802816	@ 0xc4000
 8006d0c:	685a      	ldr	r2, [r3, #4]
 8006d0e:	f422 22e0 	bic.w	r2, r2, #458752	@ 0x70000
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006d12:	f442 3240 	orr.w	r2, r2, #196608	@ 0x30000
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006d16:	605a      	str	r2, [r3, #4]
    if ((ospi_enabled & 0x1U) != 0U)
 8006d18:	b12f      	cbz	r7, 8006d26 <HAL_OSPIM_Config+0x3de>
      SET_BIT(OCTOSPI1->CR, OCTOSPI_CR_EN);
 8006d1a:	f8d9 3000 	ldr.w	r3, [r9]
 8006d1e:	f043 0301 	orr.w	r3, r3, #1
 8006d22:	f8c9 3000 	str.w	r3, [r9]
}
 8006d26:	2000      	movs	r0, #0
    if ((ospi_enabled & 0x2U) != 0U)
 8006d28:	9b04      	ldr	r3, [sp, #16]
 8006d2a:	079b      	lsls	r3, r3, #30
      SET_BIT(OCTOSPI2->CR, OCTOSPI_CR_EN);
 8006d2c:	bf42      	ittt	mi
 8006d2e:	f8da 3000 	ldrmi.w	r3, [sl]
 8006d32:	f043 0301 	orrmi.w	r3, r3, #1
 8006d36:	f8ca 3000 	strmi.w	r3, [sl]
}
 8006d3a:	b013      	add	sp, #76	@ 0x4c
 8006d3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      else if (cfg->IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8006d40:	2a00      	cmp	r2, #0
 8006d42:	d0da      	beq.n	8006cfa <HAL_OSPIM_Config+0x3b2>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006d44:	3a01      	subs	r2, #1
 8006d46:	f002 0201 	and.w	r2, r2, #1
 8006d4a:	0092      	lsls	r2, r2, #2
 8006d4c:	f102 4284 	add.w	r2, r2, #1107296256	@ 0x42000000
 8006d50:	f502 2244 	add.w	r2, r2, #802816	@ 0xc4000
 8006d54:	6850      	ldr	r0, [r2, #4]
 8006d56:	f020 60e0 	bic.w	r0, r0, #117440512	@ 0x7000000
 8006d5a:	f040 7080 	orr.w	r0, r0, #16777216	@ 0x1000000
 8006d5e:	e7cb      	b.n	8006cf8 <HAL_OSPIM_Config+0x3b0>
      else if (cfg->IOHighPort != HAL_OSPIM_IOPORT_NONE)
 8006d60:	2b00      	cmp	r3, #0
 8006d62:	d0d9      	beq.n	8006d18 <HAL_OSPIM_Config+0x3d0>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006d64:	3b01      	subs	r3, #1
 8006d66:	f003 0301 	and.w	r3, r3, #1
 8006d6a:	009b      	lsls	r3, r3, #2
 8006d6c:	f103 4384 	add.w	r3, r3, #1107296256	@ 0x42000000
 8006d70:	f503 2344 	add.w	r3, r3, #802816	@ 0xc4000
 8006d74:	685a      	ldr	r2, [r3, #4]
 8006d76:	f022 62e0 	bic.w	r2, r2, #117440512	@ 0x7000000
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006d7a:	f042 7240 	orr.w	r2, r2, #50331648	@ 0x3000000
 8006d7e:	e7ca      	b.n	8006d16 <HAL_OSPIM_Config+0x3ce>
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort - 1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC),
 8006d80:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8006d84:	f02e 0e03 	bic.w	lr, lr, #3
 8006d88:	ea4e 0e46 	orr.w	lr, lr, r6, lsl #1
 8006d8c:	f04e 0e01 	orr.w	lr, lr, #1
 8006d90:	f8c0 e004 	str.w	lr, [r0, #4]
      if (cfg->DQSPort != 0U)
 8006d94:	b155      	cbz	r5, 8006dac <HAL_OSPIM_Config+0x464>
        MODIFY_REG(OCTOSPIM->PCR[(cfg->DQSPort - 1U)], (OCTOSPIM_PCR_DQSEN | OCTOSPIM_PCR_DQSSRC),
 8006d96:	3d01      	subs	r5, #1
 8006d98:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8006d9c:	6868      	ldr	r0, [r5, #4]
 8006d9e:	f020 0030 	bic.w	r0, r0, #48	@ 0x30
 8006da2:	ea40 1046 	orr.w	r0, r0, r6, lsl #5
 8006da6:	f040 0010 	orr.w	r0, r0, #16
 8006daa:	6068      	str	r0, [r5, #4]
      if ((cfg->IOLowPort & OCTOSPIM_PCR_IOLEN) != 0U)
 8006dac:	f1bc 0f00 	cmp.w	ip, #0
 8006db0:	d01e      	beq.n	8006df0 <HAL_OSPIM_Config+0x4a8>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006db2:	3a01      	subs	r2, #1
 8006db4:	f002 0201 	and.w	r2, r2, #1
 8006db8:	0092      	lsls	r2, r2, #2
 8006dba:	f102 4284 	add.w	r2, r2, #1107296256	@ 0x42000000
 8006dbe:	f502 2244 	add.w	r2, r2, #802816	@ 0xc4000
 8006dc2:	6850      	ldr	r0, [r2, #4]
 8006dc4:	f420 20e0 	bic.w	r0, r0, #458752	@ 0x70000
 8006dc8:	ea40 4086 	orr.w	r0, r0, r6, lsl #18
 8006dcc:	f440 3080 	orr.w	r0, r0, #65536	@ 0x10000
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006dd0:	6050      	str	r0, [r2, #4]
      if ((cfg->IOHighPort & OCTOSPIM_PCR_IOLEN) != 0U)
 8006dd2:	b1f9      	cbz	r1, 8006e14 <HAL_OSPIM_Config+0x4cc>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006dd4:	3b01      	subs	r3, #1
 8006dd6:	f003 0301 	and.w	r3, r3, #1
 8006dda:	009b      	lsls	r3, r3, #2
 8006ddc:	f103 4384 	add.w	r3, r3, #1107296256	@ 0x42000000
 8006de0:	f503 2344 	add.w	r3, r3, #802816	@ 0xc4000
 8006de4:	685a      	ldr	r2, [r3, #4]
 8006de6:	f422 22e0 	bic.w	r2, r2, #458752	@ 0x70000
 8006dea:	ea42 4286 	orr.w	r2, r2, r6, lsl #18
 8006dee:	e790      	b.n	8006d12 <HAL_OSPIM_Config+0x3ca>
      else if (cfg->IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8006df0:	2a00      	cmp	r2, #0
 8006df2:	d0ee      	beq.n	8006dd2 <HAL_OSPIM_Config+0x48a>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006df4:	3a01      	subs	r2, #1
 8006df6:	f002 0201 	and.w	r2, r2, #1
 8006dfa:	0092      	lsls	r2, r2, #2
 8006dfc:	f102 4284 	add.w	r2, r2, #1107296256	@ 0x42000000
 8006e00:	f502 2244 	add.w	r2, r2, #802816	@ 0xc4000
 8006e04:	6850      	ldr	r0, [r2, #4]
 8006e06:	f020 60e0 	bic.w	r0, r0, #117440512	@ 0x7000000
 8006e0a:	ea40 6086 	orr.w	r0, r0, r6, lsl #26
 8006e0e:	f040 7080 	orr.w	r0, r0, #16777216	@ 0x1000000
 8006e12:	e7dd      	b.n	8006dd0 <HAL_OSPIM_Config+0x488>
      else if (cfg->IOHighPort != HAL_OSPIM_IOPORT_NONE)
 8006e14:	2b00      	cmp	r3, #0
 8006e16:	f43f af7f 	beq.w	8006d18 <HAL_OSPIM_Config+0x3d0>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006e1a:	3b01      	subs	r3, #1
 8006e1c:	f003 0301 	and.w	r3, r3, #1
 8006e20:	009b      	lsls	r3, r3, #2
 8006e22:	f103 4384 	add.w	r3, r3, #1107296256	@ 0x42000000
 8006e26:	f503 2344 	add.w	r3, r3, #802816	@ 0xc4000
 8006e2a:	685a      	ldr	r2, [r3, #4]
 8006e2c:	f022 62e0 	bic.w	r2, r2, #117440512	@ 0x7000000
 8006e30:	ea42 6286 	orr.w	r2, r2, r6, lsl #26
 8006e34:	e7a1      	b.n	8006d7a <HAL_OSPIM_Config+0x432>
 8006e36:	bf00      	nop
 8006e38:	420c4000 	.word	0x420c4000

08006e3c <HAL_OSPI_DLYB_SetConfig>:
  * @param  hospi   : OSPI handle.
  * @param  pdlyb_cfg: Pointer to DLYB configuration structure.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_OSPI_DLYB_SetConfig(OSPI_HandleTypeDef *hospi, HAL_OSPI_DLYB_CfgTypeDef  *pdlyb_cfg)
{
 8006e3c:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef status = HAL_ERROR;

  /* Enable OCTOSPI Free Running Clock (mandatory) */
  SET_BIT(hospi->Instance->DCR1, OCTOSPI_DCR1_FRCK);
 8006e3e:	6803      	ldr	r3, [r0, #0]
{
 8006e40:	4604      	mov	r4, r0
  SET_BIT(hospi->Instance->DCR1, OCTOSPI_DCR1_FRCK);
 8006e42:	689a      	ldr	r2, [r3, #8]
 8006e44:	f042 0202 	orr.w	r2, r2, #2
 8006e48:	609a      	str	r2, [r3, #8]

  /* Update OCTOSPI state */
  hospi->State = HAL_OSPI_STATE_BUSY_CMD;
 8006e4a:	2208      	movs	r2, #8
 8006e4c:	6502      	str	r2, [r0, #80]	@ 0x50

  if (hospi->Instance == OCTOSPI1)
 8006e4e:	4a0e      	ldr	r2, [pc, #56]	@ (8006e88 <HAL_OSPI_DLYB_SetConfig+0x4c>)
 8006e50:	4293      	cmp	r3, r2
 8006e52:	d111      	bne.n	8006e78 <HAL_OSPI_DLYB_SetConfig+0x3c>
  * @retval None
  */

__STATIC_INLINE void LL_DLYB_Enable(DLYB_TypeDef *DLYBx)
{
  SET_BIT(DLYBx->CR, DLYB_CR_DEN);
 8006e54:	480d      	ldr	r0, [pc, #52]	@ (8006e8c <HAL_OSPI_DLYB_SetConfig+0x50>)
 8006e56:	6803      	ldr	r3, [r0, #0]
    /* Enable the DelayBlock */
    LL_DLYB_Enable(DLYB_OCTOSPI1);

    /* Set the Delay Block configuration */
    LL_DLYB_SetDelay(DLYB_OCTOSPI1, pdlyb_cfg);
    status = HAL_OK;
 8006e58:	2500      	movs	r5, #0
 8006e5a:	f043 0301 	orr.w	r3, r3, #1
 8006e5e:	6003      	str	r3, [r0, #0]
  {
    /* Enable the DelayBlock */
    LL_DLYB_Enable(DLYB_OCTOSPI2);

    /* Set the Delay Block configuration */
    LL_DLYB_SetDelay(DLYB_OCTOSPI2, pdlyb_cfg);
 8006e60:	f004 f984 	bl	800b16c <LL_DLYB_SetDelay>
  {
    /* Nothing to do */
  }

  /* Abort the current OCTOSPI operation if exist */
  (void)HAL_OSPI_Abort(hospi);
 8006e64:	4620      	mov	r0, r4
 8006e66:	f7ff fd2f 	bl	80068c8 <HAL_OSPI_Abort>

  /* Disable Free Running Clock */
  CLEAR_BIT(hospi->Instance->DCR1, OCTOSPI_DCR1_FRCK);
 8006e6a:	6822      	ldr	r2, [r4, #0]

  /* Return function status */
  return status;
}
 8006e6c:	4628      	mov	r0, r5
  CLEAR_BIT(hospi->Instance->DCR1, OCTOSPI_DCR1_FRCK);
 8006e6e:	6893      	ldr	r3, [r2, #8]
 8006e70:	f023 0302 	bic.w	r3, r3, #2
 8006e74:	6093      	str	r3, [r2, #8]
}
 8006e76:	bd38      	pop	{r3, r4, r5, pc}
  else if (hospi->Instance == OCTOSPI2)
 8006e78:	4a05      	ldr	r2, [pc, #20]	@ (8006e90 <HAL_OSPI_DLYB_SetConfig+0x54>)
 8006e7a:	4293      	cmp	r3, r2
 8006e7c:	d101      	bne.n	8006e82 <HAL_OSPI_DLYB_SetConfig+0x46>
 8006e7e:	4805      	ldr	r0, [pc, #20]	@ (8006e94 <HAL_OSPI_DLYB_SetConfig+0x58>)
 8006e80:	e7e9      	b.n	8006e56 <HAL_OSPI_DLYB_SetConfig+0x1a>
  HAL_StatusTypeDef status = HAL_ERROR;
 8006e82:	2501      	movs	r5, #1
 8006e84:	e7ee      	b.n	8006e64 <HAL_OSPI_DLYB_SetConfig+0x28>
 8006e86:	bf00      	nop
 8006e88:	420d1400 	.word	0x420d1400
 8006e8c:	420cf000 	.word	0x420cf000
 8006e90:	420d2400 	.word	0x420d2400
 8006e94:	420cf400 	.word	0x420cf400

08006e98 <HAL_PWREx_ControlVoltageScaling>:

  /* Check the parameter */
  assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));

  /* Get the current voltage scale applied */
  vos_old = READ_BIT(PWR->SVMSR, PWR_SVMSR_ACTVOS);
 8006e98:	4b1d      	ldr	r3, [pc, #116]	@ (8006f10 <HAL_PWREx_ControlVoltageScaling+0x78>)
 8006e9a:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8006e9c:	f402 3240 	and.w	r2, r2, #196608	@ 0x30000

  /* No change, nothing to do */
  if (vos_old == VoltageScaling)
 8006ea0:	4282      	cmp	r2, r0
 8006ea2:	d108      	bne.n	8006eb6 <HAL_PWREx_ControlVoltageScaling+0x1e>
  {
    /* Enable USB BOOST after wake up from Stop mode */
    if (VoltageScaling > PWR_REGULATOR_VOLTAGE_SCALE3)
 8006ea4:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 8006ea8:	d903      	bls.n	8006eb2 <HAL_PWREx_ControlVoltageScaling+0x1a>
    {
      /* Enable USB BOOST */
      SET_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN);
 8006eaa:	68da      	ldr	r2, [r3, #12]
 8006eac:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 8006eb0:	60da      	str	r2, [r3, #12]
    }

    return HAL_OK;
 8006eb2:	2000      	movs	r0, #0
 8006eb4:	4770      	bx	lr
   *  The Embedded power distribution (EPOD) must be enabled before switching to
   *  voltage scale 1 / 2 from voltage scale lower.
   */
  if (VoltageScaling > PWR_REGULATOR_VOLTAGE_SCALE3)
  {
    MODIFY_REG(PWR->VOSR, (PWR_VOSR_VOS | PWR_VOSR_BOOSTEN), (VoltageScaling | PWR_VOSR_BOOSTEN));
 8006eb6:	68da      	ldr	r2, [r3, #12]
  if (VoltageScaling > PWR_REGULATOR_VOLTAGE_SCALE3)
 8006eb8:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
    MODIFY_REG(PWR->VOSR, (PWR_VOSR_VOS | PWR_VOSR_BOOSTEN), (VoltageScaling | PWR_VOSR_BOOSTEN));
 8006ebc:	f422 22e0 	bic.w	r2, r2, #458752	@ 0x70000
 8006ec0:	ea42 0200 	orr.w	r2, r2, r0
 8006ec4:	bf88      	it	hi
 8006ec6:	f442 2280 	orrhi.w	r2, r2, #262144	@ 0x40000
  }
  else
  {
    MODIFY_REG(PWR->VOSR, (PWR_VOSR_VOS | PWR_VOSR_BOOSTEN), VoltageScaling);
 8006eca:	60da      	str	r2, [r3, #12]
  }

  /* Wait until VOSRDY is raised */
  timeout = ((PWR_FLAG_SETTING_DELAY * (SystemCoreClock / 1000U)) / 1000U) + 1U;
 8006ecc:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8006ed0:	4b10      	ldr	r3, [pc, #64]	@ (8006f14 <HAL_PWREx_ControlVoltageScaling+0x7c>)
 8006ed2:	2132      	movs	r1, #50	@ 0x32
 8006ed4:	681b      	ldr	r3, [r3, #0]
 8006ed6:	fbb3 f3f2 	udiv	r3, r3, r2
 8006eda:	434b      	muls	r3, r1
 8006edc:	fbb3 f3f2 	udiv	r3, r3, r2
 8006ee0:	3301      	adds	r3, #1
 8006ee2:	461a      	mov	r2, r3
  while (HAL_IS_BIT_CLR(PWR->VOSR, PWR_VOSR_VOSRDY) && (timeout != 0U))
 8006ee4:	490a      	ldr	r1, [pc, #40]	@ (8006f10 <HAL_PWREx_ControlVoltageScaling+0x78>)
 8006ee6:	68c8      	ldr	r0, [r1, #12]
 8006ee8:	0400      	lsls	r0, r0, #16
 8006eea:	d404      	bmi.n	8006ef6 <HAL_PWREx_ControlVoltageScaling+0x5e>
 8006eec:	b90a      	cbnz	r2, 8006ef2 <HAL_PWREx_ControlVoltageScaling+0x5a>
  }

  /* Check time out */
  if (timeout == 0U)
  {
    return HAL_TIMEOUT;
 8006eee:	2003      	movs	r0, #3
  }

  return HAL_OK;
}
 8006ef0:	4770      	bx	lr
    timeout--;
 8006ef2:	3a01      	subs	r2, #1
 8006ef4:	e7f7      	b.n	8006ee6 <HAL_PWREx_ControlVoltageScaling+0x4e>
  if (timeout != 0U)
 8006ef6:	2a00      	cmp	r2, #0
 8006ef8:	d0f9      	beq.n	8006eee <HAL_PWREx_ControlVoltageScaling+0x56>
    while ((HAL_IS_BIT_CLR(PWR->SVMSR, PWR_SVMSR_ACTVOSRDY)) && (timeout != 0U))
 8006efa:	4a05      	ldr	r2, [pc, #20]	@ (8006f10 <HAL_PWREx_ControlVoltageScaling+0x78>)
 8006efc:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 8006efe:	0409      	lsls	r1, r1, #16
 8006f00:	d403      	bmi.n	8006f0a <HAL_PWREx_ControlVoltageScaling+0x72>
 8006f02:	2b00      	cmp	r3, #0
 8006f04:	d0f3      	beq.n	8006eee <HAL_PWREx_ControlVoltageScaling+0x56>
      timeout--;
 8006f06:	3b01      	subs	r3, #1
 8006f08:	e7f8      	b.n	8006efc <HAL_PWREx_ControlVoltageScaling+0x64>
  if (timeout == 0U)
 8006f0a:	2b00      	cmp	r3, #0
 8006f0c:	d1d1      	bne.n	8006eb2 <HAL_PWREx_ControlVoltageScaling+0x1a>
 8006f0e:	e7ee      	b.n	8006eee <HAL_PWREx_ControlVoltageScaling+0x56>
 8006f10:	46020800 	.word	0x46020800
 8006f14:	20000048 	.word	0x20000048

08006f18 <HAL_PWREx_GetVoltageRange>:
  * @brief  Return Voltage Scaling Range.
  * @retval Applied voltage scaling value.
  */
uint32_t HAL_PWREx_GetVoltageRange(void)
{
  return (PWR->SVMSR & PWR_SVMSR_ACTVOS);
 8006f18:	4b02      	ldr	r3, [pc, #8]	@ (8006f24 <HAL_PWREx_GetVoltageRange+0xc>)
 8006f1a:	6bd8      	ldr	r0, [r3, #60]	@ 0x3c
}
 8006f1c:	f400 3040 	and.w	r0, r0, #196608	@ 0x30000
 8006f20:	4770      	bx	lr
 8006f22:	bf00      	nop
 8006f24:	46020800 	.word	0x46020800

08006f28 <HAL_PWREx_ConfigSupply>:

  /* Check the parameter */
  assert_param(IS_PWR_SUPPLY(SupplySource));

  /* Set maximum time out */
  timeout = ((PWR_FLAG_SETTING_DELAY * (SystemCoreClock / 1000U)) / 1000U) + 1U;
 8006f28:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8006f2c:	4b12      	ldr	r3, [pc, #72]	@ (8006f78 <HAL_PWREx_ConfigSupply+0x50>)
 8006f2e:	2132      	movs	r1, #50	@ 0x32
 8006f30:	681b      	ldr	r3, [r3, #0]
 8006f32:	fbb3 f3f2 	udiv	r3, r3, r2
 8006f36:	434b      	muls	r3, r1
 8006f38:	fbb3 f3f2 	udiv	r3, r3, r2
 8006f3c:	4a0f      	ldr	r2, [pc, #60]	@ (8006f7c <HAL_PWREx_ConfigSupply+0x54>)
 8006f3e:	3301      	adds	r3, #1

  /* Configure the LDO as system regulator supply */
  if (SupplySource == PWR_LDO_SUPPLY)
  {
    /* Set the power supply configuration */
    CLEAR_BIT(PWR->CR3, PWR_CR3_REGSEL);
 8006f40:	6891      	ldr	r1, [r2, #8]
  if (SupplySource == PWR_LDO_SUPPLY)
 8006f42:	b950      	cbnz	r0, 8006f5a <HAL_PWREx_ConfigSupply+0x32>
    CLEAR_BIT(PWR->CR3, PWR_CR3_REGSEL);
 8006f44:	f021 0102 	bic.w	r1, r1, #2
 8006f48:	6091      	str	r1, [r2, #8]

    /* Wait until system switch on new regulator */
    while (HAL_IS_BIT_SET(PWR->SVMSR, PWR_SVMSR_REGS) && (timeout != 0U))
 8006f4a:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 8006f4c:	0788      	lsls	r0, r1, #30
 8006f4e:	d50e      	bpl.n	8006f6e <HAL_PWREx_ConfigSupply+0x46>
 8006f50:	b90b      	cbnz	r3, 8006f56 <HAL_PWREx_ConfigSupply+0x2e>
  }

  /* Check time out */
  if (timeout == 0U)
  {
    return HAL_TIMEOUT;
 8006f52:	2003      	movs	r0, #3
 8006f54:	4770      	bx	lr
      timeout--;
 8006f56:	3b01      	subs	r3, #1
 8006f58:	e7f7      	b.n	8006f4a <HAL_PWREx_ConfigSupply+0x22>
    SET_BIT(PWR->CR3, PWR_CR3_REGSEL);
 8006f5a:	f041 0102 	orr.w	r1, r1, #2
 8006f5e:	6091      	str	r1, [r2, #8]
    while (HAL_IS_BIT_CLR(PWR->SVMSR, PWR_SVMSR_REGS) && (timeout != 0U))
 8006f60:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 8006f62:	0789      	lsls	r1, r1, #30
 8006f64:	d403      	bmi.n	8006f6e <HAL_PWREx_ConfigSupply+0x46>
 8006f66:	2b00      	cmp	r3, #0
 8006f68:	d0f3      	beq.n	8006f52 <HAL_PWREx_ConfigSupply+0x2a>
      timeout--;
 8006f6a:	3b01      	subs	r3, #1
 8006f6c:	e7f8      	b.n	8006f60 <HAL_PWREx_ConfigSupply+0x38>
  if (timeout == 0U)
 8006f6e:	2b00      	cmp	r3, #0
 8006f70:	d0ef      	beq.n	8006f52 <HAL_PWREx_ConfigSupply+0x2a>
  }

  return HAL_OK;
 8006f72:	2000      	movs	r0, #0
}
 8006f74:	4770      	bx	lr
 8006f76:	bf00      	nop
 8006f78:	20000048 	.word	0x20000048
 8006f7c:	46020800 	.word	0x46020800

08006f80 <HAL_PWREx_DisableUCPDDeadBattery>:
  *         initialized before doing the disable).
  * @retval None.
  */
void HAL_PWREx_DisableUCPDDeadBattery(void)
{
  SET_BIT(PWR->UCPDR, PWR_UCPDR_UCPD_DBDIS);
 8006f80:	4a02      	ldr	r2, [pc, #8]	@ (8006f8c <HAL_PWREx_DisableUCPDDeadBattery+0xc>)
 8006f82:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
 8006f84:	f043 0301 	orr.w	r3, r3, #1
 8006f88:	62d3      	str	r3, [r2, #44]	@ 0x2c
}
 8006f8a:	4770      	bx	lr
 8006f8c:	46020800 	.word	0x46020800

08006f90 <RCC_SetFlashLatencyFromMSIRange>:
            voltage range.
  * @param  msirange  MSI range value from RCC_MSIRANGE_0 to RCC_MSIRANGE_15
  * @retval HAL status
  */
static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange)
{
 8006f90:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t vos;
  uint32_t latency;  /* default value 0WS */

  if (__HAL_RCC_PWR_IS_CLK_ENABLED())
 8006f92:	4d2b      	ldr	r5, [pc, #172]	@ (8007040 <RCC_SetFlashLatencyFromMSIRange+0xb0>)
{
 8006f94:	4604      	mov	r4, r0
  if (__HAL_RCC_PWR_IS_CLK_ENABLED())
 8006f96:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8006f9a:	075b      	lsls	r3, r3, #29
 8006f9c:	d518      	bpl.n	8006fd0 <RCC_SetFlashLatencyFromMSIRange+0x40>
  {
    vos = HAL_PWREx_GetVoltageRange();
 8006f9e:	f7ff ffbb 	bl	8006f18 <HAL_PWREx_GetVoltageRange>
    __HAL_RCC_PWR_CLK_ENABLE();
    vos = HAL_PWREx_GetVoltageRange();
    __HAL_RCC_PWR_CLK_DISABLE();
  }

  if ((vos == PWR_REGULATOR_VOLTAGE_SCALE1) || (vos == PWR_REGULATOR_VOLTAGE_SCALE2))
 8006fa2:	f420 3380 	bic.w	r3, r0, #65536	@ 0x10000
 8006fa6:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8006faa:	d126      	bne.n	8006ffa <RCC_SetFlashLatencyFromMSIRange+0x6a>
  {

    if (msirange < RCC_MSIRANGE_1)
 8006fac:	f1b4 5f80 	cmp.w	r4, #268435456	@ 0x10000000
 8006fb0:	bf2c      	ite	cs
 8006fb2:	2000      	movcs	r0, #0
 8006fb4:	2001      	movcc	r0, #1
        }
      }
    }
  }

  __HAL_FLASH_SET_LATENCY(latency);
 8006fb6:	4a23      	ldr	r2, [pc, #140]	@ (8007044 <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 8006fb8:	6813      	ldr	r3, [r2, #0]
 8006fba:	f023 030f 	bic.w	r3, r3, #15
 8006fbe:	4303      	orrs	r3, r0
 8006fc0:	6013      	str	r3, [r2, #0]

  /* Check that the new number of wait states is taken into account to access the Flash
  memory by reading the FLASH_ACR register */
  if ((FLASH->ACR & FLASH_ACR_LATENCY) != latency)
 8006fc2:	6813      	ldr	r3, [r2, #0]
 8006fc4:	f003 030f 	and.w	r3, r3, #15
 8006fc8:	1a18      	subs	r0, r3, r0
 8006fca:	bf18      	it	ne
 8006fcc:	2001      	movne	r0, #1
 8006fce:	e01b      	b.n	8007008 <RCC_SetFlashLatencyFromMSIRange+0x78>
    __HAL_RCC_PWR_CLK_ENABLE();
 8006fd0:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8006fd4:	f043 0304 	orr.w	r3, r3, #4
 8006fd8:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8006fdc:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8006fe0:	f003 0304 	and.w	r3, r3, #4
 8006fe4:	9301      	str	r3, [sp, #4]
 8006fe6:	9b01      	ldr	r3, [sp, #4]
    vos = HAL_PWREx_GetVoltageRange();
 8006fe8:	f7ff ff96 	bl	8006f18 <HAL_PWREx_GetVoltageRange>
    __HAL_RCC_PWR_CLK_DISABLE();
 8006fec:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8006ff0:	f023 0304 	bic.w	r3, r3, #4
 8006ff4:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8006ff8:	e7d3      	b.n	8006fa2 <RCC_SetFlashLatencyFromMSIRange+0x12>
    if (msirange < RCC_MSIRANGE_1)
 8006ffa:	f1b4 5f80 	cmp.w	r4, #268435456	@ 0x10000000
 8006ffe:	d205      	bcs.n	800700c <RCC_SetFlashLatencyFromMSIRange+0x7c>
      if (vos == PWR_REGULATOR_VOLTAGE_SCALE3)
 8007000:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8007004:	d015      	beq.n	8007032 <RCC_SetFlashLatencyFromMSIRange+0xa2>
        return HAL_ERROR;
 8007006:	2001      	movs	r0, #1
  {
    return HAL_ERROR;
  }

  return HAL_OK;
}
 8007008:	b003      	add	sp, #12
 800700a:	bd30      	pop	{r4, r5, pc}
      if (msirange > RCC_MSIRANGE_2)
 800700c:	f1b4 5f00 	cmp.w	r4, #536870912	@ 0x20000000
 8007010:	d906      	bls.n	8007020 <RCC_SetFlashLatencyFromMSIRange+0x90>
        if (vos == PWR_REGULATOR_VOLTAGE_SCALE4)
 8007012:	b980      	cbnz	r0, 8007036 <RCC_SetFlashLatencyFromMSIRange+0xa6>
          if (msirange > RCC_MSIRANGE_3)
 8007014:	f1b4 5f40 	cmp.w	r4, #805306368	@ 0x30000000
 8007018:	bf8c      	ite	hi
 800701a:	2000      	movhi	r0, #0
 800701c:	2001      	movls	r0, #1
 800701e:	e7ca      	b.n	8006fb6 <RCC_SetFlashLatencyFromMSIRange+0x26>
        if (msirange == RCC_MSIRANGE_1)
 8007020:	f1b4 5f80 	cmp.w	r4, #268435456	@ 0x10000000
 8007024:	d109      	bne.n	800703a <RCC_SetFlashLatencyFromMSIRange+0xaa>
          latency = FLASH_LATENCY_1; /* 1WS */
 8007026:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 800702a:	bf14      	ite	ne
 800702c:	2002      	movne	r0, #2
 800702e:	2001      	moveq	r0, #1
 8007030:	e7c1      	b.n	8006fb6 <RCC_SetFlashLatencyFromMSIRange+0x26>
        latency = FLASH_LATENCY_3; /* 3WS */
 8007032:	2003      	movs	r0, #3
 8007034:	e7bf      	b.n	8006fb6 <RCC_SetFlashLatencyFromMSIRange+0x26>
      latency = FLASH_LATENCY_0; /* 0WS */
 8007036:	2000      	movs	r0, #0
 8007038:	e7bd      	b.n	8006fb6 <RCC_SetFlashLatencyFromMSIRange+0x26>
          latency = FLASH_LATENCY_1; /* 1WS */
 800703a:	2001      	movs	r0, #1
 800703c:	e7bb      	b.n	8006fb6 <RCC_SetFlashLatencyFromMSIRange+0x26>
 800703e:	bf00      	nop
 8007040:	46020c00 	.word	0x46020c00
 8007044:	40022000 	.word	0x40022000

08007048 <HAL_RCC_GetSysClockFreq>:
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8007048:	4a40      	ldr	r2, [pc, #256]	@ (800714c <HAL_RCC_GetSysClockFreq+0x104>)
{
 800704a:	b510      	push	{r4, lr}
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 800704c:	69d3      	ldr	r3, [r2, #28]
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 800704e:	6a91      	ldr	r1, [r2, #40]	@ 0x28
  if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI) ||
 8007050:	f013 030c 	ands.w	r3, r3, #12
 8007054:	d005      	beq.n	8007062 <HAL_RCC_GetSysClockFreq+0x1a>
 8007056:	2b0c      	cmp	r3, #12
 8007058:	d148      	bne.n	80070ec <HAL_RCC_GetSysClockFreq+0xa4>
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 800705a:	f001 0103 	and.w	r1, r1, #3
      ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 800705e:	2901      	cmp	r1, #1
 8007060:	d144      	bne.n	80070ec <HAL_RCC_GetSysClockFreq+0xa4>
    if (READ_BIT(RCC->ICSCR1, RCC_ICSCR1_MSIRGSEL) == 0U)
 8007062:	6891      	ldr	r1, [r2, #8]
 8007064:	0209      	lsls	r1, r1, #8
      msirange = (RCC->CSR & RCC_CSR_MSISSRANGE) >> RCC_CSR_MSISSRANGE_Pos;
 8007066:	bf54      	ite	pl
 8007068:	f8d2 20f4 	ldrpl.w	r2, [r2, #244]	@ 0xf4
      msirange = (RCC->ICSCR1 & RCC_ICSCR1_MSISRANGE) >> RCC_ICSCR1_MSISRANGE_Pos;
 800706c:	6892      	ldrmi	r2, [r2, #8]
    msirange = MSIRangeTable[msirange];
 800706e:	4938      	ldr	r1, [pc, #224]	@ (8007150 <HAL_RCC_GetSysClockFreq+0x108>)
      msirange = (RCC->CSR & RCC_CSR_MSISSRANGE) >> RCC_CSR_MSISSRANGE_Pos;
 8007070:	bf54      	ite	pl
 8007072:	f3c2 3203 	ubfxpl	r2, r2, #12, #4
      msirange = (RCC->ICSCR1 & RCC_ICSCR1_MSISRANGE) >> RCC_ICSCR1_MSISRANGE_Pos;
 8007076:	0f12      	lsrmi	r2, r2, #28
    msirange = MSIRangeTable[msirange];
 8007078:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
    if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 800707c:	2b00      	cmp	r3, #0
 800707e:	d063      	beq.n	8007148 <HAL_RCC_GetSysClockFreq+0x100>
  uint32_t sysclockfreq = 0U;
 8007080:	2000      	movs	r0, #0
  if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8007082:	2b0c      	cmp	r3, #12
 8007084:	d15e      	bne.n	8007144 <HAL_RCC_GetSysClockFreq+0xfc>
    pllsource = (RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1SRC);
 8007086:	4931      	ldr	r1, [pc, #196]	@ (800714c <HAL_RCC_GetSysClockFreq+0x104>)
 8007088:	eddf 5a32 	vldr	s11, [pc, #200]	@ 8007154 <HAL_RCC_GetSysClockFreq+0x10c>
 800708c:	6a88      	ldr	r0, [r1, #40]	@ 0x28
    pllm = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1M) >> RCC_PLL1CFGR_PLL1M_Pos) + 1U;
 800708e:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
    pllfracen = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1FRACEN) >> RCC_PLL1CFGR_PLL1FRACEN_Pos);
 8007090:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
    pllm = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1M) >> RCC_PLL1CFGR_PLL1M_Pos) + 1U;
 8007092:	f3c3 2303 	ubfx	r3, r3, #8, #4
 8007096:	3301      	adds	r3, #1
 8007098:	ee07 3a90 	vmov	s15, r3
    fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> \
 800709c:	6b8b      	ldr	r3, [r1, #56]	@ 0x38
    pllfracen = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1FRACEN) >> RCC_PLL1CFGR_PLL1FRACEN_Pos);
 800709e:	f3c4 1400 	ubfx	r4, r4, #4, #1
    fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> \
 80070a2:	f3c3 03cc 	ubfx	r3, r3, #3, #13
 80070a6:	4363      	muls	r3, r4
 80070a8:	ee07 3a10 	vmov	s14, r3
    pllsource = (RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1SRC);
 80070ac:	f000 0003 	and.w	r0, r0, #3
    switch (pllsource)
 80070b0:	2802      	cmp	r0, #2
    fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> \
 80070b2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
    switch (pllsource)
 80070b6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80070ba:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 80070be:	d021      	beq.n	8007104 <HAL_RCC_GetSysClockFreq+0xbc>
 80070c0:	2803      	cmp	r0, #3
 80070c2:	d01f      	beq.n	8007104 <HAL_RCC_GetSysClockFreq+0xbc>
        pllvco = ((float_t) msirange / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 80070c4:	ee06 2a90 	vmov	s13, r2
 80070c8:	eef8 6a66 	vcvt.f32.u32	s13, s13
 80070cc:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 80070ce:	ee86 5aa7 	vdiv.f32	s10, s13, s15
 80070d2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80070d6:	ee07 3a90 	vmov	s15, r3
 80070da:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80070de:	eee7 7a25 	vfma.f32	s15, s14, s11
                                                         (fracn1 / (float_t)0x2000) + (float_t)1U);
 80070e2:	ee77 7a86 	vadd.f32	s15, s15, s12
        pllvco = ((float_t) msirange / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 80070e6:	ee67 7a85 	vmul.f32	s15, s15, s10
        break;
 80070ea:	e01c      	b.n	8007126 <HAL_RCC_GetSysClockFreq+0xde>
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 80070ec:	69d2      	ldr	r2, [r2, #28]
 80070ee:	f002 020c 	and.w	r2, r2, #12
 80070f2:	2a04      	cmp	r2, #4
 80070f4:	d004      	beq.n	8007100 <HAL_RCC_GetSysClockFreq+0xb8>
  else if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE)
 80070f6:	2b08      	cmp	r3, #8
 80070f8:	d025      	beq.n	8007146 <HAL_RCC_GetSysClockFreq+0xfe>
  uint32_t sysclockfreq = 0U;
 80070fa:	2000      	movs	r0, #0
  uint32_t msirange = 0U;
 80070fc:	2200      	movs	r2, #0
 80070fe:	e7c0      	b.n	8007082 <HAL_RCC_GetSysClockFreq+0x3a>
    sysclockfreq = HSI_VALUE;
 8007100:	4815      	ldr	r0, [pc, #84]	@ (8007158 <HAL_RCC_GetSysClockFreq+0x110>)
 8007102:	e7fb      	b.n	80070fc <HAL_RCC_GetSysClockFreq+0xb4>
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8007104:	ed9f 5a15 	vldr	s10, [pc, #84]	@ 800715c <HAL_RCC_GetSysClockFreq+0x114>
 8007108:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 800710a:	eec5 6a27 	vdiv.f32	s13, s10, s15
 800710e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007112:	ee07 3a90 	vmov	s15, r3
 8007116:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800711a:	eee7 7a25 	vfma.f32	s15, s14, s11
                                                         (fracn1 / (float_t)0x2000) + (float_t)1U);
 800711e:	ee77 7a86 	vadd.f32	s15, s15, s12
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8007122:	ee67 7aa6 	vmul.f32	s15, s15, s13
    pllr = (((RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) + 1U);
 8007126:	4b09      	ldr	r3, [pc, #36]	@ (800714c <HAL_RCC_GetSysClockFreq+0x104>)
 8007128:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800712a:	f3c3 6306 	ubfx	r3, r3, #24, #7
 800712e:	3301      	adds	r3, #1
    sysclockfreq = (uint32_t)(float_t)((float_t)pllvco / (float_t)pllr);
 8007130:	ee07 3a10 	vmov	s14, r3
 8007134:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007138:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800713c:	eefc 7ac7 	vcvt.u32.f32	s15, s14
 8007140:	ee17 0a90 	vmov	r0, s15
}
 8007144:	bd10      	pop	{r4, pc}
    sysclockfreq = HSE_VALUE;
 8007146:	4a04      	ldr	r2, [pc, #16]	@ (8007158 <HAL_RCC_GetSysClockFreq+0x110>)
  uint32_t msirange = 0U;
 8007148:	4610      	mov	r0, r2
 800714a:	e7fb      	b.n	8007144 <HAL_RCC_GetSysClockFreq+0xfc>
 800714c:	46020c00 	.word	0x46020c00
 8007150:	0802700c 	.word	0x0802700c
 8007154:	39000000 	.word	0x39000000
 8007158:	00f42400 	.word	0x00f42400
 800715c:	4b742400 	.word	0x4b742400

08007160 <HAL_RCC_ClockConfig>:
{
 8007160:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007164:	460d      	mov	r5, r1
  if (pRCC_ClkInitStruct == NULL)
 8007166:	4604      	mov	r4, r0
 8007168:	b918      	cbnz	r0, 8007172 <HAL_RCC_ClockConfig+0x12>
    return HAL_ERROR;
 800716a:	2001      	movs	r0, #1
}
 800716c:	b002      	add	sp, #8
 800716e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8007172:	4a9c      	ldr	r2, [pc, #624]	@ (80073e4 <HAL_RCC_ClockConfig+0x284>)
 8007174:	6813      	ldr	r3, [r2, #0]
 8007176:	f003 030f 	and.w	r3, r3, #15
 800717a:	428b      	cmp	r3, r1
 800717c:	d36e      	bcc.n	800725c <HAL_RCC_ClockConfig+0xfc>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK3) == RCC_CLOCKTYPE_PCLK3)
 800717e:	6823      	ldr	r3, [r4, #0]
 8007180:	06d8      	lsls	r0, r3, #27
 8007182:	d477      	bmi.n	8007274 <HAL_RCC_ClockConfig+0x114>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007184:	0719      	lsls	r1, r3, #28
 8007186:	d50d      	bpl.n	80071a4 <HAL_RCC_ClockConfig+0x44>
    if ((pRCC_ClkInitStruct->APB2CLKDivider) > ((RCC->CFGR2 & RCC_CFGR2_PPRE2) >> 4))
 8007188:	4997      	ldr	r1, [pc, #604]	@ (80073e8 <HAL_RCC_ClockConfig+0x288>)
 800718a:	6920      	ldr	r0, [r4, #16]
 800718c:	6a0a      	ldr	r2, [r1, #32]
 800718e:	0912      	lsrs	r2, r2, #4
 8007190:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 8007194:	4290      	cmp	r0, r2
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE2, ((pRCC_ClkInitStruct->APB2CLKDivider) << 4));
 8007196:	bf81      	itttt	hi
 8007198:	6a0a      	ldrhi	r2, [r1, #32]
 800719a:	f422 62e0 	bichi.w	r2, r2, #1792	@ 0x700
 800719e:	ea42 1200 	orrhi.w	r2, r2, r0, lsl #4
 80071a2:	620a      	strhi	r2, [r1, #32]
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80071a4:	075a      	lsls	r2, r3, #29
 80071a6:	d50b      	bpl.n	80071c0 <HAL_RCC_ClockConfig+0x60>
    if ((pRCC_ClkInitStruct->APB1CLKDivider) > (RCC->CFGR2 & RCC_CFGR2_PPRE1))
 80071a8:	498f      	ldr	r1, [pc, #572]	@ (80073e8 <HAL_RCC_ClockConfig+0x288>)
 80071aa:	68e0      	ldr	r0, [r4, #12]
 80071ac:	6a0a      	ldr	r2, [r1, #32]
 80071ae:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 80071b2:	4290      	cmp	r0, r2
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE1, pRCC_ClkInitStruct->APB1CLKDivider);
 80071b4:	bf81      	itttt	hi
 80071b6:	6a0a      	ldrhi	r2, [r1, #32]
 80071b8:	f022 0270 	bichi.w	r2, r2, #112	@ 0x70
 80071bc:	4302      	orrhi	r2, r0
 80071be:	620a      	strhi	r2, [r1, #32]
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80071c0:	079f      	lsls	r7, r3, #30
 80071c2:	d50b      	bpl.n	80071dc <HAL_RCC_ClockConfig+0x7c>
    if ((pRCC_ClkInitStruct->AHBCLKDivider) > (RCC->CFGR2 & RCC_CFGR2_HPRE))
 80071c4:	4988      	ldr	r1, [pc, #544]	@ (80073e8 <HAL_RCC_ClockConfig+0x288>)
 80071c6:	68a0      	ldr	r0, [r4, #8]
 80071c8:	6a0a      	ldr	r2, [r1, #32]
 80071ca:	f002 020f 	and.w	r2, r2, #15
 80071ce:	4290      	cmp	r0, r2
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_HPRE, pRCC_ClkInitStruct->AHBCLKDivider);
 80071d0:	bf81      	itttt	hi
 80071d2:	6a0a      	ldrhi	r2, [r1, #32]
 80071d4:	f022 020f 	bichi.w	r2, r2, #15
 80071d8:	4302      	orrhi	r2, r0
 80071da:	620a      	strhi	r2, [r1, #32]
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80071dc:	07de      	lsls	r6, r3, #31
 80071de:	d456      	bmi.n	800728e <HAL_RCC_ClockConfig+0x12e>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80071e0:	6822      	ldr	r2, [r4, #0]
 80071e2:	0790      	lsls	r0, r2, #30
 80071e4:	f100 80d8 	bmi.w	8007398 <HAL_RCC_ClockConfig+0x238>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 80071e8:	497e      	ldr	r1, [pc, #504]	@ (80073e4 <HAL_RCC_ClockConfig+0x284>)
 80071ea:	680b      	ldr	r3, [r1, #0]
 80071ec:	f003 030f 	and.w	r3, r3, #15
 80071f0:	42ab      	cmp	r3, r5
 80071f2:	f200 80de 	bhi.w	80073b2 <HAL_RCC_ClockConfig+0x252>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80071f6:	0750      	lsls	r0, r2, #29
 80071f8:	f100 80e7 	bmi.w	80073ca <HAL_RCC_ClockConfig+0x26a>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80071fc:	0711      	lsls	r1, r2, #28
 80071fe:	d50d      	bpl.n	800721c <HAL_RCC_ClockConfig+0xbc>
    if ((pRCC_ClkInitStruct->APB2CLKDivider) < ((RCC->CFGR2 & RCC_CFGR2_PPRE2) >> 4))
 8007200:	4979      	ldr	r1, [pc, #484]	@ (80073e8 <HAL_RCC_ClockConfig+0x288>)
 8007202:	6920      	ldr	r0, [r4, #16]
 8007204:	6a0b      	ldr	r3, [r1, #32]
 8007206:	091b      	lsrs	r3, r3, #4
 8007208:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800720c:	4298      	cmp	r0, r3
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE2, ((pRCC_ClkInitStruct->APB2CLKDivider) << 4));
 800720e:	bf3f      	itttt	cc
 8007210:	6a0b      	ldrcc	r3, [r1, #32]
 8007212:	f423 63e0 	biccc.w	r3, r3, #1792	@ 0x700
 8007216:	ea43 1300 	orrcc.w	r3, r3, r0, lsl #4
 800721a:	620b      	strcc	r3, [r1, #32]
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK3) == RCC_CLOCKTYPE_PCLK3)
 800721c:	06d3      	lsls	r3, r2, #27
 800721e:	d50b      	bpl.n	8007238 <HAL_RCC_ClockConfig+0xd8>
    if ((pRCC_ClkInitStruct->APB3CLKDivider) < (RCC->CFGR3 & RCC_CFGR3_PPRE3))
 8007220:	4a71      	ldr	r2, [pc, #452]	@ (80073e8 <HAL_RCC_ClockConfig+0x288>)
 8007222:	6961      	ldr	r1, [r4, #20]
 8007224:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 8007226:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800722a:	4299      	cmp	r1, r3
      MODIFY_REG(RCC->CFGR3, RCC_CFGR3_PPRE3, (pRCC_ClkInitStruct->APB3CLKDivider));
 800722c:	bf3f      	itttt	cc
 800722e:	6a53      	ldrcc	r3, [r2, #36]	@ 0x24
 8007230:	f023 0370 	biccc.w	r3, r3, #112	@ 0x70
 8007234:	430b      	orrcc	r3, r1
 8007236:	6253      	strcc	r3, [r2, #36]	@ 0x24
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 8007238:	f7ff ff06 	bl	8007048 <HAL_RCC_GetSysClockFreq>
 800723c:	4b6a      	ldr	r3, [pc, #424]	@ (80073e8 <HAL_RCC_ClockConfig+0x288>)
 800723e:	4a6b      	ldr	r2, [pc, #428]	@ (80073ec <HAL_RCC_ClockConfig+0x28c>)
 8007240:	6a1b      	ldr	r3, [r3, #32]
 8007242:	f003 030f 	and.w	r3, r3, #15
 8007246:	5cd3      	ldrb	r3, [r2, r3]
 8007248:	40d8      	lsrs	r0, r3
 800724a:	4b69      	ldr	r3, [pc, #420]	@ (80073f0 <HAL_RCC_ClockConfig+0x290>)
 800724c:	6018      	str	r0, [r3, #0]
  status = HAL_InitTick(uwTickPrio);
 800724e:	4b69      	ldr	r3, [pc, #420]	@ (80073f4 <HAL_RCC_ClockConfig+0x294>)
 8007250:	6818      	ldr	r0, [r3, #0]
}
 8007252:	b002      	add	sp, #8
 8007254:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  status = HAL_InitTick(uwTickPrio);
 8007258:	f7fa b8ac 	b.w	80013b4 <HAL_InitTick>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800725c:	6813      	ldr	r3, [r2, #0]
 800725e:	f023 030f 	bic.w	r3, r3, #15
 8007262:	430b      	orrs	r3, r1
 8007264:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8007266:	6813      	ldr	r3, [r2, #0]
 8007268:	f003 030f 	and.w	r3, r3, #15
 800726c:	428b      	cmp	r3, r1
 800726e:	f47f af7c 	bne.w	800716a <HAL_RCC_ClockConfig+0xa>
 8007272:	e784      	b.n	800717e <HAL_RCC_ClockConfig+0x1e>
    if ((pRCC_ClkInitStruct->APB3CLKDivider) > (RCC->CFGR3 & RCC_CFGR3_PPRE3))
 8007274:	495c      	ldr	r1, [pc, #368]	@ (80073e8 <HAL_RCC_ClockConfig+0x288>)
 8007276:	6960      	ldr	r0, [r4, #20]
 8007278:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 800727a:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 800727e:	4290      	cmp	r0, r2
      MODIFY_REG(RCC->CFGR3, RCC_CFGR3_PPRE3, pRCC_ClkInitStruct->APB3CLKDivider);
 8007280:	bf81      	itttt	hi
 8007282:	6a4a      	ldrhi	r2, [r1, #36]	@ 0x24
 8007284:	f022 0270 	bichi.w	r2, r2, #112	@ 0x70
 8007288:	4302      	orrhi	r2, r0
 800728a:	624a      	strhi	r2, [r1, #36]	@ 0x24
 800728c:	e77a      	b.n	8007184 <HAL_RCC_ClockConfig+0x24>
    if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800728e:	6862      	ldr	r2, [r4, #4]
 8007290:	4b55      	ldr	r3, [pc, #340]	@ (80073e8 <HAL_RCC_ClockConfig+0x288>)
 8007292:	2a03      	cmp	r2, #3
 8007294:	d14e      	bne.n	8007334 <HAL_RCC_ClockConfig+0x1d4>
      if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8007296:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 800729a:	0751      	lsls	r1, r2, #29
 800729c:	d43d      	bmi.n	800731a <HAL_RCC_ClockConfig+0x1ba>
        pwrclkchanged = SET;
 800729e:	2701      	movs	r7, #1
        __HAL_RCC_PWR_CLK_ENABLE();
 80072a0:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 80072a4:	f042 0204 	orr.w	r2, r2, #4
 80072a8:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 80072ac:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80072b0:	f003 0304 	and.w	r3, r3, #4
 80072b4:	9301      	str	r3, [sp, #4]
 80072b6:	9b01      	ldr	r3, [sp, #4]
      tickstart = HAL_GetTick();
 80072b8:	f7fd f89c 	bl	80043f4 <HAL_GetTick>
      if (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN) != 0U)
 80072bc:	f8df 8138 	ldr.w	r8, [pc, #312]	@ 80073f8 <HAL_RCC_ClockConfig+0x298>
      tickstart = HAL_GetTick();
 80072c0:	4606      	mov	r6, r0
      if (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN) != 0U)
 80072c2:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80072c6:	035a      	lsls	r2, r3, #13
 80072c8:	d429      	bmi.n	800731e <HAL_RCC_ClockConfig+0x1be>
      if (pwrclkchanged == SET)
 80072ca:	4b47      	ldr	r3, [pc, #284]	@ (80073e8 <HAL_RCC_ClockConfig+0x288>)
 80072cc:	b12f      	cbz	r7, 80072da <HAL_RCC_ClockConfig+0x17a>
        __HAL_RCC_PWR_CLK_DISABLE();
 80072ce:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 80072d2:	f022 0204 	bic.w	r2, r2, #4
 80072d6:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
      if (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 80072da:	681b      	ldr	r3, [r3, #0]
 80072dc:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
        if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 80072e0:	f43f af43 	beq.w	800716a <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR1, RCC_CFGR1_SW, pRCC_ClkInitStruct->SYSCLKSource);
 80072e4:	4e40      	ldr	r6, [pc, #256]	@ (80073e8 <HAL_RCC_ClockConfig+0x288>)
 80072e6:	6862      	ldr	r2, [r4, #4]
 80072e8:	69f3      	ldr	r3, [r6, #28]
        if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80072ea:	f241 3888 	movw	r8, #5000	@ 0x1388
    MODIFY_REG(RCC->CFGR1, RCC_CFGR1_SW, pRCC_ClkInitStruct->SYSCLKSource);
 80072ee:	f023 0303 	bic.w	r3, r3, #3
 80072f2:	4313      	orrs	r3, r2
 80072f4:	61f3      	str	r3, [r6, #28]
    tickstart = HAL_GetTick();
 80072f6:	f7fd f87d 	bl	80043f4 <HAL_GetTick>
    if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80072fa:	6863      	ldr	r3, [r4, #4]
    tickstart = HAL_GetTick();
 80072fc:	4607      	mov	r7, r0
    if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80072fe:	2b03      	cmp	r3, #3
 8007300:	d125      	bne.n	800734e <HAL_RCC_ClockConfig+0x1ee>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8007302:	69f3      	ldr	r3, [r6, #28]
 8007304:	f003 030c 	and.w	r3, r3, #12
 8007308:	2b0c      	cmp	r3, #12
 800730a:	f43f af69 	beq.w	80071e0 <HAL_RCC_ClockConfig+0x80>
        if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800730e:	f7fd f871 	bl	80043f4 <HAL_GetTick>
 8007312:	1bc0      	subs	r0, r0, r7
 8007314:	4540      	cmp	r0, r8
 8007316:	d9f4      	bls.n	8007302 <HAL_RCC_ClockConfig+0x1a2>
 8007318:	e00a      	b.n	8007330 <HAL_RCC_ClockConfig+0x1d0>
    FlagStatus  pwrclkchanged = RESET;
 800731a:	2700      	movs	r7, #0
 800731c:	e7cc      	b.n	80072b8 <HAL_RCC_ClockConfig+0x158>
        while (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTRDY) == 0U)
 800731e:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8007322:	045b      	lsls	r3, r3, #17
 8007324:	d4d1      	bmi.n	80072ca <HAL_RCC_ClockConfig+0x16a>
          if ((HAL_GetTick() - tickstart) > EPOD_TIMEOUT_VALUE)
 8007326:	f7fd f865 	bl	80043f4 <HAL_GetTick>
 800732a:	1b80      	subs	r0, r0, r6
 800732c:	2802      	cmp	r0, #2
 800732e:	d9f6      	bls.n	800731e <HAL_RCC_ClockConfig+0x1be>
            return HAL_TIMEOUT;
 8007330:	2003      	movs	r0, #3
 8007332:	e71b      	b.n	800716c <HAL_RCC_ClockConfig+0xc>
      if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007334:	2a02      	cmp	r2, #2
        if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8007336:	681b      	ldr	r3, [r3, #0]
      if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007338:	d102      	bne.n	8007340 <HAL_RCC_ClockConfig+0x1e0>
        if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 800733a:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
 800733e:	e7cf      	b.n	80072e0 <HAL_RCC_ClockConfig+0x180>
      else if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 8007340:	b912      	cbnz	r2, 8007348 <HAL_RCC_ClockConfig+0x1e8>
        if (READ_BIT(RCC->CR, RCC_CR_MSISRDY) == 0U)
 8007342:	f013 0f04 	tst.w	r3, #4
 8007346:	e7cb      	b.n	80072e0 <HAL_RCC_ClockConfig+0x180>
        if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8007348:	f413 6f80 	tst.w	r3, #1024	@ 0x400
 800734c:	e7c8      	b.n	80072e0 <HAL_RCC_ClockConfig+0x180>
      if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800734e:	2b02      	cmp	r3, #2
 8007350:	d10b      	bne.n	800736a <HAL_RCC_ClockConfig+0x20a>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 8007352:	69f3      	ldr	r3, [r6, #28]
 8007354:	f003 030c 	and.w	r3, r3, #12
 8007358:	2b08      	cmp	r3, #8
 800735a:	f43f af41 	beq.w	80071e0 <HAL_RCC_ClockConfig+0x80>
          if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800735e:	f7fd f849 	bl	80043f4 <HAL_GetTick>
 8007362:	1bc0      	subs	r0, r0, r7
 8007364:	4540      	cmp	r0, r8
 8007366:	d9f4      	bls.n	8007352 <HAL_RCC_ClockConfig+0x1f2>
 8007368:	e7e2      	b.n	8007330 <HAL_RCC_ClockConfig+0x1d0>
      else if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 800736a:	b97b      	cbnz	r3, 800738c <HAL_RCC_ClockConfig+0x22c>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
 800736c:	69f3      	ldr	r3, [r6, #28]
 800736e:	f013 0f0c 	tst.w	r3, #12
 8007372:	f43f af35 	beq.w	80071e0 <HAL_RCC_ClockConfig+0x80>
          if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007376:	f7fd f83d 	bl	80043f4 <HAL_GetTick>
 800737a:	1bc0      	subs	r0, r0, r7
 800737c:	4540      	cmp	r0, r8
 800737e:	d9f5      	bls.n	800736c <HAL_RCC_ClockConfig+0x20c>
 8007380:	e7d6      	b.n	8007330 <HAL_RCC_ClockConfig+0x1d0>
          if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007382:	f7fd f837 	bl	80043f4 <HAL_GetTick>
 8007386:	1bc0      	subs	r0, r0, r7
 8007388:	4540      	cmp	r0, r8
 800738a:	d8d1      	bhi.n	8007330 <HAL_RCC_ClockConfig+0x1d0>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 800738c:	69f3      	ldr	r3, [r6, #28]
 800738e:	f003 030c 	and.w	r3, r3, #12
 8007392:	2b04      	cmp	r3, #4
 8007394:	d1f5      	bne.n	8007382 <HAL_RCC_ClockConfig+0x222>
 8007396:	e723      	b.n	80071e0 <HAL_RCC_ClockConfig+0x80>
    if ((pRCC_ClkInitStruct->AHBCLKDivider) < (RCC->CFGR2 & RCC_CFGR2_HPRE))
 8007398:	4913      	ldr	r1, [pc, #76]	@ (80073e8 <HAL_RCC_ClockConfig+0x288>)
 800739a:	68a0      	ldr	r0, [r4, #8]
 800739c:	6a0b      	ldr	r3, [r1, #32]
 800739e:	f003 030f 	and.w	r3, r3, #15
 80073a2:	4298      	cmp	r0, r3
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_HPRE, pRCC_ClkInitStruct->AHBCLKDivider);
 80073a4:	bf3f      	itttt	cc
 80073a6:	6a0b      	ldrcc	r3, [r1, #32]
 80073a8:	f023 030f 	biccc.w	r3, r3, #15
 80073ac:	4303      	orrcc	r3, r0
 80073ae:	620b      	strcc	r3, [r1, #32]
 80073b0:	e71a      	b.n	80071e8 <HAL_RCC_ClockConfig+0x88>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80073b2:	680b      	ldr	r3, [r1, #0]
 80073b4:	f023 030f 	bic.w	r3, r3, #15
 80073b8:	432b      	orrs	r3, r5
 80073ba:	600b      	str	r3, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80073bc:	680b      	ldr	r3, [r1, #0]
 80073be:	f003 030f 	and.w	r3, r3, #15
 80073c2:	42ab      	cmp	r3, r5
 80073c4:	f47f aed1 	bne.w	800716a <HAL_RCC_ClockConfig+0xa>
 80073c8:	e715      	b.n	80071f6 <HAL_RCC_ClockConfig+0x96>
    if ((pRCC_ClkInitStruct->APB1CLKDivider) < (RCC->CFGR2 & RCC_CFGR2_PPRE1))
 80073ca:	4907      	ldr	r1, [pc, #28]	@ (80073e8 <HAL_RCC_ClockConfig+0x288>)
 80073cc:	68e0      	ldr	r0, [r4, #12]
 80073ce:	6a0b      	ldr	r3, [r1, #32]
 80073d0:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80073d4:	4298      	cmp	r0, r3
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE1, pRCC_ClkInitStruct->APB1CLKDivider);
 80073d6:	bf3f      	itttt	cc
 80073d8:	6a0b      	ldrcc	r3, [r1, #32]
 80073da:	f023 0370 	biccc.w	r3, r3, #112	@ 0x70
 80073de:	4303      	orrcc	r3, r0
 80073e0:	620b      	strcc	r3, [r1, #32]
 80073e2:	e70b      	b.n	80071fc <HAL_RCC_ClockConfig+0x9c>
 80073e4:	40022000 	.word	0x40022000
 80073e8:	46020c00 	.word	0x46020c00
 80073ec:	08027054 	.word	0x08027054
 80073f0:	20000048 	.word	0x20000048
 80073f4:	20000050 	.word	0x20000050
 80073f8:	46020800 	.word	0x46020800

080073fc <HAL_RCC_GetHCLKFreq>:
{
 80073fc:	b508      	push	{r3, lr}
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 80073fe:	f7ff fe23 	bl	8007048 <HAL_RCC_GetSysClockFreq>
 8007402:	4b05      	ldr	r3, [pc, #20]	@ (8007418 <HAL_RCC_GetHCLKFreq+0x1c>)
 8007404:	4a05      	ldr	r2, [pc, #20]	@ (800741c <HAL_RCC_GetHCLKFreq+0x20>)
 8007406:	6a1b      	ldr	r3, [r3, #32]
 8007408:	f003 030f 	and.w	r3, r3, #15
 800740c:	5cd3      	ldrb	r3, [r2, r3]
 800740e:	40d8      	lsrs	r0, r3
 8007410:	4b03      	ldr	r3, [pc, #12]	@ (8007420 <HAL_RCC_GetHCLKFreq+0x24>)
 8007412:	6018      	str	r0, [r3, #0]
}
 8007414:	bd08      	pop	{r3, pc}
 8007416:	bf00      	nop
 8007418:	46020c00 	.word	0x46020c00
 800741c:	08027054 	.word	0x08027054
 8007420:	20000048 	.word	0x20000048

08007424 <HAL_RCC_OscConfig>:
{
 8007424:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
  if (pRCC_OscInitStruct == NULL)
 8007428:	4604      	mov	r4, r0
 800742a:	2800      	cmp	r0, #0
 800742c:	d039      	beq.n	80074a2 <HAL_RCC_OscConfig+0x7e>
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 800742e:	4ba3      	ldr	r3, [pc, #652]	@ (80076bc <HAL_RCC_OscConfig+0x298>)
 8007430:	69de      	ldr	r6, [r3, #28]
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 8007432:	6a9f      	ldr	r7, [r3, #40]	@ 0x28
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8007434:	6803      	ldr	r3, [r0, #0]
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8007436:	f006 060c 	and.w	r6, r6, #12
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 800743a:	06d8      	lsls	r0, r3, #27
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 800743c:	f007 0703 	and.w	r7, r7, #3
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8007440:	f140 809a 	bpl.w	8007578 <HAL_RCC_OscConfig+0x154>
    if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI) ||
 8007444:	69e3      	ldr	r3, [r4, #28]
 8007446:	b11e      	cbz	r6, 8007450 <HAL_RCC_OscConfig+0x2c>
 8007448:	2e0c      	cmp	r6, #12
 800744a:	d175      	bne.n	8007538 <HAL_RCC_OscConfig+0x114>
        ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_MSI)))
 800744c:	2f01      	cmp	r7, #1
 800744e:	d173      	bne.n	8007538 <HAL_RCC_OscConfig+0x114>
      if (pRCC_OscInitStruct->MSIState == RCC_MSI_OFF)
 8007450:	b33b      	cbz	r3, 80074a2 <HAL_RCC_OscConfig+0x7e>
        if (pRCC_OscInitStruct->MSIClockRange > __HAL_RCC_GET_MSI_RANGE())
 8007452:	4d9a      	ldr	r5, [pc, #616]	@ (80076bc <HAL_RCC_OscConfig+0x298>)
 8007454:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 8007456:	68ab      	ldr	r3, [r5, #8]
 8007458:	0219      	lsls	r1, r3, #8
 800745a:	bf56      	itet	pl
 800745c:	f8d5 30f4 	ldrpl.w	r3, [r5, #244]	@ 0xf4
 8007460:	68ab      	ldrmi	r3, [r5, #8]
 8007462:	041b      	lslpl	r3, r3, #16
 8007464:	f003 4370 	and.w	r3, r3, #4026531840	@ 0xf0000000
 8007468:	4298      	cmp	r0, r3
 800746a:	d938      	bls.n	80074de <HAL_RCC_OscConfig+0xba>
          if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 800746c:	b1ae      	cbz	r6, 800749a <HAL_RCC_OscConfig+0x76>
          __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 800746e:	68ab      	ldr	r3, [r5, #8]
 8007470:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8007474:	60ab      	str	r3, [r5, #8]
 8007476:	68ab      	ldr	r3, [r5, #8]
 8007478:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800747a:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 800747e:	430b      	orrs	r3, r1
 8007480:	60ab      	str	r3, [r5, #8]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8007482:	f1b1 4f40 	cmp.w	r1, #3221225472	@ 0xc0000000
 8007486:	6a22      	ldr	r2, [r4, #32]
 8007488:	d20d      	bcs.n	80074a6 <HAL_RCC_OscConfig+0x82>
 800748a:	2900      	cmp	r1, #0
 800748c:	68eb      	ldr	r3, [r5, #12]
 800748e:	da1a      	bge.n	80074c6 <HAL_RCC_OscConfig+0xa2>
 8007490:	f423 7378 	bic.w	r3, r3, #992	@ 0x3e0
 8007494:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8007498:	e009      	b.n	80074ae <HAL_RCC_OscConfig+0x8a>
            if (RCC_SetFlashLatencyFromMSIRange(pRCC_OscInitStruct->MSIClockRange) != HAL_OK)
 800749a:	f7ff fd79 	bl	8006f90 <RCC_SetFlashLatencyFromMSIRange>
 800749e:	2800      	cmp	r0, #0
 80074a0:	d0e5      	beq.n	800746e <HAL_RCC_OscConfig+0x4a>
    return HAL_ERROR;
 80074a2:	2001      	movs	r0, #1
 80074a4:	e00c      	b.n	80074c0 <HAL_RCC_OscConfig+0x9c>
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 80074a6:	68eb      	ldr	r3, [r5, #12]
 80074a8:	f023 031f 	bic.w	r3, r3, #31
 80074ac:	4313      	orrs	r3, r2
 80074ae:	60eb      	str	r3, [r5, #12]
        (void) HAL_RCC_GetHCLKFreq();
 80074b0:	f7ff ffa4 	bl	80073fc <HAL_RCC_GetHCLKFreq>
        status = HAL_InitTick(uwTickPrio);
 80074b4:	4b82      	ldr	r3, [pc, #520]	@ (80076c0 <HAL_RCC_OscConfig+0x29c>)
 80074b6:	6818      	ldr	r0, [r3, #0]
 80074b8:	f7f9 ff7c 	bl	80013b4 <HAL_InitTick>
        if (status != HAL_OK)
 80074bc:	2800      	cmp	r0, #0
 80074be:	d05b      	beq.n	8007578 <HAL_RCC_OscConfig+0x154>
}
 80074c0:	b004      	add	sp, #16
 80074c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 80074c6:	f1b1 4f80 	cmp.w	r1, #1073741824	@ 0x40000000
 80074ca:	bf2b      	itete	cs
 80074cc:	f423 43f8 	biccs.w	r3, r3, #31744	@ 0x7c00
 80074d0:	f423 2378 	biccc.w	r3, r3, #1015808	@ 0xf8000
 80074d4:	ea43 2382 	orrcs.w	r3, r3, r2, lsl #10
 80074d8:	ea43 33c2 	orrcc.w	r3, r3, r2, lsl #15
 80074dc:	e7e7      	b.n	80074ae <HAL_RCC_OscConfig+0x8a>
          __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 80074de:	68ab      	ldr	r3, [r5, #8]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 80074e0:	f1b0 4f40 	cmp.w	r0, #3221225472	@ 0xc0000000
          __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 80074e4:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80074e8:	60ab      	str	r3, [r5, #8]
 80074ea:	68ab      	ldr	r3, [r5, #8]
 80074ec:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 80074f0:	ea43 0300 	orr.w	r3, r3, r0
 80074f4:	60ab      	str	r3, [r5, #8]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 80074f6:	6a22      	ldr	r2, [r4, #32]
 80074f8:	68eb      	ldr	r3, [r5, #12]
 80074fa:	d30a      	bcc.n	8007512 <HAL_RCC_OscConfig+0xee>
 80074fc:	f023 031f 	bic.w	r3, r3, #31
 8007500:	4313      	orrs	r3, r2
 8007502:	60eb      	str	r3, [r5, #12]
          if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 8007504:	2e00      	cmp	r6, #0
 8007506:	d1d3      	bne.n	80074b0 <HAL_RCC_OscConfig+0x8c>
            if (RCC_SetFlashLatencyFromMSIRange(pRCC_OscInitStruct->MSIClockRange) != HAL_OK)
 8007508:	f7ff fd42 	bl	8006f90 <RCC_SetFlashLatencyFromMSIRange>
 800750c:	2800      	cmp	r0, #0
 800750e:	d0cf      	beq.n	80074b0 <HAL_RCC_OscConfig+0x8c>
 8007510:	e7c7      	b.n	80074a2 <HAL_RCC_OscConfig+0x7e>
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8007512:	2800      	cmp	r0, #0
 8007514:	da04      	bge.n	8007520 <HAL_RCC_OscConfig+0xfc>
 8007516:	f423 7378 	bic.w	r3, r3, #992	@ 0x3e0
 800751a:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800751e:	e7f0      	b.n	8007502 <HAL_RCC_OscConfig+0xde>
 8007520:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8007524:	bf2b      	itete	cs
 8007526:	f423 43f8 	biccs.w	r3, r3, #31744	@ 0x7c00
 800752a:	f423 2378 	biccc.w	r3, r3, #1015808	@ 0xf8000
 800752e:	ea43 2382 	orrcs.w	r3, r3, r2, lsl #10
 8007532:	ea43 33c2 	orrcc.w	r3, r3, r2, lsl #15
 8007536:	e7e4      	b.n	8007502 <HAL_RCC_OscConfig+0xde>
      if (pRCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 8007538:	4d60      	ldr	r5, [pc, #384]	@ (80076bc <HAL_RCC_OscConfig+0x298>)
 800753a:	2b00      	cmp	r3, #0
 800753c:	d074      	beq.n	8007628 <HAL_RCC_OscConfig+0x204>
        __HAL_RCC_MSI_ENABLE();
 800753e:	682b      	ldr	r3, [r5, #0]
 8007540:	f043 0301 	orr.w	r3, r3, #1
 8007544:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8007546:	f7fc ff55 	bl	80043f4 <HAL_GetTick>
 800754a:	4680      	mov	r8, r0
        while (READ_BIT(RCC->CR, RCC_CR_MSISRDY) == 0U)
 800754c:	682b      	ldr	r3, [r5, #0]
 800754e:	075a      	lsls	r2, r3, #29
 8007550:	d54e      	bpl.n	80075f0 <HAL_RCC_OscConfig+0x1cc>
        __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 8007552:	68ab      	ldr	r3, [r5, #8]
 8007554:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8007558:	60ab      	str	r3, [r5, #8]
 800755a:	68ab      	ldr	r3, [r5, #8]
 800755c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800755e:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8007562:	430b      	orrs	r3, r1
 8007564:	60ab      	str	r3, [r5, #8]
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8007566:	f1b1 4f40 	cmp.w	r1, #3221225472	@ 0xc0000000
 800756a:	6a22      	ldr	r2, [r4, #32]
 800756c:	68eb      	ldr	r3, [r5, #12]
 800756e:	d347      	bcc.n	8007600 <HAL_RCC_OscConfig+0x1dc>
 8007570:	f023 031f 	bic.w	r3, r3, #31
 8007574:	4313      	orrs	r3, r2
 8007576:	60eb      	str	r3, [r5, #12]
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8007578:	6823      	ldr	r3, [r4, #0]
 800757a:	07dd      	lsls	r5, r3, #31
 800757c:	d465      	bmi.n	800764a <HAL_RCC_OscConfig+0x226>
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800757e:	6823      	ldr	r3, [r4, #0]
 8007580:	0798      	lsls	r0, r3, #30
 8007582:	f100 80bd 	bmi.w	8007700 <HAL_RCC_OscConfig+0x2dc>
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8007586:	6823      	ldr	r3, [r4, #0]
 8007588:	0718      	lsls	r0, r3, #28
 800758a:	f140 8138 	bpl.w	80077fe <HAL_RCC_OscConfig+0x3da>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 800758e:	4b4b      	ldr	r3, [pc, #300]	@ (80076bc <HAL_RCC_OscConfig+0x298>)
 8007590:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8007594:	0751      	lsls	r1, r2, #29
 8007596:	f100 80f1 	bmi.w	800777c <HAL_RCC_OscConfig+0x358>
      pwrclkchanged = SET;
 800759a:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 800759c:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 80075a0:	f042 0204 	orr.w	r2, r2, #4
 80075a4:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 80075a8:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80075ac:	f003 0304 	and.w	r3, r3, #4
 80075b0:	9301      	str	r3, [sp, #4]
 80075b2:	9b01      	ldr	r3, [sp, #4]
    if (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 80075b4:	4d43      	ldr	r5, [pc, #268]	@ (80076c4 <HAL_RCC_OscConfig+0x2a0>)
 80075b6:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 80075b8:	07da      	lsls	r2, r3, #31
 80075ba:	f140 80e1 	bpl.w	8007780 <HAL_RCC_OscConfig+0x35c>
    if (pRCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 80075be:	6963      	ldr	r3, [r4, #20]
 80075c0:	4d3e      	ldr	r5, [pc, #248]	@ (80076bc <HAL_RCC_OscConfig+0x298>)
 80075c2:	2b00      	cmp	r3, #0
 80075c4:	f040 80ed 	bne.w	80077a2 <HAL_RCC_OscConfig+0x37e>
      __HAL_RCC_LSI_DISABLE();
 80075c8:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 80075cc:	f023 53a0 	bic.w	r3, r3, #335544320	@ 0x14000000
 80075d0:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
      tickstart = HAL_GetTick();
 80075d4:	f7fc ff0e 	bl	80043f4 <HAL_GetTick>
 80075d8:	4606      	mov	r6, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) != 0U)
 80075da:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 80075de:	011b      	lsls	r3, r3, #4
 80075e0:	f140 8105 	bpl.w	80077ee <HAL_RCC_OscConfig+0x3ca>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80075e4:	f7fc ff06 	bl	80043f4 <HAL_GetTick>
 80075e8:	1b80      	subs	r0, r0, r6
 80075ea:	2805      	cmp	r0, #5
 80075ec:	d9f5      	bls.n	80075da <HAL_RCC_OscConfig+0x1b6>
 80075ee:	e005      	b.n	80075fc <HAL_RCC_OscConfig+0x1d8>
          if ((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 80075f0:	f7fc ff00 	bl	80043f4 <HAL_GetTick>
 80075f4:	eba0 0008 	sub.w	r0, r0, r8
 80075f8:	2802      	cmp	r0, #2
 80075fa:	d9a7      	bls.n	800754c <HAL_RCC_OscConfig+0x128>
            return HAL_TIMEOUT;
 80075fc:	2003      	movs	r0, #3
 80075fe:	e75f      	b.n	80074c0 <HAL_RCC_OscConfig+0x9c>
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8007600:	2900      	cmp	r1, #0
 8007602:	da04      	bge.n	800760e <HAL_RCC_OscConfig+0x1ea>
 8007604:	f423 7378 	bic.w	r3, r3, #992	@ 0x3e0
 8007608:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800760c:	e7b3      	b.n	8007576 <HAL_RCC_OscConfig+0x152>
 800760e:	f1b1 4f80 	cmp.w	r1, #1073741824	@ 0x40000000
 8007612:	d304      	bcc.n	800761e <HAL_RCC_OscConfig+0x1fa>
 8007614:	f423 43f8 	bic.w	r3, r3, #31744	@ 0x7c00
 8007618:	ea43 2382 	orr.w	r3, r3, r2, lsl #10
 800761c:	e7ab      	b.n	8007576 <HAL_RCC_OscConfig+0x152>
 800761e:	f423 2378 	bic.w	r3, r3, #1015808	@ 0xf8000
 8007622:	ea43 33c2 	orr.w	r3, r3, r2, lsl #15
 8007626:	e7a6      	b.n	8007576 <HAL_RCC_OscConfig+0x152>
        __HAL_RCC_MSI_DISABLE();
 8007628:	682b      	ldr	r3, [r5, #0]
 800762a:	f023 0301 	bic.w	r3, r3, #1
 800762e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8007630:	f7fc fee0 	bl	80043f4 <HAL_GetTick>
 8007634:	4680      	mov	r8, r0
        while (READ_BIT(RCC->CR, RCC_CR_MSISRDY) != 0U)
 8007636:	682b      	ldr	r3, [r5, #0]
 8007638:	075b      	lsls	r3, r3, #29
 800763a:	d59d      	bpl.n	8007578 <HAL_RCC_OscConfig+0x154>
          if ((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 800763c:	f7fc feda 	bl	80043f4 <HAL_GetTick>
 8007640:	eba0 0008 	sub.w	r0, r0, r8
 8007644:	2802      	cmp	r0, #2
 8007646:	d9f6      	bls.n	8007636 <HAL_RCC_OscConfig+0x212>
 8007648:	e7d8      	b.n	80075fc <HAL_RCC_OscConfig+0x1d8>
    if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE) ||
 800764a:	2e08      	cmp	r6, #8
 800764c:	6863      	ldr	r3, [r4, #4]
 800764e:	d003      	beq.n	8007658 <HAL_RCC_OscConfig+0x234>
 8007650:	2e0c      	cmp	r6, #12
 8007652:	d104      	bne.n	800765e <HAL_RCC_OscConfig+0x23a>
        ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSE)))
 8007654:	2f03      	cmp	r7, #3
 8007656:	d102      	bne.n	800765e <HAL_RCC_OscConfig+0x23a>
      if (pRCC_OscInitStruct->HSEState == RCC_HSE_OFF)
 8007658:	2b00      	cmp	r3, #0
 800765a:	d190      	bne.n	800757e <HAL_RCC_OscConfig+0x15a>
 800765c:	e721      	b.n	80074a2 <HAL_RCC_OscConfig+0x7e>
      __HAL_RCC_HSE_CONFIG(pRCC_OscInitStruct->HSEState);
 800765e:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8007662:	4d16      	ldr	r5, [pc, #88]	@ (80076bc <HAL_RCC_OscConfig+0x298>)
 8007664:	d113      	bne.n	800768e <HAL_RCC_OscConfig+0x26a>
 8007666:	682b      	ldr	r3, [r5, #0]
 8007668:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800766c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800766e:	f7fc fec1 	bl	80043f4 <HAL_GetTick>
 8007672:	4605      	mov	r5, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8007674:	f8df 8044 	ldr.w	r8, [pc, #68]	@ 80076bc <HAL_RCC_OscConfig+0x298>
 8007678:	f8d8 3000 	ldr.w	r3, [r8]
 800767c:	0399      	lsls	r1, r3, #14
 800767e:	f53f af7e 	bmi.w	800757e <HAL_RCC_OscConfig+0x15a>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8007682:	f7fc feb7 	bl	80043f4 <HAL_GetTick>
 8007686:	1b40      	subs	r0, r0, r5
 8007688:	2864      	cmp	r0, #100	@ 0x64
 800768a:	d9f5      	bls.n	8007678 <HAL_RCC_OscConfig+0x254>
 800768c:	e7b6      	b.n	80075fc <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_HSE_CONFIG(pRCC_OscInitStruct->HSEState);
 800768e:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8007692:	d108      	bne.n	80076a6 <HAL_RCC_OscConfig+0x282>
 8007694:	682b      	ldr	r3, [r5, #0]
 8007696:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800769a:	602b      	str	r3, [r5, #0]
 800769c:	682b      	ldr	r3, [r5, #0]
 800769e:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 80076a2:	602b      	str	r3, [r5, #0]
 80076a4:	e7df      	b.n	8007666 <HAL_RCC_OscConfig+0x242>
 80076a6:	f5b3 1fa8 	cmp.w	r3, #1376256	@ 0x150000
 80076aa:	d10d      	bne.n	80076c8 <HAL_RCC_OscConfig+0x2a4>
 80076ac:	682b      	ldr	r3, [r5, #0]
 80076ae:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80076b2:	602b      	str	r3, [r5, #0]
 80076b4:	682b      	ldr	r3, [r5, #0]
 80076b6:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80076ba:	e7f2      	b.n	80076a2 <HAL_RCC_OscConfig+0x27e>
 80076bc:	46020c00 	.word	0x46020c00
 80076c0:	20000050 	.word	0x20000050
 80076c4:	46020800 	.word	0x46020800
 80076c8:	682a      	ldr	r2, [r5, #0]
 80076ca:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 80076ce:	602a      	str	r2, [r5, #0]
 80076d0:	682a      	ldr	r2, [r5, #0]
 80076d2:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 80076d6:	602a      	str	r2, [r5, #0]
 80076d8:	682a      	ldr	r2, [r5, #0]
 80076da:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
 80076de:	602a      	str	r2, [r5, #0]
      if (pRCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 80076e0:	2b00      	cmp	r3, #0
 80076e2:	d1c4      	bne.n	800766e <HAL_RCC_OscConfig+0x24a>
        tickstart = HAL_GetTick();
 80076e4:	f7fc fe86 	bl	80043f4 <HAL_GetTick>
 80076e8:	4680      	mov	r8, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 80076ea:	682b      	ldr	r3, [r5, #0]
 80076ec:	039a      	lsls	r2, r3, #14
 80076ee:	f57f af46 	bpl.w	800757e <HAL_RCC_OscConfig+0x15a>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80076f2:	f7fc fe7f 	bl	80043f4 <HAL_GetTick>
 80076f6:	eba0 0008 	sub.w	r0, r0, r8
 80076fa:	2864      	cmp	r0, #100	@ 0x64
 80076fc:	d9f5      	bls.n	80076ea <HAL_RCC_OscConfig+0x2c6>
 80076fe:	e77d      	b.n	80075fc <HAL_RCC_OscConfig+0x1d8>
    if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSI) ||
 8007700:	2e04      	cmp	r6, #4
 8007702:	68e3      	ldr	r3, [r4, #12]
 8007704:	d003      	beq.n	800770e <HAL_RCC_OscConfig+0x2ea>
 8007706:	2e0c      	cmp	r6, #12
 8007708:	d10d      	bne.n	8007726 <HAL_RCC_OscConfig+0x302>
        ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSI)))
 800770a:	2f02      	cmp	r7, #2
 800770c:	d10b      	bne.n	8007726 <HAL_RCC_OscConfig+0x302>
      if (pRCC_OscInitStruct->HSIState == RCC_HSI_OFF)
 800770e:	2b00      	cmp	r3, #0
 8007710:	f43f aec7 	beq.w	80074a2 <HAL_RCC_OscConfig+0x7e>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(pRCC_OscInitStruct->HSICalibrationValue);
 8007714:	4aa9      	ldr	r2, [pc, #676]	@ (80079bc <HAL_RCC_OscConfig+0x598>)
 8007716:	6921      	ldr	r1, [r4, #16]
 8007718:	6913      	ldr	r3, [r2, #16]
 800771a:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 800771e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8007722:	6113      	str	r3, [r2, #16]
      if (pRCC_OscInitStruct->HSIState == RCC_HSI_OFF)
 8007724:	e72f      	b.n	8007586 <HAL_RCC_OscConfig+0x162>
      if (pRCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8007726:	4da5      	ldr	r5, [pc, #660]	@ (80079bc <HAL_RCC_OscConfig+0x598>)
 8007728:	b1bb      	cbz	r3, 800775a <HAL_RCC_OscConfig+0x336>
        __HAL_RCC_HSI_ENABLE();
 800772a:	682b      	ldr	r3, [r5, #0]
 800772c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8007730:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8007732:	f7fc fe5f 	bl	80043f4 <HAL_GetTick>
 8007736:	4606      	mov	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8007738:	682b      	ldr	r3, [r5, #0]
 800773a:	055b      	lsls	r3, r3, #21
 800773c:	d507      	bpl.n	800774e <HAL_RCC_OscConfig+0x32a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(pRCC_OscInitStruct->HSICalibrationValue);
 800773e:	692b      	ldr	r3, [r5, #16]
 8007740:	6922      	ldr	r2, [r4, #16]
 8007742:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 8007746:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800774a:	612b      	str	r3, [r5, #16]
 800774c:	e71b      	b.n	8007586 <HAL_RCC_OscConfig+0x162>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800774e:	f7fc fe51 	bl	80043f4 <HAL_GetTick>
 8007752:	1b80      	subs	r0, r0, r6
 8007754:	2802      	cmp	r0, #2
 8007756:	d9ef      	bls.n	8007738 <HAL_RCC_OscConfig+0x314>
 8007758:	e750      	b.n	80075fc <HAL_RCC_OscConfig+0x1d8>
        __HAL_RCC_HSI_DISABLE();
 800775a:	682b      	ldr	r3, [r5, #0]
 800775c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007760:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8007762:	f7fc fe47 	bl	80043f4 <HAL_GetTick>
 8007766:	4606      	mov	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 8007768:	682b      	ldr	r3, [r5, #0]
 800776a:	055f      	lsls	r7, r3, #21
 800776c:	f57f af0b 	bpl.w	8007586 <HAL_RCC_OscConfig+0x162>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8007770:	f7fc fe40 	bl	80043f4 <HAL_GetTick>
 8007774:	1b80      	subs	r0, r0, r6
 8007776:	2802      	cmp	r0, #2
 8007778:	d9f6      	bls.n	8007768 <HAL_RCC_OscConfig+0x344>
 800777a:	e73f      	b.n	80075fc <HAL_RCC_OscConfig+0x1d8>
    FlagStatus  pwrclkchanged = RESET;
 800777c:	2700      	movs	r7, #0
 800777e:	e719      	b.n	80075b4 <HAL_RCC_OscConfig+0x190>
      SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 8007780:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8007782:	f043 0301 	orr.w	r3, r3, #1
 8007786:	62ab      	str	r3, [r5, #40]	@ 0x28
      tickstart = HAL_GetTick();
 8007788:	f7fc fe34 	bl	80043f4 <HAL_GetTick>
 800778c:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 800778e:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8007790:	07db      	lsls	r3, r3, #31
 8007792:	f53f af14 	bmi.w	80075be <HAL_RCC_OscConfig+0x19a>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007796:	f7fc fe2d 	bl	80043f4 <HAL_GetTick>
 800779a:	1b80      	subs	r0, r0, r6
 800779c:	2802      	cmp	r0, #2
 800779e:	d9f6      	bls.n	800778e <HAL_RCC_OscConfig+0x36a>
 80077a0:	e72c      	b.n	80075fc <HAL_RCC_OscConfig+0x1d8>
      uint32_t bdcr_temp = RCC->BDCR;
 80077a2:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
      if (pRCC_OscInitStruct->LSIDiv != (bdcr_temp & RCC_BDCR_LSIPREDIV))
 80077a6:	69a1      	ldr	r1, [r4, #24]
 80077a8:	f003 5280 	and.w	r2, r3, #268435456	@ 0x10000000
 80077ac:	4291      	cmp	r1, r2
 80077ae:	d010      	beq.n	80077d2 <HAL_RCC_OscConfig+0x3ae>
        if (((bdcr_temp & RCC_BDCR_LSIRDY) == RCC_BDCR_LSIRDY) && \
 80077b0:	f003 6240 	and.w	r2, r3, #201326592	@ 0xc000000
 80077b4:	f1b2 6f00 	cmp.w	r2, #134217728	@ 0x8000000
 80077b8:	f43f ae73 	beq.w	80074a2 <HAL_RCC_OscConfig+0x7e>
        if ((bdcr_temp & RCC_BDCR_LSION) == RCC_BDCR_LSION)
 80077bc:	0158      	lsls	r0, r3, #5
 80077be:	d46c      	bmi.n	800789a <HAL_RCC_OscConfig+0x476>
        MODIFY_REG(RCC->BDCR, RCC_BDCR_LSIPREDIV, pRCC_OscInitStruct->LSIDiv);
 80077c0:	4a7e      	ldr	r2, [pc, #504]	@ (80079bc <HAL_RCC_OscConfig+0x598>)
 80077c2:	69a1      	ldr	r1, [r4, #24]
 80077c4:	f8d2 30f0 	ldr.w	r3, [r2, #240]	@ 0xf0
 80077c8:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80077cc:	430b      	orrs	r3, r1
 80077ce:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
      __HAL_RCC_LSI_ENABLE();
 80077d2:	4d7a      	ldr	r5, [pc, #488]	@ (80079bc <HAL_RCC_OscConfig+0x598>)
 80077d4:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 80077d8:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80077dc:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
      tickstart = HAL_GetTick();
 80077e0:	f7fc fe08 	bl	80043f4 <HAL_GetTick>
 80077e4:	4606      	mov	r6, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) == 0U)
 80077e6:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 80077ea:	011a      	lsls	r2, r3, #4
 80077ec:	d568      	bpl.n	80078c0 <HAL_RCC_OscConfig+0x49c>
    if (pwrclkchanged == SET)
 80077ee:	b137      	cbz	r7, 80077fe <HAL_RCC_OscConfig+0x3da>
      __HAL_RCC_PWR_CLK_DISABLE();
 80077f0:	4a72      	ldr	r2, [pc, #456]	@ (80079bc <HAL_RCC_OscConfig+0x598>)
 80077f2:	f8d2 3094 	ldr.w	r3, [r2, #148]	@ 0x94
 80077f6:	f023 0304 	bic.w	r3, r3, #4
 80077fa:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80077fe:	6823      	ldr	r3, [r4, #0]
 8007800:	075d      	lsls	r5, r3, #29
 8007802:	f140 80a7 	bpl.w	8007954 <HAL_RCC_OscConfig+0x530>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8007806:	4b6d      	ldr	r3, [pc, #436]	@ (80079bc <HAL_RCC_OscConfig+0x598>)
 8007808:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 800780c:	0750      	lsls	r0, r2, #29
 800780e:	d45d      	bmi.n	80078cc <HAL_RCC_OscConfig+0x4a8>
      pwrclkchanged = SET;
 8007810:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 8007812:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8007816:	f042 0204 	orr.w	r2, r2, #4
 800781a:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 800781e:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8007822:	f003 0304 	and.w	r3, r3, #4
 8007826:	9302      	str	r3, [sp, #8]
 8007828:	9b02      	ldr	r3, [sp, #8]
    if (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 800782a:	4d65      	ldr	r5, [pc, #404]	@ (80079c0 <HAL_RCC_OscConfig+0x59c>)
 800782c:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 800782e:	07d9      	lsls	r1, r3, #31
 8007830:	d54e      	bpl.n	80078d0 <HAL_RCC_OscConfig+0x4ac>
    if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSEON) != 0U)
 8007832:	68a3      	ldr	r3, [r4, #8]
 8007834:	4d61      	ldr	r5, [pc, #388]	@ (80079bc <HAL_RCC_OscConfig+0x598>)
 8007836:	f013 0f01 	tst.w	r3, #1
 800783a:	d159      	bne.n	80078f0 <HAL_RCC_OscConfig+0x4cc>
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 800783c:	f8d5 20f0 	ldr.w	r2, [r5, #240]	@ 0xf0
 8007840:	f022 0201 	bic.w	r2, r2, #1
 8007844:	f8c5 20f0 	str.w	r2, [r5, #240]	@ 0xf0
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 8007848:	f8d5 20f0 	ldr.w	r2, [r5, #240]	@ 0xf0
 800784c:	f022 0204 	bic.w	r2, r2, #4
 8007850:	f8c5 20f0 	str.w	r2, [r5, #240]	@ 0xf0
    if (pRCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8007854:	2b00      	cmp	r3, #0
 8007856:	d15a      	bne.n	800790e <HAL_RCC_OscConfig+0x4ea>
      tickstart = HAL_GetTick();
 8007858:	f7fc fdcc 	bl	80043f4 <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800785c:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8007860:	4606      	mov	r6, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8007862:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8007866:	079a      	lsls	r2, r3, #30
 8007868:	f100 80a0 	bmi.w	80079ac <HAL_RCC_OscConfig+0x588>
      if (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN) != 0U)
 800786c:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8007870:	061b      	lsls	r3, r3, #24
 8007872:	d567      	bpl.n	8007944 <HAL_RCC_OscConfig+0x520>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007874:	f241 3888 	movw	r8, #5000	@ 0x1388
        CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 8007878:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 800787c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007880:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) != 0U)
 8007884:	4d4d      	ldr	r5, [pc, #308]	@ (80079bc <HAL_RCC_OscConfig+0x598>)
 8007886:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 800788a:	0518      	lsls	r0, r3, #20
 800788c:	d55a      	bpl.n	8007944 <HAL_RCC_OscConfig+0x520>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800788e:	f7fc fdb1 	bl	80043f4 <HAL_GetTick>
 8007892:	1b80      	subs	r0, r0, r6
 8007894:	4540      	cmp	r0, r8
 8007896:	d9f6      	bls.n	8007886 <HAL_RCC_OscConfig+0x462>
 8007898:	e6b0      	b.n	80075fc <HAL_RCC_OscConfig+0x1d8>
          __HAL_RCC_LSI_DISABLE();
 800789a:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 800789e:	f023 53a0 	bic.w	r3, r3, #335544320	@ 0x14000000
 80078a2:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
          tickstart = HAL_GetTick();
 80078a6:	f7fc fda5 	bl	80043f4 <HAL_GetTick>
 80078aa:	4606      	mov	r6, r0
          while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) != 0U)
 80078ac:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 80078b0:	0119      	lsls	r1, r3, #4
 80078b2:	d585      	bpl.n	80077c0 <HAL_RCC_OscConfig+0x39c>
            if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80078b4:	f7fc fd9e 	bl	80043f4 <HAL_GetTick>
 80078b8:	1b80      	subs	r0, r0, r6
 80078ba:	2805      	cmp	r0, #5
 80078bc:	d9f6      	bls.n	80078ac <HAL_RCC_OscConfig+0x488>
 80078be:	e69d      	b.n	80075fc <HAL_RCC_OscConfig+0x1d8>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80078c0:	f7fc fd98 	bl	80043f4 <HAL_GetTick>
 80078c4:	1b80      	subs	r0, r0, r6
 80078c6:	2805      	cmp	r0, #5
 80078c8:	d98d      	bls.n	80077e6 <HAL_RCC_OscConfig+0x3c2>
 80078ca:	e697      	b.n	80075fc <HAL_RCC_OscConfig+0x1d8>
    FlagStatus pwrclkchanged = RESET;
 80078cc:	2700      	movs	r7, #0
 80078ce:	e7ac      	b.n	800782a <HAL_RCC_OscConfig+0x406>
      SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 80078d0:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 80078d2:	f043 0301 	orr.w	r3, r3, #1
 80078d6:	62ab      	str	r3, [r5, #40]	@ 0x28
      tickstart = HAL_GetTick();
 80078d8:	f7fc fd8c 	bl	80043f4 <HAL_GetTick>
 80078dc:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 80078de:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 80078e0:	07da      	lsls	r2, r3, #31
 80078e2:	d4a6      	bmi.n	8007832 <HAL_RCC_OscConfig+0x40e>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80078e4:	f7fc fd86 	bl	80043f4 <HAL_GetTick>
 80078e8:	1b80      	subs	r0, r0, r6
 80078ea:	2802      	cmp	r0, #2
 80078ec:	d9f7      	bls.n	80078de <HAL_RCC_OscConfig+0x4ba>
 80078ee:	e685      	b.n	80075fc <HAL_RCC_OscConfig+0x1d8>
      if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSEBYP) != 0U)
 80078f0:	f013 0f04 	tst.w	r3, #4
        SET_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 80078f4:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 80078f8:	bf1e      	ittt	ne
 80078fa:	f043 0304 	orrne.w	r3, r3, #4
 80078fe:	f8c5 30f0 	strne.w	r3, [r5, #240]	@ 0xf0
        SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 8007902:	f8d5 30f0 	ldrne.w	r3, [r5, #240]	@ 0xf0
        SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 8007906:	f043 0301 	orr.w	r3, r3, #1
 800790a:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
      tickstart = HAL_GetTick();
 800790e:	f7fc fd71 	bl	80043f4 <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007912:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8007916:	4605      	mov	r5, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8007918:	4e28      	ldr	r6, [pc, #160]	@ (80079bc <HAL_RCC_OscConfig+0x598>)
 800791a:	f8d6 30f0 	ldr.w	r3, [r6, #240]	@ 0xf0
 800791e:	079b      	lsls	r3, r3, #30
 8007920:	d527      	bpl.n	8007972 <HAL_RCC_OscConfig+0x54e>
      if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSESYSEN) != 0U)
 8007922:	68a3      	ldr	r3, [r4, #8]
 8007924:	f013 0f80 	tst.w	r3, #128	@ 0x80
        SET_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 8007928:	f8d6 30f0 	ldr.w	r3, [r6, #240]	@ 0xf0
      if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSESYSEN) != 0U)
 800792c:	d02d      	beq.n	800798a <HAL_RCC_OscConfig+0x566>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800792e:	f241 3888 	movw	r8, #5000	@ 0x1388
        SET_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 8007932:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007936:	f8c6 30f0 	str.w	r3, [r6, #240]	@ 0xf0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) == 0U)
 800793a:	4e20      	ldr	r6, [pc, #128]	@ (80079bc <HAL_RCC_OscConfig+0x598>)
 800793c:	f8d6 30f0 	ldr.w	r3, [r6, #240]	@ 0xf0
 8007940:	0518      	lsls	r0, r3, #20
 8007942:	d51c      	bpl.n	800797e <HAL_RCC_OscConfig+0x55a>
    if (pwrclkchanged == SET)
 8007944:	b137      	cbz	r7, 8007954 <HAL_RCC_OscConfig+0x530>
      __HAL_RCC_PWR_CLK_DISABLE();
 8007946:	4a1d      	ldr	r2, [pc, #116]	@ (80079bc <HAL_RCC_OscConfig+0x598>)
 8007948:	f8d2 3094 	ldr.w	r3, [r2, #148]	@ 0x94
 800794c:	f023 0304 	bic.w	r3, r3, #4
 8007950:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8007954:	6823      	ldr	r3, [r4, #0]
 8007956:	0699      	lsls	r1, r3, #26
 8007958:	d434      	bmi.n	80079c4 <HAL_RCC_OscConfig+0x5a0>
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_SHSI) == RCC_OSCILLATORTYPE_SHSI)
 800795a:	6823      	ldr	r3, [r4, #0]
 800795c:	061a      	lsls	r2, r3, #24
 800795e:	d454      	bmi.n	8007a0a <HAL_RCC_OscConfig+0x5e6>
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSIK) == RCC_OSCILLATORTYPE_MSIK)
 8007960:	6823      	ldr	r3, [r4, #0]
 8007962:	0658      	lsls	r0, r3, #25
 8007964:	d474      	bmi.n	8007a50 <HAL_RCC_OscConfig+0x62c>
  if ((pRCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8007966:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8007968:	2900      	cmp	r1, #0
 800796a:	f040 80c1 	bne.w	8007af0 <HAL_RCC_OscConfig+0x6cc>
  return HAL_OK;
 800796e:	2000      	movs	r0, #0
 8007970:	e5a6      	b.n	80074c0 <HAL_RCC_OscConfig+0x9c>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007972:	f7fc fd3f 	bl	80043f4 <HAL_GetTick>
 8007976:	1b40      	subs	r0, r0, r5
 8007978:	4540      	cmp	r0, r8
 800797a:	d9ce      	bls.n	800791a <HAL_RCC_OscConfig+0x4f6>
 800797c:	e63e      	b.n	80075fc <HAL_RCC_OscConfig+0x1d8>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800797e:	f7fc fd39 	bl	80043f4 <HAL_GetTick>
 8007982:	1b40      	subs	r0, r0, r5
 8007984:	4540      	cmp	r0, r8
 8007986:	d9d9      	bls.n	800793c <HAL_RCC_OscConfig+0x518>
 8007988:	e638      	b.n	80075fc <HAL_RCC_OscConfig+0x1d8>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800798a:	f241 3888 	movw	r8, #5000	@ 0x1388
        CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 800798e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007992:	f8c6 30f0 	str.w	r3, [r6, #240]	@ 0xf0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) != 0U)
 8007996:	4e09      	ldr	r6, [pc, #36]	@ (80079bc <HAL_RCC_OscConfig+0x598>)
 8007998:	f8d6 30f0 	ldr.w	r3, [r6, #240]	@ 0xf0
 800799c:	0519      	lsls	r1, r3, #20
 800799e:	d5d1      	bpl.n	8007944 <HAL_RCC_OscConfig+0x520>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80079a0:	f7fc fd28 	bl	80043f4 <HAL_GetTick>
 80079a4:	1b40      	subs	r0, r0, r5
 80079a6:	4540      	cmp	r0, r8
 80079a8:	d9f6      	bls.n	8007998 <HAL_RCC_OscConfig+0x574>
 80079aa:	e627      	b.n	80075fc <HAL_RCC_OscConfig+0x1d8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80079ac:	f7fc fd22 	bl	80043f4 <HAL_GetTick>
 80079b0:	1b80      	subs	r0, r0, r6
 80079b2:	4540      	cmp	r0, r8
 80079b4:	f67f af55 	bls.w	8007862 <HAL_RCC_OscConfig+0x43e>
 80079b8:	e620      	b.n	80075fc <HAL_RCC_OscConfig+0x1d8>
 80079ba:	bf00      	nop
 80079bc:	46020c00 	.word	0x46020c00
 80079c0:	46020800 	.word	0x46020800
    if (pRCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 80079c4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80079c6:	4d9b      	ldr	r5, [pc, #620]	@ (8007c34 <HAL_RCC_OscConfig+0x810>)
 80079c8:	b17b      	cbz	r3, 80079ea <HAL_RCC_OscConfig+0x5c6>
      __HAL_RCC_HSI48_ENABLE();
 80079ca:	682b      	ldr	r3, [r5, #0]
 80079cc:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80079d0:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80079d2:	f7fc fd0f 	bl	80043f4 <HAL_GetTick>
 80079d6:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_HSI48RDY) == 0U)
 80079d8:	682b      	ldr	r3, [r5, #0]
 80079da:	049b      	lsls	r3, r3, #18
 80079dc:	d4bd      	bmi.n	800795a <HAL_RCC_OscConfig+0x536>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 80079de:	f7fc fd09 	bl	80043f4 <HAL_GetTick>
 80079e2:	1b80      	subs	r0, r0, r6
 80079e4:	2802      	cmp	r0, #2
 80079e6:	d9f7      	bls.n	80079d8 <HAL_RCC_OscConfig+0x5b4>
 80079e8:	e608      	b.n	80075fc <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_HSI48_DISABLE();
 80079ea:	682b      	ldr	r3, [r5, #0]
 80079ec:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80079f0:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80079f2:	f7fc fcff 	bl	80043f4 <HAL_GetTick>
 80079f6:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_HSI48RDY) != 0U)
 80079f8:	682b      	ldr	r3, [r5, #0]
 80079fa:	049f      	lsls	r7, r3, #18
 80079fc:	d5ad      	bpl.n	800795a <HAL_RCC_OscConfig+0x536>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 80079fe:	f7fc fcf9 	bl	80043f4 <HAL_GetTick>
 8007a02:	1b80      	subs	r0, r0, r6
 8007a04:	2802      	cmp	r0, #2
 8007a06:	d9f7      	bls.n	80079f8 <HAL_RCC_OscConfig+0x5d4>
 8007a08:	e5f8      	b.n	80075fc <HAL_RCC_OscConfig+0x1d8>
    if (pRCC_OscInitStruct->SHSIState != RCC_SHSI_OFF)
 8007a0a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007a0c:	4d89      	ldr	r5, [pc, #548]	@ (8007c34 <HAL_RCC_OscConfig+0x810>)
 8007a0e:	b17b      	cbz	r3, 8007a30 <HAL_RCC_OscConfig+0x60c>
      __HAL_RCC_SHSI_ENABLE();
 8007a10:	682b      	ldr	r3, [r5, #0]
 8007a12:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8007a16:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007a18:	f7fc fcec 	bl	80043f4 <HAL_GetTick>
 8007a1c:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_SHSIRDY) == 0U)
 8007a1e:	682b      	ldr	r3, [r5, #0]
 8007a20:	0419      	lsls	r1, r3, #16
 8007a22:	d49d      	bmi.n	8007960 <HAL_RCC_OscConfig+0x53c>
        if ((HAL_GetTick() - tickstart) > SHSI_TIMEOUT_VALUE)
 8007a24:	f7fc fce6 	bl	80043f4 <HAL_GetTick>
 8007a28:	1b80      	subs	r0, r0, r6
 8007a2a:	2802      	cmp	r0, #2
 8007a2c:	d9f7      	bls.n	8007a1e <HAL_RCC_OscConfig+0x5fa>
 8007a2e:	e5e5      	b.n	80075fc <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_SHSI_DISABLE();
 8007a30:	682b      	ldr	r3, [r5, #0]
 8007a32:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8007a36:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007a38:	f7fc fcdc 	bl	80043f4 <HAL_GetTick>
 8007a3c:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_SHSIRDY) != 0U)
 8007a3e:	682b      	ldr	r3, [r5, #0]
 8007a40:	041a      	lsls	r2, r3, #16
 8007a42:	d58d      	bpl.n	8007960 <HAL_RCC_OscConfig+0x53c>
        if ((HAL_GetTick() - tickstart) > SHSI_TIMEOUT_VALUE)
 8007a44:	f7fc fcd6 	bl	80043f4 <HAL_GetTick>
 8007a48:	1b80      	subs	r0, r0, r6
 8007a4a:	2802      	cmp	r0, #2
 8007a4c:	d9f7      	bls.n	8007a3e <HAL_RCC_OscConfig+0x61a>
 8007a4e:	e5d5      	b.n	80075fc <HAL_RCC_OscConfig+0x1d8>
    if (pRCC_OscInitStruct->MSIKState != RCC_MSIK_OFF)
 8007a50:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8007a52:	4d78      	ldr	r5, [pc, #480]	@ (8007c34 <HAL_RCC_OscConfig+0x810>)
 8007a54:	2b00      	cmp	r3, #0
 8007a56:	d03a      	beq.n	8007ace <HAL_RCC_OscConfig+0x6aa>
      __HAL_RCC_MSIK_RANGE_CONFIG(pRCC_OscInitStruct->MSIKClockRange);
 8007a58:	68ab      	ldr	r3, [r5, #8]
 8007a5a:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8007a5e:	60ab      	str	r3, [r5, #8]
 8007a60:	68ab      	ldr	r3, [r5, #8]
 8007a62:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8007a64:	f023 6370 	bic.w	r3, r3, #251658240	@ 0xf000000
 8007a68:	4313      	orrs	r3, r2
 8007a6a:	60ab      	str	r3, [r5, #8]
      __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8007a6c:	e9d4 2308 	ldrd	r2, r3, [r4, #32]
 8007a70:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
 8007a74:	d316      	bcc.n	8007aa4 <HAL_RCC_OscConfig+0x680>
 8007a76:	68eb      	ldr	r3, [r5, #12]
 8007a78:	f023 031f 	bic.w	r3, r3, #31
 8007a7c:	4313      	orrs	r3, r2
 8007a7e:	60eb      	str	r3, [r5, #12]
      __HAL_RCC_MSIK_ENABLE();
 8007a80:	4d6c      	ldr	r5, [pc, #432]	@ (8007c34 <HAL_RCC_OscConfig+0x810>)
 8007a82:	682b      	ldr	r3, [r5, #0]
 8007a84:	f043 0310 	orr.w	r3, r3, #16
 8007a88:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007a8a:	f7fc fcb3 	bl	80043f4 <HAL_GetTick>
 8007a8e:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_MSIKRDY) == 0U)
 8007a90:	682b      	ldr	r3, [r5, #0]
 8007a92:	069b      	lsls	r3, r3, #26
 8007a94:	f53f af67 	bmi.w	8007966 <HAL_RCC_OscConfig+0x542>
        if ((HAL_GetTick() - tickstart) > MSIK_TIMEOUT_VALUE)
 8007a98:	f7fc fcac 	bl	80043f4 <HAL_GetTick>
 8007a9c:	1b80      	subs	r0, r0, r6
 8007a9e:	2802      	cmp	r0, #2
 8007aa0:	d9f6      	bls.n	8007a90 <HAL_RCC_OscConfig+0x66c>
 8007aa2:	e5ab      	b.n	80075fc <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8007aa4:	2b00      	cmp	r3, #0
 8007aa6:	da05      	bge.n	8007ab4 <HAL_RCC_OscConfig+0x690>
 8007aa8:	68eb      	ldr	r3, [r5, #12]
 8007aaa:	f423 7378 	bic.w	r3, r3, #992	@ 0x3e0
 8007aae:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8007ab2:	e7e4      	b.n	8007a7e <HAL_RCC_OscConfig+0x65a>
 8007ab4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007ab8:	68eb      	ldr	r3, [r5, #12]
 8007aba:	bf2b      	itete	cs
 8007abc:	f423 43f8 	biccs.w	r3, r3, #31744	@ 0x7c00
 8007ac0:	f423 2378 	biccc.w	r3, r3, #1015808	@ 0xf8000
 8007ac4:	ea43 2382 	orrcs.w	r3, r3, r2, lsl #10
 8007ac8:	ea43 33c2 	orrcc.w	r3, r3, r2, lsl #15
 8007acc:	e7d7      	b.n	8007a7e <HAL_RCC_OscConfig+0x65a>
      __HAL_RCC_MSIK_DISABLE();
 8007ace:	682b      	ldr	r3, [r5, #0]
 8007ad0:	f023 0310 	bic.w	r3, r3, #16
 8007ad4:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007ad6:	f7fc fc8d 	bl	80043f4 <HAL_GetTick>
 8007ada:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_MSIKRDY) != 0U)
 8007adc:	682b      	ldr	r3, [r5, #0]
 8007ade:	069f      	lsls	r7, r3, #26
 8007ae0:	f57f af41 	bpl.w	8007966 <HAL_RCC_OscConfig+0x542>
        if ((HAL_GetTick() - tickstart) > MSIK_TIMEOUT_VALUE)
 8007ae4:	f7fc fc86 	bl	80043f4 <HAL_GetTick>
 8007ae8:	1b80      	subs	r0, r0, r6
 8007aea:	2802      	cmp	r0, #2
 8007aec:	d9f6      	bls.n	8007adc <HAL_RCC_OscConfig+0x6b8>
 8007aee:	e585      	b.n	80075fc <HAL_RCC_OscConfig+0x1d8>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8007af0:	4d50      	ldr	r5, [pc, #320]	@ (8007c34 <HAL_RCC_OscConfig+0x810>)
 8007af2:	69eb      	ldr	r3, [r5, #28]
 8007af4:	f003 030c 	and.w	r3, r3, #12
 8007af8:	2b0c      	cmp	r3, #12
 8007afa:	f000 80a1 	beq.w	8007c40 <HAL_RCC_OscConfig+0x81c>
        __HAL_RCC_PLL_DISABLE();
 8007afe:	682b      	ldr	r3, [r5, #0]
      if ((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007b00:	2902      	cmp	r1, #2
        __HAL_RCC_PLL_DISABLE();
 8007b02:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8007b06:	602b      	str	r3, [r5, #0]
      if ((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007b08:	f040 8081 	bne.w	8007c0e <HAL_RCC_OscConfig+0x7ea>
        tickstart = HAL_GetTick();
 8007b0c:	f7fc fc72 	bl	80043f4 <HAL_GetTick>
 8007b10:	4606      	mov	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 8007b12:	6829      	ldr	r1, [r5, #0]
 8007b14:	f011 7100 	ands.w	r1, r1, #33554432	@ 0x2000000
 8007b18:	d173      	bne.n	8007c02 <HAL_RCC_OscConfig+0x7de>
        if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8007b1a:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8007b1e:	075e      	lsls	r6, r3, #29
 8007b20:	d40c      	bmi.n	8007b3c <HAL_RCC_OscConfig+0x718>
          pwrclkchanged = SET;
 8007b22:	2101      	movs	r1, #1
          __HAL_RCC_PWR_CLK_ENABLE();
 8007b24:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8007b28:	f043 0304 	orr.w	r3, r3, #4
 8007b2c:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8007b30:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8007b34:	f003 0304 	and.w	r3, r3, #4
 8007b38:	9303      	str	r3, [sp, #12]
 8007b3a:	9b03      	ldr	r3, [sp, #12]
        if (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN) == PWR_VOSR_BOOSTEN)
 8007b3c:	4d3e      	ldr	r5, [pc, #248]	@ (8007c38 <HAL_RCC_OscConfig+0x814>)
 8007b3e:	68ee      	ldr	r6, [r5, #12]
        CLEAR_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN);
 8007b40:	68eb      	ldr	r3, [r5, #12]
 8007b42:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8007b46:	60eb      	str	r3, [r5, #12]
        __HAL_RCC_PLL_CONFIG(pRCC_OscInitStruct->PLL.PLLSource,
 8007b48:	4b3a      	ldr	r3, [pc, #232]	@ (8007c34 <HAL_RCC_OscConfig+0x810>)
 8007b4a:	6c67      	ldr	r7, [r4, #68]	@ 0x44
 8007b4c:	6a98      	ldr	r0, [r3, #40]	@ 0x28
 8007b4e:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8007b50:	f420 407f 	bic.w	r0, r0, #65280	@ 0xff00
 8007b54:	433a      	orrs	r2, r7
 8007b56:	f020 0003 	bic.w	r0, r0, #3
 8007b5a:	4302      	orrs	r2, r0
 8007b5c:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 8007b5e:	3801      	subs	r0, #1
 8007b60:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8007b64:	629a      	str	r2, [r3, #40]	@ 0x28
 8007b66:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 8007b68:	6b5f      	ldr	r7, [r3, #52]	@ 0x34
 8007b6a:	4834      	ldr	r0, [pc, #208]	@ (8007c3c <HAL_RCC_OscConfig+0x818>)
 8007b6c:	3a01      	subs	r2, #1
 8007b6e:	4038      	ands	r0, r7
 8007b70:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8007b74:	4302      	orrs	r2, r0
 8007b76:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8007b78:	3801      	subs	r0, #1
 8007b7a:	0240      	lsls	r0, r0, #9
 8007b7c:	b280      	uxth	r0, r0
 8007b7e:	4302      	orrs	r2, r0
 8007b80:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 8007b82:	3801      	subs	r0, #1
 8007b84:	0400      	lsls	r0, r0, #16
 8007b86:	f400 00fe 	and.w	r0, r0, #8323072	@ 0x7f0000
 8007b8a:	4302      	orrs	r2, r0
 8007b8c:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 8007b8e:	3801      	subs	r0, #1
 8007b90:	0600      	lsls	r0, r0, #24
 8007b92:	f000 40fe 	and.w	r0, r0, #2130706432	@ 0x7f000000
 8007b96:	4302      	orrs	r2, r0
 8007b98:	635a      	str	r2, [r3, #52]	@ 0x34
        __HAL_RCC_PLL_FRACN_DISABLE();
 8007b9a:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8007b9c:	f022 0210 	bic.w	r2, r2, #16
 8007ba0:	629a      	str	r2, [r3, #40]	@ 0x28
        __HAL_RCC_PLL_FRACN_CONFIG(pRCC_OscInitStruct->PLL.PLLFRACN);
 8007ba2:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 8007ba4:	00d2      	lsls	r2, r2, #3
 8007ba6:	639a      	str	r2, [r3, #56]	@ 0x38
        __HAL_RCC_PLL_FRACN_ENABLE();
 8007ba8:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8007baa:	f042 0210 	orr.w	r2, r2, #16
 8007bae:	629a      	str	r2, [r3, #40]	@ 0x28
        __HAL_RCC_PLL_VCIRANGE(pRCC_OscInitStruct->PLL.PLLRGE);
 8007bb0:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8007bb2:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8007bb4:	f022 020c 	bic.w	r2, r2, #12
 8007bb8:	4302      	orrs	r2, r0
 8007bba:	629a      	str	r2, [r3, #40]	@ 0x28
        if (pwrboosten == SET)
 8007bbc:	0370      	lsls	r0, r6, #13
          SET_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN);
 8007bbe:	bf42      	ittt	mi
 8007bc0:	68ea      	ldrmi	r2, [r5, #12]
 8007bc2:	f442 2280 	orrmi.w	r2, r2, #262144	@ 0x40000
 8007bc6:	60ea      	strmi	r2, [r5, #12]
        if (pwrclkchanged == SET)
 8007bc8:	b129      	cbz	r1, 8007bd6 <HAL_RCC_OscConfig+0x7b2>
          __HAL_RCC_PWR_CLK_DISABLE();
 8007bca:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8007bce:	f022 0204 	bic.w	r2, r2, #4
 8007bd2:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 8007bd6:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 8007bd8:	4d16      	ldr	r5, [pc, #88]	@ (8007c34 <HAL_RCC_OscConfig+0x810>)
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 8007bda:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 8007bde:	629a      	str	r2, [r3, #40]	@ 0x28
        __HAL_RCC_PLL_ENABLE();
 8007be0:	681a      	ldr	r2, [r3, #0]
 8007be2:	f042 7280 	orr.w	r2, r2, #16777216	@ 0x1000000
 8007be6:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007be8:	f7fc fc04 	bl	80043f4 <HAL_GetTick>
 8007bec:	4604      	mov	r4, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 8007bee:	682b      	ldr	r3, [r5, #0]
 8007bf0:	019a      	lsls	r2, r3, #6
 8007bf2:	f53f aebc 	bmi.w	800796e <HAL_RCC_OscConfig+0x54a>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8007bf6:	f7fc fbfd 	bl	80043f4 <HAL_GetTick>
 8007bfa:	1b00      	subs	r0, r0, r4
 8007bfc:	2802      	cmp	r0, #2
 8007bfe:	d9f6      	bls.n	8007bee <HAL_RCC_OscConfig+0x7ca>
 8007c00:	e4fc      	b.n	80075fc <HAL_RCC_OscConfig+0x1d8>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8007c02:	f7fc fbf7 	bl	80043f4 <HAL_GetTick>
 8007c06:	1b80      	subs	r0, r0, r6
 8007c08:	2802      	cmp	r0, #2
 8007c0a:	d982      	bls.n	8007b12 <HAL_RCC_OscConfig+0x6ee>
 8007c0c:	e4f6      	b.n	80075fc <HAL_RCC_OscConfig+0x1d8>
        tickstart = HAL_GetTick();
 8007c0e:	f7fc fbf1 	bl	80043f4 <HAL_GetTick>
 8007c12:	4604      	mov	r4, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 8007c14:	682b      	ldr	r3, [r5, #0]
 8007c16:	019b      	lsls	r3, r3, #6
 8007c18:	d406      	bmi.n	8007c28 <HAL_RCC_OscConfig+0x804>
        RCC->PLL1CFGR &= ~(RCC_PLL1CFGR_PLL1SRC | RCC_PLL1CFGR_PLL1PEN | RCC_PLL1CFGR_PLL1QEN | RCC_PLL1CFGR_PLL1REN);
 8007c1a:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8007c1c:	f423 23e0 	bic.w	r3, r3, #458752	@ 0x70000
 8007c20:	f023 0303 	bic.w	r3, r3, #3
 8007c24:	62ab      	str	r3, [r5, #40]	@ 0x28
 8007c26:	e6a2      	b.n	800796e <HAL_RCC_OscConfig+0x54a>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8007c28:	f7fc fbe4 	bl	80043f4 <HAL_GetTick>
 8007c2c:	1b00      	subs	r0, r0, r4
 8007c2e:	2802      	cmp	r0, #2
 8007c30:	d9f0      	bls.n	8007c14 <HAL_RCC_OscConfig+0x7f0>
 8007c32:	e4e3      	b.n	80075fc <HAL_RCC_OscConfig+0x1d8>
 8007c34:	46020c00 	.word	0x46020c00
 8007c38:	46020800 	.word	0x46020800
 8007c3c:	80800000 	.word	0x80800000
      if (((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8007c40:	2901      	cmp	r1, #1
      temp1_pllckcfg = RCC->PLL1CFGR;
 8007c42:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
 8007c44:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
      if (((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8007c46:	f43f ac2c 	beq.w	80074a2 <HAL_RCC_OscConfig+0x7e>
 8007c4a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1SRC) != pRCC_OscInitStruct->PLL.PLLSource) ||
 8007c4c:	f002 0103 	and.w	r1, r2, #3
      if (((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8007c50:	4281      	cmp	r1, r0
 8007c52:	f47f ac26 	bne.w	80074a2 <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 8007c56:	6c21      	ldr	r1, [r4, #64]	@ 0x40
          ((READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1M) >> \
 8007c58:	f3c2 2003 	ubfx	r0, r2, #8, #4
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 8007c5c:	3901      	subs	r1, #1
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1SRC) != pRCC_OscInitStruct->PLL.PLLSource) ||
 8007c5e:	4288      	cmp	r0, r1
 8007c60:	f47f ac1f 	bne.w	80074a2 <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 8007c64:	6c61      	ldr	r1, [r4, #68]	@ 0x44
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1MBOOST) != pRCC_OscInitStruct->PLL.PLLMBOOST) ||
 8007c66:	f402 4270 	and.w	r2, r2, #61440	@ 0xf000
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 8007c6a:	428a      	cmp	r2, r1
 8007c6c:	f47f ac19 	bne.w	80074a2 <HAL_RCC_OscConfig+0x7e>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1N) != (pRCC_OscInitStruct->PLL.PLLN - 1U)) ||
 8007c70:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 8007c72:	f3c3 0108 	ubfx	r1, r3, #0, #9
 8007c76:	3a01      	subs	r2, #1
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1MBOOST) != pRCC_OscInitStruct->PLL.PLLMBOOST) ||
 8007c78:	4291      	cmp	r1, r2
 8007c7a:	f47f ac12 	bne.w	80074a2 <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1DIVR_PLL1P_Pos) != (pRCC_OscInitStruct->PLL.PLLP - 1U)) ||
 8007c7e:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1P) >> \
 8007c80:	f3c3 2146 	ubfx	r1, r3, #9, #7
            RCC_PLL1DIVR_PLL1P_Pos) != (pRCC_OscInitStruct->PLL.PLLP - 1U)) ||
 8007c84:	3a01      	subs	r2, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1N) != (pRCC_OscInitStruct->PLL.PLLN - 1U)) ||
 8007c86:	4291      	cmp	r1, r2
 8007c88:	f47f ac0b 	bne.w	80074a2 <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1DIVR_PLL1Q_Pos) != (pRCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 8007c8c:	6d22      	ldr	r2, [r4, #80]	@ 0x50
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1Q) >> \
 8007c8e:	f3c3 4106 	ubfx	r1, r3, #16, #7
            RCC_PLL1DIVR_PLL1Q_Pos) != (pRCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 8007c92:	3a01      	subs	r2, #1
            RCC_PLL1DIVR_PLL1P_Pos) != (pRCC_OscInitStruct->PLL.PLLP - 1U)) ||
 8007c94:	4291      	cmp	r1, r2
 8007c96:	f47f ac04 	bne.w	80074a2 <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1DIVR_PLL1R_Pos) != (pRCC_OscInitStruct->PLL.PLLR - 1U)))
 8007c9a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1R) >> \
 8007c9c:	f3c3 6306 	ubfx	r3, r3, #24, #7
            RCC_PLL1DIVR_PLL1R_Pos) != (pRCC_OscInitStruct->PLL.PLLR - 1U)))
 8007ca0:	3a01      	subs	r2, #1
            RCC_PLL1DIVR_PLL1Q_Pos) != (pRCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 8007ca2:	4293      	cmp	r3, r2
 8007ca4:	f47f abfd 	bne.w	80074a2 <HAL_RCC_OscConfig+0x7e>
      if ((READ_BIT(RCC->PLL1FRACR, RCC_PLL1FRACR_PLL1FRACN) >> \
 8007ca8:	4b0d      	ldr	r3, [pc, #52]	@ (8007ce0 <HAL_RCC_OscConfig+0x8bc>)
 8007caa:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
 8007cac:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8007cae:	f3c2 02cc 	ubfx	r2, r2, #3, #13
 8007cb2:	428a      	cmp	r2, r1
 8007cb4:	f43f ae5b 	beq.w	800796e <HAL_RCC_OscConfig+0x54a>
        __HAL_RCC_PLL_FRACN_DISABLE();
 8007cb8:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8007cba:	f022 0210 	bic.w	r2, r2, #16
 8007cbe:	629a      	str	r2, [r3, #40]	@ 0x28
        tickstart = HAL_GetTick();
 8007cc0:	f7fc fb98 	bl	80043f4 <HAL_GetTick>
 8007cc4:	4605      	mov	r5, r0
        while ((HAL_GetTick() - tickstart) < PLL_FRAC_WAIT_VALUE)
 8007cc6:	f7fc fb95 	bl	80043f4 <HAL_GetTick>
 8007cca:	42a8      	cmp	r0, r5
 8007ccc:	d0fb      	beq.n	8007cc6 <HAL_RCC_OscConfig+0x8a2>
        __HAL_RCC_PLL_FRACN_CONFIG(pRCC_OscInitStruct->PLL.PLLFRACN);
 8007cce:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 8007cd0:	4b03      	ldr	r3, [pc, #12]	@ (8007ce0 <HAL_RCC_OscConfig+0x8bc>)
 8007cd2:	00d2      	lsls	r2, r2, #3
 8007cd4:	639a      	str	r2, [r3, #56]	@ 0x38
        __HAL_RCC_PLL_FRACN_ENABLE();
 8007cd6:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8007cd8:	f042 0210 	orr.w	r2, r2, #16
 8007cdc:	629a      	str	r2, [r3, #40]	@ 0x28
 8007cde:	e646      	b.n	800796e <HAL_RCC_OscConfig+0x54a>
 8007ce0:	46020c00 	.word	0x46020c00

08007ce4 <HAL_RCC_GetPCLK1Freq>:
{
 8007ce4:	b508      	push	{r3, lr}
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR2 & RCC_CFGR2_PPRE1) >> RCC_CFGR2_PPRE1_Pos]);
 8007ce6:	f7ff fb89 	bl	80073fc <HAL_RCC_GetHCLKFreq>
 8007cea:	4b04      	ldr	r3, [pc, #16]	@ (8007cfc <HAL_RCC_GetPCLK1Freq+0x18>)
 8007cec:	4a04      	ldr	r2, [pc, #16]	@ (8007d00 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8007cee:	6a1b      	ldr	r3, [r3, #32]
 8007cf0:	f3c3 1302 	ubfx	r3, r3, #4, #3
 8007cf4:	5cd3      	ldrb	r3, [r2, r3]
}
 8007cf6:	40d8      	lsrs	r0, r3
 8007cf8:	bd08      	pop	{r3, pc}
 8007cfa:	bf00      	nop
 8007cfc:	46020c00 	.word	0x46020c00
 8007d00:	0802704c 	.word	0x0802704c

08007d04 <HAL_RCC_GetPCLK2Freq>:
{
 8007d04:	b508      	push	{r3, lr}
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR2 & RCC_CFGR2_PPRE2) >> RCC_CFGR2_PPRE2_Pos]);
 8007d06:	f7ff fb79 	bl	80073fc <HAL_RCC_GetHCLKFreq>
 8007d0a:	4b04      	ldr	r3, [pc, #16]	@ (8007d1c <HAL_RCC_GetPCLK2Freq+0x18>)
 8007d0c:	4a04      	ldr	r2, [pc, #16]	@ (8007d20 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8007d0e:	6a1b      	ldr	r3, [r3, #32]
 8007d10:	f3c3 2302 	ubfx	r3, r3, #8, #3
 8007d14:	5cd3      	ldrb	r3, [r2, r3]
}
 8007d16:	40d8      	lsrs	r0, r3
 8007d18:	bd08      	pop	{r3, pc}
 8007d1a:	bf00      	nop
 8007d1c:	46020c00 	.word	0x46020c00
 8007d20:	0802704c 	.word	0x0802704c

08007d24 <HAL_RCC_GetPCLK3Freq>:
{
 8007d24:	b508      	push	{r3, lr}
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR3 & RCC_CFGR3_PPRE3) >> RCC_CFGR3_PPRE3_Pos]);
 8007d26:	f7ff fb69 	bl	80073fc <HAL_RCC_GetHCLKFreq>
 8007d2a:	4b04      	ldr	r3, [pc, #16]	@ (8007d3c <HAL_RCC_GetPCLK3Freq+0x18>)
 8007d2c:	4a04      	ldr	r2, [pc, #16]	@ (8007d40 <HAL_RCC_GetPCLK3Freq+0x1c>)
 8007d2e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007d30:	f3c3 1302 	ubfx	r3, r3, #4, #3
 8007d34:	5cd3      	ldrb	r3, [r2, r3]
}
 8007d36:	40d8      	lsrs	r0, r3
 8007d38:	bd08      	pop	{r3, pc}
 8007d3a:	bf00      	nop
 8007d3c:	46020c00 	.word	0x46020c00
 8007d40:	0802704c 	.word	0x0802704c

08007d44 <HAL_RCC_GetClockConfig>:
  pRCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | \
 8007d44:	231f      	movs	r3, #31
 8007d46:	6003      	str	r3, [r0, #0]
  pRCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR1 & RCC_CFGR1_SW);
 8007d48:	4b0d      	ldr	r3, [pc, #52]	@ (8007d80 <HAL_RCC_GetClockConfig+0x3c>)
 8007d4a:	69da      	ldr	r2, [r3, #28]
 8007d4c:	f002 0203 	and.w	r2, r2, #3
 8007d50:	6042      	str	r2, [r0, #4]
  pRCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_HPRE);
 8007d52:	6a1a      	ldr	r2, [r3, #32]
 8007d54:	f002 020f 	and.w	r2, r2, #15
 8007d58:	6082      	str	r2, [r0, #8]
  pRCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PPRE1);
 8007d5a:	6a1a      	ldr	r2, [r3, #32]
 8007d5c:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 8007d60:	60c2      	str	r2, [r0, #12]
  pRCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR2 & RCC_CFGR2_PPRE2) >> 4);
 8007d62:	6a1a      	ldr	r2, [r3, #32]
 8007d64:	0912      	lsrs	r2, r2, #4
 8007d66:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 8007d6a:	6102      	str	r2, [r0, #16]
  pRCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->CFGR3 & RCC_CFGR3_PPRE3);
 8007d6c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007d6e:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8007d72:	6143      	str	r3, [r0, #20]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8007d74:	4b03      	ldr	r3, [pc, #12]	@ (8007d84 <HAL_RCC_GetClockConfig+0x40>)
 8007d76:	681b      	ldr	r3, [r3, #0]
 8007d78:	f003 030f 	and.w	r3, r3, #15
 8007d7c:	600b      	str	r3, [r1, #0]
}
 8007d7e:	4770      	bx	lr
 8007d80:	46020c00 	.word	0x46020c00
 8007d84:	40022000 	.word	0x40022000

08007d88 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2)
{
 8007d88:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_RCC_PLLP_VALUE(pll2->PLL2P));
  assert_param(IS_RCC_PLLQ_VALUE(pll2->PLL2Q));
  assert_param(IS_RCC_PLLR_VALUE(pll2->PLL2R));

  /* Disable  PLL2 */
  __HAL_RCC_PLL2_DISABLE();
 8007d8a:	4c33      	ldr	r4, [pc, #204]	@ (8007e58 <RCCEx_PLL2_Config+0xd0>)
{
 8007d8c:	4605      	mov	r5, r0
  __HAL_RCC_PLL2_DISABLE();
 8007d8e:	6823      	ldr	r3, [r4, #0]
 8007d90:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8007d94:	6023      	str	r3, [r4, #0]

  /* Get Start Tick*/
  tickstart = HAL_GetTick();
 8007d96:	f7fc fb2d 	bl	80043f4 <HAL_GetTick>
 8007d9a:	4606      	mov	r6, r0

  /* Wait till PLL is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 8007d9c:	6823      	ldr	r3, [r4, #0]
 8007d9e:	011a      	lsls	r2, r3, #4
 8007da0:	d44d      	bmi.n	8007e3e <RCCEx_PLL2_Config+0xb6>
      return HAL_TIMEOUT;
    }
  }

  /* Configure PLL2 multiplication and division factors */
  __HAL_RCC_PLL2_CONFIG(pll2->PLL2Source,
 8007da2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8007da4:	6829      	ldr	r1, [r5, #0]
 8007da6:	686a      	ldr	r2, [r5, #4]
 8007da8:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8007dac:	f023 0303 	bic.w	r3, r3, #3
 8007db0:	3a01      	subs	r2, #1
 8007db2:	430b      	orrs	r3, r1
 8007db4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007db8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8007dba:	68ab      	ldr	r3, [r5, #8]
 8007dbc:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 8007dbe:	4a27      	ldr	r2, [pc, #156]	@ (8007e5c <RCCEx_PLL2_Config+0xd4>)
 8007dc0:	3b01      	subs	r3, #1
 8007dc2:	400a      	ands	r2, r1
 8007dc4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007dc8:	4313      	orrs	r3, r2
 8007dca:	68ea      	ldr	r2, [r5, #12]
 8007dcc:	3a01      	subs	r2, #1
 8007dce:	0252      	lsls	r2, r2, #9
 8007dd0:	b292      	uxth	r2, r2
 8007dd2:	4313      	orrs	r3, r2
 8007dd4:	692a      	ldr	r2, [r5, #16]
 8007dd6:	3a01      	subs	r2, #1
 8007dd8:	0412      	lsls	r2, r2, #16
 8007dda:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
 8007dde:	4313      	orrs	r3, r2
 8007de0:	696a      	ldr	r2, [r5, #20]
 8007de2:	3a01      	subs	r2, #1
 8007de4:	0612      	lsls	r2, r2, #24
 8007de6:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
 8007dea:	4313      	orrs	r3, r2
 8007dec:	63e3      	str	r3, [r4, #60]	@ 0x3c
                        pll2->PLL2P,
                        pll2->PLL2Q,
                        pll2->PLL2R);

  /* Select PLL2 input reference frequency range: VCI */
  __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE);
 8007dee:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8007df0:	69aa      	ldr	r2, [r5, #24]
 8007df2:	f023 030c 	bic.w	r3, r3, #12
 8007df6:	4313      	orrs	r3, r2
 8007df8:	62e3      	str	r3, [r4, #44]	@ 0x2c

  /* Configure the PLL2 Clock output(s) */
  __HAL_RCC_PLL2CLKOUT_ENABLE(pll2->PLL2ClockOut);
 8007dfa:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8007dfc:	6a2a      	ldr	r2, [r5, #32]
 8007dfe:	4313      	orrs	r3, r2
 8007e00:	62e3      	str	r3, [r4, #44]	@ 0x2c

  /* Disable PLL2FRACN  */
  __HAL_RCC_PLL2FRACN_DISABLE();
 8007e02:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8007e04:	f023 0310 	bic.w	r3, r3, #16
 8007e08:	62e3      	str	r3, [r4, #44]	@ 0x2c

  /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
  __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
 8007e0a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8007e0c:	69ea      	ldr	r2, [r5, #28]
 8007e0e:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8007e12:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8007e16:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8007e1a:	6423      	str	r3, [r4, #64]	@ 0x40

  /* Enable PLL2FRACN  */
  __HAL_RCC_PLL2FRACN_ENABLE();
 8007e1c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c

  /* Get Start Tick*/
  tickstart = HAL_GetTick();

  /* Wait till PLL2 is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 8007e1e:	4d0e      	ldr	r5, [pc, #56]	@ (8007e58 <RCCEx_PLL2_Config+0xd0>)
  __HAL_RCC_PLL2FRACN_ENABLE();
 8007e20:	f043 0310 	orr.w	r3, r3, #16
 8007e24:	62e3      	str	r3, [r4, #44]	@ 0x2c
  __HAL_RCC_PLL2_ENABLE();
 8007e26:	6823      	ldr	r3, [r4, #0]
 8007e28:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8007e2c:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
 8007e2e:	f7fc fae1 	bl	80043f4 <HAL_GetTick>
 8007e32:	4604      	mov	r4, r0
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 8007e34:	682b      	ldr	r3, [r5, #0]
 8007e36:	011b      	lsls	r3, r3, #4
 8007e38:	d508      	bpl.n	8007e4c <RCCEx_PLL2_Config+0xc4>
    if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8007e3a:	2000      	movs	r0, #0
 8007e3c:	e005      	b.n	8007e4a <RCCEx_PLL2_Config+0xc2>
    if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 8007e3e:	f7fc fad9 	bl	80043f4 <HAL_GetTick>
 8007e42:	1b80      	subs	r0, r0, r6
 8007e44:	2802      	cmp	r0, #2
 8007e46:	d9a9      	bls.n	8007d9c <RCCEx_PLL2_Config+0x14>
      return HAL_TIMEOUT;
 8007e48:	2003      	movs	r0, #3

}
 8007e4a:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 8007e4c:	f7fc fad2 	bl	80043f4 <HAL_GetTick>
 8007e50:	1b00      	subs	r0, r0, r4
 8007e52:	2802      	cmp	r0, #2
 8007e54:	d9ee      	bls.n	8007e34 <RCCEx_PLL2_Config+0xac>
 8007e56:	e7f7      	b.n	8007e48 <RCCEx_PLL2_Config+0xc0>
 8007e58:	46020c00 	.word	0x46020c00
 8007e5c:	80800000 	.word	0x80800000

08007e60 <RCCEx_PLL3_Config>:
  *         contains the configuration parameters as well as VCI clock ranges.
  * @note   PLL3 is temporary disabled to apply new parameters
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3)
{
 8007e60:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_RCC_PLLP_VALUE(pll3->PLL3P));
  assert_param(IS_RCC_PLLQ_VALUE(pll3->PLL3Q));
  assert_param(IS_RCC_PLLR_VALUE(pll3->PLL3R));

  /* Disable  PLL3 */
  __HAL_RCC_PLL3_DISABLE();
 8007e62:	4c33      	ldr	r4, [pc, #204]	@ (8007f30 <RCCEx_PLL3_Config+0xd0>)
{
 8007e64:	4605      	mov	r5, r0
  __HAL_RCC_PLL3_DISABLE();
 8007e66:	6823      	ldr	r3, [r4, #0]
 8007e68:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8007e6c:	6023      	str	r3, [r4, #0]

  /* Get Start Tick*/
  tickstart = HAL_GetTick();
 8007e6e:	f7fc fac1 	bl	80043f4 <HAL_GetTick>
 8007e72:	4606      	mov	r6, r0

  /* Wait till PLL is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 8007e74:	6823      	ldr	r3, [r4, #0]
 8007e76:	009a      	lsls	r2, r3, #2
 8007e78:	d44d      	bmi.n	8007f16 <RCCEx_PLL3_Config+0xb6>
      return HAL_TIMEOUT;
    }
  }

  /* Configure PLL3 multiplication and division factors */
  __HAL_RCC_PLL3_CONFIG(pll3->PLL3Source,
 8007e7a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007e7c:	6829      	ldr	r1, [r5, #0]
 8007e7e:	686a      	ldr	r2, [r5, #4]
 8007e80:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8007e84:	f023 0303 	bic.w	r3, r3, #3
 8007e88:	3a01      	subs	r2, #1
 8007e8a:	430b      	orrs	r3, r1
 8007e8c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007e90:	6323      	str	r3, [r4, #48]	@ 0x30
 8007e92:	68ab      	ldr	r3, [r5, #8]
 8007e94:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 8007e96:	4a27      	ldr	r2, [pc, #156]	@ (8007f34 <RCCEx_PLL3_Config+0xd4>)
 8007e98:	3b01      	subs	r3, #1
 8007e9a:	400a      	ands	r2, r1
 8007e9c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007ea0:	4313      	orrs	r3, r2
 8007ea2:	68ea      	ldr	r2, [r5, #12]
 8007ea4:	3a01      	subs	r2, #1
 8007ea6:	0252      	lsls	r2, r2, #9
 8007ea8:	b292      	uxth	r2, r2
 8007eaa:	4313      	orrs	r3, r2
 8007eac:	692a      	ldr	r2, [r5, #16]
 8007eae:	3a01      	subs	r2, #1
 8007eb0:	0412      	lsls	r2, r2, #16
 8007eb2:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
 8007eb6:	4313      	orrs	r3, r2
 8007eb8:	696a      	ldr	r2, [r5, #20]
 8007eba:	3a01      	subs	r2, #1
 8007ebc:	0612      	lsls	r2, r2, #24
 8007ebe:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
 8007ec2:	4313      	orrs	r3, r2
 8007ec4:	6463      	str	r3, [r4, #68]	@ 0x44
                        pll3->PLL3P,
                        pll3->PLL3Q,
                        pll3->PLL3R);

  /* Select PLL3 input reference frequency range: VCI */
  __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE);
 8007ec6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007ec8:	69aa      	ldr	r2, [r5, #24]
 8007eca:	f023 030c 	bic.w	r3, r3, #12
 8007ece:	4313      	orrs	r3, r2
 8007ed0:	6323      	str	r3, [r4, #48]	@ 0x30

  /* Configure the PLL3 Clock output(s) */
  __HAL_RCC_PLL3CLKOUT_ENABLE(pll3->PLL3ClockOut);
 8007ed2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007ed4:	6a2a      	ldr	r2, [r5, #32]
 8007ed6:	4313      	orrs	r3, r2
 8007ed8:	6323      	str	r3, [r4, #48]	@ 0x30

  /* Disable PLL3FRACN  */
  __HAL_RCC_PLL3FRACN_DISABLE();
 8007eda:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007edc:	f023 0310 	bic.w	r3, r3, #16
 8007ee0:	6323      	str	r3, [r4, #48]	@ 0x30

  /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
  __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
 8007ee2:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8007ee4:	69ea      	ldr	r2, [r5, #28]
 8007ee6:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8007eea:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8007eee:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8007ef2:	64a3      	str	r3, [r4, #72]	@ 0x48

  /* Enable PLL3FRACN  */
  __HAL_RCC_PLL3FRACN_ENABLE();
 8007ef4:	6b23      	ldr	r3, [r4, #48]	@ 0x30

  /* Get Start Tick*/
  tickstart = HAL_GetTick();

  /* Wait till PLL3 is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 8007ef6:	4d0e      	ldr	r5, [pc, #56]	@ (8007f30 <RCCEx_PLL3_Config+0xd0>)
  __HAL_RCC_PLL3FRACN_ENABLE();
 8007ef8:	f043 0310 	orr.w	r3, r3, #16
 8007efc:	6323      	str	r3, [r4, #48]	@ 0x30
  __HAL_RCC_PLL3_ENABLE();
 8007efe:	6823      	ldr	r3, [r4, #0]
 8007f00:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8007f04:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
 8007f06:	f7fc fa75 	bl	80043f4 <HAL_GetTick>
 8007f0a:	4604      	mov	r4, r0
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 8007f0c:	682b      	ldr	r3, [r5, #0]
 8007f0e:	009b      	lsls	r3, r3, #2
 8007f10:	d508      	bpl.n	8007f24 <RCCEx_PLL3_Config+0xc4>
    if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8007f12:	2000      	movs	r0, #0
 8007f14:	e005      	b.n	8007f22 <RCCEx_PLL3_Config+0xc2>
    if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 8007f16:	f7fc fa6d 	bl	80043f4 <HAL_GetTick>
 8007f1a:	1b80      	subs	r0, r0, r6
 8007f1c:	2802      	cmp	r0, #2
 8007f1e:	d9a9      	bls.n	8007e74 <RCCEx_PLL3_Config+0x14>
      return HAL_TIMEOUT;
 8007f20:	2003      	movs	r0, #3
}
 8007f22:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 8007f24:	f7fc fa66 	bl	80043f4 <HAL_GetTick>
 8007f28:	1b00      	subs	r0, r0, r4
 8007f2a:	2802      	cmp	r0, #2
 8007f2c:	d9ee      	bls.n	8007f0c <RCCEx_PLL3_Config+0xac>
 8007f2e:	e7f7      	b.n	8007f20 <RCCEx_PLL3_Config+0xc0>
 8007f30:	46020c00 	.word	0x46020c00
 8007f34:	80800000 	.word	0x80800000

08007f38 <HAL_RCCEx_PeriphCLKConfig>:
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8007f38:	6803      	ldr	r3, [r0, #0]
{
 8007f3a:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8007f3e:	07da      	lsls	r2, r3, #31
{
 8007f40:	4605      	mov	r5, r0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8007f42:	d508      	bpl.n	8007f56 <HAL_RCCEx_PeriphCLKConfig+0x1e>
    __HAL_RCC_USART1_CONFIG(pPeriphClkInit->Usart1ClockSelection);
 8007f44:	49a5      	ldr	r1, [pc, #660]	@ (80081dc <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007f46:	6d00      	ldr	r0, [r0, #80]	@ 0x50
 8007f48:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007f4c:	f022 0203 	bic.w	r2, r2, #3
 8007f50:	4302      	orrs	r2, r0
 8007f52:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8007f56:	079f      	lsls	r7, r3, #30
 8007f58:	d508      	bpl.n	8007f6c <HAL_RCCEx_PeriphCLKConfig+0x34>
    __HAL_RCC_USART2_CONFIG(pPeriphClkInit->Usart2ClockSelection);
 8007f5a:	49a0      	ldr	r1, [pc, #640]	@ (80081dc <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007f5c:	6d68      	ldr	r0, [r5, #84]	@ 0x54
 8007f5e:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007f62:	f022 020c 	bic.w	r2, r2, #12
 8007f66:	4302      	orrs	r2, r0
 8007f68:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8007f6c:	075e      	lsls	r6, r3, #29
 8007f6e:	d508      	bpl.n	8007f82 <HAL_RCCEx_PeriphCLKConfig+0x4a>
    __HAL_RCC_USART3_CONFIG(pPeriphClkInit->Usart3ClockSelection);
 8007f70:	499a      	ldr	r1, [pc, #616]	@ (80081dc <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007f72:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8007f74:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007f78:	f022 0230 	bic.w	r2, r2, #48	@ 0x30
 8007f7c:	4302      	orrs	r2, r0
 8007f7e:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8007f82:	071c      	lsls	r4, r3, #28
 8007f84:	d508      	bpl.n	8007f98 <HAL_RCCEx_PeriphCLKConfig+0x60>
    __HAL_RCC_UART4_CONFIG(pPeriphClkInit->Uart4ClockSelection);
 8007f86:	4995      	ldr	r1, [pc, #596]	@ (80081dc <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007f88:	6de8      	ldr	r0, [r5, #92]	@ 0x5c
 8007f8a:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007f8e:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
 8007f92:	4302      	orrs	r2, r0
 8007f94:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 8007f98:	06d8      	lsls	r0, r3, #27
 8007f9a:	d508      	bpl.n	8007fae <HAL_RCCEx_PeriphCLKConfig+0x76>
    __HAL_RCC_UART5_CONFIG(pPeriphClkInit->Uart5ClockSelection);
 8007f9c:	498f      	ldr	r1, [pc, #572]	@ (80081dc <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007f9e:	6e28      	ldr	r0, [r5, #96]	@ 0x60
 8007fa0:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007fa4:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 8007fa8:	4302      	orrs	r2, r0
 8007faa:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 8007fae:	0099      	lsls	r1, r3, #2
 8007fb0:	d508      	bpl.n	8007fc4 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    __HAL_RCC_USART6_CONFIG(pPeriphClkInit->Usart6ClockSelection);
 8007fb2:	498a      	ldr	r1, [pc, #552]	@ (80081dc <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007fb4:	6e68      	ldr	r0, [r5, #100]	@ 0x64
 8007fb6:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 8007fba:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8007fbe:	4302      	orrs	r2, r0
 8007fc0:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 8007fc4:	069a      	lsls	r2, r3, #26
 8007fc6:	d508      	bpl.n	8007fda <HAL_RCCEx_PeriphCLKConfig+0xa2>
    __HAL_RCC_LPUART1_CONFIG(pPeriphClkInit->Lpuart1ClockSelection);
 8007fc8:	4984      	ldr	r1, [pc, #528]	@ (80081dc <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007fca:	6ea8      	ldr	r0, [r5, #104]	@ 0x68
 8007fcc:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 8007fd0:	f022 0207 	bic.w	r2, r2, #7
 8007fd4:	4302      	orrs	r2, r0
 8007fd6:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8007fda:	065f      	lsls	r7, r3, #25
 8007fdc:	d508      	bpl.n	8007ff0 <HAL_RCCEx_PeriphCLKConfig+0xb8>
    __HAL_RCC_I2C1_CONFIG(pPeriphClkInit->I2c1ClockSelection);
 8007fde:	497f      	ldr	r1, [pc, #508]	@ (80081dc <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007fe0:	6ee8      	ldr	r0, [r5, #108]	@ 0x6c
 8007fe2:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007fe6:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 8007fea:	4302      	orrs	r2, r0
 8007fec:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8007ff0:	061e      	lsls	r6, r3, #24
 8007ff2:	d508      	bpl.n	8008006 <HAL_RCCEx_PeriphCLKConfig+0xce>
    __HAL_RCC_I2C2_CONFIG(pPeriphClkInit->I2c2ClockSelection);
 8007ff4:	4979      	ldr	r1, [pc, #484]	@ (80081dc <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007ff6:	6f28      	ldr	r0, [r5, #112]	@ 0x70
 8007ff8:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007ffc:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8008000:	4302      	orrs	r2, r0
 8008002:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8008006:	05dc      	lsls	r4, r3, #23
 8008008:	d508      	bpl.n	800801c <HAL_RCCEx_PeriphCLKConfig+0xe4>
    __HAL_RCC_I2C3_CONFIG(pPeriphClkInit->I2c3ClockSelection);
 800800a:	4974      	ldr	r1, [pc, #464]	@ (80081dc <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800800c:	6f68      	ldr	r0, [r5, #116]	@ 0x74
 800800e:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 8008012:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
 8008016:	4302      	orrs	r2, r0
 8008018:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 800801c:	0258      	lsls	r0, r3, #9
 800801e:	d508      	bpl.n	8008032 <HAL_RCCEx_PeriphCLKConfig+0xfa>
    __HAL_RCC_I2C4_CONFIG(pPeriphClkInit->I2c4ClockSelection);
 8008020:	496e      	ldr	r1, [pc, #440]	@ (80081dc <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8008022:	6fa8      	ldr	r0, [r5, #120]	@ 0x78
 8008024:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8008028:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 800802c:	4302      	orrs	r2, r0
 800802e:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C5) == RCC_PERIPHCLK_I2C5)
 8008032:	0059      	lsls	r1, r3, #1
 8008034:	d508      	bpl.n	8008048 <HAL_RCCEx_PeriphCLKConfig+0x110>
    __HAL_RCC_I2C5_CONFIG(pPeriphClkInit->I2c5ClockSelection);
 8008036:	4969      	ldr	r1, [pc, #420]	@ (80081dc <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8008038:	6fe8      	ldr	r0, [r5, #124]	@ 0x7c
 800803a:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 800803e:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8008042:	4302      	orrs	r2, r0
 8008044:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C6) == RCC_PERIPHCLK_I2C6)
 8008048:	2b00      	cmp	r3, #0
 800804a:	da09      	bge.n	8008060 <HAL_RCCEx_PeriphCLKConfig+0x128>
    __HAL_RCC_I2C6_CONFIG(pPeriphClkInit->I2c6ClockSelection);
 800804c:	4963      	ldr	r1, [pc, #396]	@ (80081dc <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800804e:	f8d5 0080 	ldr.w	r0, [r5, #128]	@ 0x80
 8008052:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 8008056:	f022 6240 	bic.w	r2, r2, #201326592	@ 0xc000000
 800805a:	4302      	orrs	r2, r0
 800805c:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == (RCC_PERIPHCLK_LPTIM1))
 8008060:	059a      	lsls	r2, r3, #22
 8008062:	d509      	bpl.n	8008078 <HAL_RCCEx_PeriphCLKConfig+0x140>
    __HAL_RCC_LPTIM1_CONFIG(pPeriphClkInit->Lptim1ClockSelection);
 8008064:	495d      	ldr	r1, [pc, #372]	@ (80081dc <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8008066:	f8d5 0084 	ldr.w	r0, [r5, #132]	@ 0x84
 800806a:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 800806e:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 8008072:	4302      	orrs	r2, r0
 8008074:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == (RCC_PERIPHCLK_LPTIM2))
 8008078:	055f      	lsls	r7, r3, #21
 800807a:	d509      	bpl.n	8008090 <HAL_RCCEx_PeriphCLKConfig+0x158>
    __HAL_RCC_LPTIM2_CONFIG(pPeriphClkInit->Lptim2ClockSelection);
 800807c:	4957      	ldr	r1, [pc, #348]	@ (80081dc <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800807e:	f8d5 0088 	ldr.w	r0, [r5, #136]	@ 0x88
 8008082:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8008086:	f422 2240 	bic.w	r2, r2, #786432	@ 0xc0000
 800808a:	4302      	orrs	r2, r0
 800808c:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM34) == (RCC_PERIPHCLK_LPTIM34))
 8008090:	051e      	lsls	r6, r3, #20
 8008092:	d509      	bpl.n	80080a8 <HAL_RCCEx_PeriphCLKConfig+0x170>
    __HAL_RCC_LPTIM34_CONFIG(pPeriphClkInit->Lptim34ClockSelection);
 8008094:	4951      	ldr	r1, [pc, #324]	@ (80081dc <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8008096:	f8d5 008c 	ldr.w	r0, [r5, #140]	@ 0x8c
 800809a:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 800809e:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 80080a2:	4302      	orrs	r2, r0
 80080a4:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if ((((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1))
 80080a8:	049c      	lsls	r4, r3, #18
 80080aa:	d527      	bpl.n	80080fc <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    switch (pPeriphClkInit->Sai1ClockSelection)
 80080ac:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
 80080b0:	2b40      	cmp	r3, #64	@ 0x40
 80080b2:	d025      	beq.n	8008100 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 80080b4:	d814      	bhi.n	80080e0 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 80080b6:	b34b      	cbz	r3, 800810c <HAL_RCCEx_PeriphCLKConfig+0x1d4>
 80080b8:	2b20      	cmp	r3, #32
 80080ba:	d02f      	beq.n	800811c <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 80080bc:	2601      	movs	r6, #1
  if ((((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2))
 80080be:	682b      	ldr	r3, [r5, #0]
 80080c0:	0458      	lsls	r0, r3, #17
 80080c2:	d50b      	bpl.n	80080dc <HAL_RCCEx_PeriphCLKConfig+0x1a4>
    switch (pPeriphClkInit->Sai2ClockSelection)
 80080c4:	f8d5 30a0 	ldr.w	r3, [r5, #160]	@ 0xa0
 80080c8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80080cc:	d058      	beq.n	8008180 <HAL_RCCEx_PeriphCLKConfig+0x248>
 80080ce:	d82a      	bhi.n	8008126 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
 80080d0:	2b00      	cmp	r3, #0
 80080d2:	d05b      	beq.n	800818c <HAL_RCCEx_PeriphCLKConfig+0x254>
 80080d4:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80080d8:	d05e      	beq.n	8008198 <HAL_RCCEx_PeriphCLKConfig+0x260>
 80080da:	2601      	movs	r6, #1
 80080dc:	4634      	mov	r4, r6
 80080de:	e035      	b.n	800814c <HAL_RCCEx_PeriphCLKConfig+0x214>
    switch (pPeriphClkInit->Sai1ClockSelection)
 80080e0:	2b60      	cmp	r3, #96	@ 0x60
 80080e2:	d001      	beq.n	80080e8 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
 80080e4:	2b80      	cmp	r3, #128	@ 0x80
 80080e6:	d1e9      	bne.n	80080bc <HAL_RCCEx_PeriphCLKConfig+0x184>
      __HAL_RCC_SAI1_CONFIG(pPeriphClkInit->Sai1ClockSelection);
 80080e8:	4a3c      	ldr	r2, [pc, #240]	@ (80081dc <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80080ea:	f8d5 109c 	ldr.w	r1, [r5, #156]	@ 0x9c
 80080ee:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 80080f2:	f023 03e0 	bic.w	r3, r3, #224	@ 0xe0
 80080f6:	430b      	orrs	r3, r1
 80080f8:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
 80080fc:	2600      	movs	r6, #0
 80080fe:	e7de      	b.n	80080be <HAL_RCCEx_PeriphCLKConfig+0x186>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8008100:	4a36      	ldr	r2, [pc, #216]	@ (80081dc <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8008102:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8008104:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8008108:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 800810a:	e7ed      	b.n	80080e8 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 800810c:	f105 0008 	add.w	r0, r5, #8
 8008110:	f7ff fe3a 	bl	8007d88 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8008114:	4606      	mov	r6, r0
    if (ret == HAL_OK)
 8008116:	2800      	cmp	r0, #0
 8008118:	d1d1      	bne.n	80080be <HAL_RCCEx_PeriphCLKConfig+0x186>
 800811a:	e7e5      	b.n	80080e8 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 800811c:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8008120:	f7ff fe9e 	bl	8007e60 <RCCEx_PLL3_Config>
 8008124:	e7f6      	b.n	8008114 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
    switch (pPeriphClkInit->Sai2ClockSelection)
 8008126:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800812a:	d002      	beq.n	8008132 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 800812c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8008130:	d1d3      	bne.n	80080da <HAL_RCCEx_PeriphCLKConfig+0x1a2>
    switch (pPeriphClkInit->Sai1ClockSelection)
 8008132:	4634      	mov	r4, r6
    if (ret == HAL_OK)
 8008134:	2c00      	cmp	r4, #0
 8008136:	d134      	bne.n	80081a2 <HAL_RCCEx_PeriphCLKConfig+0x26a>
      __HAL_RCC_SAI2_CONFIG(pPeriphClkInit->Sai2ClockSelection);
 8008138:	4a28      	ldr	r2, [pc, #160]	@ (80081dc <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800813a:	f8d5 10a0 	ldr.w	r1, [r5, #160]	@ 0xa0
 800813e:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8008142:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8008146:	430b      	orrs	r3, r1
 8008148:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADCDAC) == RCC_PERIPHCLK_ADCDAC)
 800814c:	682b      	ldr	r3, [r5, #0]
 800814e:	0419      	lsls	r1, r3, #16
 8008150:	d50a      	bpl.n	8008168 <HAL_RCCEx_PeriphCLKConfig+0x230>
    switch (pPeriphClkInit->AdcDacClockSelection)
 8008152:	f8d5 30b4 	ldr.w	r3, [r5, #180]	@ 0xb4
 8008156:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800815a:	d036      	beq.n	80081ca <HAL_RCCEx_PeriphCLKConfig+0x292>
 800815c:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8008160:	d821      	bhi.n	80081a6 <HAL_RCCEx_PeriphCLKConfig+0x26e>
 8008162:	b332      	cbz	r2, 80081b2 <HAL_RCCEx_PeriphCLKConfig+0x27a>
 8008164:	2601      	movs	r6, #1
 8008166:	4634      	mov	r4, r6
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_MDF1) == RCC_PERIPHCLK_MDF1)
 8008168:	682b      	ldr	r3, [r5, #0]
 800816a:	03da      	lsls	r2, r3, #15
 800816c:	d548      	bpl.n	8008200 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
    switch (pPeriphClkInit->Mdf1ClockSelection)
 800816e:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8008172:	2b04      	cmp	r3, #4
 8008174:	d85a      	bhi.n	800822c <HAL_RCCEx_PeriphCLKConfig+0x2f4>
 8008176:	e8df f003 	tbb	[pc, r3]
 800817a:	3338      	.short	0x3338
 800817c:	3853      	.short	0x3853
 800817e:	38          	.byte	0x38
 800817f:	00          	.byte	0x00
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8008180:	4a16      	ldr	r2, [pc, #88]	@ (80081dc <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8008182:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8008184:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8008188:	6293      	str	r3, [r2, #40]	@ 0x28
        break;
 800818a:	e7d2      	b.n	8008132 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 800818c:	f105 0008 	add.w	r0, r5, #8
 8008190:	f7ff fdfa 	bl	8007d88 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8008194:	4604      	mov	r4, r0
        break;
 8008196:	e7cd      	b.n	8008134 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8008198:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 800819c:	f7ff fe60 	bl	8007e60 <RCCEx_PLL3_Config>
 80081a0:	e7f8      	b.n	8008194 <HAL_RCCEx_PeriphCLKConfig+0x25c>
 80081a2:	4626      	mov	r6, r4
 80081a4:	e7d2      	b.n	800814c <HAL_RCCEx_PeriphCLKConfig+0x214>
    switch (pPeriphClkInit->AdcDacClockSelection)
 80081a6:	f5b2 4f80 	cmp.w	r2, #16384	@ 0x4000
 80081aa:	d002      	beq.n	80081b2 <HAL_RCCEx_PeriphCLKConfig+0x27a>
 80081ac:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 80081b0:	d1d8      	bne.n	8008164 <HAL_RCCEx_PeriphCLKConfig+0x22c>
    if (ret == HAL_OK)
 80081b2:	b984      	cbnz	r4, 80081d6 <HAL_RCCEx_PeriphCLKConfig+0x29e>
      __HAL_RCC_ADCDAC_CONFIG(pPeriphClkInit->AdcDacClockSelection);
 80081b4:	4a09      	ldr	r2, [pc, #36]	@ (80081dc <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80081b6:	f8d5 10b4 	ldr.w	r1, [r5, #180]	@ 0xb4
 80081ba:	f8d2 30e8 	ldr.w	r3, [r2, #232]	@ 0xe8
 80081be:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80081c2:	430b      	orrs	r3, r1
 80081c4:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 80081c8:	e7ce      	b.n	8008168 <HAL_RCCEx_PeriphCLKConfig+0x230>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80081ca:	f105 0008 	add.w	r0, r5, #8
 80081ce:	f7ff fddb 	bl	8007d88 <RCCEx_PLL2_Config>
 80081d2:	4604      	mov	r4, r0
        break;
 80081d4:	e7ed      	b.n	80081b2 <HAL_RCCEx_PeriphCLKConfig+0x27a>
 80081d6:	4626      	mov	r6, r4
 80081d8:	e7c6      	b.n	8008168 <HAL_RCCEx_PeriphCLKConfig+0x230>
 80081da:	bf00      	nop
 80081dc:	46020c00 	.word	0x46020c00
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 80081e0:	4a69      	ldr	r2, [pc, #420]	@ (8008388 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 80081e2:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 80081e4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80081e8:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 80081ea:	bb14      	cbnz	r4, 8008232 <HAL_RCCEx_PeriphCLKConfig+0x2fa>
      __HAL_RCC_MDF1_CONFIG(pPeriphClkInit->Mdf1ClockSelection);
 80081ec:	4a66      	ldr	r2, [pc, #408]	@ (8008388 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 80081ee:	f8d5 1094 	ldr.w	r1, [r5, #148]	@ 0x94
 80081f2:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 80081f6:	f023 0307 	bic.w	r3, r3, #7
 80081fa:	430b      	orrs	r3, r1
 80081fc:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADF1) == RCC_PERIPHCLK_ADF1)
 8008200:	682b      	ldr	r3, [r5, #0]
 8008202:	039b      	lsls	r3, r3, #14
 8008204:	d529      	bpl.n	800825a <HAL_RCCEx_PeriphCLKConfig+0x322>
    switch (pPeriphClkInit->Adf1ClockSelection)
 8008206:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 800820a:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800820e:	d07d      	beq.n	800830c <HAL_RCCEx_PeriphCLKConfig+0x3d4>
 8008210:	d811      	bhi.n	8008236 <HAL_RCCEx_PeriphCLKConfig+0x2fe>
 8008212:	b1b3      	cbz	r3, 8008242 <HAL_RCCEx_PeriphCLKConfig+0x30a>
 8008214:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8008218:	d072      	beq.n	8008300 <HAL_RCCEx_PeriphCLKConfig+0x3c8>
 800821a:	2601      	movs	r6, #1
 800821c:	4634      	mov	r4, r6
 800821e:	e01c      	b.n	800825a <HAL_RCCEx_PeriphCLKConfig+0x322>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8008220:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8008224:	f7ff fe1c 	bl	8007e60 <RCCEx_PLL3_Config>
 8008228:	4604      	mov	r4, r0
        break;
 800822a:	e7de      	b.n	80081ea <HAL_RCCEx_PeriphCLKConfig+0x2b2>
    switch (pPeriphClkInit->Mdf1ClockSelection)
 800822c:	2601      	movs	r6, #1
 800822e:	4634      	mov	r4, r6
 8008230:	e7e6      	b.n	8008200 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
 8008232:	4626      	mov	r6, r4
 8008234:	e7e4      	b.n	8008200 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
    switch (pPeriphClkInit->Adf1ClockSelection)
 8008236:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 800823a:	d002      	beq.n	8008242 <HAL_RCCEx_PeriphCLKConfig+0x30a>
 800823c:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8008240:	d1eb      	bne.n	800821a <HAL_RCCEx_PeriphCLKConfig+0x2e2>
    if (ret == HAL_OK)
 8008242:	2c00      	cmp	r4, #0
 8008244:	d168      	bne.n	8008318 <HAL_RCCEx_PeriphCLKConfig+0x3e0>
      __HAL_RCC_ADF1_CONFIG(pPeriphClkInit->Adf1ClockSelection);
 8008246:	4a50      	ldr	r2, [pc, #320]	@ (8008388 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8008248:	f8d5 1098 	ldr.w	r1, [r5, #152]	@ 0x98
 800824c:	f8d2 30e8 	ldr.w	r3, [r2, #232]	@ 0xe8
 8008250:	f423 23e0 	bic.w	r3, r3, #458752	@ 0x70000
 8008254:	430b      	orrs	r3, r1
 8008256:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
  if ((pPeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 800825a:	682b      	ldr	r3, [r5, #0]
 800825c:	035f      	lsls	r7, r3, #13
 800825e:	d53c      	bpl.n	80082da <HAL_RCCEx_PeriphCLKConfig+0x3a2>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8008260:	4b49      	ldr	r3, [pc, #292]	@ (8008388 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8008262:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8008266:	0750      	lsls	r0, r2, #29
 8008268:	d458      	bmi.n	800831c <HAL_RCCEx_PeriphCLKConfig+0x3e4>
      pwrclkchanged = SET;
 800826a:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 800826c:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8008270:	f042 0204 	orr.w	r2, r2, #4
 8008274:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 8008278:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800827c:	f003 0304 	and.w	r3, r3, #4
 8008280:	9301      	str	r3, [sp, #4]
 8008282:	9b01      	ldr	r3, [sp, #4]
    SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 8008284:	f8df 8104 	ldr.w	r8, [pc, #260]	@ 800838c <HAL_RCCEx_PeriphCLKConfig+0x454>
 8008288:	f8d8 3028 	ldr.w	r3, [r8, #40]	@ 0x28
 800828c:	f043 0301 	orr.w	r3, r3, #1
 8008290:	f8c8 3028 	str.w	r3, [r8, #40]	@ 0x28
    tickstart = HAL_GetTick();
 8008294:	f7fc f8ae 	bl	80043f4 <HAL_GetTick>
 8008298:	4681      	mov	r9, r0
    while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 800829a:	f8d8 3028 	ldr.w	r3, [r8, #40]	@ 0x28
 800829e:	07d9      	lsls	r1, r3, #31
 80082a0:	d53e      	bpl.n	8008320 <HAL_RCCEx_PeriphCLKConfig+0x3e8>
    if (ret == HAL_OK)
 80082a2:	2c00      	cmp	r4, #0
 80082a4:	d16d      	bne.n	8008382 <HAL_RCCEx_PeriphCLKConfig+0x44a>
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 80082a6:	4b38      	ldr	r3, [pc, #224]	@ (8008388 <HAL_RCCEx_PeriphCLKConfig+0x450>)
      if ((tmpregister != RCC_RTCCLKSOURCE_NO_CLK) && (tmpregister != pPeriphClkInit->RTCClockSelection))
 80082a8:	f8d5 20d0 	ldr.w	r2, [r5, #208]	@ 0xd0
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 80082ac:	f8d3 10f0 	ldr.w	r1, [r3, #240]	@ 0xf0
      if ((tmpregister != RCC_RTCCLKSOURCE_NO_CLK) && (tmpregister != pPeriphClkInit->RTCClockSelection))
 80082b0:	f411 7140 	ands.w	r1, r1, #768	@ 0x300
 80082b4:	d13d      	bne.n	8008332 <HAL_RCCEx_PeriphCLKConfig+0x3fa>
        __HAL_RCC_RTC_CONFIG(pPeriphClkInit->RTCClockSelection);
 80082b6:	4a34      	ldr	r2, [pc, #208]	@ (8008388 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 80082b8:	f8d5 10d0 	ldr.w	r1, [r5, #208]	@ 0xd0
 80082bc:	f8d2 30f0 	ldr.w	r3, [r2, #240]	@ 0xf0
 80082c0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80082c4:	430b      	orrs	r3, r1
 80082c6:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
    if (pwrclkchanged == SET)
 80082ca:	b137      	cbz	r7, 80082da <HAL_RCCEx_PeriphCLKConfig+0x3a2>
      __HAL_RCC_PWR_CLK_DISABLE();
 80082cc:	4a2e      	ldr	r2, [pc, #184]	@ (8008388 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 80082ce:	f8d2 3094 	ldr.w	r3, [r2, #148]	@ 0x94
 80082d2:	f023 0304 	bic.w	r3, r3, #4
 80082d6:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ICLK) == RCC_PERIPHCLK_ICLK)
 80082da:	682b      	ldr	r3, [r5, #0]
 80082dc:	02df      	lsls	r7, r3, #11
 80082de:	d567      	bpl.n	80083b0 <HAL_RCCEx_PeriphCLKConfig+0x478>
    switch (pPeriphClkInit->IclkClockSelection)
 80082e0:	f8d5 30ac 	ldr.w	r3, [r5, #172]	@ 0xac
 80082e4:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80082e8:	f000 8165 	beq.w	80085b6 <HAL_RCCEx_PeriphCLKConfig+0x67e>
 80082ec:	d850      	bhi.n	8008390 <HAL_RCCEx_PeriphCLKConfig+0x458>
 80082ee:	2b00      	cmp	r3, #0
 80082f0:	d051      	beq.n	8008396 <HAL_RCCEx_PeriphCLKConfig+0x45e>
 80082f2:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 80082f6:	f000 8158 	beq.w	80085aa <HAL_RCCEx_PeriphCLKConfig+0x672>
 80082fa:	2601      	movs	r6, #1
 80082fc:	4634      	mov	r4, r6
 80082fe:	e057      	b.n	80083b0 <HAL_RCCEx_PeriphCLKConfig+0x478>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8008300:	4a21      	ldr	r2, [pc, #132]	@ (8008388 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8008302:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8008304:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8008308:	6293      	str	r3, [r2, #40]	@ 0x28
        break;
 800830a:	e79a      	b.n	8008242 <HAL_RCCEx_PeriphCLKConfig+0x30a>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 800830c:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8008310:	f7ff fda6 	bl	8007e60 <RCCEx_PLL3_Config>
 8008314:	4604      	mov	r4, r0
        break;
 8008316:	e794      	b.n	8008242 <HAL_RCCEx_PeriphCLKConfig+0x30a>
 8008318:	4626      	mov	r6, r4
 800831a:	e79e      	b.n	800825a <HAL_RCCEx_PeriphCLKConfig+0x322>
    FlagStatus       pwrclkchanged = RESET;
 800831c:	2700      	movs	r7, #0
 800831e:	e7b1      	b.n	8008284 <HAL_RCCEx_PeriphCLKConfig+0x34c>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8008320:	f7fc f868 	bl	80043f4 <HAL_GetTick>
 8008324:	eba0 0009 	sub.w	r0, r0, r9
 8008328:	2802      	cmp	r0, #2
 800832a:	d9b6      	bls.n	800829a <HAL_RCCEx_PeriphCLKConfig+0x362>
        ret = HAL_TIMEOUT;
 800832c:	2603      	movs	r6, #3
 800832e:	4634      	mov	r4, r6
 8008330:	e7cb      	b.n	80082ca <HAL_RCCEx_PeriphCLKConfig+0x392>
      if ((tmpregister != RCC_RTCCLKSOURCE_NO_CLK) && (tmpregister != pPeriphClkInit->RTCClockSelection))
 8008332:	4291      	cmp	r1, r2
 8008334:	d011      	beq.n	800835a <HAL_RCCEx_PeriphCLKConfig+0x422>
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 8008336:	f8d3 20f0 	ldr.w	r2, [r3, #240]	@ 0xf0
        __HAL_RCC_BACKUPRESET_FORCE();
 800833a:	f8d3 10f0 	ldr.w	r1, [r3, #240]	@ 0xf0
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 800833e:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
 8008342:	f441 3180 	orr.w	r1, r1, #65536	@ 0x10000
 8008346:	f8c3 10f0 	str.w	r1, [r3, #240]	@ 0xf0
        __HAL_RCC_BACKUPRESET_RELEASE();
 800834a:	f8d3 10f0 	ldr.w	r1, [r3, #240]	@ 0xf0
 800834e:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
 8008352:	f8c3 10f0 	str.w	r1, [r3, #240]	@ 0xf0
        RCC->BDCR = tmpregister;
 8008356:	f8c3 20f0 	str.w	r2, [r3, #240]	@ 0xf0
      if (HAL_IS_BIT_SET(tmpregister, RCC_BDCR_LSEON))
 800835a:	07d2      	lsls	r2, r2, #31
 800835c:	d5ab      	bpl.n	80082b6 <HAL_RCCEx_PeriphCLKConfig+0x37e>
        tickstart = HAL_GetTick();
 800835e:	f7fc f849 	bl	80043f4 <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8008362:	f241 3a88 	movw	sl, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 8008366:	4680      	mov	r8, r0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8008368:	f8df 901c 	ldr.w	r9, [pc, #28]	@ 8008388 <HAL_RCCEx_PeriphCLKConfig+0x450>
 800836c:	f8d9 30f0 	ldr.w	r3, [r9, #240]	@ 0xf0
 8008370:	079b      	lsls	r3, r3, #30
 8008372:	d4a0      	bmi.n	80082b6 <HAL_RCCEx_PeriphCLKConfig+0x37e>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8008374:	f7fc f83e 	bl	80043f4 <HAL_GetTick>
 8008378:	eba0 0008 	sub.w	r0, r0, r8
 800837c:	4550      	cmp	r0, sl
 800837e:	d9f5      	bls.n	800836c <HAL_RCCEx_PeriphCLKConfig+0x434>
 8008380:	e7d4      	b.n	800832c <HAL_RCCEx_PeriphCLKConfig+0x3f4>
 8008382:	4626      	mov	r6, r4
 8008384:	e7a1      	b.n	80082ca <HAL_RCCEx_PeriphCLKConfig+0x392>
 8008386:	bf00      	nop
 8008388:	46020c00 	.word	0x46020c00
 800838c:	46020800 	.word	0x46020800
    switch (pPeriphClkInit->IclkClockSelection)
 8008390:	f1b3 6f40 	cmp.w	r3, #201326592	@ 0xc000000
 8008394:	d1b1      	bne.n	80082fa <HAL_RCCEx_PeriphCLKConfig+0x3c2>
    if (ret == HAL_OK)
 8008396:	2c00      	cmp	r4, #0
 8008398:	f040 8113 	bne.w	80085c2 <HAL_RCCEx_PeriphCLKConfig+0x68a>
      __HAL_RCC_CLK48_CONFIG(pPeriphClkInit->IclkClockSelection);
 800839c:	4ab8      	ldr	r2, [pc, #736]	@ (8008680 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 800839e:	f8d5 10ac 	ldr.w	r1, [r5, #172]	@ 0xac
 80083a2:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 80083a6:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 80083aa:	430b      	orrs	r3, r1
 80083ac:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
 80083b0:	682b      	ldr	r3, [r5, #0]
 80083b2:	0318      	lsls	r0, r3, #12
 80083b4:	d513      	bpl.n	80083de <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (pPeriphClkInit->RngClockSelection)
 80083b6:	f8d5 10a4 	ldr.w	r1, [r5, #164]	@ 0xa4
 80083ba:	f431 5280 	bics.w	r2, r1, #4096	@ 0x1000
 80083be:	d003      	beq.n	80083c8 <HAL_RCCEx_PeriphCLKConfig+0x490>
 80083c0:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
 80083c4:	f040 80ff 	bne.w	80085c6 <HAL_RCCEx_PeriphCLKConfig+0x68e>
    if (ret == HAL_OK)
 80083c8:	2c00      	cmp	r4, #0
 80083ca:	f040 80ff 	bne.w	80085cc <HAL_RCCEx_PeriphCLKConfig+0x694>
      __HAL_RCC_RNG_CONFIG(pPeriphClkInit->RngClockSelection);
 80083ce:	48ac      	ldr	r0, [pc, #688]	@ (8008680 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 80083d0:	f8d0 20e4 	ldr.w	r2, [r0, #228]	@ 0xe4
 80083d4:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 80083d8:	430a      	orrs	r2, r1
 80083da:	f8c0 20e4 	str.w	r2, [r0, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAES) == RCC_PERIPHCLK_SAES)
 80083de:	04d9      	lsls	r1, r3, #19
 80083e0:	d509      	bpl.n	80083f6 <HAL_RCCEx_PeriphCLKConfig+0x4be>
    __HAL_RCC_SAES_CONFIG(pPeriphClkInit->SaesClockSelection);
 80083e2:	49a7      	ldr	r1, [pc, #668]	@ (8008680 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 80083e4:	f8d5 00a8 	ldr.w	r0, [r5, #168]	@ 0xa8
 80083e8:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 80083ec:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80083f0:	4302      	orrs	r2, r0
 80083f2:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == (RCC_PERIPHCLK_SDMMC))
 80083f6:	029a      	lsls	r2, r3, #10
 80083f8:	d510      	bpl.n	800841c <HAL_RCCEx_PeriphCLKConfig+0x4e4>
    if (pPeriphClkInit->SdmmcClockSelection == RCC_SDMMCCLKSOURCE_PLL1)
 80083fa:	f8d5 00b0 	ldr.w	r0, [r5, #176]	@ 0xb0
 80083fe:	49a0      	ldr	r1, [pc, #640]	@ (8008680 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8008400:	f5b0 4f80 	cmp.w	r0, #16384	@ 0x4000
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8008404:	bf02      	ittt	eq
 8008406:	6a8a      	ldreq	r2, [r1, #40]	@ 0x28
 8008408:	f442 3280 	orreq.w	r2, r2, #65536	@ 0x10000
 800840c:	628a      	streq	r2, [r1, #40]	@ 0x28
    __HAL_RCC_SDMMC_CONFIG(pPeriphClkInit->SdmmcClockSelection);
 800840e:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 8008412:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8008416:	4302      	orrs	r2, r0
 8008418:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI1) == RCC_PERIPHCLK_SPI1)
 800841c:	021f      	lsls	r7, r3, #8
 800841e:	d509      	bpl.n	8008434 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
    __HAL_RCC_SPI1_CONFIG(pPeriphClkInit->Spi1ClockSelection);
 8008420:	4997      	ldr	r1, [pc, #604]	@ (8008680 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8008422:	f8d5 00c4 	ldr.w	r0, [r5, #196]	@ 0xc4
 8008426:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 800842a:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
 800842e:	4302      	orrs	r2, r0
 8008430:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI2) == RCC_PERIPHCLK_SPI2)
 8008434:	01d8      	lsls	r0, r3, #7
 8008436:	d509      	bpl.n	800844c <HAL_RCCEx_PeriphCLKConfig+0x514>
    __HAL_RCC_SPI2_CONFIG(pPeriphClkInit->Spi2ClockSelection);
 8008438:	4991      	ldr	r1, [pc, #580]	@ (8008680 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 800843a:	f8d5 00c8 	ldr.w	r0, [r5, #200]	@ 0xc8
 800843e:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8008442:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8008446:	4302      	orrs	r2, r0
 8008448:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI3) == RCC_PERIPHCLK_SPI3)
 800844c:	0199      	lsls	r1, r3, #6
 800844e:	d509      	bpl.n	8008464 <HAL_RCCEx_PeriphCLKConfig+0x52c>
    __HAL_RCC_SPI3_CONFIG(pPeriphClkInit->Spi3ClockSelection);
 8008450:	498b      	ldr	r1, [pc, #556]	@ (8008680 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8008452:	f8d5 00cc 	ldr.w	r0, [r5, #204]	@ 0xcc
 8008456:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 800845a:	f022 0218 	bic.w	r2, r2, #24
 800845e:	4302      	orrs	r2, r0
 8008460:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_OSPI) == RCC_PERIPHCLK_OSPI)
 8008464:	015a      	lsls	r2, r3, #5
 8008466:	d517      	bpl.n	8008498 <HAL_RCCEx_PeriphCLKConfig+0x560>
    if (pPeriphClkInit->OspiClockSelection == RCC_OSPICLKSOURCE_PLL1)
 8008468:	f8d5 30bc 	ldr.w	r3, [r5, #188]	@ 0xbc
 800846c:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8008470:	f040 80ae 	bne.w	80085d0 <HAL_RCCEx_PeriphCLKConfig+0x698>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008474:	4a82      	ldr	r2, [pc, #520]	@ (8008680 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8008476:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8008478:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800847c:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 800847e:	2c00      	cmp	r4, #0
 8008480:	f040 80b0 	bne.w	80085e4 <HAL_RCCEx_PeriphCLKConfig+0x6ac>
      __HAL_RCC_OSPI_CONFIG(pPeriphClkInit->OspiClockSelection);
 8008484:	4a7e      	ldr	r2, [pc, #504]	@ (8008680 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8008486:	f8d5 10bc 	ldr.w	r1, [r5, #188]	@ 0xbc
 800848a:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 800848e:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8008492:	430b      	orrs	r3, r1
 8008494:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HSPI) == RCC_PERIPHCLK_HSPI)
 8008498:	686b      	ldr	r3, [r5, #4]
 800849a:	07db      	lsls	r3, r3, #31
 800849c:	d510      	bpl.n	80084c0 <HAL_RCCEx_PeriphCLKConfig+0x588>
    switch (pPeriphClkInit->HspiClockSelection)
 800849e:	f8d5 30c0 	ldr.w	r3, [r5, #192]	@ 0xc0
 80084a2:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 80084a6:	f000 80b9 	beq.w	800861c <HAL_RCCEx_PeriphCLKConfig+0x6e4>
 80084aa:	f200 809d 	bhi.w	80085e8 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
 80084ae:	2b00      	cmp	r3, #0
 80084b0:	f000 80a8 	beq.w	8008604 <HAL_RCCEx_PeriphCLKConfig+0x6cc>
 80084b4:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80084b8:	f000 809f 	beq.w	80085fa <HAL_RCCEx_PeriphCLKConfig+0x6c2>
 80084bc:	2601      	movs	r6, #1
 80084be:	4634      	mov	r4, r6
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN1) == (RCC_PERIPHCLK_FDCAN1))
 80084c0:	682b      	ldr	r3, [r5, #0]
 80084c2:	011f      	lsls	r7, r3, #4
 80084c4:	d50e      	bpl.n	80084e4 <HAL_RCCEx_PeriphCLKConfig+0x5ac>
    switch (pPeriphClkInit->Fdcan1ClockSelection)
 80084c6:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
 80084ca:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80084ce:	f000 80ad 	beq.w	800862c <HAL_RCCEx_PeriphCLKConfig+0x6f4>
 80084d2:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 80084d6:	f000 80ba 	beq.w	800864e <HAL_RCCEx_PeriphCLKConfig+0x716>
 80084da:	2b00      	cmp	r3, #0
 80084dc:	f000 80ab 	beq.w	8008636 <HAL_RCCEx_PeriphCLKConfig+0x6fe>
 80084e0:	2601      	movs	r6, #1
 80084e2:	4634      	mov	r4, r6
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DAC1) == RCC_PERIPHCLK_DAC1)
 80084e4:	e9d5 3100 	ldrd	r3, r1, [r5]
 80084e8:	00d8      	lsls	r0, r3, #3
 80084ea:	d509      	bpl.n	8008500 <HAL_RCCEx_PeriphCLKConfig+0x5c8>
    __HAL_RCC_DAC1_CONFIG(pPeriphClkInit->Dac1ClockSelection);
 80084ec:	4a64      	ldr	r2, [pc, #400]	@ (8008680 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 80084ee:	f8d5 00b8 	ldr.w	r0, [r5, #184]	@ 0xb8
 80084f2:	f8d2 30e8 	ldr.w	r3, [r2, #232]	@ 0xe8
 80084f6:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 80084fa:	4303      	orrs	r3, r0
 80084fc:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8008500:	0789      	lsls	r1, r1, #30
 8008502:	d51a      	bpl.n	800853a <HAL_RCCEx_PeriphCLKConfig+0x602>
    switch (pPeriphClkInit->LtdcClockSelection)
 8008504:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
 8008508:	2b00      	cmp	r3, #0
 800850a:	f000 80a8 	beq.w	800865e <HAL_RCCEx_PeriphCLKConfig+0x726>
 800850e:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8008512:	f040 80a9 	bne.w	8008668 <HAL_RCCEx_PeriphCLKConfig+0x730>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8008516:	f105 0008 	add.w	r0, r5, #8
 800851a:	f7ff fc35 	bl	8007d88 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 800851e:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 8008520:	2800      	cmp	r0, #0
 8008522:	f040 80a4 	bne.w	800866e <HAL_RCCEx_PeriphCLKConfig+0x736>
      __HAL_RCC_LTDC_CONFIG(pPeriphClkInit->LtdcClockSelection);
 8008526:	4a56      	ldr	r2, [pc, #344]	@ (8008680 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8008528:	f8d5 10d4 	ldr.w	r1, [r5, #212]	@ 0xd4
 800852c:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8008530:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8008534:	430b      	orrs	r3, r1
 8008536:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DSI) == RCC_PERIPHCLK_DSI)
 800853a:	686b      	ldr	r3, [r5, #4]
 800853c:	075a      	lsls	r2, r3, #29
 800853e:	d514      	bpl.n	800856a <HAL_RCCEx_PeriphCLKConfig+0x632>
    if (pPeriphClkInit->DsiClockSelection == RCC_DSICLKSOURCE_PLL3)
 8008540:	f8d5 30d8 	ldr.w	r3, [r5, #216]	@ 0xd8
 8008544:	b923      	cbnz	r3, 8008550 <HAL_RCCEx_PeriphCLKConfig+0x618>
      ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8008546:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 800854a:	f7ff fc89 	bl	8007e60 <RCCEx_PLL3_Config>
 800854e:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 8008550:	2c00      	cmp	r4, #0
 8008552:	f040 808e 	bne.w	8008672 <HAL_RCCEx_PeriphCLKConfig+0x73a>
      __HAL_RCC_DSI_CONFIG(pPeriphClkInit->DsiClockSelection);
 8008556:	4a4a      	ldr	r2, [pc, #296]	@ (8008680 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8008558:	f8d5 10d8 	ldr.w	r1, [r5, #216]	@ 0xd8
 800855c:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8008560:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8008564:	430b      	orrs	r3, r1
 8008566:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USBPHY) == RCC_PERIPHCLK_USBPHY)
 800856a:	686b      	ldr	r3, [r5, #4]
 800856c:	071b      	lsls	r3, r3, #28
 800856e:	d517      	bpl.n	80085a0 <HAL_RCCEx_PeriphCLKConfig+0x668>
    switch (pPeriphClkInit->UsbPhyClockSelection)
 8008570:	f8d5 20dc 	ldr.w	r2, [r5, #220]	@ 0xdc
 8008574:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8008578:	d009      	beq.n	800858e <HAL_RCCEx_PeriphCLKConfig+0x656>
 800857a:	d87c      	bhi.n	8008676 <HAL_RCCEx_PeriphCLKConfig+0x73e>
 800857c:	b13a      	cbz	r2, 800858e <HAL_RCCEx_PeriphCLKConfig+0x656>
 800857e:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
 8008582:	d17b      	bne.n	800867c <HAL_RCCEx_PeriphCLKConfig+0x744>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8008584:	493e      	ldr	r1, [pc, #248]	@ (8008680 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8008586:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
 8008588:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800858c:	628b      	str	r3, [r1, #40]	@ 0x28
    if (ret == HAL_OK)
 800858e:	b944      	cbnz	r4, 80085a2 <HAL_RCCEx_PeriphCLKConfig+0x66a>
      __HAL_RCC_USBPHY_CONFIG(pPeriphClkInit->UsbPhyClockSelection);
 8008590:	493b      	ldr	r1, [pc, #236]	@ (8008680 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8008592:	f8d1 30e4 	ldr.w	r3, [r1, #228]	@ 0xe4
 8008596:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
 800859a:	4313      	orrs	r3, r2
 800859c:	f8c1 30e4 	str.w	r3, [r1, #228]	@ 0xe4
 80085a0:	4634      	mov	r4, r6
}
 80085a2:	4620      	mov	r0, r4
 80085a4:	b002      	add	sp, #8
 80085a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80085aa:	f105 0008 	add.w	r0, r5, #8
 80085ae:	f7ff fbeb 	bl	8007d88 <RCCEx_PLL2_Config>
 80085b2:	4604      	mov	r4, r0
        break;
 80085b4:	e6ef      	b.n	8008396 <HAL_RCCEx_PeriphCLKConfig+0x45e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80085b6:	4a32      	ldr	r2, [pc, #200]	@ (8008680 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 80085b8:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 80085ba:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80085be:	6293      	str	r3, [r2, #40]	@ 0x28
        break;
 80085c0:	e6e9      	b.n	8008396 <HAL_RCCEx_PeriphCLKConfig+0x45e>
 80085c2:	4626      	mov	r6, r4
 80085c4:	e6f4      	b.n	80083b0 <HAL_RCCEx_PeriphCLKConfig+0x478>
    switch (pPeriphClkInit->RngClockSelection)
 80085c6:	2601      	movs	r6, #1
 80085c8:	4634      	mov	r4, r6
 80085ca:	e708      	b.n	80083de <HAL_RCCEx_PeriphCLKConfig+0x4a6>
 80085cc:	4626      	mov	r6, r4
 80085ce:	e706      	b.n	80083de <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    if (pPeriphClkInit->OspiClockSelection == RCC_OSPICLKSOURCE_PLL2)
 80085d0:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 80085d4:	f47f af53 	bne.w	800847e <HAL_RCCEx_PeriphCLKConfig+0x546>
      ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80085d8:	f105 0008 	add.w	r0, r5, #8
 80085dc:	f7ff fbd4 	bl	8007d88 <RCCEx_PLL2_Config>
 80085e0:	4604      	mov	r4, r0
 80085e2:	e74c      	b.n	800847e <HAL_RCCEx_PeriphCLKConfig+0x546>
 80085e4:	4626      	mov	r6, r4
 80085e6:	e757      	b.n	8008498 <HAL_RCCEx_PeriphCLKConfig+0x560>
    switch (pPeriphClkInit->HspiClockSelection)
 80085e8:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 80085ec:	f47f af66 	bne.w	80084bc <HAL_RCCEx_PeriphCLKConfig+0x584>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80085f0:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 80085f4:	f7ff fc34 	bl	8007e60 <RCCEx_PLL3_Config>
 80085f8:	e014      	b.n	8008624 <HAL_RCCEx_PeriphCLKConfig+0x6ec>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80085fa:	4a21      	ldr	r2, [pc, #132]	@ (8008680 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 80085fc:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 80085fe:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8008602:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 8008604:	b984      	cbnz	r4, 8008628 <HAL_RCCEx_PeriphCLKConfig+0x6f0>
      __HAL_RCC_HSPI_CONFIG(pPeriphClkInit->HspiClockSelection);
 8008606:	4a1e      	ldr	r2, [pc, #120]	@ (8008680 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8008608:	f8d5 10c0 	ldr.w	r1, [r5, #192]	@ 0xc0
 800860c:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8008610:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8008614:	430b      	orrs	r3, r1
 8008616:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 800861a:	e751      	b.n	80084c0 <HAL_RCCEx_PeriphCLKConfig+0x588>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 800861c:	f105 0008 	add.w	r0, r5, #8
 8008620:	f7ff fbb2 	bl	8007d88 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8008624:	4604      	mov	r4, r0
        break;
 8008626:	e7ed      	b.n	8008604 <HAL_RCCEx_PeriphCLKConfig+0x6cc>
 8008628:	4626      	mov	r6, r4
 800862a:	e749      	b.n	80084c0 <HAL_RCCEx_PeriphCLKConfig+0x588>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800862c:	4a14      	ldr	r2, [pc, #80]	@ (8008680 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 800862e:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8008630:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8008634:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 8008636:	b984      	cbnz	r4, 800865a <HAL_RCCEx_PeriphCLKConfig+0x722>
      __HAL_RCC_FDCAN1_CONFIG(pPeriphClkInit->Fdcan1ClockSelection);
 8008638:	4a11      	ldr	r2, [pc, #68]	@ (8008680 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 800863a:	f8d5 1090 	ldr.w	r1, [r5, #144]	@ 0x90
 800863e:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 8008642:	f023 7340 	bic.w	r3, r3, #50331648	@ 0x3000000
 8008646:	430b      	orrs	r3, r1
 8008648:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 800864c:	e74a      	b.n	80084e4 <HAL_RCCEx_PeriphCLKConfig+0x5ac>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 800864e:	f105 0008 	add.w	r0, r5, #8
 8008652:	f7ff fb99 	bl	8007d88 <RCCEx_PLL2_Config>
 8008656:	4604      	mov	r4, r0
        break;
 8008658:	e7ed      	b.n	8008636 <HAL_RCCEx_PeriphCLKConfig+0x6fe>
 800865a:	4626      	mov	r6, r4
 800865c:	e742      	b.n	80084e4 <HAL_RCCEx_PeriphCLKConfig+0x5ac>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 800865e:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8008662:	f7ff fbfd 	bl	8007e60 <RCCEx_PLL3_Config>
 8008666:	e75a      	b.n	800851e <HAL_RCCEx_PeriphCLKConfig+0x5e6>
    switch (pPeriphClkInit->LtdcClockSelection)
 8008668:	2601      	movs	r6, #1
 800866a:	4634      	mov	r4, r6
 800866c:	e765      	b.n	800853a <HAL_RCCEx_PeriphCLKConfig+0x602>
 800866e:	4606      	mov	r6, r0
 8008670:	e763      	b.n	800853a <HAL_RCCEx_PeriphCLKConfig+0x602>
 8008672:	4626      	mov	r6, r4
 8008674:	e779      	b.n	800856a <HAL_RCCEx_PeriphCLKConfig+0x632>
    switch (pPeriphClkInit->UsbPhyClockSelection)
 8008676:	f1b2 4f40 	cmp.w	r2, #3221225472	@ 0xc0000000
 800867a:	e782      	b.n	8008582 <HAL_RCCEx_PeriphCLKConfig+0x64a>
 800867c:	2401      	movs	r4, #1
 800867e:	e790      	b.n	80085a2 <HAL_RCCEx_PeriphCLKConfig+0x66a>
 8008680:	46020c00 	.word	0x46020c00

08008684 <HAL_RCCEx_GetPLL1ClockFreq>:
  pll1n = (RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N);
 8008684:	4a48      	ldr	r2, [pc, #288]	@ (80087a8 <HAL_RCCEx_GetPLL1ClockFreq+0x124>)
{
 8008686:	b510      	push	{r4, lr}
  pll1n = (RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N);
 8008688:	6b53      	ldr	r3, [r2, #52]	@ 0x34
  pll1source = (RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1SRC);
 800868a:	6a91      	ldr	r1, [r2, #40]	@ 0x28
  pll1n = (RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N);
 800868c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008690:	ee07 3a90 	vmov	s15, r3
  pll1m = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1M) >> RCC_PLL1CFGR_PLL1M_Pos) + 1U;
 8008694:	6a93      	ldr	r3, [r2, #40]	@ 0x28
  pll1fracen = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1FRACEN) >> RCC_PLL1CFGR_PLL1FRACEN_Pos);
 8008696:	6a94      	ldr	r4, [r2, #40]	@ 0x28
  pll1m = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1M) >> RCC_PLL1CFGR_PLL1M_Pos) + 1U;
 8008698:	f3c3 2303 	ubfx	r3, r3, #8, #4
 800869c:	3301      	adds	r3, #1
 800869e:	ee06 3a90 	vmov	s13, r3
  fracn1 = (float_t)(uint32_t)(pll1fracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> \
 80086a2:	6b93      	ldr	r3, [r2, #56]	@ 0x38
  pll1fracen = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1FRACEN) >> RCC_PLL1CFGR_PLL1FRACEN_Pos);
 80086a4:	f3c4 1400 	ubfx	r4, r4, #4, #1
  fracn1 = (float_t)(uint32_t)(pll1fracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> \
 80086a8:	f3c3 03cc 	ubfx	r3, r3, #3, #13
 80086ac:	4363      	muls	r3, r4
 80086ae:	ee07 3a10 	vmov	s14, r3
  pll1source = (RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1SRC);
 80086b2:	f001 0103 	and.w	r1, r1, #3
  switch (pll1source)
 80086b6:	2902      	cmp	r1, #2
  fracn1 = (float_t)(uint32_t)(pll1fracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> \
 80086b8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
  switch (pll1source)
 80086bc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80086c0:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 80087ac <HAL_RCCEx_GetPLL1ClockFreq+0x128>
 80086c4:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 80086c8:	d05b      	beq.n	8008782 <HAL_RCCEx_GetPLL1ClockFreq+0xfe>
 80086ca:	2903      	cmp	r1, #3
 80086cc:	d059      	beq.n	8008782 <HAL_RCCEx_GetPLL1ClockFreq+0xfe>
      pll1vco = ((float_t)MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> RCC_ICSCR1_MSISRANGE_Pos)] / (float_t)pll1m) * \
 80086ce:	6893      	ldr	r3, [r2, #8]
 80086d0:	4937      	ldr	r1, [pc, #220]	@ (80087b0 <HAL_RCCEx_GetPLL1ClockFreq+0x12c>)
 80086d2:	021b      	lsls	r3, r3, #8
 80086d4:	bf4b      	itete	mi
 80086d6:	6893      	ldrmi	r3, [r2, #8]
 80086d8:	f8d2 30f4 	ldrpl.w	r3, [r2, #244]	@ 0xf4
 80086dc:	0f1b      	lsrmi	r3, r3, #28
 80086de:	f3c3 3303 	ubfxpl	r3, r3, #12, #4
 80086e2:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80086e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80086ea:	ed93 5a00 	vldr	s10, [r3]
                ((float_t)pll1n + (fracn1 / (float_t)0x2000) + (float_t)1);
 80086ee:	eee7 7a25 	vfma.f32	s15, s14, s11
      pll1vco = ((float_t)MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> RCC_ICSCR1_MSISRANGE_Pos)] / (float_t)pll1m) * \
 80086f2:	eeb8 5a45 	vcvt.f32.u32	s10, s10
                ((float_t)pll1n + (fracn1 / (float_t)0x2000) + (float_t)1);
 80086f6:	ee77 7a86 	vadd.f32	s15, s15, s12
      pll1vco = ((float_t)MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> RCC_ICSCR1_MSISRANGE_Pos)] / (float_t)pll1m) * \
 80086fa:	eec5 4a26 	vdiv.f32	s9, s10, s13
 80086fe:	ee67 7aa4 	vmul.f32	s15, s15, s9
  if (__HAL_RCC_GET_PLLCLKOUT_CONFIG(RCC_PLL1_DIVP) != 0U)
 8008702:	4a29      	ldr	r2, [pc, #164]	@ (80087a8 <HAL_RCCEx_GetPLL1ClockFreq+0x124>)
 8008704:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8008706:	f413 3380 	ands.w	r3, r3, #65536	@ 0x10000
 800870a:	d00e      	beq.n	800872a <HAL_RCCEx_GetPLL1ClockFreq+0xa6>
    PLL1_Clocks->PLL1_P_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & \
 800870c:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 800870e:	f3c3 2346 	ubfx	r3, r3, #9, #7
 8008712:	ee06 3a90 	vmov	s13, r3
 8008716:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                                                                   RCC_PLL1DIVR_PLL1P) >> RCC_PLL1DIVR_PLL1P_Pos) + \
 800871a:	ee76 6a86 	vadd.f32	s13, s13, s12
    PLL1_Clocks->PLL1_P_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & \
 800871e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8008722:	eebc 7ac7 	vcvt.u32.f32	s14, s14
 8008726:	ee17 3a10 	vmov	r3, s14
  if (__HAL_RCC_GET_PLLCLKOUT_CONFIG(RCC_PLL1_DIVQ) != 0U)
 800872a:	4a1f      	ldr	r2, [pc, #124]	@ (80087a8 <HAL_RCCEx_GetPLL1ClockFreq+0x124>)
 800872c:	6003      	str	r3, [r0, #0]
 800872e:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8008730:	f413 3300 	ands.w	r3, r3, #131072	@ 0x20000
 8008734:	d00e      	beq.n	8008754 <HAL_RCCEx_GetPLL1ClockFreq+0xd0>
    PLL1_Clocks->PLL1_Q_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & \
 8008736:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8008738:	f3c3 4306 	ubfx	r3, r3, #16, #7
 800873c:	ee06 3a90 	vmov	s13, r3
 8008740:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                                                                   RCC_PLL1DIVR_PLL1Q) >> RCC_PLL1DIVR_PLL1Q_Pos) + \
 8008744:	ee76 6a86 	vadd.f32	s13, s13, s12
    PLL1_Clocks->PLL1_Q_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & \
 8008748:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800874c:	eebc 7ac7 	vcvt.u32.f32	s14, s14
 8008750:	ee17 3a10 	vmov	r3, s14
  if (__HAL_RCC_GET_PLLCLKOUT_CONFIG(RCC_PLL1_DIVR) != 0U)
 8008754:	4a14      	ldr	r2, [pc, #80]	@ (80087a8 <HAL_RCCEx_GetPLL1ClockFreq+0x124>)
 8008756:	6043      	str	r3, [r0, #4]
 8008758:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 800875a:	f413 2380 	ands.w	r3, r3, #262144	@ 0x40000
 800875e:	d00e      	beq.n	800877e <HAL_RCCEx_GetPLL1ClockFreq+0xfa>
    PLL1_Clocks->PLL1_R_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & \
 8008760:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8008762:	f3c3 6306 	ubfx	r3, r3, #24, #7
 8008766:	ee06 3a90 	vmov	s13, r3
 800876a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                                                                   RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) + \
 800876e:	ee76 6a86 	vadd.f32	s13, s13, s12
    PLL1_Clocks->PLL1_R_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & \
 8008772:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8008776:	eefc 7ac7 	vcvt.u32.f32	s15, s14
 800877a:	ee17 3a90 	vmov	r3, s15
 800877e:	6083      	str	r3, [r0, #8]
}
 8008780:	bd10      	pop	{r4, pc}
      pll1vco = ((float_t)HSE_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8008782:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 80087b4 <HAL_RCCEx_GetPLL1ClockFreq+0x130>
 8008786:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8008788:	ee87 5aa6 	vdiv.f32	s10, s15, s13
 800878c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008790:	ee07 3a90 	vmov	s15, r3
 8008794:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008798:	eee7 7a25 	vfma.f32	s15, s14, s11
                                                         (fracn1 / (float_t)0x2000) + (float_t)1);
 800879c:	ee77 7a86 	vadd.f32	s15, s15, s12
      pll1vco = ((float_t)HSE_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 80087a0:	ee67 7a85 	vmul.f32	s15, s15, s10
      break;
 80087a4:	e7ad      	b.n	8008702 <HAL_RCCEx_GetPLL1ClockFreq+0x7e>
 80087a6:	bf00      	nop
 80087a8:	46020c00 	.word	0x46020c00
 80087ac:	39000000 	.word	0x39000000
 80087b0:	0802700c 	.word	0x0802700c
 80087b4:	4b742400 	.word	0x4b742400

080087b8 <HAL_RCCEx_GetPLL2ClockFreq>:
  pll2n = (RCC->PLL2DIVR & RCC_PLL2DIVR_PLL2N);
 80087b8:	4a48      	ldr	r2, [pc, #288]	@ (80088dc <HAL_RCCEx_GetPLL2ClockFreq+0x124>)
{
 80087ba:	b510      	push	{r4, lr}
  pll2n = (RCC->PLL2DIVR & RCC_PLL2DIVR_PLL2N);
 80087bc:	6bd3      	ldr	r3, [r2, #60]	@ 0x3c
  pll2source = (RCC->PLL2CFGR & RCC_PLL2CFGR_PLL2SRC);
 80087be:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
  pll2n = (RCC->PLL2DIVR & RCC_PLL2DIVR_PLL2N);
 80087c0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80087c4:	ee07 3a90 	vmov	s15, r3
  pll2m = ((RCC->PLL2CFGR & RCC_PLL2CFGR_PLL2M) >> RCC_PLL2CFGR_PLL2M_Pos) + 1U;
 80087c8:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
  pll2fracen = ((RCC->PLL2CFGR & RCC_PLL2CFGR_PLL2FRACEN) >> RCC_PLL2CFGR_PLL2FRACEN_Pos);
 80087ca:	6ad4      	ldr	r4, [r2, #44]	@ 0x2c
  pll2m = ((RCC->PLL2CFGR & RCC_PLL2CFGR_PLL2M) >> RCC_PLL2CFGR_PLL2M_Pos) + 1U;
 80087cc:	f3c3 2303 	ubfx	r3, r3, #8, #4
 80087d0:	3301      	adds	r3, #1
 80087d2:	ee06 3a90 	vmov	s13, r3
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_PLL2FRACN) >> \
 80087d6:	6c13      	ldr	r3, [r2, #64]	@ 0x40
  pll2fracen = ((RCC->PLL2CFGR & RCC_PLL2CFGR_PLL2FRACEN) >> RCC_PLL2CFGR_PLL2FRACEN_Pos);
 80087d8:	f3c4 1400 	ubfx	r4, r4, #4, #1
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_PLL2FRACN) >> \
 80087dc:	f3c3 03cc 	ubfx	r3, r3, #3, #13
 80087e0:	4363      	muls	r3, r4
 80087e2:	ee07 3a10 	vmov	s14, r3
  pll2source = (RCC->PLL2CFGR & RCC_PLL2CFGR_PLL2SRC);
 80087e6:	f001 0103 	and.w	r1, r1, #3
  switch (pll2source)
 80087ea:	2902      	cmp	r1, #2
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_PLL2FRACN) >> \
 80087ec:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
  switch (pll2source)
 80087f0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80087f4:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 80088e0 <HAL_RCCEx_GetPLL2ClockFreq+0x128>
 80087f8:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 80087fc:	d05b      	beq.n	80088b6 <HAL_RCCEx_GetPLL2ClockFreq+0xfe>
 80087fe:	2903      	cmp	r1, #3
 8008800:	d059      	beq.n	80088b6 <HAL_RCCEx_GetPLL2ClockFreq+0xfe>
      pll2vco = ((float_t)MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> RCC_ICSCR1_MSISRANGE_Pos)] / (float_t) pll2m) \
 8008802:	6893      	ldr	r3, [r2, #8]
 8008804:	4937      	ldr	r1, [pc, #220]	@ (80088e4 <HAL_RCCEx_GetPLL2ClockFreq+0x12c>)
 8008806:	021b      	lsls	r3, r3, #8
 8008808:	bf4b      	itete	mi
 800880a:	6893      	ldrmi	r3, [r2, #8]
 800880c:	f8d2 30f4 	ldrpl.w	r3, [r2, #244]	@ 0xf4
 8008810:	0f1b      	lsrmi	r3, r3, #28
 8008812:	f3c3 3303 	ubfxpl	r3, r3, #12, #4
 8008816:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800881a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800881e:	ed93 5a00 	vldr	s10, [r3]
                * ((float_t)pll2n + (fracn2 / (float_t)0x2000) + (float_t)1);
 8008822:	eee7 7a25 	vfma.f32	s15, s14, s11
      pll2vco = ((float_t)MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> RCC_ICSCR1_MSISRANGE_Pos)] / (float_t) pll2m) \
 8008826:	eeb8 5a45 	vcvt.f32.u32	s10, s10
                * ((float_t)pll2n + (fracn2 / (float_t)0x2000) + (float_t)1);
 800882a:	ee77 7a86 	vadd.f32	s15, s15, s12
      pll2vco = ((float_t)MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> RCC_ICSCR1_MSISRANGE_Pos)] / (float_t) pll2m) \
 800882e:	eec5 4a26 	vdiv.f32	s9, s10, s13
 8008832:	ee67 7aa4 	vmul.f32	s15, s15, s9
  if (__HAL_RCC_GET_PLL2CLKOUT_CONFIG(RCC_PLL2_DIVP) != 0U)
 8008836:	4a29      	ldr	r2, [pc, #164]	@ (80088dc <HAL_RCCEx_GetPLL2ClockFreq+0x124>)
 8008838:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
 800883a:	f413 3380 	ands.w	r3, r3, #65536	@ 0x10000
 800883e:	d00e      	beq.n	800885e <HAL_RCCEx_GetPLL2ClockFreq+0xa6>
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & \
 8008840:	6bd3      	ldr	r3, [r2, #60]	@ 0x3c
 8008842:	f3c3 2346 	ubfx	r3, r3, #9, #7
 8008846:	ee06 3a90 	vmov	s13, r3
 800884a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                                                                   RCC_PLL2DIVR_PLL2P) >> RCC_PLL2DIVR_PLL2P_Pos) + \
 800884e:	ee76 6a86 	vadd.f32	s13, s13, s12
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & \
 8008852:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8008856:	eebc 7ac7 	vcvt.u32.f32	s14, s14
 800885a:	ee17 3a10 	vmov	r3, s14
  if (__HAL_RCC_GET_PLL2CLKOUT_CONFIG(RCC_PLL2_DIVQ) != 0U)
 800885e:	4a1f      	ldr	r2, [pc, #124]	@ (80088dc <HAL_RCCEx_GetPLL2ClockFreq+0x124>)
 8008860:	6003      	str	r3, [r0, #0]
 8008862:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
 8008864:	f413 3300 	ands.w	r3, r3, #131072	@ 0x20000
 8008868:	d00e      	beq.n	8008888 <HAL_RCCEx_GetPLL2ClockFreq+0xd0>
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & \
 800886a:	6bd3      	ldr	r3, [r2, #60]	@ 0x3c
 800886c:	f3c3 4306 	ubfx	r3, r3, #16, #7
 8008870:	ee06 3a90 	vmov	s13, r3
 8008874:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                                                                   RCC_PLL2DIVR_PLL2Q) >> RCC_PLL2DIVR_PLL2Q_Pos) + \
 8008878:	ee76 6a86 	vadd.f32	s13, s13, s12
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & \
 800887c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8008880:	eebc 7ac7 	vcvt.u32.f32	s14, s14
 8008884:	ee17 3a10 	vmov	r3, s14
  if (__HAL_RCC_GET_PLL2CLKOUT_CONFIG(RCC_PLL2_DIVR) != 0U)
 8008888:	4a14      	ldr	r2, [pc, #80]	@ (80088dc <HAL_RCCEx_GetPLL2ClockFreq+0x124>)
 800888a:	6043      	str	r3, [r0, #4]
 800888c:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
 800888e:	f413 2380 	ands.w	r3, r3, #262144	@ 0x40000
 8008892:	d00e      	beq.n	80088b2 <HAL_RCCEx_GetPLL2ClockFreq+0xfa>
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & \
 8008894:	6bd3      	ldr	r3, [r2, #60]	@ 0x3c
 8008896:	f3c3 6306 	ubfx	r3, r3, #24, #7
 800889a:	ee06 3a90 	vmov	s13, r3
 800889e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                                                                   RCC_PLL2DIVR_PLL2R) >> RCC_PLL2DIVR_PLL2R_Pos) + \
 80088a2:	ee76 6a86 	vadd.f32	s13, s13, s12
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & \
 80088a6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80088aa:	eefc 7ac7 	vcvt.u32.f32	s15, s14
 80088ae:	ee17 3a90 	vmov	r3, s15
 80088b2:	6083      	str	r3, [r0, #8]
}
 80088b4:	bd10      	pop	{r4, pc}
      pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_PLL2N) + \
 80088b6:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 80088e8 <HAL_RCCEx_GetPLL2ClockFreq+0x130>
 80088ba:	6bd3      	ldr	r3, [r2, #60]	@ 0x3c
 80088bc:	ee87 5aa6 	vdiv.f32	s10, s15, s13
 80088c0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80088c4:	ee07 3a90 	vmov	s15, r3
 80088c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80088cc:	eee7 7a25 	vfma.f32	s15, s14, s11
                                                         (fracn2 / (float_t)0x2000) + (float_t)1);
 80088d0:	ee77 7a86 	vadd.f32	s15, s15, s12
      pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_PLL2N) + \
 80088d4:	ee67 7a85 	vmul.f32	s15, s15, s10
      break;
 80088d8:	e7ad      	b.n	8008836 <HAL_RCCEx_GetPLL2ClockFreq+0x7e>
 80088da:	bf00      	nop
 80088dc:	46020c00 	.word	0x46020c00
 80088e0:	39000000 	.word	0x39000000
 80088e4:	0802700c 	.word	0x0802700c
 80088e8:	4b742400 	.word	0x4b742400

080088ec <HAL_RCCEx_GetPLL3ClockFreq>:
  pll3n = (RCC->PLL3DIVR & RCC_PLL3DIVR_PLL3N);
 80088ec:	4a48      	ldr	r2, [pc, #288]	@ (8008a10 <HAL_RCCEx_GetPLL3ClockFreq+0x124>)
{
 80088ee:	b510      	push	{r4, lr}
  pll3n = (RCC->PLL3DIVR & RCC_PLL3DIVR_PLL3N);
 80088f0:	6c53      	ldr	r3, [r2, #68]	@ 0x44
  pll3source = (RCC->PLL3CFGR & RCC_PLL3CFGR_PLL3SRC);
 80088f2:	6b11      	ldr	r1, [r2, #48]	@ 0x30
  pll3n = (RCC->PLL3DIVR & RCC_PLL3DIVR_PLL3N);
 80088f4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80088f8:	ee07 3a90 	vmov	s15, r3
  pll3m = ((RCC->PLL3CFGR & RCC_PLL3CFGR_PLL3M) >> RCC_PLL3CFGR_PLL3M_Pos) + 1U;
 80088fc:	6b13      	ldr	r3, [r2, #48]	@ 0x30
  pll3fracen = ((RCC->PLL3CFGR & RCC_PLL3CFGR_PLL3FRACEN) >> RCC_PLL3CFGR_PLL3FRACEN_Pos);
 80088fe:	6b14      	ldr	r4, [r2, #48]	@ 0x30
  pll3m = ((RCC->PLL3CFGR & RCC_PLL3CFGR_PLL3M) >> RCC_PLL3CFGR_PLL3M_Pos) + 1U;
 8008900:	f3c3 2303 	ubfx	r3, r3, #8, #4
 8008904:	3301      	adds	r3, #1
 8008906:	ee06 3a90 	vmov	s13, r3
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_PLL3FRACN) >> \
 800890a:	6c93      	ldr	r3, [r2, #72]	@ 0x48
  pll3fracen = ((RCC->PLL3CFGR & RCC_PLL3CFGR_PLL3FRACEN) >> RCC_PLL3CFGR_PLL3FRACEN_Pos);
 800890c:	f3c4 1400 	ubfx	r4, r4, #4, #1
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_PLL3FRACN) >> \
 8008910:	f3c3 03cc 	ubfx	r3, r3, #3, #13
 8008914:	4363      	muls	r3, r4
 8008916:	ee07 3a10 	vmov	s14, r3
  pll3source = (RCC->PLL3CFGR & RCC_PLL3CFGR_PLL3SRC);
 800891a:	f001 0103 	and.w	r1, r1, #3
  switch (pll3source)
 800891e:	2902      	cmp	r1, #2
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_PLL3FRACN) >> \
 8008920:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
  switch (pll3source)
 8008924:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8008928:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 8008a14 <HAL_RCCEx_GetPLL3ClockFreq+0x128>
 800892c:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8008930:	d05b      	beq.n	80089ea <HAL_RCCEx_GetPLL3ClockFreq+0xfe>
 8008932:	2903      	cmp	r1, #3
 8008934:	d059      	beq.n	80089ea <HAL_RCCEx_GetPLL3ClockFreq+0xfe>
      pll3vco = ((float_t)MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> RCC_ICSCR1_MSISRANGE_Pos)] / (float_t)pll3m) * \
 8008936:	6893      	ldr	r3, [r2, #8]
 8008938:	4937      	ldr	r1, [pc, #220]	@ (8008a18 <HAL_RCCEx_GetPLL3ClockFreq+0x12c>)
 800893a:	021b      	lsls	r3, r3, #8
 800893c:	bf4b      	itete	mi
 800893e:	6893      	ldrmi	r3, [r2, #8]
 8008940:	f8d2 30f4 	ldrpl.w	r3, [r2, #244]	@ 0xf4
 8008944:	0f1b      	lsrmi	r3, r3, #28
 8008946:	f3c3 3303 	ubfxpl	r3, r3, #12, #4
 800894a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800894e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008952:	ed93 5a00 	vldr	s10, [r3]
                ((float_t)pll3n + (fracn3 / (float_t)0x2000) + (float_t)1);
 8008956:	eee7 7a25 	vfma.f32	s15, s14, s11
      pll3vco = ((float_t)MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> RCC_ICSCR1_MSISRANGE_Pos)] / (float_t)pll3m) * \
 800895a:	eeb8 5a45 	vcvt.f32.u32	s10, s10
                ((float_t)pll3n + (fracn3 / (float_t)0x2000) + (float_t)1);
 800895e:	ee77 7a86 	vadd.f32	s15, s15, s12
      pll3vco = ((float_t)MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> RCC_ICSCR1_MSISRANGE_Pos)] / (float_t)pll3m) * \
 8008962:	eec5 4a26 	vdiv.f32	s9, s10, s13
 8008966:	ee67 7aa4 	vmul.f32	s15, s15, s9
  if (__HAL_RCC_GET_PLL3CLKOUT_CONFIG(RCC_PLL3_DIVP) != 0U)
 800896a:	4a29      	ldr	r2, [pc, #164]	@ (8008a10 <HAL_RCCEx_GetPLL3ClockFreq+0x124>)
 800896c:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 800896e:	f413 3380 	ands.w	r3, r3, #65536	@ 0x10000
 8008972:	d00e      	beq.n	8008992 <HAL_RCCEx_GetPLL3ClockFreq+0xa6>
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & \
 8008974:	6c53      	ldr	r3, [r2, #68]	@ 0x44
 8008976:	f3c3 2346 	ubfx	r3, r3, #9, #7
 800897a:	ee06 3a90 	vmov	s13, r3
 800897e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                                                                   RCC_PLL3DIVR_PLL3P) >> RCC_PLL3DIVR_PLL3P_Pos) + \
 8008982:	ee76 6a86 	vadd.f32	s13, s13, s12
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & \
 8008986:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800898a:	eebc 7ac7 	vcvt.u32.f32	s14, s14
 800898e:	ee17 3a10 	vmov	r3, s14
  if (__HAL_RCC_GET_PLL3CLKOUT_CONFIG(RCC_PLL3_DIVQ) != 0U)
 8008992:	4a1f      	ldr	r2, [pc, #124]	@ (8008a10 <HAL_RCCEx_GetPLL3ClockFreq+0x124>)
 8008994:	6003      	str	r3, [r0, #0]
 8008996:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8008998:	f413 3300 	ands.w	r3, r3, #131072	@ 0x20000
 800899c:	d00e      	beq.n	80089bc <HAL_RCCEx_GetPLL3ClockFreq+0xd0>
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & \
 800899e:	6c53      	ldr	r3, [r2, #68]	@ 0x44
 80089a0:	f3c3 4306 	ubfx	r3, r3, #16, #7
 80089a4:	ee06 3a90 	vmov	s13, r3
 80089a8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                                                                   RCC_PLL3DIVR_PLL3Q) >> RCC_PLL3DIVR_PLL3Q_Pos) + \
 80089ac:	ee76 6a86 	vadd.f32	s13, s13, s12
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & \
 80089b0:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80089b4:	eebc 7ac7 	vcvt.u32.f32	s14, s14
 80089b8:	ee17 3a10 	vmov	r3, s14
  if (__HAL_RCC_GET_PLL3CLKOUT_CONFIG(RCC_PLL3_DIVR) != 0U)
 80089bc:	4a14      	ldr	r2, [pc, #80]	@ (8008a10 <HAL_RCCEx_GetPLL3ClockFreq+0x124>)
 80089be:	6043      	str	r3, [r0, #4]
 80089c0:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 80089c2:	f413 2380 	ands.w	r3, r3, #262144	@ 0x40000
 80089c6:	d00e      	beq.n	80089e6 <HAL_RCCEx_GetPLL3ClockFreq+0xfa>
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & \
 80089c8:	6c53      	ldr	r3, [r2, #68]	@ 0x44
 80089ca:	f3c3 6306 	ubfx	r3, r3, #24, #7
 80089ce:	ee06 3a90 	vmov	s13, r3
 80089d2:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                                                                   RCC_PLL3DIVR_PLL3R) >> RCC_PLL3DIVR_PLL3R_Pos) + \
 80089d6:	ee76 6a86 	vadd.f32	s13, s13, s12
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & \
 80089da:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80089de:	eefc 7ac7 	vcvt.u32.f32	s15, s14
 80089e2:	ee17 3a90 	vmov	r3, s15
 80089e6:	6083      	str	r3, [r0, #8]
}
 80089e8:	bd10      	pop	{r4, pc}
      pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_PLL3N) + \
 80089ea:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 8008a1c <HAL_RCCEx_GetPLL3ClockFreq+0x130>
 80089ee:	6c53      	ldr	r3, [r2, #68]	@ 0x44
 80089f0:	ee87 5aa6 	vdiv.f32	s10, s15, s13
 80089f4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80089f8:	ee07 3a90 	vmov	s15, r3
 80089fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008a00:	eee7 7a25 	vfma.f32	s15, s14, s11
                                                         (fracn3 / (float_t)0x2000) + (float_t)1);
 8008a04:	ee77 7a86 	vadd.f32	s15, s15, s12
      pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_PLL3N) + \
 8008a08:	ee67 7a85 	vmul.f32	s15, s15, s10
      break;
 8008a0c:	e7ad      	b.n	800896a <HAL_RCCEx_GetPLL3ClockFreq+0x7e>
 8008a0e:	bf00      	nop
 8008a10:	46020c00 	.word	0x46020c00
 8008a14:	39000000 	.word	0x39000000
 8008a18:	0802700c 	.word	0x0802700c
 8008a1c:	4b742400 	.word	0x4b742400

08008a20 <HAL_RCCEx_GetPeriphCLKFreq>:
{
 8008a20:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8008a22:	f5a0 3200 	sub.w	r2, r0, #131072	@ 0x20000
 8008a26:	430a      	orrs	r2, r1
 8008a28:	4603      	mov	r3, r0
 8008a2a:	f000 83c8 	beq.w	80091be <HAL_RCCEx_GetPeriphCLKFreq+0x79e>
 8008a2e:	4ab9      	ldr	r2, [pc, #740]	@ (8008d14 <HAL_RCCEx_GetPeriphCLKFreq+0x2f4>)
 8008a30:	4290      	cmp	r0, r2
 8008a32:	f171 0200 	sbcs.w	r2, r1, #0
 8008a36:	d27d      	bcs.n	8008b34 <HAL_RCCEx_GetPeriphCLKFreq+0x114>
 8008a38:	f5a0 7280 	sub.w	r2, r0, #256	@ 0x100
 8008a3c:	430a      	orrs	r2, r1
 8008a3e:	f000 8449 	beq.w	80092d4 <HAL_RCCEx_GetPeriphCLKFreq+0x8b4>
 8008a42:	f240 1201 	movw	r2, #257	@ 0x101
 8008a46:	4290      	cmp	r0, r2
 8008a48:	f171 0200 	sbcs.w	r2, r1, #0
 8008a4c:	d238      	bcs.n	8008ac0 <HAL_RCCEx_GetPeriphCLKFreq+0xa0>
 8008a4e:	f1a0 0210 	sub.w	r2, r0, #16
 8008a52:	430a      	orrs	r2, r1
 8008a54:	f000 82d1 	beq.w	8008ffa <HAL_RCCEx_GetPeriphCLKFreq+0x5da>
 8008a58:	2811      	cmp	r0, #17
 8008a5a:	f171 0200 	sbcs.w	r2, r1, #0
 8008a5e:	d21c      	bcs.n	8008a9a <HAL_RCCEx_GetPeriphCLKFreq+0x7a>
 8008a60:	1e42      	subs	r2, r0, #1
 8008a62:	f141 30ff 	adc.w	r0, r1, #4294967295
 8008a66:	2a08      	cmp	r2, #8
 8008a68:	f170 0000 	sbcs.w	r0, r0, #0
 8008a6c:	f080 86b5 	bcs.w	80097da <HAL_RCCEx_GetPeriphCLKFreq+0xdba>
 8008a70:	3b01      	subs	r3, #1
 8008a72:	f141 31ff 	adc.w	r1, r1, #4294967295
 8008a76:	2a08      	cmp	r2, #8
 8008a78:	f171 0100 	sbcs.w	r1, r1, #0
 8008a7c:	f080 86b0 	bcs.w	80097e0 <HAL_RCCEx_GetPeriphCLKFreq+0xdc0>
 8008a80:	2a07      	cmp	r2, #7
 8008a82:	f200 86ad 	bhi.w	80097e0 <HAL_RCCEx_GetPeriphCLKFreq+0xdc0>
 8008a86:	e8df f012 	tbh	[pc, r2, lsl #1]
 8008a8a:	022d      	.short	0x022d
 8008a8c:	06ab0251 	.word	0x06ab0251
 8008a90:	06ab0273 	.word	0x06ab0273
 8008a94:	06ab06ab 	.word	0x06ab06ab
 8008a98:	029b      	.short	0x029b
 8008a9a:	f1a0 0240 	sub.w	r2, r0, #64	@ 0x40
 8008a9e:	430a      	orrs	r2, r1
 8008aa0:	f000 83ba 	beq.w	8009218 <HAL_RCCEx_GetPeriphCLKFreq+0x7f8>
 8008aa4:	f1a0 0280 	sub.w	r2, r0, #128	@ 0x80
 8008aa8:	430a      	orrs	r2, r1
 8008aaa:	f000 83e7 	beq.w	800927c <HAL_RCCEx_GetPeriphCLKFreq+0x85c>
 8008aae:	f1a0 0320 	sub.w	r3, r0, #32
 8008ab2:	430b      	orrs	r3, r1
 8008ab4:	f000 82e0 	beq.w	8009078 <HAL_RCCEx_GetPeriphCLKFreq+0x658>
          frequency = 0U;
 8008ab8:	2000      	movs	r0, #0
}
 8008aba:	b005      	add	sp, #20
 8008abc:	f85d fb04 	ldr.w	pc, [sp], #4
 8008ac0:	f5a0 5200 	sub.w	r2, r0, #8192	@ 0x2000
 8008ac4:	430a      	orrs	r2, r1
 8008ac6:	f000 813f 	beq.w	8008d48 <HAL_RCCEx_GetPeriphCLKFreq+0x328>
 8008aca:	f242 0201 	movw	r2, #8193	@ 0x2001
 8008ace:	4290      	cmp	r0, r2
 8008ad0:	f171 0200 	sbcs.w	r2, r1, #0
 8008ad4:	d21d      	bcs.n	8008b12 <HAL_RCCEx_GetPeriphCLKFreq+0xf2>
 8008ad6:	f5a0 6200 	sub.w	r2, r0, #2048	@ 0x800
 8008ada:	430a      	orrs	r2, r1
 8008adc:	f000 8485 	beq.w	80093ea <HAL_RCCEx_GetPeriphCLKFreq+0x9ca>
 8008ae0:	f640 0201 	movw	r2, #2049	@ 0x801
 8008ae4:	4290      	cmp	r0, r2
 8008ae6:	f171 0200 	sbcs.w	r2, r1, #0
 8008aea:	d20b      	bcs.n	8008b04 <HAL_RCCEx_GetPeriphCLKFreq+0xe4>
 8008aec:	f5a0 7200 	sub.w	r2, r0, #512	@ 0x200
 8008af0:	430a      	orrs	r2, r1
 8008af2:	f000 84bd 	beq.w	8009470 <HAL_RCCEx_GetPeriphCLKFreq+0xa50>
 8008af6:	f5a0 6380 	sub.w	r3, r0, #1024	@ 0x400
 8008afa:	430b      	orrs	r3, r1
 8008afc:	f000 84f9 	beq.w	80094f2 <HAL_RCCEx_GetPeriphCLKFreq+0xad2>
          frequency = 0U;
 8008b00:	2000      	movs	r0, #0
 8008b02:	e7da      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8008b04:	f5a0 5380 	sub.w	r3, r0, #4096	@ 0x1000
 8008b08:	430b      	orrs	r3, r1
 8008b0a:	f000 8166 	beq.w	8008dda <HAL_RCCEx_GetPeriphCLKFreq+0x3ba>
 8008b0e:	2000      	movs	r0, #0
 8008b10:	e7d3      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8008b12:	f5a0 4200 	sub.w	r2, r0, #32768	@ 0x8000
 8008b16:	430a      	orrs	r2, r1
 8008b18:	f000 82e1 	beq.w	80090de <HAL_RCCEx_GetPeriphCLKFreq+0x6be>
 8008b1c:	f5a0 3280 	sub.w	r2, r0, #65536	@ 0x10000
 8008b20:	430a      	orrs	r2, r1
 8008b22:	f000 831d 	beq.w	8009160 <HAL_RCCEx_GetPeriphCLKFreq+0x740>
 8008b26:	f5a0 4380 	sub.w	r3, r0, #16384	@ 0x4000
 8008b2a:	430b      	orrs	r3, r1
 8008b2c:	f000 8136 	beq.w	8008d9c <HAL_RCCEx_GetPeriphCLKFreq+0x37c>
 8008b30:	2000      	movs	r0, #0
 8008b32:	e7c2      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8008b34:	f100 427c 	add.w	r2, r0, #4227858432	@ 0xfc000000
 8008b38:	430a      	orrs	r2, r1
 8008b3a:	f000 85ca 	beq.w	80096d2 <HAL_RCCEx_GetPeriphCLKFreq+0xcb2>
 8008b3e:	4a76      	ldr	r2, [pc, #472]	@ (8008d18 <HAL_RCCEx_GetPeriphCLKFreq+0x2f8>)
 8008b40:	4290      	cmp	r0, r2
 8008b42:	f171 0200 	sbcs.w	r2, r1, #0
 8008b46:	d237      	bcs.n	8008bb8 <HAL_RCCEx_GetPeriphCLKFreq+0x198>
 8008b48:	f5a0 0280 	sub.w	r2, r0, #4194304	@ 0x400000
 8008b4c:	430a      	orrs	r2, r1
 8008b4e:	f000 83f4 	beq.w	800933a <HAL_RCCEx_GetPeriphCLKFreq+0x91a>
 8008b52:	4a72      	ldr	r2, [pc, #456]	@ (8008d1c <HAL_RCCEx_GetPeriphCLKFreq+0x2fc>)
 8008b54:	4290      	cmp	r0, r2
 8008b56:	f171 0200 	sbcs.w	r2, r1, #0
 8008b5a:	d21c      	bcs.n	8008b96 <HAL_RCCEx_GetPeriphCLKFreq+0x176>
 8008b5c:	f5a0 1280 	sub.w	r2, r0, #1048576	@ 0x100000
 8008b60:	430a      	orrs	r2, r1
 8008b62:	f000 814f 	beq.w	8008e04 <HAL_RCCEx_GetPeriphCLKFreq+0x3e4>
 8008b66:	4a6e      	ldr	r2, [pc, #440]	@ (8008d20 <HAL_RCCEx_GetPeriphCLKFreq+0x300>)
 8008b68:	4290      	cmp	r0, r2
 8008b6a:	f171 0200 	sbcs.w	r2, r1, #0
 8008b6e:	d20b      	bcs.n	8008b88 <HAL_RCCEx_GetPeriphCLKFreq+0x168>
 8008b70:	f5a0 2280 	sub.w	r2, r0, #262144	@ 0x40000
 8008b74:	430a      	orrs	r2, r1
 8008b76:	f000 80b0 	beq.w	8008cda <HAL_RCCEx_GetPeriphCLKFreq+0x2ba>
 8008b7a:	f5a0 2300 	sub.w	r3, r0, #524288	@ 0x80000
 8008b7e:	430b      	orrs	r3, r1
 8008b80:	f000 85e0 	beq.w	8009744 <HAL_RCCEx_GetPeriphCLKFreq+0xd24>
 8008b84:	2000      	movs	r0, #0
 8008b86:	e798      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8008b88:	f5a0 1300 	sub.w	r3, r0, #2097152	@ 0x200000
 8008b8c:	430b      	orrs	r3, r1
 8008b8e:	f000 816d 	beq.w	8008e6c <HAL_RCCEx_GetPeriphCLKFreq+0x44c>
 8008b92:	2000      	movs	r0, #0
 8008b94:	e791      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8008b96:	f100 427f 	add.w	r2, r0, #4278190080	@ 0xff000000
 8008b9a:	430a      	orrs	r2, r1
 8008b9c:	f000 8530 	beq.w	8009600 <HAL_RCCEx_GetPeriphCLKFreq+0xbe0>
 8008ba0:	f100 427e 	add.w	r2, r0, #4261412864	@ 0xfe000000
 8008ba4:	430a      	orrs	r2, r1
 8008ba6:	f000 8561 	beq.w	800966c <HAL_RCCEx_GetPeriphCLKFreq+0xc4c>
 8008baa:	f5a0 0300 	sub.w	r3, r0, #8388608	@ 0x800000
 8008bae:	430b      	orrs	r3, r1
 8008bb0:	f000 84f0 	beq.w	8009594 <HAL_RCCEx_GetPeriphCLKFreq+0xb74>
 8008bb4:	2000      	movs	r0, #0
 8008bb6:	e780      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8008bb8:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 8008bbc:	2000      	movs	r0, #0
 8008bbe:	4281      	cmp	r1, r0
 8008bc0:	bf08      	it	eq
 8008bc2:	4293      	cmpeq	r3, r2
 8008bc4:	f000 83e5 	beq.w	8009392 <HAL_RCCEx_GetPeriphCLKFreq+0x972>
 8008bc8:	429a      	cmp	r2, r3
 8008bca:	eb70 0201 	sbcs.w	r2, r0, r1
 8008bce:	d361      	bcc.n	8008c94 <HAL_RCCEx_GetPeriphCLKFreq+0x274>
 8008bd0:	f103 4260 	add.w	r2, r3, #3758096384	@ 0xe0000000
 8008bd4:	430a      	orrs	r2, r1
 8008bd6:	f000 822e 	beq.w	8009036 <HAL_RCCEx_GetPeriphCLKFreq+0x616>
 8008bda:	4a52      	ldr	r2, [pc, #328]	@ (8008d24 <HAL_RCCEx_GetPeriphCLKFreq+0x304>)
 8008bdc:	4293      	cmp	r3, r2
 8008bde:	f171 0200 	sbcs.w	r2, r1, #0
 8008be2:	d227      	bcs.n	8008c34 <HAL_RCCEx_GetPeriphCLKFreq+0x214>
 8008be4:	f103 4278 	add.w	r2, r3, #4160749568	@ 0xf8000000
 8008be8:	430a      	orrs	r2, r1
 8008bea:	f000 84b5 	beq.w	8009558 <HAL_RCCEx_GetPeriphCLKFreq+0xb38>
 8008bee:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 8008bf2:	430b      	orrs	r3, r1
 8008bf4:	f47f af61 	bne.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_DAC1_SOURCE();
 8008bf8:	4a4b      	ldr	r2, [pc, #300]	@ (8008d28 <HAL_RCCEx_GetPeriphCLKFreq+0x308>)
 8008bfa:	f8d2 30e8 	ldr.w	r3, [r2, #232]	@ 0xe8
    if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_DAC1CLKSOURCE_LSE))
 8008bfe:	f8d2 10f0 	ldr.w	r1, [r2, #240]	@ 0xf0
    srcclk = __HAL_RCC_GET_DAC1_SOURCE();
 8008c02:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
    if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_DAC1CLKSOURCE_LSE))
 8008c06:	0788      	lsls	r0, r1, #30
 8008c08:	d502      	bpl.n	8008c10 <HAL_RCCEx_GetPeriphCLKFreq+0x1f0>
 8008c0a:	2b00      	cmp	r3, #0
 8008c0c:	f000 865e 	beq.w	80098cc <HAL_RCCEx_GetPeriphCLKFreq+0xeac>
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIRDY)) && (srcclk == RCC_DAC1CLKSOURCE_LSI))
 8008c10:	f8d2 00f0 	ldr.w	r0, [r2, #240]	@ 0xf0
 8008c14:	f010 6000 	ands.w	r0, r0, #134217728	@ 0x8000000
 8008c18:	f43f af4f 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8008c1c:	2b00      	cmp	r3, #0
 8008c1e:	f000 8659 	beq.w	80098d4 <HAL_RCCEx_GetPeriphCLKFreq+0xeb4>
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIPREDIV))
 8008c22:	f8d2 30f0 	ldr.w	r3, [r2, #240]	@ 0xf0
        frequency = LSI_VALUE / 128U;
 8008c26:	f013 5f80 	tst.w	r3, #268435456	@ 0x10000000
 8008c2a:	bf0c      	ite	eq
 8008c2c:	f44f 40fa 	moveq.w	r0, #32000	@ 0x7d00
 8008c30:	20fa      	movne	r0, #250	@ 0xfa
 8008c32:	e742      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8008c34:	f103 4340 	add.w	r3, r3, #3221225472	@ 0xc0000000
 8008c38:	430b      	orrs	r3, r1
 8008c3a:	f47f af3e 	bne.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_I2C5_SOURCE();
 8008c3e:	4a3a      	ldr	r2, [pc, #232]	@ (8008d28 <HAL_RCCEx_GetPeriphCLKFreq+0x308>)
 8008c40:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
    if (srcclk == RCC_I2C5CLKSOURCE_PCLK1)
 8008c44:	f013 7340 	ands.w	r3, r3, #50331648	@ 0x3000000
 8008c48:	f000 8176 	beq.w	8008f38 <HAL_RCCEx_GetPeriphCLKFreq+0x518>
    else if (srcclk == RCC_I2C5CLKSOURCE_SYSCLK)
 8008c4c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8008c50:	f000 8155 	beq.w	8008efe <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_I2C5CLKSOURCE_HSI))
 8008c54:	6812      	ldr	r2, [r2, #0]
 8008c56:	0550      	lsls	r0, r2, #21
 8008c58:	d503      	bpl.n	8008c62 <HAL_RCCEx_GetPeriphCLKFreq+0x242>
 8008c5a:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8008c5e:	f000 8617 	beq.w	8009890 <HAL_RCCEx_GetPeriphCLKFreq+0xe70>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY)) && (srcclk == RCC_I2C5CLKSOURCE_MSIK))
 8008c62:	4a31      	ldr	r2, [pc, #196]	@ (8008d28 <HAL_RCCEx_GetPeriphCLKFreq+0x308>)
 8008c64:	6810      	ldr	r0, [r2, #0]
 8008c66:	f010 0020 	ands.w	r0, r0, #32
 8008c6a:	f43f af26 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8008c6e:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8008c72:	f040 8610 	bne.w	8009896 <HAL_RCCEx_GetPeriphCLKFreq+0xe76>
      frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 8008c76:	6893      	ldr	r3, [r2, #8]
 8008c78:	0219      	lsls	r1, r3, #8
 8008c7a:	bf4c      	ite	mi
 8008c7c:	6893      	ldrmi	r3, [r2, #8]
 8008c7e:	f8d2 30f4 	ldrpl.w	r3, [r2, #244]	@ 0xf4
 8008c82:	4a2a      	ldr	r2, [pc, #168]	@ (8008d2c <HAL_RCCEx_GetPeriphCLKFreq+0x30c>)
 8008c84:	bf4c      	ite	mi
 8008c86:	f3c3 6303 	ubfxmi	r3, r3, #24, #4
 8008c8a:	f3c3 2303 	ubfxpl	r3, r3, #8, #4
 8008c8e:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8008c92:	e712      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8008c94:	2902      	cmp	r1, #2
 8008c96:	bf08      	it	eq
 8008c98:	4283      	cmpeq	r3, r0
 8008c9a:	f000 8572 	beq.w	8009782 <HAL_RCCEx_GetPeriphCLKFreq+0xd62>
 8008c9e:	2908      	cmp	r1, #8
 8008ca0:	bf08      	it	eq
 8008ca2:	4283      	cmpeq	r3, r0
 8008ca4:	f000 8578 	beq.w	8009798 <HAL_RCCEx_GetPeriphCLKFreq+0xd78>
 8008ca8:	2901      	cmp	r1, #1
 8008caa:	bf08      	it	eq
 8008cac:	4283      	cmpeq	r3, r0
 8008cae:	f47f af04 	bne.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_HSPI_SOURCE();
 8008cb2:	4b1d      	ldr	r3, [pc, #116]	@ (8008d28 <HAL_RCCEx_GetPeriphCLKFreq+0x308>)
 8008cb4:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8008cb8:	f403 0340 	and.w	r3, r3, #12582912	@ 0xc00000
    switch (srcclk)
 8008cbc:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8008cc0:	f000 80e7 	beq.w	8008e92 <HAL_RCCEx_GetPeriphCLKFreq+0x472>
 8008cc4:	f200 8534 	bhi.w	8009730 <HAL_RCCEx_GetPeriphCLKFreq+0xd10>
 8008cc8:	2b00      	cmp	r3, #0
 8008cca:	f000 8118 	beq.w	8008efe <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
 8008cce:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8008cd2:	f000 80ab 	beq.w	8008e2c <HAL_RCCEx_GetPeriphCLKFreq+0x40c>
          frequency = 0U;
 8008cd6:	2000      	movs	r0, #0
 8008cd8:	e6ef      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_RTC_SOURCE();
 8008cda:	4a13      	ldr	r2, [pc, #76]	@ (8008d28 <HAL_RCCEx_GetPeriphCLKFreq+0x308>)
 8008cdc:	f8d2 30f0 	ldr.w	r3, [r2, #240]	@ 0xf0
    if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_RTCCLKSOURCE_LSE))
 8008ce0:	f8d2 10f0 	ldr.w	r1, [r2, #240]	@ 0xf0
    srcclk = __HAL_RCC_GET_RTC_SOURCE();
 8008ce4:	f403 7340 	and.w	r3, r3, #768	@ 0x300
    if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_RTCCLKSOURCE_LSE))
 8008ce8:	0789      	lsls	r1, r1, #30
 8008cea:	d503      	bpl.n	8008cf4 <HAL_RCCEx_GetPeriphCLKFreq+0x2d4>
 8008cec:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8008cf0:	f000 8579 	beq.w	80097e6 <HAL_RCCEx_GetPeriphCLKFreq+0xdc6>
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIRDY)) && (srcclk == RCC_RTCCLKSOURCE_LSI))
 8008cf4:	f8d2 10f0 	ldr.w	r1, [r2, #240]	@ 0xf0
 8008cf8:	0109      	lsls	r1, r1, #4
 8008cfa:	d519      	bpl.n	8008d30 <HAL_RCCEx_GetPeriphCLKFreq+0x310>
 8008cfc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8008d00:	d116      	bne.n	8008d30 <HAL_RCCEx_GetPeriphCLKFreq+0x310>
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIPREDIV))
 8008d02:	f8d2 30f0 	ldr.w	r3, [r2, #240]	@ 0xf0
        frequency = LSI_VALUE / 128U;
 8008d06:	f013 5f80 	tst.w	r3, #268435456	@ 0x10000000
 8008d0a:	bf0c      	ite	eq
 8008d0c:	f44f 40fa 	moveq.w	r0, #32000	@ 0x7d00
 8008d10:	20fa      	movne	r0, #250	@ 0xfa
 8008d12:	e6d2      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8008d14:	00020001 	.word	0x00020001
 8008d18:	04000001 	.word	0x04000001
 8008d1c:	00400001 	.word	0x00400001
 8008d20:	00100001 	.word	0x00100001
 8008d24:	20000001 	.word	0x20000001
 8008d28:	46020c00 	.word	0x46020c00
 8008d2c:	0802700c 	.word	0x0802700c
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (srcclk == RCC_RTCCLKSOURCE_HSE_DIV32))
 8008d30:	4a9d      	ldr	r2, [pc, #628]	@ (8008fa8 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 8008d32:	6810      	ldr	r0, [r2, #0]
 8008d34:	f410 3000 	ands.w	r0, r0, #131072	@ 0x20000
 8008d38:	f43f aebf 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
      frequency = HSE_VALUE / 32U;
 8008d3c:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8008d40:	489a      	ldr	r0, [pc, #616]	@ (8008fac <HAL_RCCEx_GetPeriphCLKFreq+0x58c>)
 8008d42:	bf18      	it	ne
 8008d44:	2000      	movne	r0, #0
 8008d46:	e6b8      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_SAI1_SOURCE();
 8008d48:	4a97      	ldr	r2, [pc, #604]	@ (8008fa8 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 8008d4a:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8008d4e:	f003 03e0 	and.w	r3, r3, #224	@ 0xe0
    switch (srcclk)
 8008d52:	2b40      	cmp	r3, #64	@ 0x40
 8008d54:	d00c      	beq.n	8008d70 <HAL_RCCEx_GetPeriphCLKFreq+0x350>
 8008d56:	d804      	bhi.n	8008d62 <HAL_RCCEx_GetPeriphCLKFreq+0x342>
 8008d58:	b17b      	cbz	r3, 8008d7a <HAL_RCCEx_GetPeriphCLKFreq+0x35a>
 8008d5a:	2b20      	cmp	r3, #32
 8008d5c:	d012      	beq.n	8008d84 <HAL_RCCEx_GetPeriphCLKFreq+0x364>
          frequency = 0U;
 8008d5e:	2000      	movs	r0, #0
 8008d60:	e6ab      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    switch (srcclk)
 8008d62:	2b60      	cmp	r3, #96	@ 0x60
 8008d64:	f000 8543 	beq.w	80097ee <HAL_RCCEx_GetPeriphCLKFreq+0xdce>
 8008d68:	2b80      	cmp	r3, #128	@ 0x80
 8008d6a:	d010      	beq.n	8008d8e <HAL_RCCEx_GetPeriphCLKFreq+0x36e>
          frequency = 0U;
 8008d6c:	2000      	movs	r0, #0
 8008d6e:	e6a4      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 8008d70:	a801      	add	r0, sp, #4
 8008d72:	f7ff fc87 	bl	8008684 <HAL_RCCEx_GetPLL1ClockFreq>
        frequency = pll1_clocks.PLL1_P_Frequency;
 8008d76:	9801      	ldr	r0, [sp, #4]
        break;
 8008d78:	e69f      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8008d7a:	a801      	add	r0, sp, #4
 8008d7c:	f7ff fd1c 	bl	80087b8 <HAL_RCCEx_GetPLL2ClockFreq>
        frequency = pll2_clocks.PLL2_P_Frequency;
 8008d80:	9801      	ldr	r0, [sp, #4]
        break;
 8008d82:	e69a      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 8008d84:	a801      	add	r0, sp, #4
 8008d86:	f7ff fdb1 	bl	80088ec <HAL_RCCEx_GetPLL3ClockFreq>
        frequency = pll3_clocks.PLL3_P_Frequency;
 8008d8a:	9801      	ldr	r0, [sp, #4]
        break;
 8008d8c:	e695      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
 8008d8e:	6810      	ldr	r0, [r2, #0]
          frequency = HSI_VALUE;
 8008d90:	4b87      	ldr	r3, [pc, #540]	@ (8008fb0 <HAL_RCCEx_GetPeriphCLKFreq+0x590>)
 8008d92:	f410 6080 	ands.w	r0, r0, #1024	@ 0x400
 8008d96:	bf18      	it	ne
 8008d98:	4618      	movne	r0, r3
 8008d9a:	e68e      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_SAI2_SOURCE();
 8008d9c:	4a82      	ldr	r2, [pc, #520]	@ (8008fa8 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 8008d9e:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8008da2:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    switch (srcclk)
 8008da6:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8008daa:	d0e1      	beq.n	8008d70 <HAL_RCCEx_GetPeriphCLKFreq+0x350>
 8008dac:	d806      	bhi.n	8008dbc <HAL_RCCEx_GetPeriphCLKFreq+0x39c>
 8008dae:	2b00      	cmp	r3, #0
 8008db0:	d0e3      	beq.n	8008d7a <HAL_RCCEx_GetPeriphCLKFreq+0x35a>
 8008db2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8008db6:	d0e5      	beq.n	8008d84 <HAL_RCCEx_GetPeriphCLKFreq+0x364>
          frequency = 0U;
 8008db8:	2000      	movs	r0, #0
 8008dba:	e67e      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    switch (srcclk)
 8008dbc:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8008dc0:	f000 8519 	beq.w	80097f6 <HAL_RCCEx_GetPeriphCLKFreq+0xdd6>
 8008dc4:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8008dc8:	f040 8519 	bne.w	80097fe <HAL_RCCEx_GetPeriphCLKFreq+0xdde>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
 8008dcc:	6810      	ldr	r0, [r2, #0]
          frequency = HSI_VALUE;
 8008dce:	4b78      	ldr	r3, [pc, #480]	@ (8008fb0 <HAL_RCCEx_GetPeriphCLKFreq+0x590>)
 8008dd0:	f410 6080 	ands.w	r0, r0, #1024	@ 0x400
 8008dd4:	bf18      	it	ne
 8008dd6:	4618      	movne	r0, r3
 8008dd8:	e66f      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_SAES_SOURCE();
 8008dda:	4a73      	ldr	r2, [pc, #460]	@ (8008fa8 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 8008ddc:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
    if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY) && (srcclk == RCC_SAESCLKSOURCE_SHSI))
 8008de0:	6811      	ldr	r1, [r2, #0]
    srcclk = __HAL_RCC_GET_SAES_SOURCE();
 8008de2:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
    if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY) && (srcclk == RCC_SAESCLKSOURCE_SHSI))
 8008de6:	0548      	lsls	r0, r1, #21
 8008de8:	d502      	bpl.n	8008df0 <HAL_RCCEx_GetPeriphCLKFreq+0x3d0>
 8008dea:	2b00      	cmp	r3, #0
 8008dec:	f000 850a 	beq.w	8009804 <HAL_RCCEx_GetPeriphCLKFreq+0xde4>
    else if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY) && (srcclk == RCC_SAESCLKSOURCE_SHSI_DIV2))
 8008df0:	6810      	ldr	r0, [r2, #0]
 8008df2:	f410 6080 	ands.w	r0, r0, #1024	@ 0x400
 8008df6:	f43f ae60 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
      frequency = HSI_VALUE >> 1U;
 8008dfa:	2b00      	cmp	r3, #0
 8008dfc:	486d      	ldr	r0, [pc, #436]	@ (8008fb4 <HAL_RCCEx_GetPeriphCLKFreq+0x594>)
 8008dfe:	bf08      	it	eq
 8008e00:	2000      	moveq	r0, #0
 8008e02:	e65a      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_ICLK_SOURCE();
 8008e04:	4b68      	ldr	r3, [pc, #416]	@ (8008fa8 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 8008e06:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
 8008e0a:	f002 6240 	and.w	r2, r2, #201326592	@ 0xc000000
    switch (srcclk)
 8008e0e:	f1b2 6f00 	cmp.w	r2, #134217728	@ 0x8000000
 8008e12:	d00b      	beq.n	8008e2c <HAL_RCCEx_GetPeriphCLKFreq+0x40c>
 8008e14:	d805      	bhi.n	8008e22 <HAL_RCCEx_GetPeriphCLKFreq+0x402>
 8008e16:	b172      	cbz	r2, 8008e36 <HAL_RCCEx_GetPeriphCLKFreq+0x416>
 8008e18:	f1b2 6f80 	cmp.w	r2, #67108864	@ 0x4000000
 8008e1c:	d039      	beq.n	8008e92 <HAL_RCCEx_GetPeriphCLKFreq+0x472>
          frequency = 0U;
 8008e1e:	2000      	movs	r0, #0
 8008e20:	e64b      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    switch (srcclk)
 8008e22:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
 8008e26:	d00d      	beq.n	8008e44 <HAL_RCCEx_GetPeriphCLKFreq+0x424>
          frequency = 0U;
 8008e28:	2000      	movs	r0, #0
 8008e2a:	e646      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 8008e2c:	a801      	add	r0, sp, #4
 8008e2e:	f7ff fc29 	bl	8008684 <HAL_RCCEx_GetPLL1ClockFreq>
        frequency = pll1_clocks.PLL1_Q_Frequency;
 8008e32:	9802      	ldr	r0, [sp, #8]
        break;
 8008e34:	e641      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSI48RDY))
 8008e36:	6818      	ldr	r0, [r3, #0]
          frequency = HSI48_VALUE;
 8008e38:	4b5f      	ldr	r3, [pc, #380]	@ (8008fb8 <HAL_RCCEx_GetPeriphCLKFreq+0x598>)
 8008e3a:	f410 5000 	ands.w	r0, r0, #8192	@ 0x2000
 8008e3e:	bf18      	it	ne
 8008e40:	4618      	movne	r0, r3
 8008e42:	e63a      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY))
 8008e44:	6818      	ldr	r0, [r3, #0]
 8008e46:	f010 0020 	ands.w	r0, r0, #32
 8008e4a:	f43f ae36 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 8008e4e:	689a      	ldr	r2, [r3, #8]
 8008e50:	0211      	lsls	r1, r2, #8
 8008e52:	bf4c      	ite	mi
 8008e54:	689b      	ldrmi	r3, [r3, #8]
 8008e56:	f8d3 30f4 	ldrpl.w	r3, [r3, #244]	@ 0xf4
 8008e5a:	4a58      	ldr	r2, [pc, #352]	@ (8008fbc <HAL_RCCEx_GetPeriphCLKFreq+0x59c>)
 8008e5c:	bf4c      	ite	mi
 8008e5e:	f3c3 6303 	ubfxmi	r3, r3, #24, #4
 8008e62:	f3c3 2303 	ubfxpl	r3, r3, #8, #4
 8008e66:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8008e6a:	e626      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_SDMMC_SOURCE();
 8008e6c:	4b4e      	ldr	r3, [pc, #312]	@ (8008fa8 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 8008e6e:	f8d3 00e4 	ldr.w	r0, [r3, #228]	@ 0xe4
    if (srcclk == RCC_SDMMCCLKSOURCE_CLK48)
 8008e72:	f410 4080 	ands.w	r0, r0, #16384	@ 0x4000
 8008e76:	d130      	bne.n	8008eda <HAL_RCCEx_GetPeriphCLKFreq+0x4ba>
      srcclk = __HAL_RCC_GET_ICLK_SOURCE();
 8008e78:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
 8008e7c:	f002 6240 	and.w	r2, r2, #201326592	@ 0xc000000
      switch (srcclk)
 8008e80:	f1b2 6f00 	cmp.w	r2, #134217728	@ 0x8000000
 8008e84:	d0d2      	beq.n	8008e2c <HAL_RCCEx_GetPeriphCLKFreq+0x40c>
 8008e86:	d809      	bhi.n	8008e9c <HAL_RCCEx_GetPeriphCLKFreq+0x47c>
 8008e88:	b302      	cbz	r2, 8008ecc <HAL_RCCEx_GetPeriphCLKFreq+0x4ac>
 8008e8a:	f1b2 6f80 	cmp.w	r2, #67108864	@ 0x4000000
 8008e8e:	f47f ae14 	bne.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8008e92:	a801      	add	r0, sp, #4
 8008e94:	f7ff fc90 	bl	80087b8 <HAL_RCCEx_GetPLL2ClockFreq>
        frequency = pll2_clocks.PLL2_Q_Frequency;
 8008e98:	9802      	ldr	r0, [sp, #8]
        break;
 8008e9a:	e60e      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
      switch (srcclk)
 8008e9c:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
 8008ea0:	f47f ae0b 	bne.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY))
 8008ea4:	6818      	ldr	r0, [r3, #0]
 8008ea6:	f010 0020 	ands.w	r0, r0, #32
 8008eaa:	f43f ae06 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
            frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 8008eae:	689a      	ldr	r2, [r3, #8]
 8008eb0:	0212      	lsls	r2, r2, #8
 8008eb2:	bf4c      	ite	mi
 8008eb4:	689b      	ldrmi	r3, [r3, #8]
 8008eb6:	f8d3 30f4 	ldrpl.w	r3, [r3, #244]	@ 0xf4
 8008eba:	4a40      	ldr	r2, [pc, #256]	@ (8008fbc <HAL_RCCEx_GetPeriphCLKFreq+0x59c>)
 8008ebc:	bf4c      	ite	mi
 8008ebe:	f3c3 6303 	ubfxmi	r3, r3, #24, #4
 8008ec2:	f3c3 2303 	ubfxpl	r3, r3, #8, #4
 8008ec6:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8008eca:	e5f6      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSI48RDY))
 8008ecc:	6818      	ldr	r0, [r3, #0]
          frequency = HSI48_VALUE;
 8008ece:	4b3a      	ldr	r3, [pc, #232]	@ (8008fb8 <HAL_RCCEx_GetPeriphCLKFreq+0x598>)
 8008ed0:	f410 5000 	ands.w	r0, r0, #8192	@ 0x2000
 8008ed4:	bf18      	it	ne
 8008ed6:	4618      	movne	r0, r3
 8008ed8:	e5ef      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
      HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 8008eda:	a801      	add	r0, sp, #4
 8008edc:	f7ff fbd2 	bl	8008684 <HAL_RCCEx_GetPLL1ClockFreq>
      frequency = pll1_clocks.PLL1_P_Frequency;
 8008ee0:	9801      	ldr	r0, [sp, #4]
 8008ee2:	e5ea      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_USART1_SOURCE();
 8008ee4:	4a30      	ldr	r2, [pc, #192]	@ (8008fa8 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 8008ee6:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
    if (srcclk == RCC_USART1CLKSOURCE_PCLK2)
 8008eea:	f013 0303 	ands.w	r3, r3, #3
 8008eee:	d104      	bne.n	8008efa <HAL_RCCEx_GetPeriphCLKFreq+0x4da>
}
 8008ef0:	b005      	add	sp, #20
 8008ef2:	f85d eb04 	ldr.w	lr, [sp], #4
        frequency = HAL_RCC_GetPCLK2Freq();
 8008ef6:	f7fe bf05 	b.w	8007d04 <HAL_RCC_GetPCLK2Freq>
    else if (srcclk == RCC_USART1CLKSOURCE_SYSCLK)
 8008efa:	2b01      	cmp	r3, #1
 8008efc:	d104      	bne.n	8008f08 <HAL_RCCEx_GetPeriphCLKFreq+0x4e8>
}
 8008efe:	b005      	add	sp, #20
 8008f00:	f85d eb04 	ldr.w	lr, [sp], #4
        frequency = HAL_RCC_GetSysClockFreq();
 8008f04:	f7fe b8a0 	b.w	8007048 <HAL_RCC_GetSysClockFreq>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_USART1CLKSOURCE_HSI))
 8008f08:	6812      	ldr	r2, [r2, #0]
 8008f0a:	0550      	lsls	r0, r2, #21
 8008f0c:	d502      	bpl.n	8008f14 <HAL_RCCEx_GetPeriphCLKFreq+0x4f4>
 8008f0e:	2b02      	cmp	r3, #2
 8008f10:	f000 847b 	beq.w	800980a <HAL_RCCEx_GetPeriphCLKFreq+0xdea>
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_USART1CLKSOURCE_LSE))
 8008f14:	4a24      	ldr	r2, [pc, #144]	@ (8008fa8 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 8008f16:	f8d2 00f0 	ldr.w	r0, [r2, #240]	@ 0xf0
 8008f1a:	f010 0002 	ands.w	r0, r0, #2
 8008f1e:	f43f adcc 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8008f22:	1ed9      	subs	r1, r3, #3
 8008f24:	424b      	negs	r3, r1
 8008f26:	414b      	adcs	r3, r1
 8008f28:	03d8      	lsls	r0, r3, #15
 8008f2a:	e5c6      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_USART2_SOURCE();
 8008f2c:	4a1e      	ldr	r2, [pc, #120]	@ (8008fa8 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 8008f2e:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
    if (srcclk == RCC_USART2CLKSOURCE_PCLK1)
 8008f32:	f013 030c 	ands.w	r3, r3, #12
 8008f36:	d104      	bne.n	8008f42 <HAL_RCCEx_GetPeriphCLKFreq+0x522>
}
 8008f38:	b005      	add	sp, #20
 8008f3a:	f85d eb04 	ldr.w	lr, [sp], #4
        frequency = HAL_RCC_GetPCLK1Freq();
 8008f3e:	f7fe bed1 	b.w	8007ce4 <HAL_RCC_GetPCLK1Freq>
    else if (srcclk == RCC_USART2CLKSOURCE_SYSCLK)
 8008f42:	2b04      	cmp	r3, #4
 8008f44:	d0db      	beq.n	8008efe <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_USART2CLKSOURCE_HSI))
 8008f46:	6812      	ldr	r2, [r2, #0]
 8008f48:	0552      	lsls	r2, r2, #21
 8008f4a:	d502      	bpl.n	8008f52 <HAL_RCCEx_GetPeriphCLKFreq+0x532>
 8008f4c:	2b08      	cmp	r3, #8
 8008f4e:	f000 845f 	beq.w	8009810 <HAL_RCCEx_GetPeriphCLKFreq+0xdf0>
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_USART2CLKSOURCE_LSE))
 8008f52:	4a15      	ldr	r2, [pc, #84]	@ (8008fa8 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 8008f54:	f8d2 00f0 	ldr.w	r0, [r2, #240]	@ 0xf0
 8008f58:	f010 0002 	ands.w	r0, r0, #2
 8008f5c:	f43f adad 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8008f60:	f1a3 0c0c 	sub.w	ip, r3, #12
 8008f64:	f1dc 0300 	rsbs	r3, ip, #0
 8008f68:	eb43 030c 	adc.w	r3, r3, ip
 8008f6c:	03d8      	lsls	r0, r3, #15
 8008f6e:	e5a4      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_USART3_SOURCE();
 8008f70:	4a0d      	ldr	r2, [pc, #52]	@ (8008fa8 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 8008f72:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
    if (srcclk == RCC_USART3CLKSOURCE_PCLK1)
 8008f76:	f013 0330 	ands.w	r3, r3, #48	@ 0x30
 8008f7a:	d0dd      	beq.n	8008f38 <HAL_RCCEx_GetPeriphCLKFreq+0x518>
    else if (srcclk == RCC_USART3CLKSOURCE_SYSCLK)
 8008f7c:	2b10      	cmp	r3, #16
 8008f7e:	d0be      	beq.n	8008efe <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_USART3CLKSOURCE_HSI))
 8008f80:	6812      	ldr	r2, [r2, #0]
 8008f82:	0550      	lsls	r0, r2, #21
 8008f84:	d502      	bpl.n	8008f8c <HAL_RCCEx_GetPeriphCLKFreq+0x56c>
 8008f86:	2b20      	cmp	r3, #32
 8008f88:	f000 8445 	beq.w	8009816 <HAL_RCCEx_GetPeriphCLKFreq+0xdf6>
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_USART3CLKSOURCE_LSE))
 8008f8c:	4a06      	ldr	r2, [pc, #24]	@ (8008fa8 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 8008f8e:	f8d2 00f0 	ldr.w	r0, [r2, #240]	@ 0xf0
 8008f92:	f010 0002 	ands.w	r0, r0, #2
 8008f96:	f43f ad90 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8008f9a:	f1a3 0130 	sub.w	r1, r3, #48	@ 0x30
 8008f9e:	424b      	negs	r3, r1
 8008fa0:	414b      	adcs	r3, r1
 8008fa2:	03d8      	lsls	r0, r3, #15
 8008fa4:	e589      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8008fa6:	bf00      	nop
 8008fa8:	46020c00 	.word	0x46020c00
 8008fac:	0007a120 	.word	0x0007a120
 8008fb0:	00f42400 	.word	0x00f42400
 8008fb4:	007a1200 	.word	0x007a1200
 8008fb8:	02dc6c00 	.word	0x02dc6c00
 8008fbc:	0802700c 	.word	0x0802700c
    srcclk = __HAL_RCC_GET_UART4_SOURCE();
 8008fc0:	4aab      	ldr	r2, [pc, #684]	@ (8009270 <HAL_RCCEx_GetPeriphCLKFreq+0x850>)
 8008fc2:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
    if (srcclk == RCC_UART4CLKSOURCE_PCLK1)
 8008fc6:	f013 03c0 	ands.w	r3, r3, #192	@ 0xc0
 8008fca:	d0b5      	beq.n	8008f38 <HAL_RCCEx_GetPeriphCLKFreq+0x518>
    else if (srcclk == RCC_UART4CLKSOURCE_SYSCLK)
 8008fcc:	2b40      	cmp	r3, #64	@ 0x40
 8008fce:	d096      	beq.n	8008efe <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_UART4CLKSOURCE_HSI))
 8008fd0:	6812      	ldr	r2, [r2, #0]
 8008fd2:	0552      	lsls	r2, r2, #21
 8008fd4:	d502      	bpl.n	8008fdc <HAL_RCCEx_GetPeriphCLKFreq+0x5bc>
 8008fd6:	2b80      	cmp	r3, #128	@ 0x80
 8008fd8:	f000 8420 	beq.w	800981c <HAL_RCCEx_GetPeriphCLKFreq+0xdfc>
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_UART4CLKSOURCE_LSE))
 8008fdc:	4aa4      	ldr	r2, [pc, #656]	@ (8009270 <HAL_RCCEx_GetPeriphCLKFreq+0x850>)
 8008fde:	f8d2 00f0 	ldr.w	r0, [r2, #240]	@ 0xf0
 8008fe2:	f010 0002 	ands.w	r0, r0, #2
 8008fe6:	f43f ad68 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8008fea:	f1a3 0cc0 	sub.w	ip, r3, #192	@ 0xc0
 8008fee:	f1dc 0300 	rsbs	r3, ip, #0
 8008ff2:	eb43 030c 	adc.w	r3, r3, ip
 8008ff6:	03d8      	lsls	r0, r3, #15
 8008ff8:	e55f      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_UART5_SOURCE();
 8008ffa:	4a9d      	ldr	r2, [pc, #628]	@ (8009270 <HAL_RCCEx_GetPeriphCLKFreq+0x850>)
 8008ffc:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
    if (srcclk == RCC_UART5CLKSOURCE_PCLK1)
 8009000:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 8009004:	d098      	beq.n	8008f38 <HAL_RCCEx_GetPeriphCLKFreq+0x518>
    else if (srcclk == RCC_UART5CLKSOURCE_SYSCLK)
 8009006:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800900a:	f43f af78 	beq.w	8008efe <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_UART5CLKSOURCE_HSI))
 800900e:	6812      	ldr	r2, [r2, #0]
 8009010:	0550      	lsls	r0, r2, #21
 8009012:	d503      	bpl.n	800901c <HAL_RCCEx_GetPeriphCLKFreq+0x5fc>
 8009014:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8009018:	f000 8403 	beq.w	8009822 <HAL_RCCEx_GetPeriphCLKFreq+0xe02>
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_UART5CLKSOURCE_LSE))
 800901c:	4a94      	ldr	r2, [pc, #592]	@ (8009270 <HAL_RCCEx_GetPeriphCLKFreq+0x850>)
 800901e:	f8d2 00f0 	ldr.w	r0, [r2, #240]	@ 0xf0
 8009022:	f010 0002 	ands.w	r0, r0, #2
 8009026:	f43f ad48 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 800902a:	f5a3 7140 	sub.w	r1, r3, #768	@ 0x300
 800902e:	424b      	negs	r3, r1
 8009030:	414b      	adcs	r3, r1
 8009032:	03d8      	lsls	r0, r3, #15
 8009034:	e541      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_USART6_SOURCE();
 8009036:	4a8e      	ldr	r2, [pc, #568]	@ (8009270 <HAL_RCCEx_GetPeriphCLKFreq+0x850>)
 8009038:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
    if (srcclk == RCC_USART6CLKSOURCE_PCLK1)
 800903c:	f413 3340 	ands.w	r3, r3, #196608	@ 0x30000
 8009040:	f43f af7a 	beq.w	8008f38 <HAL_RCCEx_GetPeriphCLKFreq+0x518>
    else if (srcclk == RCC_USART6CLKSOURCE_SYSCLK)
 8009044:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8009048:	f43f af59 	beq.w	8008efe <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_USART6CLKSOURCE_HSI))
 800904c:	6812      	ldr	r2, [r2, #0]
 800904e:	0552      	lsls	r2, r2, #21
 8009050:	d503      	bpl.n	800905a <HAL_RCCEx_GetPeriphCLKFreq+0x63a>
 8009052:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8009056:	f000 83e7 	beq.w	8009828 <HAL_RCCEx_GetPeriphCLKFreq+0xe08>
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_USART6CLKSOURCE_LSE))
 800905a:	4a85      	ldr	r2, [pc, #532]	@ (8009270 <HAL_RCCEx_GetPeriphCLKFreq+0x850>)
 800905c:	f8d2 00f0 	ldr.w	r0, [r2, #240]	@ 0xf0
 8009060:	f010 0002 	ands.w	r0, r0, #2
 8009064:	f43f ad29 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8009068:	f5a3 3c40 	sub.w	ip, r3, #196608	@ 0x30000
 800906c:	f1dc 0300 	rsbs	r3, ip, #0
 8009070:	eb43 030c 	adc.w	r3, r3, ip
 8009074:	03d8      	lsls	r0, r3, #15
 8009076:	e520      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_LPUART1_SOURCE();
 8009078:	4a7d      	ldr	r2, [pc, #500]	@ (8009270 <HAL_RCCEx_GetPeriphCLKFreq+0x850>)
 800907a:	f8d2 30e8 	ldr.w	r3, [r2, #232]	@ 0xe8
    if (srcclk == RCC_LPUART1CLKSOURCE_PCLK3)
 800907e:	f013 0307 	ands.w	r3, r3, #7
 8009082:	d104      	bne.n	800908e <HAL_RCCEx_GetPeriphCLKFreq+0x66e>
}
 8009084:	b005      	add	sp, #20
 8009086:	f85d eb04 	ldr.w	lr, [sp], #4
        frequency = HAL_RCC_GetPCLK3Freq();
 800908a:	f7fe be4b 	b.w	8007d24 <HAL_RCC_GetPCLK3Freq>
    else if (srcclk == RCC_LPUART1CLKSOURCE_SYSCLK)
 800908e:	2b01      	cmp	r3, #1
 8009090:	f43f af35 	beq.w	8008efe <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_LPUART1CLKSOURCE_HSI))
 8009094:	6812      	ldr	r2, [r2, #0]
 8009096:	0550      	lsls	r0, r2, #21
 8009098:	d502      	bpl.n	80090a0 <HAL_RCCEx_GetPeriphCLKFreq+0x680>
 800909a:	2b02      	cmp	r3, #2
 800909c:	f000 83c7 	beq.w	800982e <HAL_RCCEx_GetPeriphCLKFreq+0xe0e>
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_LPUART1CLKSOURCE_LSE))
 80090a0:	4a73      	ldr	r2, [pc, #460]	@ (8009270 <HAL_RCCEx_GetPeriphCLKFreq+0x850>)
 80090a2:	f8d2 10f0 	ldr.w	r1, [r2, #240]	@ 0xf0
 80090a6:	0789      	lsls	r1, r1, #30
 80090a8:	d502      	bpl.n	80090b0 <HAL_RCCEx_GetPeriphCLKFreq+0x690>
 80090aa:	2b03      	cmp	r3, #3
 80090ac:	f000 83c2 	beq.w	8009834 <HAL_RCCEx_GetPeriphCLKFreq+0xe14>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY)) && (srcclk == RCC_LPUART1CLKSOURCE_MSIK))
 80090b0:	6810      	ldr	r0, [r2, #0]
 80090b2:	f010 0020 	ands.w	r0, r0, #32
 80090b6:	f43f ad00 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 80090ba:	2b04      	cmp	r3, #4
 80090bc:	f040 83be 	bne.w	800983c <HAL_RCCEx_GetPeriphCLKFreq+0xe1c>
      frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 80090c0:	6893      	ldr	r3, [r2, #8]
 80090c2:	021b      	lsls	r3, r3, #8
 80090c4:	bf4c      	ite	mi
 80090c6:	6893      	ldrmi	r3, [r2, #8]
 80090c8:	f8d2 30f4 	ldrpl.w	r3, [r2, #244]	@ 0xf4
 80090cc:	4a69      	ldr	r2, [pc, #420]	@ (8009274 <HAL_RCCEx_GetPeriphCLKFreq+0x854>)
 80090ce:	bf4c      	ite	mi
 80090d0:	f3c3 6303 	ubfxmi	r3, r3, #24, #4
 80090d4:	f3c3 2303 	ubfxpl	r3, r3, #8, #4
 80090d8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80090dc:	e4ed      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_ADCDAC_SOURCE();
 80090de:	4a64      	ldr	r2, [pc, #400]	@ (8009270 <HAL_RCCEx_GetPeriphCLKFreq+0x850>)
 80090e0:	f8d2 30e8 	ldr.w	r3, [r2, #232]	@ 0xe8
 80090e4:	f403 43e0 	and.w	r3, r3, #28672	@ 0x7000
    if (srcclk == RCC_ADCDACCLKSOURCE_SYSCLK)
 80090e8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80090ec:	f43f af07 	beq.w	8008efe <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
    else if (srcclk == RCC_ADCDACCLKSOURCE_PLL2)
 80090f0:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80090f4:	d104      	bne.n	8009100 <HAL_RCCEx_GetPeriphCLKFreq+0x6e0>
      HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 80090f6:	a801      	add	r0, sp, #4
 80090f8:	f7ff fb5e 	bl	80087b8 <HAL_RCCEx_GetPLL2ClockFreq>
      frequency = pll2_clocks.PLL2_R_Frequency;
 80090fc:	9803      	ldr	r0, [sp, #12]
 80090fe:	e4dc      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    else if (srcclk == RCC_ADCDACCLKSOURCE_HCLK)
 8009100:	b923      	cbnz	r3, 800910c <HAL_RCCEx_GetPeriphCLKFreq+0x6ec>
}
 8009102:	b005      	add	sp, #20
 8009104:	f85d eb04 	ldr.w	lr, [sp], #4
        frequency = HAL_RCC_GetHCLKFreq();
 8009108:	f7fe b978 	b.w	80073fc <HAL_RCC_GetHCLKFreq>
    else if (srcclk == RCC_ADCDACCLKSOURCE_MSIK)
 800910c:	f5b3 4fa0 	cmp.w	r3, #20480	@ 0x5000
 8009110:	d113      	bne.n	800913a <HAL_RCCEx_GetPeriphCLKFreq+0x71a>
      if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY))
 8009112:	6810      	ldr	r0, [r2, #0]
 8009114:	f010 0020 	ands.w	r0, r0, #32
 8009118:	f43f accf 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 800911c:	6893      	ldr	r3, [r2, #8]
 800911e:	0218      	lsls	r0, r3, #8
 8009120:	bf4c      	ite	mi
 8009122:	6893      	ldrmi	r3, [r2, #8]
 8009124:	f8d2 30f4 	ldrpl.w	r3, [r2, #244]	@ 0xf4
 8009128:	4a52      	ldr	r2, [pc, #328]	@ (8009274 <HAL_RCCEx_GetPeriphCLKFreq+0x854>)
 800912a:	bf4c      	ite	mi
 800912c:	f3c3 6303 	ubfxmi	r3, r3, #24, #4
 8009130:	f3c3 2303 	ubfxpl	r3, r3, #8, #4
 8009134:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8009138:	e4bf      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (srcclk == RCC_ADCDACCLKSOURCE_HSE))
 800913a:	6812      	ldr	r2, [r2, #0]
 800913c:	0391      	lsls	r1, r2, #14
 800913e:	d503      	bpl.n	8009148 <HAL_RCCEx_GetPeriphCLKFreq+0x728>
 8009140:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8009144:	f000 8384 	beq.w	8009850 <HAL_RCCEx_GetPeriphCLKFreq+0xe30>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_ADCDACCLKSOURCE_HSI))
 8009148:	4a49      	ldr	r2, [pc, #292]	@ (8009270 <HAL_RCCEx_GetPeriphCLKFreq+0x850>)
 800914a:	6810      	ldr	r0, [r2, #0]
 800914c:	f410 6080 	ands.w	r0, r0, #1024	@ 0x400
 8009150:	f43f acb3 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = HSI_VALUE;
 8009154:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8009158:	4847      	ldr	r0, [pc, #284]	@ (8009278 <HAL_RCCEx_GetPeriphCLKFreq+0x858>)
 800915a:	bf18      	it	ne
 800915c:	2000      	movne	r0, #0
 800915e:	e4ac      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_MDF1_SOURCE();
 8009160:	4b43      	ldr	r3, [pc, #268]	@ (8009270 <HAL_RCCEx_GetPeriphCLKFreq+0x850>)
 8009162:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
 8009166:	f002 0207 	and.w	r2, r2, #7
    switch (srcclk)
 800916a:	2a04      	cmp	r2, #4
 800916c:	d80c      	bhi.n	8009188 <HAL_RCCEx_GetPeriphCLKFreq+0x768>
 800916e:	a101      	add	r1, pc, #4	@ (adr r1, 8009174 <HAL_RCCEx_GetPeriphCLKFreq+0x754>)
 8009170:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8009174:	08009103 	.word	0x08009103
 8009178:	08008d71 	.word	0x08008d71
 800917c:	0800918d 	.word	0x0800918d
 8009180:	08009857 	.word	0x08009857
 8009184:	08009197 	.word	0x08009197
          frequency = 0U;
 8009188:	2000      	movs	r0, #0
 800918a:	e496      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 800918c:	a801      	add	r0, sp, #4
 800918e:	f7ff fbad 	bl	80088ec <HAL_RCCEx_GetPLL3ClockFreq>
        frequency = pll3_clocks.PLL3_Q_Frequency;
 8009192:	9802      	ldr	r0, [sp, #8]
        break;
 8009194:	e491      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY))
 8009196:	6818      	ldr	r0, [r3, #0]
 8009198:	f010 0020 	ands.w	r0, r0, #32
 800919c:	f43f ac8d 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 80091a0:	689a      	ldr	r2, [r3, #8]
 80091a2:	0212      	lsls	r2, r2, #8
 80091a4:	bf4c      	ite	mi
 80091a6:	689b      	ldrmi	r3, [r3, #8]
 80091a8:	f8d3 30f4 	ldrpl.w	r3, [r3, #244]	@ 0xf4
 80091ac:	4a31      	ldr	r2, [pc, #196]	@ (8009274 <HAL_RCCEx_GetPeriphCLKFreq+0x854>)
 80091ae:	bf4c      	ite	mi
 80091b0:	f3c3 6303 	ubfxmi	r3, r3, #24, #4
 80091b4:	f3c3 2303 	ubfxpl	r3, r3, #8, #4
 80091b8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80091bc:	e47d      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_ADF1_SOURCE();
 80091be:	4a2c      	ldr	r2, [pc, #176]	@ (8009270 <HAL_RCCEx_GetPeriphCLKFreq+0x850>)
 80091c0:	f8d2 30e8 	ldr.w	r3, [r2, #232]	@ 0xe8
 80091c4:	f403 23e0 	and.w	r3, r3, #458752	@ 0x70000
    switch (srcclk)
 80091c8:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80091cc:	d0de      	beq.n	800918c <HAL_RCCEx_GetPeriphCLKFreq+0x76c>
 80091ce:	d807      	bhi.n	80091e0 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>
 80091d0:	2b00      	cmp	r3, #0
 80091d2:	d096      	beq.n	8009102 <HAL_RCCEx_GetPeriphCLKFreq+0x6e2>
 80091d4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80091d8:	f43f adca 	beq.w	8008d70 <HAL_RCCEx_GetPeriphCLKFreq+0x350>
          frequency = 0U;
 80091dc:	2000      	movs	r0, #0
 80091de:	e46c      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    switch (srcclk)
 80091e0:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 80091e4:	f000 833b 	beq.w	800985e <HAL_RCCEx_GetPeriphCLKFreq+0xe3e>
 80091e8:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 80091ec:	f040 833b 	bne.w	8009866 <HAL_RCCEx_GetPeriphCLKFreq+0xe46>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY))
 80091f0:	6810      	ldr	r0, [r2, #0]
 80091f2:	f010 0020 	ands.w	r0, r0, #32
 80091f6:	f43f ac60 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 80091fa:	6893      	ldr	r3, [r2, #8]
 80091fc:	021b      	lsls	r3, r3, #8
 80091fe:	bf4c      	ite	mi
 8009200:	6893      	ldrmi	r3, [r2, #8]
 8009202:	f8d2 30f4 	ldrpl.w	r3, [r2, #244]	@ 0xf4
 8009206:	4a1b      	ldr	r2, [pc, #108]	@ (8009274 <HAL_RCCEx_GetPeriphCLKFreq+0x854>)
 8009208:	bf4c      	ite	mi
 800920a:	f3c3 6303 	ubfxmi	r3, r3, #24, #4
 800920e:	f3c3 2303 	ubfxpl	r3, r3, #8, #4
 8009212:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8009216:	e450      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_I2C1_SOURCE();
 8009218:	4a15      	ldr	r2, [pc, #84]	@ (8009270 <HAL_RCCEx_GetPeriphCLKFreq+0x850>)
 800921a:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
    if (srcclk == RCC_I2C1CLKSOURCE_PCLK1)
 800921e:	f413 6340 	ands.w	r3, r3, #3072	@ 0xc00
 8009222:	f43f ae89 	beq.w	8008f38 <HAL_RCCEx_GetPeriphCLKFreq+0x518>
    else if (srcclk == RCC_I2C1CLKSOURCE_SYSCLK)
 8009226:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800922a:	f43f ae68 	beq.w	8008efe <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_I2C1CLKSOURCE_HSI))
 800922e:	6812      	ldr	r2, [r2, #0]
 8009230:	0550      	lsls	r0, r2, #21
 8009232:	d503      	bpl.n	800923c <HAL_RCCEx_GetPeriphCLKFreq+0x81c>
 8009234:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8009238:	f000 8318 	beq.w	800986c <HAL_RCCEx_GetPeriphCLKFreq+0xe4c>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY)) && (srcclk == RCC_I2C1CLKSOURCE_MSIK))
 800923c:	4a0c      	ldr	r2, [pc, #48]	@ (8009270 <HAL_RCCEx_GetPeriphCLKFreq+0x850>)
 800923e:	6810      	ldr	r0, [r2, #0]
 8009240:	f010 0020 	ands.w	r0, r0, #32
 8009244:	f43f ac39 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8009248:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800924c:	f040 8311 	bne.w	8009872 <HAL_RCCEx_GetPeriphCLKFreq+0xe52>
      frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 8009250:	6893      	ldr	r3, [r2, #8]
 8009252:	0219      	lsls	r1, r3, #8
 8009254:	bf4c      	ite	mi
 8009256:	6893      	ldrmi	r3, [r2, #8]
 8009258:	f8d2 30f4 	ldrpl.w	r3, [r2, #244]	@ 0xf4
 800925c:	4a05      	ldr	r2, [pc, #20]	@ (8009274 <HAL_RCCEx_GetPeriphCLKFreq+0x854>)
 800925e:	bf4c      	ite	mi
 8009260:	f3c3 6303 	ubfxmi	r3, r3, #24, #4
 8009264:	f3c3 2303 	ubfxpl	r3, r3, #8, #4
 8009268:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800926c:	e425      	b.n	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 800926e:	bf00      	nop
 8009270:	46020c00 	.word	0x46020c00
 8009274:	0802700c 	.word	0x0802700c
 8009278:	00f42400 	.word	0x00f42400
    srcclk = __HAL_RCC_GET_I2C2_SOURCE();
 800927c:	4ab3      	ldr	r2, [pc, #716]	@ (800954c <HAL_RCCEx_GetPeriphCLKFreq+0xb2c>)
 800927e:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
    if (srcclk == RCC_I2C2CLKSOURCE_PCLK1)
 8009282:	f413 5340 	ands.w	r3, r3, #12288	@ 0x3000
 8009286:	f43f ae57 	beq.w	8008f38 <HAL_RCCEx_GetPeriphCLKFreq+0x518>
    else if (srcclk == RCC_I2C2CLKSOURCE_SYSCLK)
 800928a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800928e:	f43f ae36 	beq.w	8008efe <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_I2C2CLKSOURCE_HSI))
 8009292:	6812      	ldr	r2, [r2, #0]
 8009294:	0552      	lsls	r2, r2, #21
 8009296:	d503      	bpl.n	80092a0 <HAL_RCCEx_GetPeriphCLKFreq+0x880>
 8009298:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800929c:	f000 82ec 	beq.w	8009878 <HAL_RCCEx_GetPeriphCLKFreq+0xe58>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY)) && (srcclk == RCC_I2C2CLKSOURCE_MSIK))
 80092a0:	4aaa      	ldr	r2, [pc, #680]	@ (800954c <HAL_RCCEx_GetPeriphCLKFreq+0xb2c>)
 80092a2:	6810      	ldr	r0, [r2, #0]
 80092a4:	f010 0020 	ands.w	r0, r0, #32
 80092a8:	f43f ac07 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 80092ac:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 80092b0:	f040 82e5 	bne.w	800987e <HAL_RCCEx_GetPeriphCLKFreq+0xe5e>
      frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 80092b4:	6893      	ldr	r3, [r2, #8]
 80092b6:	0218      	lsls	r0, r3, #8
 80092b8:	bf4c      	ite	mi
 80092ba:	6893      	ldrmi	r3, [r2, #8]
 80092bc:	f8d2 30f4 	ldrpl.w	r3, [r2, #244]	@ 0xf4
 80092c0:	4aa3      	ldr	r2, [pc, #652]	@ (8009550 <HAL_RCCEx_GetPeriphCLKFreq+0xb30>)
 80092c2:	bf4c      	ite	mi
 80092c4:	f3c3 6303 	ubfxmi	r3, r3, #24, #4
 80092c8:	f3c3 2303 	ubfxpl	r3, r3, #8, #4
 80092cc:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80092d0:	f7ff bbf3 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_I2C3_SOURCE();
 80092d4:	4b9d      	ldr	r3, [pc, #628]	@ (800954c <HAL_RCCEx_GetPeriphCLKFreq+0xb2c>)
 80092d6:	f8d3 20e8 	ldr.w	r2, [r3, #232]	@ 0xe8
 80092da:	f002 02c0 	and.w	r2, r2, #192	@ 0xc0
    switch (srcclk)
 80092de:	2a80      	cmp	r2, #128	@ 0x80
 80092e0:	d00e      	beq.n	8009300 <HAL_RCCEx_GetPeriphCLKFreq+0x8e0>
 80092e2:	d808      	bhi.n	80092f6 <HAL_RCCEx_GetPeriphCLKFreq+0x8d6>
 80092e4:	2a00      	cmp	r2, #0
 80092e6:	f43f aecd 	beq.w	8009084 <HAL_RCCEx_GetPeriphCLKFreq+0x664>
 80092ea:	2a40      	cmp	r2, #64	@ 0x40
 80092ec:	f43f ae07 	beq.w	8008efe <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
          frequency = 0U;
 80092f0:	2000      	movs	r0, #0
 80092f2:	f7ff bbe2 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    switch (srcclk)
 80092f6:	2ac0      	cmp	r2, #192	@ 0xc0
 80092f8:	d00a      	beq.n	8009310 <HAL_RCCEx_GetPeriphCLKFreq+0x8f0>
          frequency = 0U;
 80092fa:	2000      	movs	r0, #0
 80092fc:	f7ff bbdd 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
 8009300:	6818      	ldr	r0, [r3, #0]
          frequency = HSI_VALUE;
 8009302:	4b94      	ldr	r3, [pc, #592]	@ (8009554 <HAL_RCCEx_GetPeriphCLKFreq+0xb34>)
 8009304:	f410 6080 	ands.w	r0, r0, #1024	@ 0x400
 8009308:	bf18      	it	ne
 800930a:	4618      	movne	r0, r3
 800930c:	f7ff bbd5 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY))
 8009310:	6818      	ldr	r0, [r3, #0]
 8009312:	f010 0020 	ands.w	r0, r0, #32
 8009316:	f43f abd0 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 800931a:	689a      	ldr	r2, [r3, #8]
 800931c:	0211      	lsls	r1, r2, #8
 800931e:	bf4c      	ite	mi
 8009320:	689b      	ldrmi	r3, [r3, #8]
 8009322:	f8d3 30f4 	ldrpl.w	r3, [r3, #244]	@ 0xf4
 8009326:	4a8a      	ldr	r2, [pc, #552]	@ (8009550 <HAL_RCCEx_GetPeriphCLKFreq+0xb30>)
 8009328:	bf4c      	ite	mi
 800932a:	f3c3 6303 	ubfxmi	r3, r3, #24, #4
 800932e:	f3c3 2303 	ubfxpl	r3, r3, #8, #4
 8009332:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8009336:	f7ff bbc0 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_I2C4_SOURCE();
 800933a:	4a84      	ldr	r2, [pc, #528]	@ (800954c <HAL_RCCEx_GetPeriphCLKFreq+0xb2c>)
 800933c:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
    if (srcclk == RCC_I2C4CLKSOURCE_PCLK1)
 8009340:	f413 4340 	ands.w	r3, r3, #49152	@ 0xc000
 8009344:	f43f adf8 	beq.w	8008f38 <HAL_RCCEx_GetPeriphCLKFreq+0x518>
    else if (srcclk == RCC_I2C4CLKSOURCE_SYSCLK)
 8009348:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800934c:	f43f add7 	beq.w	8008efe <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_I2C4CLKSOURCE_HSI))
 8009350:	6812      	ldr	r2, [r2, #0]
 8009352:	0552      	lsls	r2, r2, #21
 8009354:	d503      	bpl.n	800935e <HAL_RCCEx_GetPeriphCLKFreq+0x93e>
 8009356:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800935a:	f000 8293 	beq.w	8009884 <HAL_RCCEx_GetPeriphCLKFreq+0xe64>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY)) && (srcclk == RCC_I2C4CLKSOURCE_MSIK))
 800935e:	4a7b      	ldr	r2, [pc, #492]	@ (800954c <HAL_RCCEx_GetPeriphCLKFreq+0xb2c>)
 8009360:	6810      	ldr	r0, [r2, #0]
 8009362:	f010 0020 	ands.w	r0, r0, #32
 8009366:	f43f aba8 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 800936a:	f5b3 4f40 	cmp.w	r3, #49152	@ 0xc000
 800936e:	f040 828c 	bne.w	800988a <HAL_RCCEx_GetPeriphCLKFreq+0xe6a>
      frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 8009372:	6893      	ldr	r3, [r2, #8]
 8009374:	021b      	lsls	r3, r3, #8
 8009376:	bf4c      	ite	mi
 8009378:	6893      	ldrmi	r3, [r2, #8]
 800937a:	f8d2 30f4 	ldrpl.w	r3, [r2, #244]	@ 0xf4
 800937e:	4a74      	ldr	r2, [pc, #464]	@ (8009550 <HAL_RCCEx_GetPeriphCLKFreq+0xb30>)
 8009380:	bf4c      	ite	mi
 8009382:	f3c3 6303 	ubfxmi	r3, r3, #24, #4
 8009386:	f3c3 2303 	ubfxpl	r3, r3, #8, #4
 800938a:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800938e:	f7ff bb94 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_I2C6_SOURCE();
 8009392:	4a6e      	ldr	r2, [pc, #440]	@ (800954c <HAL_RCCEx_GetPeriphCLKFreq+0xb2c>)
 8009394:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
    if (srcclk == RCC_I2C6CLKSOURCE_PCLK1)
 8009398:	f013 6340 	ands.w	r3, r3, #201326592	@ 0xc000000
 800939c:	f43f adcc 	beq.w	8008f38 <HAL_RCCEx_GetPeriphCLKFreq+0x518>
    else if (srcclk == RCC_I2C6CLKSOURCE_SYSCLK)
 80093a0:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 80093a4:	f43f adab 	beq.w	8008efe <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_I2C6CLKSOURCE_HSI))
 80093a8:	6812      	ldr	r2, [r2, #0]
 80093aa:	0552      	lsls	r2, r2, #21
 80093ac:	d503      	bpl.n	80093b6 <HAL_RCCEx_GetPeriphCLKFreq+0x996>
 80093ae:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80093b2:	f000 8273 	beq.w	800989c <HAL_RCCEx_GetPeriphCLKFreq+0xe7c>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY)) && (srcclk == RCC_I2C6CLKSOURCE_MSIK))
 80093b6:	4a65      	ldr	r2, [pc, #404]	@ (800954c <HAL_RCCEx_GetPeriphCLKFreq+0xb2c>)
 80093b8:	6810      	ldr	r0, [r2, #0]
 80093ba:	f010 0020 	ands.w	r0, r0, #32
 80093be:	f43f ab7c 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 80093c2:	f1b3 6f40 	cmp.w	r3, #201326592	@ 0xc000000
 80093c6:	f040 826c 	bne.w	80098a2 <HAL_RCCEx_GetPeriphCLKFreq+0xe82>
      frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 80093ca:	6893      	ldr	r3, [r2, #8]
 80093cc:	021b      	lsls	r3, r3, #8
 80093ce:	bf4c      	ite	mi
 80093d0:	6893      	ldrmi	r3, [r2, #8]
 80093d2:	f8d2 30f4 	ldrpl.w	r3, [r2, #244]	@ 0xf4
 80093d6:	4a5e      	ldr	r2, [pc, #376]	@ (8009550 <HAL_RCCEx_GetPeriphCLKFreq+0xb30>)
 80093d8:	bf4c      	ite	mi
 80093da:	f3c3 6303 	ubfxmi	r3, r3, #24, #4
 80093de:	f3c3 2303 	ubfxpl	r3, r3, #8, #4
 80093e2:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80093e6:	f7ff bb68 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_LPTIM34_SOURCE();
 80093ea:	4a58      	ldr	r2, [pc, #352]	@ (800954c <HAL_RCCEx_GetPeriphCLKFreq+0xb2c>)
 80093ec:	f8d2 30e8 	ldr.w	r3, [r2, #232]	@ 0xe8
    if (srcclk == RCC_LPTIM34CLKSOURCE_MSIK)
 80093f0:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 80093f4:	d114      	bne.n	8009420 <HAL_RCCEx_GetPeriphCLKFreq+0xa00>
      if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY))
 80093f6:	6810      	ldr	r0, [r2, #0]
 80093f8:	f010 0020 	ands.w	r0, r0, #32
 80093fc:	f43f ab5d 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 8009400:	6893      	ldr	r3, [r2, #8]
 8009402:	0218      	lsls	r0, r3, #8
 8009404:	bf4c      	ite	mi
 8009406:	6893      	ldrmi	r3, [r2, #8]
 8009408:	f8d2 30f4 	ldrpl.w	r3, [r2, #244]	@ 0xf4
 800940c:	4a50      	ldr	r2, [pc, #320]	@ (8009550 <HAL_RCCEx_GetPeriphCLKFreq+0xb30>)
 800940e:	bf4c      	ite	mi
 8009410:	f3c3 6303 	ubfxmi	r3, r3, #24, #4
 8009414:	f3c3 2303 	ubfxpl	r3, r3, #8, #4
 8009418:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800941c:	f7ff bb4d 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIRDY)) && (srcclk == RCC_LPTIM34CLKSOURCE_LSI))
 8009420:	f8d2 10f0 	ldr.w	r1, [r2, #240]	@ 0xf0
 8009424:	0109      	lsls	r1, r1, #4
 8009426:	d50c      	bpl.n	8009442 <HAL_RCCEx_GetPeriphCLKFreq+0xa22>
 8009428:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800942c:	d109      	bne.n	8009442 <HAL_RCCEx_GetPeriphCLKFreq+0xa22>
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIPREDIV))
 800942e:	f8d2 30f0 	ldr.w	r3, [r2, #240]	@ 0xf0
        frequency = LSI_VALUE / 128U;
 8009432:	f013 5f80 	tst.w	r3, #268435456	@ 0x10000000
 8009436:	bf0c      	ite	eq
 8009438:	f44f 40fa 	moveq.w	r0, #32000	@ 0x7d00
 800943c:	20fa      	movne	r0, #250	@ 0xfa
 800943e:	f7ff bb3c 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_LPTIM34CLKSOURCE_HSI))
 8009442:	6812      	ldr	r2, [r2, #0]
 8009444:	0552      	lsls	r2, r2, #21
 8009446:	d503      	bpl.n	8009450 <HAL_RCCEx_GetPeriphCLKFreq+0xa30>
 8009448:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800944c:	f000 822c 	beq.w	80098a8 <HAL_RCCEx_GetPeriphCLKFreq+0xe88>
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_LPTIM34CLKSOURCE_LSE))
 8009450:	4a3e      	ldr	r2, [pc, #248]	@ (800954c <HAL_RCCEx_GetPeriphCLKFreq+0xb2c>)
 8009452:	f8d2 00f0 	ldr.w	r0, [r2, #240]	@ 0xf0
 8009456:	f010 0002 	ands.w	r0, r0, #2
 800945a:	f43f ab2e 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 800945e:	f5a3 7c40 	sub.w	ip, r3, #768	@ 0x300
 8009462:	f1dc 0300 	rsbs	r3, ip, #0
 8009466:	eb43 030c 	adc.w	r3, r3, ip
 800946a:	03d8      	lsls	r0, r3, #15
 800946c:	f7ff bb25 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_LPTIM1_SOURCE();
 8009470:	4a36      	ldr	r2, [pc, #216]	@ (800954c <HAL_RCCEx_GetPeriphCLKFreq+0xb2c>)
 8009472:	f8d2 30e8 	ldr.w	r3, [r2, #232]	@ 0xe8
    if (srcclk == RCC_LPTIM1CLKSOURCE_MSIK)
 8009476:	f413 6340 	ands.w	r3, r3, #3072	@ 0xc00
 800947a:	d114      	bne.n	80094a6 <HAL_RCCEx_GetPeriphCLKFreq+0xa86>
      if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY))
 800947c:	6810      	ldr	r0, [r2, #0]
 800947e:	f010 0020 	ands.w	r0, r0, #32
 8009482:	f43f ab1a 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 8009486:	6893      	ldr	r3, [r2, #8]
 8009488:	0218      	lsls	r0, r3, #8
 800948a:	bf4c      	ite	mi
 800948c:	6893      	ldrmi	r3, [r2, #8]
 800948e:	f8d2 30f4 	ldrpl.w	r3, [r2, #244]	@ 0xf4
 8009492:	4a2f      	ldr	r2, [pc, #188]	@ (8009550 <HAL_RCCEx_GetPeriphCLKFreq+0xb30>)
 8009494:	bf4c      	ite	mi
 8009496:	f3c3 6303 	ubfxmi	r3, r3, #24, #4
 800949a:	f3c3 2303 	ubfxpl	r3, r3, #8, #4
 800949e:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80094a2:	f7ff bb0a 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIRDY)) && (srcclk == RCC_LPTIM1CLKSOURCE_LSI))
 80094a6:	f8d2 10f0 	ldr.w	r1, [r2, #240]	@ 0xf0
 80094aa:	0109      	lsls	r1, r1, #4
 80094ac:	d50c      	bpl.n	80094c8 <HAL_RCCEx_GetPeriphCLKFreq+0xaa8>
 80094ae:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80094b2:	d109      	bne.n	80094c8 <HAL_RCCEx_GetPeriphCLKFreq+0xaa8>
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIPREDIV))
 80094b4:	f8d2 30f0 	ldr.w	r3, [r2, #240]	@ 0xf0
        frequency = LSI_VALUE / 128U;
 80094b8:	f013 5f80 	tst.w	r3, #268435456	@ 0x10000000
 80094bc:	bf0c      	ite	eq
 80094be:	f44f 40fa 	moveq.w	r0, #32000	@ 0x7d00
 80094c2:	20fa      	movne	r0, #250	@ 0xfa
 80094c4:	f7ff baf9 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_LPTIM1CLKSOURCE_HSI))
 80094c8:	6812      	ldr	r2, [r2, #0]
 80094ca:	0552      	lsls	r2, r2, #21
 80094cc:	d503      	bpl.n	80094d6 <HAL_RCCEx_GetPeriphCLKFreq+0xab6>
 80094ce:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80094d2:	f000 81ec 	beq.w	80098ae <HAL_RCCEx_GetPeriphCLKFreq+0xe8e>
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_LPTIM1CLKSOURCE_LSE))
 80094d6:	4a1d      	ldr	r2, [pc, #116]	@ (800954c <HAL_RCCEx_GetPeriphCLKFreq+0xb2c>)
 80094d8:	f8d2 00f0 	ldr.w	r0, [r2, #240]	@ 0xf0
 80094dc:	f010 0002 	ands.w	r0, r0, #2
 80094e0:	f43f aaeb 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 80094e4:	f5a3 6040 	sub.w	r0, r3, #3072	@ 0xc00
 80094e8:	4243      	negs	r3, r0
 80094ea:	4143      	adcs	r3, r0
 80094ec:	03d8      	lsls	r0, r3, #15
 80094ee:	f7ff bae4 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_LPTIM2_SOURCE();
 80094f2:	4a16      	ldr	r2, [pc, #88]	@ (800954c <HAL_RCCEx_GetPeriphCLKFreq+0xb2c>)
 80094f4:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
    if (srcclk == RCC_LPTIM2CLKSOURCE_PCLK1)
 80094f8:	f413 2340 	ands.w	r3, r3, #786432	@ 0xc0000
 80094fc:	f43f ad1c 	beq.w	8008f38 <HAL_RCCEx_GetPeriphCLKFreq+0x518>
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIRDY)) && (srcclk == RCC_LPTIM2CLKSOURCE_LSI))
 8009500:	f8d2 10f0 	ldr.w	r1, [r2, #240]	@ 0xf0
 8009504:	0109      	lsls	r1, r1, #4
 8009506:	d50c      	bpl.n	8009522 <HAL_RCCEx_GetPeriphCLKFreq+0xb02>
 8009508:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 800950c:	d109      	bne.n	8009522 <HAL_RCCEx_GetPeriphCLKFreq+0xb02>
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIPREDIV))
 800950e:	f8d2 30f0 	ldr.w	r3, [r2, #240]	@ 0xf0
        frequency = LSI_VALUE / 128U;
 8009512:	f013 5f80 	tst.w	r3, #268435456	@ 0x10000000
 8009516:	bf0c      	ite	eq
 8009518:	f44f 40fa 	moveq.w	r0, #32000	@ 0x7d00
 800951c:	20fa      	movne	r0, #250	@ 0xfa
 800951e:	f7ff bacc 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_LPTIM2CLKSOURCE_HSI))
 8009522:	6812      	ldr	r2, [r2, #0]
 8009524:	0550      	lsls	r0, r2, #21
 8009526:	d503      	bpl.n	8009530 <HAL_RCCEx_GetPeriphCLKFreq+0xb10>
 8009528:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 800952c:	f000 81c2 	beq.w	80098b4 <HAL_RCCEx_GetPeriphCLKFreq+0xe94>
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_LPTIM2CLKSOURCE_LSE))
 8009530:	4a06      	ldr	r2, [pc, #24]	@ (800954c <HAL_RCCEx_GetPeriphCLKFreq+0xb2c>)
 8009532:	f8d2 00f0 	ldr.w	r0, [r2, #240]	@ 0xf0
 8009536:	f010 0002 	ands.w	r0, r0, #2
 800953a:	f43f aabe 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 800953e:	f5a3 2140 	sub.w	r1, r3, #786432	@ 0xc0000
 8009542:	424b      	negs	r3, r1
 8009544:	414b      	adcs	r3, r1
 8009546:	03d8      	lsls	r0, r3, #15
 8009548:	f7ff bab7 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 800954c:	46020c00 	.word	0x46020c00
 8009550:	0802700c 	.word	0x0802700c
 8009554:	00f42400 	.word	0x00f42400
    srcclk = __HAL_RCC_GET_FDCAN1_SOURCE();
 8009558:	4aba      	ldr	r2, [pc, #744]	@ (8009844 <HAL_RCCEx_GetPeriphCLKFreq+0xe24>)
 800955a:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
    if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (srcclk == RCC_FDCAN1CLKSOURCE_HSE))
 800955e:	6812      	ldr	r2, [r2, #0]
    srcclk = __HAL_RCC_GET_FDCAN1_SOURCE();
 8009560:	f003 7340 	and.w	r3, r3, #50331648	@ 0x3000000
    if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (srcclk == RCC_FDCAN1CLKSOURCE_HSE))
 8009564:	0392      	lsls	r2, r2, #14
 8009566:	d502      	bpl.n	800956e <HAL_RCCEx_GetPeriphCLKFreq+0xb4e>
 8009568:	2b00      	cmp	r3, #0
 800956a:	f000 81a6 	beq.w	80098ba <HAL_RCCEx_GetPeriphCLKFreq+0xe9a>
    else if (srcclk == RCC_FDCAN1CLKSOURCE_PLL1) /* PLL1 ? */
 800956e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8009572:	d105      	bne.n	8009580 <HAL_RCCEx_GetPeriphCLKFreq+0xb60>
      HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 8009574:	a801      	add	r0, sp, #4
 8009576:	f7ff f885 	bl	8008684 <HAL_RCCEx_GetPLL1ClockFreq>
      frequency = pll1_clocks.PLL1_Q_Frequency;
 800957a:	9802      	ldr	r0, [sp, #8]
 800957c:	f7ff ba9d 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    else if (srcclk == RCC_FDCAN1CLKSOURCE_PLL2) /* PLL2 ? */
 8009580:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8009584:	f040 819c 	bne.w	80098c0 <HAL_RCCEx_GetPeriphCLKFreq+0xea0>
      HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8009588:	a801      	add	r0, sp, #4
 800958a:	f7ff f915 	bl	80087b8 <HAL_RCCEx_GetPLL2ClockFreq>
      frequency = pll2_clocks.PLL2_P_Frequency;
 800958e:	9801      	ldr	r0, [sp, #4]
 8009590:	f7ff ba93 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_SPI1_SOURCE();
 8009594:	4bab      	ldr	r3, [pc, #684]	@ (8009844 <HAL_RCCEx_GetPeriphCLKFreq+0xe24>)
 8009596:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
 800959a:	f402 1240 	and.w	r2, r2, #3145728	@ 0x300000
    switch (srcclk)
 800959e:	f5b2 1f00 	cmp.w	r2, #2097152	@ 0x200000
 80095a2:	d010      	beq.n	80095c6 <HAL_RCCEx_GetPeriphCLKFreq+0xba6>
 80095a4:	d809      	bhi.n	80095ba <HAL_RCCEx_GetPeriphCLKFreq+0xb9a>
 80095a6:	2a00      	cmp	r2, #0
 80095a8:	f43f aca2 	beq.w	8008ef0 <HAL_RCCEx_GetPeriphCLKFreq+0x4d0>
 80095ac:	f5b2 1f80 	cmp.w	r2, #1048576	@ 0x100000
 80095b0:	f43f aca5 	beq.w	8008efe <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
          frequency = 0U;
 80095b4:	2000      	movs	r0, #0
 80095b6:	f7ff ba80 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    switch (srcclk)
 80095ba:	f5b2 1f40 	cmp.w	r2, #3145728	@ 0x300000
 80095be:	d00a      	beq.n	80095d6 <HAL_RCCEx_GetPeriphCLKFreq+0xbb6>
          frequency = 0U;
 80095c0:	2000      	movs	r0, #0
 80095c2:	f7ff ba7a 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
 80095c6:	6818      	ldr	r0, [r3, #0]
          frequency = HSI_VALUE;
 80095c8:	4b9f      	ldr	r3, [pc, #636]	@ (8009848 <HAL_RCCEx_GetPeriphCLKFreq+0xe28>)
 80095ca:	f410 6080 	ands.w	r0, r0, #1024	@ 0x400
 80095ce:	bf18      	it	ne
 80095d0:	4618      	movne	r0, r3
 80095d2:	f7ff ba72 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY))
 80095d6:	6818      	ldr	r0, [r3, #0]
 80095d8:	f010 0020 	ands.w	r0, r0, #32
 80095dc:	f43f aa6d 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 80095e0:	689a      	ldr	r2, [r3, #8]
 80095e2:	0210      	lsls	r0, r2, #8
 80095e4:	bf4c      	ite	mi
 80095e6:	689b      	ldrmi	r3, [r3, #8]
 80095e8:	f8d3 30f4 	ldrpl.w	r3, [r3, #244]	@ 0xf4
 80095ec:	4a97      	ldr	r2, [pc, #604]	@ (800984c <HAL_RCCEx_GetPeriphCLKFreq+0xe2c>)
 80095ee:	bf4c      	ite	mi
 80095f0:	f3c3 6303 	ubfxmi	r3, r3, #24, #4
 80095f4:	f3c3 2303 	ubfxpl	r3, r3, #8, #4
 80095f8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80095fc:	f7ff ba5d 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_SPI2_SOURCE();
 8009600:	4b90      	ldr	r3, [pc, #576]	@ (8009844 <HAL_RCCEx_GetPeriphCLKFreq+0xe24>)
 8009602:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
 8009606:	f402 3240 	and.w	r2, r2, #196608	@ 0x30000
    switch (srcclk)
 800960a:	f5b2 3f00 	cmp.w	r2, #131072	@ 0x20000
 800960e:	d010      	beq.n	8009632 <HAL_RCCEx_GetPeriphCLKFreq+0xc12>
 8009610:	d809      	bhi.n	8009626 <HAL_RCCEx_GetPeriphCLKFreq+0xc06>
 8009612:	2a00      	cmp	r2, #0
 8009614:	f43f ac90 	beq.w	8008f38 <HAL_RCCEx_GetPeriphCLKFreq+0x518>
 8009618:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 800961c:	f43f ac6f 	beq.w	8008efe <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
          frequency = 0U;
 8009620:	2000      	movs	r0, #0
 8009622:	f7ff ba4a 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    switch (srcclk)
 8009626:	f5b2 3f40 	cmp.w	r2, #196608	@ 0x30000
 800962a:	d00a      	beq.n	8009642 <HAL_RCCEx_GetPeriphCLKFreq+0xc22>
          frequency = 0U;
 800962c:	2000      	movs	r0, #0
 800962e:	f7ff ba44 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
 8009632:	6818      	ldr	r0, [r3, #0]
          frequency = HSI_VALUE;
 8009634:	4b84      	ldr	r3, [pc, #528]	@ (8009848 <HAL_RCCEx_GetPeriphCLKFreq+0xe28>)
 8009636:	f410 6080 	ands.w	r0, r0, #1024	@ 0x400
 800963a:	bf18      	it	ne
 800963c:	4618      	movne	r0, r3
 800963e:	f7ff ba3c 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY))
 8009642:	6818      	ldr	r0, [r3, #0]
 8009644:	f010 0020 	ands.w	r0, r0, #32
 8009648:	f43f aa37 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 800964c:	689a      	ldr	r2, [r3, #8]
 800964e:	0211      	lsls	r1, r2, #8
 8009650:	bf4c      	ite	mi
 8009652:	689b      	ldrmi	r3, [r3, #8]
 8009654:	f8d3 30f4 	ldrpl.w	r3, [r3, #244]	@ 0xf4
 8009658:	4a7c      	ldr	r2, [pc, #496]	@ (800984c <HAL_RCCEx_GetPeriphCLKFreq+0xe2c>)
 800965a:	bf4c      	ite	mi
 800965c:	f3c3 6303 	ubfxmi	r3, r3, #24, #4
 8009660:	f3c3 2303 	ubfxpl	r3, r3, #8, #4
 8009664:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8009668:	f7ff ba27 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_SPI3_SOURCE();
 800966c:	4b75      	ldr	r3, [pc, #468]	@ (8009844 <HAL_RCCEx_GetPeriphCLKFreq+0xe24>)
 800966e:	f8d3 20e8 	ldr.w	r2, [r3, #232]	@ 0xe8
 8009672:	f002 0218 	and.w	r2, r2, #24
    switch (srcclk)
 8009676:	2a10      	cmp	r2, #16
 8009678:	d00e      	beq.n	8009698 <HAL_RCCEx_GetPeriphCLKFreq+0xc78>
 800967a:	d808      	bhi.n	800968e <HAL_RCCEx_GetPeriphCLKFreq+0xc6e>
 800967c:	2a00      	cmp	r2, #0
 800967e:	f43f ad01 	beq.w	8009084 <HAL_RCCEx_GetPeriphCLKFreq+0x664>
 8009682:	2a08      	cmp	r2, #8
 8009684:	f43f ac3b 	beq.w	8008efe <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
          frequency = 0U;
 8009688:	2000      	movs	r0, #0
 800968a:	f7ff ba16 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    switch (srcclk)
 800968e:	2a18      	cmp	r2, #24
 8009690:	d00a      	beq.n	80096a8 <HAL_RCCEx_GetPeriphCLKFreq+0xc88>
          frequency = 0U;
 8009692:	2000      	movs	r0, #0
 8009694:	f7ff ba11 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
 8009698:	6818      	ldr	r0, [r3, #0]
          frequency = HSI_VALUE;
 800969a:	4b6b      	ldr	r3, [pc, #428]	@ (8009848 <HAL_RCCEx_GetPeriphCLKFreq+0xe28>)
 800969c:	f410 6080 	ands.w	r0, r0, #1024	@ 0x400
 80096a0:	bf18      	it	ne
 80096a2:	4618      	movne	r0, r3
 80096a4:	f7ff ba09 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY))
 80096a8:	6818      	ldr	r0, [r3, #0]
 80096aa:	f010 0020 	ands.w	r0, r0, #32
 80096ae:	f43f aa04 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 80096b2:	689a      	ldr	r2, [r3, #8]
 80096b4:	0212      	lsls	r2, r2, #8
 80096b6:	bf4c      	ite	mi
 80096b8:	689b      	ldrmi	r3, [r3, #8]
 80096ba:	f8d3 30f4 	ldrpl.w	r3, [r3, #244]	@ 0xf4
 80096be:	4a63      	ldr	r2, [pc, #396]	@ (800984c <HAL_RCCEx_GetPeriphCLKFreq+0xe2c>)
 80096c0:	bf4c      	ite	mi
 80096c2:	f3c3 6303 	ubfxmi	r3, r3, #24, #4
 80096c6:	f3c3 2303 	ubfxpl	r3, r3, #8, #4
 80096ca:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80096ce:	f7ff b9f4 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_OSPI_SOURCE();
 80096d2:	4a5c      	ldr	r2, [pc, #368]	@ (8009844 <HAL_RCCEx_GetPeriphCLKFreq+0xe24>)
 80096d4:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 80096d8:	f403 1340 	and.w	r3, r3, #3145728	@ 0x300000
    switch (srcclk)
 80096dc:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 80096e0:	f43f aba4 	beq.w	8008e2c <HAL_RCCEx_GetPeriphCLKFreq+0x40c>
 80096e4:	d808      	bhi.n	80096f8 <HAL_RCCEx_GetPeriphCLKFreq+0xcd8>
 80096e6:	2b00      	cmp	r3, #0
 80096e8:	f43f ac09 	beq.w	8008efe <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
 80096ec:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80096f0:	d009      	beq.n	8009706 <HAL_RCCEx_GetPeriphCLKFreq+0xce6>
          frequency = 0U;
 80096f2:	2000      	movs	r0, #0
 80096f4:	f7ff b9e1 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    switch (srcclk)
 80096f8:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 80096fc:	f43f abc9 	beq.w	8008e92 <HAL_RCCEx_GetPeriphCLKFreq+0x472>
          frequency = 0U;
 8009700:	2000      	movs	r0, #0
 8009702:	f7ff b9da 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY))
 8009706:	6810      	ldr	r0, [r2, #0]
 8009708:	f010 0020 	ands.w	r0, r0, #32
 800970c:	f43f a9d5 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 8009710:	6893      	ldr	r3, [r2, #8]
 8009712:	021b      	lsls	r3, r3, #8
 8009714:	bf4c      	ite	mi
 8009716:	6893      	ldrmi	r3, [r2, #8]
 8009718:	f8d2 30f4 	ldrpl.w	r3, [r2, #244]	@ 0xf4
 800971c:	4a4b      	ldr	r2, [pc, #300]	@ (800984c <HAL_RCCEx_GetPeriphCLKFreq+0xe2c>)
 800971e:	bf4c      	ite	mi
 8009720:	f3c3 6303 	ubfxmi	r3, r3, #24, #4
 8009724:	f3c3 2303 	ubfxpl	r3, r3, #8, #4
 8009728:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800972c:	f7ff b9c5 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    switch (srcclk)
 8009730:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 8009734:	f040 80c7 	bne.w	80098c6 <HAL_RCCEx_GetPeriphCLKFreq+0xea6>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 8009738:	a801      	add	r0, sp, #4
 800973a:	f7ff f8d7 	bl	80088ec <HAL_RCCEx_GetPLL3ClockFreq>
        frequency = pll3_clocks.PLL3_R_Frequency;
 800973e:	9803      	ldr	r0, [sp, #12]
        break;
 8009740:	f7ff b9bb 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_RNG_SOURCE();
 8009744:	4a3f      	ldr	r2, [pc, #252]	@ (8009844 <HAL_RCCEx_GetPeriphCLKFreq+0xe24>)
 8009746:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
    if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSI48RDY)) && (srcclk == RCC_RNGCLKSOURCE_HSI48))
 800974a:	6811      	ldr	r1, [r2, #0]
    srcclk = __HAL_RCC_GET_RNG_SOURCE();
 800974c:	f403 5340 	and.w	r3, r3, #12288	@ 0x3000
    if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSI48RDY)) && (srcclk == RCC_RNGCLKSOURCE_HSI48))
 8009750:	0489      	lsls	r1, r1, #18
 8009752:	d502      	bpl.n	800975a <HAL_RCCEx_GetPeriphCLKFreq+0xd3a>
 8009754:	2b00      	cmp	r3, #0
 8009756:	f000 80c0 	beq.w	80098da <HAL_RCCEx_GetPeriphCLKFreq+0xeba>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSI48RDY)) && (srcclk == RCC_RNGCLKSOURCE_HSI48_DIV2))
 800975a:	6812      	ldr	r2, [r2, #0]
 800975c:	0492      	lsls	r2, r2, #18
 800975e:	d503      	bpl.n	8009768 <HAL_RCCEx_GetPeriphCLKFreq+0xd48>
 8009760:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8009764:	f000 80bc 	beq.w	80098e0 <HAL_RCCEx_GetPeriphCLKFreq+0xec0>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_RNGCLKSOURCE_HSI))
 8009768:	4a36      	ldr	r2, [pc, #216]	@ (8009844 <HAL_RCCEx_GetPeriphCLKFreq+0xe24>)
 800976a:	6810      	ldr	r0, [r2, #0]
 800976c:	f410 6080 	ands.w	r0, r0, #1024	@ 0x400
 8009770:	f43f a9a3 	beq.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = HSI_VALUE;
 8009774:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8009778:	4833      	ldr	r0, [pc, #204]	@ (8009848 <HAL_RCCEx_GetPeriphCLKFreq+0xe28>)
 800977a:	bf18      	it	ne
 800977c:	2000      	movne	r0, #0
 800977e:	f7ff b99c 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_LTDC_SOURCE();
 8009782:	4b30      	ldr	r3, [pc, #192]	@ (8009844 <HAL_RCCEx_GetPeriphCLKFreq+0xe24>)
 8009784:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
    switch (srcclk)
 8009788:	0358      	lsls	r0, r3, #13
 800978a:	d5d5      	bpl.n	8009738 <HAL_RCCEx_GetPeriphCLKFreq+0xd18>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 800978c:	a801      	add	r0, sp, #4
 800978e:	f7ff f813 	bl	80087b8 <HAL_RCCEx_GetPLL2ClockFreq>
        frequency = pll2_clocks.PLL2_R_Frequency;
 8009792:	9803      	ldr	r0, [sp, #12]
        break;
 8009794:	f7ff b991 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    srcclk = __HAL_RCC_GET_USBPHY_SOURCE();
 8009798:	4a2a      	ldr	r2, [pc, #168]	@ (8009844 <HAL_RCCEx_GetPeriphCLKFreq+0xe24>)
 800979a:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
    if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (srcclk == RCC_USBPHYCLKSOURCE_HSE))
 800979e:	6811      	ldr	r1, [r2, #0]
    srcclk = __HAL_RCC_GET_USBPHY_SOURCE();
 80097a0:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
    if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (srcclk == RCC_USBPHYCLKSOURCE_HSE))
 80097a4:	0389      	lsls	r1, r1, #14
 80097a6:	d502      	bpl.n	80097ae <HAL_RCCEx_GetPeriphCLKFreq+0xd8e>
 80097a8:	2b00      	cmp	r3, #0
 80097aa:	f000 809c 	beq.w	80098e6 <HAL_RCCEx_GetPeriphCLKFreq+0xec6>
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (srcclk == RCC_USBPHYCLKSOURCE_HSE_DIV2))
 80097ae:	6812      	ldr	r2, [r2, #0]
 80097b0:	0392      	lsls	r2, r2, #14
 80097b2:	d503      	bpl.n	80097bc <HAL_RCCEx_GetPeriphCLKFreq+0xd9c>
 80097b4:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80097b8:	f000 8098 	beq.w	80098ec <HAL_RCCEx_GetPeriphCLKFreq+0xecc>
    else if (srcclk == RCC_USBPHYCLKSOURCE_PLL1) /* PLL1P */
 80097bc:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80097c0:	f43f ab8b 	beq.w	8008eda <HAL_RCCEx_GetPeriphCLKFreq+0x4ba>
    else if (srcclk == RCC_USBPHYCLKSOURCE_PLL1_DIV2) /* PLL1P_DIV2 */
 80097c4:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
 80097c8:	f040 8093 	bne.w	80098f2 <HAL_RCCEx_GetPeriphCLKFreq+0xed2>
      HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 80097cc:	a801      	add	r0, sp, #4
 80097ce:	f7fe ff59 	bl	8008684 <HAL_RCCEx_GetPLL1ClockFreq>
      frequency = (pll1_clocks.PLL1_P_Frequency) / 2U;
 80097d2:	9801      	ldr	r0, [sp, #4]
 80097d4:	0840      	lsrs	r0, r0, #1
 80097d6:	f7ff b970 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = 0U;
 80097da:	2000      	movs	r0, #0
 80097dc:	f7ff b96d 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 80097e0:	2000      	movs	r0, #0
 80097e2:	f7ff b96a 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
      frequency = LSE_VALUE;
 80097e6:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 80097ea:	f7ff b966 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        frequency = EXTERNAL_SAI1_CLOCK_VALUE;
 80097ee:	f64b 3080 	movw	r0, #48000	@ 0xbb80
 80097f2:	f7ff b962 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 80097f6:	f64b 3080 	movw	r0, #48000	@ 0xbb80
 80097fa:	f7ff b95e 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = 0U;
 80097fe:	2000      	movs	r0, #0
 8009800:	f7ff b95b 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = HSI_VALUE;
 8009804:	4810      	ldr	r0, [pc, #64]	@ (8009848 <HAL_RCCEx_GetPeriphCLKFreq+0xe28>)
 8009806:	f7ff b958 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 800980a:	480f      	ldr	r0, [pc, #60]	@ (8009848 <HAL_RCCEx_GetPeriphCLKFreq+0xe28>)
 800980c:	f7ff b955 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8009810:	480d      	ldr	r0, [pc, #52]	@ (8009848 <HAL_RCCEx_GetPeriphCLKFreq+0xe28>)
 8009812:	f7ff b952 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8009816:	480c      	ldr	r0, [pc, #48]	@ (8009848 <HAL_RCCEx_GetPeriphCLKFreq+0xe28>)
 8009818:	f7ff b94f 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 800981c:	480a      	ldr	r0, [pc, #40]	@ (8009848 <HAL_RCCEx_GetPeriphCLKFreq+0xe28>)
 800981e:	f7ff b94c 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8009822:	4809      	ldr	r0, [pc, #36]	@ (8009848 <HAL_RCCEx_GetPeriphCLKFreq+0xe28>)
 8009824:	f7ff b949 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8009828:	4807      	ldr	r0, [pc, #28]	@ (8009848 <HAL_RCCEx_GetPeriphCLKFreq+0xe28>)
 800982a:	f7ff b946 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 800982e:	4806      	ldr	r0, [pc, #24]	@ (8009848 <HAL_RCCEx_GetPeriphCLKFreq+0xe28>)
 8009830:	f7ff b943 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
      frequency = LSE_VALUE;
 8009834:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 8009838:	f7ff b93f 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = 0U;
 800983c:	2000      	movs	r0, #0
 800983e:	f7ff b93c 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 8009842:	bf00      	nop
 8009844:	46020c00 	.word	0x46020c00
 8009848:	00f42400 	.word	0x00f42400
 800984c:	0802700c 	.word	0x0802700c
          frequency = HSI_VALUE;
 8009850:	4829      	ldr	r0, [pc, #164]	@ (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0xed8>)
 8009852:	f7ff b932 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
        frequency = EXTERNAL_SAI1_CLOCK_VALUE;
 8009856:	f64b 3080 	movw	r0, #48000	@ 0xbb80
 800985a:	f7ff b92e 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 800985e:	f64b 3080 	movw	r0, #48000	@ 0xbb80
 8009862:	f7ff b92a 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = 0U;
 8009866:	2000      	movs	r0, #0
 8009868:	f7ff b927 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = HSI_VALUE;
 800986c:	4822      	ldr	r0, [pc, #136]	@ (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0xed8>)
 800986e:	f7ff b924 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = 0U;
 8009872:	2000      	movs	r0, #0
 8009874:	f7ff b921 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = HSI_VALUE;
 8009878:	481f      	ldr	r0, [pc, #124]	@ (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0xed8>)
 800987a:	f7ff b91e 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = 0U;
 800987e:	2000      	movs	r0, #0
 8009880:	f7ff b91b 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = HSI_VALUE;
 8009884:	481c      	ldr	r0, [pc, #112]	@ (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0xed8>)
 8009886:	f7ff b918 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = 0U;
 800988a:	2000      	movs	r0, #0
 800988c:	f7ff b915 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = HSI_VALUE;
 8009890:	4819      	ldr	r0, [pc, #100]	@ (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0xed8>)
 8009892:	f7ff b912 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = 0U;
 8009896:	2000      	movs	r0, #0
 8009898:	f7ff b90f 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = HSI_VALUE;
 800989c:	4816      	ldr	r0, [pc, #88]	@ (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0xed8>)
 800989e:	f7ff b90c 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = 0U;
 80098a2:	2000      	movs	r0, #0
 80098a4:	f7ff b909 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = HSI_VALUE;
 80098a8:	4813      	ldr	r0, [pc, #76]	@ (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0xed8>)
 80098aa:	f7ff b906 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 80098ae:	4812      	ldr	r0, [pc, #72]	@ (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0xed8>)
 80098b0:	f7ff b903 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 80098b4:	4810      	ldr	r0, [pc, #64]	@ (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0xed8>)
 80098b6:	f7ff b900 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 80098ba:	480f      	ldr	r0, [pc, #60]	@ (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0xed8>)
 80098bc:	f7ff b8fd 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = 0U;
 80098c0:	2000      	movs	r0, #0
 80098c2:	f7ff b8fa 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 80098c6:	2000      	movs	r0, #0
 80098c8:	f7ff b8f7 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
      frequency = LSE_VALUE;
 80098cc:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 80098d0:	f7ff b8f3 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = 0U;
 80098d4:	4618      	mov	r0, r3
 80098d6:	f7ff b8f0 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = HSI48_VALUE;
 80098da:	4808      	ldr	r0, [pc, #32]	@ (80098fc <HAL_RCCEx_GetPeriphCLKFreq+0xedc>)
 80098dc:	f7ff b8ed 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
      frequency = HSI48_VALUE >> 1U ;
 80098e0:	4807      	ldr	r0, [pc, #28]	@ (8009900 <HAL_RCCEx_GetPeriphCLKFreq+0xee0>)
 80098e2:	f7ff b8ea 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = HSI_VALUE;
 80098e6:	4804      	ldr	r0, [pc, #16]	@ (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0xed8>)
 80098e8:	f7ff b8e7 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
      frequency = HSI_VALUE >> 1U;
 80098ec:	4805      	ldr	r0, [pc, #20]	@ (8009904 <HAL_RCCEx_GetPeriphCLKFreq+0xee4>)
 80098ee:	f7ff b8e4 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
          frequency = 0U;
 80098f2:	2000      	movs	r0, #0
  return (frequency);
 80098f4:	f7ff b8e1 	b.w	8008aba <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 80098f8:	00f42400 	.word	0x00f42400
 80098fc:	02dc6c00 	.word	0x02dc6c00
 8009900:	016e3600 	.word	0x016e3600
 8009904:	007a1200 	.word	0x007a1200

08009908 <TIM_OC1_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8009908:	6a03      	ldr	r3, [r0, #32]

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800990a:	6a02      	ldr	r2, [r0, #32]
{
 800990c:	b570      	push	{r4, r5, r6, lr}
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800990e:	f022 0201 	bic.w	r2, r2, #1
 8009912:	6202      	str	r2, [r0, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8009914:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8009916:	6982      	ldr	r2, [r0, #24]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
  tmpccmrx &= ~TIM_CCMR1_CC1S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8009918:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800991a:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 800991e:	f022 0273 	bic.w	r2, r2, #115	@ 0x73
  tmpccmrx |= OC_Config->OCMode;
 8009922:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8009924:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 8009926:	f023 0302 	bic.w	r3, r3, #2
  tmpccer |= OC_Config->OCPolarity;
 800992a:	432b      	orrs	r3, r5

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800992c:	4d2b      	ldr	r5, [pc, #172]	@ (80099dc <TIM_OC1_SetConfig+0xd4>)
 800992e:	42a8      	cmp	r0, r5
 8009930:	d01f      	beq.n	8009972 <TIM_OC1_SetConfig+0x6a>
 8009932:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009936:	42a8      	cmp	r0, r5
 8009938:	d01b      	beq.n	8009972 <TIM_OC1_SetConfig+0x6a>
 800993a:	4d29      	ldr	r5, [pc, #164]	@ (80099e0 <TIM_OC1_SetConfig+0xd8>)
 800993c:	42a8      	cmp	r0, r5
 800993e:	d018      	beq.n	8009972 <TIM_OC1_SetConfig+0x6a>
 8009940:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009944:	42a8      	cmp	r0, r5
 8009946:	d014      	beq.n	8009972 <TIM_OC1_SetConfig+0x6a>
 8009948:	4d26      	ldr	r5, [pc, #152]	@ (80099e4 <TIM_OC1_SetConfig+0xdc>)
 800994a:	42a8      	cmp	r0, r5
 800994c:	d011      	beq.n	8009972 <TIM_OC1_SetConfig+0x6a>
 800994e:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009952:	42a8      	cmp	r0, r5
 8009954:	d00d      	beq.n	8009972 <TIM_OC1_SetConfig+0x6a>
 8009956:	4d24      	ldr	r5, [pc, #144]	@ (80099e8 <TIM_OC1_SetConfig+0xe0>)
 8009958:	42a8      	cmp	r0, r5
 800995a:	d00a      	beq.n	8009972 <TIM_OC1_SetConfig+0x6a>
 800995c:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009960:	42a8      	cmp	r0, r5
 8009962:	d006      	beq.n	8009972 <TIM_OC1_SetConfig+0x6a>
 8009964:	4d21      	ldr	r5, [pc, #132]	@ (80099ec <TIM_OC1_SetConfig+0xe4>)
 8009966:	42a8      	cmp	r0, r5
 8009968:	d003      	beq.n	8009972 <TIM_OC1_SetConfig+0x6a>
 800996a:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 800996e:	42a8      	cmp	r0, r5
 8009970:	d12e      	bne.n	80099d0 <TIM_OC1_SetConfig+0xc8>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8009972:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 8009974:	f023 0308 	bic.w	r3, r3, #8
    tmpccer |= OC_Config->OCNPolarity;
 8009978:	432b      	orrs	r3, r5
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800997a:	4d18      	ldr	r5, [pc, #96]	@ (80099dc <TIM_OC1_SetConfig+0xd4>)
    tmpccer &= ~TIM_CCER_CC1NE;
 800997c:	f023 0304 	bic.w	r3, r3, #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009980:	42a8      	cmp	r0, r5
 8009982:	d01f      	beq.n	80099c4 <TIM_OC1_SetConfig+0xbc>
 8009984:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009988:	42a8      	cmp	r0, r5
 800998a:	d01b      	beq.n	80099c4 <TIM_OC1_SetConfig+0xbc>
 800998c:	4d14      	ldr	r5, [pc, #80]	@ (80099e0 <TIM_OC1_SetConfig+0xd8>)
 800998e:	42a8      	cmp	r0, r5
 8009990:	d018      	beq.n	80099c4 <TIM_OC1_SetConfig+0xbc>
 8009992:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009996:	42a8      	cmp	r0, r5
 8009998:	d014      	beq.n	80099c4 <TIM_OC1_SetConfig+0xbc>
 800999a:	4d12      	ldr	r5, [pc, #72]	@ (80099e4 <TIM_OC1_SetConfig+0xdc>)
 800999c:	42a8      	cmp	r0, r5
 800999e:	d011      	beq.n	80099c4 <TIM_OC1_SetConfig+0xbc>
 80099a0:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 80099a4:	42a8      	cmp	r0, r5
 80099a6:	d00d      	beq.n	80099c4 <TIM_OC1_SetConfig+0xbc>
 80099a8:	4d0f      	ldr	r5, [pc, #60]	@ (80099e8 <TIM_OC1_SetConfig+0xe0>)
 80099aa:	42a8      	cmp	r0, r5
 80099ac:	d00a      	beq.n	80099c4 <TIM_OC1_SetConfig+0xbc>
 80099ae:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 80099b2:	42a8      	cmp	r0, r5
 80099b4:	d006      	beq.n	80099c4 <TIM_OC1_SetConfig+0xbc>
 80099b6:	4d0d      	ldr	r5, [pc, #52]	@ (80099ec <TIM_OC1_SetConfig+0xe4>)
 80099b8:	42a8      	cmp	r0, r5
 80099ba:	d003      	beq.n	80099c4 <TIM_OC1_SetConfig+0xbc>
 80099bc:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 80099c0:	42a8      	cmp	r0, r5
 80099c2:	d105      	bne.n	80099d0 <TIM_OC1_SetConfig+0xc8>
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
    tmpcr2 &= ~TIM_CR2_OIS1N;
 80099c4:	f424 7540 	bic.w	r5, r4, #768	@ 0x300
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 80099c8:	e9d1 4605 	ldrd	r4, r6, [r1, #20]
 80099cc:	4334      	orrs	r4, r6
 80099ce:	432c      	orrs	r4, r5
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80099d0:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 80099d2:	6182      	str	r2, [r0, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 80099d4:	684a      	ldr	r2, [r1, #4]
 80099d6:	6342      	str	r2, [r0, #52]	@ 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80099d8:	6203      	str	r3, [r0, #32]
}
 80099da:	bd70      	pop	{r4, r5, r6, pc}
 80099dc:	40012c00 	.word	0x40012c00
 80099e0:	40013400 	.word	0x40013400
 80099e4:	40014000 	.word	0x40014000
 80099e8:	40014400 	.word	0x40014400
 80099ec:	40014800 	.word	0x40014800

080099f0 <TIM_OC3_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80099f0:	6a03      	ldr	r3, [r0, #32]

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 80099f2:	6a02      	ldr	r2, [r0, #32]
{
 80099f4:	b570      	push	{r4, r5, r6, lr}
  TIMx->CCER &= ~TIM_CCER_CC3E;
 80099f6:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80099fa:	6202      	str	r2, [r0, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80099fc:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 80099fe:	69c2      	ldr	r2, [r0, #28]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
  tmpccmrx &= ~TIM_CCMR2_CC3S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8009a00:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8009a02:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8009a06:	f022 0273 	bic.w	r2, r2, #115	@ 0x73
  tmpccmrx |= OC_Config->OCMode;
 8009a0a:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8009a0c:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 8009a0e:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8009a12:	ea43 2305 	orr.w	r3, r3, r5, lsl #8

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8009a16:	4d22      	ldr	r5, [pc, #136]	@ (8009aa0 <TIM_OC3_SetConfig+0xb0>)
 8009a18:	42a8      	cmp	r0, r5
 8009a1a:	d00a      	beq.n	8009a32 <TIM_OC3_SetConfig+0x42>
 8009a1c:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009a20:	42a8      	cmp	r0, r5
 8009a22:	d006      	beq.n	8009a32 <TIM_OC3_SetConfig+0x42>
 8009a24:	4d1f      	ldr	r5, [pc, #124]	@ (8009aa4 <TIM_OC3_SetConfig+0xb4>)
 8009a26:	42a8      	cmp	r0, r5
 8009a28:	d003      	beq.n	8009a32 <TIM_OC3_SetConfig+0x42>
 8009a2a:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009a2e:	42a8      	cmp	r0, r5
 8009a30:	d114      	bne.n	8009a5c <TIM_OC3_SetConfig+0x6c>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8009a32:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 8009a34:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8009a38:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009a3c:	4d18      	ldr	r5, [pc, #96]	@ (8009aa0 <TIM_OC3_SetConfig+0xb0>)
    tmpccer &= ~TIM_CCER_CC3NE;
 8009a3e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009a42:	42a8      	cmp	r0, r5
 8009a44:	d01f      	beq.n	8009a86 <TIM_OC3_SetConfig+0x96>
 8009a46:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009a4a:	42a8      	cmp	r0, r5
 8009a4c:	d01b      	beq.n	8009a86 <TIM_OC3_SetConfig+0x96>
 8009a4e:	4d15      	ldr	r5, [pc, #84]	@ (8009aa4 <TIM_OC3_SetConfig+0xb4>)
 8009a50:	42a8      	cmp	r0, r5
 8009a52:	d018      	beq.n	8009a86 <TIM_OC3_SetConfig+0x96>
 8009a54:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009a58:	42a8      	cmp	r0, r5
 8009a5a:	d014      	beq.n	8009a86 <TIM_OC3_SetConfig+0x96>
 8009a5c:	4d12      	ldr	r5, [pc, #72]	@ (8009aa8 <TIM_OC3_SetConfig+0xb8>)
 8009a5e:	42a8      	cmp	r0, r5
 8009a60:	d011      	beq.n	8009a86 <TIM_OC3_SetConfig+0x96>
 8009a62:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009a66:	42a8      	cmp	r0, r5
 8009a68:	d00d      	beq.n	8009a86 <TIM_OC3_SetConfig+0x96>
 8009a6a:	4d10      	ldr	r5, [pc, #64]	@ (8009aac <TIM_OC3_SetConfig+0xbc>)
 8009a6c:	42a8      	cmp	r0, r5
 8009a6e:	d00a      	beq.n	8009a86 <TIM_OC3_SetConfig+0x96>
 8009a70:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009a74:	42a8      	cmp	r0, r5
 8009a76:	d006      	beq.n	8009a86 <TIM_OC3_SetConfig+0x96>
 8009a78:	4d0d      	ldr	r5, [pc, #52]	@ (8009ab0 <TIM_OC3_SetConfig+0xc0>)
 8009a7a:	42a8      	cmp	r0, r5
 8009a7c:	d003      	beq.n	8009a86 <TIM_OC3_SetConfig+0x96>
 8009a7e:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009a82:	42a8      	cmp	r0, r5
 8009a84:	d106      	bne.n	8009a94 <TIM_OC3_SetConfig+0xa4>
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8009a86:	f424 5540 	bic.w	r5, r4, #12288	@ 0x3000
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8009a8a:	e9d1 4605 	ldrd	r4, r6, [r1, #20]
 8009a8e:	4334      	orrs	r4, r6
 8009a90:	ea45 1404 	orr.w	r4, r5, r4, lsl #4
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8009a94:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8009a96:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8009a98:	684a      	ldr	r2, [r1, #4]
 8009a9a:	63c2      	str	r2, [r0, #60]	@ 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8009a9c:	6203      	str	r3, [r0, #32]
}
 8009a9e:	bd70      	pop	{r4, r5, r6, pc}
 8009aa0:	40012c00 	.word	0x40012c00
 8009aa4:	40013400 	.word	0x40013400
 8009aa8:	40014000 	.word	0x40014000
 8009aac:	40014400 	.word	0x40014400
 8009ab0:	40014800 	.word	0x40014800

08009ab4 <TIM_OC4_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8009ab4:	6a03      	ldr	r3, [r0, #32]

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8009ab6:	6a02      	ldr	r2, [r0, #32]
{
 8009ab8:	b570      	push	{r4, r5, r6, lr}
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8009aba:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8009abe:	6202      	str	r2, [r0, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8009ac0:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8009ac2:	69c2      	ldr	r2, [r0, #28]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8009ac4:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8009ac6:	f022 7280 	bic.w	r2, r2, #16777216	@ 0x1000000
 8009aca:	f422 42e6 	bic.w	r2, r2, #29440	@ 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8009ace:	ea42 2205 	orr.w	r2, r2, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8009ad2:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 8009ad4:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8009ad8:	ea43 3305 	orr.w	r3, r3, r5, lsl #12

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_4))
 8009adc:	4d22      	ldr	r5, [pc, #136]	@ (8009b68 <TIM_OC4_SetConfig+0xb4>)
 8009ade:	42a8      	cmp	r0, r5
 8009ae0:	d00a      	beq.n	8009af8 <TIM_OC4_SetConfig+0x44>
 8009ae2:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009ae6:	42a8      	cmp	r0, r5
 8009ae8:	d006      	beq.n	8009af8 <TIM_OC4_SetConfig+0x44>
 8009aea:	4d20      	ldr	r5, [pc, #128]	@ (8009b6c <TIM_OC4_SetConfig+0xb8>)
 8009aec:	42a8      	cmp	r0, r5
 8009aee:	d003      	beq.n	8009af8 <TIM_OC4_SetConfig+0x44>
 8009af0:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009af4:	42a8      	cmp	r0, r5
 8009af6:	d114      	bne.n	8009b22 <TIM_OC4_SetConfig+0x6e>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC4NP;
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 12U);
 8009af8:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC4NP;
 8009afa:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
    tmpccer |= (OC_Config->OCNPolarity << 12U);
 8009afe:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC4NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009b02:	4d19      	ldr	r5, [pc, #100]	@ (8009b68 <TIM_OC4_SetConfig+0xb4>)
    tmpccer &= ~TIM_CCER_CC4NE;
 8009b04:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009b08:	42a8      	cmp	r0, r5
 8009b0a:	d01f      	beq.n	8009b4c <TIM_OC4_SetConfig+0x98>
 8009b0c:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009b10:	42a8      	cmp	r0, r5
 8009b12:	d01b      	beq.n	8009b4c <TIM_OC4_SetConfig+0x98>
 8009b14:	4d15      	ldr	r5, [pc, #84]	@ (8009b6c <TIM_OC4_SetConfig+0xb8>)
 8009b16:	42a8      	cmp	r0, r5
 8009b18:	d018      	beq.n	8009b4c <TIM_OC4_SetConfig+0x98>
 8009b1a:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009b1e:	42a8      	cmp	r0, r5
 8009b20:	d014      	beq.n	8009b4c <TIM_OC4_SetConfig+0x98>
 8009b22:	4d13      	ldr	r5, [pc, #76]	@ (8009b70 <TIM_OC4_SetConfig+0xbc>)
 8009b24:	42a8      	cmp	r0, r5
 8009b26:	d011      	beq.n	8009b4c <TIM_OC4_SetConfig+0x98>
 8009b28:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009b2c:	42a8      	cmp	r0, r5
 8009b2e:	d00d      	beq.n	8009b4c <TIM_OC4_SetConfig+0x98>
 8009b30:	4d10      	ldr	r5, [pc, #64]	@ (8009b74 <TIM_OC4_SetConfig+0xc0>)
 8009b32:	42a8      	cmp	r0, r5
 8009b34:	d00a      	beq.n	8009b4c <TIM_OC4_SetConfig+0x98>
 8009b36:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009b3a:	42a8      	cmp	r0, r5
 8009b3c:	d006      	beq.n	8009b4c <TIM_OC4_SetConfig+0x98>
 8009b3e:	4d0e      	ldr	r5, [pc, #56]	@ (8009b78 <TIM_OC4_SetConfig+0xc4>)
 8009b40:	42a8      	cmp	r0, r5
 8009b42:	d003      	beq.n	8009b4c <TIM_OC4_SetConfig+0x98>
 8009b44:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009b48:	42a8      	cmp	r0, r5
 8009b4a:	d106      	bne.n	8009b5a <TIM_OC4_SetConfig+0xa6>
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
    /* Reset the Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4N;
 8009b4c:	f424 4540 	bic.w	r5, r4, #49152	@ 0xc000

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 6U);
 8009b50:	e9d1 4605 	ldrd	r4, r6, [r1, #20]
 8009b54:	4334      	orrs	r4, r6
 8009b56:	ea45 1484 	orr.w	r4, r5, r4, lsl #6
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8009b5a:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8009b5c:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8009b5e:	684a      	ldr	r2, [r1, #4]
 8009b60:	6402      	str	r2, [r0, #64]	@ 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8009b62:	6203      	str	r3, [r0, #32]
}
 8009b64:	bd70      	pop	{r4, r5, r6, pc}
 8009b66:	bf00      	nop
 8009b68:	40012c00 	.word	0x40012c00
 8009b6c:	40013400 	.word	0x40013400
 8009b70:	40014000 	.word	0x40014000
 8009b74:	40014400 	.word	0x40014400
 8009b78:	40014800 	.word	0x40014800

08009b7c <TIM_OC5_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8009b7c:	6a03      	ldr	r3, [r0, #32]

  /* Disable the output: Reset the CCxE Bit */
  TIMx->CCER &= ~TIM_CCER_CC5E;
 8009b7e:	6a02      	ldr	r2, [r0, #32]
{
 8009b80:	b530      	push	{r4, r5, lr}
  TIMx->CCER &= ~TIM_CCER_CC5E;
 8009b82:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8009b86:	6202      	str	r2, [r0, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8009b88:	6844      	ldr	r4, [r0, #4]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR3;
 8009b8a:	6d02      	ldr	r2, [r0, #80]	@ 0x50

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~(TIM_CCMR3_OC5M);
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8009b8c:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~(TIM_CCMR3_OC5M);
 8009b8e:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8009b92:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
  tmpccmrx |= OC_Config->OCMode;
 8009b96:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC5P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 16U);
 8009b98:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC5P;
 8009b9a:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
  tmpccer |= (OC_Config->OCPolarity << 16U);
 8009b9e:	ea43 4305 	orr.w	r3, r3, r5, lsl #16

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009ba2:	4d17      	ldr	r5, [pc, #92]	@ (8009c00 <TIM_OC5_SetConfig+0x84>)
 8009ba4:	42a8      	cmp	r0, r5
 8009ba6:	d01f      	beq.n	8009be8 <TIM_OC5_SetConfig+0x6c>
 8009ba8:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009bac:	42a8      	cmp	r0, r5
 8009bae:	d01b      	beq.n	8009be8 <TIM_OC5_SetConfig+0x6c>
 8009bb0:	4d14      	ldr	r5, [pc, #80]	@ (8009c04 <TIM_OC5_SetConfig+0x88>)
 8009bb2:	42a8      	cmp	r0, r5
 8009bb4:	d018      	beq.n	8009be8 <TIM_OC5_SetConfig+0x6c>
 8009bb6:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009bba:	42a8      	cmp	r0, r5
 8009bbc:	d014      	beq.n	8009be8 <TIM_OC5_SetConfig+0x6c>
 8009bbe:	4d12      	ldr	r5, [pc, #72]	@ (8009c08 <TIM_OC5_SetConfig+0x8c>)
 8009bc0:	42a8      	cmp	r0, r5
 8009bc2:	d011      	beq.n	8009be8 <TIM_OC5_SetConfig+0x6c>
 8009bc4:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009bc8:	42a8      	cmp	r0, r5
 8009bca:	d00d      	beq.n	8009be8 <TIM_OC5_SetConfig+0x6c>
 8009bcc:	4d0f      	ldr	r5, [pc, #60]	@ (8009c0c <TIM_OC5_SetConfig+0x90>)
 8009bce:	42a8      	cmp	r0, r5
 8009bd0:	d00a      	beq.n	8009be8 <TIM_OC5_SetConfig+0x6c>
 8009bd2:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009bd6:	42a8      	cmp	r0, r5
 8009bd8:	d006      	beq.n	8009be8 <TIM_OC5_SetConfig+0x6c>
 8009bda:	4d0d      	ldr	r5, [pc, #52]	@ (8009c10 <TIM_OC5_SetConfig+0x94>)
 8009bdc:	42a8      	cmp	r0, r5
 8009bde:	d003      	beq.n	8009be8 <TIM_OC5_SetConfig+0x6c>
 8009be0:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009be4:	42a8      	cmp	r0, r5
 8009be6:	d104      	bne.n	8009bf2 <TIM_OC5_SetConfig+0x76>
  {
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS5;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 8U);
 8009be8:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS5;
 8009bea:	f424 3480 	bic.w	r4, r4, #65536	@ 0x10000
    tmpcr2 |= (OC_Config->OCIdleState << 8U);
 8009bee:	ea44 2405 	orr.w	r4, r4, r5, lsl #8
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8009bf2:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;
 8009bf4:	6502      	str	r2, [r0, #80]	@ 0x50

  /* Set the Capture Compare Register value */
  TIMx->CCR5 = OC_Config->Pulse;
 8009bf6:	684a      	ldr	r2, [r1, #4]
 8009bf8:	6482      	str	r2, [r0, #72]	@ 0x48

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8009bfa:	6203      	str	r3, [r0, #32]
}
 8009bfc:	bd30      	pop	{r4, r5, pc}
 8009bfe:	bf00      	nop
 8009c00:	40012c00 	.word	0x40012c00
 8009c04:	40013400 	.word	0x40013400
 8009c08:	40014000 	.word	0x40014000
 8009c0c:	40014400 	.word	0x40014400
 8009c10:	40014800 	.word	0x40014800

08009c14 <TIM_OC6_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8009c14:	6a03      	ldr	r3, [r0, #32]

  /* Disable the output: Reset the CCxE Bit */
  TIMx->CCER &= ~TIM_CCER_CC6E;
 8009c16:	6a02      	ldr	r2, [r0, #32]
{
 8009c18:	b530      	push	{r4, r5, lr}
  TIMx->CCER &= ~TIM_CCER_CC6E;
 8009c1a:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
 8009c1e:	6202      	str	r2, [r0, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8009c20:	6844      	ldr	r4, [r0, #4]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR3;
 8009c22:	6d02      	ldr	r2, [r0, #80]	@ 0x50

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~(TIM_CCMR3_OC6M);
  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8009c24:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~(TIM_CCMR3_OC6M);
 8009c26:	f022 7280 	bic.w	r2, r2, #16777216	@ 0x1000000
 8009c2a:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8009c2e:	ea42 2205 	orr.w	r2, r2, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= (uint32_t)~TIM_CCER_CC6P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 20U);
 8009c32:	688d      	ldr	r5, [r1, #8]
  tmpccer &= (uint32_t)~TIM_CCER_CC6P;
 8009c34:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
  tmpccer |= (OC_Config->OCPolarity << 20U);
 8009c38:	ea43 5305 	orr.w	r3, r3, r5, lsl #20

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009c3c:	4d16      	ldr	r5, [pc, #88]	@ (8009c98 <TIM_OC6_SetConfig+0x84>)
 8009c3e:	42a8      	cmp	r0, r5
 8009c40:	d01f      	beq.n	8009c82 <TIM_OC6_SetConfig+0x6e>
 8009c42:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009c46:	42a8      	cmp	r0, r5
 8009c48:	d01b      	beq.n	8009c82 <TIM_OC6_SetConfig+0x6e>
 8009c4a:	4d14      	ldr	r5, [pc, #80]	@ (8009c9c <TIM_OC6_SetConfig+0x88>)
 8009c4c:	42a8      	cmp	r0, r5
 8009c4e:	d018      	beq.n	8009c82 <TIM_OC6_SetConfig+0x6e>
 8009c50:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009c54:	42a8      	cmp	r0, r5
 8009c56:	d014      	beq.n	8009c82 <TIM_OC6_SetConfig+0x6e>
 8009c58:	4d11      	ldr	r5, [pc, #68]	@ (8009ca0 <TIM_OC6_SetConfig+0x8c>)
 8009c5a:	42a8      	cmp	r0, r5
 8009c5c:	d011      	beq.n	8009c82 <TIM_OC6_SetConfig+0x6e>
 8009c5e:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009c62:	42a8      	cmp	r0, r5
 8009c64:	d00d      	beq.n	8009c82 <TIM_OC6_SetConfig+0x6e>
 8009c66:	4d0f      	ldr	r5, [pc, #60]	@ (8009ca4 <TIM_OC6_SetConfig+0x90>)
 8009c68:	42a8      	cmp	r0, r5
 8009c6a:	d00a      	beq.n	8009c82 <TIM_OC6_SetConfig+0x6e>
 8009c6c:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009c70:	42a8      	cmp	r0, r5
 8009c72:	d006      	beq.n	8009c82 <TIM_OC6_SetConfig+0x6e>
 8009c74:	4d0c      	ldr	r5, [pc, #48]	@ (8009ca8 <TIM_OC6_SetConfig+0x94>)
 8009c76:	42a8      	cmp	r0, r5
 8009c78:	d003      	beq.n	8009c82 <TIM_OC6_SetConfig+0x6e>
 8009c7a:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 8009c7e:	42a8      	cmp	r0, r5
 8009c80:	d104      	bne.n	8009c8c <TIM_OC6_SetConfig+0x78>
  {
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS6;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 10U);
 8009c82:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS6;
 8009c84:	f424 2480 	bic.w	r4, r4, #262144	@ 0x40000
    tmpcr2 |= (OC_Config->OCIdleState << 10U);
 8009c88:	ea44 2485 	orr.w	r4, r4, r5, lsl #10
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8009c8c:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;
 8009c8e:	6502      	str	r2, [r0, #80]	@ 0x50

  /* Set the Capture Compare Register value */
  TIMx->CCR6 = OC_Config->Pulse;
 8009c90:	684a      	ldr	r2, [r1, #4]
 8009c92:	64c2      	str	r2, [r0, #76]	@ 0x4c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8009c94:	6203      	str	r3, [r0, #32]
}
 8009c96:	bd30      	pop	{r4, r5, pc}
 8009c98:	40012c00 	.word	0x40012c00
 8009c9c:	40013400 	.word	0x40013400
 8009ca0:	40014000 	.word	0x40014000
 8009ca4:	40014400 	.word	0x40014400
 8009ca8:	40014800 	.word	0x40014800

08009cac <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 8009cac:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8009cb0:	2b01      	cmp	r3, #1
 8009cb2:	d145      	bne.n	8009d40 <HAL_TIM_Base_Start_IT+0x94>
  htim->State = HAL_TIM_STATE_BUSY;
 8009cb4:	2302      	movs	r3, #2
 8009cb6:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8009cba:	6803      	ldr	r3, [r0, #0]
 8009cbc:	68da      	ldr	r2, [r3, #12]
 8009cbe:	f042 0201 	orr.w	r2, r2, #1
 8009cc2:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8009cc4:	4a1f      	ldr	r2, [pc, #124]	@ (8009d44 <HAL_TIM_Base_Start_IT+0x98>)
 8009cc6:	4293      	cmp	r3, r2
 8009cc8:	d02c      	beq.n	8009d24 <HAL_TIM_Base_Start_IT+0x78>
 8009cca:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8009cce:	4293      	cmp	r3, r2
 8009cd0:	d028      	beq.n	8009d24 <HAL_TIM_Base_Start_IT+0x78>
 8009cd2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8009cd6:	d025      	beq.n	8009d24 <HAL_TIM_Base_Start_IT+0x78>
 8009cd8:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8009cdc:	d022      	beq.n	8009d24 <HAL_TIM_Base_Start_IT+0x78>
 8009cde:	4a1a      	ldr	r2, [pc, #104]	@ (8009d48 <HAL_TIM_Base_Start_IT+0x9c>)
 8009ce0:	4293      	cmp	r3, r2
 8009ce2:	d01f      	beq.n	8009d24 <HAL_TIM_Base_Start_IT+0x78>
 8009ce4:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8009ce8:	4293      	cmp	r3, r2
 8009cea:	d01b      	beq.n	8009d24 <HAL_TIM_Base_Start_IT+0x78>
 8009cec:	4a17      	ldr	r2, [pc, #92]	@ (8009d4c <HAL_TIM_Base_Start_IT+0xa0>)
 8009cee:	4293      	cmp	r3, r2
 8009cf0:	d018      	beq.n	8009d24 <HAL_TIM_Base_Start_IT+0x78>
 8009cf2:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8009cf6:	4293      	cmp	r3, r2
 8009cf8:	d014      	beq.n	8009d24 <HAL_TIM_Base_Start_IT+0x78>
 8009cfa:	4a15      	ldr	r2, [pc, #84]	@ (8009d50 <HAL_TIM_Base_Start_IT+0xa4>)
 8009cfc:	4293      	cmp	r3, r2
 8009cfe:	d011      	beq.n	8009d24 <HAL_TIM_Base_Start_IT+0x78>
 8009d00:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8009d04:	4293      	cmp	r3, r2
 8009d06:	d00d      	beq.n	8009d24 <HAL_TIM_Base_Start_IT+0x78>
 8009d08:	4a12      	ldr	r2, [pc, #72]	@ (8009d54 <HAL_TIM_Base_Start_IT+0xa8>)
 8009d0a:	4293      	cmp	r3, r2
 8009d0c:	d00a      	beq.n	8009d24 <HAL_TIM_Base_Start_IT+0x78>
 8009d0e:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8009d12:	4293      	cmp	r3, r2
 8009d14:	d006      	beq.n	8009d24 <HAL_TIM_Base_Start_IT+0x78>
 8009d16:	4a10      	ldr	r2, [pc, #64]	@ (8009d58 <HAL_TIM_Base_Start_IT+0xac>)
 8009d18:	4293      	cmp	r3, r2
 8009d1a:	d003      	beq.n	8009d24 <HAL_TIM_Base_Start_IT+0x78>
 8009d1c:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8009d20:	4293      	cmp	r3, r2
 8009d22:	d107      	bne.n	8009d34 <HAL_TIM_Base_Start_IT+0x88>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8009d24:	6899      	ldr	r1, [r3, #8]
 8009d26:	4a0d      	ldr	r2, [pc, #52]	@ (8009d5c <HAL_TIM_Base_Start_IT+0xb0>)
 8009d28:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8009d2a:	2a06      	cmp	r2, #6
 8009d2c:	d006      	beq.n	8009d3c <HAL_TIM_Base_Start_IT+0x90>
 8009d2e:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 8009d32:	d003      	beq.n	8009d3c <HAL_TIM_Base_Start_IT+0x90>
      __HAL_TIM_ENABLE(htim);
 8009d34:	681a      	ldr	r2, [r3, #0]
 8009d36:	f042 0201 	orr.w	r2, r2, #1
 8009d3a:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 8009d3c:	2000      	movs	r0, #0
 8009d3e:	4770      	bx	lr
    return HAL_ERROR;
 8009d40:	2001      	movs	r0, #1
}
 8009d42:	4770      	bx	lr
 8009d44:	40012c00 	.word	0x40012c00
 8009d48:	40000400 	.word	0x40000400
 8009d4c:	40000800 	.word	0x40000800
 8009d50:	40000c00 	.word	0x40000c00
 8009d54:	40013400 	.word	0x40013400
 8009d58:	40014000 	.word	0x40014000
 8009d5c:	00010007 	.word	0x00010007

08009d60 <HAL_TIM_PWM_MspInit>:
__weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
 8009d60:	4770      	bx	lr

08009d62 <HAL_TIM_OC_DelayElapsedCallback>:
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8009d62:	4770      	bx	lr

08009d64 <HAL_TIM_IC_CaptureCallback>:
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8009d64:	4770      	bx	lr

08009d66 <HAL_TIM_PWM_PulseFinishedCallback>:
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8009d66:	4770      	bx	lr

08009d68 <HAL_TIM_TriggerCallback>:
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 8009d68:	4770      	bx	lr

08009d6a <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 8009d6a:	6803      	ldr	r3, [r0, #0]
{
 8009d6c:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 8009d6e:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 8009d70:	691e      	ldr	r6, [r3, #16]
{
 8009d72:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8009d74:	07b2      	lsls	r2, r6, #30
 8009d76:	d50e      	bpl.n	8009d96 <HAL_TIM_IRQHandler+0x2c>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 8009d78:	07a9      	lsls	r1, r5, #30
 8009d7a:	d50c      	bpl.n	8009d96 <HAL_TIM_IRQHandler+0x2c>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 8009d7c:	f06f 0202 	mvn.w	r2, #2
 8009d80:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8009d82:	2201      	movs	r2, #1
 8009d84:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8009d86:	699b      	ldr	r3, [r3, #24]
 8009d88:	079a      	lsls	r2, r3, #30
 8009d8a:	f000 80a4 	beq.w	8009ed6 <HAL_TIM_IRQHandler+0x16c>
          HAL_TIM_IC_CaptureCallback(htim);
 8009d8e:	f7ff ffe9 	bl	8009d64 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8009d92:	2300      	movs	r3, #0
 8009d94:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 8009d96:	0773      	lsls	r3, r6, #29
 8009d98:	d511      	bpl.n	8009dbe <HAL_TIM_IRQHandler+0x54>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 8009d9a:	0768      	lsls	r0, r5, #29
 8009d9c:	d50f      	bpl.n	8009dbe <HAL_TIM_IRQHandler+0x54>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8009d9e:	f06f 0204 	mvn.w	r2, #4
 8009da2:	6823      	ldr	r3, [r4, #0]
        HAL_TIM_IC_CaptureCallback(htim);
 8009da4:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8009da6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8009da8:	2202      	movs	r2, #2
 8009daa:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8009dac:	699b      	ldr	r3, [r3, #24]
 8009dae:	f413 7f40 	tst.w	r3, #768	@ 0x300
 8009db2:	f000 8096 	beq.w	8009ee2 <HAL_TIM_IRQHandler+0x178>
        HAL_TIM_IC_CaptureCallback(htim);
 8009db6:	f7ff ffd5 	bl	8009d64 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8009dba:	2300      	movs	r3, #0
 8009dbc:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 8009dbe:	0731      	lsls	r1, r6, #28
 8009dc0:	d510      	bpl.n	8009de4 <HAL_TIM_IRQHandler+0x7a>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 8009dc2:	072a      	lsls	r2, r5, #28
 8009dc4:	d50e      	bpl.n	8009de4 <HAL_TIM_IRQHandler+0x7a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8009dc6:	f06f 0208 	mvn.w	r2, #8
 8009dca:	6823      	ldr	r3, [r4, #0]
        HAL_TIM_IC_CaptureCallback(htim);
 8009dcc:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8009dce:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8009dd0:	2204      	movs	r2, #4
 8009dd2:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8009dd4:	69db      	ldr	r3, [r3, #28]
 8009dd6:	079b      	lsls	r3, r3, #30
 8009dd8:	f000 8089 	beq.w	8009eee <HAL_TIM_IRQHandler+0x184>
        HAL_TIM_IC_CaptureCallback(htim);
 8009ddc:	f7ff ffc2 	bl	8009d64 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8009de0:	2300      	movs	r3, #0
 8009de2:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 8009de4:	06f1      	lsls	r1, r6, #27
 8009de6:	d510      	bpl.n	8009e0a <HAL_TIM_IRQHandler+0xa0>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8009de8:	06ea      	lsls	r2, r5, #27
 8009dea:	d50e      	bpl.n	8009e0a <HAL_TIM_IRQHandler+0xa0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8009dec:	f06f 0210 	mvn.w	r2, #16
 8009df0:	6823      	ldr	r3, [r4, #0]
        HAL_TIM_IC_CaptureCallback(htim);
 8009df2:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8009df4:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8009df6:	2208      	movs	r2, #8
 8009df8:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8009dfa:	69db      	ldr	r3, [r3, #28]
 8009dfc:	f413 7f40 	tst.w	r3, #768	@ 0x300
 8009e00:	d07b      	beq.n	8009efa <HAL_TIM_IRQHandler+0x190>
        HAL_TIM_IC_CaptureCallback(htim);
 8009e02:	f7ff ffaf 	bl	8009d64 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8009e06:	2300      	movs	r3, #0
 8009e08:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 8009e0a:	07f3      	lsls	r3, r6, #31
 8009e0c:	d508      	bpl.n	8009e20 <HAL_TIM_IRQHandler+0xb6>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 8009e0e:	07e8      	lsls	r0, r5, #31
 8009e10:	d506      	bpl.n	8009e20 <HAL_TIM_IRQHandler+0xb6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8009e12:	f06f 0201 	mvn.w	r2, #1
 8009e16:	6823      	ldr	r3, [r4, #0]
      HAL_TIM_PeriodElapsedCallback(htim);
 8009e18:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8009e1a:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8009e1c:	f7f7 f8bc 	bl	8000f98 <HAL_TIM_PeriodElapsedCallback>
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
 8009e20:	f416 5f02 	tst.w	r6, #8320	@ 0x2080
 8009e24:	d008      	beq.n	8009e38 <HAL_TIM_IRQHandler+0xce>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8009e26:	0629      	lsls	r1, r5, #24
 8009e28:	d506      	bpl.n	8009e38 <HAL_TIM_IRQHandler+0xce>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
 8009e2a:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 8009e2e:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_BreakCallback(htim);
 8009e30:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
 8009e32:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8009e34:	f000 fceb 	bl	800a80e <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
 8009e38:	05f2      	lsls	r2, r6, #23
 8009e3a:	d508      	bpl.n	8009e4e <HAL_TIM_IRQHandler+0xe4>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8009e3c:	062b      	lsls	r3, r5, #24
 8009e3e:	d506      	bpl.n	8009e4e <HAL_TIM_IRQHandler+0xe4>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8009e40:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 8009e44:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_Break2Callback(htim);
 8009e46:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8009e48:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
 8009e4a:	f000 fce1 	bl	800a810 <HAL_TIMEx_Break2Callback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8009e4e:	0670      	lsls	r0, r6, #25
 8009e50:	d508      	bpl.n	8009e64 <HAL_TIM_IRQHandler+0xfa>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8009e52:	0669      	lsls	r1, r5, #25
 8009e54:	d506      	bpl.n	8009e64 <HAL_TIM_IRQHandler+0xfa>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8009e56:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8009e5a:	6823      	ldr	r3, [r4, #0]
      HAL_TIM_TriggerCallback(htim);
 8009e5c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8009e5e:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8009e60:	f7ff ff82 	bl	8009d68 <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8009e64:	06b2      	lsls	r2, r6, #26
 8009e66:	d508      	bpl.n	8009e7a <HAL_TIM_IRQHandler+0x110>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8009e68:	06ab      	lsls	r3, r5, #26
 8009e6a:	d506      	bpl.n	8009e7a <HAL_TIM_IRQHandler+0x110>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8009e6c:	f06f 0220 	mvn.w	r2, #32
 8009e70:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_CommutCallback(htim);
 8009e72:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8009e74:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_CommutCallback(htim);
 8009e76:	f000 fcc9 	bl	800a80c <HAL_TIMEx_CommutCallback>
  if ((itflag & (TIM_FLAG_IDX)) == (TIM_FLAG_IDX))
 8009e7a:	02f0      	lsls	r0, r6, #11
 8009e7c:	d508      	bpl.n	8009e90 <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_IDX)) == (TIM_IT_IDX))
 8009e7e:	02e9      	lsls	r1, r5, #11
 8009e80:	d506      	bpl.n	8009e90 <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IDX);
 8009e82:	f46f 1280 	mvn.w	r2, #1048576	@ 0x100000
 8009e86:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_EncoderIndexCallback(htim);
 8009e88:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IDX);
 8009e8a:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_EncoderIndexCallback(htim);
 8009e8c:	f000 fcc1 	bl	800a812 <HAL_TIMEx_EncoderIndexCallback>
  if ((itflag & (TIM_FLAG_DIR)) == (TIM_FLAG_DIR))
 8009e90:	02b2      	lsls	r2, r6, #10
 8009e92:	d508      	bpl.n	8009ea6 <HAL_TIM_IRQHandler+0x13c>
    if ((itsource & (TIM_IT_DIR)) == (TIM_IT_DIR))
 8009e94:	02ab      	lsls	r3, r5, #10
 8009e96:	d506      	bpl.n	8009ea6 <HAL_TIM_IRQHandler+0x13c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_DIR);
 8009e98:	f46f 1200 	mvn.w	r2, #2097152	@ 0x200000
 8009e9c:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_DirectionChangeCallback(htim);
 8009e9e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_DIR);
 8009ea0:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_DirectionChangeCallback(htim);
 8009ea2:	f000 fcb7 	bl	800a814 <HAL_TIMEx_DirectionChangeCallback>
  if ((itflag & (TIM_FLAG_IERR)) == (TIM_FLAG_IERR))
 8009ea6:	0270      	lsls	r0, r6, #9
 8009ea8:	d508      	bpl.n	8009ebc <HAL_TIM_IRQHandler+0x152>
    if ((itsource & (TIM_IT_IERR)) == (TIM_IT_IERR))
 8009eaa:	0269      	lsls	r1, r5, #9
 8009eac:	d506      	bpl.n	8009ebc <HAL_TIM_IRQHandler+0x152>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IERR);
 8009eae:	f46f 0280 	mvn.w	r2, #4194304	@ 0x400000
 8009eb2:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_IndexErrorCallback(htim);
 8009eb4:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IERR);
 8009eb6:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_IndexErrorCallback(htim);
 8009eb8:	f000 fcad 	bl	800a816 <HAL_TIMEx_IndexErrorCallback>
  if ((itflag & (TIM_FLAG_TERR)) == (TIM_FLAG_TERR))
 8009ebc:	0232      	lsls	r2, r6, #8
 8009ebe:	d522      	bpl.n	8009f06 <HAL_TIM_IRQHandler+0x19c>
    if ((itsource & (TIM_IT_TERR)) == (TIM_IT_TERR))
 8009ec0:	022b      	lsls	r3, r5, #8
 8009ec2:	d520      	bpl.n	8009f06 <HAL_TIM_IRQHandler+0x19c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TERR);
 8009ec4:	f46f 0200 	mvn.w	r2, #8388608	@ 0x800000
 8009ec8:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_TransitionErrorCallback(htim);
 8009eca:	4620      	mov	r0, r4
}
 8009ecc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TERR);
 8009ed0:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_TransitionErrorCallback(htim);
 8009ed2:	f000 bca1 	b.w	800a818 <HAL_TIMEx_TransitionErrorCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8009ed6:	f7ff ff44 	bl	8009d62 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8009eda:	4620      	mov	r0, r4
 8009edc:	f7ff ff43 	bl	8009d66 <HAL_TIM_PWM_PulseFinishedCallback>
 8009ee0:	e757      	b.n	8009d92 <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8009ee2:	f7ff ff3e 	bl	8009d62 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8009ee6:	4620      	mov	r0, r4
 8009ee8:	f7ff ff3d 	bl	8009d66 <HAL_TIM_PWM_PulseFinishedCallback>
 8009eec:	e765      	b.n	8009dba <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8009eee:	f7ff ff38 	bl	8009d62 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8009ef2:	4620      	mov	r0, r4
 8009ef4:	f7ff ff37 	bl	8009d66 <HAL_TIM_PWM_PulseFinishedCallback>
 8009ef8:	e772      	b.n	8009de0 <HAL_TIM_IRQHandler+0x76>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8009efa:	f7ff ff32 	bl	8009d62 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8009efe:	4620      	mov	r0, r4
 8009f00:	f7ff ff31 	bl	8009d66 <HAL_TIM_PWM_PulseFinishedCallback>
 8009f04:	e77f      	b.n	8009e06 <HAL_TIM_IRQHandler+0x9c>
}
 8009f06:	bd70      	pop	{r4, r5, r6, pc}

08009f08 <TIM_Base_SetConfig>:
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8009f08:	4a50      	ldr	r2, [pc, #320]	@ (800a04c <TIM_Base_SetConfig+0x144>)
  tmpcr1 = TIMx->CR1;
 8009f0a:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8009f0c:	4290      	cmp	r0, r2
 8009f0e:	d025      	beq.n	8009f5c <TIM_Base_SetConfig+0x54>
 8009f10:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8009f14:	4290      	cmp	r0, r2
 8009f16:	d021      	beq.n	8009f5c <TIM_Base_SetConfig+0x54>
 8009f18:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8009f1c:	d01e      	beq.n	8009f5c <TIM_Base_SetConfig+0x54>
 8009f1e:	f1b0 4fa0 	cmp.w	r0, #1342177280	@ 0x50000000
 8009f22:	d01b      	beq.n	8009f5c <TIM_Base_SetConfig+0x54>
 8009f24:	4a4a      	ldr	r2, [pc, #296]	@ (800a050 <TIM_Base_SetConfig+0x148>)
 8009f26:	4290      	cmp	r0, r2
 8009f28:	d018      	beq.n	8009f5c <TIM_Base_SetConfig+0x54>
 8009f2a:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8009f2e:	4290      	cmp	r0, r2
 8009f30:	d014      	beq.n	8009f5c <TIM_Base_SetConfig+0x54>
 8009f32:	4a48      	ldr	r2, [pc, #288]	@ (800a054 <TIM_Base_SetConfig+0x14c>)
 8009f34:	4290      	cmp	r0, r2
 8009f36:	d011      	beq.n	8009f5c <TIM_Base_SetConfig+0x54>
 8009f38:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8009f3c:	4290      	cmp	r0, r2
 8009f3e:	d00d      	beq.n	8009f5c <TIM_Base_SetConfig+0x54>
 8009f40:	4a45      	ldr	r2, [pc, #276]	@ (800a058 <TIM_Base_SetConfig+0x150>)
 8009f42:	4290      	cmp	r0, r2
 8009f44:	d00a      	beq.n	8009f5c <TIM_Base_SetConfig+0x54>
 8009f46:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8009f4a:	4290      	cmp	r0, r2
 8009f4c:	d006      	beq.n	8009f5c <TIM_Base_SetConfig+0x54>
 8009f4e:	4a43      	ldr	r2, [pc, #268]	@ (800a05c <TIM_Base_SetConfig+0x154>)
 8009f50:	4290      	cmp	r0, r2
 8009f52:	d003      	beq.n	8009f5c <TIM_Base_SetConfig+0x54>
 8009f54:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8009f58:	4290      	cmp	r0, r2
 8009f5a:	d12c      	bne.n	8009fb6 <TIM_Base_SetConfig+0xae>
    tmpcr1 |= Structure->CounterMode;
 8009f5c:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8009f5e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 8009f62:	4313      	orrs	r3, r2
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8009f64:	4a39      	ldr	r2, [pc, #228]	@ (800a04c <TIM_Base_SetConfig+0x144>)
 8009f66:	4290      	cmp	r0, r2
 8009f68:	d03a      	beq.n	8009fe0 <TIM_Base_SetConfig+0xd8>
 8009f6a:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8009f6e:	4290      	cmp	r0, r2
 8009f70:	d036      	beq.n	8009fe0 <TIM_Base_SetConfig+0xd8>
 8009f72:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8009f76:	d033      	beq.n	8009fe0 <TIM_Base_SetConfig+0xd8>
 8009f78:	f1b0 4fa0 	cmp.w	r0, #1342177280	@ 0x50000000
 8009f7c:	d030      	beq.n	8009fe0 <TIM_Base_SetConfig+0xd8>
 8009f7e:	4a34      	ldr	r2, [pc, #208]	@ (800a050 <TIM_Base_SetConfig+0x148>)
 8009f80:	4290      	cmp	r0, r2
 8009f82:	d02d      	beq.n	8009fe0 <TIM_Base_SetConfig+0xd8>
 8009f84:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8009f88:	4290      	cmp	r0, r2
 8009f8a:	d029      	beq.n	8009fe0 <TIM_Base_SetConfig+0xd8>
 8009f8c:	4a31      	ldr	r2, [pc, #196]	@ (800a054 <TIM_Base_SetConfig+0x14c>)
 8009f8e:	4290      	cmp	r0, r2
 8009f90:	d026      	beq.n	8009fe0 <TIM_Base_SetConfig+0xd8>
 8009f92:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8009f96:	4290      	cmp	r0, r2
 8009f98:	d022      	beq.n	8009fe0 <TIM_Base_SetConfig+0xd8>
 8009f9a:	4a2f      	ldr	r2, [pc, #188]	@ (800a058 <TIM_Base_SetConfig+0x150>)
 8009f9c:	4290      	cmp	r0, r2
 8009f9e:	d01f      	beq.n	8009fe0 <TIM_Base_SetConfig+0xd8>
 8009fa0:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8009fa4:	4290      	cmp	r0, r2
 8009fa6:	d01b      	beq.n	8009fe0 <TIM_Base_SetConfig+0xd8>
 8009fa8:	4a2c      	ldr	r2, [pc, #176]	@ (800a05c <TIM_Base_SetConfig+0x154>)
 8009faa:	4290      	cmp	r0, r2
 8009fac:	d018      	beq.n	8009fe0 <TIM_Base_SetConfig+0xd8>
 8009fae:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8009fb2:	4290      	cmp	r0, r2
 8009fb4:	d014      	beq.n	8009fe0 <TIM_Base_SetConfig+0xd8>
 8009fb6:	4a2a      	ldr	r2, [pc, #168]	@ (800a060 <TIM_Base_SetConfig+0x158>)
 8009fb8:	4290      	cmp	r0, r2
 8009fba:	d011      	beq.n	8009fe0 <TIM_Base_SetConfig+0xd8>
 8009fbc:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8009fc0:	4290      	cmp	r0, r2
 8009fc2:	d00d      	beq.n	8009fe0 <TIM_Base_SetConfig+0xd8>
 8009fc4:	4a27      	ldr	r2, [pc, #156]	@ (800a064 <TIM_Base_SetConfig+0x15c>)
 8009fc6:	4290      	cmp	r0, r2
 8009fc8:	d00a      	beq.n	8009fe0 <TIM_Base_SetConfig+0xd8>
 8009fca:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8009fce:	4290      	cmp	r0, r2
 8009fd0:	d006      	beq.n	8009fe0 <TIM_Base_SetConfig+0xd8>
 8009fd2:	4a25      	ldr	r2, [pc, #148]	@ (800a068 <TIM_Base_SetConfig+0x160>)
 8009fd4:	4290      	cmp	r0, r2
 8009fd6:	d003      	beq.n	8009fe0 <TIM_Base_SetConfig+0xd8>
 8009fd8:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8009fdc:	4290      	cmp	r0, r2
 8009fde:	d103      	bne.n	8009fe8 <TIM_Base_SetConfig+0xe0>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8009fe0:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8009fe2:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8009fe6:	4313      	orrs	r3, r2
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8009fe8:	694a      	ldr	r2, [r1, #20]
 8009fea:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8009fee:	4313      	orrs	r3, r2
  TIMx->CR1 = tmpcr1;
 8009ff0:	6003      	str	r3, [r0, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 8009ff2:	688b      	ldr	r3, [r1, #8]
 8009ff4:	62c3      	str	r3, [r0, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
 8009ff6:	680b      	ldr	r3, [r1, #0]
 8009ff8:	6283      	str	r3, [r0, #40]	@ 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8009ffa:	4b14      	ldr	r3, [pc, #80]	@ (800a04c <TIM_Base_SetConfig+0x144>)
 8009ffc:	4298      	cmp	r0, r3
 8009ffe:	d01f      	beq.n	800a040 <TIM_Base_SetConfig+0x138>
 800a000:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800a004:	4298      	cmp	r0, r3
 800a006:	d01b      	beq.n	800a040 <TIM_Base_SetConfig+0x138>
 800a008:	4b14      	ldr	r3, [pc, #80]	@ (800a05c <TIM_Base_SetConfig+0x154>)
 800a00a:	4298      	cmp	r0, r3
 800a00c:	d018      	beq.n	800a040 <TIM_Base_SetConfig+0x138>
 800a00e:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800a012:	4298      	cmp	r0, r3
 800a014:	d014      	beq.n	800a040 <TIM_Base_SetConfig+0x138>
 800a016:	4b12      	ldr	r3, [pc, #72]	@ (800a060 <TIM_Base_SetConfig+0x158>)
 800a018:	4298      	cmp	r0, r3
 800a01a:	d011      	beq.n	800a040 <TIM_Base_SetConfig+0x138>
 800a01c:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800a020:	4298      	cmp	r0, r3
 800a022:	d00d      	beq.n	800a040 <TIM_Base_SetConfig+0x138>
 800a024:	4b0f      	ldr	r3, [pc, #60]	@ (800a064 <TIM_Base_SetConfig+0x15c>)
 800a026:	4298      	cmp	r0, r3
 800a028:	d00a      	beq.n	800a040 <TIM_Base_SetConfig+0x138>
 800a02a:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800a02e:	4298      	cmp	r0, r3
 800a030:	d006      	beq.n	800a040 <TIM_Base_SetConfig+0x138>
 800a032:	4b0d      	ldr	r3, [pc, #52]	@ (800a068 <TIM_Base_SetConfig+0x160>)
 800a034:	4298      	cmp	r0, r3
 800a036:	d003      	beq.n	800a040 <TIM_Base_SetConfig+0x138>
 800a038:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800a03c:	4298      	cmp	r0, r3
 800a03e:	d101      	bne.n	800a044 <TIM_Base_SetConfig+0x13c>
    TIMx->RCR = Structure->RepetitionCounter;
 800a040:	690b      	ldr	r3, [r1, #16]
 800a042:	6303      	str	r3, [r0, #48]	@ 0x30
  TIMx->EGR = TIM_EGR_UG;
 800a044:	2301      	movs	r3, #1
 800a046:	6143      	str	r3, [r0, #20]
}
 800a048:	4770      	bx	lr
 800a04a:	bf00      	nop
 800a04c:	40012c00 	.word	0x40012c00
 800a050:	40000400 	.word	0x40000400
 800a054:	40000800 	.word	0x40000800
 800a058:	40000c00 	.word	0x40000c00
 800a05c:	40013400 	.word	0x40013400
 800a060:	40014000 	.word	0x40014000
 800a064:	40014400 	.word	0x40014400
 800a068:	40014800 	.word	0x40014800

0800a06c <HAL_TIM_Base_Init>:
{
 800a06c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800a06e:	4604      	mov	r4, r0
 800a070:	b350      	cbz	r0, 800a0c8 <HAL_TIM_Base_Init+0x5c>
  if (htim->State == HAL_TIM_STATE_RESET)
 800a072:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800a076:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800a07a:	b91b      	cbnz	r3, 800a084 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800a07c:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 800a080:	f7f7 f954 	bl	800132c <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800a084:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800a086:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800a088:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800a08c:	1d21      	adds	r1, r4, #4
 800a08e:	f7ff ff3b 	bl	8009f08 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800a092:	2301      	movs	r3, #1
  return HAL_OK;
 800a094:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800a096:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800a09a:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 800a09e:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 800a0a2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 800a0a6:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 800a0aa:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800a0ae:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800a0b2:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 800a0b6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800a0ba:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
 800a0be:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
 800a0c2:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 800a0c6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800a0c8:	2001      	movs	r0, #1
 800a0ca:	e7fc      	b.n	800a0c6 <HAL_TIM_Base_Init+0x5a>

0800a0cc <HAL_TIM_PWM_Init>:
{
 800a0cc:	b510      	push	{r4, lr}
  if (htim == NULL)
 800a0ce:	4604      	mov	r4, r0
 800a0d0:	b350      	cbz	r0, 800a128 <HAL_TIM_PWM_Init+0x5c>
  if (htim->State == HAL_TIM_STATE_RESET)
 800a0d2:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800a0d6:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800a0da:	b91b      	cbnz	r3, 800a0e4 <HAL_TIM_PWM_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800a0dc:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_PWM_MspInit(htim);
 800a0e0:	f7ff fe3e 	bl	8009d60 <HAL_TIM_PWM_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800a0e4:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800a0e6:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800a0e8:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800a0ec:	1d21      	adds	r1, r4, #4
 800a0ee:	f7ff ff0b 	bl	8009f08 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800a0f2:	2301      	movs	r3, #1
  return HAL_OK;
 800a0f4:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800a0f6:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800a0fa:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 800a0fe:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 800a102:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 800a106:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 800a10a:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800a10e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800a112:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 800a116:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800a11a:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
 800a11e:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
 800a122:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 800a126:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800a128:	2001      	movs	r0, #1
 800a12a:	e7fc      	b.n	800a126 <HAL_TIM_PWM_Init+0x5a>

0800a12c <TIM_OC2_SetConfig>:
  tmpccer = TIMx->CCER;
 800a12c:	6a03      	ldr	r3, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800a12e:	6a02      	ldr	r2, [r0, #32]
{
 800a130:	b570      	push	{r4, r5, r6, lr}
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800a132:	f022 0210 	bic.w	r2, r2, #16
 800a136:	6202      	str	r2, [r0, #32]
  tmpcr2 =  TIMx->CR2;
 800a138:	6844      	ldr	r4, [r0, #4]
  tmpccmrx = TIMx->CCMR1;
 800a13a:	6982      	ldr	r2, [r0, #24]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800a13c:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800a13e:	f022 7280 	bic.w	r2, r2, #16777216	@ 0x1000000
 800a142:	f422 42e6 	bic.w	r2, r2, #29440	@ 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800a146:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800a14a:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 800a14c:	f023 0320 	bic.w	r3, r3, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800a150:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800a154:	4d22      	ldr	r5, [pc, #136]	@ (800a1e0 <TIM_OC2_SetConfig+0xb4>)
 800a156:	42a8      	cmp	r0, r5
 800a158:	d00a      	beq.n	800a170 <TIM_OC2_SetConfig+0x44>
 800a15a:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 800a15e:	42a8      	cmp	r0, r5
 800a160:	d006      	beq.n	800a170 <TIM_OC2_SetConfig+0x44>
 800a162:	4d20      	ldr	r5, [pc, #128]	@ (800a1e4 <TIM_OC2_SetConfig+0xb8>)
 800a164:	42a8      	cmp	r0, r5
 800a166:	d003      	beq.n	800a170 <TIM_OC2_SetConfig+0x44>
 800a168:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 800a16c:	42a8      	cmp	r0, r5
 800a16e:	d114      	bne.n	800a19a <TIM_OC2_SetConfig+0x6e>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800a170:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 800a172:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800a176:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800a17a:	4d19      	ldr	r5, [pc, #100]	@ (800a1e0 <TIM_OC2_SetConfig+0xb4>)
    tmpccer &= ~TIM_CCER_CC2NE;
 800a17c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800a180:	42a8      	cmp	r0, r5
 800a182:	d01f      	beq.n	800a1c4 <TIM_OC2_SetConfig+0x98>
 800a184:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 800a188:	42a8      	cmp	r0, r5
 800a18a:	d01b      	beq.n	800a1c4 <TIM_OC2_SetConfig+0x98>
 800a18c:	4d15      	ldr	r5, [pc, #84]	@ (800a1e4 <TIM_OC2_SetConfig+0xb8>)
 800a18e:	42a8      	cmp	r0, r5
 800a190:	d018      	beq.n	800a1c4 <TIM_OC2_SetConfig+0x98>
 800a192:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 800a196:	42a8      	cmp	r0, r5
 800a198:	d014      	beq.n	800a1c4 <TIM_OC2_SetConfig+0x98>
 800a19a:	4d13      	ldr	r5, [pc, #76]	@ (800a1e8 <TIM_OC2_SetConfig+0xbc>)
 800a19c:	42a8      	cmp	r0, r5
 800a19e:	d011      	beq.n	800a1c4 <TIM_OC2_SetConfig+0x98>
 800a1a0:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 800a1a4:	42a8      	cmp	r0, r5
 800a1a6:	d00d      	beq.n	800a1c4 <TIM_OC2_SetConfig+0x98>
 800a1a8:	4d10      	ldr	r5, [pc, #64]	@ (800a1ec <TIM_OC2_SetConfig+0xc0>)
 800a1aa:	42a8      	cmp	r0, r5
 800a1ac:	d00a      	beq.n	800a1c4 <TIM_OC2_SetConfig+0x98>
 800a1ae:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 800a1b2:	42a8      	cmp	r0, r5
 800a1b4:	d006      	beq.n	800a1c4 <TIM_OC2_SetConfig+0x98>
 800a1b6:	4d0e      	ldr	r5, [pc, #56]	@ (800a1f0 <TIM_OC2_SetConfig+0xc4>)
 800a1b8:	42a8      	cmp	r0, r5
 800a1ba:	d003      	beq.n	800a1c4 <TIM_OC2_SetConfig+0x98>
 800a1bc:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 800a1c0:	42a8      	cmp	r0, r5
 800a1c2:	d106      	bne.n	800a1d2 <TIM_OC2_SetConfig+0xa6>
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800a1c4:	f424 6540 	bic.w	r5, r4, #3072	@ 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800a1c8:	e9d1 4605 	ldrd	r4, r6, [r1, #20]
 800a1cc:	4334      	orrs	r4, r6
 800a1ce:	ea45 0484 	orr.w	r4, r5, r4, lsl #2
  TIMx->CR2 = tmpcr2;
 800a1d2:	6044      	str	r4, [r0, #4]
  TIMx->CCMR1 = tmpccmrx;
 800a1d4:	6182      	str	r2, [r0, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 800a1d6:	684a      	ldr	r2, [r1, #4]
 800a1d8:	6382      	str	r2, [r0, #56]	@ 0x38
  TIMx->CCER = tmpccer;
 800a1da:	6203      	str	r3, [r0, #32]
}
 800a1dc:	bd70      	pop	{r4, r5, r6, pc}
 800a1de:	bf00      	nop
 800a1e0:	40012c00 	.word	0x40012c00
 800a1e4:	40013400 	.word	0x40013400
 800a1e8:	40014000 	.word	0x40014000
 800a1ec:	40014400 	.word	0x40014400
 800a1f0:	40014800 	.word	0x40014800

0800a1f4 <HAL_TIM_PWM_ConfigChannel>:
{
 800a1f4:	b538      	push	{r3, r4, r5, lr}
  __HAL_LOCK(htim);
 800a1f6:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
{
 800a1fa:	4604      	mov	r4, r0
  __HAL_LOCK(htim);
 800a1fc:	2b01      	cmp	r3, #1
 800a1fe:	d073      	beq.n	800a2e8 <HAL_TIM_PWM_ConfigChannel+0xf4>
 800a200:	2001      	movs	r0, #1
  switch (Channel)
 800a202:	2a0c      	cmp	r2, #12
  __HAL_LOCK(htim);
 800a204:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
  switch (Channel)
 800a208:	d04e      	beq.n	800a2a8 <HAL_TIM_PWM_ConfigChannel+0xb4>
 800a20a:	d808      	bhi.n	800a21e <HAL_TIM_PWM_ConfigChannel+0x2a>
 800a20c:	2a04      	cmp	r2, #4
 800a20e:	d02b      	beq.n	800a268 <HAL_TIM_PWM_ConfigChannel+0x74>
 800a210:	2a08      	cmp	r2, #8
 800a212:	d039      	beq.n	800a288 <HAL_TIM_PWM_ConfigChannel+0x94>
 800a214:	b1ba      	cbz	r2, 800a246 <HAL_TIM_PWM_ConfigChannel+0x52>
  __HAL_UNLOCK(htim);
 800a216:	2300      	movs	r3, #0
 800a218:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
}
 800a21c:	bd38      	pop	{r3, r4, r5, pc}
  switch (Channel)
 800a21e:	2a10      	cmp	r2, #16
 800a220:	d052      	beq.n	800a2c8 <HAL_TIM_PWM_ConfigChannel+0xd4>
 800a222:	2a14      	cmp	r2, #20
 800a224:	d1f7      	bne.n	800a216 <HAL_TIM_PWM_ConfigChannel+0x22>
      TIM_OC6_SetConfig(htim->Instance, sConfig);
 800a226:	6820      	ldr	r0, [r4, #0]
 800a228:	f7ff fcf4 	bl	8009c14 <TIM_OC6_SetConfig>
      htim->Instance->CCMR3 |= TIM_CCMR3_OC6PE;
 800a22c:	6d03      	ldr	r3, [r0, #80]	@ 0x50
      htim->Instance->CCMR3 |= sConfig->OCFastMode << 8U;
 800a22e:	690a      	ldr	r2, [r1, #16]
      htim->Instance->CCMR3 |= TIM_CCMR3_OC6PE;
 800a230:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 800a234:	6503      	str	r3, [r0, #80]	@ 0x50
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC6FE;
 800a236:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 800a238:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800a23c:	6503      	str	r3, [r0, #80]	@ 0x50
      htim->Instance->CCMR3 |= sConfig->OCFastMode << 8U;
 800a23e:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 800a240:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800a244:	e04e      	b.n	800a2e4 <HAL_TIM_PWM_ConfigChannel+0xf0>
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800a246:	6820      	ldr	r0, [r4, #0]
 800a248:	f7ff fb5e 	bl	8009908 <TIM_OC1_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800a24c:	6983      	ldr	r3, [r0, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800a24e:	690a      	ldr	r2, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800a250:	f043 0308 	orr.w	r3, r3, #8
 800a254:	6183      	str	r3, [r0, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800a256:	6983      	ldr	r3, [r0, #24]
 800a258:	f023 0304 	bic.w	r3, r3, #4
 800a25c:	6183      	str	r3, [r0, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800a25e:	6983      	ldr	r3, [r0, #24]
 800a260:	4313      	orrs	r3, r2
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800a262:	6183      	str	r3, [r0, #24]
  HAL_StatusTypeDef status = HAL_OK;
 800a264:	2000      	movs	r0, #0
 800a266:	e7d6      	b.n	800a216 <HAL_TIM_PWM_ConfigChannel+0x22>
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800a268:	6820      	ldr	r0, [r4, #0]
 800a26a:	f7ff ff5f 	bl	800a12c <TIM_OC2_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800a26e:	6983      	ldr	r3, [r0, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800a270:	690a      	ldr	r2, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800a272:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 800a276:	6183      	str	r3, [r0, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800a278:	6983      	ldr	r3, [r0, #24]
 800a27a:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800a27e:	6183      	str	r3, [r0, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800a280:	6983      	ldr	r3, [r0, #24]
 800a282:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800a286:	e7ec      	b.n	800a262 <HAL_TIM_PWM_ConfigChannel+0x6e>
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800a288:	6820      	ldr	r0, [r4, #0]
 800a28a:	f7ff fbb1 	bl	80099f0 <TIM_OC3_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800a28e:	69c3      	ldr	r3, [r0, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800a290:	690a      	ldr	r2, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800a292:	f043 0308 	orr.w	r3, r3, #8
 800a296:	61c3      	str	r3, [r0, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800a298:	69c3      	ldr	r3, [r0, #28]
 800a29a:	f023 0304 	bic.w	r3, r3, #4
 800a29e:	61c3      	str	r3, [r0, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800a2a0:	69c3      	ldr	r3, [r0, #28]
 800a2a2:	4313      	orrs	r3, r2
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800a2a4:	61c3      	str	r3, [r0, #28]
      break;
 800a2a6:	e7dd      	b.n	800a264 <HAL_TIM_PWM_ConfigChannel+0x70>
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800a2a8:	6820      	ldr	r0, [r4, #0]
 800a2aa:	f7ff fc03 	bl	8009ab4 <TIM_OC4_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800a2ae:	69c3      	ldr	r3, [r0, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800a2b0:	690a      	ldr	r2, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800a2b2:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 800a2b6:	61c3      	str	r3, [r0, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800a2b8:	69c3      	ldr	r3, [r0, #28]
 800a2ba:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800a2be:	61c3      	str	r3, [r0, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800a2c0:	69c3      	ldr	r3, [r0, #28]
 800a2c2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800a2c6:	e7ed      	b.n	800a2a4 <HAL_TIM_PWM_ConfigChannel+0xb0>
      TIM_OC5_SetConfig(htim->Instance, sConfig);
 800a2c8:	6820      	ldr	r0, [r4, #0]
 800a2ca:	f7ff fc57 	bl	8009b7c <TIM_OC5_SetConfig>
      htim->Instance->CCMR3 |= TIM_CCMR3_OC5PE;
 800a2ce:	6d03      	ldr	r3, [r0, #80]	@ 0x50
      htim->Instance->CCMR3 |= sConfig->OCFastMode;
 800a2d0:	690a      	ldr	r2, [r1, #16]
      htim->Instance->CCMR3 |= TIM_CCMR3_OC5PE;
 800a2d2:	f043 0308 	orr.w	r3, r3, #8
 800a2d6:	6503      	str	r3, [r0, #80]	@ 0x50
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC5FE;
 800a2d8:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 800a2da:	f023 0304 	bic.w	r3, r3, #4
 800a2de:	6503      	str	r3, [r0, #80]	@ 0x50
      htim->Instance->CCMR3 |= sConfig->OCFastMode;
 800a2e0:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 800a2e2:	4313      	orrs	r3, r2
      htim->Instance->CCMR3 |= sConfig->OCFastMode << 8U;
 800a2e4:	6503      	str	r3, [r0, #80]	@ 0x50
      break;
 800a2e6:	e7bd      	b.n	800a264 <HAL_TIM_PWM_ConfigChannel+0x70>
  __HAL_LOCK(htim);
 800a2e8:	2002      	movs	r0, #2
 800a2ea:	e797      	b.n	800a21c <HAL_TIM_PWM_ConfigChannel+0x28>

0800a2ec <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 800a2ec:	b510      	push	{r4, lr}
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 800a2ee:	6884      	ldr	r4, [r0, #8]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800a2f0:	430a      	orrs	r2, r1
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800a2f2:	f424 447f 	bic.w	r4, r4, #65280	@ 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800a2f6:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
 800a2fa:	4322      	orrs	r2, r4

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800a2fc:	6082      	str	r2, [r0, #8]
}
 800a2fe:	bd10      	pop	{r4, pc}

0800a300 <HAL_TIM_ConfigClockSource>:
{
 800a300:	b538      	push	{r3, r4, r5, lr}
  __HAL_LOCK(htim);
 800a302:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
{
 800a306:	4604      	mov	r4, r0
  __HAL_LOCK(htim);
 800a308:	2b01      	cmp	r3, #1
 800a30a:	f04f 0002 	mov.w	r0, #2
 800a30e:	f000 80ab 	beq.w	800a468 <HAL_TIM_ConfigClockSource+0x168>
 800a312:	2201      	movs	r2, #1
  htim->State = HAL_TIM_STATE_BUSY;
 800a314:	f884 003d 	strb.w	r0, [r4, #61]	@ 0x3d
  tmpsmcr = htim->Instance->SMCR;
 800a318:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(htim);
 800a31a:	f884 203c 	strb.w	r2, [r4, #60]	@ 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800a31e:	6885      	ldr	r5, [r0, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800a320:	4b52      	ldr	r3, [pc, #328]	@ (800a46c <HAL_TIM_ConfigClockSource+0x16c>)
 800a322:	402b      	ands	r3, r5
  htim->Instance->SMCR = tmpsmcr;
 800a324:	6083      	str	r3, [r0, #8]
  switch (sClockSourceConfig->ClockSource)
 800a326:	680b      	ldr	r3, [r1, #0]
 800a328:	2b70      	cmp	r3, #112	@ 0x70
 800a32a:	d058      	beq.n	800a3de <HAL_TIM_ConfigClockSource+0xde>
 800a32c:	d83c      	bhi.n	800a3a8 <HAL_TIM_ConfigClockSource+0xa8>
 800a32e:	2b50      	cmp	r3, #80	@ 0x50
 800a330:	d068      	beq.n	800a404 <HAL_TIM_ConfigClockSource+0x104>
 800a332:	d81d      	bhi.n	800a370 <HAL_TIM_ConfigClockSource+0x70>
 800a334:	2b40      	cmp	r3, #64	@ 0x40
 800a336:	d07e      	beq.n	800a436 <HAL_TIM_ConfigClockSource+0x136>
 800a338:	d806      	bhi.n	800a348 <HAL_TIM_ConfigClockSource+0x48>
 800a33a:	2b20      	cmp	r3, #32
 800a33c:	d00e      	beq.n	800a35c <HAL_TIM_ConfigClockSource+0x5c>
 800a33e:	d80b      	bhi.n	800a358 <HAL_TIM_ConfigClockSource+0x58>
 800a340:	f033 0210 	bics.w	r2, r3, #16
 800a344:	d00a      	beq.n	800a35c <HAL_TIM_ConfigClockSource+0x5c>
      status = HAL_ERROR;
 800a346:	2201      	movs	r2, #1
  htim->State = HAL_TIM_STATE_READY;
 800a348:	2301      	movs	r3, #1
 800a34a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_UNLOCK(htim);
 800a34e:	2300      	movs	r3, #0
 800a350:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
}
 800a354:	4610      	mov	r0, r2
 800a356:	bd38      	pop	{r3, r4, r5, pc}
  switch (sClockSourceConfig->ClockSource)
 800a358:	2b30      	cmp	r3, #48	@ 0x30
 800a35a:	d1f4      	bne.n	800a346 <HAL_TIM_ConfigClockSource+0x46>
  tmpsmcr = TIMx->SMCR;
 800a35c:	6882      	ldr	r2, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800a35e:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
 800a362:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800a366:	431a      	orrs	r2, r3
 800a368:	f042 0207 	orr.w	r2, r2, #7
  TIMx->SMCR = tmpsmcr;
 800a36c:	6082      	str	r2, [r0, #8]
}
 800a36e:	e022      	b.n	800a3b6 <HAL_TIM_ConfigClockSource+0xb6>
  switch (sClockSourceConfig->ClockSource)
 800a370:	2b60      	cmp	r3, #96	@ 0x60
 800a372:	d1e9      	bne.n	800a348 <HAL_TIM_ConfigClockSource+0x48>
  tmpccer = TIMx->CCER;
 800a374:	6a03      	ldr	r3, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800a376:	6a02      	ldr	r2, [r0, #32]
                               sClockSourceConfig->ClockPolarity,
 800a378:	684d      	ldr	r5, [r1, #4]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800a37a:	f022 0210 	bic.w	r2, r2, #16
                               sClockSourceConfig->ClockFilter);
 800a37e:	68c9      	ldr	r1, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800a380:	6202      	str	r2, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 800a382:	6982      	ldr	r2, [r0, #24]
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800a384:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800a388:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
  tmpccer |= (TIM_ICPolarity << 4U);
 800a38c:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800a390:	ea42 3201 	orr.w	r2, r2, r1, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800a394:	6182      	str	r2, [r0, #24]
  TIMx->CCER = tmpccer;
 800a396:	6203      	str	r3, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 800a398:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800a39a:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 800a39e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800a3a2:	f043 0367 	orr.w	r3, r3, #103	@ 0x67
  TIMx->SMCR = tmpsmcr;
 800a3a6:	e022      	b.n	800a3ee <HAL_TIM_ConfigClockSource+0xee>
  switch (sClockSourceConfig->ClockSource)
 800a3a8:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800a3ac:	d021      	beq.n	800a3f2 <HAL_TIM_ConfigClockSource+0xf2>
 800a3ae:	d804      	bhi.n	800a3ba <HAL_TIM_ConfigClockSource+0xba>
 800a3b0:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800a3b4:	d1c8      	bne.n	800a348 <HAL_TIM_ConfigClockSource+0x48>
  HAL_StatusTypeDef status = HAL_OK;
 800a3b6:	2200      	movs	r2, #0
 800a3b8:	e7c6      	b.n	800a348 <HAL_TIM_ConfigClockSource+0x48>
  switch (sClockSourceConfig->ClockSource)
 800a3ba:	492d      	ldr	r1, [pc, #180]	@ (800a470 <HAL_TIM_ConfigClockSource+0x170>)
 800a3bc:	428b      	cmp	r3, r1
 800a3be:	d0cd      	beq.n	800a35c <HAL_TIM_ConfigClockSource+0x5c>
 800a3c0:	d808      	bhi.n	800a3d4 <HAL_TIM_ConfigClockSource+0xd4>
 800a3c2:	f023 0110 	bic.w	r1, r3, #16
 800a3c6:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 800a3ca:	d0c7      	beq.n	800a35c <HAL_TIM_ConfigClockSource+0x5c>
 800a3cc:	4929      	ldr	r1, [pc, #164]	@ (800a474 <HAL_TIM_ConfigClockSource+0x174>)
 800a3ce:	428b      	cmp	r3, r1
 800a3d0:	d0c4      	beq.n	800a35c <HAL_TIM_ConfigClockSource+0x5c>
 800a3d2:	e7b9      	b.n	800a348 <HAL_TIM_ConfigClockSource+0x48>
 800a3d4:	4928      	ldr	r1, [pc, #160]	@ (800a478 <HAL_TIM_ConfigClockSource+0x178>)
 800a3d6:	428b      	cmp	r3, r1
 800a3d8:	d0c0      	beq.n	800a35c <HAL_TIM_ConfigClockSource+0x5c>
 800a3da:	3130      	adds	r1, #48	@ 0x30
 800a3dc:	e7f7      	b.n	800a3ce <HAL_TIM_ConfigClockSource+0xce>
      TIM_ETR_SetConfig(htim->Instance,
 800a3de:	68cb      	ldr	r3, [r1, #12]
 800a3e0:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 800a3e4:	f7ff ff82 	bl	800a2ec <TIM_ETR_SetConfig>
      tmpsmcr = htim->Instance->SMCR;
 800a3e8:	6883      	ldr	r3, [r0, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800a3ea:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
      htim->Instance->SMCR = tmpsmcr;
 800a3ee:	6083      	str	r3, [r0, #8]
      break;
 800a3f0:	e7e1      	b.n	800a3b6 <HAL_TIM_ConfigClockSource+0xb6>
      TIM_ETR_SetConfig(htim->Instance,
 800a3f2:	68cb      	ldr	r3, [r1, #12]
 800a3f4:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 800a3f8:	f7ff ff78 	bl	800a2ec <TIM_ETR_SetConfig>
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800a3fc:	6883      	ldr	r3, [r0, #8]
 800a3fe:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800a402:	e7f4      	b.n	800a3ee <HAL_TIM_ConfigClockSource+0xee>
                               sClockSourceConfig->ClockPolarity,
 800a404:	684a      	ldr	r2, [r1, #4]
                               sClockSourceConfig->ClockFilter);
 800a406:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800a408:	6a01      	ldr	r1, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800a40a:	6a03      	ldr	r3, [r0, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800a40c:	f021 010a 	bic.w	r1, r1, #10
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800a410:	f023 0301 	bic.w	r3, r3, #1
 800a414:	6203      	str	r3, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 800a416:	6983      	ldr	r3, [r0, #24]
  tmpccer |= TIM_ICPolarity;
 800a418:	430a      	orrs	r2, r1
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800a41a:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800a41e:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800a422:	6183      	str	r3, [r0, #24]
  TIMx->CCER = tmpccer;
 800a424:	6202      	str	r2, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 800a426:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800a428:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 800a42c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800a430:	f043 0357 	orr.w	r3, r3, #87	@ 0x57
  TIMx->SMCR = tmpsmcr;
 800a434:	e7db      	b.n	800a3ee <HAL_TIM_ConfigClockSource+0xee>
                               sClockSourceConfig->ClockPolarity,
 800a436:	684a      	ldr	r2, [r1, #4]
                               sClockSourceConfig->ClockFilter);
 800a438:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800a43a:	6a01      	ldr	r1, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800a43c:	6a03      	ldr	r3, [r0, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800a43e:	f021 010a 	bic.w	r1, r1, #10
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800a442:	f023 0301 	bic.w	r3, r3, #1
 800a446:	6203      	str	r3, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 800a448:	6983      	ldr	r3, [r0, #24]
  tmpccer |= TIM_ICPolarity;
 800a44a:	430a      	orrs	r2, r1
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800a44c:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800a450:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800a454:	6183      	str	r3, [r0, #24]
  TIMx->CCER = tmpccer;
 800a456:	6202      	str	r2, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 800a458:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800a45a:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 800a45e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800a462:	f043 0347 	orr.w	r3, r3, #71	@ 0x47
  TIMx->SMCR = tmpsmcr;
 800a466:	e7c2      	b.n	800a3ee <HAL_TIM_ConfigClockSource+0xee>
  __HAL_LOCK(htim);
 800a468:	4602      	mov	r2, r0
 800a46a:	e773      	b.n	800a354 <HAL_TIM_ConfigClockSource+0x54>
 800a46c:	ffce0088 	.word	0xffce0088
 800a470:	00100030 	.word	0x00100030
 800a474:	00100020 	.word	0x00100020
 800a478:	00100040 	.word	0x00100040

0800a47c <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 800a47c:	b510      	push	{r4, lr}

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 800a47e:	2401      	movs	r4, #1

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 800a480:	6a03      	ldr	r3, [r0, #32]
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 800a482:	f001 011f 	and.w	r1, r1, #31
 800a486:	408c      	lsls	r4, r1
  TIMx->CCER &= ~tmp;
 800a488:	ea23 0304 	bic.w	r3, r3, r4
 800a48c:	6203      	str	r3, [r0, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 800a48e:	6a03      	ldr	r3, [r0, #32]
 800a490:	408a      	lsls	r2, r1
 800a492:	431a      	orrs	r2, r3
 800a494:	6202      	str	r2, [r0, #32]
}
 800a496:	bd10      	pop	{r4, pc}

0800a498 <HAL_TIM_OC_Start>:
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 800a498:	2908      	cmp	r1, #8
{
 800a49a:	b508      	push	{r3, lr}
 800a49c:	d018      	beq.n	800a4d0 <HAL_TIM_OC_Start+0x38>
 800a49e:	d805      	bhi.n	800a4ac <HAL_TIM_OC_Start+0x14>
 800a4a0:	b159      	cbz	r1, 800a4ba <HAL_TIM_OC_Start+0x22>
 800a4a2:	2904      	cmp	r1, #4
 800a4a4:	d011      	beq.n	800a4ca <HAL_TIM_OC_Start+0x32>
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 800a4a6:	f890 3043 	ldrb.w	r3, [r0, #67]	@ 0x43
 800a4aa:	e008      	b.n	800a4be <HAL_TIM_OC_Start+0x26>
 800a4ac:	290c      	cmp	r1, #12
 800a4ae:	d012      	beq.n	800a4d6 <HAL_TIM_OC_Start+0x3e>
 800a4b0:	2910      	cmp	r1, #16
 800a4b2:	d1f8      	bne.n	800a4a6 <HAL_TIM_OC_Start+0xe>
 800a4b4:	f890 3042 	ldrb.w	r3, [r0, #66]	@ 0x42
 800a4b8:	e001      	b.n	800a4be <HAL_TIM_OC_Start+0x26>
 800a4ba:	f890 303e 	ldrb.w	r3, [r0, #62]	@ 0x3e
 800a4be:	3b01      	subs	r3, #1
 800a4c0:	bf18      	it	ne
 800a4c2:	2301      	movne	r3, #1
 800a4c4:	b153      	cbz	r3, 800a4dc <HAL_TIM_OC_Start+0x44>
    return HAL_ERROR;
 800a4c6:	2001      	movs	r0, #1
 800a4c8:	e04d      	b.n	800a566 <HAL_TIM_OC_Start+0xce>
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 800a4ca:	f890 303f 	ldrb.w	r3, [r0, #63]	@ 0x3f
 800a4ce:	e7f6      	b.n	800a4be <HAL_TIM_OC_Start+0x26>
 800a4d0:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 800a4d4:	e7f3      	b.n	800a4be <HAL_TIM_OC_Start+0x26>
 800a4d6:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 800a4da:	e7f0      	b.n	800a4be <HAL_TIM_OC_Start+0x26>
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 800a4dc:	2908      	cmp	r1, #8
 800a4de:	f04f 0302 	mov.w	r3, #2
 800a4e2:	d044      	beq.n	800a56e <HAL_TIM_OC_Start+0xd6>
 800a4e4:	d806      	bhi.n	800a4f4 <HAL_TIM_OC_Start+0x5c>
 800a4e6:	b161      	cbz	r1, 800a502 <HAL_TIM_OC_Start+0x6a>
 800a4e8:	2904      	cmp	r1, #4
 800a4ea:	d03d      	beq.n	800a568 <HAL_TIM_OC_Start+0xd0>
 800a4ec:	2302      	movs	r3, #2
 800a4ee:	f880 3043 	strb.w	r3, [r0, #67]	@ 0x43
 800a4f2:	e008      	b.n	800a506 <HAL_TIM_OC_Start+0x6e>
 800a4f4:	290c      	cmp	r1, #12
 800a4f6:	d03d      	beq.n	800a574 <HAL_TIM_OC_Start+0xdc>
 800a4f8:	2910      	cmp	r1, #16
 800a4fa:	d1f7      	bne.n	800a4ec <HAL_TIM_OC_Start+0x54>
 800a4fc:	f880 3042 	strb.w	r3, [r0, #66]	@ 0x42
 800a500:	e001      	b.n	800a506 <HAL_TIM_OC_Start+0x6e>
 800a502:	f880 303e 	strb.w	r3, [r0, #62]	@ 0x3e
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 800a506:	6800      	ldr	r0, [r0, #0]
 800a508:	2201      	movs	r2, #1
 800a50a:	f7ff ffb7 	bl	800a47c <TIM_CCxChannelCmd>
  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 800a50e:	4b38      	ldr	r3, [pc, #224]	@ (800a5f0 <HAL_TIM_OC_Start+0x158>)
 800a510:	4298      	cmp	r0, r3
 800a512:	d032      	beq.n	800a57a <HAL_TIM_OC_Start+0xe2>
 800a514:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800a518:	4298      	cmp	r0, r3
 800a51a:	d02e      	beq.n	800a57a <HAL_TIM_OC_Start+0xe2>
 800a51c:	4b35      	ldr	r3, [pc, #212]	@ (800a5f4 <HAL_TIM_OC_Start+0x15c>)
 800a51e:	4298      	cmp	r0, r3
 800a520:	d02b      	beq.n	800a57a <HAL_TIM_OC_Start+0xe2>
 800a522:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800a526:	4298      	cmp	r0, r3
 800a528:	d027      	beq.n	800a57a <HAL_TIM_OC_Start+0xe2>
 800a52a:	4b33      	ldr	r3, [pc, #204]	@ (800a5f8 <HAL_TIM_OC_Start+0x160>)
 800a52c:	4298      	cmp	r0, r3
 800a52e:	d024      	beq.n	800a57a <HAL_TIM_OC_Start+0xe2>
 800a530:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800a534:	4298      	cmp	r0, r3
 800a536:	d020      	beq.n	800a57a <HAL_TIM_OC_Start+0xe2>
 800a538:	4b30      	ldr	r3, [pc, #192]	@ (800a5fc <HAL_TIM_OC_Start+0x164>)
 800a53a:	4298      	cmp	r0, r3
 800a53c:	d01d      	beq.n	800a57a <HAL_TIM_OC_Start+0xe2>
 800a53e:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800a542:	4298      	cmp	r0, r3
 800a544:	d019      	beq.n	800a57a <HAL_TIM_OC_Start+0xe2>
 800a546:	4b2e      	ldr	r3, [pc, #184]	@ (800a600 <HAL_TIM_OC_Start+0x168>)
 800a548:	4298      	cmp	r0, r3
 800a54a:	d016      	beq.n	800a57a <HAL_TIM_OC_Start+0xe2>
 800a54c:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800a550:	4298      	cmp	r0, r3
 800a552:	d012      	beq.n	800a57a <HAL_TIM_OC_Start+0xe2>
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800a554:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 800a558:	d11a      	bne.n	800a590 <HAL_TIM_OC_Start+0xf8>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800a55a:	6882      	ldr	r2, [r0, #8]
 800a55c:	4b29      	ldr	r3, [pc, #164]	@ (800a604 <HAL_TIM_OC_Start+0x16c>)
 800a55e:	4013      	ands	r3, r2
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800a560:	2b06      	cmp	r3, #6
 800a562:	d140      	bne.n	800a5e6 <HAL_TIM_OC_Start+0x14e>
  return HAL_OK;
 800a564:	2000      	movs	r0, #0
}
 800a566:	bd08      	pop	{r3, pc}
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 800a568:	f880 303f 	strb.w	r3, [r0, #63]	@ 0x3f
 800a56c:	e7cb      	b.n	800a506 <HAL_TIM_OC_Start+0x6e>
 800a56e:	f880 3040 	strb.w	r3, [r0, #64]	@ 0x40
 800a572:	e7c8      	b.n	800a506 <HAL_TIM_OC_Start+0x6e>
 800a574:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
 800a578:	e7c5      	b.n	800a506 <HAL_TIM_OC_Start+0x6e>
    __HAL_TIM_MOE_ENABLE(htim);
 800a57a:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 800a57c:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800a580:	6443      	str	r3, [r0, #68]	@ 0x44
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800a582:	4b1b      	ldr	r3, [pc, #108]	@ (800a5f0 <HAL_TIM_OC_Start+0x158>)
 800a584:	4298      	cmp	r0, r3
 800a586:	d0e8      	beq.n	800a55a <HAL_TIM_OC_Start+0xc2>
 800a588:	4b1f      	ldr	r3, [pc, #124]	@ (800a608 <HAL_TIM_OC_Start+0x170>)
 800a58a:	4298      	cmp	r0, r3
 800a58c:	d1e2      	bne.n	800a554 <HAL_TIM_OC_Start+0xbc>
 800a58e:	e7e4      	b.n	800a55a <HAL_TIM_OC_Start+0xc2>
 800a590:	f1b0 4fa0 	cmp.w	r0, #1342177280	@ 0x50000000
 800a594:	d0e1      	beq.n	800a55a <HAL_TIM_OC_Start+0xc2>
 800a596:	4b1d      	ldr	r3, [pc, #116]	@ (800a60c <HAL_TIM_OC_Start+0x174>)
 800a598:	4298      	cmp	r0, r3
 800a59a:	d0de      	beq.n	800a55a <HAL_TIM_OC_Start+0xc2>
 800a59c:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800a5a0:	4298      	cmp	r0, r3
 800a5a2:	d0da      	beq.n	800a55a <HAL_TIM_OC_Start+0xc2>
 800a5a4:	4b1a      	ldr	r3, [pc, #104]	@ (800a610 <HAL_TIM_OC_Start+0x178>)
 800a5a6:	4298      	cmp	r0, r3
 800a5a8:	d0d7      	beq.n	800a55a <HAL_TIM_OC_Start+0xc2>
 800a5aa:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800a5ae:	4298      	cmp	r0, r3
 800a5b0:	d0d3      	beq.n	800a55a <HAL_TIM_OC_Start+0xc2>
 800a5b2:	4b18      	ldr	r3, [pc, #96]	@ (800a614 <HAL_TIM_OC_Start+0x17c>)
 800a5b4:	4298      	cmp	r0, r3
 800a5b6:	d0d0      	beq.n	800a55a <HAL_TIM_OC_Start+0xc2>
 800a5b8:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800a5bc:	4298      	cmp	r0, r3
 800a5be:	d0cc      	beq.n	800a55a <HAL_TIM_OC_Start+0xc2>
 800a5c0:	4b0c      	ldr	r3, [pc, #48]	@ (800a5f4 <HAL_TIM_OC_Start+0x15c>)
 800a5c2:	4298      	cmp	r0, r3
 800a5c4:	d0c9      	beq.n	800a55a <HAL_TIM_OC_Start+0xc2>
 800a5c6:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800a5ca:	4298      	cmp	r0, r3
 800a5cc:	d0c5      	beq.n	800a55a <HAL_TIM_OC_Start+0xc2>
 800a5ce:	4b0a      	ldr	r3, [pc, #40]	@ (800a5f8 <HAL_TIM_OC_Start+0x160>)
 800a5d0:	4298      	cmp	r0, r3
 800a5d2:	d0c2      	beq.n	800a55a <HAL_TIM_OC_Start+0xc2>
 800a5d4:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800a5d8:	4298      	cmp	r0, r3
 800a5da:	d0be      	beq.n	800a55a <HAL_TIM_OC_Start+0xc2>
      __HAL_TIM_ENABLE(htim);
 800a5dc:	6803      	ldr	r3, [r0, #0]
 800a5de:	f043 0301 	orr.w	r3, r3, #1
 800a5e2:	6003      	str	r3, [r0, #0]
 800a5e4:	e7be      	b.n	800a564 <HAL_TIM_OC_Start+0xcc>
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800a5e6:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800a5ea:	d1f7      	bne.n	800a5dc <HAL_TIM_OC_Start+0x144>
 800a5ec:	e7ba      	b.n	800a564 <HAL_TIM_OC_Start+0xcc>
 800a5ee:	bf00      	nop
 800a5f0:	40012c00 	.word	0x40012c00
 800a5f4:	40013400 	.word	0x40013400
 800a5f8:	40014000 	.word	0x40014000
 800a5fc:	40014400 	.word	0x40014400
 800a600:	40014800 	.word	0x40014800
 800a604:	00010007 	.word	0x00010007
 800a608:	50012c00 	.word	0x50012c00
 800a60c:	40000400 	.word	0x40000400
 800a610:	40000800 	.word	0x40000800
 800a614:	40000c00 	.word	0x40000c00

0800a618 <HAL_TIM_PWM_Start>:
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
 800a618:	f7ff bf3e 	b.w	800a498 <HAL_TIM_OC_Start>

0800a61c <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 800a61c:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800a61e:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
{
 800a622:	4604      	mov	r4, r0
  __HAL_LOCK(htim);
 800a624:	2b01      	cmp	r3, #1
 800a626:	f04f 0002 	mov.w	r0, #2
 800a62a:	d058      	beq.n	800a6de <HAL_TIMEx_MasterConfigSynchronization+0xc2>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800a62c:	6823      	ldr	r3, [r4, #0]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;

  /* If the timer supports ADC synchronization through TRGO2, set the master mode selection 2 */
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 800a62e:	4d2c      	ldr	r5, [pc, #176]	@ (800a6e0 <HAL_TIMEx_MasterConfigSynchronization+0xc4>)
  htim->State = HAL_TIM_STATE_BUSY;
 800a630:	f884 003d 	strb.w	r0, [r4, #61]	@ 0x3d
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 800a634:	42ab      	cmp	r3, r5
  tmpcr2 = htim->Instance->CR2;
 800a636:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 800a638:	6898      	ldr	r0, [r3, #8]
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 800a63a:	d00a      	beq.n	800a652 <HAL_TIMEx_MasterConfigSynchronization+0x36>
 800a63c:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 800a640:	42ab      	cmp	r3, r5
 800a642:	d006      	beq.n	800a652 <HAL_TIMEx_MasterConfigSynchronization+0x36>
 800a644:	4d27      	ldr	r5, [pc, #156]	@ (800a6e4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 800a646:	42ab      	cmp	r3, r5
 800a648:	d003      	beq.n	800a652 <HAL_TIMEx_MasterConfigSynchronization+0x36>
 800a64a:	f105 5580 	add.w	r5, r5, #268435456	@ 0x10000000
 800a64e:	42ab      	cmp	r3, r5
 800a650:	d103      	bne.n	800a65a <HAL_TIMEx_MasterConfigSynchronization+0x3e>
    assert_param(IS_TIM_TRGO2_SOURCE(sMasterConfig->MasterOutputTrigger2));

    /* Clear the MMS2 bits */
    tmpcr2 &= ~TIM_CR2_MMS2;
    /* Select the TRGO2 source*/
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 800a652:	684d      	ldr	r5, [r1, #4]
    tmpcr2 &= ~TIM_CR2_MMS2;
 800a654:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 800a658:	432a      	orrs	r2, r5
  }

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800a65a:	680d      	ldr	r5, [r1, #0]
  tmpcr2 &= ~TIM_CR2_MMS;
 800a65c:	f022 7200 	bic.w	r2, r2, #33554432	@ 0x2000000
 800a660:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800a664:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800a666:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800a668:	4a1d      	ldr	r2, [pc, #116]	@ (800a6e0 <HAL_TIMEx_MasterConfigSynchronization+0xc4>)
 800a66a:	4293      	cmp	r3, r2
 800a66c:	d02c      	beq.n	800a6c8 <HAL_TIMEx_MasterConfigSynchronization+0xac>
 800a66e:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800a672:	4293      	cmp	r3, r2
 800a674:	d028      	beq.n	800a6c8 <HAL_TIMEx_MasterConfigSynchronization+0xac>
 800a676:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800a67a:	d025      	beq.n	800a6c8 <HAL_TIMEx_MasterConfigSynchronization+0xac>
 800a67c:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800a680:	d022      	beq.n	800a6c8 <HAL_TIMEx_MasterConfigSynchronization+0xac>
 800a682:	4a19      	ldr	r2, [pc, #100]	@ (800a6e8 <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 800a684:	4293      	cmp	r3, r2
 800a686:	d01f      	beq.n	800a6c8 <HAL_TIMEx_MasterConfigSynchronization+0xac>
 800a688:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800a68c:	4293      	cmp	r3, r2
 800a68e:	d01b      	beq.n	800a6c8 <HAL_TIMEx_MasterConfigSynchronization+0xac>
 800a690:	4a16      	ldr	r2, [pc, #88]	@ (800a6ec <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 800a692:	4293      	cmp	r3, r2
 800a694:	d018      	beq.n	800a6c8 <HAL_TIMEx_MasterConfigSynchronization+0xac>
 800a696:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800a69a:	4293      	cmp	r3, r2
 800a69c:	d014      	beq.n	800a6c8 <HAL_TIMEx_MasterConfigSynchronization+0xac>
 800a69e:	4a14      	ldr	r2, [pc, #80]	@ (800a6f0 <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 800a6a0:	4293      	cmp	r3, r2
 800a6a2:	d011      	beq.n	800a6c8 <HAL_TIMEx_MasterConfigSynchronization+0xac>
 800a6a4:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800a6a8:	4293      	cmp	r3, r2
 800a6aa:	d00d      	beq.n	800a6c8 <HAL_TIMEx_MasterConfigSynchronization+0xac>
 800a6ac:	4a0d      	ldr	r2, [pc, #52]	@ (800a6e4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 800a6ae:	4293      	cmp	r3, r2
 800a6b0:	d00a      	beq.n	800a6c8 <HAL_TIMEx_MasterConfigSynchronization+0xac>
 800a6b2:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800a6b6:	4293      	cmp	r3, r2
 800a6b8:	d006      	beq.n	800a6c8 <HAL_TIMEx_MasterConfigSynchronization+0xac>
 800a6ba:	4a0e      	ldr	r2, [pc, #56]	@ (800a6f4 <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 800a6bc:	4293      	cmp	r3, r2
 800a6be:	d003      	beq.n	800a6c8 <HAL_TIMEx_MasterConfigSynchronization+0xac>
 800a6c0:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800a6c4:	4293      	cmp	r3, r2
 800a6c6:	d104      	bne.n	800a6d2 <HAL_TIMEx_MasterConfigSynchronization+0xb6>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800a6c8:	6889      	ldr	r1, [r1, #8]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800a6ca:	f020 0280 	bic.w	r2, r0, #128	@ 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800a6ce:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800a6d0:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 800a6d2:	2301      	movs	r3, #1

  __HAL_UNLOCK(htim);
 800a6d4:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 800a6d6:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_UNLOCK(htim);
 800a6da:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c

  return HAL_OK;
}
 800a6de:	bd30      	pop	{r4, r5, pc}
 800a6e0:	40012c00 	.word	0x40012c00
 800a6e4:	40013400 	.word	0x40013400
 800a6e8:	40000400 	.word	0x40000400
 800a6ec:	40000800 	.word	0x40000800
 800a6f0:	40000c00 	.word	0x40000c00
 800a6f4:	40014000 	.word	0x40014000

0800a6f8 <HAL_TIMEx_ConfigBreakDeadTime>:
  *         interrupt can be enabled by calling the @ref __HAL_TIM_ENABLE_IT macro.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_ConfigBreakDeadTime(TIM_HandleTypeDef *htim,
                                                const TIM_BreakDeadTimeConfigTypeDef *sBreakDeadTimeConfig)
{
 800a6f8:	b510      	push	{r4, lr}
  assert_param(IS_TIM_BREAK_POLARITY(sBreakDeadTimeConfig->BreakPolarity));
  assert_param(IS_TIM_BREAK_FILTER(sBreakDeadTimeConfig->BreakFilter));
  assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(sBreakDeadTimeConfig->AutomaticOutput));

  /* Check input state */
  __HAL_LOCK(htim);
 800a6fa:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
{
 800a6fe:	4602      	mov	r2, r0
  __HAL_LOCK(htim);
 800a700:	2b01      	cmp	r3, #1
 800a702:	d077      	beq.n	800a7f4 <HAL_TIMEx_ConfigBreakDeadTime+0xfc>
  /* Set the Lock level, the Break enable Bit and the Polarity, the OSSR State,
     the OSSI State, the dead time value and the Automatic Output Enable Bit */

  /* Set the BDTR bits */
  MODIFY_REG(tmpbdtr, TIM_BDTR_DTG, sBreakDeadTimeConfig->DeadTime);
  MODIFY_REG(tmpbdtr, TIM_BDTR_LOCK, sBreakDeadTimeConfig->LockLevel);
 800a704:	68cb      	ldr	r3, [r1, #12]
 800a706:	6888      	ldr	r0, [r1, #8]
 800a708:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800a70c:	4303      	orrs	r3, r0
  MODIFY_REG(tmpbdtr, TIM_BDTR_OSSI, sBreakDeadTimeConfig->OffStateIDLEMode);
 800a70e:	6848      	ldr	r0, [r1, #4]
 800a710:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800a714:	4303      	orrs	r3, r0
  MODIFY_REG(tmpbdtr, TIM_BDTR_OSSR, sBreakDeadTimeConfig->OffStateRunMode);
 800a716:	6808      	ldr	r0, [r1, #0]
 800a718:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800a71c:	4303      	orrs	r3, r0
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKE, sBreakDeadTimeConfig->BreakState);
 800a71e:	6908      	ldr	r0, [r1, #16]
 800a720:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800a724:	4303      	orrs	r3, r0
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKP, sBreakDeadTimeConfig->BreakPolarity);
 800a726:	6948      	ldr	r0, [r1, #20]
 800a728:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800a72c:	4303      	orrs	r3, r0
  MODIFY_REG(tmpbdtr, TIM_BDTR_AOE, sBreakDeadTimeConfig->AutomaticOutput);
 800a72e:	6b08      	ldr	r0, [r1, #48]	@ 0x30
 800a730:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800a734:	4303      	orrs	r3, r0
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKF, (sBreakDeadTimeConfig->BreakFilter << TIM_BDTR_BKF_Pos));
 800a736:	6988      	ldr	r0, [r1, #24]
 800a738:	f423 2370 	bic.w	r3, r3, #983040	@ 0xf0000

  if (IS_TIM_BREAK_INSTANCE(htim->Instance))
 800a73c:	4c2e      	ldr	r4, [pc, #184]	@ (800a7f8 <HAL_TIMEx_ConfigBreakDeadTime+0x100>)
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKF, (sBreakDeadTimeConfig->BreakFilter << TIM_BDTR_BKF_Pos));
 800a73e:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
  if (IS_TIM_BREAK_INSTANCE(htim->Instance))
 800a742:	6810      	ldr	r0, [r2, #0]
 800a744:	42a0      	cmp	r0, r4
 800a746:	d01f      	beq.n	800a788 <HAL_TIMEx_ConfigBreakDeadTime+0x90>
 800a748:	f104 5480 	add.w	r4, r4, #268435456	@ 0x10000000
 800a74c:	42a0      	cmp	r0, r4
 800a74e:	d01b      	beq.n	800a788 <HAL_TIMEx_ConfigBreakDeadTime+0x90>
 800a750:	4c2a      	ldr	r4, [pc, #168]	@ (800a7fc <HAL_TIMEx_ConfigBreakDeadTime+0x104>)
 800a752:	42a0      	cmp	r0, r4
 800a754:	d018      	beq.n	800a788 <HAL_TIMEx_ConfigBreakDeadTime+0x90>
 800a756:	f104 5480 	add.w	r4, r4, #268435456	@ 0x10000000
 800a75a:	42a0      	cmp	r0, r4
 800a75c:	d014      	beq.n	800a788 <HAL_TIMEx_ConfigBreakDeadTime+0x90>
 800a75e:	4c28      	ldr	r4, [pc, #160]	@ (800a800 <HAL_TIMEx_ConfigBreakDeadTime+0x108>)
 800a760:	42a0      	cmp	r0, r4
 800a762:	d011      	beq.n	800a788 <HAL_TIMEx_ConfigBreakDeadTime+0x90>
 800a764:	f104 5480 	add.w	r4, r4, #268435456	@ 0x10000000
 800a768:	42a0      	cmp	r0, r4
 800a76a:	d00d      	beq.n	800a788 <HAL_TIMEx_ConfigBreakDeadTime+0x90>
 800a76c:	4c25      	ldr	r4, [pc, #148]	@ (800a804 <HAL_TIMEx_ConfigBreakDeadTime+0x10c>)
 800a76e:	42a0      	cmp	r0, r4
 800a770:	d00a      	beq.n	800a788 <HAL_TIMEx_ConfigBreakDeadTime+0x90>
 800a772:	f104 5480 	add.w	r4, r4, #268435456	@ 0x10000000
 800a776:	42a0      	cmp	r0, r4
 800a778:	d006      	beq.n	800a788 <HAL_TIMEx_ConfigBreakDeadTime+0x90>
 800a77a:	4c23      	ldr	r4, [pc, #140]	@ (800a808 <HAL_TIMEx_ConfigBreakDeadTime+0x110>)
 800a77c:	42a0      	cmp	r0, r4
 800a77e:	d003      	beq.n	800a788 <HAL_TIMEx_ConfigBreakDeadTime+0x90>
 800a780:	f104 5480 	add.w	r4, r4, #268435456	@ 0x10000000
 800a784:	42a0      	cmp	r0, r4
 800a786:	d130      	bne.n	800a7ea <HAL_TIMEx_ConfigBreakDeadTime+0xf2>
  {
    /* Check the parameters */
    assert_param(IS_TIM_BREAK_AFMODE(sBreakDeadTimeConfig->BreakAFMode));

    /* Set BREAK AF mode */
    MODIFY_REG(tmpbdtr, TIM_BDTR_BKBID, sBreakDeadTimeConfig->BreakAFMode);
 800a788:	69cc      	ldr	r4, [r1, #28]
 800a78a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800a78e:	4323      	orrs	r3, r4
  }

  if (IS_TIM_BKIN2_INSTANCE(htim->Instance))
 800a790:	4c19      	ldr	r4, [pc, #100]	@ (800a7f8 <HAL_TIMEx_ConfigBreakDeadTime+0x100>)
 800a792:	42a0      	cmp	r0, r4
 800a794:	d00a      	beq.n	800a7ac <HAL_TIMEx_ConfigBreakDeadTime+0xb4>
 800a796:	f104 5480 	add.w	r4, r4, #268435456	@ 0x10000000
 800a79a:	42a0      	cmp	r0, r4
 800a79c:	d006      	beq.n	800a7ac <HAL_TIMEx_ConfigBreakDeadTime+0xb4>
 800a79e:	4c17      	ldr	r4, [pc, #92]	@ (800a7fc <HAL_TIMEx_ConfigBreakDeadTime+0x104>)
 800a7a0:	42a0      	cmp	r0, r4
 800a7a2:	d003      	beq.n	800a7ac <HAL_TIMEx_ConfigBreakDeadTime+0xb4>
 800a7a4:	f104 5480 	add.w	r4, r4, #268435456	@ 0x10000000
 800a7a8:	42a0      	cmp	r0, r4
 800a7aa:	d11e      	bne.n	800a7ea <HAL_TIMEx_ConfigBreakDeadTime+0xf2>
    assert_param(IS_TIM_BREAK2_STATE(sBreakDeadTimeConfig->Break2State));
    assert_param(IS_TIM_BREAK2_POLARITY(sBreakDeadTimeConfig->Break2Polarity));
    assert_param(IS_TIM_BREAK_FILTER(sBreakDeadTimeConfig->Break2Filter));

    /* Set the BREAK2 input related BDTR bits */
    MODIFY_REG(tmpbdtr, TIM_BDTR_BK2F, (sBreakDeadTimeConfig->Break2Filter << TIM_BDTR_BK2F_Pos));
 800a7ac:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800a7ae:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 800a7b2:	ea43 5304 	orr.w	r3, r3, r4, lsl #20
    MODIFY_REG(tmpbdtr, TIM_BDTR_BK2E, sBreakDeadTimeConfig->Break2State);
 800a7b6:	6a0c      	ldr	r4, [r1, #32]
 800a7b8:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800a7bc:	4323      	orrs	r3, r4
    MODIFY_REG(tmpbdtr, TIM_BDTR_BK2P, sBreakDeadTimeConfig->Break2Polarity);
 800a7be:	6a4c      	ldr	r4, [r1, #36]	@ 0x24
 800a7c0:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
 800a7c4:	4323      	orrs	r3, r4

    if (IS_TIM_ADVANCED_INSTANCE(htim->Instance))
 800a7c6:	4c0c      	ldr	r4, [pc, #48]	@ (800a7f8 <HAL_TIMEx_ConfigBreakDeadTime+0x100>)
 800a7c8:	42a0      	cmp	r0, r4
 800a7ca:	d00a      	beq.n	800a7e2 <HAL_TIMEx_ConfigBreakDeadTime+0xea>
 800a7cc:	f104 5480 	add.w	r4, r4, #268435456	@ 0x10000000
 800a7d0:	42a0      	cmp	r0, r4
 800a7d2:	d006      	beq.n	800a7e2 <HAL_TIMEx_ConfigBreakDeadTime+0xea>
 800a7d4:	4c09      	ldr	r4, [pc, #36]	@ (800a7fc <HAL_TIMEx_ConfigBreakDeadTime+0x104>)
 800a7d6:	42a0      	cmp	r0, r4
 800a7d8:	d003      	beq.n	800a7e2 <HAL_TIMEx_ConfigBreakDeadTime+0xea>
 800a7da:	f104 5480 	add.w	r4, r4, #268435456	@ 0x10000000
 800a7de:	42a0      	cmp	r0, r4
 800a7e0:	d103      	bne.n	800a7ea <HAL_TIMEx_ConfigBreakDeadTime+0xf2>
    {
      /* Check the parameters */
      assert_param(IS_TIM_BREAK2_AFMODE(sBreakDeadTimeConfig->Break2AFMode));

      /* Set BREAK2 AF mode */
      MODIFY_REG(tmpbdtr, TIM_BDTR_BK2BID, sBreakDeadTimeConfig->Break2AFMode);
 800a7e2:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
 800a7e4:	f023 5300 	bic.w	r3, r3, #536870912	@ 0x20000000
 800a7e8:	430b      	orrs	r3, r1
    }
  }

  /* Set TIMx_BDTR */
  htim->Instance->BDTR = tmpbdtr;
 800a7ea:	6443      	str	r3, [r0, #68]	@ 0x44

  __HAL_UNLOCK(htim);
 800a7ec:	2000      	movs	r0, #0
 800a7ee:	f882 003c 	strb.w	r0, [r2, #60]	@ 0x3c

  return HAL_OK;
}
 800a7f2:	bd10      	pop	{r4, pc}
  __HAL_LOCK(htim);
 800a7f4:	2002      	movs	r0, #2
 800a7f6:	e7fc      	b.n	800a7f2 <HAL_TIMEx_ConfigBreakDeadTime+0xfa>
 800a7f8:	40012c00 	.word	0x40012c00
 800a7fc:	40013400 	.word	0x40013400
 800a800:	40014000 	.word	0x40014000
 800a804:	40014400 	.word	0x40014400
 800a808:	40014800 	.word	0x40014800

0800a80c <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 800a80c:	4770      	bx	lr

0800a80e <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 800a80e:	4770      	bx	lr

0800a810 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Hall Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
 800a810:	4770      	bx	lr

0800a812 <HAL_TIMEx_EncoderIndexCallback>:
/**
  * @brief  Encoder index callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_EncoderIndexCallback(TIM_HandleTypeDef *htim)
 800a812:	4770      	bx	lr

0800a814 <HAL_TIMEx_DirectionChangeCallback>:
/**
  * @brief  Direction change callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_DirectionChangeCallback(TIM_HandleTypeDef *htim)
 800a814:	4770      	bx	lr

0800a816 <HAL_TIMEx_IndexErrorCallback>:
/**
  * @brief  Index error callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_IndexErrorCallback(TIM_HandleTypeDef *htim)
 800a816:	4770      	bx	lr

0800a818 <HAL_TIMEx_TransitionErrorCallback>:
/**
  * @brief  Transition error callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_TransitionErrorCallback(TIM_HandleTypeDef *htim)
 800a818:	4770      	bx	lr
	...

0800a81c <XSPI_ConfigCmd>:
  __IO uint32_t *tcr_reg;
  __IO uint32_t *ir_reg;
  __IO uint32_t *abr_reg;

  /* Re-initialize the value of the functional mode */
  MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FMODE, 0U);
 800a81c:	6802      	ldr	r2, [r0, #0]
{
 800a81e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FMODE, 0U);
 800a822:	6813      	ldr	r3, [r2, #0]
 800a824:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 800a828:	6013      	str	r3, [r2, #0]

  if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 800a82a:	4b7e      	ldr	r3, [pc, #504]	@ (800aa24 <XSPI_ConfigCmd+0x208>)
 800a82c:	429a      	cmp	r2, r3
 800a82e:	d00d      	beq.n	800a84c <XSPI_ConfigCmd+0x30>
 800a830:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800a834:	429a      	cmp	r2, r3
 800a836:	d009      	beq.n	800a84c <XSPI_ConfigCmd+0x30>
 800a838:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 800a83c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a840:	429a      	cmp	r2, r3
 800a842:	d003      	beq.n	800a84c <XSPI_ConfigCmd+0x30>
 800a844:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800a848:	429a      	cmp	r2, r3
 800a84a:	d15c      	bne.n	800a906 <XSPI_ConfigCmd+0xea>
  {
    if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
 800a84c:	6883      	ldr	r3, [r0, #8]
 800a84e:	b92b      	cbnz	r3, 800a85c <XSPI_ConfigCmd+0x40>
    {
      assert_param(IS_OCTOSPI_IO_SELECT(pCmd->IOSelect));
      MODIFY_REG(hxspi->Instance->CR, OCTOSPI_CR_MSEL, pCmd->IOSelect);
 800a850:	6813      	ldr	r3, [r2, #0]
 800a852:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
  else if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
  {
    if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
    {
      assert_param(IS_HSPI_IO_SELECT(pCmd->IOSelect));
      MODIFY_REG(hxspi->Instance->CR, HSPI_CR_MSEL, pCmd->IOSelect);
 800a856:	684c      	ldr	r4, [r1, #4]
 800a858:	4323      	orrs	r3, r4
 800a85a:	6013      	str	r3, [r2, #0]
  {
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
    return HAL_ERROR;
  }

  if (pCmd->OperationType == HAL_XSPI_OPTYPE_WRITE_CFG)
 800a85c:	680b      	ldr	r3, [r1, #0]
 800a85e:	2b02      	cmp	r3, #2
 800a860:	d165      	bne.n	800a92e <XSPI_ConfigCmd+0x112>
  {
    ccr_reg = &(hxspi->Instance->WCCR);
 800a862:	f502 74c0 	add.w	r4, r2, #384	@ 0x180
    tcr_reg = &(hxspi->Instance->WTCR);
 800a866:	f502 76c4 	add.w	r6, r2, #392	@ 0x188
    ir_reg  = &(hxspi->Instance->WIR);
 800a86a:	f502 75c8 	add.w	r5, r2, #400	@ 0x190
    abr_reg = &(hxspi->Instance->WABR);
 800a86e:	f502 7cd0 	add.w	ip, r2, #416	@ 0x1a0
    ir_reg  = &(hxspi->Instance->IR);
    abr_reg = &(hxspi->Instance->ABR);
  }

  /* Configure the CCR register with DQS and SIOO modes */
  *ccr_reg = (pCmd->DQSMode | pCmd->SIOOMode);
 800a872:	e9d1 3712 	ldrd	r3, r7, [r1, #72]	@ 0x48
 800a876:	433b      	orrs	r3, r7
 800a878:	6023      	str	r3, [r4, #0]

  if (pCmd->AlternateBytesMode != HAL_XSPI_ALT_BYTES_NONE)
 800a87a:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 800a87c:	b16b      	cbz	r3, 800a89a <XSPI_ConfigCmd+0x7e>
  {
    /* Configure the ABR register with alternate bytes value */
    *abr_reg = pCmd->AlternateBytes;
 800a87e:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
 800a880:	f8cc 3000 	str.w	r3, [ip]

    /* Configure the CCR register with alternate bytes communication parameters */
    MODIFY_REG((*ccr_reg), (XSPI_CCR_ABMODE | XSPI_CCR_ABDTR | XSPI_CCR_ABSIZE),
 800a884:	6b4f      	ldr	r7, [r1, #52]	@ 0x34
 800a886:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 800a888:	f8d4 c000 	ldr.w	ip, [r4]
 800a88c:	433b      	orrs	r3, r7
 800a88e:	6b0f      	ldr	r7, [r1, #48]	@ 0x30
 800a890:	433b      	orrs	r3, r7
 800a892:	f42c 177c 	bic.w	r7, ip, #4128768	@ 0x3f0000
 800a896:	433b      	orrs	r3, r7
 800a898:	6023      	str	r3, [r4, #0]
               (pCmd->AlternateBytesMode | pCmd->AlternateBytesDTRMode | pCmd->AlternateBytesWidth));
  }

  /* Configure the TCR register with the number of dummy cycles */
  MODIFY_REG((*tcr_reg), XSPI_TCR_DCYC, pCmd->DummyCycles);
 800a89a:	6833      	ldr	r3, [r6, #0]
 800a89c:	6c4f      	ldr	r7, [r1, #68]	@ 0x44
 800a89e:	f023 031f 	bic.w	r3, r3, #31
 800a8a2:	433b      	orrs	r3, r7
 800a8a4:	6033      	str	r3, [r6, #0]

  if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
 800a8a6:	f8d1 e038 	ldr.w	lr, [r1, #56]	@ 0x38
 800a8aa:	f1be 0f00 	cmp.w	lr, #0
 800a8ae:	d004      	beq.n	800a8ba <XSPI_ConfigCmd+0x9e>
  {
    if (pCmd->OperationType == HAL_XSPI_OPTYPE_COMMON_CFG)
 800a8b0:	680b      	ldr	r3, [r1, #0]
 800a8b2:	b913      	cbnz	r3, 800a8ba <XSPI_ConfigCmd+0x9e>
    {
      /* Configure the DLR register with the number of data */
      hxspi->Instance->DLR = (pCmd->DataLength - 1U);
 800a8b4:	6bcb      	ldr	r3, [r1, #60]	@ 0x3c
 800a8b6:	3b01      	subs	r3, #1
 800a8b8:	6413      	str	r3, [r2, #64]	@ 0x40
    }
  }

  if (pCmd->InstructionMode != HAL_XSPI_INSTRUCTION_NONE)
 800a8ba:	68cb      	ldr	r3, [r1, #12]
  {
    if (pCmd->AddressMode != HAL_XSPI_ADDRESS_NONE)
 800a8bc:	f8d1 901c 	ldr.w	r9, [r1, #28]
  if (pCmd->InstructionMode != HAL_XSPI_INSTRUCTION_NONE)
 800a8c0:	2b00      	cmp	r3, #0
 800a8c2:	f000 808e 	beq.w	800a9e2 <XSPI_ConfigCmd+0x1c6>
      if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
      {
        /* ---- Command with instruction, address and data ---- */

        /* Configure the CCR register with all communication parameters */
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 800a8c6:	e9d1 c804 	ldrd	ip, r8, [r1, #16]
    if (pCmd->AddressMode != HAL_XSPI_ADDRESS_NONE)
 800a8ca:	f1b9 0f00 	cmp.w	r9, #0
 800a8ce:	d05e      	beq.n	800a98e <XSPI_ConfigCmd+0x172>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 800a8d0:	e9d1 6708 	ldrd	r6, r7, [r1, #32]
      if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
 800a8d4:	f1be 0f00 	cmp.w	lr, #0
 800a8d8:	d03d      	beq.n	800a956 <XSPI_ConfigCmd+0x13a>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 800a8da:	ea4e 0303 	orr.w	r3, lr, r3
 800a8de:	ea43 0309 	orr.w	r3, r3, r9
 800a8e2:	ea43 0308 	orr.w	r3, r3, r8
 800a8e6:	ea43 030c 	orr.w	r3, r3, ip
 800a8ea:	433b      	orrs	r3, r7
 800a8ec:	4333      	orrs	r3, r6
 800a8ee:	6c0e      	ldr	r6, [r1, #64]	@ 0x40
 800a8f0:	6820      	ldr	r0, [r4, #0]
 800a8f2:	4333      	orrs	r3, r6
 800a8f4:	4e4c      	ldr	r6, [pc, #304]	@ (800aa28 <XSPI_ConfigCmd+0x20c>)
 800a8f6:	4006      	ands	r6, r0
 800a8f8:	4333      	orrs	r3, r6

        /* The DHQC bit is linked with DDTR bit which should be activated */
        if ((hxspi->Init.DelayHoldQuarterCycle == HAL_XSPI_DHQC_ENABLE) &&
            (pCmd->InstructionDTRMode == HAL_XSPI_INSTRUCTION_DTR_ENABLE))
        {
          MODIFY_REG((*ccr_reg), XSPI_CCR_DDTR, HAL_XSPI_DATA_DTR_ENABLE);
 800a8fa:	6023      	str	r3, [r4, #0]
        }
      }
      /* Configure the IR register with the instruction value */
      *ir_reg = pCmd->Instruction;
 800a8fc:	688b      	ldr	r3, [r1, #8]
 800a8fe:	602b      	str	r3, [r5, #0]
        MODIFY_REG((*ccr_reg), (XSPI_CCR_ADMODE | XSPI_CCR_ADDTR | XSPI_CCR_ADSIZE),
                   (pCmd->AddressMode | pCmd->AddressDTRMode | pCmd->AddressWidth));
      }

      /* Configure the AR register with the instruction value */
      hxspi->Instance->AR = pCmd->Address;
 800a900:	698b      	ldr	r3, [r1, #24]
 800a902:	6493      	str	r3, [r2, #72]	@ 0x48
 800a904:	e057      	b.n	800a9b6 <XSPI_ConfigCmd+0x19a>
  else if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 800a906:	4b49      	ldr	r3, [pc, #292]	@ (800aa2c <XSPI_ConfigCmd+0x210>)
 800a908:	429a      	cmp	r2, r3
 800a90a:	d003      	beq.n	800a914 <XSPI_ConfigCmd+0xf8>
 800a90c:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800a910:	429a      	cmp	r2, r3
 800a912:	d106      	bne.n	800a922 <XSPI_ConfigCmd+0x106>
    if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
 800a914:	6883      	ldr	r3, [r0, #8]
 800a916:	2b00      	cmp	r3, #0
 800a918:	d1a0      	bne.n	800a85c <XSPI_ConfigCmd+0x40>
      MODIFY_REG(hxspi->Instance->CR, HSPI_CR_MSEL, pCmd->IOSelect);
 800a91a:	6813      	ldr	r3, [r2, #0]
 800a91c:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
 800a920:	e799      	b.n	800a856 <XSPI_ConfigCmd+0x3a>
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
 800a922:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 800a924:	f043 0308 	orr.w	r3, r3, #8
    }
    else
    {
      /* ---- Invalid command configuration (no instruction, no address) ---- */
      status = HAL_ERROR;
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_PARAM;
 800a928:	6583      	str	r3, [r0, #88]	@ 0x58
    return HAL_ERROR;
 800a92a:	2001      	movs	r0, #1
 800a92c:	e044      	b.n	800a9b8 <XSPI_ConfigCmd+0x19c>
  else if (pCmd->OperationType == HAL_XSPI_OPTYPE_WRAP_CFG)
 800a92e:	2b03      	cmp	r3, #3
    ccr_reg = &(hxspi->Instance->WPCCR);
 800a930:	bf01      	itttt	eq
 800a932:	f502 74a0 	addeq.w	r4, r2, #320	@ 0x140
    tcr_reg = &(hxspi->Instance->WPTCR);
 800a936:	f502 76a4 	addeq.w	r6, r2, #328	@ 0x148
    ir_reg  = &(hxspi->Instance->WPIR);
 800a93a:	f502 75a8 	addeq.w	r5, r2, #336	@ 0x150
    abr_reg = &(hxspi->Instance->WPABR);
 800a93e:	f502 7cb0 	addeq.w	ip, r2, #352	@ 0x160
    ccr_reg = &(hxspi->Instance->CCR);
 800a942:	bf1f      	itttt	ne
 800a944:	f502 7480 	addne.w	r4, r2, #256	@ 0x100
    tcr_reg = &(hxspi->Instance->TCR);
 800a948:	f502 7684 	addne.w	r6, r2, #264	@ 0x108
    ir_reg  = &(hxspi->Instance->IR);
 800a94c:	f502 7588 	addne.w	r5, r2, #272	@ 0x110
    abr_reg = &(hxspi->Instance->ABR);
 800a950:	f502 7c90 	addne.w	ip, r2, #288	@ 0x120
 800a954:	e78d      	b.n	800a872 <XSPI_ConfigCmd+0x56>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 800a956:	ea43 0309 	orr.w	r3, r3, r9
 800a95a:	f8d4 e000 	ldr.w	lr, [r4]
 800a95e:	ea43 0308 	orr.w	r3, r3, r8
 800a962:	ea43 030c 	orr.w	r3, r3, ip
 800a966:	433b      	orrs	r3, r7
 800a968:	f42e 5e7c 	bic.w	lr, lr, #16128	@ 0x3f00
 800a96c:	4333      	orrs	r3, r6
 800a96e:	f02e 0e3f 	bic.w	lr, lr, #63	@ 0x3f
 800a972:	ea43 030e 	orr.w	r3, r3, lr
 800a976:	6023      	str	r3, [r4, #0]
        if ((hxspi->Init.DelayHoldQuarterCycle == HAL_XSPI_DHQC_ENABLE) &&
 800a978:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800a97a:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800a97e:	d1bd      	bne.n	800a8fc <XSPI_ConfigCmd+0xe0>
 800a980:	694b      	ldr	r3, [r1, #20]
 800a982:	2b08      	cmp	r3, #8
 800a984:	d1ba      	bne.n	800a8fc <XSPI_ConfigCmd+0xe0>
          MODIFY_REG((*ccr_reg), XSPI_CCR_DDTR, HAL_XSPI_DATA_DTR_ENABLE);
 800a986:	6823      	ldr	r3, [r4, #0]
 800a988:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 800a98c:	e7b5      	b.n	800a8fa <XSPI_ConfigCmd+0xde>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE | XSPI_CCR_IDTR | XSPI_CCR_ISIZE |
 800a98e:	6822      	ldr	r2, [r4, #0]
      if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
 800a990:	f1be 0f00 	cmp.w	lr, #0
 800a994:	d012      	beq.n	800a9bc <XSPI_ConfigCmd+0x1a0>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE | XSPI_CCR_IDTR | XSPI_CCR_ISIZE |
 800a996:	ea4e 0303 	orr.w	r3, lr, r3
 800a99a:	6c08      	ldr	r0, [r1, #64]	@ 0x40
 800a99c:	ea43 0308 	orr.w	r3, r3, r8
 800a9a0:	ea43 030c 	orr.w	r3, r3, ip
 800a9a4:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 800a9a8:	4303      	orrs	r3, r0
 800a9aa:	f022 023f 	bic.w	r2, r2, #63	@ 0x3f
 800a9ae:	4313      	orrs	r3, r2
          MODIFY_REG((*ccr_reg), XSPI_CCR_DDTR, HAL_XSPI_DATA_DTR_ENABLE);
 800a9b0:	6023      	str	r3, [r4, #0]
      *ir_reg = pCmd->Instruction;
 800a9b2:	688b      	ldr	r3, [r1, #8]
 800a9b4:	602b      	str	r3, [r5, #0]
  HAL_StatusTypeDef status = HAL_OK;
 800a9b6:	2000      	movs	r0, #0
    }
  }

  return status;
}
 800a9b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE | XSPI_CCR_IDTR | XSPI_CCR_ISIZE),
 800a9bc:	ea43 0308 	orr.w	r3, r3, r8
 800a9c0:	ea43 030c 	orr.w	r3, r3, ip
 800a9c4:	f022 023f 	bic.w	r2, r2, #63	@ 0x3f
 800a9c8:	4313      	orrs	r3, r2
 800a9ca:	6023      	str	r3, [r4, #0]
        if ((hxspi->Init.DelayHoldQuarterCycle == HAL_XSPI_DHQC_ENABLE) &&
 800a9cc:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800a9ce:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800a9d2:	d1ee      	bne.n	800a9b2 <XSPI_ConfigCmd+0x196>
 800a9d4:	694b      	ldr	r3, [r1, #20]
 800a9d6:	2b08      	cmp	r3, #8
 800a9d8:	d1eb      	bne.n	800a9b2 <XSPI_ConfigCmd+0x196>
          MODIFY_REG((*ccr_reg), XSPI_CCR_DDTR, HAL_XSPI_DATA_DTR_ENABLE);
 800a9da:	6823      	ldr	r3, [r4, #0]
 800a9dc:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 800a9e0:	e7e6      	b.n	800a9b0 <XSPI_ConfigCmd+0x194>
    if (pCmd->AddressMode != HAL_XSPI_ADDRESS_NONE)
 800a9e2:	f1b9 0f00 	cmp.w	r9, #0
 800a9e6:	d01b      	beq.n	800aa20 <XSPI_ConfigCmd+0x204>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 800a9e8:	e9d1 6008 	ldrd	r6, r0, [r1, #32]
      if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
 800a9ec:	f1be 0f00 	cmp.w	lr, #0
 800a9f0:	d00d      	beq.n	800aa0e <XSPI_ConfigCmd+0x1f2>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_ADMODE | XSPI_CCR_ADDTR | XSPI_CCR_ADSIZE |
 800a9f2:	ea4e 0309 	orr.w	r3, lr, r9
 800a9f6:	6825      	ldr	r5, [r4, #0]
 800a9f8:	4303      	orrs	r3, r0
 800a9fa:	6c08      	ldr	r0, [r1, #64]	@ 0x40
 800a9fc:	4333      	orrs	r3, r6
 800a9fe:	4303      	orrs	r3, r0
 800aa00:	f025 6070 	bic.w	r0, r5, #251658240	@ 0xf000000
 800aa04:	f420 507c 	bic.w	r0, r0, #16128	@ 0x3f00
 800aa08:	4303      	orrs	r3, r0
 800aa0a:	6023      	str	r3, [r4, #0]
 800aa0c:	e778      	b.n	800a900 <XSPI_ConfigCmd+0xe4>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_ADMODE | XSPI_CCR_ADDTR | XSPI_CCR_ADSIZE),
 800aa0e:	6823      	ldr	r3, [r4, #0]
 800aa10:	ea40 0009 	orr.w	r0, r0, r9
 800aa14:	4330      	orrs	r0, r6
 800aa16:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 800aa1a:	4318      	orrs	r0, r3
 800aa1c:	6020      	str	r0, [r4, #0]
 800aa1e:	e76f      	b.n	800a900 <XSPI_ConfigCmd+0xe4>
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_PARAM;
 800aa20:	2308      	movs	r3, #8
 800aa22:	e781      	b.n	800a928 <XSPI_ConfigCmd+0x10c>
 800aa24:	420d1400 	.word	0x420d1400
 800aa28:	f0ffc0c0 	.word	0xf0ffc0c0
 800aa2c:	420d3400 	.word	0x420d3400

0800aa30 <XSPI_WaitFlagStateUntilTimeout>:
{
 800aa30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aa34:	4604      	mov	r4, r0
 800aa36:	460e      	mov	r6, r1
 800aa38:	4615      	mov	r5, r2
 800aa3a:	461f      	mov	r7, r3
 800aa3c:	f8dd 8018 	ldr.w	r8, [sp, #24]
  while ((HAL_XSPI_GET_FLAG(hxspi, Flag)) != State)
 800aa40:	6822      	ldr	r2, [r4, #0]
 800aa42:	6a13      	ldr	r3, [r2, #32]
 800aa44:	4233      	tst	r3, r6
 800aa46:	bf14      	ite	ne
 800aa48:	2301      	movne	r3, #1
 800aa4a:	2300      	moveq	r3, #0
 800aa4c:	42ab      	cmp	r3, r5
 800aa4e:	d101      	bne.n	800aa54 <XSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 800aa50:	2000      	movs	r0, #0
 800aa52:	e012      	b.n	800aa7a <XSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 800aa54:	f1b8 3fff 	cmp.w	r8, #4294967295
 800aa58:	d0f3      	beq.n	800aa42 <XSPI_WaitFlagStateUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800aa5a:	f7f9 fccb 	bl	80043f4 <HAL_GetTick>
 800aa5e:	1bc0      	subs	r0, r0, r7
 800aa60:	4540      	cmp	r0, r8
 800aa62:	d802      	bhi.n	800aa6a <XSPI_WaitFlagStateUntilTimeout+0x3a>
 800aa64:	f1b8 0f00 	cmp.w	r8, #0
 800aa68:	d1ea      	bne.n	800aa40 <XSPI_WaitFlagStateUntilTimeout+0x10>
        hxspi->State     = HAL_XSPI_STATE_ERROR;
 800aa6a:	f44f 7300 	mov.w	r3, #512	@ 0x200
        hxspi->ErrorCode |= HAL_XSPI_ERROR_TIMEOUT;
 800aa6e:	2003      	movs	r0, #3
        hxspi->State     = HAL_XSPI_STATE_ERROR;
 800aa70:	6563      	str	r3, [r4, #84]	@ 0x54
        hxspi->ErrorCode |= HAL_XSPI_ERROR_TIMEOUT;
 800aa72:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800aa74:	f043 0301 	orr.w	r3, r3, #1
 800aa78:	65a3      	str	r3, [r4, #88]	@ 0x58
}
 800aa7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800aa80 <HAL_XSPI_Init>:
{
 800aa80:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800aa82:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800aa84:	f7f9 fcb6 	bl	80043f4 <HAL_GetTick>
 800aa88:	4605      	mov	r5, r0
  if (hxspi == NULL)
 800aa8a:	2c00      	cmp	r4, #0
 800aa8c:	f000 80a8 	beq.w	800abe0 <HAL_XSPI_Init+0x160>
    hxspi->ErrorCode = HAL_XSPI_ERROR_NONE;
 800aa90:	2300      	movs	r3, #0
 800aa92:	65a3      	str	r3, [r4, #88]	@ 0x58
    if (hxspi->State == HAL_XSPI_STATE_RESET)
 800aa94:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800aa96:	2b00      	cmp	r3, #0
 800aa98:	f040 8094 	bne.w	800abc4 <HAL_XSPI_Init+0x144>
      HAL_XSPI_MspInit(hxspi);
 800aa9c:	4620      	mov	r0, r4
 800aa9e:	f7f6 fb67 	bl	8001170 <HAL_XSPI_MspInit>
  hxspi->Timeout = Timeout;
 800aaa2:	f241 3388 	movw	r3, #5000	@ 0x1388
      MODIFY_REG(hxspi->Instance->DCR1,
 800aaa6:	68e1      	ldr	r1, [r4, #12]
  hxspi->Timeout = Timeout;
 800aaa8:	65e3      	str	r3, [r4, #92]	@ 0x5c
      MODIFY_REG(hxspi->Instance->DCR1,
 800aaaa:	69e3      	ldr	r3, [r4, #28]
 800aaac:	6822      	ldr	r2, [r4, #0]
 800aaae:	4319      	orrs	r1, r3
 800aab0:	6923      	ldr	r3, [r4, #16]
 800aab2:	6890      	ldr	r0, [r2, #8]
 800aab4:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800aab8:	4b4a      	ldr	r3, [pc, #296]	@ (800abe4 <HAL_XSPI_Init+0x164>)
 800aaba:	4003      	ands	r3, r0
 800aabc:	4319      	orrs	r1, r3
 800aabe:	6963      	ldr	r3, [r4, #20]
 800aac0:	3b01      	subs	r3, #1
 800aac2:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
 800aac6:	6091      	str	r1, [r2, #8]
      if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 800aac8:	4947      	ldr	r1, [pc, #284]	@ (800abe8 <HAL_XSPI_Init+0x168>)
 800aaca:	428a      	cmp	r2, r1
 800aacc:	d00c      	beq.n	800aae8 <HAL_XSPI_Init+0x68>
 800aace:	4b47      	ldr	r3, [pc, #284]	@ (800abec <HAL_XSPI_Init+0x16c>)
 800aad0:	429a      	cmp	r2, r3
 800aad2:	d009      	beq.n	800aae8 <HAL_XSPI_Init+0x68>
 800aad4:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 800aad8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800aadc:	429a      	cmp	r2, r3
 800aade:	d003      	beq.n	800aae8 <HAL_XSPI_Init+0x68>
 800aae0:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800aae4:	429a      	cmp	r2, r3
 800aae6:	d105      	bne.n	800aaf4 <HAL_XSPI_Init+0x74>
        MODIFY_REG(hxspi->Instance->DCR1, OCTOSPI_DCR1_DLYBYP, hxspi->Init.DelayBlockBypass);
 800aae8:	6893      	ldr	r3, [r2, #8]
 800aaea:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 800aaec:	f023 0308 	bic.w	r3, r3, #8
 800aaf0:	4303      	orrs	r3, r0
 800aaf2:	6093      	str	r3, [r2, #8]
      MODIFY_REG(hxspi->Instance->DCR2, XSPI_DCR2_WRAPSIZE, hxspi->Init.WrapSize);
 800aaf4:	68d3      	ldr	r3, [r2, #12]
 800aaf6:	6a20      	ldr	r0, [r4, #32]
 800aaf8:	f423 23e0 	bic.w	r3, r3, #458752	@ 0x70000
 800aafc:	4303      	orrs	r3, r0
 800aafe:	60d3      	str	r3, [r2, #12]
      MODIFY_REG(hxspi->Instance->DCR3, XSPI_DCR3_CSBOUND, (hxspi->Init.ChipSelectBoundary << XSPI_DCR3_CSBOUND_Pos));
 800ab00:	6913      	ldr	r3, [r2, #16]
 800ab02:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800ab04:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 800ab08:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
      if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 800ab0c:	428a      	cmp	r2, r1
      MODIFY_REG(hxspi->Instance->DCR3, XSPI_DCR3_CSBOUND, (hxspi->Init.ChipSelectBoundary << XSPI_DCR3_CSBOUND_Pos));
 800ab0e:	6113      	str	r3, [r2, #16]
      if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 800ab10:	d00c      	beq.n	800ab2c <HAL_XSPI_Init+0xac>
 800ab12:	4b36      	ldr	r3, [pc, #216]	@ (800abec <HAL_XSPI_Init+0x16c>)
 800ab14:	429a      	cmp	r2, r3
 800ab16:	d009      	beq.n	800ab2c <HAL_XSPI_Init+0xac>
 800ab18:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 800ab1c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800ab20:	429a      	cmp	r2, r3
 800ab22:	d003      	beq.n	800ab2c <HAL_XSPI_Init+0xac>
 800ab24:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800ab28:	429a      	cmp	r2, r3
 800ab2a:	d105      	bne.n	800ab38 <HAL_XSPI_Init+0xb8>
        MODIFY_REG(hxspi->Instance->DCR3, OCTOSPI_DCR3_MAXTRAN, \
 800ab2c:	6913      	ldr	r3, [r2, #16]
 800ab2e:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 800ab30:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 800ab34:	430b      	orrs	r3, r1
 800ab36:	6113      	str	r3, [r2, #16]
      hxspi->Instance->DCR4 = hxspi->Init.Refresh;
 800ab38:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
      MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FTHRES, ((hxspi->Init.FifoThresholdByte - 1U) << XSPI_CR_FTHRES_Pos));
 800ab3a:	6861      	ldr	r1, [r4, #4]
      hxspi->Instance->DCR4 = hxspi->Init.Refresh;
 800ab3c:	6153      	str	r3, [r2, #20]
      MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FTHRES, ((hxspi->Init.FifoThresholdByte - 1U) << XSPI_CR_FTHRES_Pos));
 800ab3e:	6813      	ldr	r3, [r2, #0]
 800ab40:	3901      	subs	r1, #1
 800ab42:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 800ab46:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800ab4a:	6013      	str	r3, [r2, #0]
      status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, hxspi->Timeout);
 800ab4c:	f241 3388 	movw	r3, #5000	@ 0x1388
 800ab50:	2200      	movs	r2, #0
 800ab52:	9300      	str	r3, [sp, #0]
 800ab54:	2120      	movs	r1, #32
 800ab56:	462b      	mov	r3, r5
 800ab58:	4620      	mov	r0, r4
 800ab5a:	f7ff ff69 	bl	800aa30 <XSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800ab5e:	2800      	cmp	r0, #0
 800ab60:	d13c      	bne.n	800abdc <HAL_XSPI_Init+0x15c>
        MODIFY_REG(hxspi->Instance->DCR2, XSPI_DCR2_PRESCALER,
 800ab62:	6822      	ldr	r2, [r4, #0]
 800ab64:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800ab66:	68d3      	ldr	r3, [r2, #12]
 800ab68:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 800ab6c:	430b      	orrs	r3, r1
 800ab6e:	60d3      	str	r3, [r2, #12]
        if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 800ab70:	4b1f      	ldr	r3, [pc, #124]	@ (800abf0 <HAL_XSPI_Init+0x170>)
 800ab72:	429a      	cmp	r2, r3
 800ab74:	d028      	beq.n	800abc8 <HAL_XSPI_Init+0x148>
 800ab76:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800ab7a:	429a      	cmp	r2, r3
 800ab7c:	d024      	beq.n	800abc8 <HAL_XSPI_Init+0x148>
        MODIFY_REG(hxspi->Instance->CR, XSPI_CR_DMM, hxspi->Init.MemoryMode);
 800ab7e:	6823      	ldr	r3, [r4, #0]
 800ab80:	68a1      	ldr	r1, [r4, #8]
 800ab82:	681a      	ldr	r2, [r3, #0]
 800ab84:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800ab88:	430a      	orrs	r2, r1
 800ab8a:	601a      	str	r2, [r3, #0]
        MODIFY_REG(hxspi->Instance->TCR, (XSPI_TCR_SSHIFT | XSPI_TCR_DHQC),
 800ab8c:	f8d3 1108 	ldr.w	r1, [r3, #264]	@ 0x108
 800ab90:	e9d4 200a 	ldrd	r2, r0, [r4, #40]	@ 0x28
 800ab94:	f021 41a0 	bic.w	r1, r1, #1342177280	@ 0x50000000
 800ab98:	4302      	orrs	r2, r0
 800ab9a:	430a      	orrs	r2, r1
 800ab9c:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108
        HAL_XSPI_ENABLE(hxspi);
 800aba0:	681a      	ldr	r2, [r3, #0]
 800aba2:	f042 0201 	orr.w	r2, r2, #1
 800aba6:	601a      	str	r2, [r3, #0]
        if (hxspi->Init.FreeRunningClock == HAL_XSPI_FREERUNCLK_ENABLE)
 800aba8:	69a2      	ldr	r2, [r4, #24]
 800abaa:	2a02      	cmp	r2, #2
 800abac:	d103      	bne.n	800abb6 <HAL_XSPI_Init+0x136>
          SET_BIT(hxspi->Instance->DCR1, XSPI_DCR1_FRCK);
 800abae:	689a      	ldr	r2, [r3, #8]
 800abb0:	f042 0202 	orr.w	r2, r2, #2
 800abb4:	609a      	str	r2, [r3, #8]
        if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 800abb6:	68e3      	ldr	r3, [r4, #12]
 800abb8:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
          hxspi->State = HAL_XSPI_STATE_HYPERBUS_INIT;
 800abbc:	bf0c      	ite	eq
 800abbe:	2301      	moveq	r3, #1
          hxspi->State = HAL_XSPI_STATE_READY;
 800abc0:	2302      	movne	r3, #2
 800abc2:	6563      	str	r3, [r4, #84]	@ 0x54
  HAL_StatusTypeDef status = HAL_OK;
 800abc4:	2000      	movs	r0, #0
 800abc6:	e009      	b.n	800abdc <HAL_XSPI_Init+0x15c>
          status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, hxspi->Timeout);
 800abc8:	6de3      	ldr	r3, [r4, #92]	@ 0x5c
 800abca:	2200      	movs	r2, #0
 800abcc:	9300      	str	r3, [sp, #0]
 800abce:	2120      	movs	r1, #32
 800abd0:	462b      	mov	r3, r5
 800abd2:	4620      	mov	r0, r4
 800abd4:	f7ff ff2c 	bl	800aa30 <XSPI_WaitFlagStateUntilTimeout>
          if (status != HAL_OK)
 800abd8:	2800      	cmp	r0, #0
 800abda:	d0d0      	beq.n	800ab7e <HAL_XSPI_Init+0xfe>
}
 800abdc:	b003      	add	sp, #12
 800abde:	bd30      	pop	{r4, r5, pc}
    status = HAL_ERROR;
 800abe0:	2001      	movs	r0, #1
 800abe2:	e7fb      	b.n	800abdc <HAL_XSPI_Init+0x15c>
 800abe4:	f8e0c0fc 	.word	0xf8e0c0fc
 800abe8:	420d1400 	.word	0x420d1400
 800abec:	520d1400 	.word	0x520d1400
 800abf0:	420d3400 	.word	0x420d3400

0800abf4 <HAL_XSPI_DeInit>:
{
 800abf4:	b510      	push	{r4, lr}
  if (hxspi == NULL)
 800abf6:	4604      	mov	r4, r0
 800abf8:	b168      	cbz	r0, 800ac16 <HAL_XSPI_DeInit+0x22>
    HAL_XSPI_DISABLE(hxspi);
 800abfa:	6803      	ldr	r3, [r0, #0]
 800abfc:	681a      	ldr	r2, [r3, #0]
 800abfe:	f022 0201 	bic.w	r2, r2, #1
 800ac02:	601a      	str	r2, [r3, #0]
    CLEAR_BIT(hxspi->Instance->DCR1, XSPI_DCR1_FRCK);
 800ac04:	689a      	ldr	r2, [r3, #8]
 800ac06:	f022 0202 	bic.w	r2, r2, #2
 800ac0a:	609a      	str	r2, [r3, #8]
    HAL_XSPI_MspDeInit(hxspi);
 800ac0c:	f7f6 fab1 	bl	8001172 <HAL_XSPI_MspDeInit>
    hxspi->State = HAL_XSPI_STATE_RESET;
 800ac10:	2000      	movs	r0, #0
 800ac12:	6560      	str	r0, [r4, #84]	@ 0x54
}
 800ac14:	bd10      	pop	{r4, pc}
    status = HAL_ERROR;
 800ac16:	2001      	movs	r0, #1
 800ac18:	e7fc      	b.n	800ac14 <HAL_XSPI_DeInit+0x20>
	...

0800ac1c <HAL_XSPI_Command>:
{
 800ac1c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ac20:	4604      	mov	r4, r0
 800ac22:	4690      	mov	r8, r2
 800ac24:	460e      	mov	r6, r1
  uint32_t tickstart = HAL_GetTick();
 800ac26:	f7f9 fbe5 	bl	80043f4 <HAL_GetTick>
  if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
 800ac2a:	68a2      	ldr	r2, [r4, #8]
  uint32_t tickstart = HAL_GetTick();
 800ac2c:	4607      	mov	r7, r0
  if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
 800ac2e:	6825      	ldr	r5, [r4, #0]
 800ac30:	4b42      	ldr	r3, [pc, #264]	@ (800ad3c <HAL_XSPI_Command+0x120>)
 800ac32:	bb02      	cbnz	r2, 800ac76 <HAL_XSPI_Command+0x5a>
    if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 800ac34:	429d      	cmp	r5, r3
 800ac36:	d037      	beq.n	800aca8 <HAL_XSPI_Command+0x8c>
 800ac38:	4a41      	ldr	r2, [pc, #260]	@ (800ad40 <HAL_XSPI_Command+0x124>)
 800ac3a:	4295      	cmp	r5, r2
 800ac3c:	d01b      	beq.n	800ac76 <HAL_XSPI_Command+0x5a>
 800ac3e:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800ac42:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 800ac46:	4295      	cmp	r5, r2
 800ac48:	d015      	beq.n	800ac76 <HAL_XSPI_Command+0x5a>
 800ac4a:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800ac4e:	4295      	cmp	r5, r2
 800ac50:	d011      	beq.n	800ac76 <HAL_XSPI_Command+0x5a>
    else if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 800ac52:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800ac56:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 800ac5a:	4295      	cmp	r5, r2
 800ac5c:	d00b      	beq.n	800ac76 <HAL_XSPI_Command+0x5a>
 800ac5e:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800ac62:	4295      	cmp	r5, r2
 800ac64:	d007      	beq.n	800ac76 <HAL_XSPI_Command+0x5a>
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
 800ac66:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800ac68:	f043 0308 	orr.w	r3, r3, #8
      return HAL_ERROR;
 800ac6c:	2001      	movs	r0, #1
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
 800ac6e:	65a3      	str	r3, [r4, #88]	@ 0x58
}
 800ac70:	b002      	add	sp, #8
 800ac72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 800ac76:	429d      	cmp	r5, r3
 800ac78:	d016      	beq.n	800aca8 <HAL_XSPI_Command+0x8c>
 800ac7a:	4b31      	ldr	r3, [pc, #196]	@ (800ad40 <HAL_XSPI_Command+0x124>)
 800ac7c:	429d      	cmp	r5, r3
 800ac7e:	d013      	beq.n	800aca8 <HAL_XSPI_Command+0x8c>
 800ac80:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 800ac84:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800ac88:	429d      	cmp	r5, r3
 800ac8a:	d00d      	beq.n	800aca8 <HAL_XSPI_Command+0x8c>
 800ac8c:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800ac90:	429d      	cmp	r5, r3
 800ac92:	d009      	beq.n	800aca8 <HAL_XSPI_Command+0x8c>
  else if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 800ac94:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 800ac98:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800ac9c:	429d      	cmp	r5, r3
 800ac9e:	d003      	beq.n	800aca8 <HAL_XSPI_Command+0x8c>
 800aca0:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800aca4:	429d      	cmp	r5, r3
 800aca6:	d1de      	bne.n	800ac66 <HAL_XSPI_Command+0x4a>
  state = hxspi->State;
 800aca8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
  if (((state == HAL_XSPI_STATE_READY)         && (hxspi->Init.MemoryType != HAL_XSPI_MEMTYPE_HYPERBUS)) ||
 800acaa:	2b02      	cmp	r3, #2
 800acac:	d105      	bne.n	800acba <HAL_XSPI_Command+0x9e>
 800acae:	68e3      	ldr	r3, [r4, #12]
 800acb0:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800acb4:	d107      	bne.n	800acc6 <HAL_XSPI_Command+0xaa>
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 800acb6:	2310      	movs	r3, #16
 800acb8:	e7d8      	b.n	800ac6c <HAL_XSPI_Command+0x50>
  if (((state == HAL_XSPI_STATE_READY)         && (hxspi->Init.MemoryType != HAL_XSPI_MEMTYPE_HYPERBUS)) ||
 800acba:	2b14      	cmp	r3, #20
 800acbc:	d121      	bne.n	800ad02 <HAL_XSPI_Command+0xe6>
      ((state == HAL_XSPI_STATE_READ_CMD_CFG)  && ((pCmd->OperationType == HAL_XSPI_OPTYPE_WRITE_CFG) ||
 800acbe:	6833      	ldr	r3, [r6, #0]
 800acc0:	3b02      	subs	r3, #2
 800acc2:	2b01      	cmp	r3, #1
 800acc4:	d8f7      	bhi.n	800acb6 <HAL_XSPI_Command+0x9a>
    status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800acc6:	463b      	mov	r3, r7
 800acc8:	2200      	movs	r2, #0
 800acca:	2120      	movs	r1, #32
 800accc:	4620      	mov	r0, r4
 800acce:	f8cd 8000 	str.w	r8, [sp]
 800acd2:	f7ff fead 	bl	800aa30 <XSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800acd6:	bb78      	cbnz	r0, 800ad38 <HAL_XSPI_Command+0x11c>
      hxspi->ErrorCode = HAL_XSPI_ERROR_NONE;
 800acd8:	65a0      	str	r0, [r4, #88]	@ 0x58
      status = XSPI_ConfigCmd(hxspi, pCmd);
 800acda:	4631      	mov	r1, r6
 800acdc:	4620      	mov	r0, r4
 800acde:	f7ff fd9d 	bl	800a81c <XSPI_ConfigCmd>
      if (status == HAL_OK)
 800ace2:	2800      	cmp	r0, #0
 800ace4:	d1c4      	bne.n	800ac70 <HAL_XSPI_Command+0x54>
        if (pCmd->DataMode == HAL_XSPI_DATA_NONE)
 800ace6:	6bb3      	ldr	r3, [r6, #56]	@ 0x38
 800ace8:	b99b      	cbnz	r3, 800ad12 <HAL_XSPI_Command+0xf6>
          status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_TC, SET, tickstart, Timeout);
 800acea:	463b      	mov	r3, r7
 800acec:	2201      	movs	r2, #1
 800acee:	2102      	movs	r1, #2
 800acf0:	4620      	mov	r0, r4
 800acf2:	f8cd 8000 	str.w	r8, [sp]
 800acf6:	f7ff fe9b 	bl	800aa30 <XSPI_WaitFlagStateUntilTimeout>
          HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TC);
 800acfa:	2202      	movs	r2, #2
 800acfc:	6823      	ldr	r3, [r4, #0]
 800acfe:	625a      	str	r2, [r3, #36]	@ 0x24
 800ad00:	e7b6      	b.n	800ac70 <HAL_XSPI_Command+0x54>
                                                   (pCmd->OperationType == HAL_XSPI_OPTYPE_WRAP_CFG))) ||
 800ad02:	2b24      	cmp	r3, #36	@ 0x24
 800ad04:	d1d7      	bne.n	800acb6 <HAL_XSPI_Command+0x9a>
      ((state == HAL_XSPI_STATE_WRITE_CMD_CFG) &&
 800ad06:	6833      	ldr	r3, [r6, #0]
 800ad08:	f023 0302 	bic.w	r3, r3, #2
 800ad0c:	2b01      	cmp	r3, #1
 800ad0e:	d1d2      	bne.n	800acb6 <HAL_XSPI_Command+0x9a>
 800ad10:	e7d9      	b.n	800acc6 <HAL_XSPI_Command+0xaa>
          if (pCmd->OperationType == HAL_XSPI_OPTYPE_COMMON_CFG)
 800ad12:	6833      	ldr	r3, [r6, #0]
 800ad14:	b90b      	cbnz	r3, 800ad1a <HAL_XSPI_Command+0xfe>
              hxspi->State = HAL_XSPI_STATE_CMD_CFG;
 800ad16:	2304      	movs	r3, #4
 800ad18:	e005      	b.n	800ad26 <HAL_XSPI_Command+0x10a>
          else if (pCmd->OperationType == HAL_XSPI_OPTYPE_READ_CFG)
 800ad1a:	2b01      	cmp	r3, #1
 800ad1c:	d105      	bne.n	800ad2a <HAL_XSPI_Command+0x10e>
            if (hxspi->State == HAL_XSPI_STATE_WRITE_CMD_CFG)
 800ad1e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800ad20:	2b24      	cmp	r3, #36	@ 0x24
 800ad22:	d0f8      	beq.n	800ad16 <HAL_XSPI_Command+0xfa>
              hxspi->State = HAL_XSPI_STATE_READ_CMD_CFG;
 800ad24:	2314      	movs	r3, #20
              hxspi->State = HAL_XSPI_STATE_WRITE_CMD_CFG;
 800ad26:	6563      	str	r3, [r4, #84]	@ 0x54
 800ad28:	e7a2      	b.n	800ac70 <HAL_XSPI_Command+0x54>
          else if (pCmd->OperationType == HAL_XSPI_OPTYPE_WRITE_CFG)
 800ad2a:	2b02      	cmp	r3, #2
 800ad2c:	d1a0      	bne.n	800ac70 <HAL_XSPI_Command+0x54>
            if (hxspi->State == HAL_XSPI_STATE_READ_CMD_CFG)
 800ad2e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800ad30:	2b14      	cmp	r3, #20
 800ad32:	d0f0      	beq.n	800ad16 <HAL_XSPI_Command+0xfa>
              hxspi->State = HAL_XSPI_STATE_WRITE_CMD_CFG;
 800ad34:	2324      	movs	r3, #36	@ 0x24
 800ad36:	e7f6      	b.n	800ad26 <HAL_XSPI_Command+0x10a>
      status = HAL_BUSY;
 800ad38:	2002      	movs	r0, #2
 800ad3a:	e799      	b.n	800ac70 <HAL_XSPI_Command+0x54>
 800ad3c:	420d1400 	.word	0x420d1400
 800ad40:	520d1400 	.word	0x520d1400

0800ad44 <HAL_XSPI_Transmit>:
{
 800ad44:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ad48:	4604      	mov	r4, r0
 800ad4a:	4688      	mov	r8, r1
 800ad4c:	4616      	mov	r6, r2
  uint32_t tickstart = HAL_GetTick();
 800ad4e:	f7f9 fb51 	bl	80043f4 <HAL_GetTick>
  __IO uint32_t *data_reg = &hxspi->Instance->DR;
 800ad52:	6827      	ldr	r7, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 800ad54:	4605      	mov	r5, r0
  if (pData == NULL)
 800ad56:	f1b8 0f00 	cmp.w	r8, #0
 800ad5a:	d103      	bne.n	800ad64 <HAL_XSPI_Transmit+0x20>
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_PARAM;
 800ad5c:	2308      	movs	r3, #8
    status = HAL_ERROR;
 800ad5e:	2001      	movs	r0, #1
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 800ad60:	65a3      	str	r3, [r4, #88]	@ 0x58
 800ad62:	e02e      	b.n	800adc2 <HAL_XSPI_Transmit+0x7e>
    if (hxspi->State == HAL_XSPI_STATE_CMD_CFG)
 800ad64:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800ad66:	2b04      	cmp	r3, #4
 800ad68:	d12e      	bne.n	800adc8 <HAL_XSPI_Transmit+0x84>
      hxspi->XferCount = READ_REG(hxspi->Instance->DLR) + 1U;
 800ad6a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
      hxspi->pBuffPtr  = pData;
 800ad6c:	f8c4 8040 	str.w	r8, [r4, #64]	@ 0x40
      hxspi->XferCount = READ_REG(hxspi->Instance->DLR) + 1U;
 800ad70:	3301      	adds	r3, #1
 800ad72:	64a3      	str	r3, [r4, #72]	@ 0x48
      hxspi->XferSize  = hxspi->XferCount;
 800ad74:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 800ad76:	6463      	str	r3, [r4, #68]	@ 0x44
      MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FMODE, XSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800ad78:	683b      	ldr	r3, [r7, #0]
 800ad7a:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 800ad7e:	603b      	str	r3, [r7, #0]
        status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_FT, SET, tickstart, Timeout);
 800ad80:	462b      	mov	r3, r5
 800ad82:	2201      	movs	r2, #1
 800ad84:	2104      	movs	r1, #4
 800ad86:	4620      	mov	r0, r4
 800ad88:	9600      	str	r6, [sp, #0]
 800ad8a:	f7ff fe51 	bl	800aa30 <XSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 800ad8e:	b9c0      	cbnz	r0, 800adc2 <HAL_XSPI_Transmit+0x7e>
        *((__IO uint8_t *)data_reg) = *hxspi->pBuffPtr;
 800ad90:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800ad92:	781b      	ldrb	r3, [r3, #0]
 800ad94:	f887 3050 	strb.w	r3, [r7, #80]	@ 0x50
        hxspi->pBuffPtr++;
 800ad98:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800ad9a:	3301      	adds	r3, #1
 800ad9c:	6423      	str	r3, [r4, #64]	@ 0x40
        hxspi->XferCount--;
 800ad9e:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 800ada0:	3b01      	subs	r3, #1
 800ada2:	64a3      	str	r3, [r4, #72]	@ 0x48
      } while (hxspi->XferCount > 0U);
 800ada4:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 800ada6:	2b00      	cmp	r3, #0
 800ada8:	d1ea      	bne.n	800ad80 <HAL_XSPI_Transmit+0x3c>
        status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_TC, SET, tickstart, Timeout);
 800adaa:	462b      	mov	r3, r5
 800adac:	2201      	movs	r2, #1
 800adae:	2102      	movs	r1, #2
 800adb0:	4620      	mov	r0, r4
 800adb2:	9600      	str	r6, [sp, #0]
 800adb4:	f7ff fe3c 	bl	800aa30 <XSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800adb8:	b918      	cbnz	r0, 800adc2 <HAL_XSPI_Transmit+0x7e>
          HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TC);
 800adba:	2302      	movs	r3, #2
 800adbc:	6822      	ldr	r2, [r4, #0]
 800adbe:	6253      	str	r3, [r2, #36]	@ 0x24
          hxspi->State = HAL_XSPI_STATE_READY;
 800adc0:	6563      	str	r3, [r4, #84]	@ 0x54
}
 800adc2:	b002      	add	sp, #8
 800adc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 800adc8:	2310      	movs	r3, #16
 800adca:	e7c8      	b.n	800ad5e <HAL_XSPI_Transmit+0x1a>

0800adcc <HAL_XSPI_Receive>:
{
 800adcc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800add0:	4604      	mov	r4, r0
 800add2:	4616      	mov	r6, r2
 800add4:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 800add6:	f7f9 fb0d 	bl	80043f4 <HAL_GetTick>
  __IO uint32_t *data_reg = &hxspi->Instance->DR;
 800adda:	6825      	ldr	r5, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 800addc:	4607      	mov	r7, r0
  uint32_t addr_reg = hxspi->Instance->AR;
 800adde:	6caa      	ldr	r2, [r5, #72]	@ 0x48
  uint32_t ir_reg = hxspi->Instance->IR;
 800ade0:	f8d5 0110 	ldr.w	r0, [r5, #272]	@ 0x110
  if (pData == NULL)
 800ade4:	f1b8 0f00 	cmp.w	r8, #0
 800ade8:	d103      	bne.n	800adf2 <HAL_XSPI_Receive+0x26>
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_PARAM;
 800adea:	2308      	movs	r3, #8
    status = HAL_ERROR;
 800adec:	2001      	movs	r0, #1
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 800adee:	65a3      	str	r3, [r4, #88]	@ 0x58
 800adf0:	e035      	b.n	800ae5e <HAL_XSPI_Receive+0x92>
    if (hxspi->State == HAL_XSPI_STATE_CMD_CFG)
 800adf2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800adf4:	2b04      	cmp	r3, #4
 800adf6:	d13d      	bne.n	800ae74 <HAL_XSPI_Receive+0xa8>
      hxspi->XferCount = READ_REG(hxspi->Instance->DLR) + 1U;
 800adf8:	6c2b      	ldr	r3, [r5, #64]	@ 0x40
      hxspi->pBuffPtr  = pData;
 800adfa:	f8c4 8040 	str.w	r8, [r4, #64]	@ 0x40
      hxspi->XferCount = READ_REG(hxspi->Instance->DLR) + 1U;
 800adfe:	3301      	adds	r3, #1
 800ae00:	64a3      	str	r3, [r4, #72]	@ 0x48
      hxspi->XferSize  = hxspi->XferCount;
 800ae02:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 800ae04:	6463      	str	r3, [r4, #68]	@ 0x44
      MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FMODE, XSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 800ae06:	6829      	ldr	r1, [r5, #0]
      if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 800ae08:	68e3      	ldr	r3, [r4, #12]
      MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FMODE, XSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 800ae0a:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
 800ae0e:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
      if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 800ae12:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
      MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FMODE, XSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 800ae16:	6029      	str	r1, [r5, #0]
      if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 800ae18:	d124      	bne.n	800ae64 <HAL_XSPI_Receive+0x98>
          WRITE_REG(hxspi->Instance->AR, addr_reg);
 800ae1a:	64aa      	str	r2, [r5, #72]	@ 0x48
        status = XSPI_WaitFlagStateUntilTimeout(hxspi, (HAL_XSPI_FLAG_FT | HAL_XSPI_FLAG_TC), SET, tickstart, Timeout);
 800ae1c:	463b      	mov	r3, r7
 800ae1e:	2201      	movs	r2, #1
 800ae20:	2106      	movs	r1, #6
 800ae22:	4620      	mov	r0, r4
 800ae24:	9600      	str	r6, [sp, #0]
 800ae26:	f7ff fe03 	bl	800aa30 <XSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 800ae2a:	b9c0      	cbnz	r0, 800ae5e <HAL_XSPI_Receive+0x92>
        *hxspi->pBuffPtr = *((__IO uint8_t *)data_reg);
 800ae2c:	f895 2050 	ldrb.w	r2, [r5, #80]	@ 0x50
 800ae30:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800ae32:	701a      	strb	r2, [r3, #0]
        hxspi->pBuffPtr++;
 800ae34:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800ae36:	3301      	adds	r3, #1
 800ae38:	6423      	str	r3, [r4, #64]	@ 0x40
        hxspi->XferCount--;
 800ae3a:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 800ae3c:	3b01      	subs	r3, #1
 800ae3e:	64a3      	str	r3, [r4, #72]	@ 0x48
      } while (hxspi->XferCount > 0U);
 800ae40:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 800ae42:	2b00      	cmp	r3, #0
 800ae44:	d1ea      	bne.n	800ae1c <HAL_XSPI_Receive+0x50>
        status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_TC, SET, tickstart, Timeout);
 800ae46:	463b      	mov	r3, r7
 800ae48:	2201      	movs	r2, #1
 800ae4a:	2102      	movs	r1, #2
 800ae4c:	4620      	mov	r0, r4
 800ae4e:	9600      	str	r6, [sp, #0]
 800ae50:	f7ff fdee 	bl	800aa30 <XSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800ae54:	b918      	cbnz	r0, 800ae5e <HAL_XSPI_Receive+0x92>
          HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TC);
 800ae56:	2302      	movs	r3, #2
 800ae58:	6822      	ldr	r2, [r4, #0]
 800ae5a:	6253      	str	r3, [r2, #36]	@ 0x24
          hxspi->State = HAL_XSPI_STATE_READY;
 800ae5c:	6563      	str	r3, [r4, #84]	@ 0x54
}
 800ae5e:	b002      	add	sp, #8
 800ae60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if (READ_BIT(hxspi->Instance->CCR, XSPI_CCR_ADMODE) != HAL_XSPI_ADDRESS_NONE)
 800ae64:	f8d5 3100 	ldr.w	r3, [r5, #256]	@ 0x100
 800ae68:	f413 6fe0 	tst.w	r3, #1792	@ 0x700
 800ae6c:	d1d5      	bne.n	800ae1a <HAL_XSPI_Receive+0x4e>
          WRITE_REG(hxspi->Instance->IR, ir_reg);
 800ae6e:	f8c5 0110 	str.w	r0, [r5, #272]	@ 0x110
 800ae72:	e7d3      	b.n	800ae1c <HAL_XSPI_Receive+0x50>
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 800ae74:	2310      	movs	r3, #16
 800ae76:	e7b9      	b.n	800adec <HAL_XSPI_Receive+0x20>

0800ae78 <HAL_XSPI_AutoPolling>:
{
 800ae78:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800ae7c:	4604      	mov	r4, r0
 800ae7e:	460e      	mov	r6, r1
 800ae80:	4617      	mov	r7, r2
  uint32_t tickstart = HAL_GetTick();
 800ae82:	f7f9 fab7 	bl	80043f4 <HAL_GetTick>
  uint32_t addr_reg = hxspi->Instance->AR;
 800ae86:	6823      	ldr	r3, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 800ae88:	4682      	mov	sl, r0
  uint32_t addr_reg = hxspi->Instance->AR;
 800ae8a:	f8d3 8048 	ldr.w	r8, [r3, #72]	@ 0x48
  uint32_t ir_reg = hxspi->Instance->IR;
 800ae8e:	f8d3 9110 	ldr.w	r9, [r3, #272]	@ 0x110
  if ((hxspi->State == HAL_XSPI_STATE_CMD_CFG) && (pCfg->AutomaticStop == HAL_XSPI_AUTOMATIC_STOP_ENABLE))
 800ae92:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800ae94:	2b04      	cmp	r3, #4
 800ae96:	d13e      	bne.n	800af16 <HAL_XSPI_AutoPolling+0x9e>
 800ae98:	68f3      	ldr	r3, [r6, #12]
 800ae9a:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800ae9e:	d13a      	bne.n	800af16 <HAL_XSPI_AutoPolling+0x9e>
    status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800aea0:	4603      	mov	r3, r0
 800aea2:	2200      	movs	r2, #0
 800aea4:	2120      	movs	r1, #32
 800aea6:	4620      	mov	r0, r4
 800aea8:	9700      	str	r7, [sp, #0]
 800aeaa:	f7ff fdc1 	bl	800aa30 <XSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800aeae:	2800      	cmp	r0, #0
 800aeb0:	d135      	bne.n	800af1e <HAL_XSPI_AutoPolling+0xa6>
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 800aeb2:	e9d6 1202 	ldrd	r1, r2, [r6, #8]
      WRITE_REG(hxspi->Instance->PSMAR, pCfg->MatchValue);
 800aeb6:	6825      	ldr	r5, [r4, #0]
 800aeb8:	6833      	ldr	r3, [r6, #0]
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 800aeba:	4311      	orrs	r1, r2
      WRITE_REG(hxspi->Instance->PSMAR, pCfg->MatchValue);
 800aebc:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      WRITE_REG(hxspi->Instance->PSMKR, pCfg->MatchMask);
 800aec0:	6873      	ldr	r3, [r6, #4]
 800aec2:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
      WRITE_REG(hxspi->Instance->PIR,   pCfg->IntervalTime);
 800aec6:	6933      	ldr	r3, [r6, #16]
 800aec8:	f8c5 3090 	str.w	r3, [r5, #144]	@ 0x90
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 800aecc:	682b      	ldr	r3, [r5, #0]
 800aece:	f023 5343 	bic.w	r3, r3, #817889280	@ 0x30c00000
 800aed2:	4319      	orrs	r1, r3
      if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 800aed4:	68e3      	ldr	r3, [r4, #12]
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 800aed6:	f041 5100 	orr.w	r1, r1, #536870912	@ 0x20000000
      if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 800aeda:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 800aede:	6029      	str	r1, [r5, #0]
      if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 800aee0:	d111      	bne.n	800af06 <HAL_XSPI_AutoPolling+0x8e>
          WRITE_REG(hxspi->Instance->AR, addr_reg);
 800aee2:	f8c5 8048 	str.w	r8, [r5, #72]	@ 0x48
      status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_SM, SET, tickstart, Timeout);
 800aee6:	4653      	mov	r3, sl
 800aee8:	2201      	movs	r2, #1
 800aeea:	2108      	movs	r1, #8
 800aeec:	4620      	mov	r0, r4
 800aeee:	9700      	str	r7, [sp, #0]
 800aef0:	f7ff fd9e 	bl	800aa30 <XSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800aef4:	b920      	cbnz	r0, 800af00 <HAL_XSPI_AutoPolling+0x88>
        HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_SM);
 800aef6:	2208      	movs	r2, #8
 800aef8:	6823      	ldr	r3, [r4, #0]
 800aefa:	625a      	str	r2, [r3, #36]	@ 0x24
        hxspi->State = HAL_XSPI_STATE_READY;
 800aefc:	2302      	movs	r3, #2
 800aefe:	6563      	str	r3, [r4, #84]	@ 0x54
}
 800af00:	b002      	add	sp, #8
 800af02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        if (READ_BIT(hxspi->Instance->CCR, XSPI_CCR_ADMODE) != HAL_XSPI_ADDRESS_NONE)
 800af06:	f8d5 3100 	ldr.w	r3, [r5, #256]	@ 0x100
 800af0a:	f413 6fe0 	tst.w	r3, #1792	@ 0x700
 800af0e:	d1e8      	bne.n	800aee2 <HAL_XSPI_AutoPolling+0x6a>
          WRITE_REG(hxspi->Instance->IR, ir_reg);
 800af10:	f8c5 9110 	str.w	r9, [r5, #272]	@ 0x110
 800af14:	e7e7      	b.n	800aee6 <HAL_XSPI_AutoPolling+0x6e>
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 800af16:	2310      	movs	r3, #16
    status = HAL_ERROR;
 800af18:	2001      	movs	r0, #1
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 800af1a:	65a3      	str	r3, [r4, #88]	@ 0x58
 800af1c:	e7f0      	b.n	800af00 <HAL_XSPI_AutoPolling+0x88>
      status = HAL_BUSY;
 800af1e:	2002      	movs	r0, #2
 800af20:	e7ee      	b.n	800af00 <HAL_XSPI_AutoPolling+0x88>

0800af22 <HAL_XSPI_MemoryMapped>:
{
 800af22:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800af24:	4604      	mov	r4, r0
 800af26:	460d      	mov	r5, r1
  uint32_t tickstart = HAL_GetTick();
 800af28:	f7f9 fa64 	bl	80043f4 <HAL_GetTick>
  if (hxspi->State == HAL_XSPI_STATE_CMD_CFG)
 800af2c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  uint32_t tickstart = HAL_GetTick();
 800af2e:	4603      	mov	r3, r0
  if (hxspi->State == HAL_XSPI_STATE_CMD_CFG)
 800af30:	2a04      	cmp	r2, #4
 800af32:	d121      	bne.n	800af78 <HAL_XSPI_MemoryMapped+0x56>
    status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, hxspi->Timeout);
 800af34:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 800af36:	2120      	movs	r1, #32
 800af38:	9200      	str	r2, [sp, #0]
 800af3a:	4620      	mov	r0, r4
 800af3c:	2200      	movs	r2, #0
 800af3e:	f7ff fd77 	bl	800aa30 <XSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800af42:	b9b8      	cbnz	r0, 800af74 <HAL_XSPI_MemoryMapped+0x52>
      hxspi->State = HAL_XSPI_STATE_BUSY_MEM_MAPPED;
 800af44:	2388      	movs	r3, #136	@ 0x88
      if (pCfg->TimeOutActivation == HAL_XSPI_TIMEOUT_COUNTER_ENABLE)
 800af46:	6829      	ldr	r1, [r5, #0]
        WRITE_REG(hxspi->Instance->LPTR, pCfg->TimeoutPeriodClock);
 800af48:	6822      	ldr	r2, [r4, #0]
      if (pCfg->TimeOutActivation == HAL_XSPI_TIMEOUT_COUNTER_ENABLE)
 800af4a:	2908      	cmp	r1, #8
      hxspi->State = HAL_XSPI_STATE_BUSY_MEM_MAPPED;
 800af4c:	6563      	str	r3, [r4, #84]	@ 0x54
      if (pCfg->TimeOutActivation == HAL_XSPI_TIMEOUT_COUNTER_ENABLE)
 800af4e:	d108      	bne.n	800af62 <HAL_XSPI_MemoryMapped+0x40>
        WRITE_REG(hxspi->Instance->LPTR, pCfg->TimeoutPeriodClock);
 800af50:	686b      	ldr	r3, [r5, #4]
 800af52:	f8c2 3130 	str.w	r3, [r2, #304]	@ 0x130
        HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TO);
 800af56:	2310      	movs	r3, #16
 800af58:	6253      	str	r3, [r2, #36]	@ 0x24
        HAL_XSPI_ENABLE_IT(hxspi, HAL_XSPI_IT_TO);
 800af5a:	6813      	ldr	r3, [r2, #0]
 800af5c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800af60:	6013      	str	r3, [r2, #0]
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_TCEN | XSPI_CR_FMODE),
 800af62:	6813      	ldr	r3, [r2, #0]
 800af64:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 800af68:	f023 0308 	bic.w	r3, r3, #8
 800af6c:	430b      	orrs	r3, r1
 800af6e:	f043 5340 	orr.w	r3, r3, #805306368	@ 0x30000000
 800af72:	6013      	str	r3, [r2, #0]
}
 800af74:	b003      	add	sp, #12
 800af76:	bd30      	pop	{r4, r5, pc}
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 800af78:	2310      	movs	r3, #16
    status = HAL_ERROR;
 800af7a:	2001      	movs	r0, #1
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 800af7c:	65a3      	str	r3, [r4, #88]	@ 0x58
 800af7e:	e7f9      	b.n	800af74 <HAL_XSPI_MemoryMapped+0x52>

0800af80 <HAL_XSPI_Abort>:
{
 800af80:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800af82:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800af84:	f7f9 fa36 	bl	80043f4 <HAL_GetTick>
  state = hxspi->State;
 800af88:	6d63      	ldr	r3, [r4, #84]	@ 0x54
  uint32_t tickstart = HAL_GetTick();
 800af8a:	4605      	mov	r5, r0
  if (((state & XSPI_BUSY_STATE_MASK) != 0U) || ((state & XSPI_CFG_STATE_MASK) != 0U))
 800af8c:	f013 0f0c 	tst.w	r3, #12
 800af90:	d038      	beq.n	800b004 <HAL_XSPI_Abort+0x84>
    if ((hxspi->Instance->CR & XSPI_CR_DMAEN) != 0U)
 800af92:	6823      	ldr	r3, [r4, #0]
 800af94:	681a      	ldr	r2, [r3, #0]
 800af96:	0751      	lsls	r1, r2, #29
 800af98:	d50d      	bpl.n	800afb6 <HAL_XSPI_Abort+0x36>
      CLEAR_BIT(hxspi->Instance->CR, XSPI_CR_DMAEN);
 800af9a:	681a      	ldr	r2, [r3, #0]
      status = HAL_DMA_Abort(hxspi->hdmatx);
 800af9c:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
      CLEAR_BIT(hxspi->Instance->CR, XSPI_CR_DMAEN);
 800af9e:	f022 0204 	bic.w	r2, r2, #4
 800afa2:	601a      	str	r2, [r3, #0]
      status = HAL_DMA_Abort(hxspi->hdmatx);
 800afa4:	f7f9 fd22 	bl	80049ec <HAL_DMA_Abort>
      if (status != HAL_OK)
 800afa8:	b108      	cbz	r0, 800afae <HAL_XSPI_Abort+0x2e>
        hxspi->ErrorCode = HAL_XSPI_ERROR_DMA;
 800afaa:	2304      	movs	r3, #4
 800afac:	65a3      	str	r3, [r4, #88]	@ 0x58
      status = HAL_DMA_Abort(hxspi->hdmarx);
 800afae:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 800afb0:	f7f9 fd1c 	bl	80049ec <HAL_DMA_Abort>
      if (status != HAL_OK)
 800afb4:	bb00      	cbnz	r0, 800aff8 <HAL_XSPI_Abort+0x78>
  HAL_StatusTypeDef status = HAL_OK;
 800afb6:	2000      	movs	r0, #0
    if (HAL_XSPI_GET_FLAG(hxspi, HAL_XSPI_FLAG_BUSY) != RESET)
 800afb8:	6823      	ldr	r3, [r4, #0]
 800afba:	6a1a      	ldr	r2, [r3, #32]
 800afbc:	0692      	lsls	r2, r2, #26
 800afbe:	d51e      	bpl.n	800affe <HAL_XSPI_Abort+0x7e>
      SET_BIT(hxspi->Instance->CR, XSPI_CR_ABORT);
 800afc0:	681a      	ldr	r2, [r3, #0]
      status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_TC, SET, tickstart, hxspi->Timeout);
 800afc2:	2102      	movs	r1, #2
      SET_BIT(hxspi->Instance->CR, XSPI_CR_ABORT);
 800afc4:	f042 0202 	orr.w	r2, r2, #2
 800afc8:	601a      	str	r2, [r3, #0]
      status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_TC, SET, tickstart, hxspi->Timeout);
 800afca:	6de3      	ldr	r3, [r4, #92]	@ 0x5c
 800afcc:	2201      	movs	r2, #1
 800afce:	9300      	str	r3, [sp, #0]
 800afd0:	4620      	mov	r0, r4
 800afd2:	462b      	mov	r3, r5
 800afd4:	f7ff fd2c 	bl	800aa30 <XSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800afd8:	b960      	cbnz	r0, 800aff4 <HAL_XSPI_Abort+0x74>
        HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TC);
 800afda:	2602      	movs	r6, #2
 800afdc:	6823      	ldr	r3, [r4, #0]
        status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, hxspi->Timeout);
 800afde:	4602      	mov	r2, r0
        HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TC);
 800afe0:	625e      	str	r6, [r3, #36]	@ 0x24
        status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, hxspi->Timeout);
 800afe2:	6de3      	ldr	r3, [r4, #92]	@ 0x5c
 800afe4:	2120      	movs	r1, #32
 800afe6:	9300      	str	r3, [sp, #0]
 800afe8:	4620      	mov	r0, r4
 800afea:	462b      	mov	r3, r5
 800afec:	f7ff fd20 	bl	800aa30 <XSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800aff0:	b900      	cbnz	r0, 800aff4 <HAL_XSPI_Abort+0x74>
          hxspi->State = HAL_XSPI_STATE_READY;
 800aff2:	6566      	str	r6, [r4, #84]	@ 0x54
}
 800aff4:	b002      	add	sp, #8
 800aff6:	bd70      	pop	{r4, r5, r6, pc}
        hxspi->ErrorCode = HAL_XSPI_ERROR_DMA;
 800aff8:	2304      	movs	r3, #4
 800affa:	65a3      	str	r3, [r4, #88]	@ 0x58
 800affc:	e7dc      	b.n	800afb8 <HAL_XSPI_Abort+0x38>
      hxspi->State = HAL_XSPI_STATE_READY;
 800affe:	2302      	movs	r3, #2
 800b000:	6563      	str	r3, [r4, #84]	@ 0x54
 800b002:	e7f7      	b.n	800aff4 <HAL_XSPI_Abort+0x74>
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 800b004:	2310      	movs	r3, #16
    status = HAL_ERROR;
 800b006:	2001      	movs	r0, #1
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 800b008:	65a3      	str	r3, [r4, #88]	@ 0x58
 800b00a:	e7f3      	b.n	800aff4 <HAL_XSPI_Abort+0x74>

0800b00c <HAL_XSPI_DLYB_SetConfig>:
{
 800b00c:	b538      	push	{r3, r4, r5, lr}
  SET_BIT(hxspi->Instance->DCR1, XSPI_DCR1_FRCK);
 800b00e:	6803      	ldr	r3, [r0, #0]
{
 800b010:	4604      	mov	r4, r0
  SET_BIT(hxspi->Instance->DCR1, XSPI_DCR1_FRCK);
 800b012:	689a      	ldr	r2, [r3, #8]
 800b014:	f042 0202 	orr.w	r2, r2, #2
 800b018:	609a      	str	r2, [r3, #8]
  hxspi->State = HAL_XSPI_STATE_BUSY_CMD;
 800b01a:	2208      	movs	r2, #8
 800b01c:	6542      	str	r2, [r0, #84]	@ 0x54
  if (hxspi->Instance == OCTOSPI1)
 800b01e:	4a10      	ldr	r2, [pc, #64]	@ (800b060 <HAL_XSPI_DLYB_SetConfig+0x54>)
 800b020:	4293      	cmp	r3, r2
 800b022:	d111      	bne.n	800b048 <HAL_XSPI_DLYB_SetConfig+0x3c>
 800b024:	480f      	ldr	r0, [pc, #60]	@ (800b064 <HAL_XSPI_DLYB_SetConfig+0x58>)
 800b026:	6803      	ldr	r3, [r0, #0]
    status = HAL_OK;
 800b028:	2500      	movs	r5, #0
 800b02a:	f043 0301 	orr.w	r3, r3, #1
 800b02e:	6003      	str	r3, [r0, #0]
    LL_DLYB_SetDelay(DLYB_OCTOSPI2, pdlyb_cfg);
 800b030:	f000 f89c 	bl	800b16c <LL_DLYB_SetDelay>
  (void)HAL_XSPI_Abort(hxspi);
 800b034:	4620      	mov	r0, r4
 800b036:	f7ff ffa3 	bl	800af80 <HAL_XSPI_Abort>
  CLEAR_BIT(hxspi->Instance->DCR1, XSPI_DCR1_FRCK);
 800b03a:	6822      	ldr	r2, [r4, #0]
}
 800b03c:	4628      	mov	r0, r5
  CLEAR_BIT(hxspi->Instance->DCR1, XSPI_DCR1_FRCK);
 800b03e:	6893      	ldr	r3, [r2, #8]
 800b040:	f023 0302 	bic.w	r3, r3, #2
 800b044:	6093      	str	r3, [r2, #8]
}
 800b046:	bd38      	pop	{r3, r4, r5, pc}
  else if (hxspi->Instance == OCTOSPI2)
 800b048:	4a07      	ldr	r2, [pc, #28]	@ (800b068 <HAL_XSPI_DLYB_SetConfig+0x5c>)
 800b04a:	4293      	cmp	r3, r2
 800b04c:	d101      	bne.n	800b052 <HAL_XSPI_DLYB_SetConfig+0x46>
 800b04e:	4807      	ldr	r0, [pc, #28]	@ (800b06c <HAL_XSPI_DLYB_SetConfig+0x60>)
 800b050:	e7e9      	b.n	800b026 <HAL_XSPI_DLYB_SetConfig+0x1a>
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
 800b052:	6d83      	ldr	r3, [r0, #88]	@ 0x58
  HAL_StatusTypeDef status = HAL_ERROR;
 800b054:	2501      	movs	r5, #1
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
 800b056:	f043 0308 	orr.w	r3, r3, #8
 800b05a:	6583      	str	r3, [r0, #88]	@ 0x58
 800b05c:	e7ea      	b.n	800b034 <HAL_XSPI_DLYB_SetConfig+0x28>
 800b05e:	bf00      	nop
 800b060:	420d1400 	.word	0x420d1400
 800b064:	420cf000 	.word	0x420cf000
 800b068:	420d2400 	.word	0x420d2400
 800b06c:	420cf400 	.word	0x420cf400

0800b070 <HAL_XSPI_DLYB_GetClockPeriod>:
  SET_BIT(hxspi->Instance->DCR1, XSPI_DCR1_FRCK);
 800b070:	6803      	ldr	r3, [r0, #0]
{
 800b072:	b570      	push	{r4, r5, r6, lr}
  SET_BIT(hxspi->Instance->DCR1, XSPI_DCR1_FRCK);
 800b074:	689a      	ldr	r2, [r3, #8]
{
 800b076:	4604      	mov	r4, r0
  SET_BIT(hxspi->Instance->DCR1, XSPI_DCR1_FRCK);
 800b078:	f042 0202 	orr.w	r2, r2, #2
 800b07c:	609a      	str	r2, [r3, #8]
  hxspi->State = HAL_XSPI_STATE_BUSY_CMD;
 800b07e:	2208      	movs	r2, #8
 800b080:	6542      	str	r2, [r0, #84]	@ 0x54
  if (hxspi->Instance == OCTOSPI1)
 800b082:	4a13      	ldr	r2, [pc, #76]	@ (800b0d0 <HAL_XSPI_DLYB_GetClockPeriod+0x60>)
 800b084:	4293      	cmp	r3, r2
 800b086:	d118      	bne.n	800b0ba <HAL_XSPI_DLYB_GetClockPeriod+0x4a>
 800b088:	4e12      	ldr	r6, [pc, #72]	@ (800b0d4 <HAL_XSPI_DLYB_GetClockPeriod+0x64>)
 800b08a:	6833      	ldr	r3, [r6, #0]
    if (LL_DLYB_GetClockPeriod(DLYB_OCTOSPI2, pdlyb_cfg) == (uint32_t)SUCCESS)
 800b08c:	4630      	mov	r0, r6
 800b08e:	f043 0301 	orr.w	r3, r3, #1
 800b092:	6033      	str	r3, [r6, #0]
 800b094:	f000 f878 	bl	800b188 <LL_DLYB_GetClockPeriod>
 800b098:	1e05      	subs	r5, r0, #0
 800b09a:	bf18      	it	ne
 800b09c:	2501      	movne	r5, #1
  * @retval None
  */

__STATIC_INLINE void LL_DLYB_Disable(DLYB_TypeDef *DLYBx)
{
  CLEAR_BIT(DLYBx->CR, DLYB_CR_DEN);
 800b09e:	6833      	ldr	r3, [r6, #0]
 800b0a0:	f023 0301 	bic.w	r3, r3, #1
 800b0a4:	6033      	str	r3, [r6, #0]
  (void)HAL_XSPI_Abort(hxspi);
 800b0a6:	4620      	mov	r0, r4
 800b0a8:	f7ff ff6a 	bl	800af80 <HAL_XSPI_Abort>
  CLEAR_BIT(hxspi->Instance->DCR1, XSPI_DCR1_FRCK);
 800b0ac:	6822      	ldr	r2, [r4, #0]
}
 800b0ae:	4628      	mov	r0, r5
  CLEAR_BIT(hxspi->Instance->DCR1, XSPI_DCR1_FRCK);
 800b0b0:	6893      	ldr	r3, [r2, #8]
 800b0b2:	f023 0302 	bic.w	r3, r3, #2
 800b0b6:	6093      	str	r3, [r2, #8]
}
 800b0b8:	bd70      	pop	{r4, r5, r6, pc}
  else if (hxspi->Instance == OCTOSPI2)
 800b0ba:	4a07      	ldr	r2, [pc, #28]	@ (800b0d8 <HAL_XSPI_DLYB_GetClockPeriod+0x68>)
 800b0bc:	4293      	cmp	r3, r2
 800b0be:	d101      	bne.n	800b0c4 <HAL_XSPI_DLYB_GetClockPeriod+0x54>
  SET_BIT(DLYBx->CR, DLYB_CR_DEN);
 800b0c0:	4e06      	ldr	r6, [pc, #24]	@ (800b0dc <HAL_XSPI_DLYB_GetClockPeriod+0x6c>)
 800b0c2:	e7e2      	b.n	800b08a <HAL_XSPI_DLYB_GetClockPeriod+0x1a>
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
 800b0c4:	6d83      	ldr	r3, [r0, #88]	@ 0x58
  HAL_StatusTypeDef status = HAL_ERROR;
 800b0c6:	2501      	movs	r5, #1
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
 800b0c8:	f043 0308 	orr.w	r3, r3, #8
 800b0cc:	6583      	str	r3, [r0, #88]	@ 0x58
 800b0ce:	e7ea      	b.n	800b0a6 <HAL_XSPI_DLYB_GetClockPeriod+0x36>
 800b0d0:	420d1400 	.word	0x420d1400
 800b0d4:	420cf000 	.word	0x420cf000
 800b0d8:	420d2400 	.word	0x420d2400
 800b0dc:	420cf400 	.word	0x420cf400

0800b0e0 <HAL_XSPI_SetDelayValue>:
  if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 800b0e0:	6803      	ldr	r3, [r0, #0]
 800b0e2:	4a21      	ldr	r2, [pc, #132]	@ (800b168 <HAL_XSPI_SetDelayValue+0x88>)
{
 800b0e4:	b510      	push	{r4, lr}
  if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 800b0e6:	4293      	cmp	r3, r2
 800b0e8:	d003      	beq.n	800b0f2 <HAL_XSPI_SetDelayValue+0x12>
 800b0ea:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800b0ee:	4293      	cmp	r3, r2
 800b0f0:	d138      	bne.n	800b164 <HAL_XSPI_SetDelayValue+0x84>
    if ((hxspi->State & XSPI_BUSY_STATE_MASK) == 0U)
 800b0f2:	6d42      	ldr	r2, [r0, #84]	@ 0x54
 800b0f4:	0712      	lsls	r2, r2, #28
 800b0f6:	d431      	bmi.n	800b15c <HAL_XSPI_SetDelayValue+0x7c>
      switch (pCfg->DelayValueType)
 800b0f8:	680a      	ldr	r2, [r1, #0]
 800b0fa:	2a02      	cmp	r2, #2
 800b0fc:	d012      	beq.n	800b124 <HAL_XSPI_SetDelayValue+0x44>
 800b0fe:	2a03      	cmp	r2, #3
 800b100:	d01e      	beq.n	800b140 <HAL_XSPI_SetDelayValue+0x60>
 800b102:	2a01      	cmp	r2, #1
 800b104:	d12e      	bne.n	800b164 <HAL_XSPI_SetDelayValue+0x84>
          MODIFY_REG(hxspi->Instance->CALMR, (HSPI_CALMR_COARSE |  HSPI_CALMR_FINE),
 800b106:	e9d1 2401 	ldrd	r2, r4, [r1, #4]
 800b10a:	f8d3 0218 	ldr.w	r0, [r3, #536]	@ 0x218
 800b10e:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800b112:	f420 11f8 	bic.w	r1, r0, #2031616	@ 0x1f0000
 800b116:	f021 017f 	bic.w	r1, r1, #127	@ 0x7f
 800b11a:	430a      	orrs	r2, r1
 800b11c:	f8c3 2218 	str.w	r2, [r3, #536]	@ 0x218
  HAL_StatusTypeDef status = HAL_OK;
 800b120:	2000      	movs	r0, #0
}
 800b122:	bd10      	pop	{r4, pc}
          MODIFY_REG(hxspi->Instance->CALSOR, (HSPI_CALSOR_COARSE | HSPI_CALSOR_FINE),
 800b124:	f8d3 0220 	ldr.w	r0, [r3, #544]	@ 0x220
 800b128:	e9d1 2401 	ldrd	r2, r4, [r1, #4]
 800b12c:	f420 11f8 	bic.w	r1, r0, #2031616	@ 0x1f0000
 800b130:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800b134:	f021 017f 	bic.w	r1, r1, #127	@ 0x7f
 800b138:	430a      	orrs	r2, r1
 800b13a:	f8c3 2220 	str.w	r2, [r3, #544]	@ 0x220
          break;
 800b13e:	e7ef      	b.n	800b120 <HAL_XSPI_SetDelayValue+0x40>
          MODIFY_REG(hxspi->Instance->CALSIR, (HSPI_CALSIR_COARSE | HSPI_CALSIR_FINE),
 800b140:	f8d3 0228 	ldr.w	r0, [r3, #552]	@ 0x228
 800b144:	e9d1 2401 	ldrd	r2, r4, [r1, #4]
 800b148:	f420 11f8 	bic.w	r1, r0, #2031616	@ 0x1f0000
 800b14c:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800b150:	f021 017f 	bic.w	r1, r1, #127	@ 0x7f
 800b154:	430a      	orrs	r2, r1
 800b156:	f8c3 2228 	str.w	r2, [r3, #552]	@ 0x228
          break;
 800b15a:	e7e1      	b.n	800b120 <HAL_XSPI_SetDelayValue+0x40>
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 800b15c:	2310      	movs	r3, #16
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_PARAM;
 800b15e:	6583      	str	r3, [r0, #88]	@ 0x58
      status = HAL_ERROR;
 800b160:	2001      	movs	r0, #1
 800b162:	e7de      	b.n	800b122 <HAL_XSPI_SetDelayValue+0x42>
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_PARAM;
 800b164:	2308      	movs	r3, #8
 800b166:	e7fa      	b.n	800b15e <HAL_XSPI_SetDelayValue+0x7e>
 800b168:	420d3400 	.word	0x420d3400

0800b16c <LL_DLYB_SetDelay>:
{
  /* Check the DelayBlock instance */
  assert_param(IS_DLYB_ALL_INSTANCE(DLYBx));

  /* Enable the length sampling */
  SET_BIT(DLYBx->CR, DLYB_CR_SEN);
 800b16c:	6803      	ldr	r3, [r0, #0]
 800b16e:	f043 0302 	orr.w	r3, r3, #2
 800b172:	6003      	str	r3, [r0, #0]

  /* Update the UNIT and SEL field */
  DLYBx->CFGR = (pdlyb_cfg->PhaseSel) | ((pdlyb_cfg->Units) << DLYB_CFGR_UNIT_Pos);
 800b174:	e9d1 2300 	ldrd	r2, r3, [r1]
 800b178:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800b17c:	6043      	str	r3, [r0, #4]

  /* Disable the length sampling */
  CLEAR_BIT(DLYBx->CR, DLYB_CR_SEN);
 800b17e:	6803      	ldr	r3, [r0, #0]
 800b180:	f023 0302 	bic.w	r3, r3, #2
 800b184:	6003      	str	r3, [r0, #0]
}
 800b186:	4770      	bx	lr

0800b188 <LL_DLYB_GetClockPeriod>:
  * @retval An ErrorStatus enumeration value:
  *          - SUCCESS: there is a valid period detected and stored in pdlyb_cfg.
  *          - ERROR: there is no valid period detected.
  */
uint32_t LL_DLYB_GetClockPeriod(DLYB_TypeDef *DLYBx, LL_DLYB_CfgTypeDef *pdlyb_cfg)
{
 800b188:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b18c:	4604      	mov	r4, r0
 800b18e:	460e      	mov	r6, r1
  uint32_t i = 0U;
 800b190:	2500      	movs	r5, #0

  /* Check the DelayBlock instance */
  assert_param(IS_DLYB_ALL_INSTANCE(DLYBx));

  /* Enable the length sampling */
  SET_BIT(DLYBx->CR, DLYB_CR_SEN);
 800b192:	6803      	ldr	r3, [r0, #0]
          return (uint32_t) HAL_TIMEOUT;
        }
      }
    }

    if ((DLYBx->CFGR & DLYB_LNG_10_0_MASK) != 0U)
 800b194:	f8df 8078 	ldr.w	r8, [pc, #120]	@ 800b210 <LL_DLYB_GetClockPeriod+0x88>
  SET_BIT(DLYBx->CR, DLYB_CR_SEN);
 800b198:	f043 0302 	orr.w	r3, r3, #2
 800b19c:	6003      	str	r3, [r0, #0]
    DLYBx->CFGR = DLYB_MAX_SELECT | (i << DLYB_CFGR_UNIT_Pos);
 800b19e:	022b      	lsls	r3, r5, #8
 800b1a0:	f043 030c 	orr.w	r3, r3, #12
 800b1a4:	6063      	str	r3, [r4, #4]
    tickstart =  HAL_GetTick();
 800b1a6:	f7f9 f925 	bl	80043f4 <HAL_GetTick>
 800b1aa:	4607      	mov	r7, r0
    while ((DLYBx->CFGR & DLYB_CFGR_LNGF) == 0U)
 800b1ac:	6863      	ldr	r3, [r4, #4]
 800b1ae:	2b00      	cmp	r3, #0
 800b1b0:	da10      	bge.n	800b1d4 <LL_DLYB_GetClockPeriod+0x4c>
    if ((DLYBx->CFGR & DLYB_LNG_10_0_MASK) != 0U)
 800b1b2:	6863      	ldr	r3, [r4, #4]
 800b1b4:	ea13 0f08 	tst.w	r3, r8
 800b1b8:	d005      	beq.n	800b1c6 <LL_DLYB_GetClockPeriod+0x3e>
    {
      if ((DLYBx->CFGR & (DLYB_CFGR_LNG_11 | DLYB_CFGR_LNG_10)) != DLYB_LNG_11_10_MASK)
 800b1ba:	6863      	ldr	r3, [r4, #4]
 800b1bc:	f003 6340 	and.w	r3, r3, #201326592	@ 0xc000000
 800b1c0:	f1b3 6f40 	cmp.w	r3, #201326592	@ 0xc000000
 800b1c4:	d110      	bne.n	800b1e8 <LL_DLYB_GetClockPeriod+0x60>
      {
        /* Delay line length is configured to one input clock period*/
        break;
      }
    }
    i++;
 800b1c6:	3501      	adds	r5, #1
  while (i < DLYB_MAX_UNIT)
 800b1c8:	2d80      	cmp	r5, #128	@ 0x80
 800b1ca:	d1e8      	bne.n	800b19e <LL_DLYB_GetClockPeriod+0x16>
      return (uint32_t)SUCCESS;
    }
  }

  /* Disable the length sampling */
  DLYBx->CR = DLYB_CR_SEN;
 800b1cc:	2302      	movs	r3, #2

  return (uint32_t)ERROR;
 800b1ce:	2001      	movs	r0, #1
  DLYBx->CR = DLYB_CR_SEN;
 800b1d0:	6023      	str	r3, [r4, #0]
  return (uint32_t)ERROR;
 800b1d2:	e01b      	b.n	800b20c <LL_DLYB_GetClockPeriod+0x84>
      if ((HAL_GetTick() - tickstart) >=  DLYB_TIMEOUT)
 800b1d4:	f7f9 f90e 	bl	80043f4 <HAL_GetTick>
 800b1d8:	1bc0      	subs	r0, r0, r7
 800b1da:	28fe      	cmp	r0, #254	@ 0xfe
 800b1dc:	d9e6      	bls.n	800b1ac <LL_DLYB_GetClockPeriod+0x24>
        if ((DLYBx->CFGR & DLYB_CFGR_LNGF) == 0U)
 800b1de:	6863      	ldr	r3, [r4, #4]
 800b1e0:	2b00      	cmp	r3, #0
 800b1e2:	dbe3      	blt.n	800b1ac <LL_DLYB_GetClockPeriod+0x24>
          return (uint32_t) HAL_TIMEOUT;
 800b1e4:	2003      	movs	r0, #3
 800b1e6:	e011      	b.n	800b20c <LL_DLYB_GetClockPeriod+0x84>
    lng = (DLYBx->CFGR & DLYB_CFGR_LNG) >> 16U;
 800b1e8:	6863      	ldr	r3, [r4, #4]
 800b1ea:	f3c3 420b 	ubfx	r2, r3, #16, #12
    while ((nb > 0U) && ((lng >> nb) == 0U))
 800b1ee:	f013 6f40 	tst.w	r3, #201326592	@ 0xc000000
    nb = 10U;
 800b1f2:	f04f 030a 	mov.w	r3, #10
    while ((nb > 0U) && ((lng >> nb) == 0U))
 800b1f6:	d104      	bne.n	800b202 <LL_DLYB_GetClockPeriod+0x7a>
 800b1f8:	3b01      	subs	r3, #1
 800b1fa:	d0e7      	beq.n	800b1cc <LL_DLYB_GetClockPeriod+0x44>
 800b1fc:	fa32 f103 	lsrs.w	r1, r2, r3
 800b200:	e7f9      	b.n	800b1f6 <LL_DLYB_GetClockPeriod+0x6e>
      pdlyb_cfg->Units = i ;
 800b202:	e9c6 5300 	strd	r5, r3, [r6]
      DLYBx->CR = DLYB_CR_SEN;
 800b206:	2302      	movs	r3, #2
      return (uint32_t)SUCCESS;
 800b208:	2000      	movs	r0, #0
      DLYBx->CR = DLYB_CR_SEN;
 800b20a:	6023      	str	r3, [r4, #0]

}
 800b20c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b210:	07ff0000 	.word	0x07ff0000

0800b214 <IRQ_Context>:
#endif

/*
  Determine if CPU executes from interrupt context or if interrupts are masked.
*/
__STATIC_INLINE uint32_t IRQ_Context (void) {
 800b214:	b510      	push	{r4, lr}
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800b216:	f3ef 8405 	mrs	r4, IPSR
  uint32_t irq;
  BaseType_t state;

  irq = 0U;

  if (IS_IRQ_MODE()) {
 800b21a:	b114      	cbz	r4, 800b222 <IRQ_Context+0xe>
    /* Called from interrupt context */
    irq = 1U;
 800b21c:	2401      	movs	r4, #1
    }
  }

  /* Return context, 0: thread context, 1: IRQ context */
  return (irq);
}
 800b21e:	4620      	mov	r0, r4
 800b220:	bd10      	pop	{r4, pc}
    state = xTaskGetSchedulerState();
 800b222:	f001 fc51 	bl	800cac8 <xTaskGetSchedulerState>
    if (state != taskSCHEDULER_NOT_STARTED) {
 800b226:	2801      	cmp	r0, #1
 800b228:	d0f9      	beq.n	800b21e <IRQ_Context+0xa>
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
 800b22a:	f3ef 8310 	mrs	r3, PRIMASK
      if (IS_IRQ_MASKED()) {
 800b22e:	2b00      	cmp	r3, #0
 800b230:	d1f4      	bne.n	800b21c <IRQ_Context+0x8>
 */
__STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800b232:	f3ef 8411 	mrs	r4, BASEPRI
 800b236:	3c00      	subs	r4, #0
 800b238:	bf18      	it	ne
 800b23a:	2401      	movne	r4, #1
  return (irq);
 800b23c:	e7ef      	b.n	800b21e <IRQ_Context+0xa>

0800b23e <SysTick_Handler>:
void SysTick_Handler (void) {
 800b23e:	b508      	push	{r3, lr}
  SysTick->CTRL;
 800b240:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800b244:	691b      	ldr	r3, [r3, #16]
  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800b246:	f001 fc3f 	bl	800cac8 <xTaskGetSchedulerState>
 800b24a:	2801      	cmp	r0, #1
 800b24c:	d003      	beq.n	800b256 <SysTick_Handler+0x18>
}
 800b24e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800b252:	f000 ba7d 	b.w	800b750 <xPortSysTickHandler>
}
 800b256:	bd08      	pop	{r3, pc}

0800b258 <osKernelInitialize>:
/* ==== Kernel Management Functions ==== */

/*
  Initialize the RTOS Kernel.
*/
osStatus_t osKernelInitialize (void) {
 800b258:	b508      	push	{r3, lr}
  osStatus_t stat;
  BaseType_t state;

  if (IRQ_Context() != 0U) {
 800b25a:	f7ff ffdb 	bl	800b214 <IRQ_Context>
 800b25e:	b948      	cbnz	r0, 800b274 <osKernelInitialize+0x1c>
    stat = osErrorISR;
  }
  else {
    state = xTaskGetSchedulerState();
 800b260:	f001 fc32 	bl	800cac8 <xTaskGetSchedulerState>

    /* Initialize if scheduler not started and not initialized before */
    if ((state == taskSCHEDULER_NOT_STARTED) && (KernelState == osKernelInactive)) {
 800b264:	2801      	cmp	r0, #1
    state = xTaskGetSchedulerState();
 800b266:	4603      	mov	r3, r0
    if ((state == taskSCHEDULER_NOT_STARTED) && (KernelState == osKernelInactive)) {
 800b268:	d107      	bne.n	800b27a <osKernelInitialize+0x22>
 800b26a:	4a05      	ldr	r2, [pc, #20]	@ (800b280 <osKernelInitialize+0x28>)
 800b26c:	6810      	ldr	r0, [r2, #0]
 800b26e:	b920      	cbnz	r0, 800b27a <osKernelInitialize+0x22>
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        /* Initialize the memory regions when using heap_5 variant */
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800b270:	6013      	str	r3, [r2, #0]
    }
  }

  /* Return execution status */
  return (stat);
}
 800b272:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 800b274:	f06f 0005 	mvn.w	r0, #5
 800b278:	e7fb      	b.n	800b272 <osKernelInitialize+0x1a>
      stat = osError;
 800b27a:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800b27e:	e7f8      	b.n	800b272 <osKernelInitialize+0x1a>
 800b280:	2003f5b0 	.word	0x2003f5b0

0800b284 <osKernelStart>:
}

/*
  Start the RTOS Kernel scheduler.
*/
osStatus_t osKernelStart (void) {
 800b284:	b510      	push	{r4, lr}
  osStatus_t stat;
  BaseType_t state;

  if (IRQ_Context() != 0U) {
 800b286:	f7ff ffc5 	bl	800b214 <IRQ_Context>
 800b28a:	4604      	mov	r4, r0
 800b28c:	b978      	cbnz	r0, 800b2ae <osKernelStart+0x2a>
    stat = osErrorISR;
  }
  else {
    state = xTaskGetSchedulerState();
 800b28e:	f001 fc1b 	bl	800cac8 <xTaskGetSchedulerState>

    /* Start scheduler if initialized and not started before */
    if ((state == taskSCHEDULER_NOT_STARTED) && (KernelState == osKernelReady)) {
 800b292:	2801      	cmp	r0, #1
 800b294:	d10e      	bne.n	800b2b4 <osKernelStart+0x30>
 800b296:	4b09      	ldr	r3, [pc, #36]	@ (800b2bc <osKernelStart+0x38>)
 800b298:	681a      	ldr	r2, [r3, #0]
 800b29a:	2a01      	cmp	r2, #1
 800b29c:	d10a      	bne.n	800b2b4 <osKernelStart+0x30>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b29e:	4a08      	ldr	r2, [pc, #32]	@ (800b2c0 <osKernelStart+0x3c>)
 800b2a0:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to ensure correct API flow */
      KernelState = osKernelRunning;
 800b2a2:	2202      	movs	r2, #2
 800b2a4:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800b2a6:	f001 fab1 	bl	800c80c <vTaskStartScheduler>
      stat = osOK;
 800b2aa:	4620      	mov	r0, r4
    }
  }

  /* Return execution status */
  return (stat);
}
 800b2ac:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800b2ae:	f06f 0005 	mvn.w	r0, #5
 800b2b2:	e7fb      	b.n	800b2ac <osKernelStart+0x28>
      stat = osError;
 800b2b4:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800b2b8:	e7f8      	b.n	800b2ac <osKernelStart+0x28>
 800b2ba:	bf00      	nop
 800b2bc:	2003f5b0 	.word	0x2003f5b0
 800b2c0:	e000ed00 	.word	0xe000ed00

0800b2c4 <osThreadNew>:
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800b2c4:	2300      	movs	r3, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800b2c6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b2c8:	b087      	sub	sp, #28
 800b2ca:	4606      	mov	r6, r0
 800b2cc:	460f      	mov	r7, r1
 800b2ce:	4614      	mov	r4, r2
  hTask = NULL;
 800b2d0:	9305      	str	r3, [sp, #20]

  if ((IRQ_Context() == 0U) && (func != NULL)) {
 800b2d2:	f7ff ff9f 	bl	800b214 <IRQ_Context>
 800b2d6:	b9d8      	cbnz	r0, 800b310 <osThreadNew+0x4c>
 800b2d8:	b1d6      	cbz	r6, 800b310 <osThreadNew+0x4c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800b2da:	2c00      	cmp	r4, #0
 800b2dc:	d02f      	beq.n	800b33e <osThreadNew+0x7a>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800b2de:	69a5      	ldr	r5, [r4, #24]
 800b2e0:	2d00      	cmp	r5, #0
 800b2e2:	bf08      	it	eq
 800b2e4:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800b2e6:	1e6b      	subs	r3, r5, #1
 800b2e8:	2b37      	cmp	r3, #55	@ 0x37
 800b2ea:	46ae      	mov	lr, r5
 800b2ec:	d811      	bhi.n	800b312 <osThreadNew+0x4e>
 800b2ee:	6863      	ldr	r3, [r4, #4]
 800b2f0:	07db      	lsls	r3, r3, #31
 800b2f2:	d40e      	bmi.n	800b312 <osThreadNew+0x4e>
        /* Invalid priority or unsupported osThreadJoinable attribute used */
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800b2f4:	6963      	ldr	r3, [r4, #20]
 800b2f6:	b173      	cbz	r3, 800b316 <osThreadNew+0x52>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800b2f8:	089a      	lsrs	r2, r3, #2
      if (attr->name != NULL) {
 800b2fa:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800b2fc:	e9d4 c002 	ldrd	ip, r0, [r4, #8]
 800b300:	f1bc 0f00 	cmp.w	ip, #0
 800b304:	d009      	beq.n	800b31a <osThreadNew+0x56>
 800b306:	285f      	cmp	r0, #95	@ 0x5f
 800b308:	d902      	bls.n	800b310 <osThreadNew+0x4c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800b30a:	6920      	ldr	r0, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800b30c:	b100      	cbz	r0, 800b310 <osThreadNew+0x4c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800b30e:	b9db      	cbnz	r3, 800b348 <osThreadNew+0x84>
      }
    }
  }

  /* Return thread ID */
  return ((osThreadId_t)hTask);
 800b310:	9805      	ldr	r0, [sp, #20]
}
 800b312:	b007      	add	sp, #28
 800b314:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800b316:	2280      	movs	r2, #128	@ 0x80
 800b318:	e7ef      	b.n	800b2fa <osThreadNew+0x36>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800b31a:	2800      	cmp	r0, #0
 800b31c:	d1f8      	bne.n	800b310 <osThreadNew+0x4c>
      if (mem == 0) {
 800b31e:	6923      	ldr	r3, [r4, #16]
 800b320:	2b00      	cmp	r3, #0
 800b322:	d1f5      	bne.n	800b310 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (configSTACK_DEPTH_TYPE)stack, argument, prio, &hTask) != pdPASS) {
 800b324:	ab05      	add	r3, sp, #20
 800b326:	e9cd e300 	strd	lr, r3, [sp]
 800b32a:	4630      	mov	r0, r6
 800b32c:	463b      	mov	r3, r7
 800b32e:	b292      	uxth	r2, r2
 800b330:	f001 f8bd 	bl	800c4ae <xTaskCreate>
 800b334:	2801      	cmp	r0, #1
            hTask = NULL;
 800b336:	bf1c      	itt	ne
 800b338:	2300      	movne	r3, #0
 800b33a:	9305      	strne	r3, [sp, #20]
 800b33c:	e7e8      	b.n	800b310 <osThreadNew+0x4c>
    name = NULL;
 800b33e:	4621      	mov	r1, r4
    prio  = (UBaseType_t)osPriorityNormal;
 800b340:	f04f 0e18 	mov.w	lr, #24
    stack = configMINIMAL_STACK_SIZE;
 800b344:	2280      	movs	r2, #128	@ 0x80
 800b346:	e7ed      	b.n	800b324 <osThreadNew+0x60>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800b348:	e9cd 0c01 	strd	r0, ip, [sp, #4]
 800b34c:	463b      	mov	r3, r7
 800b34e:	4630      	mov	r0, r6
 800b350:	9500      	str	r5, [sp, #0]
 800b352:	f001 f886 	bl	800c462 <xTaskCreateStatic>
 800b356:	9005      	str	r0, [sp, #20]
 800b358:	e7da      	b.n	800b310 <osThreadNew+0x4c>

0800b35a <osDelay>:
/* ==== Generic Wait Functions ==== */

/*
  Wait for Timeout (Time Delay).
*/
osStatus_t osDelay (uint32_t ticks) {
 800b35a:	b510      	push	{r4, lr}
 800b35c:	4604      	mov	r4, r0
  osStatus_t stat;

  if (IRQ_Context() != 0U) {
 800b35e:	f7ff ff59 	bl	800b214 <IRQ_Context>
 800b362:	b928      	cbnz	r0, 800b370 <osDelay+0x16>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800b364:	b114      	cbz	r4, 800b36c <osDelay+0x12>
      vTaskDelay(ticks);
 800b366:	4620      	mov	r0, r4
 800b368:	f001 fa1c 	bl	800c7a4 <vTaskDelay>
    stat = osOK;
 800b36c:	2000      	movs	r0, #0
    }
  }

  /* Return execution status */
  return (stat);
}
 800b36e:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800b370:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 800b374:	e7fb      	b.n	800b36e <osDelay+0x14>

0800b376 <osSemaphoreNew>:
/* ==== Semaphore Management Functions ==== */

/*
  Create and Initialize a Semaphore object.
*/
osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800b376:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b378:	4604      	mov	r4, r0
 800b37a:	460e      	mov	r6, r1
 800b37c:	4615      	mov	r5, r2
  SemaphoreHandle_t hSemaphore;
  int32_t mem;

  hSemaphore = NULL;

  if ((IRQ_Context() == 0U) && (max_count > 0U) && (initial_count <= max_count)) {
 800b37e:	f7ff ff49 	bl	800b214 <IRQ_Context>
 800b382:	b940      	cbnz	r0, 800b396 <osSemaphoreNew+0x20>
 800b384:	b13c      	cbz	r4, 800b396 <osSemaphoreNew+0x20>
 800b386:	42b4      	cmp	r4, r6
 800b388:	d305      	bcc.n	800b396 <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 800b38a:	b155      	cbz	r5, 800b3a2 <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800b38c:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 800b390:	b12b      	cbz	r3, 800b39e <osSemaphoreNew+0x28>
 800b392:	2a4f      	cmp	r2, #79	@ 0x4f
 800b394:	d825      	bhi.n	800b3e2 <osSemaphoreNew+0x6c>
  hSemaphore = NULL;
 800b396:	2400      	movs	r4, #0
    }
  }

  /* Return semaphore ID */
  return ((osSemaphoreId_t)hSemaphore);
}
 800b398:	4620      	mov	r0, r4
 800b39a:	b002      	add	sp, #8
 800b39c:	bd70      	pop	{r4, r5, r6, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800b39e:	2a00      	cmp	r2, #0
 800b3a0:	d1f9      	bne.n	800b396 <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 800b3a2:	2c01      	cmp	r4, #1
 800b3a4:	d008      	beq.n	800b3b8 <osSemaphoreNew+0x42>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800b3a6:	4620      	mov	r0, r4
 800b3a8:	4631      	mov	r1, r6
 800b3aa:	f000 fc18 	bl	800bbde <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800b3ae:	4604      	mov	r4, r0
 800b3b0:	2800      	cmp	r0, #0
 800b3b2:	d0f0      	beq.n	800b396 <osSemaphoreNew+0x20>
        if ((attr != NULL) && (attr->name != NULL)) {
 800b3b4:	b975      	cbnz	r5, 800b3d4 <osSemaphoreNew+0x5e>
 800b3b6:	e7ef      	b.n	800b398 <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 800b3b8:	2203      	movs	r2, #3
 800b3ba:	2100      	movs	r1, #0
 800b3bc:	2001      	movs	r0, #1
 800b3be:	f000 fbd1 	bl	800bb64 <xQueueGenericCreate>
 800b3c2:	e017      	b.n	800b3f4 <osSemaphoreNew+0x7e>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800b3c4:	4620      	mov	r0, r4
 800b3c6:	461a      	mov	r2, r3
 800b3c8:	4631      	mov	r1, r6
 800b3ca:	f000 fbf5 	bl	800bbb8 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800b3ce:	4604      	mov	r4, r0
 800b3d0:	2800      	cmp	r0, #0
 800b3d2:	d0e0      	beq.n	800b396 <osSemaphoreNew+0x20>
        if ((attr != NULL) && (attr->name != NULL)) {
 800b3d4:	6829      	ldr	r1, [r5, #0]
 800b3d6:	2900      	cmp	r1, #0
 800b3d8:	d0de      	beq.n	800b398 <osSemaphoreNew+0x22>
          vQueueAddToRegistry (hSemaphore, attr->name);
 800b3da:	4620      	mov	r0, r4
 800b3dc:	f000 fe6c 	bl	800c0b8 <vQueueAddToRegistry>
 800b3e0:	e7da      	b.n	800b398 <osSemaphoreNew+0x22>
      if (max_count == 1U) {
 800b3e2:	2c01      	cmp	r4, #1
 800b3e4:	d1ee      	bne.n	800b3c4 <osSemaphoreNew+0x4e>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800b3e6:	2203      	movs	r2, #3
 800b3e8:	4601      	mov	r1, r0
 800b3ea:	9200      	str	r2, [sp, #0]
 800b3ec:	4602      	mov	r2, r0
 800b3ee:	4620      	mov	r0, r4
 800b3f0:	f000 fb8d 	bl	800bb0e <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 800b3f4:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800b3f6:	2800      	cmp	r0, #0
 800b3f8:	d0cd      	beq.n	800b396 <osSemaphoreNew+0x20>
 800b3fa:	2e00      	cmp	r6, #0
 800b3fc:	d0da      	beq.n	800b3b4 <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800b3fe:	2300      	movs	r3, #0
 800b400:	461a      	mov	r2, r3
 800b402:	4619      	mov	r1, r3
 800b404:	f000 fbfa 	bl	800bbfc <xQueueGenericSend>
 800b408:	2801      	cmp	r0, #1
 800b40a:	d0d3      	beq.n	800b3b4 <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 800b40c:	4620      	mov	r0, r4
 800b40e:	f000 fe91 	bl	800c134 <vQueueDelete>
      if (hSemaphore != NULL) {
 800b412:	e7c0      	b.n	800b396 <osSemaphoreNew+0x20>

0800b414 <osSemaphoreAcquire>:

/*
  Acquire a Semaphore token or timeout if no tokens are available.
*/
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800b414:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b416:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800b418:	4605      	mov	r5, r0
 800b41a:	b918      	cbnz	r0, 800b424 <osSemaphoreAcquire+0x10>
    stat = osErrorParameter;
 800b41c:	f06f 0003 	mvn.w	r0, #3
    }
  }

  /* Return execution status */
  return (stat);
}
 800b420:	b003      	add	sp, #12
 800b422:	bd30      	pop	{r4, r5, pc}
  else if (IRQ_Context() != 0U) {
 800b424:	f7ff fef6 	bl	800b214 <IRQ_Context>
 800b428:	b1b8      	cbz	r0, 800b45a <osSemaphoreAcquire+0x46>
    if (timeout != 0U) {
 800b42a:	2c00      	cmp	r4, #0
 800b42c:	d1f6      	bne.n	800b41c <osSemaphoreAcquire+0x8>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800b42e:	4621      	mov	r1, r4
 800b430:	4628      	mov	r0, r5
 800b432:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800b434:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800b436:	f000 fe01 	bl	800c03c <xQueueReceiveFromISR>
 800b43a:	2801      	cmp	r0, #1
 800b43c:	d002      	beq.n	800b444 <osSemaphoreAcquire+0x30>
        stat = osErrorResource;
 800b43e:	f06f 0002 	mvn.w	r0, #2
 800b442:	e7ed      	b.n	800b420 <osSemaphoreAcquire+0xc>
        portYIELD_FROM_ISR (yield);
 800b444:	9b01      	ldr	r3, [sp, #4]
 800b446:	b90b      	cbnz	r3, 800b44c <osSemaphoreAcquire+0x38>
  stat = osOK;
 800b448:	2000      	movs	r0, #0
 800b44a:	e7e9      	b.n	800b420 <osSemaphoreAcquire+0xc>
        portYIELD_FROM_ISR (yield);
 800b44c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800b450:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800b454:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800b458:	e7f6      	b.n	800b448 <osSemaphoreAcquire+0x34>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800b45a:	4621      	mov	r1, r4
 800b45c:	4628      	mov	r0, r5
 800b45e:	f000 fd58 	bl	800bf12 <xQueueSemaphoreTake>
 800b462:	2801      	cmp	r0, #1
 800b464:	d0f0      	beq.n	800b448 <osSemaphoreAcquire+0x34>
      if (timeout != 0U) {
 800b466:	2c00      	cmp	r4, #0
 800b468:	d0e9      	beq.n	800b43e <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 800b46a:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800b46e:	e7d7      	b.n	800b420 <osSemaphoreAcquire+0xc>

0800b470 <osSemaphoreRelease>:

/*
  Release a Semaphore token up to the initial maximum count.
*/
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800b470:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800b472:	4604      	mov	r4, r0
 800b474:	b308      	cbz	r0, 800b4ba <osSemaphoreRelease+0x4a>
    stat = osErrorParameter;
  }
  else if (IRQ_Context() != 0U) {
 800b476:	f7ff fecd 	bl	800b214 <IRQ_Context>
 800b47a:	4603      	mov	r3, r0
 800b47c:	b1a8      	cbz	r0, 800b4aa <osSemaphoreRelease+0x3a>
    yield = pdFALSE;
 800b47e:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800b480:	4620      	mov	r0, r4
 800b482:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800b484:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800b486:	f000 fc8b 	bl	800bda0 <xQueueGiveFromISR>
 800b48a:	2801      	cmp	r0, #1
 800b48c:	d003      	beq.n	800b496 <osSemaphoreRelease+0x26>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 800b48e:	f06f 0002 	mvn.w	r0, #2
    }
  }

  /* Return execution status */
  return (stat);
}
 800b492:	b002      	add	sp, #8
 800b494:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 800b496:	9b01      	ldr	r3, [sp, #4]
 800b498:	b12b      	cbz	r3, 800b4a6 <osSemaphoreRelease+0x36>
 800b49a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800b49e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800b4a2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
  stat = osOK;
 800b4a6:	2000      	movs	r0, #0
 800b4a8:	e7f3      	b.n	800b492 <osSemaphoreRelease+0x22>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800b4aa:	4602      	mov	r2, r0
 800b4ac:	4601      	mov	r1, r0
 800b4ae:	4620      	mov	r0, r4
 800b4b0:	f000 fba4 	bl	800bbfc <xQueueGenericSend>
 800b4b4:	2801      	cmp	r0, #1
 800b4b6:	d0f6      	beq.n	800b4a6 <osSemaphoreRelease+0x36>
 800b4b8:	e7e9      	b.n	800b48e <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 800b4ba:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800b4be:	e7e8      	b.n	800b492 <osSemaphoreRelease+0x22>

0800b4c0 <osMessageQueueNew>:

  Limitations:
  - The memory for control block and and message data must be provided in the
    osThreadAttr_t structure in order to allocate object statically.
*/
osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800b4c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b4c2:	4605      	mov	r5, r0
 800b4c4:	460e      	mov	r6, r1
 800b4c6:	4614      	mov	r4, r2
  QueueHandle_t hQueue;
  int32_t mem;

  hQueue = NULL;

  if ((IRQ_Context() == 0U) && (msg_count > 0U) && (msg_size > 0U)) {
 800b4c8:	f7ff fea4 	bl	800b214 <IRQ_Context>
 800b4cc:	b118      	cbz	r0, 800b4d6 <osMessageQueueNew+0x16>
  hQueue = NULL;
 800b4ce:	2500      	movs	r5, #0

  }

  /* Return message queue ID */
  return ((osMessageQueueId_t)hQueue);
}
 800b4d0:	4628      	mov	r0, r5
 800b4d2:	b003      	add	sp, #12
 800b4d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if ((IRQ_Context() == 0U) && (msg_count > 0U) && (msg_size > 0U)) {
 800b4d6:	2d00      	cmp	r5, #0
 800b4d8:	d0f9      	beq.n	800b4ce <osMessageQueueNew+0xe>
 800b4da:	2e00      	cmp	r6, #0
 800b4dc:	d0f7      	beq.n	800b4ce <osMessageQueueNew+0xe>
    if (attr != NULL) {
 800b4de:	b31c      	cbz	r4, 800b528 <osMessageQueueNew+0x68>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800b4e0:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 800b4e4:	b1c3      	cbz	r3, 800b518 <osMessageQueueNew+0x58>
 800b4e6:	2a4f      	cmp	r2, #79	@ 0x4f
 800b4e8:	d9f1      	bls.n	800b4ce <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800b4ea:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800b4ec:	2a00      	cmp	r2, #0
 800b4ee:	d0ee      	beq.n	800b4ce <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800b4f0:	fb06 f105 	mul.w	r1, r6, r5
 800b4f4:	6967      	ldr	r7, [r4, #20]
 800b4f6:	428f      	cmp	r7, r1
 800b4f8:	d3e9      	bcc.n	800b4ce <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800b4fa:	9000      	str	r0, [sp, #0]
 800b4fc:	4631      	mov	r1, r6
 800b4fe:	4628      	mov	r0, r5
 800b500:	f000 fb05 	bl	800bb0e <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800b504:	4605      	mov	r5, r0
 800b506:	2800      	cmp	r0, #0
 800b508:	d0e1      	beq.n	800b4ce <osMessageQueueNew+0xe>
      if ((attr != NULL) && (attr->name != NULL)) {
 800b50a:	6821      	ldr	r1, [r4, #0]
 800b50c:	2900      	cmp	r1, #0
 800b50e:	d0df      	beq.n	800b4d0 <osMessageQueueNew+0x10>
        vQueueAddToRegistry (hQueue, attr->name);
 800b510:	4628      	mov	r0, r5
 800b512:	f000 fdd1 	bl	800c0b8 <vQueueAddToRegistry>
 800b516:	e7db      	b.n	800b4d0 <osMessageQueueNew+0x10>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800b518:	2a00      	cmp	r2, #0
 800b51a:	d1d8      	bne.n	800b4ce <osMessageQueueNew+0xe>
 800b51c:	6923      	ldr	r3, [r4, #16]
 800b51e:	2b00      	cmp	r3, #0
 800b520:	d1d5      	bne.n	800b4ce <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800b522:	6963      	ldr	r3, [r4, #20]
 800b524:	2b00      	cmp	r3, #0
 800b526:	d1d2      	bne.n	800b4ce <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 800b528:	4628      	mov	r0, r5
 800b52a:	2200      	movs	r2, #0
 800b52c:	4631      	mov	r1, r6
 800b52e:	f000 fb19 	bl	800bb64 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800b532:	4605      	mov	r5, r0
 800b534:	2800      	cmp	r0, #0
 800b536:	d0ca      	beq.n	800b4ce <osMessageQueueNew+0xe>
      if ((attr != NULL) && (attr->name != NULL)) {
 800b538:	2c00      	cmp	r4, #0
 800b53a:	d1e6      	bne.n	800b50a <osMessageQueueNew+0x4a>
 800b53c:	e7c8      	b.n	800b4d0 <osMessageQueueNew+0x10>

0800b53e <osMessageQueuePut>:
  Put a Message into a Queue or timeout if Queue is full.

  Limitations:
  - Message priority is ignored
*/
osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800b53e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b540:	461c      	mov	r4, r3
 800b542:	4605      	mov	r5, r0
 800b544:	460e      	mov	r6, r1

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IRQ_Context() != 0U) {
 800b546:	f7ff fe65 	bl	800b214 <IRQ_Context>
 800b54a:	4603      	mov	r3, r0
 800b54c:	b1d0      	cbz	r0, 800b584 <osMessageQueuePut+0x46>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800b54e:	b33d      	cbz	r5, 800b5a0 <osMessageQueuePut+0x62>
 800b550:	b336      	cbz	r6, 800b5a0 <osMessageQueuePut+0x62>
 800b552:	bb2c      	cbnz	r4, 800b5a0 <osMessageQueuePut+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800b554:	4623      	mov	r3, r4
 800b556:	4631      	mov	r1, r6
 800b558:	4628      	mov	r0, r5
 800b55a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800b55c:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800b55e:	f000 fbd6 	bl	800bd0e <xQueueGenericSendFromISR>
 800b562:	2801      	cmp	r0, #1
 800b564:	d003      	beq.n	800b56e <osMessageQueuePut+0x30>
        stat = osErrorResource;
 800b566:	f06f 0002 	mvn.w	r0, #2
    }
  }

  /* Return execution status */
  return (stat);
}
 800b56a:	b002      	add	sp, #8
 800b56c:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 800b56e:	9b01      	ldr	r3, [sp, #4]
 800b570:	b90b      	cbnz	r3, 800b576 <osMessageQueuePut+0x38>
  stat = osOK;
 800b572:	2000      	movs	r0, #0
 800b574:	e7f9      	b.n	800b56a <osMessageQueuePut+0x2c>
        portYIELD_FROM_ISR (yield);
 800b576:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800b57a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800b57e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800b582:	e7f6      	b.n	800b572 <osMessageQueuePut+0x34>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800b584:	b165      	cbz	r5, 800b5a0 <osMessageQueuePut+0x62>
 800b586:	b15e      	cbz	r6, 800b5a0 <osMessageQueuePut+0x62>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800b588:	4622      	mov	r2, r4
 800b58a:	4631      	mov	r1, r6
 800b58c:	4628      	mov	r0, r5
 800b58e:	f000 fb35 	bl	800bbfc <xQueueGenericSend>
 800b592:	2801      	cmp	r0, #1
 800b594:	d0ed      	beq.n	800b572 <osMessageQueuePut+0x34>
        if (timeout != 0U) {
 800b596:	2c00      	cmp	r4, #0
 800b598:	d0e5      	beq.n	800b566 <osMessageQueuePut+0x28>
          stat = osErrorTimeout;
 800b59a:	f06f 0001 	mvn.w	r0, #1
 800b59e:	e7e4      	b.n	800b56a <osMessageQueuePut+0x2c>
      stat = osErrorParameter;
 800b5a0:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800b5a4:	e7e1      	b.n	800b56a <osMessageQueuePut+0x2c>

0800b5a6 <osMessageQueueGet>:
  Get a Message from a Queue or timeout if Queue is empty.

  Limitations:
  - Message priority is ignored
*/
osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800b5a6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b5a8:	4605      	mov	r5, r0
 800b5aa:	460e      	mov	r6, r1
 800b5ac:	461c      	mov	r4, r3

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IRQ_Context() != 0U) {
 800b5ae:	f7ff fe31 	bl	800b214 <IRQ_Context>
 800b5b2:	b1c8      	cbz	r0, 800b5e8 <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800b5b4:	b335      	cbz	r5, 800b604 <osMessageQueueGet+0x5e>
 800b5b6:	b32e      	cbz	r6, 800b604 <osMessageQueueGet+0x5e>
 800b5b8:	bb24      	cbnz	r4, 800b604 <osMessageQueueGet+0x5e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800b5ba:	4631      	mov	r1, r6
 800b5bc:	4628      	mov	r0, r5
 800b5be:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800b5c0:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800b5c2:	f000 fd3b 	bl	800c03c <xQueueReceiveFromISR>
 800b5c6:	2801      	cmp	r0, #1
 800b5c8:	d003      	beq.n	800b5d2 <osMessageQueueGet+0x2c>
        stat = osErrorResource;
 800b5ca:	f06f 0002 	mvn.w	r0, #2
    }
  }

  /* Return execution status */
  return (stat);
}
 800b5ce:	b002      	add	sp, #8
 800b5d0:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 800b5d2:	9b01      	ldr	r3, [sp, #4]
 800b5d4:	b90b      	cbnz	r3, 800b5da <osMessageQueueGet+0x34>
  stat = osOK;
 800b5d6:	2000      	movs	r0, #0
 800b5d8:	e7f9      	b.n	800b5ce <osMessageQueueGet+0x28>
        portYIELD_FROM_ISR (yield);
 800b5da:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800b5de:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800b5e2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800b5e6:	e7f6      	b.n	800b5d6 <osMessageQueueGet+0x30>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800b5e8:	b165      	cbz	r5, 800b604 <osMessageQueueGet+0x5e>
 800b5ea:	b15e      	cbz	r6, 800b604 <osMessageQueueGet+0x5e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800b5ec:	4622      	mov	r2, r4
 800b5ee:	4631      	mov	r1, r6
 800b5f0:	4628      	mov	r0, r5
 800b5f2:	f000 fc12 	bl	800be1a <xQueueReceive>
 800b5f6:	2801      	cmp	r0, #1
 800b5f8:	d0ed      	beq.n	800b5d6 <osMessageQueueGet+0x30>
        if (timeout != 0U) {
 800b5fa:	2c00      	cmp	r4, #0
 800b5fc:	d0e5      	beq.n	800b5ca <osMessageQueueGet+0x24>
          stat = osErrorTimeout;
 800b5fe:	f06f 0001 	mvn.w	r0, #1
 800b602:	e7e4      	b.n	800b5ce <osMessageQueueGet+0x28>
      stat = osErrorParameter;
 800b604:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800b608:	e7e1      	b.n	800b5ce <osMessageQueueGet+0x28>
	...

0800b60c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800b60c:	4b03      	ldr	r3, [pc, #12]	@ (800b61c <vApplicationGetIdleTaskMemory+0x10>)
 800b60e:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800b610:	4b03      	ldr	r3, [pc, #12]	@ (800b620 <vApplicationGetIdleTaskMemory+0x14>)
 800b612:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800b614:	2380      	movs	r3, #128	@ 0x80
 800b616:	6013      	str	r3, [r2, #0]
}
 800b618:	4770      	bx	lr
 800b61a:	bf00      	nop
 800b61c:	2003f550 	.word	0x2003f550
 800b620:	2003f350 	.word	0x2003f350

0800b624 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800b624:	4b03      	ldr	r3, [pc, #12]	@ (800b634 <vApplicationGetTimerTaskMemory+0x10>)
 800b626:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800b628:	4b03      	ldr	r3, [pc, #12]	@ (800b638 <vApplicationGetTimerTaskMemory+0x14>)
 800b62a:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800b62c:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800b630:	6013      	str	r3, [r2, #0]
}
 800b632:	4770      	bx	lr
 800b634:	2003f2f0 	.word	0x2003f2f0
 800b638:	2003eef0 	.word	0x2003eef0

0800b63c <vListInitialise>:
     * as the only list entry. */
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

    /* The list end value is the highest possible value in the list to
     * ensure it remains at the end of the list. */
    pxList->xListEnd.xItemValue = portMAX_DELAY;
 800b63c:	f04f 32ff 	mov.w	r2, #4294967295
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800b640:	f100 0308 	add.w	r3, r0, #8

    /* The list end next and previous pointers point to itself so we know
     * when the list is empty. */
    pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );     /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800b644:	e9c0 2302 	strd	r2, r3, [r0, #8]
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800b648:	6043      	str	r3, [r0, #4]
    pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800b64a:	6103      	str	r3, [r0, #16]

    pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800b64c:	2300      	movs	r3, #0
 800b64e:	6003      	str	r3, [r0, #0]

    /* Write known values into the list if
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
    listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800b650:	4770      	bx	lr

0800b652 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
    /* Make sure the list item is not recorded as being on a list. */
    pxItem->pxContainer = NULL;
 800b652:	2300      	movs	r3, #0
 800b654:	6103      	str	r3, [r0, #16]

    /* Write known values into the list item if
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
    listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800b656:	4770      	bx	lr

0800b658 <vListInsert>:
}
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList,
                  ListItem_t * const pxNewListItem )
{
 800b658:	b530      	push	{r4, r5, lr}
    ListItem_t * pxIterator;
    const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800b65a:	680c      	ldr	r4, [r1, #0]
     * new list item should be placed after it.  This ensures that TCBs which are
     * stored in ready lists (all of which have the same xItemValue value) get a
     * share of the CPU.  However, if the xItemValue is the same as the back marker
     * the iteration loop below will not end.  Therefore the value is checked
     * first, and the algorithm slightly modified if necessary. */
    if( xValueOfInsertion == portMAX_DELAY )
 800b65c:	1c63      	adds	r3, r4, #1
 800b65e:	d10a      	bne.n	800b676 <vListInsert+0x1e>
    {
        pxIterator = pxList->xListEnd.pxPrevious;
 800b660:	6903      	ldr	r3, [r0, #16]
            /* There is nothing to do here, just iterating to the wanted
             * insertion position. */
        }
    }

    pxNewListItem->pxNext = pxIterator->pxNext;
 800b662:	685a      	ldr	r2, [r3, #4]
 800b664:	604a      	str	r2, [r1, #4]
    pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800b666:	6091      	str	r1, [r2, #8]
    pxNewListItem->pxPrevious = pxIterator;
 800b668:	608b      	str	r3, [r1, #8]
    pxIterator->pxNext = pxNewListItem;
 800b66a:	6059      	str	r1, [r3, #4]

    /* Remember which list the item is in.  This allows fast removal of the
     * item later. */
    pxNewListItem->pxContainer = pxList;

    ( pxList->uxNumberOfItems )++;
 800b66c:	6803      	ldr	r3, [r0, #0]
    pxNewListItem->pxContainer = pxList;
 800b66e:	6108      	str	r0, [r1, #16]
    ( pxList->uxNumberOfItems )++;
 800b670:	3301      	adds	r3, #1
 800b672:	6003      	str	r3, [r0, #0]
}
 800b674:	bd30      	pop	{r4, r5, pc}
        for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800b676:	f100 0208 	add.w	r2, r0, #8
 800b67a:	4613      	mov	r3, r2
 800b67c:	6852      	ldr	r2, [r2, #4]
 800b67e:	6815      	ldr	r5, [r2, #0]
 800b680:	42a5      	cmp	r5, r4
 800b682:	d9fa      	bls.n	800b67a <vListInsert+0x22>
 800b684:	e7ed      	b.n	800b662 <vListInsert+0xa>

0800b686 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
 * item. */
    List_t * const pxList = pxItemToRemove->pxContainer;
 800b686:	6903      	ldr	r3, [r0, #16]

    pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800b688:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 800b68c:	608a      	str	r2, [r1, #8]
    pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800b68e:	6051      	str	r1, [r2, #4]

    /* Only used during decision coverage testing. */
    mtCOVERAGE_TEST_DELAY();

    /* Make sure the index is left pointing to a valid item. */
    if( pxList->pxIndex == pxItemToRemove )
 800b690:	6859      	ldr	r1, [r3, #4]
 800b692:	4281      	cmp	r1, r0
    {
        pxList->pxIndex = pxItemToRemove->pxPrevious;
 800b694:	bf08      	it	eq
 800b696:	605a      	streq	r2, [r3, #4]
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }

    pxItemToRemove->pxContainer = NULL;
 800b698:	2200      	movs	r2, #0
 800b69a:	6102      	str	r2, [r0, #16]
    ( pxList->uxNumberOfItems )--;
 800b69c:	681a      	ldr	r2, [r3, #0]
 800b69e:	3a01      	subs	r2, #1
 800b6a0:	601a      	str	r2, [r3, #0]

    return pxList->uxNumberOfItems;
 800b6a2:	6818      	ldr	r0, [r3, #0]
}
 800b6a4:	4770      	bx	lr
	...

0800b6a8 <prvTaskExitError>:
}
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
    volatile uint32_t ulDummy = 0UL;
 800b6a8:	2300      	movs	r3, #0
{
 800b6aa:	b507      	push	{r0, r1, r2, lr}
    volatile uint32_t ulDummy = 0UL;
 800b6ac:	9301      	str	r3, [sp, #4]
    /* A function that implements a task must not exit or attempt to return to
     * its caller as there is nothing to return to. If a task wants to exit it
     * should instead call vTaskDelete( NULL ). Artificially force an assert()
     * to be triggered if configASSERT() is defined, then stop here so
     * application writers can catch the error. */
    configASSERT( ulCriticalNesting == ~0UL );
 800b6ae:	4b07      	ldr	r3, [pc, #28]	@ (800b6cc <prvTaskExitError+0x24>)
 800b6b0:	681b      	ldr	r3, [r3, #0]
 800b6b2:	3301      	adds	r3, #1
 800b6b4:	d002      	beq.n	800b6bc <prvTaskExitError+0x14>
 800b6b6:	f000 f905 	bl	800b8c4 <ulSetInterruptMask>
 800b6ba:	e7fe      	b.n	800b6ba <prvTaskExitError+0x12>
    portDISABLE_INTERRUPTS();
 800b6bc:	f000 f902 	bl	800b8c4 <ulSetInterruptMask>

    while( ulDummy == 0 )
 800b6c0:	9b01      	ldr	r3, [sp, #4]
 800b6c2:	2b00      	cmp	r3, #0
 800b6c4:	d0fc      	beq.n	800b6c0 <prvTaskExitError+0x18>
         * warnings about code appearing after this function is called - making
         * ulDummy volatile makes the compiler think the function could return
         * and therefore not output an 'unreachable code' warning for code that
         * appears after it. */
    }
}
 800b6c6:	b003      	add	sp, #12
 800b6c8:	f85d fb04 	ldr.w	pc, [sp], #4
 800b6cc:	20000054 	.word	0x20000054

0800b6d0 <vPortSetupTimerInterrupt>:
    portNVIC_SYSTICK_CTRL_REG = 0UL;
 800b6d0:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 800b6d4:	2300      	movs	r3, #0
    portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800b6d6:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
    portNVIC_SYSTICK_CTRL_REG = 0UL;
 800b6da:	6113      	str	r3, [r2, #16]
    portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800b6dc:	6193      	str	r3, [r2, #24]
    portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800b6de:	4b04      	ldr	r3, [pc, #16]	@ (800b6f0 <vPortSetupTimerInterrupt+0x20>)
 800b6e0:	681b      	ldr	r3, [r3, #0]
 800b6e2:	fbb3 f3f1 	udiv	r3, r3, r1
 800b6e6:	3b01      	subs	r3, #1
 800b6e8:	6153      	str	r3, [r2, #20]
    portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
 800b6ea:	2307      	movs	r3, #7
 800b6ec:	6113      	str	r3, [r2, #16]
}
 800b6ee:	4770      	bx	lr
 800b6f0:	20000048 	.word	0x20000048

0800b6f4 <vPortYield>:
/*-----------------------------------------------------------*/

void vPortYield( void ) /* PRIVILEGED_FUNCTION */
{
    /* Set a PendSV to request a context switch. */
    portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800b6f4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800b6f8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800b6fc:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04

    /* Barriers are normally not required but do ensure the code is
     * completely within the specified behaviour for the architecture. */
    __asm volatile ( "dsb" ::: "memory" );
 800b700:	f3bf 8f4f 	dsb	sy
    __asm volatile ( "isb" );
 800b704:	f3bf 8f6f 	isb	sy
}
 800b708:	4770      	bx	lr
	...

0800b70c <vPortEnterCritical>:
/*-----------------------------------------------------------*/

void vPortEnterCritical( void ) /* PRIVILEGED_FUNCTION */
{
 800b70c:	b508      	push	{r3, lr}
    portDISABLE_INTERRUPTS();
 800b70e:	f000 f8d9 	bl	800b8c4 <ulSetInterruptMask>
    ulCriticalNesting++;
 800b712:	4a04      	ldr	r2, [pc, #16]	@ (800b724 <vPortEnterCritical+0x18>)
 800b714:	6813      	ldr	r3, [r2, #0]
 800b716:	3301      	adds	r3, #1
 800b718:	6013      	str	r3, [r2, #0]

    /* Barriers are normally not required but do ensure the code is
     * completely within the specified behaviour for the architecture. */
    __asm volatile ( "dsb" ::: "memory" );
 800b71a:	f3bf 8f4f 	dsb	sy
    __asm volatile ( "isb" );
 800b71e:	f3bf 8f6f 	isb	sy
}
 800b722:	bd08      	pop	{r3, pc}
 800b724:	20000054 	.word	0x20000054

0800b728 <vPortExitCritical>:
/*-----------------------------------------------------------*/

void vPortExitCritical( void ) /* PRIVILEGED_FUNCTION */
{
 800b728:	b508      	push	{r3, lr}
    configASSERT( ulCriticalNesting );
 800b72a:	4b08      	ldr	r3, [pc, #32]	@ (800b74c <vPortExitCritical+0x24>)
 800b72c:	681a      	ldr	r2, [r3, #0]
 800b72e:	b912      	cbnz	r2, 800b736 <vPortExitCritical+0xe>
 800b730:	f000 f8c8 	bl	800b8c4 <ulSetInterruptMask>
 800b734:	e7fe      	b.n	800b734 <vPortExitCritical+0xc>
    ulCriticalNesting--;
 800b736:	681a      	ldr	r2, [r3, #0]
 800b738:	3a01      	subs	r2, #1
 800b73a:	601a      	str	r2, [r3, #0]

    if( ulCriticalNesting == 0 )
 800b73c:	6818      	ldr	r0, [r3, #0]
 800b73e:	b918      	cbnz	r0, 800b748 <vPortExitCritical+0x20>
    {
        portENABLE_INTERRUPTS();
    }
}
 800b740:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        portENABLE_INTERRUPTS();
 800b744:	f000 b8c9 	b.w	800b8da <vClearInterruptMask>
}
 800b748:	bd08      	pop	{r3, pc}
 800b74a:	bf00      	nop
 800b74c:	20000054 	.word	0x20000054

0800b750 <xPortSysTickHandler>:
/*-----------------------------------------------------------*/

void SysTick_Handler( void ) /* PRIVILEGED_FUNCTION */
{
 800b750:	b510      	push	{r4, lr}
    uint32_t ulPreviousMask;

    ulPreviousMask = portSET_INTERRUPT_MASK_FROM_ISR();
 800b752:	f000 f8b7 	bl	800b8c4 <ulSetInterruptMask>
 800b756:	4604      	mov	r4, r0
    {
        /* Increment the RTOS tick. */
        if( xTaskIncrementTick() != pdFALSE )
 800b758:	f000 fee6 	bl	800c528 <xTaskIncrementTick>
 800b75c:	b128      	cbz	r0, 800b76a <xPortSysTickHandler+0x1a>
        {
            /* Pend a context switch. */
            portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800b75e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800b762:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800b766:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
        }
    }
    portCLEAR_INTERRUPT_MASK_FROM_ISR( ulPreviousMask );
 800b76a:	4620      	mov	r0, r4
}
 800b76c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    portCLEAR_INTERRUPT_MASK_FROM_ISR( ulPreviousMask );
 800b770:	f000 b8b3 	b.w	800b8da <vClearInterruptMask>

0800b774 <vPortSVCHandler_C>:
/*-----------------------------------------------------------*/

void vPortSVCHandler_C( uint32_t * pulCallerStackAddress ) /* PRIVILEGED_FUNCTION portDONT_DISCARD */
{
 800b774:	b508      	push	{r3, lr}
    uint8_t ucSVCNumber;

    /* Register are stored on the stack in the following order - R0, R1, R2, R3,
     * R12, LR, PC, xPSR. */
    ulPC = pulCallerStackAddress[ 6 ];
    ucSVCNumber = ( ( uint8_t * ) ulPC )[ -2 ];
 800b776:	6983      	ldr	r3, [r0, #24]

    switch( ucSVCNumber )
 800b778:	f813 3c02 	ldrb.w	r3, [r3, #-2]
 800b77c:	2b02      	cmp	r3, #2
 800b77e:	d111      	bne.n	800b7a4 <vPortSVCHandler_C+0x30>
        *( portCPACR ) |= ( ( portCPACR_CP10_VALUE << portCPACR_CP10_POS ) |
 800b780:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800b784:	f8d3 2d88 	ldr.w	r2, [r3, #3464]	@ 0xd88
 800b788:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 800b78c:	f8c3 2d88 	str.w	r2, [r3, #3464]	@ 0xd88
        *( portFPCCR ) |= ( portFPCCR_ASPEN_MASK | portFPCCR_LSPEN_MASK );
 800b790:	f8d3 2f34 	ldr.w	r2, [r3, #3892]	@ 0xf34
 800b794:	f042 4240 	orr.w	r2, r2, #3221225472	@ 0xc0000000
 800b798:	f8c3 2f34 	str.w	r2, [r3, #3892]	@ 0xf34

        default:
            /* Incorrect SVC call. */
            configASSERT( pdFALSE );
    }
}
 800b79c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
            vRestoreContextOfFirstTask();
 800b7a0:	f000 b85e 	b.w	800b860 <vRestoreContextOfFirstTask>
            configASSERT( pdFALSE );
 800b7a4:	f000 f88e 	bl	800b8c4 <ulSetInterruptMask>
 800b7a8:	e7fe      	b.n	800b7a8 <vPortSVCHandler_C+0x34>
	...

0800b7ac <pxPortInitialiseStack>:
                                         StackType_t * pxEndOfStack,
                                         TaskFunction_t pxCode,
                                         void * pvParameters ) /* PRIVILEGED_FUNCTION */
#endif /* configENABLE_MPU */
/* *INDENT-ON* */
{
 800b7ac:	b510      	push	{r4, lr}
            #endif /* configENABLE_TRUSTZONE */
        }
    #else /* portPRELOAD_REGISTERS */
        {
            pxTopOfStack--;                                          /* Offset added to account for the way the MCU uses the stack on entry/exit of interrupts. */
            *pxTopOfStack = portINITIAL_XPSR;                        /* xPSR */
 800b7ae:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pxCode;                  /* PC */
 800b7b2:	e940 2402 	strd	r2, r4, [r0, #-8]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS; /* LR */
 800b7b6:	4a18      	ldr	r2, [pc, #96]	@ (800b818 <pxPortInitialiseStack+0x6c>)
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x12121212UL;            /* R12 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x03030303UL;            /* R3 */
 800b7b8:	f04f 3412 	mov.w	r4, #303174162	@ 0x12121212
            *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS; /* LR */
 800b7bc:	f840 2c0c 	str.w	r2, [r0, #-12]
            *pxTopOfStack = ( StackType_t ) 0x03030303UL;            /* R3 */
 800b7c0:	f04f 3203 	mov.w	r2, #50529027	@ 0x3030303
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x02020202UL;            /* R2 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x01010101UL;            /* R1 */
 800b7c4:	f04f 3c02 	mov.w	ip, #33686018	@ 0x2020202
            *pxTopOfStack = ( StackType_t ) 0x03030303UL;            /* R3 */
 800b7c8:	e940 2405 	strd	r2, r4, [r0, #-20]
            *pxTopOfStack = ( StackType_t ) 0x01010101UL;            /* R1 */
 800b7cc:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pvParameters;            /* R0 */
 800b7d0:	f840 3c20 	str.w	r3, [r0, #-32]
            *pxTopOfStack = ( StackType_t ) 0x01010101UL;            /* R1 */
 800b7d4:	e940 2c07 	strd	r2, ip, [r0, #-28]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x11111111UL;            /* R11 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x10101010UL;            /* R10 */
 800b7d8:	f04f 3310 	mov.w	r3, #269488144	@ 0x10101010
 800b7dc:	f04f 3211 	mov.w	r2, #286331153	@ 0x11111111
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x09090909UL;            /* R09 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x08080808UL;            /* R08 */
 800b7e0:	f04f 3409 	mov.w	r4, #151587081	@ 0x9090909
            *pxTopOfStack = ( StackType_t ) 0x10101010UL;            /* R10 */
 800b7e4:	e940 320a 	strd	r3, r2, [r0, #-40]	@ 0x28
            *pxTopOfStack = ( StackType_t ) 0x08080808UL;            /* R08 */
 800b7e8:	f04f 3308 	mov.w	r3, #134744072	@ 0x8080808
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x07070707UL;            /* R07 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x06060606UL;            /* R06 */
 800b7ec:	f04f 3c07 	mov.w	ip, #117901063	@ 0x7070707
            *pxTopOfStack = ( StackType_t ) 0x08080808UL;            /* R08 */
 800b7f0:	e940 340c 	strd	r3, r4, [r0, #-48]	@ 0x30
            *pxTopOfStack = ( StackType_t ) 0x06060606UL;            /* R06 */
 800b7f4:	f04f 3306 	mov.w	r3, #101058054	@ 0x6060606
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x05050505UL;            /* R05 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x04040404UL;            /* R04 */
 800b7f8:	f04f 3205 	mov.w	r2, #84215045	@ 0x5050505
            *pxTopOfStack = ( StackType_t ) 0x06060606UL;            /* R06 */
 800b7fc:	e940 3c0e 	strd	r3, ip, [r0, #-56]	@ 0x38
            *pxTopOfStack = ( StackType_t ) 0x04040404UL;            /* R04 */
 800b800:	f04f 3304 	mov.w	r3, #67372036	@ 0x4040404
 800b804:	e940 3210 	strd	r3, r2, [r0, #-64]	@ 0x40
            pxTopOfStack--;
            *pxTopOfStack = portINITIAL_EXC_RETURN;                  /* EXC_RETURN */
 800b808:	f06f 0343 	mvn.w	r3, #67	@ 0x43
 800b80c:	f840 3c44 	str.w	r3, [r0, #-68]
                    }
                }
            #endif /* configENABLE_MPU */

            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pxEndOfStack; /* Slot used to hold this task's PSPLIM value. */
 800b810:	f840 1d48 	str.w	r1, [r0, #-72]!
            #endif /* configENABLE_TRUSTZONE */
        }
    #endif /* portPRELOAD_REGISTERS */

    return pxTopOfStack;
}
 800b814:	bd10      	pop	{r4, pc}
 800b816:	bf00      	nop
 800b818:	0800b6a9 	.word	0x0800b6a9

0800b81c <xPortStartScheduler>:
/*-----------------------------------------------------------*/

BaseType_t xPortStartScheduler( void ) /* PRIVILEGED_FUNCTION */
{
    /* Make PendSV, CallSV and SysTick the same priority as the kernel. */
    portNVIC_SHPR3_REG |= portNVIC_PENDSV_PRI;
 800b81c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 800b820:	b510      	push	{r4, lr}
    /* Start the timer that generates the tick ISR. Interrupts are disabled
     * here already. */
    vPortSetupTimerInterrupt();

    /* Initialize the critical nesting count ready for the first task. */
    ulCriticalNesting = 0;
 800b822:	2400      	movs	r4, #0
    portNVIC_SHPR3_REG |= portNVIC_PENDSV_PRI;
 800b824:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	@ 0xd20
 800b828:	f442 027f 	orr.w	r2, r2, #16711680	@ 0xff0000
 800b82c:	f8c3 2d20 	str.w	r2, [r3, #3360]	@ 0xd20
    portNVIC_SHPR3_REG |= portNVIC_SYSTICK_PRI;
 800b830:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	@ 0xd20
 800b834:	f042 427f 	orr.w	r2, r2, #4278190080	@ 0xff000000
 800b838:	f8c3 2d20 	str.w	r2, [r3, #3360]	@ 0xd20
    vPortSetupTimerInterrupt();
 800b83c:	f7ff ff48 	bl	800b6d0 <vPortSetupTimerInterrupt>
    ulCriticalNesting = 0;
 800b840:	4b04      	ldr	r3, [pc, #16]	@ (800b854 <xPortStartScheduler+0x38>)
 800b842:	601c      	str	r4, [r3, #0]

    /* Start the first task. */
    vStartFirstTask();
 800b844:	f000 f82c 	bl	800b8a0 <vStartFirstTask>
     * exit error function to prevent compiler warnings about a static function
     * not being called in the case that the application writer overrides this
     * functionality by defining configTASK_RETURN_ADDRESS. Call
     * vTaskSwitchContext() so link time optimization does not remove the
     * symbol. */
    vTaskSwitchContext();
 800b848:	f001 f824 	bl	800c894 <vTaskSwitchContext>
    prvTaskExitError();
 800b84c:	f7ff ff2c 	bl	800b6a8 <prvTaskExitError>

    /* Should not get here. */
    return 0;
}
 800b850:	4620      	mov	r0, r4
 800b852:	bd10      	pop	{r4, pc}
 800b854:	20000054 	.word	0x20000054
	...

0800b860 <vRestoreContextOfFirstTask>:
 * header files. */
#undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE

void vRestoreContextOfFirstTask( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 800b860:	4a0b      	ldr	r2, [pc, #44]	@ (800b890 <pxCurrentTCBConst2>)
 800b862:	6811      	ldr	r1, [r2, #0]
 800b864:	6808      	ldr	r0, [r1, #0]
 800b866:	c806      	ldmia	r0!, {r1, r2}
 800b868:	f381 880b 	msr	PSPLIM, r1
 800b86c:	2102      	movs	r1, #2
 800b86e:	f381 8814 	msr	CONTROL, r1
 800b872:	3020      	adds	r0, #32
 800b874:	f380 8809 	msr	PSP, r0
 800b878:	f3bf 8f6f 	isb	sy
 800b87c:	f04f 0000 	mov.w	r0, #0
 800b880:	f380 8811 	msr	BASEPRI, r0
 800b884:	4710      	bx	r2
 800b886:	bf00      	nop
 800b888:	f3af 8000 	nop.w
 800b88c:	f3af 8000 	nop.w

0800b890 <pxCurrentTCBConst2>:
 800b890:	2003faec 	.word	0x2003faec
	...

0800b8a0 <vStartFirstTask>:
}
/*-----------------------------------------------------------*/

void vStartFirstTask( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 800b8a0:	4807      	ldr	r0, [pc, #28]	@ (800b8c0 <xVTORConst>)
 800b8a2:	6800      	ldr	r0, [r0, #0]
 800b8a4:	6800      	ldr	r0, [r0, #0]
 800b8a6:	f380 8808 	msr	MSP, r0
 800b8aa:	b662      	cpsie	i
 800b8ac:	b661      	cpsie	f
 800b8ae:	f3bf 8f4f 	dsb	sy
 800b8b2:	f3bf 8f6f 	isb	sy
 800b8b6:	df02      	svc	2
 800b8b8:	bf00      	nop
 800b8ba:	bf00      	nop
 800b8bc:	f3af 8000 	nop.w

0800b8c0 <xVTORConst>:
 800b8c0:	e000ed08 	.word	0xe000ed08

0800b8c4 <ulSetInterruptMask>:
}
/*-----------------------------------------------------------*/

uint32_t ulSetInterruptMask( void ) /* __attribute__(( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 800b8c4:	f3ef 8011 	mrs	r0, BASEPRI
 800b8c8:	f04f 0150 	mov.w	r1, #80	@ 0x50
 800b8cc:	f381 8811 	msr	BASEPRI, r1
 800b8d0:	f3bf 8f4f 	dsb	sy
 800b8d4:	f3bf 8f6f 	isb	sy
 800b8d8:	4770      	bx	lr

0800b8da <vClearInterruptMask>:
}
/*-----------------------------------------------------------*/

void vClearInterruptMask( __attribute__( ( unused ) ) uint32_t ulMask ) /* __attribute__(( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 800b8da:	f380 8811 	msr	BASEPRI, r0
 800b8de:	f3bf 8f4f 	dsb	sy
 800b8e2:	f3bf 8f6f 	isb	sy
 800b8e6:	4770      	bx	lr
	...

0800b8f0 <PendSV_Handler>:
}
/*-----------------------------------------------------------*/

void PendSV_Handler( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 800b8f0:	f3ef 8009 	mrs	r0, PSP
 800b8f4:	f01e 0f10 	tst.w	lr, #16
 800b8f8:	bf08      	it	eq
 800b8fa:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800b8fe:	f3ef 820b 	mrs	r2, PSPLIM
 800b902:	4673      	mov	r3, lr
 800b904:	e920 0ffc 	stmdb	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 800b908:	4a11      	ldr	r2, [pc, #68]	@ (800b950 <pxCurrentTCBConst>)
 800b90a:	6811      	ldr	r1, [r2, #0]
 800b90c:	6008      	str	r0, [r1, #0]
 800b90e:	f04f 0050 	mov.w	r0, #80	@ 0x50
 800b912:	f380 8811 	msr	BASEPRI, r0
 800b916:	f3bf 8f4f 	dsb	sy
 800b91a:	f3bf 8f6f 	isb	sy
 800b91e:	f000 ffb9 	bl	800c894 <vTaskSwitchContext>
 800b922:	f04f 0000 	mov.w	r0, #0
 800b926:	f380 8811 	msr	BASEPRI, r0
 800b92a:	4a09      	ldr	r2, [pc, #36]	@ (800b950 <pxCurrentTCBConst>)
 800b92c:	6811      	ldr	r1, [r2, #0]
 800b92e:	6808      	ldr	r0, [r1, #0]
 800b930:	e8b0 0ffc 	ldmia.w	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 800b934:	f013 0f10 	tst.w	r3, #16
 800b938:	bf08      	it	eq
 800b93a:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800b93e:	f382 880b 	msr	PSPLIM, r2
 800b942:	f380 8809 	msr	PSP, r0
 800b946:	4718      	bx	r3
 800b948:	f3af 8000 	nop.w
 800b94c:	f3af 8000 	nop.w

0800b950 <pxCurrentTCBConst>:
 800b950:	2003faec 	.word	0x2003faec
	...

0800b960 <SVC_Handler>:
}
/*-----------------------------------------------------------*/

void SVC_Handler( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 800b960:	f01e 0f04 	tst.w	lr, #4
 800b964:	bf0c      	ite	eq
 800b966:	f3ef 8008 	mrseq	r0, MSP
 800b96a:	f3ef 8009 	mrsne	r0, PSP
 800b96e:	4904      	ldr	r1, [pc, #16]	@ (800b980 <svchandler_address_const>)
 800b970:	4708      	bx	r1
 800b972:	bf00      	nop
 800b974:	f3af 8000 	nop.w
 800b978:	f3af 8000 	nop.w
 800b97c:	f3af 8000 	nop.w

0800b980 <svchandler_address_const>:
 800b980:	0800b775 	.word	0x0800b775

0800b984 <prvIsQueueEmpty>:
    taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t * pxQueue )
{
 800b984:	b510      	push	{r4, lr}
 800b986:	4604      	mov	r4, r0
    BaseType_t xReturn;

    taskENTER_CRITICAL();
 800b988:	f7ff fec0 	bl	800b70c <vPortEnterCritical>
    {
        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 800b98c:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
        else
        {
            xReturn = pdFALSE;
        }
    }
    taskEXIT_CRITICAL();
 800b98e:	f7ff fecb 	bl	800b728 <vPortExitCritical>

    return xReturn;
}
 800b992:	fab4 f084 	clz	r0, r4
 800b996:	0940      	lsrs	r0, r0, #5
 800b998:	bd10      	pop	{r4, pc}

0800b99a <prvCopyDataToQueue>:
{
 800b99a:	b570      	push	{r4, r5, r6, lr}
 800b99c:	4616      	mov	r6, r2
    if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800b99e:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
 800b9a0:	4604      	mov	r4, r0
    uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800b9a2:	6b85      	ldr	r5, [r0, #56]	@ 0x38
    if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800b9a4:	b942      	cbnz	r2, 800b9b8 <prvCopyDataToQueue+0x1e>
                if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800b9a6:	6806      	ldr	r6, [r0, #0]
 800b9a8:	b99e      	cbnz	r6, 800b9d2 <prvCopyDataToQueue+0x38>
                    xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800b9aa:	6880      	ldr	r0, [r0, #8]
 800b9ac:	f001 f8e2 	bl	800cb74 <xTaskPriorityDisinherit>
                    pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800b9b0:	60a6      	str	r6, [r4, #8]
    pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800b9b2:	3501      	adds	r5, #1
 800b9b4:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 800b9b6:	bd70      	pop	{r4, r5, r6, pc}
    else if( xPosition == queueSEND_TO_BACK )
 800b9b8:	b96e      	cbnz	r6, 800b9d6 <prvCopyDataToQueue+0x3c>
        ( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800b9ba:	6840      	ldr	r0, [r0, #4]
 800b9bc:	f019 fd95 	bl	80254ea <memcpy>
        pxQueue->pcWriteTo += pxQueue->uxItemSize;                                                       /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800b9c0:	6863      	ldr	r3, [r4, #4]
 800b9c2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800b9c4:	4413      	add	r3, r2
        if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail )                                             /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800b9c6:	68a2      	ldr	r2, [r4, #8]
        pxQueue->pcWriteTo += pxQueue->uxItemSize;                                                       /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800b9c8:	6063      	str	r3, [r4, #4]
        if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail )                                             /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800b9ca:	4293      	cmp	r3, r2
            pxQueue->pcWriteTo = pxQueue->pcHead;
 800b9cc:	bf24      	itt	cs
 800b9ce:	6823      	ldrcs	r3, [r4, #0]
 800b9d0:	6063      	strcs	r3, [r4, #4]
    BaseType_t xReturn = pdFALSE;
 800b9d2:	2000      	movs	r0, #0
 800b9d4:	e7ed      	b.n	800b9b2 <prvCopyDataToQueue+0x18>
        ( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800b9d6:	68c0      	ldr	r0, [r0, #12]
 800b9d8:	f019 fd87 	bl	80254ea <memcpy>
        pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800b9dc:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800b9de:	68e3      	ldr	r3, [r4, #12]
 800b9e0:	4251      	negs	r1, r2
 800b9e2:	1a9b      	subs	r3, r3, r2
        if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800b9e4:	6822      	ldr	r2, [r4, #0]
        pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800b9e6:	60e3      	str	r3, [r4, #12]
        if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800b9e8:	4293      	cmp	r3, r2
            pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800b9ea:	bf3e      	ittt	cc
 800b9ec:	68a3      	ldrcc	r3, [r4, #8]
 800b9ee:	185b      	addcc	r3, r3, r1
 800b9f0:	60e3      	strcc	r3, [r4, #12]
        if( xPosition == queueOVERWRITE )
 800b9f2:	2e02      	cmp	r6, #2
 800b9f4:	d1ed      	bne.n	800b9d2 <prvCopyDataToQueue+0x38>
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800b9f6:	b10d      	cbz	r5, 800b9fc <prvCopyDataToQueue+0x62>
                --uxMessagesWaiting;
 800b9f8:	3d01      	subs	r5, #1
 800b9fa:	e7ea      	b.n	800b9d2 <prvCopyDataToQueue+0x38>
    BaseType_t xReturn = pdFALSE;
 800b9fc:	4628      	mov	r0, r5
 800b9fe:	e7d8      	b.n	800b9b2 <prvCopyDataToQueue+0x18>

0800ba00 <prvCopyDataFromQueue>:
{
 800ba00:	4603      	mov	r3, r0
    if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800ba02:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 800ba04:	4608      	mov	r0, r1
 800ba06:	b410      	push	{r4}
    if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800ba08:	b16a      	cbz	r2, 800ba26 <prvCopyDataFromQueue+0x26>
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;           /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ba0a:	68dc      	ldr	r4, [r3, #12]
        if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ba0c:	6899      	ldr	r1, [r3, #8]
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;           /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ba0e:	4414      	add	r4, r2
        if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ba10:	428c      	cmp	r4, r1
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800ba12:	bf28      	it	cs
 800ba14:	6819      	ldrcs	r1, [r3, #0]
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;           /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ba16:	60dc      	str	r4, [r3, #12]
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800ba18:	bf28      	it	cs
 800ba1a:	60d9      	strcs	r1, [r3, #12]
        ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800ba1c:	68d9      	ldr	r1, [r3, #12]
}
 800ba1e:	f85d 4b04 	ldr.w	r4, [sp], #4
        ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800ba22:	f019 bd62 	b.w	80254ea <memcpy>
}
 800ba26:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ba2a:	4770      	bx	lr

0800ba2c <prvUnlockQueue>:
{
 800ba2c:	b570      	push	{r4, r5, r6, lr}
 800ba2e:	4604      	mov	r4, r0
    taskENTER_CRITICAL();
 800ba30:	f7ff fe6c 	bl	800b70c <vPortEnterCritical>
        int8_t cTxLock = pxQueue->cTxLock;
 800ba34:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
                        if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ba38:	f104 0624 	add.w	r6, r4, #36	@ 0x24
        int8_t cTxLock = pxQueue->cTxLock;
 800ba3c:	b26d      	sxtb	r5, r5
        while( cTxLock > queueLOCKED_UNMODIFIED )
 800ba3e:	2d00      	cmp	r5, #0
 800ba40:	dc14      	bgt.n	800ba6c <prvUnlockQueue+0x40>
        pxQueue->cTxLock = queueUNLOCKED;
 800ba42:	23ff      	movs	r3, #255	@ 0xff
 800ba44:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
    taskEXIT_CRITICAL();
 800ba48:	f7ff fe6e 	bl	800b728 <vPortExitCritical>
    taskENTER_CRITICAL();
 800ba4c:	f7ff fe5e 	bl	800b70c <vPortEnterCritical>
        int8_t cRxLock = pxQueue->cRxLock;
 800ba50:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
                if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ba54:	f104 0610 	add.w	r6, r4, #16
        int8_t cRxLock = pxQueue->cRxLock;
 800ba58:	b26d      	sxtb	r5, r5
        while( cRxLock > queueLOCKED_UNMODIFIED )
 800ba5a:	2d00      	cmp	r5, #0
 800ba5c:	dc12      	bgt.n	800ba84 <prvUnlockQueue+0x58>
        pxQueue->cRxLock = queueUNLOCKED;
 800ba5e:	23ff      	movs	r3, #255	@ 0xff
 800ba60:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 800ba64:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    taskEXIT_CRITICAL();
 800ba68:	f7ff be5e 	b.w	800b728 <vPortExitCritical>
                    if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ba6c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800ba6e:	2b00      	cmp	r3, #0
 800ba70:	d0e7      	beq.n	800ba42 <prvUnlockQueue+0x16>
                        if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ba72:	4630      	mov	r0, r6
 800ba74:	f000 ff88 	bl	800c988 <xTaskRemoveFromEventList>
 800ba78:	b108      	cbz	r0, 800ba7e <prvUnlockQueue+0x52>
                            vTaskMissedYield();
 800ba7a:	f001 f81f 	bl	800cabc <vTaskMissedYield>
            --cTxLock;
 800ba7e:	3d01      	subs	r5, #1
 800ba80:	b26d      	sxtb	r5, r5
 800ba82:	e7dc      	b.n	800ba3e <prvUnlockQueue+0x12>
            if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ba84:	6923      	ldr	r3, [r4, #16]
 800ba86:	2b00      	cmp	r3, #0
 800ba88:	d0e9      	beq.n	800ba5e <prvUnlockQueue+0x32>
                if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ba8a:	4630      	mov	r0, r6
 800ba8c:	f000 ff7c 	bl	800c988 <xTaskRemoveFromEventList>
 800ba90:	b108      	cbz	r0, 800ba96 <prvUnlockQueue+0x6a>
                    vTaskMissedYield();
 800ba92:	f001 f813 	bl	800cabc <vTaskMissedYield>
                --cRxLock;
 800ba96:	3d01      	subs	r5, #1
 800ba98:	b26d      	sxtb	r5, r5
 800ba9a:	e7de      	b.n	800ba5a <prvUnlockQueue+0x2e>

0800ba9c <xQueueGenericReset>:
{
 800ba9c:	b570      	push	{r4, r5, r6, lr}
 800ba9e:	460e      	mov	r6, r1
    configASSERT( pxQueue );
 800baa0:	4604      	mov	r4, r0
 800baa2:	b910      	cbnz	r0, 800baaa <xQueueGenericReset+0xe>
 800baa4:	f7ff ff0e 	bl	800b8c4 <ulSetInterruptMask>
 800baa8:	e7fe      	b.n	800baa8 <xQueueGenericReset+0xc>
        ( pxQueue->uxLength >= 1U ) &&
 800baaa:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
    if( ( pxQueue != NULL ) &&
 800baac:	b365      	cbz	r5, 800bb08 <xQueueGenericReset+0x6c>
        ( ( SIZE_MAX / pxQueue->uxLength ) >= pxQueue->uxItemSize ) )
 800baae:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800bab0:	fba3 3505 	umull	r3, r5, r3, r5
 800bab4:	bb45      	cbnz	r5, 800bb08 <xQueueGenericReset+0x6c>
        taskENTER_CRITICAL();
 800bab6:	f7ff fe29 	bl	800b70c <vPortEnterCritical>
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800baba:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 800babe:	434b      	muls	r3, r1
 800bac0:	6822      	ldr	r2, [r4, #0]
            pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800bac2:	63a5      	str	r5, [r4, #56]	@ 0x38
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800bac4:	18d0      	adds	r0, r2, r3
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800bac6:	1a5b      	subs	r3, r3, r1
            pxQueue->pcWriteTo = pxQueue->pcHead;
 800bac8:	6062      	str	r2, [r4, #4]
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800baca:	441a      	add	r2, r3
            pxQueue->cRxLock = queueUNLOCKED;
 800bacc:	23ff      	movs	r3, #255	@ 0xff
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800bace:	60a0      	str	r0, [r4, #8]
            pxQueue->cRxLock = queueUNLOCKED;
 800bad0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800bad4:	60e2      	str	r2, [r4, #12]
            pxQueue->cTxLock = queueUNLOCKED;
 800bad6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
            if( xNewQueue == pdFALSE )
 800bada:	b966      	cbnz	r6, 800baf6 <xQueueGenericReset+0x5a>
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800badc:	6923      	ldr	r3, [r4, #16]
 800bade:	b133      	cbz	r3, 800baee <xQueueGenericReset+0x52>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800bae0:	f104 0010 	add.w	r0, r4, #16
 800bae4:	f000 ff50 	bl	800c988 <xTaskRemoveFromEventList>
 800bae8:	b108      	cbz	r0, 800baee <xQueueGenericReset+0x52>
                        queueYIELD_IF_USING_PREEMPTION();
 800baea:	f7ff fe03 	bl	800b6f4 <vPortYield>
        taskEXIT_CRITICAL();
 800baee:	f7ff fe1b 	bl	800b728 <vPortExitCritical>
}
 800baf2:	2001      	movs	r0, #1
 800baf4:	bd70      	pop	{r4, r5, r6, pc}
                vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800baf6:	f104 0010 	add.w	r0, r4, #16
 800bafa:	f7ff fd9f 	bl	800b63c <vListInitialise>
                vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800bafe:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800bb02:	f7ff fd9b 	bl	800b63c <vListInitialise>
 800bb06:	e7f2      	b.n	800baee <xQueueGenericReset+0x52>
    configASSERT( xReturn != pdFAIL );
 800bb08:	f7ff fedc 	bl	800b8c4 <ulSetInterruptMask>
 800bb0c:	e7fe      	b.n	800bb0c <xQueueGenericReset+0x70>

0800bb0e <xQueueGenericCreateStatic>:
    {
 800bb0e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bb10:	460d      	mov	r5, r1
        configASSERT( pxStaticQueue );
 800bb12:	461c      	mov	r4, r3
 800bb14:	b913      	cbnz	r3, 800bb1c <xQueueGenericCreateStatic+0xe>
 800bb16:	f7ff fed5 	bl	800b8c4 <ulSetInterruptMask>
 800bb1a:	e7fe      	b.n	800bb1a <xQueueGenericCreateStatic+0xc>
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
 800bb1c:	b108      	cbz	r0, 800bb22 <xQueueGenericCreateStatic+0x14>
            ( pxStaticQueue != NULL ) &&
 800bb1e:	b11a      	cbz	r2, 800bb28 <xQueueGenericCreateStatic+0x1a>
            ( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) ) &&
 800bb20:	b921      	cbnz	r1, 800bb2c <xQueueGenericCreateStatic+0x1e>
            configASSERT( pxNewQueue );
 800bb22:	f7ff fecf 	bl	800b8c4 <ulSetInterruptMask>
 800bb26:	e7fe      	b.n	800bb26 <xQueueGenericCreateStatic+0x18>
            ( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) ) )
 800bb28:	2900      	cmp	r1, #0
 800bb2a:	d1fa      	bne.n	800bb22 <xQueueGenericCreateStatic+0x14>
                    volatile size_t xSize = sizeof( StaticQueue_t );
 800bb2c:	2350      	movs	r3, #80	@ 0x50
 800bb2e:	9301      	str	r3, [sp, #4]
                    configASSERT( xSize == sizeof( Queue_t ) ); /* LCOV_EXCL_BR_LINE */
 800bb30:	9b01      	ldr	r3, [sp, #4]
 800bb32:	2b50      	cmp	r3, #80	@ 0x50
 800bb34:	d002      	beq.n	800bb3c <xQueueGenericCreateStatic+0x2e>
 800bb36:	f7ff fec5 	bl	800b8c4 <ulSetInterruptMask>
 800bb3a:	e7fe      	b.n	800bb3a <xQueueGenericCreateStatic+0x2c>
                    pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800bb3c:	2101      	movs	r1, #1
        pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800bb3e:	2d00      	cmp	r5, #0
 800bb40:	bf08      	it	eq
 800bb42:	4622      	moveq	r2, r4
    pxNewQueue->uxItemSize = uxItemSize;
 800bb44:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
                    pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800bb48:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800bb4c:	4620      	mov	r0, r4
 800bb4e:	6022      	str	r2, [r4, #0]
                    ( void ) xSize;                             /* Keeps lint quiet when configASSERT() is not defined. */
 800bb50:	9b01      	ldr	r3, [sp, #4]
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800bb52:	f7ff ffa3 	bl	800ba9c <xQueueGenericReset>
    }
 800bb56:	4620      	mov	r0, r4
            pxNewQueue->ucQueueType = ucQueueType;
 800bb58:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800bb5c:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
    }
 800bb60:	b003      	add	sp, #12
 800bb62:	bd30      	pop	{r4, r5, pc}

0800bb64 <xQueueGenericCreate>:
    {
 800bb64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bb68:	460d      	mov	r5, r1
 800bb6a:	4617      	mov	r7, r2
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
 800bb6c:	4606      	mov	r6, r0
 800bb6e:	b300      	cbz	r0, 800bbb2 <xQueueGenericCreate+0x4e>
            ( ( SIZE_MAX / uxQueueLength ) >= uxItemSize ) &&
 800bb70:	fba1 3800 	umull	r3, r8, r1, r0
 800bb74:	f1b8 0f00 	cmp.w	r8, #0
 800bb78:	d11b      	bne.n	800bbb2 <xQueueGenericCreate+0x4e>
            ( ( SIZE_MAX - sizeof( Queue_t ) ) >= ( uxQueueLength * uxItemSize ) ) )
 800bb7a:	4348      	muls	r0, r1
            ( ( SIZE_MAX / uxQueueLength ) >= uxItemSize ) &&
 800bb7c:	f110 0f51 	cmn.w	r0, #81	@ 0x51
 800bb80:	d817      	bhi.n	800bbb2 <xQueueGenericCreate+0x4e>
            pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800bb82:	3050      	adds	r0, #80	@ 0x50
 800bb84:	f001 fa30 	bl	800cfe8 <pvPortMalloc>
            if( pxNewQueue != NULL )
 800bb88:	4604      	mov	r4, r0
 800bb8a:	b168      	cbz	r0, 800bba8 <xQueueGenericCreate+0x44>
                        pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800bb8c:	f880 8046 	strb.w	r8, [r0, #70]	@ 0x46
    if( uxItemSize == ( UBaseType_t ) 0 )
 800bb90:	b16d      	cbz	r5, 800bbae <xQueueGenericCreate+0x4a>
                pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800bb92:	f100 0350 	add.w	r3, r0, #80	@ 0x50
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800bb96:	2101      	movs	r1, #1
 800bb98:	4620      	mov	r0, r4
    pxNewQueue->uxItemSize = uxItemSize;
 800bb9a:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 800bb9e:	6023      	str	r3, [r4, #0]
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800bba0:	f7ff ff7c 	bl	800ba9c <xQueueGenericReset>
            pxNewQueue->ucQueueType = ucQueueType;
 800bba4:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
    }
 800bba8:	4620      	mov	r0, r4
 800bbaa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800bbae:	4603      	mov	r3, r0
 800bbb0:	e7f1      	b.n	800bb96 <xQueueGenericCreate+0x32>
            configASSERT( pxNewQueue );
 800bbb2:	f7ff fe87 	bl	800b8c4 <ulSetInterruptMask>
 800bbb6:	e7fe      	b.n	800bbb6 <xQueueGenericCreate+0x52>

0800bbb8 <xQueueCreateCountingSemaphoreStatic>:
    {
 800bbb8:	b513      	push	{r0, r1, r4, lr}
 800bbba:	4613      	mov	r3, r2
 800bbbc:	460c      	mov	r4, r1
        if( ( uxMaxCount != 0 ) &&
 800bbbe:	b158      	cbz	r0, 800bbd8 <xQueueCreateCountingSemaphoreStatic+0x20>
 800bbc0:	4288      	cmp	r0, r1
 800bbc2:	d309      	bcc.n	800bbd8 <xQueueCreateCountingSemaphoreStatic+0x20>
            xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800bbc4:	2202      	movs	r2, #2
 800bbc6:	9200      	str	r2, [sp, #0]
 800bbc8:	2200      	movs	r2, #0
 800bbca:	4611      	mov	r1, r2
 800bbcc:	f7ff ff9f 	bl	800bb0e <xQueueGenericCreateStatic>
            if( xHandle != NULL )
 800bbd0:	b100      	cbz	r0, 800bbd4 <xQueueCreateCountingSemaphoreStatic+0x1c>
                ( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800bbd2:	6384      	str	r4, [r0, #56]	@ 0x38
    }
 800bbd4:	b002      	add	sp, #8
 800bbd6:	bd10      	pop	{r4, pc}
            configASSERT( xHandle );
 800bbd8:	f7ff fe74 	bl	800b8c4 <ulSetInterruptMask>
 800bbdc:	e7fe      	b.n	800bbdc <xQueueCreateCountingSemaphoreStatic+0x24>

0800bbde <xQueueCreateCountingSemaphore>:
    {
 800bbde:	b510      	push	{r4, lr}
 800bbe0:	460c      	mov	r4, r1
        if( ( uxMaxCount != 0 ) &&
 800bbe2:	b140      	cbz	r0, 800bbf6 <xQueueCreateCountingSemaphore+0x18>
 800bbe4:	4288      	cmp	r0, r1
 800bbe6:	d306      	bcc.n	800bbf6 <xQueueCreateCountingSemaphore+0x18>
            xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800bbe8:	2202      	movs	r2, #2
 800bbea:	2100      	movs	r1, #0
 800bbec:	f7ff ffba 	bl	800bb64 <xQueueGenericCreate>
            if( xHandle != NULL )
 800bbf0:	b100      	cbz	r0, 800bbf4 <xQueueCreateCountingSemaphore+0x16>
                ( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800bbf2:	6384      	str	r4, [r0, #56]	@ 0x38
    }
 800bbf4:	bd10      	pop	{r4, pc}
            configASSERT( xHandle );
 800bbf6:	f7ff fe65 	bl	800b8c4 <ulSetInterruptMask>
 800bbfa:	e7fe      	b.n	800bbfa <xQueueCreateCountingSemaphore+0x1c>

0800bbfc <xQueueGenericSend>:
{
 800bbfc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800bc00:	460f      	mov	r7, r1
 800bc02:	461e      	mov	r6, r3
    configASSERT( pxQueue );
 800bc04:	4604      	mov	r4, r0
{
 800bc06:	9201      	str	r2, [sp, #4]
    configASSERT( pxQueue );
 800bc08:	b910      	cbnz	r0, 800bc10 <xQueueGenericSend+0x14>
 800bc0a:	f7ff fe5b 	bl	800b8c4 <ulSetInterruptMask>
 800bc0e:	e7fe      	b.n	800bc0e <xQueueGenericSend+0x12>
    configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800bc10:	b921      	cbnz	r1, 800bc1c <xQueueGenericSend+0x20>
 800bc12:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800bc14:	b113      	cbz	r3, 800bc1c <xQueueGenericSend+0x20>
 800bc16:	f7ff fe55 	bl	800b8c4 <ulSetInterruptMask>
 800bc1a:	e7fe      	b.n	800bc1a <xQueueGenericSend+0x1e>
    configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800bc1c:	2e02      	cmp	r6, #2
 800bc1e:	d105      	bne.n	800bc2c <xQueueGenericSend+0x30>
 800bc20:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800bc22:	2b01      	cmp	r3, #1
 800bc24:	d002      	beq.n	800bc2c <xQueueGenericSend+0x30>
 800bc26:	f7ff fe4d 	bl	800b8c4 <ulSetInterruptMask>
 800bc2a:	e7fe      	b.n	800bc2a <xQueueGenericSend+0x2e>
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800bc2c:	f000 ff4c 	bl	800cac8 <xTaskGetSchedulerState>
 800bc30:	4605      	mov	r5, r0
 800bc32:	b1f0      	cbz	r0, 800bc72 <xQueueGenericSend+0x76>
 800bc34:	2500      	movs	r5, #0
        prvLockQueue( pxQueue );
 800bc36:	f04f 0800 	mov.w	r8, #0
        taskENTER_CRITICAL();
 800bc3a:	f7ff fd67 	bl	800b70c <vPortEnterCritical>
            if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800bc3e:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800bc40:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800bc42:	429a      	cmp	r2, r3
 800bc44:	d301      	bcc.n	800bc4a <xQueueGenericSend+0x4e>
 800bc46:	2e02      	cmp	r6, #2
 800bc48:	d119      	bne.n	800bc7e <xQueueGenericSend+0x82>
                        xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800bc4a:	4632      	mov	r2, r6
 800bc4c:	4639      	mov	r1, r7
 800bc4e:	4620      	mov	r0, r4
 800bc50:	f7ff fea3 	bl	800b99a <prvCopyDataToQueue>
                        if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800bc54:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800bc56:	b11b      	cbz	r3, 800bc60 <xQueueGenericSend+0x64>
                            if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800bc58:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800bc5c:	f000 fe94 	bl	800c988 <xTaskRemoveFromEventList>
 800bc60:	b108      	cbz	r0, 800bc66 <xQueueGenericSend+0x6a>
                                queueYIELD_IF_USING_PREEMPTION();
 800bc62:	f7ff fd47 	bl	800b6f4 <vPortYield>
                taskEXIT_CRITICAL();
 800bc66:	f7ff fd5f 	bl	800b728 <vPortExitCritical>
                return pdPASS;
 800bc6a:	2001      	movs	r0, #1
}
 800bc6c:	b004      	add	sp, #16
 800bc6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800bc72:	9b01      	ldr	r3, [sp, #4]
 800bc74:	2b00      	cmp	r3, #0
 800bc76:	d0de      	beq.n	800bc36 <xQueueGenericSend+0x3a>
 800bc78:	f7ff fe24 	bl	800b8c4 <ulSetInterruptMask>
 800bc7c:	e7fe      	b.n	800bc7c <xQueueGenericSend+0x80>
                if( xTicksToWait == ( TickType_t ) 0 )
 800bc7e:	9b01      	ldr	r3, [sp, #4]
 800bc80:	b91b      	cbnz	r3, 800bc8a <xQueueGenericSend+0x8e>
                    taskEXIT_CRITICAL();
 800bc82:	f7ff fd51 	bl	800b728 <vPortExitCritical>
                    return errQUEUE_FULL;
 800bc86:	2000      	movs	r0, #0
 800bc88:	e7f0      	b.n	800bc6c <xQueueGenericSend+0x70>
                else if( xEntryTimeSet == pdFALSE )
 800bc8a:	b915      	cbnz	r5, 800bc92 <xQueueGenericSend+0x96>
                    vTaskInternalSetTimeOutState( &xTimeOut );
 800bc8c:	a802      	add	r0, sp, #8
 800bc8e:	f000 fed9 	bl	800ca44 <vTaskInternalSetTimeOutState>
        taskEXIT_CRITICAL();
 800bc92:	f7ff fd49 	bl	800b728 <vPortExitCritical>
        vTaskSuspendAll();
 800bc96:	f000 fc39 	bl	800c50c <vTaskSuspendAll>
        prvLockQueue( pxQueue );
 800bc9a:	f7ff fd37 	bl	800b70c <vPortEnterCritical>
 800bc9e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800bca2:	2bff      	cmp	r3, #255	@ 0xff
 800bca4:	bf08      	it	eq
 800bca6:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800bcaa:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800bcae:	2bff      	cmp	r3, #255	@ 0xff
 800bcb0:	bf08      	it	eq
 800bcb2:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 800bcb6:	f7ff fd37 	bl	800b728 <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800bcba:	a901      	add	r1, sp, #4
 800bcbc:	a802      	add	r0, sp, #8
 800bcbe:	f000 fecd 	bl	800ca5c <xTaskCheckForTimeOut>
 800bcc2:	b9f0      	cbnz	r0, 800bd02 <xQueueGenericSend+0x106>

static BaseType_t prvIsQueueFull( const Queue_t * pxQueue )
{
    BaseType_t xReturn;

    taskENTER_CRITICAL();
 800bcc4:	f7ff fd22 	bl	800b70c <vPortEnterCritical>
    {
        if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800bcc8:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800bcca:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800bccc:	429a      	cmp	r2, r3
 800bcce:	d10f      	bne.n	800bcf0 <xQueueGenericSend+0xf4>
        else
        {
            xReturn = pdFALSE;
        }
    }
    taskEXIT_CRITICAL();
 800bcd0:	f7ff fd2a 	bl	800b728 <vPortExitCritical>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800bcd4:	9901      	ldr	r1, [sp, #4]
 800bcd6:	f104 0010 	add.w	r0, r4, #16
 800bcda:	f000 fe19 	bl	800c910 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
 800bcde:	4620      	mov	r0, r4
 800bce0:	f7ff fea4 	bl	800ba2c <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
 800bce4:	f000 fcd0 	bl	800c688 <xTaskResumeAll>
 800bce8:	b948      	cbnz	r0, 800bcfe <xQueueGenericSend+0x102>
                    portYIELD_WITHIN_API();
 800bcea:	f7ff fd03 	bl	800b6f4 <vPortYield>
 800bcee:	e006      	b.n	800bcfe <xQueueGenericSend+0x102>
    taskEXIT_CRITICAL();
 800bcf0:	f7ff fd1a 	bl	800b728 <vPortExitCritical>
                prvUnlockQueue( pxQueue );
 800bcf4:	4620      	mov	r0, r4
 800bcf6:	f7ff fe99 	bl	800ba2c <prvUnlockQueue>
                ( void ) xTaskResumeAll();
 800bcfa:	f000 fcc5 	bl	800c688 <xTaskResumeAll>
 800bcfe:	2501      	movs	r5, #1
 800bd00:	e79b      	b.n	800bc3a <xQueueGenericSend+0x3e>
            prvUnlockQueue( pxQueue );
 800bd02:	4620      	mov	r0, r4
 800bd04:	f7ff fe92 	bl	800ba2c <prvUnlockQueue>
            ( void ) xTaskResumeAll();
 800bd08:	f000 fcbe 	bl	800c688 <xTaskResumeAll>
            return errQUEUE_FULL;
 800bd0c:	e7bb      	b.n	800bc86 <xQueueGenericSend+0x8a>

0800bd0e <xQueueGenericSendFromISR>:
{
 800bd0e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800bd12:	4689      	mov	r9, r1
 800bd14:	4617      	mov	r7, r2
 800bd16:	461e      	mov	r6, r3
    configASSERT( pxQueue );
 800bd18:	4604      	mov	r4, r0
 800bd1a:	b910      	cbnz	r0, 800bd22 <xQueueGenericSendFromISR+0x14>
 800bd1c:	f7ff fdd2 	bl	800b8c4 <ulSetInterruptMask>
 800bd20:	e7fe      	b.n	800bd20 <xQueueGenericSendFromISR+0x12>
    configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800bd22:	b921      	cbnz	r1, 800bd2e <xQueueGenericSendFromISR+0x20>
 800bd24:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800bd26:	b113      	cbz	r3, 800bd2e <xQueueGenericSendFromISR+0x20>
 800bd28:	f7ff fdcc 	bl	800b8c4 <ulSetInterruptMask>
 800bd2c:	e7fe      	b.n	800bd2c <xQueueGenericSendFromISR+0x1e>
    configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800bd2e:	2e02      	cmp	r6, #2
 800bd30:	d105      	bne.n	800bd3e <xQueueGenericSendFromISR+0x30>
 800bd32:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800bd34:	2b01      	cmp	r3, #1
 800bd36:	d002      	beq.n	800bd3e <xQueueGenericSendFromISR+0x30>
 800bd38:	f7ff fdc4 	bl	800b8c4 <ulSetInterruptMask>
 800bd3c:	e7fe      	b.n	800bd3c <xQueueGenericSendFromISR+0x2e>
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 800bd3e:	f7ff fdc1 	bl	800b8c4 <ulSetInterruptMask>
        if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800bd42:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800bd44:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 800bd46:	4680      	mov	r8, r0
        if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800bd48:	429a      	cmp	r2, r3
 800bd4a:	d301      	bcc.n	800bd50 <xQueueGenericSendFromISR+0x42>
 800bd4c:	2e02      	cmp	r6, #2
 800bd4e:	d125      	bne.n	800bd9c <xQueueGenericSendFromISR+0x8e>
            const int8_t cTxLock = pxQueue->cTxLock;
 800bd50:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
            ( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800bd54:	4632      	mov	r2, r6
 800bd56:	4649      	mov	r1, r9
 800bd58:	4620      	mov	r0, r4
            const int8_t cTxLock = pxQueue->cTxLock;
 800bd5a:	b26d      	sxtb	r5, r5
            const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800bd5c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
            ( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800bd5e:	f7ff fe1c 	bl	800b99a <prvCopyDataToQueue>
            if( cTxLock == queueUNLOCKED )
 800bd62:	1c6b      	adds	r3, r5, #1
 800bd64:	d110      	bne.n	800bd88 <xQueueGenericSendFromISR+0x7a>
                        if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800bd66:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800bd68:	b13b      	cbz	r3, 800bd7a <xQueueGenericSendFromISR+0x6c>
                            if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800bd6a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800bd6e:	f000 fe0b 	bl	800c988 <xTaskRemoveFromEventList>
 800bd72:	b110      	cbz	r0, 800bd7a <xQueueGenericSendFromISR+0x6c>
                                if( pxHigherPriorityTaskWoken != NULL )
 800bd74:	b10f      	cbz	r7, 800bd7a <xQueueGenericSendFromISR+0x6c>
                                    *pxHigherPriorityTaskWoken = pdTRUE;
 800bd76:	2301      	movs	r3, #1
 800bd78:	603b      	str	r3, [r7, #0]
            xReturn = pdPASS;
 800bd7a:	2401      	movs	r4, #1
    portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 800bd7c:	4640      	mov	r0, r8
 800bd7e:	f7ff fdac 	bl	800b8da <vClearInterruptMask>
}
 800bd82:	4620      	mov	r0, r4
 800bd84:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                configASSERT( cTxLock != queueINT8_MAX );
 800bd88:	2d7f      	cmp	r5, #127	@ 0x7f
 800bd8a:	d102      	bne.n	800bd92 <xQueueGenericSendFromISR+0x84>
 800bd8c:	f7ff fd9a 	bl	800b8c4 <ulSetInterruptMask>
 800bd90:	e7fe      	b.n	800bd90 <xQueueGenericSendFromISR+0x82>
                pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800bd92:	3501      	adds	r5, #1
 800bd94:	b26d      	sxtb	r5, r5
 800bd96:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 800bd9a:	e7ee      	b.n	800bd7a <xQueueGenericSendFromISR+0x6c>
            xReturn = errQUEUE_FULL;
 800bd9c:	2400      	movs	r4, #0
 800bd9e:	e7ed      	b.n	800bd7c <xQueueGenericSendFromISR+0x6e>

0800bda0 <xQueueGiveFromISR>:
{
 800bda0:	b570      	push	{r4, r5, r6, lr}
 800bda2:	460d      	mov	r5, r1
    configASSERT( pxQueue );
 800bda4:	4604      	mov	r4, r0
 800bda6:	b910      	cbnz	r0, 800bdae <xQueueGiveFromISR+0xe>
 800bda8:	f7ff fd8c 	bl	800b8c4 <ulSetInterruptMask>
 800bdac:	e7fe      	b.n	800bdac <xQueueGiveFromISR+0xc>
    configASSERT( pxQueue->uxItemSize == 0 );
 800bdae:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800bdb0:	b113      	cbz	r3, 800bdb8 <xQueueGiveFromISR+0x18>
 800bdb2:	f7ff fd87 	bl	800b8c4 <ulSetInterruptMask>
 800bdb6:	e7fe      	b.n	800bdb6 <xQueueGiveFromISR+0x16>
    configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800bdb8:	6803      	ldr	r3, [r0, #0]
 800bdba:	b923      	cbnz	r3, 800bdc6 <xQueueGiveFromISR+0x26>
 800bdbc:	6883      	ldr	r3, [r0, #8]
 800bdbe:	b113      	cbz	r3, 800bdc6 <xQueueGiveFromISR+0x26>
 800bdc0:	f7ff fd80 	bl	800b8c4 <ulSetInterruptMask>
 800bdc4:	e7fe      	b.n	800bdc4 <xQueueGiveFromISR+0x24>
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 800bdc6:	f7ff fd7d 	bl	800b8c4 <ulSetInterruptMask>
        const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800bdca:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
        if( uxMessagesWaiting < pxQueue->uxLength )
 800bdcc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 800bdce:	4606      	mov	r6, r0
        if( uxMessagesWaiting < pxQueue->uxLength )
 800bdd0:	4293      	cmp	r3, r2
 800bdd2:	d920      	bls.n	800be16 <xQueueGiveFromISR+0x76>
            const int8_t cTxLock = pxQueue->cTxLock;
 800bdd4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
            pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800bdd8:	3201      	adds	r2, #1
            if( cTxLock == queueUNLOCKED )
 800bdda:	29ff      	cmp	r1, #255	@ 0xff
            const int8_t cTxLock = pxQueue->cTxLock;
 800bddc:	b24b      	sxtb	r3, r1
            pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800bdde:	63a2      	str	r2, [r4, #56]	@ 0x38
            if( cTxLock == queueUNLOCKED )
 800bde0:	d10f      	bne.n	800be02 <xQueueGiveFromISR+0x62>
                        if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800bde2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800bde4:	b13b      	cbz	r3, 800bdf6 <xQueueGiveFromISR+0x56>
                            if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800bde6:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800bdea:	f000 fdcd 	bl	800c988 <xTaskRemoveFromEventList>
 800bdee:	b110      	cbz	r0, 800bdf6 <xQueueGiveFromISR+0x56>
                                if( pxHigherPriorityTaskWoken != NULL )
 800bdf0:	b10d      	cbz	r5, 800bdf6 <xQueueGiveFromISR+0x56>
                                    *pxHigherPriorityTaskWoken = pdTRUE;
 800bdf2:	2301      	movs	r3, #1
 800bdf4:	602b      	str	r3, [r5, #0]
            xReturn = pdPASS;
 800bdf6:	2401      	movs	r4, #1
    portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 800bdf8:	4630      	mov	r0, r6
 800bdfa:	f7ff fd6e 	bl	800b8da <vClearInterruptMask>
}
 800bdfe:	4620      	mov	r0, r4
 800be00:	bd70      	pop	{r4, r5, r6, pc}
                configASSERT( cTxLock != queueINT8_MAX );
 800be02:	2b7f      	cmp	r3, #127	@ 0x7f
 800be04:	d102      	bne.n	800be0c <xQueueGiveFromISR+0x6c>
 800be06:	f7ff fd5d 	bl	800b8c4 <ulSetInterruptMask>
 800be0a:	e7fe      	b.n	800be0a <xQueueGiveFromISR+0x6a>
                pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800be0c:	3301      	adds	r3, #1
 800be0e:	b25b      	sxtb	r3, r3
 800be10:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800be14:	e7ef      	b.n	800bdf6 <xQueueGiveFromISR+0x56>
            xReturn = errQUEUE_FULL;
 800be16:	2400      	movs	r4, #0
 800be18:	e7ee      	b.n	800bdf8 <xQueueGiveFromISR+0x58>

0800be1a <xQueueReceive>:
{
 800be1a:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800be1e:	460e      	mov	r6, r1
    configASSERT( ( pxQueue ) );
 800be20:	4604      	mov	r4, r0
{
 800be22:	9201      	str	r2, [sp, #4]
    configASSERT( ( pxQueue ) );
 800be24:	b910      	cbnz	r0, 800be2c <xQueueReceive+0x12>
 800be26:	f7ff fd4d 	bl	800b8c4 <ulSetInterruptMask>
 800be2a:	e7fe      	b.n	800be2a <xQueueReceive+0x10>
    configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800be2c:	b921      	cbnz	r1, 800be38 <xQueueReceive+0x1e>
 800be2e:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800be30:	b113      	cbz	r3, 800be38 <xQueueReceive+0x1e>
 800be32:	f7ff fd47 	bl	800b8c4 <ulSetInterruptMask>
 800be36:	e7fe      	b.n	800be36 <xQueueReceive+0x1c>
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800be38:	f000 fe46 	bl	800cac8 <xTaskGetSchedulerState>
 800be3c:	4605      	mov	r5, r0
 800be3e:	b1d8      	cbz	r0, 800be78 <xQueueReceive+0x5e>
 800be40:	2500      	movs	r5, #0
        prvLockQueue( pxQueue );
 800be42:	f04f 0800 	mov.w	r8, #0
        taskENTER_CRITICAL();
 800be46:	f7ff fc61 	bl	800b70c <vPortEnterCritical>
            const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800be4a:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800be4c:	b1d7      	cbz	r7, 800be84 <xQueueReceive+0x6a>
                prvCopyDataFromQueue( pxQueue, pvBuffer );
 800be4e:	4631      	mov	r1, r6
 800be50:	4620      	mov	r0, r4
                pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800be52:	3f01      	subs	r7, #1
                prvCopyDataFromQueue( pxQueue, pvBuffer );
 800be54:	f7ff fdd4 	bl	800ba00 <prvCopyDataFromQueue>
                pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800be58:	63a7      	str	r7, [r4, #56]	@ 0x38
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800be5a:	6923      	ldr	r3, [r4, #16]
 800be5c:	b133      	cbz	r3, 800be6c <xQueueReceive+0x52>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800be5e:	f104 0010 	add.w	r0, r4, #16
 800be62:	f000 fd91 	bl	800c988 <xTaskRemoveFromEventList>
 800be66:	b108      	cbz	r0, 800be6c <xQueueReceive+0x52>
                        queueYIELD_IF_USING_PREEMPTION();
 800be68:	f7ff fc44 	bl	800b6f4 <vPortYield>
                taskEXIT_CRITICAL();
 800be6c:	f7ff fc5c 	bl	800b728 <vPortExitCritical>
                return pdPASS;
 800be70:	2001      	movs	r0, #1
}
 800be72:	b004      	add	sp, #16
 800be74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800be78:	9b01      	ldr	r3, [sp, #4]
 800be7a:	2b00      	cmp	r3, #0
 800be7c:	d0e1      	beq.n	800be42 <xQueueReceive+0x28>
 800be7e:	f7ff fd21 	bl	800b8c4 <ulSetInterruptMask>
 800be82:	e7fe      	b.n	800be82 <xQueueReceive+0x68>
                if( xTicksToWait == ( TickType_t ) 0 )
 800be84:	9b01      	ldr	r3, [sp, #4]
 800be86:	b91b      	cbnz	r3, 800be90 <xQueueReceive+0x76>
                    taskEXIT_CRITICAL();
 800be88:	f7ff fc4e 	bl	800b728 <vPortExitCritical>
                    return errQUEUE_EMPTY;
 800be8c:	2000      	movs	r0, #0
 800be8e:	e7f0      	b.n	800be72 <xQueueReceive+0x58>
                else if( xEntryTimeSet == pdFALSE )
 800be90:	b915      	cbnz	r5, 800be98 <xQueueReceive+0x7e>
                    vTaskInternalSetTimeOutState( &xTimeOut );
 800be92:	a802      	add	r0, sp, #8
 800be94:	f000 fdd6 	bl	800ca44 <vTaskInternalSetTimeOutState>
        taskEXIT_CRITICAL();
 800be98:	f7ff fc46 	bl	800b728 <vPortExitCritical>
        vTaskSuspendAll();
 800be9c:	f000 fb36 	bl	800c50c <vTaskSuspendAll>
        prvLockQueue( pxQueue );
 800bea0:	f7ff fc34 	bl	800b70c <vPortEnterCritical>
 800bea4:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800bea8:	2bff      	cmp	r3, #255	@ 0xff
 800beaa:	bf08      	it	eq
 800beac:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800beb0:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800beb4:	2bff      	cmp	r3, #255	@ 0xff
 800beb6:	bf08      	it	eq
 800beb8:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 800bebc:	f7ff fc34 	bl	800b728 <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800bec0:	a901      	add	r1, sp, #4
 800bec2:	a802      	add	r0, sp, #8
 800bec4:	f000 fdca 	bl	800ca5c <xTaskCheckForTimeOut>
 800bec8:	b9c0      	cbnz	r0, 800befc <xQueueReceive+0xe2>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800beca:	4620      	mov	r0, r4
 800becc:	f7ff fd5a 	bl	800b984 <prvIsQueueEmpty>
 800bed0:	b170      	cbz	r0, 800bef0 <xQueueReceive+0xd6>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800bed2:	9901      	ldr	r1, [sp, #4]
 800bed4:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800bed8:	f000 fd1a 	bl	800c910 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
 800bedc:	4620      	mov	r0, r4
 800bede:	f7ff fda5 	bl	800ba2c <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
 800bee2:	f000 fbd1 	bl	800c688 <xTaskResumeAll>
 800bee6:	b908      	cbnz	r0, 800beec <xQueueReceive+0xd2>
                    portYIELD_WITHIN_API();
 800bee8:	f7ff fc04 	bl	800b6f4 <vPortYield>
 800beec:	2501      	movs	r5, #1
 800beee:	e7aa      	b.n	800be46 <xQueueReceive+0x2c>
                prvUnlockQueue( pxQueue );
 800bef0:	4620      	mov	r0, r4
 800bef2:	f7ff fd9b 	bl	800ba2c <prvUnlockQueue>
                ( void ) xTaskResumeAll();
 800bef6:	f000 fbc7 	bl	800c688 <xTaskResumeAll>
 800befa:	e7f7      	b.n	800beec <xQueueReceive+0xd2>
            prvUnlockQueue( pxQueue );
 800befc:	4620      	mov	r0, r4
 800befe:	f7ff fd95 	bl	800ba2c <prvUnlockQueue>
            ( void ) xTaskResumeAll();
 800bf02:	f000 fbc1 	bl	800c688 <xTaskResumeAll>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800bf06:	4620      	mov	r0, r4
 800bf08:	f7ff fd3c 	bl	800b984 <prvIsQueueEmpty>
 800bf0c:	2800      	cmp	r0, #0
 800bf0e:	d0ed      	beq.n	800beec <xQueueReceive+0xd2>
 800bf10:	e7bc      	b.n	800be8c <xQueueReceive+0x72>

0800bf12 <xQueueSemaphoreTake>:
{
 800bf12:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bf14:	b085      	sub	sp, #20
    configASSERT( ( pxQueue ) );
 800bf16:	4604      	mov	r4, r0
{
 800bf18:	9101      	str	r1, [sp, #4]
    configASSERT( ( pxQueue ) );
 800bf1a:	b910      	cbnz	r0, 800bf22 <xQueueSemaphoreTake+0x10>
 800bf1c:	f7ff fcd2 	bl	800b8c4 <ulSetInterruptMask>
 800bf20:	e7fe      	b.n	800bf20 <xQueueSemaphoreTake+0xe>
    configASSERT( pxQueue->uxItemSize == 0 );
 800bf22:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 800bf24:	b115      	cbz	r5, 800bf2c <xQueueSemaphoreTake+0x1a>
 800bf26:	f7ff fccd 	bl	800b8c4 <ulSetInterruptMask>
 800bf2a:	e7fe      	b.n	800bf2a <xQueueSemaphoreTake+0x18>
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800bf2c:	f000 fdcc 	bl	800cac8 <xTaskGetSchedulerState>
 800bf30:	4606      	mov	r6, r0
 800bf32:	b1e0      	cbz	r0, 800bf6e <xQueueSemaphoreTake+0x5c>
 800bf34:	462e      	mov	r6, r5
        prvLockQueue( pxQueue );
 800bf36:	2700      	movs	r7, #0
        taskENTER_CRITICAL();
 800bf38:	f7ff fbe8 	bl	800b70c <vPortEnterCritical>
            const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800bf3c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800bf3e:	b1e3      	cbz	r3, 800bf7a <xQueueSemaphoreTake+0x68>
                pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800bf40:	3b01      	subs	r3, #1
 800bf42:	63a3      	str	r3, [r4, #56]	@ 0x38
                        if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800bf44:	6823      	ldr	r3, [r4, #0]
 800bf46:	b913      	cbnz	r3, 800bf4e <xQueueSemaphoreTake+0x3c>
                            pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800bf48:	f000 fe98 	bl	800cc7c <pvTaskIncrementMutexHeldCount>
 800bf4c:	60a0      	str	r0, [r4, #8]
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800bf4e:	6923      	ldr	r3, [r4, #16]
 800bf50:	b133      	cbz	r3, 800bf60 <xQueueSemaphoreTake+0x4e>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800bf52:	f104 0010 	add.w	r0, r4, #16
 800bf56:	f000 fd17 	bl	800c988 <xTaskRemoveFromEventList>
 800bf5a:	b108      	cbz	r0, 800bf60 <xQueueSemaphoreTake+0x4e>
                        queueYIELD_IF_USING_PREEMPTION();
 800bf5c:	f7ff fbca 	bl	800b6f4 <vPortYield>
                taskEXIT_CRITICAL();
 800bf60:	f7ff fbe2 	bl	800b728 <vPortExitCritical>
                return pdPASS;
 800bf64:	2001      	movs	r0, #1
}
 800bf66:	b005      	add	sp, #20
 800bf68:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bf6a:	4635      	mov	r5, r6
 800bf6c:	e7e3      	b.n	800bf36 <xQueueSemaphoreTake+0x24>
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800bf6e:	9b01      	ldr	r3, [sp, #4]
 800bf70:	2b00      	cmp	r3, #0
 800bf72:	d0fa      	beq.n	800bf6a <xQueueSemaphoreTake+0x58>
 800bf74:	f7ff fca6 	bl	800b8c4 <ulSetInterruptMask>
 800bf78:	e7fe      	b.n	800bf78 <xQueueSemaphoreTake+0x66>
                if( xTicksToWait == ( TickType_t ) 0 )
 800bf7a:	9b01      	ldr	r3, [sp, #4]
 800bf7c:	b923      	cbnz	r3, 800bf88 <xQueueSemaphoreTake+0x76>
                            configASSERT( xInheritanceOccurred == pdFALSE );
 800bf7e:	2d00      	cmp	r5, #0
 800bf80:	d058      	beq.n	800c034 <xQueueSemaphoreTake+0x122>
 800bf82:	f7ff fc9f 	bl	800b8c4 <ulSetInterruptMask>
 800bf86:	e7fe      	b.n	800bf86 <xQueueSemaphoreTake+0x74>
                else if( xEntryTimeSet == pdFALSE )
 800bf88:	b916      	cbnz	r6, 800bf90 <xQueueSemaphoreTake+0x7e>
                    vTaskInternalSetTimeOutState( &xTimeOut );
 800bf8a:	a802      	add	r0, sp, #8
 800bf8c:	f000 fd5a 	bl	800ca44 <vTaskInternalSetTimeOutState>
        taskEXIT_CRITICAL();
 800bf90:	f7ff fbca 	bl	800b728 <vPortExitCritical>
        vTaskSuspendAll();
 800bf94:	f000 faba 	bl	800c50c <vTaskSuspendAll>
        prvLockQueue( pxQueue );
 800bf98:	f7ff fbb8 	bl	800b70c <vPortEnterCritical>
 800bf9c:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800bfa0:	2bff      	cmp	r3, #255	@ 0xff
 800bfa2:	bf08      	it	eq
 800bfa4:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 800bfa8:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800bfac:	2bff      	cmp	r3, #255	@ 0xff
 800bfae:	bf08      	it	eq
 800bfb0:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 800bfb4:	f7ff fbb8 	bl	800b728 <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800bfb8:	a901      	add	r1, sp, #4
 800bfba:	a802      	add	r0, sp, #8
 800bfbc:	f000 fd4e 	bl	800ca5c <xTaskCheckForTimeOut>
 800bfc0:	bb10      	cbnz	r0, 800c008 <xQueueSemaphoreTake+0xf6>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800bfc2:	4620      	mov	r0, r4
 800bfc4:	f7ff fcde 	bl	800b984 <prvIsQueueEmpty>
 800bfc8:	b1c0      	cbz	r0, 800bffc <xQueueSemaphoreTake+0xea>
                        if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800bfca:	6823      	ldr	r3, [r4, #0]
 800bfcc:	b93b      	cbnz	r3, 800bfde <xQueueSemaphoreTake+0xcc>
                            taskENTER_CRITICAL();
 800bfce:	f7ff fb9d 	bl	800b70c <vPortEnterCritical>
                                xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800bfd2:	68a0      	ldr	r0, [r4, #8]
 800bfd4:	f000 fd88 	bl	800cae8 <xTaskPriorityInherit>
 800bfd8:	4605      	mov	r5, r0
                            taskEXIT_CRITICAL();
 800bfda:	f7ff fba5 	bl	800b728 <vPortExitCritical>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800bfde:	9901      	ldr	r1, [sp, #4]
 800bfe0:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800bfe4:	f000 fc94 	bl	800c910 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
 800bfe8:	4620      	mov	r0, r4
 800bfea:	f7ff fd1f 	bl	800ba2c <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
 800bfee:	f000 fb4b 	bl	800c688 <xTaskResumeAll>
 800bff2:	b908      	cbnz	r0, 800bff8 <xQueueSemaphoreTake+0xe6>
                    portYIELD_WITHIN_API();
 800bff4:	f7ff fb7e 	bl	800b6f4 <vPortYield>
 800bff8:	2601      	movs	r6, #1
 800bffa:	e79d      	b.n	800bf38 <xQueueSemaphoreTake+0x26>
                prvUnlockQueue( pxQueue );
 800bffc:	4620      	mov	r0, r4
 800bffe:	f7ff fd15 	bl	800ba2c <prvUnlockQueue>
                ( void ) xTaskResumeAll();
 800c002:	f000 fb41 	bl	800c688 <xTaskResumeAll>
 800c006:	e7f7      	b.n	800bff8 <xQueueSemaphoreTake+0xe6>
            prvUnlockQueue( pxQueue );
 800c008:	4620      	mov	r0, r4
 800c00a:	f7ff fd0f 	bl	800ba2c <prvUnlockQueue>
            ( void ) xTaskResumeAll();
 800c00e:	f000 fb3b 	bl	800c688 <xTaskResumeAll>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800c012:	4620      	mov	r0, r4
 800c014:	f7ff fcb6 	bl	800b984 <prvIsQueueEmpty>
 800c018:	2800      	cmp	r0, #0
 800c01a:	d0ed      	beq.n	800bff8 <xQueueSemaphoreTake+0xe6>
                        if( xInheritanceOccurred != pdFALSE )
 800c01c:	b165      	cbz	r5, 800c038 <xQueueSemaphoreTake+0x126>
                            taskENTER_CRITICAL();
 800c01e:	f7ff fb75 	bl	800b70c <vPortEnterCritical>
        if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800c022:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800c024:	b119      	cbz	r1, 800c02e <xQueueSemaphoreTake+0x11c>
            uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800c026:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800c028:	6819      	ldr	r1, [r3, #0]
 800c02a:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
                                vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800c02e:	68a0      	ldr	r0, [r4, #8]
 800c030:	f000 fdde 	bl	800cbf0 <vTaskPriorityDisinheritAfterTimeout>
                            taskEXIT_CRITICAL();
 800c034:	f7ff fb78 	bl	800b728 <vPortExitCritical>
                    return errQUEUE_EMPTY;
 800c038:	2000      	movs	r0, #0
 800c03a:	e794      	b.n	800bf66 <xQueueSemaphoreTake+0x54>

0800c03c <xQueueReceiveFromISR>:
{
 800c03c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c040:	4689      	mov	r9, r1
 800c042:	4690      	mov	r8, r2
    configASSERT( pxQueue );
 800c044:	4604      	mov	r4, r0
 800c046:	b910      	cbnz	r0, 800c04e <xQueueReceiveFromISR+0x12>
 800c048:	f7ff fc3c 	bl	800b8c4 <ulSetInterruptMask>
 800c04c:	e7fe      	b.n	800c04c <xQueueReceiveFromISR+0x10>
    configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800c04e:	b921      	cbnz	r1, 800c05a <xQueueReceiveFromISR+0x1e>
 800c050:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800c052:	b113      	cbz	r3, 800c05a <xQueueReceiveFromISR+0x1e>
 800c054:	f7ff fc36 	bl	800b8c4 <ulSetInterruptMask>
 800c058:	e7fe      	b.n	800c058 <xQueueReceiveFromISR+0x1c>
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 800c05a:	f7ff fc33 	bl	800b8c4 <ulSetInterruptMask>
        const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800c05e:	6ba6      	ldr	r6, [r4, #56]	@ 0x38
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 800c060:	4607      	mov	r7, r0
        if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800c062:	b1c6      	cbz	r6, 800c096 <xQueueReceiveFromISR+0x5a>
            const int8_t cRxLock = pxQueue->cRxLock;
 800c064:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
            prvCopyDataFromQueue( pxQueue, pvBuffer );
 800c068:	4649      	mov	r1, r9
 800c06a:	4620      	mov	r0, r4
            const int8_t cRxLock = pxQueue->cRxLock;
 800c06c:	b26d      	sxtb	r5, r5
            prvCopyDataFromQueue( pxQueue, pvBuffer );
 800c06e:	f7ff fcc7 	bl	800ba00 <prvCopyDataFromQueue>
            pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800c072:	3e01      	subs	r6, #1
            if( cRxLock == queueUNLOCKED )
 800c074:	1c6b      	adds	r3, r5, #1
            pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800c076:	63a6      	str	r6, [r4, #56]	@ 0x38
            if( cRxLock == queueUNLOCKED )
 800c078:	d113      	bne.n	800c0a2 <xQueueReceiveFromISR+0x66>
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c07a:	6923      	ldr	r3, [r4, #16]
 800c07c:	b153      	cbz	r3, 800c094 <xQueueReceiveFromISR+0x58>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c07e:	f104 0010 	add.w	r0, r4, #16
 800c082:	f000 fc81 	bl	800c988 <xTaskRemoveFromEventList>
 800c086:	b128      	cbz	r0, 800c094 <xQueueReceiveFromISR+0x58>
                        if( pxHigherPriorityTaskWoken != NULL )
 800c088:	f1b8 0f00 	cmp.w	r8, #0
 800c08c:	d002      	beq.n	800c094 <xQueueReceiveFromISR+0x58>
                            *pxHigherPriorityTaskWoken = pdTRUE;
 800c08e:	2301      	movs	r3, #1
 800c090:	f8c8 3000 	str.w	r3, [r8]
            xReturn = pdPASS;
 800c094:	2601      	movs	r6, #1
    portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 800c096:	4638      	mov	r0, r7
 800c098:	f7ff fc1f 	bl	800b8da <vClearInterruptMask>
}
 800c09c:	4630      	mov	r0, r6
 800c09e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                configASSERT( cRxLock != queueINT8_MAX );
 800c0a2:	2d7f      	cmp	r5, #127	@ 0x7f
 800c0a4:	d102      	bne.n	800c0ac <xQueueReceiveFromISR+0x70>
 800c0a6:	f7ff fc0d 	bl	800b8c4 <ulSetInterruptMask>
 800c0aa:	e7fe      	b.n	800c0aa <xQueueReceiveFromISR+0x6e>
                pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800c0ac:	3501      	adds	r5, #1
 800c0ae:	b26d      	sxtb	r5, r5
 800c0b0:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 800c0b4:	e7ee      	b.n	800c094 <xQueueReceiveFromISR+0x58>
	...

0800c0b8 <vQueueAddToRegistry>:

#if ( configQUEUE_REGISTRY_SIZE > 0 )

    void vQueueAddToRegistry( QueueHandle_t xQueue,
                              const char * pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
    {
 800c0b8:	b570      	push	{r4, r5, r6, lr}
        UBaseType_t ux;

        configASSERT( xQueue );
 800c0ba:	b910      	cbnz	r0, 800c0c2 <vQueueAddToRegistry+0xa>
 800c0bc:	f7ff fc02 	bl	800b8c4 <ulSetInterruptMask>
 800c0c0:	e7fe      	b.n	800c0c0 <vQueueAddToRegistry+0x8>

        QueueRegistryItem_t * pxEntryToWrite = NULL;

        if( pcQueueName != NULL )
 800c0c2:	b1b9      	cbz	r1, 800c0f4 <vQueueAddToRegistry+0x3c>
        QueueRegistryItem_t * pxEntryToWrite = NULL;
 800c0c4:	2300      	movs	r3, #0
 800c0c6:	4a0c      	ldr	r2, [pc, #48]	@ (800c0f8 <vQueueAddToRegistry+0x40>)
        {
            /* See if there is an empty space in the registry.  A NULL name denotes
             * a free slot. */
            for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800c0c8:	461c      	mov	r4, r3
 800c0ca:	4615      	mov	r5, r2
            {
                /* Replace an existing entry if the queue is already in the registry. */
                if( xQueue == xQueueRegistry[ ux ].xHandle )
 800c0cc:	6856      	ldr	r6, [r2, #4]
 800c0ce:	4286      	cmp	r6, r0
 800c0d0:	d104      	bne.n	800c0dc <vQueueAddToRegistry+0x24>
                {
                    pxEntryToWrite = &( xQueueRegistry[ ux ] );
 800c0d2:	eb05 03c4 	add.w	r3, r5, r4, lsl #3

        if( pxEntryToWrite != NULL )
        {
            /* Store the information on this queue. */
            pxEntryToWrite->pcQueueName = pcQueueName;
            pxEntryToWrite->xHandle = xQueue;
 800c0d6:	e9c3 1000 	strd	r1, r0, [r3]

            traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
        }
    }
 800c0da:	e00b      	b.n	800c0f4 <vQueueAddToRegistry+0x3c>
                else if( ( pxEntryToWrite == NULL ) && ( xQueueRegistry[ ux ].pcQueueName == NULL ) )
 800c0dc:	b91b      	cbnz	r3, 800c0e6 <vQueueAddToRegistry+0x2e>
 800c0de:	6816      	ldr	r6, [r2, #0]
                    pxEntryToWrite = &( xQueueRegistry[ ux ] );
 800c0e0:	2e00      	cmp	r6, #0
 800c0e2:	bf08      	it	eq
 800c0e4:	4613      	moveq	r3, r2
            for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800c0e6:	3401      	adds	r4, #1
 800c0e8:	2c08      	cmp	r4, #8
 800c0ea:	f102 0208 	add.w	r2, r2, #8
 800c0ee:	d1ed      	bne.n	800c0cc <vQueueAddToRegistry+0x14>
        if( pxEntryToWrite != NULL )
 800c0f0:	2b00      	cmp	r3, #0
 800c0f2:	d1f0      	bne.n	800c0d6 <vQueueAddToRegistry+0x1e>
    }
 800c0f4:	bd70      	pop	{r4, r5, r6, pc}
 800c0f6:	bf00      	nop
 800c0f8:	2003f5b4 	.word	0x2003f5b4

0800c0fc <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

    void vQueueUnregisterQueue( QueueHandle_t xQueue )
    {
 800c0fc:	b510      	push	{r4, lr}
        UBaseType_t ux;

        configASSERT( xQueue );
 800c0fe:	b910      	cbnz	r0, 800c106 <vQueueUnregisterQueue+0xa>
 800c100:	f7ff fbe0 	bl	800b8c4 <ulSetInterruptMask>
 800c104:	e7fe      	b.n	800c104 <vQueueUnregisterQueue+0x8>

        /* See if the handle of the queue being unregistered in actually in the
         * registry. */
        for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800c106:	2300      	movs	r3, #0
        {
            if( xQueueRegistry[ ux ].xHandle == xQueue )
 800c108:	4a08      	ldr	r2, [pc, #32]	@ (800c12c <vQueueUnregisterQueue+0x30>)
 800c10a:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 800c10e:	00dc      	lsls	r4, r3, #3
 800c110:	4288      	cmp	r0, r1
 800c112:	d106      	bne.n	800c122 <vQueueUnregisterQueue+0x26>
            {
                /* Set the name to NULL to show that this slot if free again. */
                xQueueRegistry[ ux ].pcQueueName = NULL;
 800c114:	2100      	movs	r1, #0
 800c116:	4a06      	ldr	r2, [pc, #24]	@ (800c130 <vQueueUnregisterQueue+0x34>)
 800c118:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

                /* Set the handle to NULL to ensure the same queue handle cannot
                 * appear in the registry twice if it is added, removed, then
                 * added again. */
                xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800c11c:	4422      	add	r2, r4
 800c11e:	6051      	str	r1, [r2, #4]
            else
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
    } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800c120:	bd10      	pop	{r4, pc}
        for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800c122:	3301      	adds	r3, #1
 800c124:	2b08      	cmp	r3, #8
 800c126:	d1f0      	bne.n	800c10a <vQueueUnregisterQueue+0xe>
 800c128:	e7fa      	b.n	800c120 <vQueueUnregisterQueue+0x24>
 800c12a:	bf00      	nop
 800c12c:	2003f5b8 	.word	0x2003f5b8
 800c130:	2003f5b4 	.word	0x2003f5b4

0800c134 <vQueueDelete>:
{
 800c134:	b510      	push	{r4, lr}
    configASSERT( pxQueue );
 800c136:	4604      	mov	r4, r0
 800c138:	b910      	cbnz	r0, 800c140 <vQueueDelete+0xc>
 800c13a:	f7ff fbc3 	bl	800b8c4 <ulSetInterruptMask>
 800c13e:	e7fe      	b.n	800c13e <vQueueDelete+0xa>
            vQueueUnregisterQueue( pxQueue );
 800c140:	f7ff ffdc 	bl	800c0fc <vQueueUnregisterQueue>
            if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800c144:	f894 3046 	ldrb.w	r3, [r4, #70]	@ 0x46
 800c148:	b923      	cbnz	r3, 800c154 <vQueueDelete+0x20>
                vPortFree( pxQueue );
 800c14a:	4620      	mov	r0, r4
}
 800c14c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                vPortFree( pxQueue );
 800c150:	f000 bfd8 	b.w	800d104 <vPortFree>
}
 800c154:	bd10      	pop	{r4, pc}

0800c156 <vQueueWaitForMessageRestricted>:
#if ( configUSE_TIMERS == 1 )

    void vQueueWaitForMessageRestricted( QueueHandle_t xQueue,
                                         TickType_t xTicksToWait,
                                         const BaseType_t xWaitIndefinitely )
    {
 800c156:	b570      	push	{r4, r5, r6, lr}
 800c158:	4604      	mov	r4, r0
 800c15a:	460d      	mov	r5, r1
 800c15c:	4616      	mov	r6, r2
         *  will not actually cause the task to block, just place it on a blocked
         *  list.  It will not block until the scheduler is unlocked - at which
         *  time a yield will be performed.  If an item is added to the queue while
         *  the queue is locked, and the calling task blocks on the queue, then the
         *  calling task will be immediately unblocked when the queue is unlocked. */
        prvLockQueue( pxQueue );
 800c15e:	f7ff fad5 	bl	800b70c <vPortEnterCritical>
 800c162:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800c166:	2bff      	cmp	r3, #255	@ 0xff
 800c168:	bf04      	itt	eq
 800c16a:	2300      	moveq	r3, #0
 800c16c:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 800c170:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800c174:	2bff      	cmp	r3, #255	@ 0xff
 800c176:	bf04      	itt	eq
 800c178:	2300      	moveq	r3, #0
 800c17a:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 800c17e:	f7ff fad3 	bl	800b728 <vPortExitCritical>

        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800c182:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800c184:	b92b      	cbnz	r3, 800c192 <vQueueWaitForMessageRestricted+0x3c>
        {
            /* There is nothing in the queue, block for the specified period. */
            vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800c186:	4632      	mov	r2, r6
 800c188:	4629      	mov	r1, r5
 800c18a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800c18e:	f000 fbd3 	bl	800c938 <vTaskPlaceOnEventListRestricted>
        else
        {
            mtCOVERAGE_TEST_MARKER();
        }

        prvUnlockQueue( pxQueue );
 800c192:	4620      	mov	r0, r4
    }
 800c194:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        prvUnlockQueue( pxQueue );
 800c198:	f7ff bc48 	b.w	800ba2c <prvUnlockQueue>

0800c19c <prvAddNewTaskToReadyList>:
    }
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB )
{
 800c19c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c1a0:	4604      	mov	r4, r0
    /* Ensure interrupts don't access the task lists while the lists are being
     * updated. */
    taskENTER_CRITICAL();
 800c1a2:	f7ff fab3 	bl	800b70c <vPortEnterCritical>
    {
        uxCurrentNumberOfTasks++;
 800c1a6:	4b30      	ldr	r3, [pc, #192]	@ (800c268 <prvAddNewTaskToReadyList+0xcc>)

        if( pxCurrentTCB == NULL )
 800c1a8:	4e30      	ldr	r6, [pc, #192]	@ (800c26c <prvAddNewTaskToReadyList+0xd0>)
        uxCurrentNumberOfTasks++;
 800c1aa:	681a      	ldr	r2, [r3, #0]
 800c1ac:	4f30      	ldr	r7, [pc, #192]	@ (800c270 <prvAddNewTaskToReadyList+0xd4>)
 800c1ae:	3201      	adds	r2, #1
 800c1b0:	601a      	str	r2, [r3, #0]
        if( pxCurrentTCB == NULL )
 800c1b2:	6835      	ldr	r5, [r6, #0]
 800c1b4:	2d00      	cmp	r5, #0
 800c1b6:	d14a      	bne.n	800c24e <prvAddNewTaskToReadyList+0xb2>
        {
            /* There are no other tasks, or all the other tasks are in
             * the suspended state - make this the current task. */
            pxCurrentTCB = pxNewTCB;
 800c1b8:	6034      	str	r4, [r6, #0]

            if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800c1ba:	681b      	ldr	r3, [r3, #0]
 800c1bc:	2b01      	cmp	r3, #1
 800c1be:	d11f      	bne.n	800c200 <prvAddNewTaskToReadyList+0x64>
 800c1c0:	46b8      	mov	r8, r7
{
    UBaseType_t uxPriority;

    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
    {
        vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800c1c2:	4640      	mov	r0, r8
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800c1c4:	3501      	adds	r5, #1
        vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800c1c6:	f7ff fa39 	bl	800b63c <vListInitialise>
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800c1ca:	2d38      	cmp	r5, #56	@ 0x38
 800c1cc:	f108 0814 	add.w	r8, r8, #20
 800c1d0:	d1f7      	bne.n	800c1c2 <prvAddNewTaskToReadyList+0x26>
    }

    vListInitialise( &xDelayedTaskList1 );
 800c1d2:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 800c298 <prvAddNewTaskToReadyList+0xfc>
    vListInitialise( &xDelayedTaskList2 );
 800c1d6:	4d27      	ldr	r5, [pc, #156]	@ (800c274 <prvAddNewTaskToReadyList+0xd8>)
    vListInitialise( &xDelayedTaskList1 );
 800c1d8:	4640      	mov	r0, r8
 800c1da:	f7ff fa2f 	bl	800b63c <vListInitialise>
    vListInitialise( &xDelayedTaskList2 );
 800c1de:	4628      	mov	r0, r5
 800c1e0:	f7ff fa2c 	bl	800b63c <vListInitialise>
    vListInitialise( &xPendingReadyList );
 800c1e4:	4824      	ldr	r0, [pc, #144]	@ (800c278 <prvAddNewTaskToReadyList+0xdc>)
 800c1e6:	f7ff fa29 	bl	800b63c <vListInitialise>

    #if ( INCLUDE_vTaskDelete == 1 )
        {
            vListInitialise( &xTasksWaitingTermination );
 800c1ea:	4824      	ldr	r0, [pc, #144]	@ (800c27c <prvAddNewTaskToReadyList+0xe0>)
 800c1ec:	f7ff fa26 	bl	800b63c <vListInitialise>
        }
    #endif /* INCLUDE_vTaskDelete */

    #if ( INCLUDE_vTaskSuspend == 1 )
        {
            vListInitialise( &xSuspendedTaskList );
 800c1f0:	4823      	ldr	r0, [pc, #140]	@ (800c280 <prvAddNewTaskToReadyList+0xe4>)
 800c1f2:	f7ff fa23 	bl	800b63c <vListInitialise>
        }
    #endif /* INCLUDE_vTaskSuspend */

    /* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
     * using list2. */
    pxDelayedTaskList = &xDelayedTaskList1;
 800c1f6:	4b23      	ldr	r3, [pc, #140]	@ (800c284 <prvAddNewTaskToReadyList+0xe8>)
 800c1f8:	f8c3 8000 	str.w	r8, [r3]
    pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800c1fc:	4b22      	ldr	r3, [pc, #136]	@ (800c288 <prvAddNewTaskToReadyList+0xec>)
 800c1fe:	601d      	str	r5, [r3, #0]
        uxTaskNumber++;
 800c200:	4a22      	ldr	r2, [pc, #136]	@ (800c28c <prvAddNewTaskToReadyList+0xf0>)
        prvAddTaskToReadyList( pxNewTCB );
 800c202:	1d20      	adds	r0, r4, #4
        uxTaskNumber++;
 800c204:	6813      	ldr	r3, [r2, #0]
 800c206:	3301      	adds	r3, #1
 800c208:	6013      	str	r3, [r2, #0]
        prvAddTaskToReadyList( pxNewTCB );
 800c20a:	4a21      	ldr	r2, [pc, #132]	@ (800c290 <prvAddNewTaskToReadyList+0xf4>)
                pxNewTCB->uxTCBNumber = uxTaskNumber;
 800c20c:	6463      	str	r3, [r4, #68]	@ 0x44
        prvAddTaskToReadyList( pxNewTCB );
 800c20e:	6811      	ldr	r1, [r2, #0]
 800c210:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800c212:	428b      	cmp	r3, r1
 800c214:	bf88      	it	hi
 800c216:	6013      	strhi	r3, [r2, #0]
 800c218:	2214      	movs	r2, #20
 800c21a:	4353      	muls	r3, r2
 800c21c:	18f9      	adds	r1, r7, r3
 800c21e:	684a      	ldr	r2, [r1, #4]
 800c220:	6895      	ldr	r5, [r2, #8]
 800c222:	60a2      	str	r2, [r4, #8]
 800c224:	60e5      	str	r5, [r4, #12]
 800c226:	6068      	str	r0, [r5, #4]
 800c228:	6090      	str	r0, [r2, #8]
 800c22a:	58fa      	ldr	r2, [r7, r3]
 800c22c:	6161      	str	r1, [r4, #20]
 800c22e:	3201      	adds	r2, #1
 800c230:	50fa      	str	r2, [r7, r3]
    taskEXIT_CRITICAL();
 800c232:	f7ff fa79 	bl	800b728 <vPortExitCritical>
    if( xSchedulerRunning != pdFALSE )
 800c236:	4b17      	ldr	r3, [pc, #92]	@ (800c294 <prvAddNewTaskToReadyList+0xf8>)
 800c238:	681b      	ldr	r3, [r3, #0]
 800c23a:	b19b      	cbz	r3, 800c264 <prvAddNewTaskToReadyList+0xc8>
        if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800c23c:	6833      	ldr	r3, [r6, #0]
 800c23e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800c240:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800c242:	429a      	cmp	r2, r3
 800c244:	d20e      	bcs.n	800c264 <prvAddNewTaskToReadyList+0xc8>
}
 800c246:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            taskYIELD_IF_USING_PREEMPTION();
 800c24a:	f7ff ba53 	b.w	800b6f4 <vPortYield>
            if( xSchedulerRunning == pdFALSE )
 800c24e:	4b11      	ldr	r3, [pc, #68]	@ (800c294 <prvAddNewTaskToReadyList+0xf8>)
 800c250:	681a      	ldr	r2, [r3, #0]
                if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800c252:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
            if( xSchedulerRunning == pdFALSE )
 800c254:	2a00      	cmp	r2, #0
 800c256:	d1d3      	bne.n	800c200 <prvAddNewTaskToReadyList+0x64>
                if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800c258:	6832      	ldr	r2, [r6, #0]
 800c25a:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800c25c:	429a      	cmp	r2, r3
                    pxCurrentTCB = pxNewTCB;
 800c25e:	bf98      	it	ls
 800c260:	6034      	strls	r4, [r6, #0]
 800c262:	e7cd      	b.n	800c200 <prvAddNewTaskToReadyList+0x64>
}
 800c264:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c268:	2003f618 	.word	0x2003f618
 800c26c:	2003faec 	.word	0x2003faec
 800c270:	2003f68c 	.word	0x2003f68c
 800c274:	2003f664 	.word	0x2003f664
 800c278:	2003f648 	.word	0x2003f648
 800c27c:	2003f634 	.word	0x2003f634
 800c280:	2003f61c 	.word	0x2003f61c
 800c284:	2003f660 	.word	0x2003f660
 800c288:	2003f65c 	.word	0x2003f65c
 800c28c:	2003f5fc 	.word	0x2003f5fc
 800c290:	2003f610 	.word	0x2003f610
 800c294:	2003f60c 	.word	0x2003f60c
 800c298:	2003f678 	.word	0x2003f678

0800c29c <prvAddCurrentTaskToDelayedList>:
#endif /* if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) ) */
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
                                            const BaseType_t xCanBlockIndefinitely )
{
 800c29c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c29e:	4606      	mov	r6, r0
    TickType_t xTimeToWake;
    const TickType_t xConstTickCount = xTickCount;
 800c2a0:	4b1a      	ldr	r3, [pc, #104]	@ (800c30c <prvAddCurrentTaskToDelayedList+0x70>)
        }
    #endif

    /* Remove the task from the ready list before adding it to the blocked list
     * as the same list item is used for both lists. */
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800c2a2:	4c1b      	ldr	r4, [pc, #108]	@ (800c310 <prvAddCurrentTaskToDelayedList+0x74>)
    const TickType_t xConstTickCount = xTickCount;
 800c2a4:	681d      	ldr	r5, [r3, #0]
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800c2a6:	6820      	ldr	r0, [r4, #0]
{
 800c2a8:	460f      	mov	r7, r1
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800c2aa:	3004      	adds	r0, #4
 800c2ac:	f7ff f9eb 	bl	800b686 <uxListRemove>
        mtCOVERAGE_TEST_MARKER();
    }

    #if ( INCLUDE_vTaskSuspend == 1 )
        {
            if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800c2b0:	1c73      	adds	r3, r6, #1
 800c2b2:	d113      	bne.n	800c2dc <prvAddCurrentTaskToDelayedList+0x40>
 800c2b4:	b197      	cbz	r7, 800c2dc <prvAddCurrentTaskToDelayedList+0x40>
            {
                /* Add the task to the suspended task list instead of a delayed task
                 * list to ensure it is not woken by a timing event.  It will block
                 * indefinitely. */
                listINSERT_END( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800c2b6:	4b17      	ldr	r3, [pc, #92]	@ (800c314 <prvAddCurrentTaskToDelayedList+0x78>)
 800c2b8:	6821      	ldr	r1, [r4, #0]
 800c2ba:	685a      	ldr	r2, [r3, #4]
 800c2bc:	608a      	str	r2, [r1, #8]
 800c2be:	6890      	ldr	r0, [r2, #8]
 800c2c0:	6821      	ldr	r1, [r4, #0]
 800c2c2:	60c8      	str	r0, [r1, #12]
 800c2c4:	6821      	ldr	r1, [r4, #0]
 800c2c6:	3104      	adds	r1, #4
 800c2c8:	6041      	str	r1, [r0, #4]
 800c2ca:	6821      	ldr	r1, [r4, #0]
 800c2cc:	3104      	adds	r1, #4
 800c2ce:	6091      	str	r1, [r2, #8]
 800c2d0:	6822      	ldr	r2, [r4, #0]
 800c2d2:	6153      	str	r3, [r2, #20]
 800c2d4:	681a      	ldr	r2, [r3, #0]
 800c2d6:	3201      	adds	r2, #1
 800c2d8:	601a      	str	r2, [r3, #0]

            /* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
            ( void ) xCanBlockIndefinitely;
        }
    #endif /* INCLUDE_vTaskSuspend */
}
 800c2da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800c2dc:	6823      	ldr	r3, [r4, #0]
 800c2de:	19ad      	adds	r5, r5, r6
 800c2e0:	605d      	str	r5, [r3, #4]
                if( xTimeToWake < xConstTickCount )
 800c2e2:	d307      	bcc.n	800c2f4 <prvAddCurrentTaskToDelayedList+0x58>
                    vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800c2e4:	4b0c      	ldr	r3, [pc, #48]	@ (800c318 <prvAddCurrentTaskToDelayedList+0x7c>)
 800c2e6:	6818      	ldr	r0, [r3, #0]
 800c2e8:	6821      	ldr	r1, [r4, #0]
}
 800c2ea:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
                    vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800c2ee:	3104      	adds	r1, #4
 800c2f0:	f7ff b9b2 	b.w	800b658 <vListInsert>
                    vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800c2f4:	4b09      	ldr	r3, [pc, #36]	@ (800c31c <prvAddCurrentTaskToDelayedList+0x80>)
 800c2f6:	6818      	ldr	r0, [r3, #0]
 800c2f8:	6821      	ldr	r1, [r4, #0]
 800c2fa:	3104      	adds	r1, #4
 800c2fc:	f7ff f9ac 	bl	800b658 <vListInsert>
                    if( xTimeToWake < xNextTaskUnblockTime )
 800c300:	4b07      	ldr	r3, [pc, #28]	@ (800c320 <prvAddCurrentTaskToDelayedList+0x84>)
 800c302:	681a      	ldr	r2, [r3, #0]
 800c304:	42aa      	cmp	r2, r5
                        xNextTaskUnblockTime = xTimeToWake;
 800c306:	bf88      	it	hi
 800c308:	601d      	strhi	r5, [r3, #0]
}
 800c30a:	e7e6      	b.n	800c2da <prvAddCurrentTaskToDelayedList+0x3e>
 800c30c:	2003f614 	.word	0x2003f614
 800c310:	2003faec 	.word	0x2003faec
 800c314:	2003f61c 	.word	0x2003f61c
 800c318:	2003f65c 	.word	0x2003f65c
 800c31c:	2003f660 	.word	0x2003f660
 800c320:	2003f5f8 	.word	0x2003f5f8

0800c324 <prvResetNextTaskUnblockTime>:
    if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800c324:	4a06      	ldr	r2, [pc, #24]	@ (800c340 <prvResetNextTaskUnblockTime+0x1c>)
 800c326:	6813      	ldr	r3, [r2, #0]
 800c328:	6819      	ldr	r1, [r3, #0]
 800c32a:	4b06      	ldr	r3, [pc, #24]	@ (800c344 <prvResetNextTaskUnblockTime+0x20>)
 800c32c:	b919      	cbnz	r1, 800c336 <prvResetNextTaskUnblockTime+0x12>
        xNextTaskUnblockTime = portMAX_DELAY;
 800c32e:	f04f 32ff 	mov.w	r2, #4294967295
        xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
 800c332:	601a      	str	r2, [r3, #0]
}
 800c334:	4770      	bx	lr
        xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
 800c336:	6812      	ldr	r2, [r2, #0]
 800c338:	68d2      	ldr	r2, [r2, #12]
 800c33a:	6812      	ldr	r2, [r2, #0]
 800c33c:	e7f9      	b.n	800c332 <prvResetNextTaskUnblockTime+0xe>
 800c33e:	bf00      	nop
 800c340:	2003f660 	.word	0x2003f660
 800c344:	2003f5f8 	.word	0x2003f5f8

0800c348 <prvDeleteTCB>:
    {
 800c348:	b510      	push	{r4, lr}
                if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800c34a:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
    {
 800c34e:	4604      	mov	r4, r0
                if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800c350:	b93b      	cbnz	r3, 800c362 <prvDeleteTCB+0x1a>
                    vPortFreeStack( pxTCB->pxStack );
 800c352:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 800c354:	f000 fed6 	bl	800d104 <vPortFree>
                    vPortFree( pxTCB );
 800c358:	4620      	mov	r0, r4
    }
 800c35a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                    vPortFree( pxTCB );
 800c35e:	f000 bed1 	b.w	800d104 <vPortFree>
                else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800c362:	2b01      	cmp	r3, #1
 800c364:	d0f9      	beq.n	800c35a <prvDeleteTCB+0x12>
                    configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB );
 800c366:	2b02      	cmp	r3, #2
 800c368:	d002      	beq.n	800c370 <prvDeleteTCB+0x28>
 800c36a:	f7ff faab 	bl	800b8c4 <ulSetInterruptMask>
 800c36e:	e7fe      	b.n	800c36e <prvDeleteTCB+0x26>
    }
 800c370:	bd10      	pop	{r4, pc}
	...

0800c374 <prvIdleTask>:
{
 800c374:	b580      	push	{r7, lr}
            while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800c376:	4c10      	ldr	r4, [pc, #64]	@ (800c3b8 <prvIdleTask+0x44>)
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800c378:	4f10      	ldr	r7, [pc, #64]	@ (800c3bc <prvIdleTask+0x48>)
                    --uxCurrentNumberOfTasks;
 800c37a:	4d11      	ldr	r5, [pc, #68]	@ (800c3c0 <prvIdleTask+0x4c>)
            while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800c37c:	6823      	ldr	r3, [r4, #0]
 800c37e:	b943      	cbnz	r3, 800c392 <prvIdleTask+0x1e>
                if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800c380:	4b10      	ldr	r3, [pc, #64]	@ (800c3c4 <prvIdleTask+0x50>)
 800c382:	681b      	ldr	r3, [r3, #0]
 800c384:	2b01      	cmp	r3, #1
 800c386:	d901      	bls.n	800c38c <prvIdleTask+0x18>
                    taskYIELD();
 800c388:	f7ff f9b4 	bl	800b6f4 <vPortYield>
                vApplicationIdleHook();
 800c38c:	f7f3 ff96 	bl	80002bc <vApplicationIdleHook>
        prvCheckTasksWaitingTermination();
 800c390:	e7f3      	b.n	800c37a <prvIdleTask+0x6>
                taskENTER_CRITICAL();
 800c392:	f7ff f9bb 	bl	800b70c <vPortEnterCritical>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800c396:	68fb      	ldr	r3, [r7, #12]
 800c398:	68de      	ldr	r6, [r3, #12]
                    ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800c39a:	1d30      	adds	r0, r6, #4
 800c39c:	f7ff f973 	bl	800b686 <uxListRemove>
                    --uxCurrentNumberOfTasks;
 800c3a0:	682b      	ldr	r3, [r5, #0]
 800c3a2:	3b01      	subs	r3, #1
 800c3a4:	602b      	str	r3, [r5, #0]
                    --uxDeletedTasksWaitingCleanUp;
 800c3a6:	6823      	ldr	r3, [r4, #0]
 800c3a8:	3b01      	subs	r3, #1
 800c3aa:	6023      	str	r3, [r4, #0]
                taskEXIT_CRITICAL();
 800c3ac:	f7ff f9bc 	bl	800b728 <vPortExitCritical>
                prvDeleteTCB( pxTCB );
 800c3b0:	4630      	mov	r0, r6
 800c3b2:	f7ff ffc9 	bl	800c348 <prvDeleteTCB>
 800c3b6:	e7e1      	b.n	800c37c <prvIdleTask+0x8>
 800c3b8:	2003f630 	.word	0x2003f630
 800c3bc:	2003f634 	.word	0x2003f634
 800c3c0:	2003f618 	.word	0x2003f618
 800c3c4:	2003f68c 	.word	0x2003f68c

0800c3c8 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 800c3c8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c3cc:	460d      	mov	r5, r1
 800c3ce:	e9dd 7a0a 	ldrd	r7, sl, [sp, #40]	@ 0x28
 800c3d2:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
            ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800c3d4:	0096      	lsls	r6, r2, #2
static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 800c3d6:	4680      	mov	r8, r0
            ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800c3d8:	4632      	mov	r2, r6
 800c3da:	21a5      	movs	r1, #165	@ 0xa5
 800c3dc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 800c3de:	4699      	mov	r9, r3
            ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800c3e0:	f018 ffb4 	bl	802534c <memset>
            pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800c3e4:	f8d4 b030 	ldr.w	fp, [r4, #48]	@ 0x30
    if( pcName != NULL )
 800c3e8:	b195      	cbz	r5, 800c410 <prvInitialiseNewTask.constprop.0+0x48>
 800c3ea:	1e6b      	subs	r3, r5, #1
 800c3ec:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 800c3f0:	350f      	adds	r5, #15
            pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800c3f2:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800c3f6:	f802 1f01 	strb.w	r1, [r2, #1]!
            if( pcName[ x ] == ( char ) 0x00 )
 800c3fa:	b109      	cbz	r1, 800c400 <prvInitialiseNewTask.constprop.0+0x38>
        for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800c3fc:	42ab      	cmp	r3, r5
 800c3fe:	d1f8      	bne.n	800c3f2 <prvInitialiseNewTask.constprop.0+0x2a>
        pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800c400:	2300      	movs	r3, #0
 800c402:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
    configASSERT( uxPriority < configMAX_PRIORITIES );
 800c406:	2f37      	cmp	r7, #55	@ 0x37
 800c408:	d905      	bls.n	800c416 <prvInitialiseNewTask.constprop.0+0x4e>
 800c40a:	f7ff fa5b 	bl	800b8c4 <ulSetInterruptMask>
 800c40e:	e7fe      	b.n	800c40e <prvInitialiseNewTask.constprop.0+0x46>
        pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800c410:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 800c414:	e7f7      	b.n	800c406 <prvInitialiseNewTask.constprop.0+0x3e>
            pxNewTCB->uxMutexesHeld = 0;
 800c416:	2500      	movs	r5, #0
    pxNewTCB->uxPriority = uxPriority;
 800c418:	62e7      	str	r7, [r4, #44]	@ 0x2c
            pxNewTCB->uxBasePriority = uxPriority;
 800c41a:	64e7      	str	r7, [r4, #76]	@ 0x4c
    vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800c41c:	1d20      	adds	r0, r4, #4
            pxNewTCB->uxMutexesHeld = 0;
 800c41e:	6525      	str	r5, [r4, #80]	@ 0x50
    vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800c420:	f7ff f917 	bl	800b652 <vListInitialiseItem>
            pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800c424:	3e04      	subs	r6, #4
    vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800c426:	f104 0018 	add.w	r0, r4, #24
 800c42a:	f7ff f912 	bl	800b652 <vListInitialiseItem>
    listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800c42e:	f1c7 0738 	rsb	r7, r7, #56	@ 0x38
            pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800c432:	eb0b 0006 	add.w	r0, fp, r6
                            pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pvParameters );
 800c436:	464b      	mov	r3, r9
 800c438:	4642      	mov	r2, r8
 800c43a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800c43c:	6124      	str	r4, [r4, #16]
    listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800c43e:	61a7      	str	r7, [r4, #24]
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800c440:	6264      	str	r4, [r4, #36]	@ 0x24
            pxNewTCB->pxTaskTag = NULL;
 800c442:	6565      	str	r5, [r4, #84]	@ 0x54
            memset( ( void * ) &( pxNewTCB->ulNotifiedValue[ 0 ] ), 0x00, sizeof( pxNewTCB->ulNotifiedValue ) );
 800c444:	65a5      	str	r5, [r4, #88]	@ 0x58
            memset( ( void * ) &( pxNewTCB->ucNotifyState[ 0 ] ), 0x00, sizeof( pxNewTCB->ucNotifyState ) );
 800c446:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
                            pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pvParameters );
 800c44a:	f020 0007 	bic.w	r0, r0, #7
 800c44e:	f7ff f9ad 	bl	800b7ac <pxPortInitialiseStack>
 800c452:	6020      	str	r0, [r4, #0]
    if( pxCreatedTask != NULL )
 800c454:	f1ba 0f00 	cmp.w	sl, #0
 800c458:	d001      	beq.n	800c45e <prvInitialiseNewTask.constprop.0+0x96>
        *pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800c45a:	f8ca 4000 	str.w	r4, [sl]
}
 800c45e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c462 <xTaskCreateStatic>:
    {
 800c462:	b570      	push	{r4, r5, r6, lr}
 800c464:	b086      	sub	sp, #24
 800c466:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
        configASSERT( puxStackBuffer != NULL );
 800c46a:	b915      	cbnz	r5, 800c472 <xTaskCreateStatic+0x10>
 800c46c:	f7ff fa2a 	bl	800b8c4 <ulSetInterruptMask>
 800c470:	e7fe      	b.n	800c470 <xTaskCreateStatic+0xe>
        configASSERT( pxTaskBuffer != NULL );
 800c472:	b914      	cbnz	r4, 800c47a <xTaskCreateStatic+0x18>
 800c474:	f7ff fa26 	bl	800b8c4 <ulSetInterruptMask>
 800c478:	e7fe      	b.n	800c478 <xTaskCreateStatic+0x16>
                volatile size_t xSize = sizeof( StaticTask_t );
 800c47a:	2660      	movs	r6, #96	@ 0x60
 800c47c:	9605      	str	r6, [sp, #20]
                configASSERT( xSize == sizeof( TCB_t ) );
 800c47e:	9e05      	ldr	r6, [sp, #20]
 800c480:	2e60      	cmp	r6, #96	@ 0x60
 800c482:	d002      	beq.n	800c48a <xTaskCreateStatic+0x28>
 800c484:	f7ff fa1e 	bl	800b8c4 <ulSetInterruptMask>
 800c488:	e7fe      	b.n	800c488 <xTaskCreateStatic+0x26>
            pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800c48a:	6325      	str	r5, [r4, #48]	@ 0x30
                    pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800c48c:	2502      	movs	r5, #2
 800c48e:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
            prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800c492:	ad04      	add	r5, sp, #16
 800c494:	9501      	str	r5, [sp, #4]
 800c496:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 800c498:	9402      	str	r4, [sp, #8]
 800c49a:	9500      	str	r5, [sp, #0]
                ( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800c49c:	9e05      	ldr	r6, [sp, #20]
            prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800c49e:	f7ff ff93 	bl	800c3c8 <prvInitialiseNewTask.constprop.0>
            prvAddNewTaskToReadyList( pxNewTCB );
 800c4a2:	4620      	mov	r0, r4
 800c4a4:	f7ff fe7a 	bl	800c19c <prvAddNewTaskToReadyList>
    }
 800c4a8:	9804      	ldr	r0, [sp, #16]
 800c4aa:	b006      	add	sp, #24
 800c4ac:	bd70      	pop	{r4, r5, r6, pc}

0800c4ae <xTaskCreate>:
    {
 800c4ae:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c4b2:	4607      	mov	r7, r0
 800c4b4:	b085      	sub	sp, #20
                pxStack = pvPortMallocStack( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800c4b6:	0090      	lsls	r0, r2, #2
    {
 800c4b8:	4688      	mov	r8, r1
 800c4ba:	4616      	mov	r6, r2
 800c4bc:	4699      	mov	r9, r3
                pxStack = pvPortMallocStack( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800c4be:	f000 fd93 	bl	800cfe8 <pvPortMalloc>
                if( pxStack != NULL )
 800c4c2:	4605      	mov	r5, r0
 800c4c4:	b920      	cbnz	r0, 800c4d0 <xTaskCreate+0x22>
            xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800c4c6:	f04f 30ff 	mov.w	r0, #4294967295
    }
 800c4ca:	b005      	add	sp, #20
 800c4cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                    pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800c4d0:	2060      	movs	r0, #96	@ 0x60
 800c4d2:	f000 fd89 	bl	800cfe8 <pvPortMalloc>
                    if( pxNewTCB != NULL )
 800c4d6:	4604      	mov	r4, r0
 800c4d8:	b198      	cbz	r0, 800c502 <xTaskCreate+0x54>
                    pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800c4da:	2300      	movs	r3, #0
 800c4dc:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
            prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800c4e0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
                        pxNewTCB->pxStack = pxStack;
 800c4e2:	6305      	str	r5, [r0, #48]	@ 0x30
            prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800c4e4:	9301      	str	r3, [sp, #4]
 800c4e6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800c4e8:	4632      	mov	r2, r6
 800c4ea:	4641      	mov	r1, r8
 800c4ec:	9002      	str	r0, [sp, #8]
 800c4ee:	9300      	str	r3, [sp, #0]
 800c4f0:	4638      	mov	r0, r7
 800c4f2:	464b      	mov	r3, r9
 800c4f4:	f7ff ff68 	bl	800c3c8 <prvInitialiseNewTask.constprop.0>
            prvAddNewTaskToReadyList( pxNewTCB );
 800c4f8:	4620      	mov	r0, r4
 800c4fa:	f7ff fe4f 	bl	800c19c <prvAddNewTaskToReadyList>
            xReturn = pdPASS;
 800c4fe:	2001      	movs	r0, #1
 800c500:	e7e3      	b.n	800c4ca <xTaskCreate+0x1c>
                        vPortFreeStack( pxStack );
 800c502:	4628      	mov	r0, r5
 800c504:	f000 fdfe 	bl	800d104 <vPortFree>
        if( pxNewTCB != NULL )
 800c508:	e7dd      	b.n	800c4c6 <xTaskCreate+0x18>
	...

0800c50c <vTaskSuspendAll>:
    ++uxSchedulerSuspended;
 800c50c:	4a02      	ldr	r2, [pc, #8]	@ (800c518 <vTaskSuspendAll+0xc>)
 800c50e:	6813      	ldr	r3, [r2, #0]
 800c510:	3301      	adds	r3, #1
 800c512:	6013      	str	r3, [r2, #0]
}
 800c514:	4770      	bx	lr
 800c516:	bf00      	nop
 800c518:	2003f5f4 	.word	0x2003f5f4

0800c51c <xTaskGetTickCount>:
        xTicks = xTickCount;
 800c51c:	4b01      	ldr	r3, [pc, #4]	@ (800c524 <xTaskGetTickCount+0x8>)
 800c51e:	6818      	ldr	r0, [r3, #0]
}
 800c520:	4770      	bx	lr
 800c522:	bf00      	nop
 800c524:	2003f614 	.word	0x2003f614

0800c528 <xTaskIncrementTick>:
{
 800c528:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800c52c:	4b4b      	ldr	r3, [pc, #300]	@ (800c65c <xTaskIncrementTick+0x134>)
 800c52e:	681b      	ldr	r3, [r3, #0]
 800c530:	2b00      	cmp	r3, #0
 800c532:	f040 808d 	bne.w	800c650 <xTaskIncrementTick+0x128>
        const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800c536:	4b4a      	ldr	r3, [pc, #296]	@ (800c660 <xTaskIncrementTick+0x138>)
 800c538:	681c      	ldr	r4, [r3, #0]
 800c53a:	3401      	adds	r4, #1
        xTickCount = xConstTickCount;
 800c53c:	601c      	str	r4, [r3, #0]
        if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800c53e:	b98c      	cbnz	r4, 800c564 <xTaskIncrementTick+0x3c>
            taskSWITCH_DELAYED_LISTS();
 800c540:	4b48      	ldr	r3, [pc, #288]	@ (800c664 <xTaskIncrementTick+0x13c>)
 800c542:	681a      	ldr	r2, [r3, #0]
 800c544:	6812      	ldr	r2, [r2, #0]
 800c546:	b112      	cbz	r2, 800c54e <xTaskIncrementTick+0x26>
 800c548:	f7ff f9bc 	bl	800b8c4 <ulSetInterruptMask>
 800c54c:	e7fe      	b.n	800c54c <xTaskIncrementTick+0x24>
 800c54e:	4a46      	ldr	r2, [pc, #280]	@ (800c668 <xTaskIncrementTick+0x140>)
 800c550:	6819      	ldr	r1, [r3, #0]
 800c552:	6810      	ldr	r0, [r2, #0]
 800c554:	6018      	str	r0, [r3, #0]
 800c556:	6011      	str	r1, [r2, #0]
 800c558:	4a44      	ldr	r2, [pc, #272]	@ (800c66c <xTaskIncrementTick+0x144>)
 800c55a:	6813      	ldr	r3, [r2, #0]
 800c55c:	3301      	adds	r3, #1
 800c55e:	6013      	str	r3, [r2, #0]
 800c560:	f7ff fee0 	bl	800c324 <prvResetNextTaskUnblockTime>
        if( xConstTickCount >= xNextTaskUnblockTime )
 800c564:	f8df c114 	ldr.w	ip, [pc, #276]	@ 800c67c <xTaskIncrementTick+0x154>
    BaseType_t xSwitchRequired = pdFALSE;
 800c568:	2000      	movs	r0, #0
        if( xConstTickCount >= xNextTaskUnblockTime )
 800c56a:	f8dc 3000 	ldr.w	r3, [ip]
 800c56e:	4a40      	ldr	r2, [pc, #256]	@ (800c670 <xTaskIncrementTick+0x148>)
 800c570:	429c      	cmp	r4, r3
 800c572:	f8df 810c 	ldr.w	r8, [pc, #268]	@ 800c680 <xTaskIncrementTick+0x158>
 800c576:	d20f      	bcs.n	800c598 <xTaskIncrementTick+0x70>
                if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800c578:	2114      	movs	r1, #20
 800c57a:	f8d8 3000 	ldr.w	r3, [r8]
 800c57e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c580:	434b      	muls	r3, r1
 800c582:	58d3      	ldr	r3, [r2, r3]
                    xSwitchRequired = pdTRUE;
 800c584:	2b02      	cmp	r3, #2
                if( xYieldPending != pdFALSE )
 800c586:	4b3b      	ldr	r3, [pc, #236]	@ (800c674 <xTaskIncrementTick+0x14c>)
                    xSwitchRequired = pdTRUE;
 800c588:	bf28      	it	cs
 800c58a:	2001      	movcs	r0, #1
                if( xYieldPending != pdFALSE )
 800c58c:	681b      	ldr	r3, [r3, #0]
                    xSwitchRequired = pdTRUE;
 800c58e:	2b00      	cmp	r3, #0
 800c590:	bf18      	it	ne
 800c592:	2001      	movne	r0, #1
}
 800c594:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
                if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800c598:	f8df e0c8 	ldr.w	lr, [pc, #200]	@ 800c664 <xTaskIncrementTick+0x13c>
                    prvAddTaskToReadyList( pxTCB );
 800c59c:	f8df 90e4 	ldr.w	r9, [pc, #228]	@ 800c684 <xTaskIncrementTick+0x15c>
                if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800c5a0:	f8de 3000 	ldr.w	r3, [lr]
 800c5a4:	681b      	ldr	r3, [r3, #0]
 800c5a6:	b923      	cbnz	r3, 800c5b2 <xTaskIncrementTick+0x8a>
                    xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800c5a8:	f04f 33ff 	mov.w	r3, #4294967295
 800c5ac:	f8cc 3000 	str.w	r3, [ip]
                    break;
 800c5b0:	e7e2      	b.n	800c578 <xTaskIncrementTick+0x50>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800c5b2:	f8de 3000 	ldr.w	r3, [lr]
 800c5b6:	68db      	ldr	r3, [r3, #12]
 800c5b8:	68db      	ldr	r3, [r3, #12]
                    xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800c5ba:	6859      	ldr	r1, [r3, #4]
                    if( xConstTickCount < xItemValue )
 800c5bc:	428c      	cmp	r4, r1
 800c5be:	d202      	bcs.n	800c5c6 <xTaskIncrementTick+0x9e>
                        xNextTaskUnblockTime = xItemValue;
 800c5c0:	f8cc 1000 	str.w	r1, [ip]
                        break; /*lint !e9011 Code structure here is deemed easier to understand with multiple breaks. */
 800c5c4:	e7d8      	b.n	800c578 <xTaskIncrementTick+0x50>
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
 800c5c6:	695d      	ldr	r5, [r3, #20]
 800c5c8:	e9d3 1602 	ldrd	r1, r6, [r3, #8]
 800c5cc:	608e      	str	r6, [r1, #8]
 800c5ce:	6071      	str	r1, [r6, #4]
 800c5d0:	6869      	ldr	r1, [r5, #4]
 800c5d2:	1d1f      	adds	r7, r3, #4
 800c5d4:	42b9      	cmp	r1, r7
 800c5d6:	f04f 0100 	mov.w	r1, #0
 800c5da:	bf08      	it	eq
 800c5dc:	606e      	streq	r6, [r5, #4]
 800c5de:	6159      	str	r1, [r3, #20]
 800c5e0:	6829      	ldr	r1, [r5, #0]
 800c5e2:	3901      	subs	r1, #1
 800c5e4:	6029      	str	r1, [r5, #0]
                    if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800c5e6:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
 800c5e8:	b17d      	cbz	r5, 800c60a <xTaskIncrementTick+0xe2>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 800c5ea:	e9d3 1607 	ldrd	r1, r6, [r3, #28]
 800c5ee:	608e      	str	r6, [r1, #8]
 800c5f0:	6071      	str	r1, [r6, #4]
 800c5f2:	6869      	ldr	r1, [r5, #4]
 800c5f4:	f103 0a18 	add.w	sl, r3, #24
 800c5f8:	4551      	cmp	r1, sl
 800c5fa:	f04f 0100 	mov.w	r1, #0
 800c5fe:	bf08      	it	eq
 800c600:	606e      	streq	r6, [r5, #4]
 800c602:	6299      	str	r1, [r3, #40]	@ 0x28
 800c604:	6829      	ldr	r1, [r5, #0]
 800c606:	3901      	subs	r1, #1
 800c608:	6029      	str	r1, [r5, #0]
                    prvAddTaskToReadyList( pxTCB );
 800c60a:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800c60c:	f8d9 5000 	ldr.w	r5, [r9]
 800c610:	42a9      	cmp	r1, r5
 800c612:	f04f 0514 	mov.w	r5, #20
 800c616:	fb05 f501 	mul.w	r5, r5, r1
 800c61a:	eb02 0a05 	add.w	sl, r2, r5
 800c61e:	f8da 6004 	ldr.w	r6, [sl, #4]
 800c622:	bf88      	it	hi
 800c624:	f8c9 1000 	strhi.w	r1, [r9]
 800c628:	f8d6 b008 	ldr.w	fp, [r6, #8]
 800c62c:	609e      	str	r6, [r3, #8]
 800c62e:	f8c3 b00c 	str.w	fp, [r3, #12]
 800c632:	f8cb 7004 	str.w	r7, [fp, #4]
 800c636:	60b7      	str	r7, [r6, #8]
 800c638:	f8c3 a014 	str.w	sl, [r3, #20]
 800c63c:	5953      	ldr	r3, [r2, r5]
 800c63e:	3301      	adds	r3, #1
 800c640:	5153      	str	r3, [r2, r5]
                            if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800c642:	f8d8 3000 	ldr.w	r3, [r8]
 800c646:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
                                xSwitchRequired = pdTRUE;
 800c648:	4299      	cmp	r1, r3
 800c64a:	bf28      	it	cs
 800c64c:	2001      	movcs	r0, #1
 800c64e:	e7a7      	b.n	800c5a0 <xTaskIncrementTick+0x78>
        ++xPendedTicks;
 800c650:	4a09      	ldr	r2, [pc, #36]	@ (800c678 <xTaskIncrementTick+0x150>)
    BaseType_t xSwitchRequired = pdFALSE;
 800c652:	2000      	movs	r0, #0
        ++xPendedTicks;
 800c654:	6813      	ldr	r3, [r2, #0]
 800c656:	3301      	adds	r3, #1
 800c658:	6013      	str	r3, [r2, #0]
 800c65a:	e79b      	b.n	800c594 <xTaskIncrementTick+0x6c>
 800c65c:	2003f5f4 	.word	0x2003f5f4
 800c660:	2003f614 	.word	0x2003f614
 800c664:	2003f660 	.word	0x2003f660
 800c668:	2003f65c 	.word	0x2003f65c
 800c66c:	2003f600 	.word	0x2003f600
 800c670:	2003f68c 	.word	0x2003f68c
 800c674:	2003f604 	.word	0x2003f604
 800c678:	2003f608 	.word	0x2003f608
 800c67c:	2003f5f8 	.word	0x2003f5f8
 800c680:	2003faec 	.word	0x2003faec
 800c684:	2003f610 	.word	0x2003f610

0800c688 <xTaskResumeAll>:
{
 800c688:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    configASSERT( uxSchedulerSuspended );
 800c68c:	4c3d      	ldr	r4, [pc, #244]	@ (800c784 <xTaskResumeAll+0xfc>)
 800c68e:	6823      	ldr	r3, [r4, #0]
 800c690:	b913      	cbnz	r3, 800c698 <xTaskResumeAll+0x10>
 800c692:	f7ff f917 	bl	800b8c4 <ulSetInterruptMask>
 800c696:	e7fe      	b.n	800c696 <xTaskResumeAll+0xe>
    taskENTER_CRITICAL();
 800c698:	f7ff f838 	bl	800b70c <vPortEnterCritical>
        --uxSchedulerSuspended;
 800c69c:	6823      	ldr	r3, [r4, #0]
 800c69e:	3b01      	subs	r3, #1
 800c6a0:	6023      	str	r3, [r4, #0]
        if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800c6a2:	6823      	ldr	r3, [r4, #0]
 800c6a4:	b12b      	cbz	r3, 800c6b2 <xTaskResumeAll+0x2a>
    BaseType_t xAlreadyYielded = pdFALSE;
 800c6a6:	2400      	movs	r4, #0
    taskEXIT_CRITICAL();
 800c6a8:	f7ff f83e 	bl	800b728 <vPortExitCritical>
}
 800c6ac:	4620      	mov	r0, r4
 800c6ae:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
            if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800c6b2:	4a35      	ldr	r2, [pc, #212]	@ (800c788 <xTaskResumeAll+0x100>)
 800c6b4:	6812      	ldr	r2, [r2, #0]
 800c6b6:	2a00      	cmp	r2, #0
 800c6b8:	d0f5      	beq.n	800c6a6 <xTaskResumeAll+0x1e>
                    prvAddTaskToReadyList( pxTCB );
 800c6ba:	f04f 0c14 	mov.w	ip, #20
                        xYieldPending = pdTRUE;
 800c6be:	f04f 0901 	mov.w	r9, #1
                while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800c6c2:	4e32      	ldr	r6, [pc, #200]	@ (800c78c <xTaskResumeAll+0x104>)
                    prvAddTaskToReadyList( pxTCB );
 800c6c4:	4f32      	ldr	r7, [pc, #200]	@ (800c790 <xTaskResumeAll+0x108>)
 800c6c6:	4933      	ldr	r1, [pc, #204]	@ (800c794 <xTaskResumeAll+0x10c>)
                    if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800c6c8:	f8df e0d4 	ldr.w	lr, [pc, #212]	@ 800c7a0 <xTaskResumeAll+0x118>
                        xYieldPending = pdTRUE;
 800c6cc:	f8df 80cc 	ldr.w	r8, [pc, #204]	@ 800c79c <xTaskResumeAll+0x114>
 800c6d0:	e03e      	b.n	800c750 <xTaskResumeAll+0xc8>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800c6d2:	68f3      	ldr	r3, [r6, #12]
 800c6d4:	68db      	ldr	r3, [r3, #12]
                    listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 800c6d6:	6a98      	ldr	r0, [r3, #40]	@ 0x28
 800c6d8:	e9d3 2407 	ldrd	r2, r4, [r3, #28]
 800c6dc:	6094      	str	r4, [r2, #8]
 800c6de:	6062      	str	r2, [r4, #4]
 800c6e0:	6842      	ldr	r2, [r0, #4]
 800c6e2:	f103 0518 	add.w	r5, r3, #24
 800c6e6:	42aa      	cmp	r2, r5
 800c6e8:	f04f 0200 	mov.w	r2, #0
 800c6ec:	bf08      	it	eq
 800c6ee:	6044      	streq	r4, [r0, #4]
 800c6f0:	629a      	str	r2, [r3, #40]	@ 0x28
 800c6f2:	6802      	ldr	r2, [r0, #0]
 800c6f4:	3a01      	subs	r2, #1
 800c6f6:	6002      	str	r2, [r0, #0]
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
 800c6f8:	6958      	ldr	r0, [r3, #20]
 800c6fa:	e9d3 2402 	ldrd	r2, r4, [r3, #8]
 800c6fe:	6094      	str	r4, [r2, #8]
 800c700:	6062      	str	r2, [r4, #4]
 800c702:	6842      	ldr	r2, [r0, #4]
 800c704:	1d1d      	adds	r5, r3, #4
 800c706:	42aa      	cmp	r2, r5
 800c708:	6802      	ldr	r2, [r0, #0]
 800c70a:	bf08      	it	eq
 800c70c:	6044      	streq	r4, [r0, #4]
 800c70e:	3a01      	subs	r2, #1
 800c710:	6002      	str	r2, [r0, #0]
                    prvAddTaskToReadyList( pxTCB );
 800c712:	6838      	ldr	r0, [r7, #0]
 800c714:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800c716:	4282      	cmp	r2, r0
 800c718:	fb0c f002 	mul.w	r0, ip, r2
 800c71c:	eb01 0a00 	add.w	sl, r1, r0
 800c720:	f8da 4004 	ldr.w	r4, [sl, #4]
 800c724:	bf88      	it	hi
 800c726:	603a      	strhi	r2, [r7, #0]
 800c728:	f8d4 b008 	ldr.w	fp, [r4, #8]
 800c72c:	609c      	str	r4, [r3, #8]
 800c72e:	f8c3 b00c 	str.w	fp, [r3, #12]
 800c732:	f8cb 5004 	str.w	r5, [fp, #4]
 800c736:	60a5      	str	r5, [r4, #8]
 800c738:	580c      	ldr	r4, [r1, r0]
 800c73a:	f8c3 a014 	str.w	sl, [r3, #20]
 800c73e:	3401      	adds	r4, #1
 800c740:	500c      	str	r4, [r1, r0]
                    if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800c742:	f8de 0000 	ldr.w	r0, [lr]
 800c746:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 800c748:	4282      	cmp	r2, r0
 800c74a:	d301      	bcc.n	800c750 <xTaskResumeAll+0xc8>
                        xYieldPending = pdTRUE;
 800c74c:	f8c8 9000 	str.w	r9, [r8]
                while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800c750:	6832      	ldr	r2, [r6, #0]
 800c752:	2a00      	cmp	r2, #0
 800c754:	d1bd      	bne.n	800c6d2 <xTaskResumeAll+0x4a>
                if( pxTCB != NULL )
 800c756:	b10b      	cbz	r3, 800c75c <xTaskResumeAll+0xd4>
                    prvResetNextTaskUnblockTime();
 800c758:	f7ff fde4 	bl	800c324 <prvResetNextTaskUnblockTime>
                    TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800c75c:	4d0e      	ldr	r5, [pc, #56]	@ (800c798 <xTaskResumeAll+0x110>)
 800c75e:	682c      	ldr	r4, [r5, #0]
                    if( xPendedCounts > ( TickType_t ) 0U )
 800c760:	b144      	cbz	r4, 800c774 <xTaskResumeAll+0xec>
                                xYieldPending = pdTRUE;
 800c762:	2701      	movs	r7, #1
 800c764:	4e0d      	ldr	r6, [pc, #52]	@ (800c79c <xTaskResumeAll+0x114>)
                            if( xTaskIncrementTick() != pdFALSE )
 800c766:	f7ff fedf 	bl	800c528 <xTaskIncrementTick>
 800c76a:	b100      	cbz	r0, 800c76e <xTaskResumeAll+0xe6>
                                xYieldPending = pdTRUE;
 800c76c:	6037      	str	r7, [r6, #0]
                        } while( xPendedCounts > ( TickType_t ) 0U );
 800c76e:	3c01      	subs	r4, #1
 800c770:	d1f9      	bne.n	800c766 <xTaskResumeAll+0xde>
                        xPendedTicks = 0;
 800c772:	602c      	str	r4, [r5, #0]
                if( xYieldPending != pdFALSE )
 800c774:	4b09      	ldr	r3, [pc, #36]	@ (800c79c <xTaskResumeAll+0x114>)
 800c776:	681b      	ldr	r3, [r3, #0]
 800c778:	2b00      	cmp	r3, #0
 800c77a:	d094      	beq.n	800c6a6 <xTaskResumeAll+0x1e>
                    taskYIELD_IF_USING_PREEMPTION();
 800c77c:	f7fe ffba 	bl	800b6f4 <vPortYield>
                            xAlreadyYielded = pdTRUE;
 800c780:	2401      	movs	r4, #1
 800c782:	e791      	b.n	800c6a8 <xTaskResumeAll+0x20>
 800c784:	2003f5f4 	.word	0x2003f5f4
 800c788:	2003f618 	.word	0x2003f618
 800c78c:	2003f648 	.word	0x2003f648
 800c790:	2003f610 	.word	0x2003f610
 800c794:	2003f68c 	.word	0x2003f68c
 800c798:	2003f608 	.word	0x2003f608
 800c79c:	2003f604 	.word	0x2003f604
 800c7a0:	2003faec 	.word	0x2003faec

0800c7a4 <vTaskDelay>:
    {
 800c7a4:	b508      	push	{r3, lr}
        if( xTicksToDelay > ( TickType_t ) 0U )
 800c7a6:	b918      	cbnz	r0, 800c7b0 <vTaskDelay+0xc>
    }
 800c7a8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
            portYIELD_WITHIN_API();
 800c7ac:	f7fe bfa2 	b.w	800b6f4 <vPortYield>
            configASSERT( uxSchedulerSuspended == 0 );
 800c7b0:	4b07      	ldr	r3, [pc, #28]	@ (800c7d0 <vTaskDelay+0x2c>)
 800c7b2:	6819      	ldr	r1, [r3, #0]
 800c7b4:	b111      	cbz	r1, 800c7bc <vTaskDelay+0x18>
 800c7b6:	f7ff f885 	bl	800b8c4 <ulSetInterruptMask>
 800c7ba:	e7fe      	b.n	800c7ba <vTaskDelay+0x16>
            vTaskSuspendAll();
 800c7bc:	f7ff fea6 	bl	800c50c <vTaskSuspendAll>
                prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800c7c0:	f7ff fd6c 	bl	800c29c <prvAddCurrentTaskToDelayedList>
            xAlreadyYielded = xTaskResumeAll();
 800c7c4:	f7ff ff60 	bl	800c688 <xTaskResumeAll>
        if( xAlreadyYielded == pdFALSE )
 800c7c8:	2800      	cmp	r0, #0
 800c7ca:	d0ed      	beq.n	800c7a8 <vTaskDelay+0x4>
    }
 800c7cc:	bd08      	pop	{r3, pc}
 800c7ce:	bf00      	nop
 800c7d0:	2003f5f4 	.word	0x2003f5f4

0800c7d4 <vTaskSetApplicationTaskTag>:
    {
 800c7d4:	b538      	push	{r3, r4, r5, lr}
 800c7d6:	460d      	mov	r5, r1
        if( xTask == NULL )
 800c7d8:	4604      	mov	r4, r0
 800c7da:	b908      	cbnz	r0, 800c7e0 <vTaskSetApplicationTaskTag+0xc>
            xTCB = ( TCB_t * ) pxCurrentTCB;
 800c7dc:	4b04      	ldr	r3, [pc, #16]	@ (800c7f0 <vTaskSetApplicationTaskTag+0x1c>)
 800c7de:	681c      	ldr	r4, [r3, #0]
        taskENTER_CRITICAL();
 800c7e0:	f7fe ff94 	bl	800b70c <vPortEnterCritical>
            xTCB->pxTaskTag = pxHookFunction;
 800c7e4:	6565      	str	r5, [r4, #84]	@ 0x54
    }
 800c7e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        taskEXIT_CRITICAL();
 800c7ea:	f7fe bf9d 	b.w	800b728 <vPortExitCritical>
 800c7ee:	bf00      	nop
 800c7f0:	2003faec 	.word	0x2003faec

0800c7f4 <xTaskCallApplicationTaskHook>:
    {
 800c7f4:	4603      	mov	r3, r0
 800c7f6:	4608      	mov	r0, r1
        if( xTask == NULL )
 800c7f8:	b90b      	cbnz	r3, 800c7fe <xTaskCallApplicationTaskHook+0xa>
            xTCB = pxCurrentTCB;
 800c7fa:	4b03      	ldr	r3, [pc, #12]	@ (800c808 <xTaskCallApplicationTaskHook+0x14>)
 800c7fc:	681b      	ldr	r3, [r3, #0]
        if( xTCB->pxTaskTag != NULL )
 800c7fe:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800c800:	b103      	cbz	r3, 800c804 <xTaskCallApplicationTaskHook+0x10>
            xReturn = xTCB->pxTaskTag( pvParameter );
 800c802:	4718      	bx	r3
    }
 800c804:	4618      	mov	r0, r3
 800c806:	4770      	bx	lr
 800c808:	2003faec 	.word	0x2003faec

0800c80c <vTaskStartScheduler>:
{
 800c80c:	b530      	push	{r4, r5, lr}
            StaticTask_t * pxIdleTaskTCBBuffer = NULL;
 800c80e:	2400      	movs	r4, #0
{
 800c810:	b089      	sub	sp, #36	@ 0x24
            vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800c812:	aa07      	add	r2, sp, #28
 800c814:	a906      	add	r1, sp, #24
 800c816:	a805      	add	r0, sp, #20
            StackType_t * pxIdleTaskStackBuffer = NULL;
 800c818:	e9cd 4405 	strd	r4, r4, [sp, #20]
            vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800c81c:	f7fe fef6 	bl	800b60c <vApplicationGetIdleTaskMemory>
            xIdleTaskHandle = xTaskCreateStatic( prvIdleTask,
 800c820:	9b05      	ldr	r3, [sp, #20]
 800c822:	9a07      	ldr	r2, [sp, #28]
 800c824:	9302      	str	r3, [sp, #8]
 800c826:	9b06      	ldr	r3, [sp, #24]
 800c828:	4913      	ldr	r1, [pc, #76]	@ (800c878 <vTaskStartScheduler+0x6c>)
 800c82a:	e9cd 4300 	strd	r4, r3, [sp]
 800c82e:	4813      	ldr	r0, [pc, #76]	@ (800c87c <vTaskStartScheduler+0x70>)
 800c830:	4623      	mov	r3, r4
 800c832:	f7ff fe16 	bl	800c462 <xTaskCreateStatic>
            if( xIdleTaskHandle != NULL )
 800c836:	b1a8      	cbz	r0, 800c864 <vTaskStartScheduler+0x58>
                xReturn = xTimerCreateTimerTask();
 800c838:	f000 fb84 	bl	800cf44 <xTimerCreateTimerTask>
    if( xReturn == pdPASS )
 800c83c:	2801      	cmp	r0, #1
                xReturn = xTimerCreateTimerTask();
 800c83e:	4605      	mov	r5, r0
    if( xReturn == pdPASS )
 800c840:	d114      	bne.n	800c86c <vTaskStartScheduler+0x60>
        portDISABLE_INTERRUPTS();
 800c842:	f7ff f83f 	bl	800b8c4 <ulSetInterruptMask>
        xNextTaskUnblockTime = portMAX_DELAY;
 800c846:	f04f 32ff 	mov.w	r2, #4294967295
 800c84a:	4b0d      	ldr	r3, [pc, #52]	@ (800c880 <vTaskStartScheduler+0x74>)
        traceTASK_SWITCHED_IN();
 800c84c:	4621      	mov	r1, r4
        xNextTaskUnblockTime = portMAX_DELAY;
 800c84e:	601a      	str	r2, [r3, #0]
        xSchedulerRunning = pdTRUE;
 800c850:	4b0c      	ldr	r3, [pc, #48]	@ (800c884 <vTaskStartScheduler+0x78>)
 800c852:	601d      	str	r5, [r3, #0]
        xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800c854:	4b0c      	ldr	r3, [pc, #48]	@ (800c888 <vTaskStartScheduler+0x7c>)
 800c856:	601c      	str	r4, [r3, #0]
        traceTASK_SWITCHED_IN();
 800c858:	4b0c      	ldr	r3, [pc, #48]	@ (800c88c <vTaskStartScheduler+0x80>)
 800c85a:	6818      	ldr	r0, [r3, #0]
 800c85c:	f7ff ffca 	bl	800c7f4 <xTaskCallApplicationTaskHook>
        if( xPortStartScheduler() != pdFALSE )
 800c860:	f7fe ffdc 	bl	800b81c <xPortStartScheduler>
    ( void ) uxTopUsedPriority;
 800c864:	4b0a      	ldr	r3, [pc, #40]	@ (800c890 <vTaskStartScheduler+0x84>)
 800c866:	681b      	ldr	r3, [r3, #0]
}
 800c868:	b009      	add	sp, #36	@ 0x24
 800c86a:	bd30      	pop	{r4, r5, pc}
        configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800c86c:	3501      	adds	r5, #1
 800c86e:	d1f9      	bne.n	800c864 <vTaskStartScheduler+0x58>
 800c870:	f7ff f828 	bl	800b8c4 <ulSetInterruptMask>
 800c874:	e7fe      	b.n	800c874 <vTaskStartScheduler+0x68>
 800c876:	bf00      	nop
 800c878:	080270e4 	.word	0x080270e4
 800c87c:	0800c375 	.word	0x0800c375
 800c880:	2003f5f8 	.word	0x2003f5f8
 800c884:	2003f60c 	.word	0x2003f60c
 800c888:	2003f614 	.word	0x2003f614
 800c88c:	2003faec 	.word	0x2003faec
 800c890:	20000058 	.word	0x20000058

0800c894 <vTaskSwitchContext>:
{
 800c894:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800c896:	4b19      	ldr	r3, [pc, #100]	@ (800c8fc <vTaskSwitchContext+0x68>)
 800c898:	681a      	ldr	r2, [r3, #0]
 800c89a:	4b19      	ldr	r3, [pc, #100]	@ (800c900 <vTaskSwitchContext+0x6c>)
 800c89c:	b112      	cbz	r2, 800c8a4 <vTaskSwitchContext+0x10>
        xYieldPending = pdTRUE;
 800c89e:	2201      	movs	r2, #1
 800c8a0:	601a      	str	r2, [r3, #0]
}
 800c8a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800c8a4:	2714      	movs	r7, #20
        traceTASK_SWITCHED_OUT();
 800c8a6:	4c17      	ldr	r4, [pc, #92]	@ (800c904 <vTaskSwitchContext+0x70>)
        xYieldPending = pdFALSE;
 800c8a8:	601a      	str	r2, [r3, #0]
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800c8aa:	4e17      	ldr	r6, [pc, #92]	@ (800c908 <vTaskSwitchContext+0x74>)
        traceTASK_SWITCHED_OUT();
 800c8ac:	2101      	movs	r1, #1
 800c8ae:	6820      	ldr	r0, [r4, #0]
 800c8b0:	f7ff ffa0 	bl	800c7f4 <xTaskCallApplicationTaskHook>
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800c8b4:	6832      	ldr	r2, [r6, #0]
 800c8b6:	4915      	ldr	r1, [pc, #84]	@ (800c90c <vTaskSwitchContext+0x78>)
 800c8b8:	fb07 f302 	mul.w	r3, r7, r2
 800c8bc:	58cd      	ldr	r5, [r1, r3]
 800c8be:	18c8      	adds	r0, r1, r3
 800c8c0:	b1b5      	cbz	r5, 800c8f0 <vTaskSwitchContext+0x5c>
 800c8c2:	6845      	ldr	r5, [r0, #4]
 800c8c4:	3308      	adds	r3, #8
 800c8c6:	686d      	ldr	r5, [r5, #4]
 800c8c8:	440b      	add	r3, r1
 800c8ca:	429d      	cmp	r5, r3
 800c8cc:	bf08      	it	eq
 800c8ce:	686b      	ldreq	r3, [r5, #4]
 800c8d0:	6045      	str	r5, [r0, #4]
 800c8d2:	bf08      	it	eq
 800c8d4:	6043      	streq	r3, [r0, #4]
 800c8d6:	2314      	movs	r3, #20
 800c8d8:	fb03 1102 	mla	r1, r3, r2, r1
 800c8dc:	684b      	ldr	r3, [r1, #4]
        traceTASK_SWITCHED_IN();
 800c8de:	2100      	movs	r1, #0
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800c8e0:	68db      	ldr	r3, [r3, #12]
 800c8e2:	6023      	str	r3, [r4, #0]
 800c8e4:	6032      	str	r2, [r6, #0]
        traceTASK_SWITCHED_IN();
 800c8e6:	6820      	ldr	r0, [r4, #0]
}
 800c8e8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
        traceTASK_SWITCHED_IN();
 800c8ec:	f7ff bf82 	b.w	800c7f4 <xTaskCallApplicationTaskHook>
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800c8f0:	b912      	cbnz	r2, 800c8f8 <vTaskSwitchContext+0x64>
 800c8f2:	f7fe ffe7 	bl	800b8c4 <ulSetInterruptMask>
 800c8f6:	e7fe      	b.n	800c8f6 <vTaskSwitchContext+0x62>
 800c8f8:	3a01      	subs	r2, #1
 800c8fa:	e7dd      	b.n	800c8b8 <vTaskSwitchContext+0x24>
 800c8fc:	2003f5f4 	.word	0x2003f5f4
 800c900:	2003f604 	.word	0x2003f604
 800c904:	2003faec 	.word	0x2003faec
 800c908:	2003f610 	.word	0x2003f610
 800c90c:	2003f68c 	.word	0x2003f68c

0800c910 <vTaskPlaceOnEventList>:
{
 800c910:	b510      	push	{r4, lr}
 800c912:	460c      	mov	r4, r1
    configASSERT( pxEventList );
 800c914:	b910      	cbnz	r0, 800c91c <vTaskPlaceOnEventList+0xc>
 800c916:	f7fe ffd5 	bl	800b8c4 <ulSetInterruptMask>
 800c91a:	e7fe      	b.n	800c91a <vTaskPlaceOnEventList+0xa>
    vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800c91c:	4b05      	ldr	r3, [pc, #20]	@ (800c934 <vTaskPlaceOnEventList+0x24>)
 800c91e:	6819      	ldr	r1, [r3, #0]
 800c920:	3118      	adds	r1, #24
 800c922:	f7fe fe99 	bl	800b658 <vListInsert>
    prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800c926:	4620      	mov	r0, r4
}
 800c928:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800c92c:	2101      	movs	r1, #1
 800c92e:	f7ff bcb5 	b.w	800c29c <prvAddCurrentTaskToDelayedList>
 800c932:	bf00      	nop
 800c934:	2003faec 	.word	0x2003faec

0800c938 <vTaskPlaceOnEventListRestricted>:
    {
 800c938:	b570      	push	{r4, r5, r6, lr}
 800c93a:	460c      	mov	r4, r1
 800c93c:	4611      	mov	r1, r2
        configASSERT( pxEventList );
 800c93e:	b910      	cbnz	r0, 800c946 <vTaskPlaceOnEventListRestricted+0xe>
 800c940:	f7fe ffc0 	bl	800b8c4 <ulSetInterruptMask>
 800c944:	e7fe      	b.n	800c944 <vTaskPlaceOnEventListRestricted+0xc>
        listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800c946:	4b0f      	ldr	r3, [pc, #60]	@ (800c984 <vTaskPlaceOnEventListRestricted+0x4c>)
 800c948:	6842      	ldr	r2, [r0, #4]
 800c94a:	681d      	ldr	r5, [r3, #0]
 800c94c:	6896      	ldr	r6, [r2, #8]
 800c94e:	61ea      	str	r2, [r5, #28]
 800c950:	681d      	ldr	r5, [r3, #0]
            xTicksToWait = portMAX_DELAY;
 800c952:	2900      	cmp	r1, #0
        listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800c954:	622e      	str	r6, [r5, #32]
 800c956:	681d      	ldr	r5, [r3, #0]
 800c958:	f105 0518 	add.w	r5, r5, #24
 800c95c:	6075      	str	r5, [r6, #4]
 800c95e:	681d      	ldr	r5, [r3, #0]
 800c960:	681b      	ldr	r3, [r3, #0]
 800c962:	f105 0518 	add.w	r5, r5, #24
 800c966:	6095      	str	r5, [r2, #8]
 800c968:	6298      	str	r0, [r3, #40]	@ 0x28
 800c96a:	6803      	ldr	r3, [r0, #0]
 800c96c:	f103 0301 	add.w	r3, r3, #1
 800c970:	6003      	str	r3, [r0, #0]
        prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800c972:	bf08      	it	eq
 800c974:	4620      	moveq	r0, r4
    }
 800c976:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800c97a:	bf18      	it	ne
 800c97c:	f04f 30ff 	movne.w	r0, #4294967295
 800c980:	f7ff bc8c 	b.w	800c29c <prvAddCurrentTaskToDelayedList>
 800c984:	2003faec 	.word	0x2003faec

0800c988 <xTaskRemoveFromEventList>:
{
 800c988:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800c98a:	68c3      	ldr	r3, [r0, #12]
 800c98c:	68db      	ldr	r3, [r3, #12]
    configASSERT( pxUnblockedTCB );
 800c98e:	b913      	cbnz	r3, 800c996 <xTaskRemoveFromEventList+0xe>
 800c990:	f7fe ff98 	bl	800b8c4 <ulSetInterruptMask>
 800c994:	e7fe      	b.n	800c994 <xTaskRemoveFromEventList+0xc>
    listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 800c996:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800c998:	e9d3 0107 	ldrd	r0, r1, [r3, #28]
 800c99c:	6081      	str	r1, [r0, #8]
 800c99e:	6048      	str	r0, [r1, #4]
 800c9a0:	6850      	ldr	r0, [r2, #4]
 800c9a2:	f103 0418 	add.w	r4, r3, #24
 800c9a6:	42a0      	cmp	r0, r4
 800c9a8:	bf08      	it	eq
 800c9aa:	6051      	streq	r1, [r2, #4]
 800c9ac:	2100      	movs	r1, #0
 800c9ae:	6299      	str	r1, [r3, #40]	@ 0x28
 800c9b0:	6811      	ldr	r1, [r2, #0]
 800c9b2:	3901      	subs	r1, #1
 800c9b4:	6011      	str	r1, [r2, #0]
    if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800c9b6:	4a1d      	ldr	r2, [pc, #116]	@ (800ca2c <xTaskRemoveFromEventList+0xa4>)
 800c9b8:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800c9ba:	6812      	ldr	r2, [r2, #0]
 800c9bc:	2a00      	cmp	r2, #0
 800c9be:	d129      	bne.n	800ca14 <xTaskRemoveFromEventList+0x8c>
        listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
 800c9c0:	e9d3 4002 	ldrd	r4, r0, [r3, #8]
 800c9c4:	695a      	ldr	r2, [r3, #20]
 800c9c6:	60a0      	str	r0, [r4, #8]
 800c9c8:	6044      	str	r4, [r0, #4]
 800c9ca:	6854      	ldr	r4, [r2, #4]
 800c9cc:	1d1d      	adds	r5, r3, #4
 800c9ce:	42ac      	cmp	r4, r5
 800c9d0:	bf08      	it	eq
 800c9d2:	6050      	streq	r0, [r2, #4]
 800c9d4:	6810      	ldr	r0, [r2, #0]
 800c9d6:	3801      	subs	r0, #1
 800c9d8:	6010      	str	r0, [r2, #0]
        prvAddTaskToReadyList( pxUnblockedTCB );
 800c9da:	4a15      	ldr	r2, [pc, #84]	@ (800ca30 <xTaskRemoveFromEventList+0xa8>)
 800c9dc:	6810      	ldr	r0, [r2, #0]
 800c9de:	4281      	cmp	r1, r0
 800c9e0:	bf88      	it	hi
 800c9e2:	6011      	strhi	r1, [r2, #0]
 800c9e4:	2214      	movs	r2, #20
 800c9e6:	434a      	muls	r2, r1
 800c9e8:	4812      	ldr	r0, [pc, #72]	@ (800ca34 <xTaskRemoveFromEventList+0xac>)
 800c9ea:	1886      	adds	r6, r0, r2
 800c9ec:	6874      	ldr	r4, [r6, #4]
 800c9ee:	68a7      	ldr	r7, [r4, #8]
 800c9f0:	609c      	str	r4, [r3, #8]
 800c9f2:	60df      	str	r7, [r3, #12]
 800c9f4:	607d      	str	r5, [r7, #4]
 800c9f6:	60a5      	str	r5, [r4, #8]
 800c9f8:	615e      	str	r6, [r3, #20]
 800c9fa:	5883      	ldr	r3, [r0, r2]
 800c9fc:	3301      	adds	r3, #1
 800c9fe:	5083      	str	r3, [r0, r2]
    if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800ca00:	4b0d      	ldr	r3, [pc, #52]	@ (800ca38 <xTaskRemoveFromEventList+0xb0>)
 800ca02:	681b      	ldr	r3, [r3, #0]
 800ca04:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ca06:	4299      	cmp	r1, r3
        xYieldPending = pdTRUE;
 800ca08:	bf85      	ittet	hi
 800ca0a:	2001      	movhi	r0, #1
 800ca0c:	4b0b      	ldrhi	r3, [pc, #44]	@ (800ca3c <xTaskRemoveFromEventList+0xb4>)
        xReturn = pdFALSE;
 800ca0e:	2000      	movls	r0, #0
        xYieldPending = pdTRUE;
 800ca10:	6018      	strhi	r0, [r3, #0]
}
 800ca12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        listINSERT_END( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800ca14:	4a0a      	ldr	r2, [pc, #40]	@ (800ca40 <xTaskRemoveFromEventList+0xb8>)
 800ca16:	6850      	ldr	r0, [r2, #4]
 800ca18:	6885      	ldr	r5, [r0, #8]
 800ca1a:	61d8      	str	r0, [r3, #28]
 800ca1c:	621d      	str	r5, [r3, #32]
 800ca1e:	606c      	str	r4, [r5, #4]
 800ca20:	6084      	str	r4, [r0, #8]
 800ca22:	629a      	str	r2, [r3, #40]	@ 0x28
 800ca24:	6813      	ldr	r3, [r2, #0]
 800ca26:	3301      	adds	r3, #1
 800ca28:	6013      	str	r3, [r2, #0]
 800ca2a:	e7e9      	b.n	800ca00 <xTaskRemoveFromEventList+0x78>
 800ca2c:	2003f5f4 	.word	0x2003f5f4
 800ca30:	2003f610 	.word	0x2003f610
 800ca34:	2003f68c 	.word	0x2003f68c
 800ca38:	2003faec 	.word	0x2003faec
 800ca3c:	2003f604 	.word	0x2003f604
 800ca40:	2003f648 	.word	0x2003f648

0800ca44 <vTaskInternalSetTimeOutState>:
    pxTimeOut->xOverflowCount = xNumOfOverflows;
 800ca44:	4b03      	ldr	r3, [pc, #12]	@ (800ca54 <vTaskInternalSetTimeOutState+0x10>)
 800ca46:	681b      	ldr	r3, [r3, #0]
 800ca48:	6003      	str	r3, [r0, #0]
    pxTimeOut->xTimeOnEntering = xTickCount;
 800ca4a:	4b03      	ldr	r3, [pc, #12]	@ (800ca58 <vTaskInternalSetTimeOutState+0x14>)
 800ca4c:	681b      	ldr	r3, [r3, #0]
 800ca4e:	6043      	str	r3, [r0, #4]
}
 800ca50:	4770      	bx	lr
 800ca52:	bf00      	nop
 800ca54:	2003f600 	.word	0x2003f600
 800ca58:	2003f614 	.word	0x2003f614

0800ca5c <xTaskCheckForTimeOut>:
{
 800ca5c:	b570      	push	{r4, r5, r6, lr}
 800ca5e:	460d      	mov	r5, r1
    configASSERT( pxTimeOut );
 800ca60:	4604      	mov	r4, r0
 800ca62:	b910      	cbnz	r0, 800ca6a <xTaskCheckForTimeOut+0xe>
 800ca64:	f7fe ff2e 	bl	800b8c4 <ulSetInterruptMask>
 800ca68:	e7fe      	b.n	800ca68 <xTaskCheckForTimeOut+0xc>
    configASSERT( pxTicksToWait );
 800ca6a:	b911      	cbnz	r1, 800ca72 <xTaskCheckForTimeOut+0x16>
 800ca6c:	f7fe ff2a 	bl	800b8c4 <ulSetInterruptMask>
 800ca70:	e7fe      	b.n	800ca70 <xTaskCheckForTimeOut+0x14>
    taskENTER_CRITICAL();
 800ca72:	f7fe fe4b 	bl	800b70c <vPortEnterCritical>
        const TickType_t xConstTickCount = xTickCount;
 800ca76:	4b0f      	ldr	r3, [pc, #60]	@ (800cab4 <xTaskCheckForTimeOut+0x58>)
 800ca78:	6819      	ldr	r1, [r3, #0]
            if( *pxTicksToWait == portMAX_DELAY )
 800ca7a:	682b      	ldr	r3, [r5, #0]
 800ca7c:	1c5a      	adds	r2, r3, #1
 800ca7e:	d017      	beq.n	800cab0 <xTaskCheckForTimeOut+0x54>
        if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800ca80:	480d      	ldr	r0, [pc, #52]	@ (800cab8 <xTaskCheckForTimeOut+0x5c>)
 800ca82:	6826      	ldr	r6, [r4, #0]
 800ca84:	6800      	ldr	r0, [r0, #0]
        const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800ca86:	6862      	ldr	r2, [r4, #4]
        if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800ca88:	4286      	cmp	r6, r0
 800ca8a:	d008      	beq.n	800ca9e <xTaskCheckForTimeOut+0x42>
 800ca8c:	428a      	cmp	r2, r1
 800ca8e:	d806      	bhi.n	800ca9e <xTaskCheckForTimeOut+0x42>
            *pxTicksToWait = ( TickType_t ) 0;
 800ca90:	2300      	movs	r3, #0
            xReturn = pdTRUE;
 800ca92:	2401      	movs	r4, #1
            *pxTicksToWait = ( TickType_t ) 0;
 800ca94:	602b      	str	r3, [r5, #0]
    taskEXIT_CRITICAL();
 800ca96:	f7fe fe47 	bl	800b728 <vPortExitCritical>
}
 800ca9a:	4620      	mov	r0, r4
 800ca9c:	bd70      	pop	{r4, r5, r6, pc}
        const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800ca9e:	1a88      	subs	r0, r1, r2
        else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800caa0:	4283      	cmp	r3, r0
 800caa2:	d9f5      	bls.n	800ca90 <xTaskCheckForTimeOut+0x34>
            *pxTicksToWait -= xElapsedTime;
 800caa4:	1a5b      	subs	r3, r3, r1
 800caa6:	4413      	add	r3, r2
            vTaskInternalSetTimeOutState( pxTimeOut );
 800caa8:	4620      	mov	r0, r4
            *pxTicksToWait -= xElapsedTime;
 800caaa:	602b      	str	r3, [r5, #0]
            vTaskInternalSetTimeOutState( pxTimeOut );
 800caac:	f7ff ffca 	bl	800ca44 <vTaskInternalSetTimeOutState>
                xReturn = pdFALSE;
 800cab0:	2400      	movs	r4, #0
 800cab2:	e7f0      	b.n	800ca96 <xTaskCheckForTimeOut+0x3a>
 800cab4:	2003f614 	.word	0x2003f614
 800cab8:	2003f600 	.word	0x2003f600

0800cabc <vTaskMissedYield>:
    xYieldPending = pdTRUE;
 800cabc:	2201      	movs	r2, #1
 800cabe:	4b01      	ldr	r3, [pc, #4]	@ (800cac4 <vTaskMissedYield+0x8>)
 800cac0:	601a      	str	r2, [r3, #0]
}
 800cac2:	4770      	bx	lr
 800cac4:	2003f604 	.word	0x2003f604

0800cac8 <xTaskGetSchedulerState>:
        if( xSchedulerRunning == pdFALSE )
 800cac8:	4b05      	ldr	r3, [pc, #20]	@ (800cae0 <xTaskGetSchedulerState+0x18>)
 800caca:	681b      	ldr	r3, [r3, #0]
 800cacc:	b133      	cbz	r3, 800cadc <xTaskGetSchedulerState+0x14>
            if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800cace:	4b05      	ldr	r3, [pc, #20]	@ (800cae4 <xTaskGetSchedulerState+0x1c>)
 800cad0:	6818      	ldr	r0, [r3, #0]
 800cad2:	fab0 f080 	clz	r0, r0
 800cad6:	0940      	lsrs	r0, r0, #5
 800cad8:	0040      	lsls	r0, r0, #1
 800cada:	4770      	bx	lr
            xReturn = taskSCHEDULER_NOT_STARTED;
 800cadc:	2001      	movs	r0, #1
    }
 800cade:	4770      	bx	lr
 800cae0:	2003f60c 	.word	0x2003f60c
 800cae4:	2003f5f4 	.word	0x2003f5f4

0800cae8 <xTaskPriorityInherit>:
    {
 800cae8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        if( pxMutexHolder != NULL )
 800caea:	4604      	mov	r4, r0
 800caec:	2800      	cmp	r0, #0
 800caee:	d02e      	beq.n	800cb4e <xTaskPriorityInherit+0x66>
            if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800caf0:	4d1d      	ldr	r5, [pc, #116]	@ (800cb68 <xTaskPriorityInherit+0x80>)
 800caf2:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800caf4:	682a      	ldr	r2, [r5, #0]
 800caf6:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800caf8:	4293      	cmp	r3, r2
 800cafa:	d22d      	bcs.n	800cb58 <xTaskPriorityInherit+0x70>
                if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800cafc:	6982      	ldr	r2, [r0, #24]
                if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800cafe:	4e1b      	ldr	r6, [pc, #108]	@ (800cb6c <xTaskPriorityInherit+0x84>)
                if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800cb00:	2a00      	cmp	r2, #0
                    listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800cb02:	bfa1      	itttt	ge
 800cb04:	682a      	ldrge	r2, [r5, #0]
 800cb06:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 800cb08:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 800cb0c:	6182      	strge	r2, [r0, #24]
                if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800cb0e:	2214      	movs	r2, #20
 800cb10:	fb02 6303 	mla	r3, r2, r3, r6
 800cb14:	6942      	ldr	r2, [r0, #20]
 800cb16:	429a      	cmp	r2, r3
 800cb18:	d11a      	bne.n	800cb50 <xTaskPriorityInherit+0x68>
                    if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800cb1a:	1d07      	adds	r7, r0, #4
 800cb1c:	4638      	mov	r0, r7
 800cb1e:	f7fe fdb2 	bl	800b686 <uxListRemove>
                    pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800cb22:	682b      	ldr	r3, [r5, #0]
                    prvAddTaskToReadyList( pxMutexHolderTCB );
 800cb24:	4a12      	ldr	r2, [pc, #72]	@ (800cb70 <xTaskPriorityInherit+0x88>)
                    pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800cb26:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
                    prvAddTaskToReadyList( pxMutexHolderTCB );
 800cb28:	6811      	ldr	r1, [r2, #0]
                    pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800cb2a:	62e3      	str	r3, [r4, #44]	@ 0x2c
                    prvAddTaskToReadyList( pxMutexHolderTCB );
 800cb2c:	428b      	cmp	r3, r1
 800cb2e:	bf88      	it	hi
 800cb30:	6013      	strhi	r3, [r2, #0]
 800cb32:	2214      	movs	r2, #20
 800cb34:	4353      	muls	r3, r2
 800cb36:	18f1      	adds	r1, r6, r3
 800cb38:	684a      	ldr	r2, [r1, #4]
 800cb3a:	6890      	ldr	r0, [r2, #8]
 800cb3c:	60a2      	str	r2, [r4, #8]
 800cb3e:	60e0      	str	r0, [r4, #12]
 800cb40:	6047      	str	r7, [r0, #4]
 800cb42:	6097      	str	r7, [r2, #8]
 800cb44:	58f2      	ldr	r2, [r6, r3]
 800cb46:	6161      	str	r1, [r4, #20]
 800cb48:	3201      	adds	r2, #1
 800cb4a:	50f2      	str	r2, [r6, r3]
                xReturn = pdTRUE;
 800cb4c:	2001      	movs	r0, #1
    }
 800cb4e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                    pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800cb50:	682b      	ldr	r3, [r5, #0]
 800cb52:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cb54:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800cb56:	e7f9      	b.n	800cb4c <xTaskPriorityInherit+0x64>
                if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800cb58:	682b      	ldr	r3, [r5, #0]
 800cb5a:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 800cb5c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cb5e:	4298      	cmp	r0, r3
 800cb60:	bf2c      	ite	cs
 800cb62:	2000      	movcs	r0, #0
 800cb64:	2001      	movcc	r0, #1
 800cb66:	e7f2      	b.n	800cb4e <xTaskPriorityInherit+0x66>
 800cb68:	2003faec 	.word	0x2003faec
 800cb6c:	2003f68c 	.word	0x2003f68c
 800cb70:	2003f610 	.word	0x2003f610

0800cb74 <xTaskPriorityDisinherit>:
    {
 800cb74:	b570      	push	{r4, r5, r6, lr}
        if( pxMutexHolder != NULL )
 800cb76:	4604      	mov	r4, r0
 800cb78:	b908      	cbnz	r0, 800cb7e <xTaskPriorityDisinherit+0xa>
        BaseType_t xReturn = pdFALSE;
 800cb7a:	2000      	movs	r0, #0
    }
 800cb7c:	bd70      	pop	{r4, r5, r6, pc}
            configASSERT( pxTCB == pxCurrentTCB );
 800cb7e:	4b19      	ldr	r3, [pc, #100]	@ (800cbe4 <xTaskPriorityDisinherit+0x70>)
 800cb80:	681b      	ldr	r3, [r3, #0]
 800cb82:	4283      	cmp	r3, r0
 800cb84:	d002      	beq.n	800cb8c <xTaskPriorityDisinherit+0x18>
 800cb86:	f7fe fe9d 	bl	800b8c4 <ulSetInterruptMask>
 800cb8a:	e7fe      	b.n	800cb8a <xTaskPriorityDisinherit+0x16>
            configASSERT( pxTCB->uxMutexesHeld );
 800cb8c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800cb8e:	b913      	cbnz	r3, 800cb96 <xTaskPriorityDisinherit+0x22>
 800cb90:	f7fe fe98 	bl	800b8c4 <ulSetInterruptMask>
 800cb94:	e7fe      	b.n	800cb94 <xTaskPriorityDisinherit+0x20>
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800cb96:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800cb98:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
            ( pxTCB->uxMutexesHeld )--;
 800cb9a:	3b01      	subs	r3, #1
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800cb9c:	4291      	cmp	r1, r2
            ( pxTCB->uxMutexesHeld )--;
 800cb9e:	6503      	str	r3, [r0, #80]	@ 0x50
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800cba0:	d0eb      	beq.n	800cb7a <xTaskPriorityDisinherit+0x6>
                if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800cba2:	2b00      	cmp	r3, #0
 800cba4:	d1e9      	bne.n	800cb7a <xTaskPriorityDisinherit+0x6>
                    if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800cba6:	1d05      	adds	r5, r0, #4
 800cba8:	4628      	mov	r0, r5
 800cbaa:	f7fe fd6c 	bl	800b686 <uxListRemove>
                    pxTCB->uxPriority = pxTCB->uxBasePriority;
 800cbae:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
                    listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800cbb0:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 800cbb4:	61a2      	str	r2, [r4, #24]
                    prvAddTaskToReadyList( pxTCB );
 800cbb6:	4a0c      	ldr	r2, [pc, #48]	@ (800cbe8 <xTaskPriorityDisinherit+0x74>)
                    pxTCB->uxPriority = pxTCB->uxBasePriority;
 800cbb8:	62e3      	str	r3, [r4, #44]	@ 0x2c
                    prvAddTaskToReadyList( pxTCB );
 800cbba:	6811      	ldr	r1, [r2, #0]
 800cbbc:	428b      	cmp	r3, r1
 800cbbe:	f04f 0114 	mov.w	r1, #20
 800cbc2:	bf88      	it	hi
 800cbc4:	6013      	strhi	r3, [r2, #0]
 800cbc6:	434b      	muls	r3, r1
 800cbc8:	4a08      	ldr	r2, [pc, #32]	@ (800cbec <xTaskPriorityDisinherit+0x78>)
 800cbca:	18d0      	adds	r0, r2, r3
 800cbcc:	6841      	ldr	r1, [r0, #4]
 800cbce:	688e      	ldr	r6, [r1, #8]
 800cbd0:	60a1      	str	r1, [r4, #8]
 800cbd2:	60e6      	str	r6, [r4, #12]
 800cbd4:	6075      	str	r5, [r6, #4]
 800cbd6:	608d      	str	r5, [r1, #8]
 800cbd8:	58d1      	ldr	r1, [r2, r3]
 800cbda:	6160      	str	r0, [r4, #20]
 800cbdc:	3101      	adds	r1, #1
                    xReturn = pdTRUE;
 800cbde:	2001      	movs	r0, #1
                    prvAddTaskToReadyList( pxTCB );
 800cbe0:	50d1      	str	r1, [r2, r3]
        return xReturn;
 800cbe2:	e7cb      	b.n	800cb7c <xTaskPriorityDisinherit+0x8>
 800cbe4:	2003faec 	.word	0x2003faec
 800cbe8:	2003f610 	.word	0x2003f610
 800cbec:	2003f68c 	.word	0x2003f68c

0800cbf0 <vTaskPriorityDisinheritAfterTimeout>:
    {
 800cbf0:	b570      	push	{r4, r5, r6, lr}
        if( pxMutexHolder != NULL )
 800cbf2:	4604      	mov	r4, r0
 800cbf4:	2800      	cmp	r0, #0
 800cbf6:	d03a      	beq.n	800cc6e <vTaskPriorityDisinheritAfterTimeout+0x7e>
            configASSERT( pxTCB->uxMutexesHeld );
 800cbf8:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 800cbfa:	b912      	cbnz	r2, 800cc02 <vTaskPriorityDisinheritAfterTimeout+0x12>
 800cbfc:	f7fe fe62 	bl	800b8c4 <ulSetInterruptMask>
 800cc00:	e7fe      	b.n	800cc00 <vTaskPriorityDisinheritAfterTimeout+0x10>
            if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800cc02:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 800cc04:	4299      	cmp	r1, r3
 800cc06:	bf38      	it	cc
 800cc08:	4619      	movcc	r1, r3
            if( pxTCB->uxPriority != uxPriorityToUse )
 800cc0a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800cc0c:	428b      	cmp	r3, r1
 800cc0e:	d02e      	beq.n	800cc6e <vTaskPriorityDisinheritAfterTimeout+0x7e>
                if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800cc10:	2a01      	cmp	r2, #1
 800cc12:	d12c      	bne.n	800cc6e <vTaskPriorityDisinheritAfterTimeout+0x7e>
                    configASSERT( pxTCB != pxCurrentTCB );
 800cc14:	4a16      	ldr	r2, [pc, #88]	@ (800cc70 <vTaskPriorityDisinheritAfterTimeout+0x80>)
 800cc16:	6812      	ldr	r2, [r2, #0]
 800cc18:	4282      	cmp	r2, r0
 800cc1a:	d102      	bne.n	800cc22 <vTaskPriorityDisinheritAfterTimeout+0x32>
 800cc1c:	f7fe fe52 	bl	800b8c4 <ulSetInterruptMask>
 800cc20:	e7fe      	b.n	800cc20 <vTaskPriorityDisinheritAfterTimeout+0x30>
                    if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800cc22:	6982      	ldr	r2, [r0, #24]
                    if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800cc24:	4d13      	ldr	r5, [pc, #76]	@ (800cc74 <vTaskPriorityDisinheritAfterTimeout+0x84>)
                    if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800cc26:	2a00      	cmp	r2, #0
                    if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800cc28:	f04f 0214 	mov.w	r2, #20
 800cc2c:	fb02 5303 	mla	r3, r2, r3, r5
 800cc30:	6942      	ldr	r2, [r0, #20]
                    pxTCB->uxPriority = uxPriorityToUse;
 800cc32:	62c1      	str	r1, [r0, #44]	@ 0x2c
                        listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800cc34:	bfa4      	itt	ge
 800cc36:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 800cc3a:	6181      	strge	r1, [r0, #24]
                    if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800cc3c:	429a      	cmp	r2, r3
 800cc3e:	d116      	bne.n	800cc6e <vTaskPriorityDisinheritAfterTimeout+0x7e>
                        if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800cc40:	1d06      	adds	r6, r0, #4
 800cc42:	4630      	mov	r0, r6
 800cc44:	f7fe fd1f 	bl	800b686 <uxListRemove>
                        prvAddTaskToReadyList( pxTCB );
 800cc48:	4a0b      	ldr	r2, [pc, #44]	@ (800cc78 <vTaskPriorityDisinheritAfterTimeout+0x88>)
 800cc4a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800cc4c:	6811      	ldr	r1, [r2, #0]
 800cc4e:	428b      	cmp	r3, r1
 800cc50:	bf88      	it	hi
 800cc52:	6013      	strhi	r3, [r2, #0]
 800cc54:	2214      	movs	r2, #20
 800cc56:	4353      	muls	r3, r2
 800cc58:	18e9      	adds	r1, r5, r3
 800cc5a:	684a      	ldr	r2, [r1, #4]
 800cc5c:	6890      	ldr	r0, [r2, #8]
 800cc5e:	60a2      	str	r2, [r4, #8]
 800cc60:	60e0      	str	r0, [r4, #12]
 800cc62:	6046      	str	r6, [r0, #4]
 800cc64:	6096      	str	r6, [r2, #8]
 800cc66:	58ea      	ldr	r2, [r5, r3]
 800cc68:	6161      	str	r1, [r4, #20]
 800cc6a:	3201      	adds	r2, #1
 800cc6c:	50ea      	str	r2, [r5, r3]
    }
 800cc6e:	bd70      	pop	{r4, r5, r6, pc}
 800cc70:	2003faec 	.word	0x2003faec
 800cc74:	2003f68c 	.word	0x2003f68c
 800cc78:	2003f610 	.word	0x2003f610

0800cc7c <pvTaskIncrementMutexHeldCount>:
        if( pxCurrentTCB != NULL )
 800cc7c:	4b04      	ldr	r3, [pc, #16]	@ (800cc90 <pvTaskIncrementMutexHeldCount+0x14>)
 800cc7e:	681a      	ldr	r2, [r3, #0]
 800cc80:	b11a      	cbz	r2, 800cc8a <pvTaskIncrementMutexHeldCount+0xe>
            ( pxCurrentTCB->uxMutexesHeld )++;
 800cc82:	6819      	ldr	r1, [r3, #0]
 800cc84:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 800cc86:	3201      	adds	r2, #1
 800cc88:	650a      	str	r2, [r1, #80]	@ 0x50
        return pxCurrentTCB;
 800cc8a:	6818      	ldr	r0, [r3, #0]
    }
 800cc8c:	4770      	bx	lr
 800cc8e:	bf00      	nop
 800cc90:	2003faec 	.word	0x2003faec

0800cc94 <prvInsertTimerInActiveList>:
        BaseType_t xProcessTimerNow = pdFALSE;

        listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
        listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

        if( xNextExpiryTime <= xTimeNow )
 800cc94:	4291      	cmp	r1, r2
    {
 800cc96:	b508      	push	{r3, lr}
        listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800cc98:	6041      	str	r1, [r0, #4]
        listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800cc9a:	6100      	str	r0, [r0, #16]
        if( xNextExpiryTime <= xTimeNow )
 800cc9c:	d80a      	bhi.n	800ccb4 <prvInsertTimerInActiveList+0x20>
        {
            /* Has the expiry time elapsed between the command to start/reset a
             * timer was issued, and the time the command was processed? */
            if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800cc9e:	1ad2      	subs	r2, r2, r3
 800cca0:	6983      	ldr	r3, [r0, #24]
 800cca2:	429a      	cmp	r2, r3
 800cca4:	d20d      	bcs.n	800ccc2 <prvInsertTimerInActiveList+0x2e>
                 * processed actually exceeds the timers period.  */
                xProcessTimerNow = pdTRUE;
            }
            else
            {
                vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800cca6:	4b08      	ldr	r3, [pc, #32]	@ (800ccc8 <prvInsertTimerInActiveList+0x34>)
 800cca8:	1d01      	adds	r1, r0, #4
                 * its expiry time and should be processed immediately. */
                xProcessTimerNow = pdTRUE;
            }
            else
            {
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ccaa:	6818      	ldr	r0, [r3, #0]
 800ccac:	f7fe fcd4 	bl	800b658 <vListInsert>
        BaseType_t xProcessTimerNow = pdFALSE;
 800ccb0:	2000      	movs	r0, #0
            }
        }

        return xProcessTimerNow;
    }
 800ccb2:	bd08      	pop	{r3, pc}
            if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800ccb4:	429a      	cmp	r2, r3
 800ccb6:	d201      	bcs.n	800ccbc <prvInsertTimerInActiveList+0x28>
 800ccb8:	4299      	cmp	r1, r3
 800ccba:	d202      	bcs.n	800ccc2 <prvInsertTimerInActiveList+0x2e>
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ccbc:	4b03      	ldr	r3, [pc, #12]	@ (800cccc <prvInsertTimerInActiveList+0x38>)
 800ccbe:	1d01      	adds	r1, r0, #4
 800ccc0:	e7f3      	b.n	800ccaa <prvInsertTimerInActiveList+0x16>
                xProcessTimerNow = pdTRUE;
 800ccc2:	2001      	movs	r0, #1
        return xProcessTimerNow;
 800ccc4:	e7f5      	b.n	800ccb2 <prvInsertTimerInActiveList+0x1e>
 800ccc6:	bf00      	nop
 800ccc8:	2003fbec 	.word	0x2003fbec
 800cccc:	2003fbf0 	.word	0x2003fbf0

0800ccd0 <prvReloadTimer>:
    {
 800ccd0:	b570      	push	{r4, r5, r6, lr}
 800ccd2:	4604      	mov	r4, r0
 800ccd4:	460d      	mov	r5, r1
 800ccd6:	4616      	mov	r6, r2
        while( prvInsertTimerInActiveList( pxTimer, ( xExpiredTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xExpiredTime ) != pdFALSE )
 800ccd8:	69a1      	ldr	r1, [r4, #24]
 800ccda:	462b      	mov	r3, r5
 800ccdc:	4632      	mov	r2, r6
 800ccde:	4620      	mov	r0, r4
 800cce0:	4429      	add	r1, r5
 800cce2:	f7ff ffd7 	bl	800cc94 <prvInsertTimerInActiveList>
 800cce6:	b900      	cbnz	r0, 800ccea <prvReloadTimer+0x1a>
    }
 800cce8:	bd70      	pop	{r4, r5, r6, pc}
            xExpiredTime += pxTimer->xTimerPeriodInTicks;
 800ccea:	69a3      	ldr	r3, [r4, #24]
            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ccec:	4620      	mov	r0, r4
            xExpiredTime += pxTimer->xTimerPeriodInTicks;
 800ccee:	441d      	add	r5, r3
            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ccf0:	6a23      	ldr	r3, [r4, #32]
 800ccf2:	4798      	blx	r3
 800ccf4:	e7f0      	b.n	800ccd8 <prvReloadTimer+0x8>
	...

0800ccf8 <prvProcessExpiredTimer>:
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ccf8:	4b0e      	ldr	r3, [pc, #56]	@ (800cd34 <prvProcessExpiredTimer+0x3c>)
    {
 800ccfa:	b570      	push	{r4, r5, r6, lr}
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ccfc:	681b      	ldr	r3, [r3, #0]
    {
 800ccfe:	4605      	mov	r5, r0
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800cd00:	68db      	ldr	r3, [r3, #12]
    {
 800cd02:	460e      	mov	r6, r1
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800cd04:	68dc      	ldr	r4, [r3, #12]
        ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800cd06:	1d20      	adds	r0, r4, #4
 800cd08:	f7fe fcbd 	bl	800b686 <uxListRemove>
        if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800cd0c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800cd10:	075a      	lsls	r2, r3, #29
 800cd12:	d509      	bpl.n	800cd28 <prvProcessExpiredTimer+0x30>
            prvReloadTimer( pxTimer, xNextExpireTime, xTimeNow );
 800cd14:	4632      	mov	r2, r6
 800cd16:	4629      	mov	r1, r5
 800cd18:	4620      	mov	r0, r4
 800cd1a:	f7ff ffd9 	bl	800ccd0 <prvReloadTimer>
        pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800cd1e:	4620      	mov	r0, r4
 800cd20:	6a23      	ldr	r3, [r4, #32]
    }
 800cd22:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800cd26:	4718      	bx	r3
            pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 800cd28:	f023 0301 	bic.w	r3, r3, #1
 800cd2c:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800cd30:	e7f5      	b.n	800cd1e <prvProcessExpiredTimer+0x26>
 800cd32:	bf00      	nop
 800cd34:	2003fbf0 	.word	0x2003fbf0

0800cd38 <prvSampleTimeNow>:
    {
 800cd38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cd3a:	4605      	mov	r5, r0
        xTimeNow = xTaskGetTickCount();
 800cd3c:	f7ff fbee 	bl	800c51c <xTaskGetTickCount>
        if( xTimeNow < xLastTime )
 800cd40:	4e0d      	ldr	r6, [pc, #52]	@ (800cd78 <prvSampleTimeNow+0x40>)
        xTimeNow = xTaskGetTickCount();
 800cd42:	4604      	mov	r4, r0
        if( xTimeNow < xLastTime )
 800cd44:	6833      	ldr	r3, [r6, #0]
 800cd46:	4283      	cmp	r3, r0
 800cd48:	d909      	bls.n	800cd5e <prvSampleTimeNow+0x26>

        /* The tick count has overflowed.  The timer lists must be switched.
         * If there are any timers still referenced from the current timer list
         * then they must have expired and should be processed before the lists
         * are switched. */
        while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800cd4a:	4f0c      	ldr	r7, [pc, #48]	@ (800cd7c <prvSampleTimeNow+0x44>)
 800cd4c:	683b      	ldr	r3, [r7, #0]
 800cd4e:	681a      	ldr	r2, [r3, #0]
 800cd50:	b952      	cbnz	r2, 800cd68 <prvSampleTimeNow+0x30>
             * expirations must wait until after the lists are switched. */
            prvProcessExpiredTimer( xNextExpireTime, tmrMAX_TIME_BEFORE_OVERFLOW );
        }

        pxTemp = pxCurrentTimerList;
        pxCurrentTimerList = pxOverflowTimerList;
 800cd52:	4a0b      	ldr	r2, [pc, #44]	@ (800cd80 <prvSampleTimeNow+0x48>)
 800cd54:	6811      	ldr	r1, [r2, #0]
        pxOverflowTimerList = pxTemp;
 800cd56:	6013      	str	r3, [r2, #0]
        pxCurrentTimerList = pxOverflowTimerList;
 800cd58:	6039      	str	r1, [r7, #0]
            *pxTimerListsWereSwitched = pdTRUE;
 800cd5a:	2301      	movs	r3, #1
 800cd5c:	e000      	b.n	800cd60 <prvSampleTimeNow+0x28>
 800cd5e:	2300      	movs	r3, #0
    }
 800cd60:	4620      	mov	r0, r4
            *pxTimerListsWereSwitched = pdTRUE;
 800cd62:	602b      	str	r3, [r5, #0]
        xLastTime = xTimeNow;
 800cd64:	6034      	str	r4, [r6, #0]
    }
 800cd66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800cd68:	68db      	ldr	r3, [r3, #12]
            prvProcessExpiredTimer( xNextExpireTime, tmrMAX_TIME_BEFORE_OVERFLOW );
 800cd6a:	f04f 31ff 	mov.w	r1, #4294967295
 800cd6e:	6818      	ldr	r0, [r3, #0]
 800cd70:	f7ff ffc2 	bl	800ccf8 <prvProcessExpiredTimer>
 800cd74:	e7ea      	b.n	800cd4c <prvSampleTimeNow+0x14>
 800cd76:	bf00      	nop
 800cd78:	2003fbe0 	.word	0x2003fbe0
 800cd7c:	2003fbf0 	.word	0x2003fbf0
 800cd80:	2003fbec 	.word	0x2003fbec

0800cd84 <prvTimerTask>:
    {
 800cd84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800cd88:	4f51      	ldr	r7, [pc, #324]	@ (800ced0 <prvTimerTask+0x14c>)
 800cd8a:	4e52      	ldr	r6, [pc, #328]	@ (800ced4 <prvTimerTask+0x150>)
    {
 800cd8c:	b086      	sub	sp, #24
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800cd8e:	683b      	ldr	r3, [r7, #0]
 800cd90:	f8d3 8000 	ldr.w	r8, [r3]
 800cd94:	f1b8 0f00 	cmp.w	r8, #0
 800cd98:	d032      	beq.n	800ce00 <prvTimerTask+0x7c>
 800cd9a:	2400      	movs	r4, #0
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800cd9c:	68db      	ldr	r3, [r3, #12]
 800cd9e:	f8d3 8000 	ldr.w	r8, [r3]
        vTaskSuspendAll();
 800cda2:	f7ff fbb3 	bl	800c50c <vTaskSuspendAll>
            xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800cda6:	a802      	add	r0, sp, #8
 800cda8:	f7ff ffc6 	bl	800cd38 <prvSampleTimeNow>
            if( xTimerListsWereSwitched == pdFALSE )
 800cdac:	9b02      	ldr	r3, [sp, #8]
            xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800cdae:	4605      	mov	r5, r0
            if( xTimerListsWereSwitched == pdFALSE )
 800cdb0:	2b00      	cmp	r3, #0
 800cdb2:	d13a      	bne.n	800ce2a <prvTimerTask+0xa6>
                if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800cdb4:	bb34      	cbnz	r4, 800ce04 <prvTimerTask+0x80>
 800cdb6:	4540      	cmp	r0, r8
 800cdb8:	d32a      	bcc.n	800ce10 <prvTimerTask+0x8c>
                    ( void ) xTaskResumeAll();
 800cdba:	f7ff fc65 	bl	800c688 <xTaskResumeAll>
                    prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 800cdbe:	4629      	mov	r1, r5
 800cdc0:	4640      	mov	r0, r8
 800cdc2:	f7ff ff99 	bl	800ccf8 <prvProcessExpiredTimer>
        while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800cdc6:	2200      	movs	r2, #0
 800cdc8:	6830      	ldr	r0, [r6, #0]
 800cdca:	a902      	add	r1, sp, #8
 800cdcc:	f7ff f825 	bl	800be1a <xQueueReceive>
 800cdd0:	2800      	cmp	r0, #0
 800cdd2:	d0dc      	beq.n	800cd8e <prvTimerTask+0xa>
                    if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800cdd4:	9b02      	ldr	r3, [sp, #8]
                        pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800cdd6:	9804      	ldr	r0, [sp, #16]
                    if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800cdd8:	2b00      	cmp	r3, #0
 800cdda:	db29      	blt.n	800ce30 <prvTimerTask+0xac>
                pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800cddc:	9c04      	ldr	r4, [sp, #16]
                if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800cdde:	6963      	ldr	r3, [r4, #20]
 800cde0:	bb6b      	cbnz	r3, 800ce3e <prvTimerTask+0xba>
                xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800cde2:	a801      	add	r0, sp, #4
 800cde4:	f7ff ffa8 	bl	800cd38 <prvSampleTimeNow>
                switch( xMessage.xMessageID )
 800cde8:	9b02      	ldr	r3, [sp, #8]
                xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800cdea:	4605      	mov	r5, r0
                switch( xMessage.xMessageID )
 800cdec:	3b01      	subs	r3, #1
 800cdee:	2b08      	cmp	r3, #8
 800cdf0:	d8e9      	bhi.n	800cdc6 <prvTimerTask+0x42>
 800cdf2:	e8df f003 	tbb	[pc, r3]
 800cdf6:	2828      	.short	0x2828
 800cdf8:	2865524b 	.word	0x2865524b
 800cdfc:	4b28      	.short	0x4b28
 800cdfe:	52          	.byte	0x52
 800cdff:	00          	.byte	0x00
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ce00:	2401      	movs	r4, #1
 800ce02:	e7ce      	b.n	800cda2 <prvTimerTask+0x1e>
                        xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800ce04:	4b34      	ldr	r3, [pc, #208]	@ (800ced8 <prvTimerTask+0x154>)
 800ce06:	681b      	ldr	r3, [r3, #0]
 800ce08:	681c      	ldr	r4, [r3, #0]
 800ce0a:	fab4 f484 	clz	r4, r4
 800ce0e:	0964      	lsrs	r4, r4, #5
                    vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800ce10:	4622      	mov	r2, r4
 800ce12:	6830      	ldr	r0, [r6, #0]
 800ce14:	eba8 0105 	sub.w	r1, r8, r5
 800ce18:	f7ff f99d 	bl	800c156 <vQueueWaitForMessageRestricted>
                    if( xTaskResumeAll() == pdFALSE )
 800ce1c:	f7ff fc34 	bl	800c688 <xTaskResumeAll>
 800ce20:	2800      	cmp	r0, #0
 800ce22:	d1d0      	bne.n	800cdc6 <prvTimerTask+0x42>
                        portYIELD_WITHIN_API();
 800ce24:	f7fe fc66 	bl	800b6f4 <vPortYield>
 800ce28:	e7cd      	b.n	800cdc6 <prvTimerTask+0x42>
                ( void ) xTaskResumeAll();
 800ce2a:	f7ff fc2d 	bl	800c688 <xTaskResumeAll>
    }
 800ce2e:	e7ca      	b.n	800cdc6 <prvTimerTask+0x42>
                        pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800ce30:	9b03      	ldr	r3, [sp, #12]
 800ce32:	9905      	ldr	r1, [sp, #20]
 800ce34:	4798      	blx	r3
            if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800ce36:	9b02      	ldr	r3, [sp, #8]
 800ce38:	2b00      	cmp	r3, #0
 800ce3a:	dbc4      	blt.n	800cdc6 <prvTimerTask+0x42>
 800ce3c:	e7ce      	b.n	800cddc <prvTimerTask+0x58>
                    ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ce3e:	1d20      	adds	r0, r4, #4
 800ce40:	f7fe fc21 	bl	800b686 <uxListRemove>
 800ce44:	e7cd      	b.n	800cde2 <prvTimerTask+0x5e>
                        pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ce46:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
                        if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800ce4a:	69a1      	ldr	r1, [r4, #24]
                        pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ce4c:	f043 0301 	orr.w	r3, r3, #1
 800ce50:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
                        if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800ce54:	9b03      	ldr	r3, [sp, #12]
 800ce56:	4602      	mov	r2, r0
 800ce58:	4419      	add	r1, r3
 800ce5a:	4620      	mov	r0, r4
 800ce5c:	f7ff ff1a 	bl	800cc94 <prvInsertTimerInActiveList>
 800ce60:	2800      	cmp	r0, #0
 800ce62:	d0b0      	beq.n	800cdc6 <prvTimerTask+0x42>
                            if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ce64:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800ce68:	0759      	lsls	r1, r3, #29
 800ce6a:	d50a      	bpl.n	800ce82 <prvTimerTask+0xfe>
                                prvReloadTimer( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow );
 800ce6c:	69a3      	ldr	r3, [r4, #24]
 800ce6e:	9903      	ldr	r1, [sp, #12]
 800ce70:	462a      	mov	r2, r5
 800ce72:	4620      	mov	r0, r4
 800ce74:	4419      	add	r1, r3
 800ce76:	f7ff ff2b 	bl	800ccd0 <prvReloadTimer>
                            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ce7a:	4620      	mov	r0, r4
 800ce7c:	6a23      	ldr	r3, [r4, #32]
 800ce7e:	4798      	blx	r3
 800ce80:	e7a1      	b.n	800cdc6 <prvTimerTask+0x42>
                                pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 800ce82:	f023 0301 	bic.w	r3, r3, #1
 800ce86:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800ce8a:	e7f6      	b.n	800ce7a <prvTimerTask+0xf6>
                        pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 800ce8c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
                                    pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 800ce90:	f023 0301 	bic.w	r3, r3, #1
 800ce94:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800ce98:	e795      	b.n	800cdc6 <prvTimerTask+0x42>
                        pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ce9a:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800ce9e:	f043 0301 	orr.w	r3, r3, #1
 800cea2:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
                        pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800cea6:	9903      	ldr	r1, [sp, #12]
 800cea8:	61a1      	str	r1, [r4, #24]
                        configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800ceaa:	b911      	cbnz	r1, 800ceb2 <prvTimerTask+0x12e>
 800ceac:	f7fe fd0a 	bl	800b8c4 <ulSetInterruptMask>
 800ceb0:	e7fe      	b.n	800ceb0 <prvTimerTask+0x12c>
                        ( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800ceb2:	4603      	mov	r3, r0
 800ceb4:	4602      	mov	r2, r0
 800ceb6:	4401      	add	r1, r0
 800ceb8:	4620      	mov	r0, r4
 800ceba:	f7ff feeb 	bl	800cc94 <prvInsertTimerInActiveList>
                        break;
 800cebe:	e782      	b.n	800cdc6 <prvTimerTask+0x42>
                                if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800cec0:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800cec4:	079a      	lsls	r2, r3, #30
 800cec6:	d4e3      	bmi.n	800ce90 <prvTimerTask+0x10c>
                                    vPortFree( pxTimer );
 800cec8:	4620      	mov	r0, r4
 800ceca:	f000 f91b 	bl	800d104 <vPortFree>
 800cece:	e77a      	b.n	800cdc6 <prvTimerTask+0x42>
 800ced0:	2003fbf0 	.word	0x2003fbf0
 800ced4:	2003fbe8 	.word	0x2003fbe8
 800ced8:	2003fbec 	.word	0x2003fbec

0800cedc <prvCheckForValidListAndQueue>:
    }
/*-----------------------------------------------------------*/

    static void prvCheckForValidListAndQueue( void )
    {
 800cedc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
        /* Check that the list from which active timers are referenced, and the
         * queue used to communicate with the timer service, have been
         * initialised. */
        taskENTER_CRITICAL();
        {
            if( xTimerQueue == NULL )
 800cede:	4c11      	ldr	r4, [pc, #68]	@ (800cf24 <prvCheckForValidListAndQueue+0x48>)
        taskENTER_CRITICAL();
 800cee0:	f7fe fc14 	bl	800b70c <vPortEnterCritical>
            if( xTimerQueue == NULL )
 800cee4:	6825      	ldr	r5, [r4, #0]
 800cee6:	b9bd      	cbnz	r5, 800cf18 <prvCheckForValidListAndQueue+0x3c>
            {
                vListInitialise( &xActiveTimerList1 );
 800cee8:	4f0f      	ldr	r7, [pc, #60]	@ (800cf28 <prvCheckForValidListAndQueue+0x4c>)
                vListInitialise( &xActiveTimerList2 );
 800ceea:	4e10      	ldr	r6, [pc, #64]	@ (800cf2c <prvCheckForValidListAndQueue+0x50>)
                vListInitialise( &xActiveTimerList1 );
 800ceec:	4638      	mov	r0, r7
 800ceee:	f7fe fba5 	bl	800b63c <vListInitialise>
                vListInitialise( &xActiveTimerList2 );
 800cef2:	4630      	mov	r0, r6
 800cef4:	f7fe fba2 	bl	800b63c <vListInitialise>
                pxCurrentTimerList = &xActiveTimerList1;
 800cef8:	4b0d      	ldr	r3, [pc, #52]	@ (800cf30 <prvCheckForValidListAndQueue+0x54>)
                        /* The timer queue is allocated statically in case
                         * configSUPPORT_DYNAMIC_ALLOCATION is 0. */
                        PRIVILEGED_DATA static StaticQueue_t xStaticTimerQueue;                                                                          /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
                        PRIVILEGED_DATA static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

                        xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800cefa:	2110      	movs	r1, #16
                pxCurrentTimerList = &xActiveTimerList1;
 800cefc:	601f      	str	r7, [r3, #0]
                pxOverflowTimerList = &xActiveTimerList2;
 800cefe:	4b0d      	ldr	r3, [pc, #52]	@ (800cf34 <prvCheckForValidListAndQueue+0x58>)
                        xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800cf00:	200a      	movs	r0, #10
                pxOverflowTimerList = &xActiveTimerList2;
 800cf02:	601e      	str	r6, [r3, #0]
                        xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800cf04:	4a0c      	ldr	r2, [pc, #48]	@ (800cf38 <prvCheckForValidListAndQueue+0x5c>)
 800cf06:	4b0d      	ldr	r3, [pc, #52]	@ (800cf3c <prvCheckForValidListAndQueue+0x60>)
 800cf08:	9500      	str	r5, [sp, #0]
 800cf0a:	f7fe fe00 	bl	800bb0e <xQueueGenericCreateStatic>
 800cf0e:	6020      	str	r0, [r4, #0]
                    }
                #endif /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */

                #if ( configQUEUE_REGISTRY_SIZE > 0 )
                    {
                        if( xTimerQueue != NULL )
 800cf10:	b110      	cbz	r0, 800cf18 <prvCheckForValidListAndQueue+0x3c>
                        {
                            vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800cf12:	490b      	ldr	r1, [pc, #44]	@ (800cf40 <prvCheckForValidListAndQueue+0x64>)
 800cf14:	f7ff f8d0 	bl	800c0b8 <vQueueAddToRegistry>
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
        taskEXIT_CRITICAL();
    }
 800cf18:	b003      	add	sp, #12
 800cf1a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
        taskEXIT_CRITICAL();
 800cf1e:	f7fe bc03 	b.w	800b728 <vPortExitCritical>
 800cf22:	bf00      	nop
 800cf24:	2003fbe8 	.word	0x2003fbe8
 800cf28:	2003fc08 	.word	0x2003fc08
 800cf2c:	2003fbf4 	.word	0x2003fbf4
 800cf30:	2003fbf0 	.word	0x2003fbf0
 800cf34:	2003fbec 	.word	0x2003fbec
 800cf38:	2003fb40 	.word	0x2003fb40
 800cf3c:	2003faf0 	.word	0x2003faf0
 800cf40:	080270e9 	.word	0x080270e9

0800cf44 <xTimerCreateTimerTask>:
    {
 800cf44:	b510      	push	{r4, lr}
 800cf46:	b088      	sub	sp, #32
        prvCheckForValidListAndQueue();
 800cf48:	f7ff ffc8 	bl	800cedc <prvCheckForValidListAndQueue>
        if( xTimerQueue != NULL )
 800cf4c:	4b0f      	ldr	r3, [pc, #60]	@ (800cf8c <xTimerCreateTimerTask+0x48>)
 800cf4e:	681b      	ldr	r3, [r3, #0]
 800cf50:	b1b3      	cbz	r3, 800cf80 <xTimerCreateTimerTask+0x3c>
                    StaticTask_t * pxTimerTaskTCBBuffer = NULL;
 800cf52:	2400      	movs	r4, #0
                    vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800cf54:	aa07      	add	r2, sp, #28
 800cf56:	a906      	add	r1, sp, #24
 800cf58:	a805      	add	r0, sp, #20
                    StackType_t * pxTimerTaskStackBuffer = NULL;
 800cf5a:	e9cd 4405 	strd	r4, r4, [sp, #20]
                    vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800cf5e:	f7fe fb61 	bl	800b624 <vApplicationGetTimerTaskMemory>
                    xTimerTaskHandle = xTaskCreateStatic( prvTimerTask,
 800cf62:	9b05      	ldr	r3, [sp, #20]
 800cf64:	9a07      	ldr	r2, [sp, #28]
 800cf66:	9302      	str	r3, [sp, #8]
 800cf68:	9b06      	ldr	r3, [sp, #24]
 800cf6a:	4909      	ldr	r1, [pc, #36]	@ (800cf90 <xTimerCreateTimerTask+0x4c>)
 800cf6c:	9301      	str	r3, [sp, #4]
 800cf6e:	2302      	movs	r3, #2
 800cf70:	4808      	ldr	r0, [pc, #32]	@ (800cf94 <xTimerCreateTimerTask+0x50>)
 800cf72:	9300      	str	r3, [sp, #0]
 800cf74:	4623      	mov	r3, r4
 800cf76:	f7ff fa74 	bl	800c462 <xTaskCreateStatic>
 800cf7a:	4b07      	ldr	r3, [pc, #28]	@ (800cf98 <xTimerCreateTimerTask+0x54>)
 800cf7c:	6018      	str	r0, [r3, #0]
                    if( xTimerTaskHandle != NULL )
 800cf7e:	b910      	cbnz	r0, 800cf86 <xTimerCreateTimerTask+0x42>
        configASSERT( xReturn );
 800cf80:	f7fe fca0 	bl	800b8c4 <ulSetInterruptMask>
 800cf84:	e7fe      	b.n	800cf84 <xTimerCreateTimerTask+0x40>
    }
 800cf86:	2001      	movs	r0, #1
 800cf88:	b008      	add	sp, #32
 800cf8a:	bd10      	pop	{r4, pc}
 800cf8c:	2003fbe8 	.word	0x2003fbe8
 800cf90:	080270ee 	.word	0x080270ee
 800cf94:	0800cd85 	.word	0x0800cd85
 800cf98:	2003fbe4 	.word	0x2003fbe4

0800cf9c <prvInsertBlockIntoFreeList>:
    xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t * pxBlockToInsert ) /* PRIVILEGED_FUNCTION */
{
 800cf9c:	b510      	push	{r4, lr}
    BlockLink_t * pxIterator;
    uint8_t * puc;

    /* Iterate through the list until a block is found that has a higher address
     * than the block being inserted. */
    for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800cf9e:	4b10      	ldr	r3, [pc, #64]	@ (800cfe0 <prvInsertBlockIntoFreeList+0x44>)
 800cfa0:	461a      	mov	r2, r3
 800cfa2:	681b      	ldr	r3, [r3, #0]
 800cfa4:	4283      	cmp	r3, r0
 800cfa6:	d3fb      	bcc.n	800cfa0 <prvInsertBlockIntoFreeList+0x4>

    /* Do the block being inserted, and the block it is being inserted after
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxIterator;

    if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800cfa8:	6854      	ldr	r4, [r2, #4]
 800cfaa:	1911      	adds	r1, r2, r4
 800cfac:	4288      	cmp	r0, r1
    {
        pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cfae:	bf01      	itttt	eq
 800cfb0:	6841      	ldreq	r1, [r0, #4]
 800cfb2:	4610      	moveq	r0, r2
 800cfb4:	1909      	addeq	r1, r1, r4
 800cfb6:	6051      	streq	r1, [r2, #4]

    /* Do the block being inserted, and the block it is being inserted before
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxBlockToInsert;

    if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cfb8:	6844      	ldr	r4, [r0, #4]
 800cfba:	1901      	adds	r1, r0, r4
 800cfbc:	428b      	cmp	r3, r1
 800cfbe:	d10c      	bne.n	800cfda <prvInsertBlockIntoFreeList+0x3e>
    {
        if( pxIterator->pxNextFreeBlock != pxEnd )
 800cfc0:	4908      	ldr	r1, [pc, #32]	@ (800cfe4 <prvInsertBlockIntoFreeList+0x48>)
 800cfc2:	6809      	ldr	r1, [r1, #0]
 800cfc4:	428b      	cmp	r3, r1
 800cfc6:	d003      	beq.n	800cfd0 <prvInsertBlockIntoFreeList+0x34>
        {
            /* Form one big block from the two blocks. */
            pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800cfc8:	6859      	ldr	r1, [r3, #4]
 800cfca:	4421      	add	r1, r4
 800cfcc:	6041      	str	r1, [r0, #4]
            pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cfce:	6819      	ldr	r1, [r3, #0]

    /* If the block being inserted plugged a gab, so was merged with the block
     * before and the block after, then it's pxNextFreeBlock pointer will have
     * already been set, and should not be set here as that would make it point
     * to itself. */
    if( pxIterator != pxBlockToInsert )
 800cfd0:	4290      	cmp	r0, r2
            pxBlockToInsert->pxNextFreeBlock = pxEnd;
 800cfd2:	6001      	str	r1, [r0, #0]
    {
        pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800cfd4:	bf18      	it	ne
 800cfd6:	6010      	strne	r0, [r2, #0]
    }
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }
}
 800cfd8:	bd10      	pop	{r4, pc}
    for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800cfda:	4619      	mov	r1, r3
 800cfdc:	e7f8      	b.n	800cfd0 <prvInsertBlockIntoFreeList+0x34>
 800cfde:	bf00      	nop
 800cfe0:	2003fc34 	.word	0x2003fc34
 800cfe4:	2003fc30 	.word	0x2003fc30

0800cfe8 <pvPortMalloc>:
{
 800cfe8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cfec:	4605      	mov	r5, r0
    vTaskSuspendAll();
 800cfee:	f7ff fa8d 	bl	800c50c <vTaskSuspendAll>
        if( pxEnd == NULL )
 800cff2:	493c      	ldr	r1, [pc, #240]	@ (800d0e4 <pvPortMalloc+0xfc>)
 800cff4:	4c3c      	ldr	r4, [pc, #240]	@ (800d0e8 <pvPortMalloc+0x100>)
 800cff6:	680b      	ldr	r3, [r1, #0]
 800cff8:	b9fb      	cbnz	r3, 800d03a <pvPortMalloc+0x52>
    uxAddress = ( size_t ) ucHeap;
 800cffa:	4a3c      	ldr	r2, [pc, #240]	@ (800d0ec <pvPortMalloc+0x104>)
    xStart.xBlockSize = ( size_t ) 0;
 800cffc:	2000      	movs	r0, #0
    if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800cffe:	0756      	lsls	r6, r2, #29
    size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800d000:	bf0f      	iteee	eq
 800d002:	f24c 3350 	movweq	r3, #50000	@ 0xc350
        uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800d006:	3207      	addne	r2, #7
        xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800d008:	4b39      	ldrne	r3, [pc, #228]	@ (800d0f0 <pvPortMalloc+0x108>)
        uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d00a:	f022 0207 	bicne.w	r2, r2, #7
        xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800d00e:	bf18      	it	ne
 800d010:	1a9b      	subne	r3, r3, r2
    uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800d012:	4413      	add	r3, r2
    xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d014:	4e37      	ldr	r6, [pc, #220]	@ (800d0f4 <pvPortMalloc+0x10c>)
    uxAddress -= xHeapStructSize;
 800d016:	3b08      	subs	r3, #8
    uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d018:	f023 0307 	bic.w	r3, r3, #7
    xStart.xBlockSize = ( size_t ) 0;
 800d01c:	6070      	str	r0, [r6, #4]
    xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d01e:	6032      	str	r2, [r6, #0]
    pxEnd->pxNextFreeBlock = NULL;
 800d020:	e9c3 0000 	strd	r0, r0, [r3]
    pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800d024:	1a98      	subs	r0, r3, r2
    pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800d026:	e9c2 3000 	strd	r3, r0, [r2]
    pxEnd = ( void * ) uxAddress;
 800d02a:	600b      	str	r3, [r1, #0]
    xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d02c:	4b32      	ldr	r3, [pc, #200]	@ (800d0f8 <pvPortMalloc+0x110>)
 800d02e:	6018      	str	r0, [r3, #0]
    xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d030:	4b32      	ldr	r3, [pc, #200]	@ (800d0fc <pvPortMalloc+0x114>)
 800d032:	6018      	str	r0, [r3, #0]
    xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d034:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 800d038:	6023      	str	r3, [r4, #0]
        if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800d03a:	6827      	ldr	r7, [r4, #0]
 800d03c:	ea17 0405 	ands.w	r4, r7, r5
 800d040:	d14b      	bne.n	800d0da <pvPortMalloc+0xf2>
            if( ( xWantedSize > 0 ) &&
 800d042:	1e6b      	subs	r3, r5, #1
 800d044:	330a      	adds	r3, #10
 800d046:	d808      	bhi.n	800d05a <pvPortMalloc+0x72>
                if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800d048:	0768      	lsls	r0, r5, #29
                xWantedSize += xHeapStructSize;
 800d04a:	f105 0208 	add.w	r2, r5, #8
                if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800d04e:	d00b      	beq.n	800d068 <pvPortMalloc+0x80>
                    if( ( xWantedSize + ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) ) )
 800d050:	f022 0307 	bic.w	r3, r2, #7
 800d054:	3308      	adds	r3, #8
 800d056:	4293      	cmp	r3, r2
 800d058:	d807      	bhi.n	800d06a <pvPortMalloc+0x82>
    ( void ) xTaskResumeAll();
 800d05a:	f7ff fb15 	bl	800c688 <xTaskResumeAll>
    configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800d05e:	0763      	lsls	r3, r4, #29
 800d060:	d03d      	beq.n	800d0de <pvPortMalloc+0xf6>
 800d062:	f7fe fc2f 	bl	800b8c4 <ulSetInterruptMask>
 800d066:	e7fe      	b.n	800d066 <pvPortMalloc+0x7e>
 800d068:	4613      	mov	r3, r2
            if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800d06a:	f8df 8090 	ldr.w	r8, [pc, #144]	@ 800d0fc <pvPortMalloc+0x114>
 800d06e:	f8d8 6000 	ldr.w	r6, [r8]
 800d072:	429e      	cmp	r6, r3
 800d074:	d331      	bcc.n	800d0da <pvPortMalloc+0xf2>
                pxBlock = xStart.pxNextFreeBlock;
 800d076:	4a1f      	ldr	r2, [pc, #124]	@ (800d0f4 <pvPortMalloc+0x10c>)
 800d078:	6815      	ldr	r5, [r2, #0]
                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800d07a:	6868      	ldr	r0, [r5, #4]
 800d07c:	4298      	cmp	r0, r3
 800d07e:	d201      	bcs.n	800d084 <pvPortMalloc+0x9c>
 800d080:	682c      	ldr	r4, [r5, #0]
 800d082:	b984      	cbnz	r4, 800d0a6 <pvPortMalloc+0xbe>
                if( pxBlock != pxEnd )
 800d084:	6809      	ldr	r1, [r1, #0]
 800d086:	42a9      	cmp	r1, r5
 800d088:	d027      	beq.n	800d0da <pvPortMalloc+0xf2>
                    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800d08a:	6829      	ldr	r1, [r5, #0]
                    pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800d08c:	6814      	ldr	r4, [r2, #0]
                    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800d08e:	6011      	str	r1, [r2, #0]
                    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d090:	1ac2      	subs	r2, r0, r3
 800d092:	2a10      	cmp	r2, #16
                    pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800d094:	f104 0408 	add.w	r4, r4, #8
                    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d098:	d90c      	bls.n	800d0b4 <pvPortMalloc+0xcc>
                        pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800d09a:	18e8      	adds	r0, r5, r3
                        configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800d09c:	0741      	lsls	r1, r0, #29
 800d09e:	d005      	beq.n	800d0ac <pvPortMalloc+0xc4>
 800d0a0:	f7fe fc10 	bl	800b8c4 <ulSetInterruptMask>
 800d0a4:	e7fe      	b.n	800d0a4 <pvPortMalloc+0xbc>
 800d0a6:	462a      	mov	r2, r5
 800d0a8:	4625      	mov	r5, r4
 800d0aa:	e7e6      	b.n	800d07a <pvPortMalloc+0x92>
                        pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800d0ac:	6042      	str	r2, [r0, #4]
                        pxBlock->xBlockSize = xWantedSize;
 800d0ae:	606b      	str	r3, [r5, #4]
                        prvInsertBlockIntoFreeList( pxNewBlockLink );
 800d0b0:	f7ff ff74 	bl	800cf9c <prvInsertBlockIntoFreeList>
                    pxBlock->pxNextFreeBlock = NULL;
 800d0b4:	2300      	movs	r3, #0
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d0b6:	686a      	ldr	r2, [r5, #4]
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d0b8:	490f      	ldr	r1, [pc, #60]	@ (800d0f8 <pvPortMalloc+0x110>)
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d0ba:	1ab6      	subs	r6, r6, r2
                    pxBlock->xBlockSize |= xBlockAllocatedBit;
 800d0bc:	4317      	orrs	r7, r2
                    xNumberOfSuccessfulAllocations++;
 800d0be:	4a10      	ldr	r2, [pc, #64]	@ (800d100 <pvPortMalloc+0x118>)
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d0c0:	6808      	ldr	r0, [r1, #0]
                    pxBlock->pxNextFreeBlock = NULL;
 800d0c2:	602b      	str	r3, [r5, #0]
                    xNumberOfSuccessfulAllocations++;
 800d0c4:	6813      	ldr	r3, [r2, #0]
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d0c6:	4286      	cmp	r6, r0
                    xNumberOfSuccessfulAllocations++;
 800d0c8:	f103 0301 	add.w	r3, r3, #1
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d0cc:	f8c8 6000 	str.w	r6, [r8]
                        xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800d0d0:	bf38      	it	cc
 800d0d2:	600e      	strcc	r6, [r1, #0]
                    pxBlock->xBlockSize |= xBlockAllocatedBit;
 800d0d4:	606f      	str	r7, [r5, #4]
                    xNumberOfSuccessfulAllocations++;
 800d0d6:	6013      	str	r3, [r2, #0]
 800d0d8:	e7bf      	b.n	800d05a <pvPortMalloc+0x72>
    void * pvReturn = NULL;
 800d0da:	2400      	movs	r4, #0
 800d0dc:	e7bd      	b.n	800d05a <pvPortMalloc+0x72>
}
 800d0de:	4620      	mov	r0, r4
 800d0e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d0e4:	2003fc30 	.word	0x2003fc30
 800d0e8:	2003fc1c 	.word	0x2003fc1c
 800d0ec:	2003fc3c 	.word	0x2003fc3c
 800d0f0:	2004bf8c 	.word	0x2004bf8c
 800d0f4:	2003fc34 	.word	0x2003fc34
 800d0f8:	2003fc28 	.word	0x2003fc28
 800d0fc:	2003fc2c 	.word	0x2003fc2c
 800d100:	2003fc24 	.word	0x2003fc24

0800d104 <vPortFree>:
{
 800d104:	b510      	push	{r4, lr}
    if( pv != NULL )
 800d106:	4604      	mov	r4, r0
 800d108:	b330      	cbz	r0, 800d158 <vPortFree+0x54>
        configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d10a:	4a14      	ldr	r2, [pc, #80]	@ (800d15c <vPortFree+0x58>)
 800d10c:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800d110:	6812      	ldr	r2, [r2, #0]
 800d112:	4213      	tst	r3, r2
 800d114:	d102      	bne.n	800d11c <vPortFree+0x18>
 800d116:	f7fe fbd5 	bl	800b8c4 <ulSetInterruptMask>
 800d11a:	e7fe      	b.n	800d11a <vPortFree+0x16>
        configASSERT( pxLink->pxNextFreeBlock == NULL );
 800d11c:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800d120:	b111      	cbz	r1, 800d128 <vPortFree+0x24>
 800d122:	f7fe fbcf 	bl	800b8c4 <ulSetInterruptMask>
 800d126:	e7fe      	b.n	800d126 <vPortFree+0x22>
                pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d128:	ea23 0302 	bic.w	r3, r3, r2
 800d12c:	f840 3c04 	str.w	r3, [r0, #-4]
                vTaskSuspendAll();
 800d130:	f7ff f9ec 	bl	800c50c <vTaskSuspendAll>
                    xFreeBytesRemaining += pxLink->xBlockSize;
 800d134:	4a0a      	ldr	r2, [pc, #40]	@ (800d160 <vPortFree+0x5c>)
 800d136:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800d13a:	6811      	ldr	r1, [r2, #0]
                    prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800d13c:	f1a4 0008 	sub.w	r0, r4, #8
                    xFreeBytesRemaining += pxLink->xBlockSize;
 800d140:	440b      	add	r3, r1
 800d142:	6013      	str	r3, [r2, #0]
                    prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800d144:	f7ff ff2a 	bl	800cf9c <prvInsertBlockIntoFreeList>
}
 800d148:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                    xNumberOfSuccessfulFrees++;
 800d14c:	4a05      	ldr	r2, [pc, #20]	@ (800d164 <vPortFree+0x60>)
 800d14e:	6813      	ldr	r3, [r2, #0]
 800d150:	3301      	adds	r3, #1
 800d152:	6013      	str	r3, [r2, #0]
                ( void ) xTaskResumeAll();
 800d154:	f7ff ba98 	b.w	800c688 <xTaskResumeAll>
}
 800d158:	bd10      	pop	{r4, pc}
 800d15a:	bf00      	nop
 800d15c:	2003fc1c 	.word	0x2003fc1c
 800d160:	2003fc2c 	.word	0x2003fc2c
 800d164:	2003fc20 	.word	0x2003fc20

0800d168 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800d168:	8880      	ldrh	r0, [r0, #4]
 800d16a:	4770      	bx	lr

0800d16c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800d16c:	b570      	push	{r4, r5, r6, lr}
 800d16e:	6803      	ldr	r3, [r0, #0]
 800d170:	4605      	mov	r5, r0
 800d172:	460c      	mov	r4, r1
 800d174:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d176:	2100      	movs	r1, #0
 800d178:	4798      	blx	r3
 800d17a:	682b      	ldr	r3, [r5, #0]
 800d17c:	4606      	mov	r6, r0
 800d17e:	6a1b      	ldr	r3, [r3, #32]
 800d180:	4628      	mov	r0, r5
 800d182:	4798      	blx	r3
 800d184:	1ba4      	subs	r4, r4, r6
 800d186:	b2a4      	uxth	r4, r4
 800d188:	fbb4 f0f0 	udiv	r0, r4, r0
 800d18c:	bd70      	pop	{r4, r5, r6, pc}

0800d18e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800d18e:	2300      	movs	r3, #0
 800d190:	8083      	strh	r3, [r0, #4]
 800d192:	4770      	bx	lr

0800d194 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800d194:	b510      	push	{r4, lr}
 800d196:	4604      	mov	r4, r0
 800d198:	6803      	ldr	r3, [r0, #0]
 800d19a:	8881      	ldrh	r1, [r0, #4]
 800d19c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d19e:	4798      	blx	r3
 800d1a0:	88a3      	ldrh	r3, [r4, #4]
 800d1a2:	3301      	adds	r3, #1
 800d1a4:	80a3      	strh	r3, [r4, #4]
 800d1a6:	bd10      	pop	{r4, pc}

0800d1a8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800d1a8:	6803      	ldr	r3, [r0, #0]
 800d1aa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d1ac:	4718      	bx	r3

0800d1ae <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800d1ae:	4770      	bx	lr

0800d1b0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800d1b0:	4a02      	ldr	r2, [pc, #8]	@ (800d1bc <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800d1b2:	6002      	str	r2, [r0, #0]
 800d1b4:	2200      	movs	r2, #0
 800d1b6:	8082      	strh	r2, [r0, #4]
 800d1b8:	4770      	bx	lr
 800d1ba:	bf00      	nop
 800d1bc:	08027100 	.word	0x08027100

0800d1c0 <_ZN8touchgfx9Container13getFirstChildEv>:
 800d1c0:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800d1c2:	4770      	bx	lr

0800d1c4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800d1c4:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800d1c6:	2000      	movs	r0, #0
 800d1c8:	b12b      	cbz	r3, 800d1d6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800d1ca:	b920      	cbnz	r0, 800d1d6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800d1cc:	1a5a      	subs	r2, r3, r1
 800d1ce:	4250      	negs	r0, r2
 800d1d0:	4150      	adcs	r0, r2
 800d1d2:	699b      	ldr	r3, [r3, #24]
 800d1d4:	e7f8      	b.n	800d1c8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800d1d6:	4770      	bx	lr

0800d1d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800d1d8:	2300      	movs	r3, #0
 800d1da:	6148      	str	r0, [r1, #20]
 800d1dc:	618b      	str	r3, [r1, #24]
 800d1de:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800d1e0:	b913      	cbnz	r3, 800d1e8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800d1e2:	6281      	str	r1, [r0, #40]	@ 0x28
 800d1e4:	4770      	bx	lr
 800d1e6:	4613      	mov	r3, r2
 800d1e8:	699a      	ldr	r2, [r3, #24]
 800d1ea:	2a00      	cmp	r2, #0
 800d1ec:	d1fb      	bne.n	800d1e6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800d1ee:	6199      	str	r1, [r3, #24]
 800d1f0:	4770      	bx	lr

0800d1f2 <_ZN8touchgfx9Container9removeAllEv>:
 800d1f2:	2200      	movs	r2, #0
 800d1f4:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800d1f6:	b123      	cbz	r3, 800d202 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800d1f8:	6999      	ldr	r1, [r3, #24]
 800d1fa:	6281      	str	r1, [r0, #40]	@ 0x28
 800d1fc:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800d200:	e7f8      	b.n	800d1f4 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800d202:	4770      	bx	lr

0800d204 <_ZN8touchgfx9Container6unlinkEv>:
 800d204:	2300      	movs	r3, #0
 800d206:	6283      	str	r3, [r0, #40]	@ 0x28
 800d208:	4770      	bx	lr

0800d20a <_ZNK8touchgfx9Container12getSolidRectEv>:
 800d20a:	2200      	movs	r2, #0
 800d20c:	8002      	strh	r2, [r0, #0]
 800d20e:	8042      	strh	r2, [r0, #2]
 800d210:	8082      	strh	r2, [r0, #4]
 800d212:	80c2      	strh	r2, [r0, #6]
 800d214:	4770      	bx	lr

0800d216 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800d216:	b570      	push	{r4, r5, r6, lr}
 800d218:	460d      	mov	r5, r1
 800d21a:	4616      	mov	r6, r2
 800d21c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800d21e:	b13c      	cbz	r4, 800d230 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800d220:	6823      	ldr	r3, [r4, #0]
 800d222:	4620      	mov	r0, r4
 800d224:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800d226:	4632      	mov	r2, r6
 800d228:	4629      	mov	r1, r5
 800d22a:	4798      	blx	r3
 800d22c:	69a4      	ldr	r4, [r4, #24]
 800d22e:	e7f6      	b.n	800d21e <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800d230:	bd70      	pop	{r4, r5, r6, pc}

0800d232 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800d232:	b538      	push	{r3, r4, r5, lr}
 800d234:	460d      	mov	r5, r1
 800d236:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800d238:	b134      	cbz	r4, 800d248 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800d23a:	682b      	ldr	r3, [r5, #0]
 800d23c:	4621      	mov	r1, r4
 800d23e:	689b      	ldr	r3, [r3, #8]
 800d240:	4628      	mov	r0, r5
 800d242:	4798      	blx	r3
 800d244:	69a4      	ldr	r4, [r4, #24]
 800d246:	e7f7      	b.n	800d238 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800d248:	bd38      	pop	{r3, r4, r5, pc}

0800d24a <_ZN8touchgfx9ContainerD1Ev>:
 800d24a:	4770      	bx	lr

0800d24c <_ZN8touchgfx9ContainerD0Ev>:
 800d24c:	b510      	push	{r4, lr}
 800d24e:	4604      	mov	r4, r0
 800d250:	212c      	movs	r1, #44	@ 0x2c
 800d252:	f017 fd42 	bl	8024cda <_ZdlPvj>
 800d256:	4620      	mov	r0, r4
 800d258:	bd10      	pop	{r4, pc}

0800d25a <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800d25a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800d25c:	b19b      	cbz	r3, 800d286 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800d25e:	428b      	cmp	r3, r1
 800d260:	d109      	bne.n	800d276 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800d262:	2100      	movs	r1, #0
 800d264:	699a      	ldr	r2, [r3, #24]
 800d266:	6159      	str	r1, [r3, #20]
 800d268:	6282      	str	r2, [r0, #40]	@ 0x28
 800d26a:	b902      	cbnz	r2, 800d26e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800d26c:	4770      	bx	lr
 800d26e:	6199      	str	r1, [r3, #24]
 800d270:	4770      	bx	lr
 800d272:	4613      	mov	r3, r2
 800d274:	b13a      	cbz	r2, 800d286 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800d276:	699a      	ldr	r2, [r3, #24]
 800d278:	428a      	cmp	r2, r1
 800d27a:	d1fa      	bne.n	800d272 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800d27c:	698a      	ldr	r2, [r1, #24]
 800d27e:	619a      	str	r2, [r3, #24]
 800d280:	2300      	movs	r3, #0
 800d282:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800d286:	4770      	bx	lr

0800d288 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800d288:	b410      	push	{r4}
 800d28a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800d28c:	4604      	mov	r4, r0
 800d28e:	b92b      	cbnz	r3, 800d29c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800d290:	6803      	ldr	r3, [r0, #0]
 800d292:	4611      	mov	r1, r2
 800d294:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800d296:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d29a:	4718      	bx	r3
 800d29c:	b941      	cbnz	r1, 800d2b0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800d29e:	6193      	str	r3, [r2, #24]
 800d2a0:	6282      	str	r2, [r0, #40]	@ 0x28
 800d2a2:	6154      	str	r4, [r2, #20]
 800d2a4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d2a8:	4770      	bx	lr
 800d2aa:	4603      	mov	r3, r0
 800d2ac:	2800      	cmp	r0, #0
 800d2ae:	d0f9      	beq.n	800d2a4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800d2b0:	4299      	cmp	r1, r3
 800d2b2:	6998      	ldr	r0, [r3, #24]
 800d2b4:	d1f9      	bne.n	800d2aa <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800d2b6:	6190      	str	r0, [r2, #24]
 800d2b8:	618a      	str	r2, [r1, #24]
 800d2ba:	e7f2      	b.n	800d2a2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800d2bc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800d2bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d2c0:	461f      	mov	r7, r3
 800d2c2:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800d2c6:	460d      	mov	r5, r1
 800d2c8:	4616      	mov	r6, r2
 800d2ca:	b103      	cbz	r3, 800d2ce <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800d2cc:	6038      	str	r0, [r7, #0]
 800d2ce:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800d2d0:	b314      	cbz	r4, 800d318 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800d2d2:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800d2d6:	b1eb      	cbz	r3, 800d314 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800d2d8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800d2dc:	428d      	cmp	r5, r1
 800d2de:	db19      	blt.n	800d314 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800d2e0:	8923      	ldrh	r3, [r4, #8]
 800d2e2:	b289      	uxth	r1, r1
 800d2e4:	440b      	add	r3, r1
 800d2e6:	b21b      	sxth	r3, r3
 800d2e8:	429d      	cmp	r5, r3
 800d2ea:	da13      	bge.n	800d314 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800d2ec:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800d2f0:	4296      	cmp	r6, r2
 800d2f2:	db0f      	blt.n	800d314 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800d2f4:	8963      	ldrh	r3, [r4, #10]
 800d2f6:	b292      	uxth	r2, r2
 800d2f8:	4413      	add	r3, r2
 800d2fa:	b21b      	sxth	r3, r3
 800d2fc:	429e      	cmp	r6, r3
 800d2fe:	da09      	bge.n	800d314 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800d300:	6823      	ldr	r3, [r4, #0]
 800d302:	1ab2      	subs	r2, r6, r2
 800d304:	1a69      	subs	r1, r5, r1
 800d306:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800d30a:	b212      	sxth	r2, r2
 800d30c:	463b      	mov	r3, r7
 800d30e:	b209      	sxth	r1, r1
 800d310:	4620      	mov	r0, r4
 800d312:	47c0      	blx	r8
 800d314:	69a4      	ldr	r4, [r4, #24]
 800d316:	e7db      	b.n	800d2d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800d318:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d31c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800d31c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d320:	4c6c      	ldr	r4, [pc, #432]	@ (800d4d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>)
 800d322:	b0a1      	sub	sp, #132	@ 0x84
 800d324:	6824      	ldr	r4, [r4, #0]
 800d326:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800d328:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800d32c:	2400      	movs	r4, #0
 800d32e:	802c      	strh	r4, [r5, #0]
 800d330:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800d332:	4606      	mov	r6, r0
 800d334:	802c      	strh	r4, [r5, #0]
 800d336:	601c      	str	r4, [r3, #0]
 800d338:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800d33c:	9303      	str	r3, [sp, #12]
 800d33e:	f7ff ffbd 	bl	800d2bc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800d342:	f1b9 0f03 	cmp.w	r9, #3
 800d346:	f340 80bf 	ble.w	800d4c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1ac>
 800d34a:	4631      	mov	r1, r6
 800d34c:	a80c      	add	r0, sp, #48	@ 0x30
 800d34e:	f003 faf1 	bl	8010934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d352:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800d356:	9306      	str	r3, [sp, #24]
 800d358:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800d35c:	9307      	str	r3, [sp, #28]
 800d35e:	9b03      	ldr	r3, [sp, #12]
 800d360:	f8d3 a000 	ldr.w	sl, [r3]
 800d364:	f1ba 0f00 	cmp.w	sl, #0
 800d368:	f000 80b1 	beq.w	800d4ce <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800d36c:	4651      	mov	r1, sl
 800d36e:	a810      	add	r0, sp, #64	@ 0x40
 800d370:	f003 fae0 	bl	8010934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d374:	2002      	movs	r0, #2
 800d376:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800d37a:	9b01      	ldr	r3, [sp, #4]
 800d37c:	fb91 f1f0 	sdiv	r1, r1, r0
 800d380:	9a06      	ldr	r2, [sp, #24]
 800d382:	189d      	adds	r5, r3, r2
 800d384:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800d388:	9a07      	ldr	r2, [sp, #28]
 800d38a:	4419      	add	r1, r3
 800d38c:	9b02      	ldr	r3, [sp, #8]
 800d38e:	1a6d      	subs	r5, r5, r1
 800d390:	4413      	add	r3, r2
 800d392:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800d396:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800d39a:	fb92 f2f0 	sdiv	r2, r2, r0
 800d39e:	440a      	add	r2, r1
 800d3a0:	1a9b      	subs	r3, r3, r2
 800d3a2:	435b      	muls	r3, r3
 800d3a4:	fb05 3505 	mla	r5, r5, r5, r3
 800d3a8:	4f4b      	ldr	r7, [pc, #300]	@ (800d4d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 800d3aa:	ac10      	add	r4, sp, #64	@ 0x40
 800d3ac:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800d3ae:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d3b0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800d3b2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d3b4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800d3b6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d3b8:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800d3bc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800d3c0:	2303      	movs	r3, #3
 800d3c2:	f1b9 0f0c 	cmp.w	r9, #12
 800d3c6:	bfda      	itte	le
 800d3c8:	f109 32ff 	addle.w	r2, r9, #4294967295
 800d3cc:	fb92 f8f3 	sdivle	r8, r2, r3
 800d3d0:	4698      	movgt	r8, r3
 800d3d2:	2400      	movs	r4, #0
 800d3d4:	f8cd 9000 	str.w	r9, [sp]
 800d3d8:	1c63      	adds	r3, r4, #1
 800d3da:	9308      	str	r3, [sp, #32]
 800d3dc:	9b00      	ldr	r3, [sp, #0]
 800d3de:	f04f 0b00 	mov.w	fp, #0
 800d3e2:	fb93 f3f8 	sdiv	r3, r3, r8
 800d3e6:	f004 0401 	and.w	r4, r4, #1
 800d3ea:	aa10      	add	r2, sp, #64	@ 0x40
 800d3ec:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800d3f0:	b29b      	uxth	r3, r3
 800d3f2:	3404      	adds	r4, #4
 800d3f4:	9304      	str	r3, [sp, #16]
 800d3f6:	9a04      	ldr	r2, [sp, #16]
 800d3f8:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800d3fc:	fb13 f302 	smulbb	r3, r3, r2
 800d400:	9a01      	ldr	r2, [sp, #4]
 800d402:	b29b      	uxth	r3, r3
 800d404:	1899      	adds	r1, r3, r2
 800d406:	9305      	str	r3, [sp, #20]
 800d408:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800d40c:	b209      	sxth	r1, r1
 800d40e:	4299      	cmp	r1, r3
 800d410:	db4d      	blt.n	800d4ae <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800d412:	8932      	ldrh	r2, [r6, #8]
 800d414:	4413      	add	r3, r2
 800d416:	b21b      	sxth	r3, r3
 800d418:	4299      	cmp	r1, r3
 800d41a:	da48      	bge.n	800d4ae <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800d41c:	9b04      	ldr	r3, [sp, #16]
 800d41e:	6827      	ldr	r7, [r4, #0]
 800d420:	fb17 f703 	smulbb	r7, r7, r3
 800d424:	9b02      	ldr	r3, [sp, #8]
 800d426:	b2bf      	uxth	r7, r7
 800d428:	18fa      	adds	r2, r7, r3
 800d42a:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800d42e:	b212      	sxth	r2, r2
 800d430:	429a      	cmp	r2, r3
 800d432:	db3c      	blt.n	800d4ae <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800d434:	8970      	ldrh	r0, [r6, #10]
 800d436:	4403      	add	r3, r0
 800d438:	b21b      	sxth	r3, r3
 800d43a:	429a      	cmp	r2, r3
 800d43c:	da37      	bge.n	800d4ae <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800d43e:	2300      	movs	r3, #0
 800d440:	4630      	mov	r0, r6
 800d442:	930b      	str	r3, [sp, #44]	@ 0x2c
 800d444:	ab0b      	add	r3, sp, #44	@ 0x2c
 800d446:	f7ff ff39 	bl	800d2bc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800d44a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800d44c:	b37a      	cbz	r2, 800d4ae <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800d44e:	4552      	cmp	r2, sl
 800d450:	d02d      	beq.n	800d4ae <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800d452:	4611      	mov	r1, r2
 800d454:	a80e      	add	r0, sp, #56	@ 0x38
 800d456:	9209      	str	r2, [sp, #36]	@ 0x24
 800d458:	f003 fa6c 	bl	8010934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d45c:	f04f 0e02 	mov.w	lr, #2
 800d460:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800d464:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800d468:	fb91 f1fe 	sdiv	r1, r1, lr
 800d46c:	fb9c fcfe 	sdiv	ip, ip, lr
 800d470:	9a06      	ldr	r2, [sp, #24]
 800d472:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800d476:	9b01      	ldr	r3, [sp, #4]
 800d478:	4401      	add	r1, r0
 800d47a:	4413      	add	r3, r2
 800d47c:	1a58      	subs	r0, r3, r1
 800d47e:	9a07      	ldr	r2, [sp, #28]
 800d480:	9b02      	ldr	r3, [sp, #8]
 800d482:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800d486:	4413      	add	r3, r2
 800d488:	448c      	add	ip, r1
 800d48a:	eba3 030c 	sub.w	r3, r3, ip
 800d48e:	435b      	muls	r3, r3
 800d490:	fb00 3300 	mla	r3, r0, r0, r3
 800d494:	42ab      	cmp	r3, r5
 800d496:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800d498:	d208      	bcs.n	800d4ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x190>
 800d49a:	461d      	mov	r5, r3
 800d49c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800d49e:	9803      	ldr	r0, [sp, #12]
 800d4a0:	6001      	str	r1, [r0, #0]
 800d4a2:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800d4a4:	9805      	ldr	r0, [sp, #20]
 800d4a6:	8008      	strh	r0, [r1, #0]
 800d4a8:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800d4aa:	800f      	strh	r7, [r1, #0]
 800d4ac:	4692      	mov	sl, r2
 800d4ae:	f10b 0b01 	add.w	fp, fp, #1
 800d4b2:	f1bb 0f04 	cmp.w	fp, #4
 800d4b6:	f104 0408 	add.w	r4, r4, #8
 800d4ba:	d19c      	bne.n	800d3f6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xda>
 800d4bc:	9b00      	ldr	r3, [sp, #0]
 800d4be:	9c08      	ldr	r4, [sp, #32]
 800d4c0:	444b      	add	r3, r9
 800d4c2:	4544      	cmp	r4, r8
 800d4c4:	9300      	str	r3, [sp, #0]
 800d4c6:	d187      	bne.n	800d3d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xbc>
 800d4c8:	b021      	add	sp, #132	@ 0x84
 800d4ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d4ce:	f04f 35ff 	mov.w	r5, #4294967295
 800d4d2:	e769      	b.n	800d3a8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800d4d4:	2004bf98 	.word	0x2004bf98
 800d4d8:	08025fa4 	.word	0x08025fa4

0800d4dc <_ZN8touchgfx4RectaNERKS0_>:
 800d4dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d4e0:	f9b1 7000 	ldrsh.w	r7, [r1]
 800d4e4:	888c      	ldrh	r4, [r1, #4]
 800d4e6:	f9b0 9000 	ldrsh.w	r9, [r0]
 800d4ea:	443c      	add	r4, r7
 800d4ec:	b2a4      	uxth	r4, r4
 800d4ee:	fa0f f884 	sxth.w	r8, r4
 800d4f2:	45c1      	cmp	r9, r8
 800d4f4:	da2f      	bge.n	800d556 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800d4f6:	8882      	ldrh	r2, [r0, #4]
 800d4f8:	444a      	add	r2, r9
 800d4fa:	b292      	uxth	r2, r2
 800d4fc:	fa0f fe82 	sxth.w	lr, r2
 800d500:	4577      	cmp	r7, lr
 800d502:	da28      	bge.n	800d556 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800d504:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800d508:	88cb      	ldrh	r3, [r1, #6]
 800d50a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800d50e:	442b      	add	r3, r5
 800d510:	b21b      	sxth	r3, r3
 800d512:	429e      	cmp	r6, r3
 800d514:	da1f      	bge.n	800d556 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800d516:	88c3      	ldrh	r3, [r0, #6]
 800d518:	4433      	add	r3, r6
 800d51a:	b29b      	uxth	r3, r3
 800d51c:	fa0f fc83 	sxth.w	ip, r3
 800d520:	4565      	cmp	r5, ip
 800d522:	da18      	bge.n	800d556 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800d524:	454f      	cmp	r7, r9
 800d526:	bfb8      	it	lt
 800d528:	464f      	movlt	r7, r9
 800d52a:	42b5      	cmp	r5, r6
 800d52c:	bfb8      	it	lt
 800d52e:	4635      	movlt	r5, r6
 800d530:	45f0      	cmp	r8, lr
 800d532:	bfd8      	it	le
 800d534:	4622      	movle	r2, r4
 800d536:	1bd2      	subs	r2, r2, r7
 800d538:	8082      	strh	r2, [r0, #4]
 800d53a:	884a      	ldrh	r2, [r1, #2]
 800d53c:	88c9      	ldrh	r1, [r1, #6]
 800d53e:	8007      	strh	r7, [r0, #0]
 800d540:	440a      	add	r2, r1
 800d542:	b292      	uxth	r2, r2
 800d544:	b211      	sxth	r1, r2
 800d546:	458c      	cmp	ip, r1
 800d548:	bfa8      	it	ge
 800d54a:	4613      	movge	r3, r2
 800d54c:	1b5b      	subs	r3, r3, r5
 800d54e:	80c3      	strh	r3, [r0, #6]
 800d550:	8045      	strh	r5, [r0, #2]
 800d552:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d556:	2300      	movs	r3, #0
 800d558:	8003      	strh	r3, [r0, #0]
 800d55a:	8043      	strh	r3, [r0, #2]
 800d55c:	8083      	strh	r3, [r0, #4]
 800d55e:	80c3      	strh	r3, [r0, #6]
 800d560:	e7f7      	b.n	800d552 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800d562 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800d562:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800d566:	2b00      	cmp	r3, #0
 800d568:	dd06      	ble.n	800d578 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800d56a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800d56e:	2800      	cmp	r0, #0
 800d570:	bfcc      	ite	gt
 800d572:	2000      	movgt	r0, #0
 800d574:	2001      	movle	r0, #1
 800d576:	4770      	bx	lr
 800d578:	2001      	movs	r0, #1
 800d57a:	4770      	bx	lr

0800d57c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800d57c:	2300      	movs	r3, #0
 800d57e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d582:	4604      	mov	r4, r0
 800d584:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800d586:	8003      	strh	r3, [r0, #0]
 800d588:	8043      	strh	r3, [r0, #2]
 800d58a:	8083      	strh	r3, [r0, #4]
 800d58c:	80c3      	strh	r3, [r0, #6]
 800d58e:	2d00      	cmp	r5, #0
 800d590:	d040      	beq.n	800d614 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800d592:	1d28      	adds	r0, r5, #4
 800d594:	f7ff ffe5 	bl	800d562 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d598:	b988      	cbnz	r0, 800d5be <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800d59a:	4620      	mov	r0, r4
 800d59c:	f7ff ffe1 	bl	800d562 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d5a0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800d5a4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800d5a8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800d5ac:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800d5b0:	b138      	cbz	r0, 800d5c2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800d5b2:	8022      	strh	r2, [r4, #0]
 800d5b4:	8063      	strh	r3, [r4, #2]
 800d5b6:	f8a4 e004 	strh.w	lr, [r4, #4]
 800d5ba:	f8a4 c006 	strh.w	ip, [r4, #6]
 800d5be:	69ad      	ldr	r5, [r5, #24]
 800d5c0:	e7e5      	b.n	800d58e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800d5c2:	f9b4 0000 	ldrsh.w	r0, [r4]
 800d5c6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800d5ca:	4290      	cmp	r0, r2
 800d5cc:	4607      	mov	r7, r0
 800d5ce:	bfa8      	it	ge
 800d5d0:	4617      	movge	r7, r2
 800d5d2:	4299      	cmp	r1, r3
 800d5d4:	460e      	mov	r6, r1
 800d5d6:	bfa8      	it	ge
 800d5d8:	461e      	movge	r6, r3
 800d5da:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800d5de:	4472      	add	r2, lr
 800d5e0:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800d5e4:	4440      	add	r0, r8
 800d5e6:	4471      	add	r1, lr
 800d5e8:	4463      	add	r3, ip
 800d5ea:	b200      	sxth	r0, r0
 800d5ec:	b212      	sxth	r2, r2
 800d5ee:	b209      	sxth	r1, r1
 800d5f0:	b21b      	sxth	r3, r3
 800d5f2:	4290      	cmp	r0, r2
 800d5f4:	bfac      	ite	ge
 800d5f6:	ebc7 0200 	rsbge	r2, r7, r0
 800d5fa:	ebc7 0202 	rsblt	r2, r7, r2
 800d5fe:	4299      	cmp	r1, r3
 800d600:	bfac      	ite	ge
 800d602:	ebc6 0301 	rsbge	r3, r6, r1
 800d606:	ebc6 0303 	rsblt	r3, r6, r3
 800d60a:	8027      	strh	r7, [r4, #0]
 800d60c:	8066      	strh	r6, [r4, #2]
 800d60e:	80a2      	strh	r2, [r4, #4]
 800d610:	80e3      	strh	r3, [r4, #6]
 800d612:	e7d4      	b.n	800d5be <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800d614:	4620      	mov	r0, r4
 800d616:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d61a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800d61a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800d61e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800d622:	b383      	cbz	r3, 800d686 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800d624:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800d626:	b374      	cbz	r4, 800d686 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800d628:	f9b1 5000 	ldrsh.w	r5, [r1]
 800d62c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800d630:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800d634:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800d638:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800d63c:	b303      	cbz	r3, 800d680 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800d63e:	4668      	mov	r0, sp
 800d640:	1d21      	adds	r1, r4, #4
 800d642:	f8ad 5000 	strh.w	r5, [sp]
 800d646:	f8ad 6002 	strh.w	r6, [sp, #2]
 800d64a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800d64e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800d652:	f7ff ff43 	bl	800d4dc <_ZN8touchgfx4RectaNERKS0_>
 800d656:	4668      	mov	r0, sp
 800d658:	f7ff ff83 	bl	800d562 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d65c:	b980      	cbnz	r0, 800d680 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800d65e:	f8bd 3000 	ldrh.w	r3, [sp]
 800d662:	88a2      	ldrh	r2, [r4, #4]
 800d664:	4669      	mov	r1, sp
 800d666:	1a9b      	subs	r3, r3, r2
 800d668:	f8ad 3000 	strh.w	r3, [sp]
 800d66c:	88e2      	ldrh	r2, [r4, #6]
 800d66e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d672:	4620      	mov	r0, r4
 800d674:	1a9b      	subs	r3, r3, r2
 800d676:	f8ad 3002 	strh.w	r3, [sp, #2]
 800d67a:	6823      	ldr	r3, [r4, #0]
 800d67c:	689b      	ldr	r3, [r3, #8]
 800d67e:	4798      	blx	r3
 800d680:	69a4      	ldr	r4, [r4, #24]
 800d682:	2c00      	cmp	r4, #0
 800d684:	d1d8      	bne.n	800d638 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800d686:	b002      	add	sp, #8
 800d688:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d68c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800d68c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d68e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800d692:	460d      	mov	r5, r1
 800d694:	4616      	mov	r6, r2
 800d696:	b323      	cbz	r3, 800d6e2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800d698:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800d69a:	b314      	cbz	r4, 800d6e2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800d69c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800d6a0:	b1eb      	cbz	r3, 800d6de <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800d6a2:	466b      	mov	r3, sp
 800d6a4:	6828      	ldr	r0, [r5, #0]
 800d6a6:	6869      	ldr	r1, [r5, #4]
 800d6a8:	c303      	stmia	r3!, {r0, r1}
 800d6aa:	4668      	mov	r0, sp
 800d6ac:	1d21      	adds	r1, r4, #4
 800d6ae:	f7ff ff15 	bl	800d4dc <_ZN8touchgfx4RectaNERKS0_>
 800d6b2:	4668      	mov	r0, sp
 800d6b4:	f7ff ff55 	bl	800d562 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d6b8:	b988      	cbnz	r0, 800d6de <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800d6ba:	f8bd 3000 	ldrh.w	r3, [sp]
 800d6be:	88a2      	ldrh	r2, [r4, #4]
 800d6c0:	4669      	mov	r1, sp
 800d6c2:	1a9b      	subs	r3, r3, r2
 800d6c4:	f8ad 3000 	strh.w	r3, [sp]
 800d6c8:	88e2      	ldrh	r2, [r4, #6]
 800d6ca:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d6ce:	4620      	mov	r0, r4
 800d6d0:	1a9b      	subs	r3, r3, r2
 800d6d2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800d6d6:	6823      	ldr	r3, [r4, #0]
 800d6d8:	4632      	mov	r2, r6
 800d6da:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800d6dc:	4798      	blx	r3
 800d6de:	69a4      	ldr	r4, [r4, #24]
 800d6e0:	e7db      	b.n	800d69a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800d6e2:	b002      	add	sp, #8
 800d6e4:	bd70      	pop	{r4, r5, r6, pc}

0800d6e6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800d6e6:	b513      	push	{r0, r1, r4, lr}
 800d6e8:	6803      	ldr	r3, [r0, #0]
 800d6ea:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 800d6ee:	2300      	movs	r3, #0
 800d6f0:	e9cd 3300 	strd	r3, r3, [sp]
 800d6f4:	466b      	mov	r3, sp
 800d6f6:	47a0      	blx	r4
 800d6f8:	b002      	add	sp, #8
 800d6fa:	bd10      	pop	{r4, pc}

0800d6fc <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800d6fc:	2301      	movs	r3, #1
 800d6fe:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800d702:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800d706:	4770      	bx	lr

0800d708 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800d708:	2301      	movs	r3, #1
 800d70a:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800d70e:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800d712:	4770      	bx	lr

0800d714 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800d714:	2201      	movs	r2, #1
 800d716:	6843      	ldr	r3, [r0, #4]
 800d718:	725a      	strb	r2, [r3, #9]
 800d71a:	6840      	ldr	r0, [r0, #4]
 800d71c:	6803      	ldr	r3, [r0, #0]
 800d71e:	691b      	ldr	r3, [r3, #16]
 800d720:	4718      	bx	r3

0800d722 <_ZN8touchgfx3HAL8flushDMAEv>:
 800d722:	6840      	ldr	r0, [r0, #4]
 800d724:	6803      	ldr	r3, [r0, #0]
 800d726:	689b      	ldr	r3, [r3, #8]
 800d728:	4718      	bx	r3

0800d72a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800d72a:	b530      	push	{r4, r5, lr}
 800d72c:	b08b      	sub	sp, #44	@ 0x2c
 800d72e:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800d732:	6804      	ldr	r4, [r0, #0]
 800d734:	9509      	str	r5, [sp, #36]	@ 0x24
 800d736:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800d73a:	9508      	str	r5, [sp, #32]
 800d73c:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800d740:	9507      	str	r5, [sp, #28]
 800d742:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800d746:	9506      	str	r5, [sp, #24]
 800d748:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800d74c:	9505      	str	r5, [sp, #20]
 800d74e:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800d752:	9504      	str	r5, [sp, #16]
 800d754:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800d758:	9503      	str	r5, [sp, #12]
 800d75a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800d75e:	9502      	str	r5, [sp, #8]
 800d760:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800d764:	e9cd 3500 	strd	r3, r5, [sp]
 800d768:	4613      	mov	r3, r2
 800d76a:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 800d76c:	2200      	movs	r2, #0
 800d76e:	47a0      	blx	r4
 800d770:	b00b      	add	sp, #44	@ 0x2c
 800d772:	bd30      	pop	{r4, r5, pc}

0800d774 <_ZN8touchgfx3HAL10beginFrameEv>:
 800d774:	4b04      	ldr	r3, [pc, #16]	@ (800d788 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800d776:	781b      	ldrb	r3, [r3, #0]
 800d778:	b123      	cbz	r3, 800d784 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800d77a:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800d77e:	f080 0001 	eor.w	r0, r0, #1
 800d782:	4770      	bx	lr
 800d784:	2001      	movs	r0, #1
 800d786:	4770      	bx	lr
 800d788:	2004bf96 	.word	0x2004bf96

0800d78c <_ZN8touchgfx3HAL8endFrameEv>:
 800d78c:	b510      	push	{r4, lr}
 800d78e:	4604      	mov	r4, r0
 800d790:	6840      	ldr	r0, [r0, #4]
 800d792:	6803      	ldr	r3, [r0, #0]
 800d794:	689b      	ldr	r3, [r3, #8]
 800d796:	4798      	blx	r3
 800d798:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800d79c:	b113      	cbz	r3, 800d7a4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800d79e:	2301      	movs	r3, #1
 800d7a0:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800d7a4:	bd10      	pop	{r4, pc}

0800d7a6 <_ZN8touchgfx3HAL10initializeEv>:
 800d7a6:	b510      	push	{r4, lr}
 800d7a8:	4604      	mov	r4, r0
 800d7aa:	f7f4 f995 	bl	8001ad8 <_ZN8touchgfx10OSWrappers10initializeEv>
 800d7ae:	f7f3 ffcd 	bl	800174c <_ZN8touchgfx4GPIO4initEv>
 800d7b2:	6860      	ldr	r0, [r4, #4]
 800d7b4:	6803      	ldr	r3, [r0, #0]
 800d7b6:	68db      	ldr	r3, [r3, #12]
 800d7b8:	4798      	blx	r3
 800d7ba:	68e0      	ldr	r0, [r4, #12]
 800d7bc:	6803      	ldr	r3, [r0, #0]
 800d7be:	689b      	ldr	r3, [r3, #8]
 800d7c0:	4798      	blx	r3
 800d7c2:	6823      	ldr	r3, [r4, #0]
 800d7c4:	4620      	mov	r0, r4
 800d7c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d7ca:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800d7cc:	4718      	bx	r3

0800d7ce <_ZN8touchgfx3HAL9taskEntryEv>:
 800d7ce:	4604      	mov	r4, r0
 800d7d0:	b508      	push	{r3, lr}
 800d7d2:	6803      	ldr	r3, [r0, #0]
 800d7d4:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800d7d8:	4798      	blx	r3
 800d7da:	6823      	ldr	r3, [r4, #0]
 800d7dc:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800d7de:	4620      	mov	r0, r4
 800d7e0:	4798      	blx	r3
 800d7e2:	f7f4 f9c5 	bl	8001b70 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800d7e6:	6823      	ldr	r3, [r4, #0]
 800d7e8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800d7ea:	e7f8      	b.n	800d7de <_ZN8touchgfx3HAL9taskEntryEv+0x10>

0800d7ec <_ZN8touchgfx3HAL4tickEv>:
 800d7ec:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d7ee:	6803      	ldr	r3, [r0, #0]
 800d7f0:	4604      	mov	r4, r0
 800d7f2:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800d7f6:	4798      	blx	r3
 800d7f8:	4d59      	ldr	r5, [pc, #356]	@ (800d960 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800d7fa:	2800      	cmp	r0, #0
 800d7fc:	f000 8095 	beq.w	800d92a <_ZN8touchgfx3HAL4tickEv+0x13e>
 800d800:	2600      	movs	r6, #0
 800d802:	2001      	movs	r0, #1
 800d804:	f7f3 ffa4 	bl	8001750 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800d808:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800d80c:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800d810:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800d814:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800d818:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800d81c:	b133      	cbz	r3, 800d82c <_ZN8touchgfx3HAL4tickEv+0x40>
 800d81e:	6823      	ldr	r3, [r4, #0]
 800d820:	4620      	mov	r0, r4
 800d822:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800d826:	4798      	blx	r3
 800d828:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800d82c:	2601      	movs	r6, #1
 800d82e:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800d832:	6862      	ldr	r2, [r4, #4]
 800d834:	f083 0301 	eor.w	r3, r3, #1
 800d838:	7253      	strb	r3, [r2, #9]
 800d83a:	702e      	strb	r6, [r5, #0]
 800d83c:	f001 ff68 	bl	800f710 <_ZN8touchgfx11Application11getInstanceEv>
 800d840:	6803      	ldr	r3, [r0, #0]
 800d842:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d844:	4798      	blx	r3
 800d846:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800d84a:	b90b      	cbnz	r3, 800d850 <_ZN8touchgfx3HAL4tickEv+0x64>
 800d84c:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800d850:	f001 ff5e 	bl	800f710 <_ZN8touchgfx11Application11getInstanceEv>
 800d854:	6803      	ldr	r3, [r0, #0]
 800d856:	695b      	ldr	r3, [r3, #20]
 800d858:	4798      	blx	r3
 800d85a:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800d85c:	6803      	ldr	r3, [r0, #0]
 800d85e:	691b      	ldr	r3, [r3, #16]
 800d860:	4798      	blx	r3
 800d862:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800d866:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800d86a:	3b01      	subs	r3, #1
 800d86c:	b2db      	uxtb	r3, r3
 800d86e:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800d872:	b10a      	cbz	r2, 800d878 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800d874:	2b00      	cmp	r3, #0
 800d876:	d1eb      	bne.n	800d850 <_ZN8touchgfx3HAL4tickEv+0x64>
 800d878:	4a3a      	ldr	r2, [pc, #232]	@ (800d964 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800d87a:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800d87e:	7813      	ldrb	r3, [r2, #0]
 800d880:	3301      	adds	r3, #1
 800d882:	b25b      	sxtb	r3, r3
 800d884:	4299      	cmp	r1, r3
 800d886:	7013      	strb	r3, [r2, #0]
 800d888:	dc10      	bgt.n	800d8ac <_ZN8touchgfx3HAL4tickEv+0xc0>
 800d88a:	2300      	movs	r3, #0
 800d88c:	68e0      	ldr	r0, [r4, #12]
 800d88e:	7013      	strb	r3, [r2, #0]
 800d890:	6803      	ldr	r3, [r0, #0]
 800d892:	aa03      	add	r2, sp, #12
 800d894:	68db      	ldr	r3, [r3, #12]
 800d896:	a902      	add	r1, sp, #8
 800d898:	4798      	blx	r3
 800d89a:	6823      	ldr	r3, [r4, #0]
 800d89c:	2800      	cmp	r0, #0
 800d89e:	d050      	beq.n	800d942 <_ZN8touchgfx3HAL4tickEv+0x156>
 800d8a0:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800d8a4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800d8a8:	4620      	mov	r0, r4
 800d8aa:	4798      	blx	r3
 800d8ac:	2300      	movs	r3, #0
 800d8ae:	6960      	ldr	r0, [r4, #20]
 800d8b0:	f88d 3007 	strb.w	r3, [sp, #7]
 800d8b4:	b158      	cbz	r0, 800d8ce <_ZN8touchgfx3HAL4tickEv+0xe2>
 800d8b6:	6803      	ldr	r3, [r0, #0]
 800d8b8:	f10d 0107 	add.w	r1, sp, #7
 800d8bc:	68db      	ldr	r3, [r3, #12]
 800d8be:	4798      	blx	r3
 800d8c0:	b128      	cbz	r0, 800d8ce <_ZN8touchgfx3HAL4tickEv+0xe2>
 800d8c2:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800d8c4:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800d8c8:	6803      	ldr	r3, [r0, #0]
 800d8ca:	68db      	ldr	r3, [r3, #12]
 800d8cc:	4798      	blx	r3
 800d8ce:	f104 001c 	add.w	r0, r4, #28
 800d8d2:	f004 fd5b 	bl	801238c <_ZN8touchgfx8Gestures4tickEv>
 800d8d6:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800d8da:	b30b      	cbz	r3, 800d920 <_ZN8touchgfx3HAL4tickEv+0x134>
 800d8dc:	6920      	ldr	r0, [r4, #16]
 800d8de:	6803      	ldr	r3, [r0, #0]
 800d8e0:	691b      	ldr	r3, [r3, #16]
 800d8e2:	4798      	blx	r3
 800d8e4:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800d8e6:	4606      	mov	r6, r0
 800d8e8:	b903      	cbnz	r3, 800d8ec <_ZN8touchgfx3HAL4tickEv+0x100>
 800d8ea:	6760      	str	r0, [r4, #116]	@ 0x74
 800d8ec:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800d8ee:	4a1e      	ldr	r2, [pc, #120]	@ (800d968 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800d8f0:	1af3      	subs	r3, r6, r3
 800d8f2:	4293      	cmp	r3, r2
 800d8f4:	d914      	bls.n	800d920 <_ZN8touchgfx3HAL4tickEv+0x134>
 800d8f6:	6920      	ldr	r0, [r4, #16]
 800d8f8:	6803      	ldr	r3, [r0, #0]
 800d8fa:	699b      	ldr	r3, [r3, #24]
 800d8fc:	4798      	blx	r3
 800d8fe:	2264      	movs	r2, #100	@ 0x64
 800d900:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800d902:	1af3      	subs	r3, r6, r3
 800d904:	fbb3 f3f2 	udiv	r3, r3, r2
 800d908:	fbb0 f0f3 	udiv	r0, r0, r3
 800d90c:	2800      	cmp	r0, #0
 800d90e:	dc1d      	bgt.n	800d94c <_ZN8touchgfx3HAL4tickEv+0x160>
 800d910:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800d914:	6920      	ldr	r0, [r4, #16]
 800d916:	2100      	movs	r1, #0
 800d918:	6803      	ldr	r3, [r0, #0]
 800d91a:	69db      	ldr	r3, [r3, #28]
 800d91c:	4798      	blx	r3
 800d91e:	6766      	str	r6, [r4, #116]	@ 0x74
 800d920:	f001 fef6 	bl	800f710 <_ZN8touchgfx11Application11getInstanceEv>
 800d924:	6803      	ldr	r3, [r0, #0]
 800d926:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d928:	4798      	blx	r3
 800d92a:	6823      	ldr	r3, [r4, #0]
 800d92c:	4620      	mov	r0, r4
 800d92e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800d932:	4798      	blx	r3
 800d934:	2001      	movs	r0, #1
 800d936:	f7f3 ff27 	bl	8001788 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800d93a:	2300      	movs	r3, #0
 800d93c:	702b      	strb	r3, [r5, #0]
 800d93e:	b004      	add	sp, #16
 800d940:	bd70      	pop	{r4, r5, r6, pc}
 800d942:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800d946:	4620      	mov	r0, r4
 800d948:	4798      	blx	r3
 800d94a:	e7af      	b.n	800d8ac <_ZN8touchgfx3HAL4tickEv+0xc0>
 800d94c:	2863      	cmp	r0, #99	@ 0x63
 800d94e:	bfcb      	itete	gt
 800d950:	2300      	movgt	r3, #0
 800d952:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800d956:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800d95a:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800d95e:	e7d9      	b.n	800d914 <_ZN8touchgfx3HAL4tickEv+0x128>
 800d960:	2004bf9c 	.word	0x2004bf9c
 800d964:	2004bf9d 	.word	0x2004bf9d
 800d968:	05f5e100 	.word	0x05f5e100

0800d96c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800d96c:	b510      	push	{r4, lr}
 800d96e:	4604      	mov	r4, r0
 800d970:	f7f4 f8e2 	bl	8001b38 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800d974:	2200      	movs	r2, #0
 800d976:	6863      	ldr	r3, [r4, #4]
 800d978:	729a      	strb	r2, [r3, #10]
 800d97a:	bd10      	pop	{r4, pc}

0800d97c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800d97c:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800d97e:	301c      	adds	r0, #28
 800d980:	f004 bd02 	b.w	8012388 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800d984 <_ZN8touchgfx3HAL5touchEll>:
 800d984:	b530      	push	{r4, r5, lr}
 800d986:	4604      	mov	r4, r0
 800d988:	b087      	sub	sp, #28
 800d98a:	a804      	add	r0, sp, #16
 800d98c:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800d990:	f001 fca6 	bl	800f2e0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800d994:	9b04      	ldr	r3, [sp, #16]
 800d996:	a906      	add	r1, sp, #24
 800d998:	f8ad 300c 	strh.w	r3, [sp, #12]
 800d99c:	9b05      	ldr	r3, [sp, #20]
 800d99e:	a803      	add	r0, sp, #12
 800d9a0:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800d9a4:	f001 fcee 	bl	800f384 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800d9a8:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800d9ac:	f104 001c 	add.w	r0, r4, #28
 800d9b0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800d9b4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800d9b8:	b189      	cbz	r1, 800d9de <_ZN8touchgfx3HAL5touchEll+0x5a>
 800d9ba:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800d9be:	9300      	str	r3, [sp, #0]
 800d9c0:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800d9c4:	4613      	mov	r3, r2
 800d9c6:	462a      	mov	r2, r5
 800d9c8:	f004 fcee 	bl	80123a8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800d9cc:	b128      	cbz	r0, 800d9da <_ZN8touchgfx3HAL5touchEll+0x56>
 800d9ce:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d9d2:	6623      	str	r3, [r4, #96]	@ 0x60
 800d9d4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d9d8:	6663      	str	r3, [r4, #100]	@ 0x64
 800d9da:	b007      	add	sp, #28
 800d9dc:	bd30      	pop	{r4, r5, pc}
 800d9de:	f004 fd23 	bl	8012428 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800d9e2:	2301      	movs	r3, #1
 800d9e4:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800d9e8:	e7f1      	b.n	800d9ce <_ZN8touchgfx3HAL5touchEll+0x4a>

0800d9ea <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800d9ea:	b510      	push	{r4, lr}
 800d9ec:	2b00      	cmp	r3, #0
 800d9ee:	d046      	beq.n	800da7e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800d9f0:	ea81 0002 	eor.w	r0, r1, r2
 800d9f4:	07c4      	lsls	r4, r0, #31
 800d9f6:	d508      	bpl.n	800da0a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800d9f8:	440b      	add	r3, r1
 800d9fa:	3a01      	subs	r2, #1
 800d9fc:	428b      	cmp	r3, r1
 800d9fe:	d93e      	bls.n	800da7e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800da00:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800da04:	f801 0b01 	strb.w	r0, [r1], #1
 800da08:	e7f8      	b.n	800d9fc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800da0a:	07d0      	lsls	r0, r2, #31
 800da0c:	bf42      	ittt	mi
 800da0e:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800da12:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800da16:	f801 0b01 	strbmi.w	r0, [r1], #1
 800da1a:	2b01      	cmp	r3, #1
 800da1c:	d911      	bls.n	800da42 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800da1e:	ea81 0402 	eor.w	r4, r1, r2
 800da22:	07a4      	lsls	r4, r4, #30
 800da24:	4610      	mov	r0, r2
 800da26:	d022      	beq.n	800da6e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800da28:	f023 0401 	bic.w	r4, r3, #1
 800da2c:	440c      	add	r4, r1
 800da2e:	428c      	cmp	r4, r1
 800da30:	4602      	mov	r2, r0
 800da32:	d904      	bls.n	800da3e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800da34:	8812      	ldrh	r2, [r2, #0]
 800da36:	3002      	adds	r0, #2
 800da38:	f821 2b02 	strh.w	r2, [r1], #2
 800da3c:	e7f7      	b.n	800da2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800da3e:	f003 0301 	and.w	r3, r3, #1
 800da42:	f023 0003 	bic.w	r0, r3, #3
 800da46:	4408      	add	r0, r1
 800da48:	4288      	cmp	r0, r1
 800da4a:	4614      	mov	r4, r2
 800da4c:	d904      	bls.n	800da58 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800da4e:	6824      	ldr	r4, [r4, #0]
 800da50:	3204      	adds	r2, #4
 800da52:	f841 4b04 	str.w	r4, [r1], #4
 800da56:	e7f7      	b.n	800da48 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800da58:	f003 0303 	and.w	r3, r3, #3
 800da5c:	440b      	add	r3, r1
 800da5e:	3a01      	subs	r2, #1
 800da60:	428b      	cmp	r3, r1
 800da62:	d90c      	bls.n	800da7e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800da64:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800da68:	f801 0b01 	strb.w	r0, [r1], #1
 800da6c:	e7f8      	b.n	800da60 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800da6e:	0790      	lsls	r0, r2, #30
 800da70:	d0e7      	beq.n	800da42 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800da72:	f832 0b02 	ldrh.w	r0, [r2], #2
 800da76:	3b02      	subs	r3, #2
 800da78:	f821 0b02 	strh.w	r0, [r1], #2
 800da7c:	e7e1      	b.n	800da42 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800da7e:	2001      	movs	r0, #1
 800da80:	bd10      	pop	{r4, pc}

0800da82 <_ZN8touchgfx3HAL7noTouchEv>:
 800da82:	b510      	push	{r4, lr}
 800da84:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800da88:	4604      	mov	r4, r0
 800da8a:	b153      	cbz	r3, 800daa2 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800da8c:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800da90:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800da94:	2101      	movs	r1, #1
 800da96:	301c      	adds	r0, #28
 800da98:	f004 fcc6 	bl	8012428 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800da9c:	2300      	movs	r3, #0
 800da9e:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800daa2:	bd10      	pop	{r4, pc}

0800daa4 <_ZN8touchgfx3HAL3lcdEv>:
 800daa4:	4b04      	ldr	r3, [pc, #16]	@ (800dab8 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800daa6:	681b      	ldr	r3, [r3, #0]
 800daa8:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800daac:	b10a      	cbz	r2, 800dab2 <_ZN8touchgfx3HAL3lcdEv+0xe>
 800daae:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800dab0:	b900      	cbnz	r0, 800dab4 <_ZN8touchgfx3HAL3lcdEv+0x10>
 800dab2:	6898      	ldr	r0, [r3, #8]
 800dab4:	4770      	bx	lr
 800dab6:	bf00      	nop
 800dab8:	2004bf98 	.word	0x2004bf98

0800dabc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800dabc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dac0:	4604      	mov	r4, r0
 800dac2:	2000      	movs	r0, #0
 800dac4:	b085      	sub	sp, #20
 800dac6:	ad04      	add	r5, sp, #16
 800dac8:	f845 0d04 	str.w	r0, [r5, #-4]!
 800dacc:	69a0      	ldr	r0, [r4, #24]
 800dace:	4699      	mov	r9, r3
 800dad0:	6806      	ldr	r6, [r0, #0]
 800dad2:	9501      	str	r5, [sp, #4]
 800dad4:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800dad8:	460f      	mov	r7, r1
 800dada:	9500      	str	r5, [sp, #0]
 800dadc:	6835      	ldr	r5, [r6, #0]
 800dade:	4690      	mov	r8, r2
 800dae0:	47a8      	blx	r5
 800dae2:	4d10      	ldr	r5, [pc, #64]	@ (800db24 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800dae4:	4606      	mov	r6, r0
 800dae6:	f8a5 9000 	strh.w	r9, [r5]
 800daea:	f7ff ffdb 	bl	800daa4 <_ZN8touchgfx3HAL3lcdEv>
 800daee:	6803      	ldr	r3, [r0, #0]
 800daf0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800daf2:	4798      	blx	r3
 800daf4:	b128      	cbz	r0, 800db02 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800daf6:	2801      	cmp	r0, #1
 800daf8:	d00b      	beq.n	800db12 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800dafa:	4630      	mov	r0, r6
 800dafc:	b005      	add	sp, #20
 800dafe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800db02:	882b      	ldrh	r3, [r5, #0]
 800db04:	fb08 7203 	mla	r2, r8, r3, r7
 800db08:	9b03      	ldr	r3, [sp, #12]
 800db0a:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800db0e:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800db10:	e7f3      	b.n	800dafa <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800db12:	882a      	ldrh	r2, [r5, #0]
 800db14:	9b03      	ldr	r3, [sp, #12]
 800db16:	fb08 7202 	mla	r2, r8, r2, r7
 800db1a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800db1e:	1a9a      	subs	r2, r3, r2
 800db20:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800db22:	e7ea      	b.n	800dafa <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800db24:	2004bf92 	.word	0x2004bf92

0800db28 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800db28:	b5f0      	push	{r4, r5, r6, r7, lr}
 800db2a:	b08b      	sub	sp, #44	@ 0x2c
 800db2c:	4617      	mov	r7, r2
 800db2e:	4604      	mov	r4, r0
 800db30:	460e      	mov	r6, r1
 800db32:	461d      	mov	r5, r3
 800db34:	f7ff ffb6 	bl	800daa4 <_ZN8touchgfx3HAL3lcdEv>
 800db38:	6803      	ldr	r3, [r0, #0]
 800db3a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800db3c:	4798      	blx	r3
 800db3e:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800db42:	9007      	str	r0, [sp, #28]
 800db44:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800db48:	4b0d      	ldr	r3, [pc, #52]	@ (800db80 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800db4a:	6822      	ldr	r2, [r4, #0]
 800db4c:	881b      	ldrh	r3, [r3, #0]
 800db4e:	4631      	mov	r1, r6
 800db50:	9306      	str	r3, [sp, #24]
 800db52:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800db56:	4620      	mov	r0, r4
 800db58:	9305      	str	r3, [sp, #20]
 800db5a:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800db5e:	9304      	str	r3, [sp, #16]
 800db60:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800db64:	9303      	str	r3, [sp, #12]
 800db66:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800db6a:	9302      	str	r3, [sp, #8]
 800db6c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800db70:	e9cd 5300 	strd	r5, r3, [sp]
 800db74:	463b      	mov	r3, r7
 800db76:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 800db78:	2200      	movs	r2, #0
 800db7a:	47a8      	blx	r5
 800db7c:	b00b      	add	sp, #44	@ 0x2c
 800db7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800db80:	2004bf92 	.word	0x2004bf92

0800db84 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800db84:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800db88:	4698      	mov	r8, r3
 800db8a:	6803      	ldr	r3, [r0, #0]
 800db8c:	b08b      	sub	sp, #44	@ 0x2c
 800db8e:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 800db90:	4b14      	ldr	r3, [pc, #80]	@ (800dbe4 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800db92:	4617      	mov	r7, r2
 800db94:	f8b3 9000 	ldrh.w	r9, [r3]
 800db98:	460e      	mov	r6, r1
 800db9a:	4604      	mov	r4, r0
 800db9c:	f7ff ff82 	bl	800daa4 <_ZN8touchgfx3HAL3lcdEv>
 800dba0:	6803      	ldr	r3, [r0, #0]
 800dba2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dba4:	4798      	blx	r3
 800dba6:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800dbaa:	2200      	movs	r2, #0
 800dbac:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800dbb0:	2302      	movs	r3, #2
 800dbb2:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800dbb6:	2301      	movs	r3, #1
 800dbb8:	9305      	str	r3, [sp, #20]
 800dbba:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800dbbe:	4631      	mov	r1, r6
 800dbc0:	9304      	str	r3, [sp, #16]
 800dbc2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800dbc6:	4620      	mov	r0, r4
 800dbc8:	9303      	str	r3, [sp, #12]
 800dbca:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800dbce:	9302      	str	r3, [sp, #8]
 800dbd0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800dbd4:	e9cd 8300 	strd	r8, r3, [sp]
 800dbd8:	463b      	mov	r3, r7
 800dbda:	47a8      	blx	r5
 800dbdc:	b00b      	add	sp, #44	@ 0x2c
 800dbde:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dbe2:	bf00      	nop
 800dbe4:	2004bf92 	.word	0x2004bf92

0800dbe8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800dbe8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dbec:	4698      	mov	r8, r3
 800dbee:	6803      	ldr	r3, [r0, #0]
 800dbf0:	b087      	sub	sp, #28
 800dbf2:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 800dbf4:	4b10      	ldr	r3, [pc, #64]	@ (800dc38 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800dbf6:	460e      	mov	r6, r1
 800dbf8:	f8b3 9000 	ldrh.w	r9, [r3]
 800dbfc:	4617      	mov	r7, r2
 800dbfe:	4604      	mov	r4, r0
 800dc00:	f7ff ff50 	bl	800daa4 <_ZN8touchgfx3HAL3lcdEv>
 800dc04:	6803      	ldr	r3, [r0, #0]
 800dc06:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dc08:	4798      	blx	r3
 800dc0a:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800dc0e:	f8cd 900c 	str.w	r9, [sp, #12]
 800dc12:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800dc16:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800dc1a:	463a      	mov	r2, r7
 800dc1c:	9302      	str	r3, [sp, #8]
 800dc1e:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800dc22:	4631      	mov	r1, r6
 800dc24:	9301      	str	r3, [sp, #4]
 800dc26:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800dc2a:	4620      	mov	r0, r4
 800dc2c:	9300      	str	r3, [sp, #0]
 800dc2e:	4643      	mov	r3, r8
 800dc30:	47a8      	blx	r5
 800dc32:	b007      	add	sp, #28
 800dc34:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dc38:	2004bf92 	.word	0x2004bf92

0800dc3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800dc3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc40:	4604      	mov	r4, r0
 800dc42:	b08f      	sub	sp, #60	@ 0x3c
 800dc44:	4610      	mov	r0, r2
 800dc46:	460d      	mov	r5, r1
 800dc48:	4691      	mov	r9, r2
 800dc4a:	461e      	mov	r6, r3
 800dc4c:	f004 f946 	bl	8011edc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800dc50:	2800      	cmp	r0, #0
 800dc52:	f000 809d 	beq.w	800dd90 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800dc56:	6823      	ldr	r3, [r4, #0]
 800dc58:	4620      	mov	r0, r4
 800dc5a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800dc5c:	4798      	blx	r3
 800dc5e:	6823      	ldr	r3, [r4, #0]
 800dc60:	f8df b190 	ldr.w	fp, [pc, #400]	@ 800ddf4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800dc64:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dc66:	4620      	mov	r0, r4
 800dc68:	4798      	blx	r3
 800dc6a:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 800ddf8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800dc6e:	f8bb 3000 	ldrh.w	r3, [fp]
 800dc72:	4f5d      	ldr	r7, [pc, #372]	@ (800dde8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800dc74:	9301      	str	r3, [sp, #4]
 800dc76:	f8ba 3000 	ldrh.w	r3, [sl]
 800dc7a:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800dc7e:	9302      	str	r3, [sp, #8]
 800dc80:	883b      	ldrh	r3, [r7, #0]
 800dc82:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800dc86:	9303      	str	r3, [sp, #12]
 800dc88:	4b58      	ldr	r3, [pc, #352]	@ (800ddec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800dc8a:	4640      	mov	r0, r8
 800dc8c:	881a      	ldrh	r2, [r3, #0]
 800dc8e:	9305      	str	r3, [sp, #20]
 800dc90:	9204      	str	r2, [sp, #16]
 800dc92:	f004 f9b7 	bl	8012004 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800dc96:	8038      	strh	r0, [r7, #0]
 800dc98:	4640      	mov	r0, r8
 800dc9a:	f004 f9e7 	bl	801206c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800dc9e:	9b05      	ldr	r3, [sp, #20]
 800dca0:	b280      	uxth	r0, r0
 800dca2:	8018      	strh	r0, [r3, #0]
 800dca4:	4b52      	ldr	r3, [pc, #328]	@ (800ddf0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800dca6:	781b      	ldrb	r3, [r3, #0]
 800dca8:	2b00      	cmp	r3, #0
 800dcaa:	d174      	bne.n	800dd96 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800dcac:	883b      	ldrh	r3, [r7, #0]
 800dcae:	f8aa 0000 	strh.w	r0, [sl]
 800dcb2:	f8ab 3000 	strh.w	r3, [fp]
 800dcb6:	4648      	mov	r0, r9
 800dcb8:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800dcbc:	f004 f90e 	bl	8011edc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800dcc0:	2200      	movs	r2, #0
 800dcc2:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800dcc6:	4611      	mov	r1, r2
 800dcc8:	4628      	mov	r0, r5
 800dcca:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800dcce:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800dcd2:	f7f4 fe2f 	bl	8002934 <_ZN8touchgfx8Drawable5setXYEss>
 800dcd6:	2301      	movs	r3, #1
 800dcd8:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800dcdc:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800dce0:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800dce4:	2b00      	cmp	r3, #0
 800dce6:	dd5c      	ble.n	800dda2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800dce8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800dcec:	2b00      	cmp	r3, #0
 800dcee:	dd58      	ble.n	800dda2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800dcf0:	462a      	mov	r2, r5
 800dcf2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800dcf6:	ab0a      	add	r3, sp, #40	@ 0x28
 800dcf8:	6851      	ldr	r1, [r2, #4]
 800dcfa:	c303      	stmia	r3!, {r0, r1}
 800dcfc:	4631      	mov	r1, r6
 800dcfe:	a80a      	add	r0, sp, #40	@ 0x28
 800dd00:	f7ff fbec 	bl	800d4dc <_ZN8touchgfx4RectaNERKS0_>
 800dd04:	2100      	movs	r1, #0
 800dd06:	4b38      	ldr	r3, [pc, #224]	@ (800dde8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800dd08:	910c      	str	r1, [sp, #48]	@ 0x30
 800dd0a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dd0e:	4b37      	ldr	r3, [pc, #220]	@ (800ddec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800dd10:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800dd14:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dd18:	aa0a      	add	r2, sp, #40	@ 0x28
 800dd1a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800dd1e:	ab08      	add	r3, sp, #32
 800dd20:	e892 0003 	ldmia.w	r2, {r0, r1}
 800dd24:	e883 0003 	stmia.w	r3, {r0, r1}
 800dd28:	4618      	mov	r0, r3
 800dd2a:	a90c      	add	r1, sp, #48	@ 0x30
 800dd2c:	f7ff fbd6 	bl	800d4dc <_ZN8touchgfx4RectaNERKS0_>
 800dd30:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800dd32:	2b00      	cmp	r3, #0
 800dd34:	d13c      	bne.n	800ddb0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800dd36:	2000      	movs	r0, #0
 800dd38:	2600      	movs	r6, #0
 800dd3a:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800dd3e:	696b      	ldr	r3, [r5, #20]
 800dd40:	682a      	ldr	r2, [r5, #0]
 800dd42:	616e      	str	r6, [r5, #20]
 800dd44:	9305      	str	r3, [sp, #20]
 800dd46:	6892      	ldr	r2, [r2, #8]
 800dd48:	a908      	add	r1, sp, #32
 800dd4a:	4628      	mov	r0, r5
 800dd4c:	4790      	blx	r2
 800dd4e:	9b05      	ldr	r3, [sp, #20]
 800dd50:	4652      	mov	r2, sl
 800dd52:	616b      	str	r3, [r5, #20]
 800dd54:	4649      	mov	r1, r9
 800dd56:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800dd5a:	4628      	mov	r0, r5
 800dd5c:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800dd60:	f7f4 fde8 	bl	8002934 <_ZN8touchgfx8Drawable5setXYEss>
 800dd64:	9a01      	ldr	r2, [sp, #4]
 800dd66:	4b23      	ldr	r3, [pc, #140]	@ (800ddf4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800dd68:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800dd6c:	801a      	strh	r2, [r3, #0]
 800dd6e:	9a02      	ldr	r2, [sp, #8]
 800dd70:	4b21      	ldr	r3, [pc, #132]	@ (800ddf8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800dd72:	4620      	mov	r0, r4
 800dd74:	801a      	strh	r2, [r3, #0]
 800dd76:	9a03      	ldr	r2, [sp, #12]
 800dd78:	4b1b      	ldr	r3, [pc, #108]	@ (800dde8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800dd7a:	801a      	strh	r2, [r3, #0]
 800dd7c:	4b1b      	ldr	r3, [pc, #108]	@ (800ddec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800dd7e:	9a04      	ldr	r2, [sp, #16]
 800dd80:	801a      	strh	r2, [r3, #0]
 800dd82:	6823      	ldr	r3, [r4, #0]
 800dd84:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800dd86:	4798      	blx	r3
 800dd88:	6823      	ldr	r3, [r4, #0]
 800dd8a:	4620      	mov	r0, r4
 800dd8c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dd8e:	4798      	blx	r3
 800dd90:	b00f      	add	sp, #60	@ 0x3c
 800dd92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd96:	883b      	ldrh	r3, [r7, #0]
 800dd98:	f8ab 0000 	strh.w	r0, [fp]
 800dd9c:	f8aa 3000 	strh.w	r3, [sl]
 800dda0:	e789      	b.n	800dcb6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800dda2:	462a      	mov	r2, r5
 800dda4:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800dda8:	ab0a      	add	r3, sp, #40	@ 0x28
 800ddaa:	6851      	ldr	r1, [r2, #4]
 800ddac:	c303      	stmia	r3!, {r0, r1}
 800ddae:	e7a9      	b.n	800dd04 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800ddb0:	a807      	add	r0, sp, #28
 800ddb2:	f004 fa5f 	bl	8012274 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800ddb6:	4606      	mov	r6, r0
 800ddb8:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800ddba:	6803      	ldr	r3, [r0, #0]
 800ddbc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ddbe:	4798      	blx	r3
 800ddc0:	4286      	cmp	r6, r0
 800ddc2:	d1b8      	bne.n	800dd36 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800ddc4:	f7ff fe6e 	bl	800daa4 <_ZN8touchgfx3HAL3lcdEv>
 800ddc8:	6803      	ldr	r3, [r0, #0]
 800ddca:	4606      	mov	r6, r0
 800ddcc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800ddce:	a807      	add	r0, sp, #28
 800ddd0:	9305      	str	r3, [sp, #20]
 800ddd2:	f004 fa4f 	bl	8012274 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800ddd6:	9b05      	ldr	r3, [sp, #20]
 800ddd8:	4601      	mov	r1, r0
 800ddda:	4630      	mov	r0, r6
 800dddc:	4798      	blx	r3
 800ddde:	f080 0001 	eor.w	r0, r0, #1
 800dde2:	b2c0      	uxtb	r0, r0
 800dde4:	e7a8      	b.n	800dd38 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800dde6:	bf00      	nop
 800dde8:	2004bf8c 	.word	0x2004bf8c
 800ddec:	2004bf8e 	.word	0x2004bf8e
 800ddf0:	2004bf90 	.word	0x2004bf90
 800ddf4:	2004bf92 	.word	0x2004bf92
 800ddf8:	2004bf94 	.word	0x2004bf94

0800ddfc <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800ddfc:	b510      	push	{r4, lr}
 800ddfe:	4b07      	ldr	r3, [pc, #28]	@ (800de1c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800de00:	4604      	mov	r4, r0
 800de02:	781b      	ldrb	r3, [r3, #0]
 800de04:	b13b      	cbz	r3, 800de16 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800de06:	6803      	ldr	r3, [r0, #0]
 800de08:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800de0a:	4798      	blx	r3
 800de0c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800de0e:	4283      	cmp	r3, r0
 800de10:	d101      	bne.n	800de16 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800de12:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800de14:	bd10      	pop	{r4, pc}
 800de16:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800de18:	e7fc      	b.n	800de14 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800de1a:	bf00      	nop
 800de1c:	2004bf96 	.word	0x2004bf96

0800de20 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800de20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800de24:	461d      	mov	r5, r3
 800de26:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800de2a:	2400      	movs	r4, #0
 800de2c:	b08a      	sub	sp, #40	@ 0x28
 800de2e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800de32:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800de36:	4690      	mov	r8, r2
 800de38:	f8ad 3018 	strh.w	r3, [sp, #24]
 800de3c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800de40:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800de44:	f8ad 301a 	strh.w	r3, [sp, #26]
 800de48:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800de4c:	4607      	mov	r7, r0
 800de4e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800de52:	9404      	str	r4, [sp, #16]
 800de54:	f88d 4020 	strb.w	r4, [sp, #32]
 800de58:	f7ff ffd0 	bl	800ddfc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800de5c:	fb06 8505 	mla	r5, r6, r5, r8
 800de60:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800de64:	6878      	ldr	r0, [r7, #4]
 800de66:	9505      	str	r5, [sp, #20]
 800de68:	f8ad 601e 	strh.w	r6, [sp, #30]
 800de6c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800de70:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800de74:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800de78:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800de7c:	6803      	ldr	r3, [r0, #0]
 800de7e:	a901      	add	r1, sp, #4
 800de80:	685b      	ldr	r3, [r3, #4]
 800de82:	4798      	blx	r3
 800de84:	b00a      	add	sp, #40	@ 0x28
 800de86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800de8a <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800de8a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800de8e:	2400      	movs	r4, #0
 800de90:	461d      	mov	r5, r3
 800de92:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800de96:	4691      	mov	r9, r2
 800de98:	b08b      	sub	sp, #44	@ 0x2c
 800de9a:	4688      	mov	r8, r1
 800de9c:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800dea0:	4607      	mov	r7, r0
 800dea2:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800dea6:	9404      	str	r4, [sp, #16]
 800dea8:	f7ff ffa8 	bl	800ddfc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800deac:	fb06 9505 	mla	r5, r6, r5, r9
 800deb0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800deb4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800deb8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800debc:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800dec0:	6878      	ldr	r0, [r7, #4]
 800dec2:	9505      	str	r5, [sp, #20]
 800dec4:	f8ad 301a 	strh.w	r3, [sp, #26]
 800dec8:	f8ad 401c 	strh.w	r4, [sp, #28]
 800decc:	f8ad 601e 	strh.w	r6, [sp, #30]
 800ded0:	f8cd 8010 	str.w	r8, [sp, #16]
 800ded4:	f8ad 4020 	strh.w	r4, [sp, #32]
 800ded8:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800dedc:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800dee0:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800dee4:	6803      	ldr	r3, [r0, #0]
 800dee6:	a901      	add	r1, sp, #4
 800dee8:	685b      	ldr	r3, [r3, #4]
 800deea:	4798      	blx	r3
 800deec:	b00b      	add	sp, #44	@ 0x2c
 800deee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800def4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800def4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800def8:	4698      	mov	r8, r3
 800defa:	2300      	movs	r3, #0
 800defc:	b08a      	sub	sp, #40	@ 0x28
 800defe:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800df02:	4606      	mov	r6, r0
 800df04:	2d0b      	cmp	r5, #11
 800df06:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800df0a:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800df0e:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800df12:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800df16:	9304      	str	r3, [sp, #16]
 800df18:	d137      	bne.n	800df8a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 800df1a:	2380      	movs	r3, #128	@ 0x80
 800df1c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800df20:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800df24:	f88d 0020 	strb.w	r0, [sp, #32]
 800df28:	f8ad 3018 	strh.w	r3, [sp, #24]
 800df2c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800df30:	4630      	mov	r0, r6
 800df32:	f8ad 301a 	strh.w	r3, [sp, #26]
 800df36:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800df3a:	9203      	str	r2, [sp, #12]
 800df3c:	f8ad 301c 	strh.w	r3, [sp, #28]
 800df40:	f7ff ff5c 	bl	800ddfc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800df44:	2c0b      	cmp	r4, #11
 800df46:	bf8c      	ite	hi
 800df48:	2100      	movhi	r1, #0
 800df4a:	4b1b      	ldrls	r3, [pc, #108]	@ (800dfb8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800df4c:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800df50:	bf98      	it	ls
 800df52:	5d19      	ldrbls	r1, [r3, r4]
 800df54:	fb02 8307 	mla	r3, r2, r7, r8
 800df58:	10c9      	asrs	r1, r1, #3
 800df5a:	fb01 0003 	mla	r0, r1, r3, r0
 800df5e:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800df62:	9005      	str	r0, [sp, #20]
 800df64:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800df68:	2300      	movs	r3, #0
 800df6a:	6870      	ldr	r0, [r6, #4]
 800df6c:	f8ad 701e 	strh.w	r7, [sp, #30]
 800df70:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800df74:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800df78:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800df7c:	6803      	ldr	r3, [r0, #0]
 800df7e:	a901      	add	r1, sp, #4
 800df80:	685b      	ldr	r3, [r3, #4]
 800df82:	4798      	blx	r3
 800df84:	b00a      	add	sp, #40	@ 0x28
 800df86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800df8a:	2d02      	cmp	r5, #2
 800df8c:	d109      	bne.n	800dfa2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 800df8e:	28ff      	cmp	r0, #255	@ 0xff
 800df90:	d105      	bne.n	800df9e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800df92:	f1bc 0f00 	cmp.w	ip, #0
 800df96:	bf14      	ite	ne
 800df98:	2340      	movne	r3, #64	@ 0x40
 800df9a:	2320      	moveq	r3, #32
 800df9c:	e7be      	b.n	800df1c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800df9e:	2340      	movs	r3, #64	@ 0x40
 800dfa0:	e7bc      	b.n	800df1c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800dfa2:	28ff      	cmp	r0, #255	@ 0xff
 800dfa4:	d105      	bne.n	800dfb2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 800dfa6:	f1bc 0f00 	cmp.w	ip, #0
 800dfaa:	bf14      	ite	ne
 800dfac:	2304      	movne	r3, #4
 800dfae:	2301      	moveq	r3, #1
 800dfb0:	e7b4      	b.n	800df1c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800dfb2:	2304      	movs	r3, #4
 800dfb4:	e7b2      	b.n	800df1c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800dfb6:	bf00      	nop
 800dfb8:	080271bc 	.word	0x080271bc

0800dfbc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800dfbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dfc0:	b08b      	sub	sp, #44	@ 0x2c
 800dfc2:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800dfc6:	461d      	mov	r5, r3
 800dfc8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800dfcc:	bf14      	ite	ne
 800dfce:	2308      	movne	r3, #8
 800dfd0:	2302      	moveq	r3, #2
 800dfd2:	2400      	movs	r4, #0
 800dfd4:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800dfd8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800dfdc:	4688      	mov	r8, r1
 800dfde:	4693      	mov	fp, r2
 800dfe0:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800dfe4:	9404      	str	r4, [sp, #16]
 800dfe6:	4607      	mov	r7, r0
 800dfe8:	f7ff ff08 	bl	800ddfc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800dfec:	2e0b      	cmp	r6, #11
 800dfee:	bf98      	it	ls
 800dff0:	4b15      	ldrls	r3, [pc, #84]	@ (800e048 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800dff2:	fb05 b50a 	mla	r5, r5, sl, fp
 800dff6:	bf98      	it	ls
 800dff8:	5d9c      	ldrbls	r4, [r3, r6]
 800dffa:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800dffe:	10e4      	asrs	r4, r4, #3
 800e000:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e004:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800e008:	fb04 0405 	mla	r4, r4, r5, r0
 800e00c:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e010:	2300      	movs	r3, #0
 800e012:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800e016:	6878      	ldr	r0, [r7, #4]
 800e018:	9405      	str	r4, [sp, #20]
 800e01a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800e01e:	f8ad a01e 	strh.w	sl, [sp, #30]
 800e022:	f8cd 8010 	str.w	r8, [sp, #16]
 800e026:	f88d 9020 	strb.w	r9, [sp, #32]
 800e02a:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800e02e:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800e032:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800e036:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800e03a:	6803      	ldr	r3, [r0, #0]
 800e03c:	a901      	add	r1, sp, #4
 800e03e:	685b      	ldr	r3, [r3, #4]
 800e040:	4798      	blx	r3
 800e042:	b00b      	add	sp, #44	@ 0x2c
 800e044:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e048:	080271bc 	.word	0x080271bc

0800e04c <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800e04c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e050:	461e      	mov	r6, r3
 800e052:	4b0a      	ldr	r3, [pc, #40]	@ (800e07c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800e054:	460f      	mov	r7, r1
 800e056:	881d      	ldrh	r5, [r3, #0]
 800e058:	4690      	mov	r8, r2
 800e05a:	f7ff fd23 	bl	800daa4 <_ZN8touchgfx3HAL3lcdEv>
 800e05e:	6803      	ldr	r3, [r0, #0]
 800e060:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e062:	4798      	blx	r3
 800e064:	280b      	cmp	r0, #11
 800e066:	bf8e      	itee	hi
 800e068:	2400      	movhi	r4, #0
 800e06a:	4b05      	ldrls	r3, [pc, #20]	@ (800e080 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800e06c:	5c1c      	ldrbls	r4, [r3, r0]
 800e06e:	fb08 7005 	mla	r0, r8, r5, r7
 800e072:	10e4      	asrs	r4, r4, #3
 800e074:	fb04 6000 	mla	r0, r4, r0, r6
 800e078:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e07c:	2004bf92 	.word	0x2004bf92
 800e080:	080271bc 	.word	0x080271bc

0800e084 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800e084:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e086:	2500      	movs	r5, #0
 800e088:	b08b      	sub	sp, #44	@ 0x2c
 800e08a:	461f      	mov	r7, r3
 800e08c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800e090:	4604      	mov	r4, r0
 800e092:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e096:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800e09a:	4616      	mov	r6, r2
 800e09c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e0a0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800e0a4:	9504      	str	r5, [sp, #16]
 800e0a6:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e0aa:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800e0ae:	f8ad 301c 	strh.w	r3, [sp, #28]
 800e0b2:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800e0b6:	f88d 3020 	strb.w	r3, [sp, #32]
 800e0ba:	f7ff fe9f 	bl	800ddfc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800e0be:	463a      	mov	r2, r7
 800e0c0:	4631      	mov	r1, r6
 800e0c2:	4603      	mov	r3, r0
 800e0c4:	4620      	mov	r0, r4
 800e0c6:	f7ff ffc1 	bl	800e04c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800e0ca:	4b0e      	ldr	r3, [pc, #56]	@ (800e104 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800e0cc:	9005      	str	r0, [sp, #20]
 800e0ce:	881b      	ldrh	r3, [r3, #0]
 800e0d0:	f8ad 301e 	strh.w	r3, [sp, #30]
 800e0d4:	f7ff fce6 	bl	800daa4 <_ZN8touchgfx3HAL3lcdEv>
 800e0d8:	6803      	ldr	r3, [r0, #0]
 800e0da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e0dc:	4798      	blx	r3
 800e0de:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800e0e0:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800e0e4:	9304      	str	r3, [sp, #16]
 800e0e6:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800e0ea:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800e0ee:	6860      	ldr	r0, [r4, #4]
 800e0f0:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800e0f4:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800e0f8:	6803      	ldr	r3, [r0, #0]
 800e0fa:	a901      	add	r1, sp, #4
 800e0fc:	685b      	ldr	r3, [r3, #4]
 800e0fe:	4798      	blx	r3
 800e100:	b00b      	add	sp, #44	@ 0x2c
 800e102:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e104:	2004bf92 	.word	0x2004bf92

0800e108 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800e108:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e10a:	b08d      	sub	sp, #52	@ 0x34
 800e10c:	466b      	mov	r3, sp
 800e10e:	e883 0006 	stmia.w	r3, {r1, r2}
 800e112:	2300      	movs	r3, #0
 800e114:	2501      	movs	r5, #1
 800e116:	9306      	str	r3, [sp, #24]
 800e118:	6803      	ldr	r3, [r0, #0]
 800e11a:	9503      	str	r5, [sp, #12]
 800e11c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e11e:	4604      	mov	r4, r0
 800e120:	f8bd 6000 	ldrh.w	r6, [sp]
 800e124:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800e128:	4798      	blx	r3
 800e12a:	463a      	mov	r2, r7
 800e12c:	4631      	mov	r1, r6
 800e12e:	4603      	mov	r3, r0
 800e130:	4620      	mov	r0, r4
 800e132:	f7ff ff8b 	bl	800e04c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800e136:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800e138:	9004      	str	r0, [sp, #16]
 800e13a:	9307      	str	r3, [sp, #28]
 800e13c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800e140:	f8ad 3020 	strh.w	r3, [sp, #32]
 800e144:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800e148:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800e14c:	4b0e      	ldr	r3, [pc, #56]	@ (800e188 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800e14e:	881b      	ldrh	r3, [r3, #0]
 800e150:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800e154:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800e158:	f7ff fca4 	bl	800daa4 <_ZN8touchgfx3HAL3lcdEv>
 800e15c:	6803      	ldr	r3, [r0, #0]
 800e15e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e160:	4798      	blx	r3
 800e162:	23ff      	movs	r3, #255	@ 0xff
 800e164:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800e168:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800e16c:	6860      	ldr	r0, [r4, #4]
 800e16e:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800e172:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800e176:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800e17a:	6803      	ldr	r3, [r0, #0]
 800e17c:	a903      	add	r1, sp, #12
 800e17e:	685b      	ldr	r3, [r3, #4]
 800e180:	4798      	blx	r3
 800e182:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800e184:	b00d      	add	sp, #52	@ 0x34
 800e186:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e188:	2004bf92 	.word	0x2004bf92

0800e18c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800e18c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e190:	b08c      	sub	sp, #48	@ 0x30
 800e192:	466d      	mov	r5, sp
 800e194:	461e      	mov	r6, r3
 800e196:	2300      	movs	r3, #0
 800e198:	e885 0006 	stmia.w	r5, {r1, r2}
 800e19c:	2501      	movs	r5, #1
 800e19e:	9306      	str	r3, [sp, #24]
 800e1a0:	6803      	ldr	r3, [r0, #0]
 800e1a2:	9503      	str	r5, [sp, #12]
 800e1a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e1a6:	4604      	mov	r4, r0
 800e1a8:	f8bd 7000 	ldrh.w	r7, [sp]
 800e1ac:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800e1b0:	4798      	blx	r3
 800e1b2:	4642      	mov	r2, r8
 800e1b4:	4639      	mov	r1, r7
 800e1b6:	4603      	mov	r3, r0
 800e1b8:	4620      	mov	r0, r4
 800e1ba:	f7ff ff47 	bl	800e04c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800e1be:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800e1c2:	9004      	str	r0, [sp, #16]
 800e1c4:	f8ad 3020 	strh.w	r3, [sp, #32]
 800e1c8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800e1cc:	9607      	str	r6, [sp, #28]
 800e1ce:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800e1d2:	4b10      	ldr	r3, [pc, #64]	@ (800e214 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800e1d4:	881b      	ldrh	r3, [r3, #0]
 800e1d6:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800e1da:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800e1dc:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800e1e0:	f7ff fc60 	bl	800daa4 <_ZN8touchgfx3HAL3lcdEv>
 800e1e4:	6803      	ldr	r3, [r0, #0]
 800e1e6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e1e8:	4798      	blx	r3
 800e1ea:	23ff      	movs	r3, #255	@ 0xff
 800e1ec:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800e1f0:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800e1f4:	6860      	ldr	r0, [r4, #4]
 800e1f6:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800e1fa:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800e1fe:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800e202:	6803      	ldr	r3, [r0, #0]
 800e204:	a903      	add	r1, sp, #12
 800e206:	685b      	ldr	r3, [r3, #4]
 800e208:	4798      	blx	r3
 800e20a:	4630      	mov	r0, r6
 800e20c:	b00c      	add	sp, #48	@ 0x30
 800e20e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e212:	bf00      	nop
 800e214:	2004bf92 	.word	0x2004bf92

0800e218 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800e218:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e21a:	b085      	sub	sp, #20
 800e21c:	ac02      	add	r4, sp, #8
 800e21e:	e884 0006 	stmia.w	r4, {r1, r2}
 800e222:	4605      	mov	r5, r0
 800e224:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800e228:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800e22c:	f7ff fde6 	bl	800ddfc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800e230:	463a      	mov	r2, r7
 800e232:	4603      	mov	r3, r0
 800e234:	4631      	mov	r1, r6
 800e236:	4628      	mov	r0, r5
 800e238:	f7ff ff08 	bl	800e04c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800e23c:	4a05      	ldr	r2, [pc, #20]	@ (800e254 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800e23e:	682b      	ldr	r3, [r5, #0]
 800e240:	8812      	ldrh	r2, [r2, #0]
 800e242:	9200      	str	r2, [sp, #0]
 800e244:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 800e246:	e894 0006 	ldmia.w	r4, {r1, r2}
 800e24a:	4603      	mov	r3, r0
 800e24c:	4628      	mov	r0, r5
 800e24e:	47b0      	blx	r6
 800e250:	b005      	add	sp, #20
 800e252:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e254:	2004bf92 	.word	0x2004bf92

0800e258 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800e258:	b570      	push	{r4, r5, r6, lr}
 800e25a:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800e25e:	4604      	mov	r4, r0
 800e260:	b19b      	cbz	r3, 800e28a <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800e262:	2002      	movs	r0, #2
 800e264:	f7f3 faac 	bl	80017c0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800e268:	2300      	movs	r3, #0
 800e26a:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800e26e:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800e272:	6823      	ldr	r3, [r4, #0]
 800e274:	4620      	mov	r0, r4
 800e276:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 800e27a:	f7ff fdbf 	bl	800ddfc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800e27e:	462b      	mov	r3, r5
 800e280:	4601      	mov	r1, r0
 800e282:	4620      	mov	r0, r4
 800e284:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e288:	4718      	bx	r3
 800e28a:	bd70      	pop	{r4, r5, r6, pc}

0800e28c <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800e28c:	b570      	push	{r4, r5, r6, lr}
 800e28e:	4605      	mov	r5, r0
 800e290:	460c      	mov	r4, r1
 800e292:	2003      	movs	r0, #3
 800e294:	b149      	cbz	r1, 800e2aa <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800e296:	f7f3 fa5b 	bl	8001750 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800e29a:	6928      	ldr	r0, [r5, #16]
 800e29c:	b168      	cbz	r0, 800e2ba <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800e29e:	2101      	movs	r1, #1
 800e2a0:	6803      	ldr	r3, [r0, #0]
 800e2a2:	695b      	ldr	r3, [r3, #20]
 800e2a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e2a8:	4718      	bx	r3
 800e2aa:	f7f3 fa6d 	bl	8001788 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800e2ae:	6928      	ldr	r0, [r5, #16]
 800e2b0:	b118      	cbz	r0, 800e2ba <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800e2b2:	6803      	ldr	r3, [r0, #0]
 800e2b4:	4621      	mov	r1, r4
 800e2b6:	695b      	ldr	r3, [r3, #20]
 800e2b8:	e7f4      	b.n	800e2a4 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800e2ba:	bd70      	pop	{r4, r5, r6, pc}

0800e2bc <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800e2bc:	b538      	push	{r3, r4, r5, lr}
 800e2be:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800e2c2:	4604      	mov	r4, r0
 800e2c4:	428b      	cmp	r3, r1
 800e2c6:	460d      	mov	r5, r1
 800e2c8:	d006      	beq.n	800e2d8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800e2ca:	6803      	ldr	r3, [r0, #0]
 800e2cc:	b929      	cbnz	r1, 800e2da <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800e2ce:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 800e2d2:	4798      	blx	r3
 800e2d4:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800e2d8:	bd38      	pop	{r3, r4, r5, pc}
 800e2da:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800e2de:	e7f8      	b.n	800e2d2 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800e2e0 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800e2e0:	b510      	push	{r4, lr}
 800e2e2:	4b0d      	ldr	r3, [pc, #52]	@ (800e318 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800e2e4:	4604      	mov	r4, r0
 800e2e6:	781b      	ldrb	r3, [r3, #0]
 800e2e8:	b95b      	cbnz	r3, 800e302 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800e2ea:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800e2ee:	2b02      	cmp	r3, #2
 800e2f0:	d007      	beq.n	800e302 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800e2f2:	6840      	ldr	r0, [r0, #4]
 800e2f4:	f000 f914 	bl	800e520 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800e2f8:	b118      	cbz	r0, 800e302 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800e2fa:	6862      	ldr	r2, [r4, #4]
 800e2fc:	7a53      	ldrb	r3, [r2, #9]
 800e2fe:	2b00      	cmp	r3, #0
 800e300:	d0fc      	beq.n	800e2fc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800e302:	f7f3 fc11 	bl	8001b28 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800e306:	4620      	mov	r0, r4
 800e308:	2100      	movs	r1, #0
 800e30a:	f7ff ffd7 	bl	800e2bc <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800e30e:	4620      	mov	r0, r4
 800e310:	f7ff fd74 	bl	800ddfc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800e314:	bd10      	pop	{r4, pc}
 800e316:	bf00      	nop
 800e318:	2004bf96 	.word	0x2004bf96

0800e31c <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
 800e31c:	2000      	movs	r0, #0
 800e31e:	4770      	bx	lr

0800e320 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800e320:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800e324:	1a13      	subs	r3, r2, r0
 800e326:	4258      	negs	r0, r3
 800e328:	4158      	adcs	r0, r3
 800e32a:	4770      	bx	lr

0800e32c <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800e32c:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800e330:	1a9b      	subs	r3, r3, r2
 800e332:	2b00      	cmp	r3, #0
 800e334:	bfdc      	itt	le
 800e336:	6882      	ldrle	r2, [r0, #8]
 800e338:	189b      	addle	r3, r3, r2
 800e33a:	2b01      	cmp	r3, #1
 800e33c:	bfcc      	ite	gt
 800e33e:	2000      	movgt	r0, #0
 800e340:	2001      	movle	r0, #1
 800e342:	4770      	bx	lr

0800e344 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800e344:	6902      	ldr	r2, [r0, #16]
 800e346:	6843      	ldr	r3, [r0, #4]
 800e348:	2024      	movs	r0, #36	@ 0x24
 800e34a:	fb00 3002 	mla	r0, r0, r2, r3
 800e34e:	4770      	bx	lr

0800e350 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800e350:	6803      	ldr	r3, [r0, #0]
 800e352:	691b      	ldr	r3, [r3, #16]
 800e354:	4718      	bx	r3

0800e356 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800e356:	2301      	movs	r3, #1
 800e358:	b570      	push	{r4, r5, r6, lr}
 800e35a:	7203      	strb	r3, [r0, #8]
 800e35c:	4604      	mov	r4, r0
 800e35e:	6840      	ldr	r0, [r0, #4]
 800e360:	6803      	ldr	r3, [r0, #0]
 800e362:	699b      	ldr	r3, [r3, #24]
 800e364:	4798      	blx	r3
 800e366:	6803      	ldr	r3, [r0, #0]
 800e368:	4605      	mov	r5, r0
 800e36a:	2b40      	cmp	r3, #64	@ 0x40
 800e36c:	d00c      	beq.n	800e388 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800e36e:	d810      	bhi.n	800e392 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800e370:	2b04      	cmp	r3, #4
 800e372:	d01d      	beq.n	800e3b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800e374:	d804      	bhi.n	800e380 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800e376:	2b01      	cmp	r3, #1
 800e378:	d006      	beq.n	800e388 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800e37a:	2b02      	cmp	r3, #2
 800e37c:	d02c      	beq.n	800e3d8 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800e37e:	bd70      	pop	{r4, r5, r6, pc}
 800e380:	2b08      	cmp	r3, #8
 800e382:	d01d      	beq.n	800e3c0 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800e384:	2b20      	cmp	r3, #32
 800e386:	d1fa      	bne.n	800e37e <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800e388:	6823      	ldr	r3, [r4, #0]
 800e38a:	4620      	mov	r0, r4
 800e38c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800e38e:	4798      	blx	r3
 800e390:	e013      	b.n	800e3ba <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800e392:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800e396:	d0f7      	beq.n	800e388 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800e398:	d804      	bhi.n	800e3a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800e39a:	2b80      	cmp	r3, #128	@ 0x80
 800e39c:	d0f4      	beq.n	800e388 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800e39e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800e3a2:	e7f0      	b.n	800e386 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800e3a4:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800e3a8:	d0ee      	beq.n	800e388 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800e3aa:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800e3ae:	e7e5      	b.n	800e37c <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800e3b0:	6823      	ldr	r3, [r4, #0]
 800e3b2:	7f01      	ldrb	r1, [r0, #28]
 800e3b4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e3b6:	4620      	mov	r0, r4
 800e3b8:	4798      	blx	r3
 800e3ba:	6823      	ldr	r3, [r4, #0]
 800e3bc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e3be:	e006      	b.n	800e3ce <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800e3c0:	6823      	ldr	r3, [r4, #0]
 800e3c2:	7f01      	ldrb	r1, [r0, #28]
 800e3c4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e3c6:	4620      	mov	r0, r4
 800e3c8:	4798      	blx	r3
 800e3ca:	6823      	ldr	r3, [r4, #0]
 800e3cc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e3ce:	4629      	mov	r1, r5
 800e3d0:	4620      	mov	r0, r4
 800e3d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e3d6:	4718      	bx	r3
 800e3d8:	6823      	ldr	r3, [r4, #0]
 800e3da:	4620      	mov	r0, r4
 800e3dc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800e3de:	4798      	blx	r3
 800e3e0:	e7f3      	b.n	800e3ca <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800e3e2 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800e3e2:	4770      	bx	lr

0800e3e4 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800e3e4:	4770      	bx	lr

0800e3e6 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800e3e6:	4770      	bx	lr

0800e3e8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800e3e8:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800e3ec:	1ad2      	subs	r2, r2, r3
 800e3ee:	2a00      	cmp	r2, #0
 800e3f0:	b510      	push	{r4, lr}
 800e3f2:	bfdc      	itt	le
 800e3f4:	6884      	ldrle	r4, [r0, #8]
 800e3f6:	1912      	addle	r2, r2, r4
 800e3f8:	2a01      	cmp	r2, #1
 800e3fa:	dd16      	ble.n	800e42a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800e3fc:	2424      	movs	r4, #36	@ 0x24
 800e3fe:	6842      	ldr	r2, [r0, #4]
 800e400:	fb04 2303 	mla	r3, r4, r3, r2
 800e404:	f101 0220 	add.w	r2, r1, #32
 800e408:	f851 4b04 	ldr.w	r4, [r1], #4
 800e40c:	4291      	cmp	r1, r2
 800e40e:	f843 4b04 	str.w	r4, [r3], #4
 800e412:	d1f9      	bne.n	800e408 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800e414:	780a      	ldrb	r2, [r1, #0]
 800e416:	701a      	strb	r2, [r3, #0]
 800e418:	68c3      	ldr	r3, [r0, #12]
 800e41a:	6882      	ldr	r2, [r0, #8]
 800e41c:	3301      	adds	r3, #1
 800e41e:	429a      	cmp	r2, r3
 800e420:	bfd8      	it	le
 800e422:	1a9b      	suble	r3, r3, r2
 800e424:	f3bf 8f5b 	dmb	ish
 800e428:	60c3      	str	r3, [r0, #12]
 800e42a:	bd10      	pop	{r4, pc}

0800e42c <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800e42c:	6903      	ldr	r3, [r0, #16]
 800e42e:	6882      	ldr	r2, [r0, #8]
 800e430:	3301      	adds	r3, #1
 800e432:	429a      	cmp	r2, r3
 800e434:	bfd8      	it	le
 800e436:	1a9b      	suble	r3, r3, r2
 800e438:	f3bf 8f5b 	dmb	ish
 800e43c:	6103      	str	r3, [r0, #16]
 800e43e:	4770      	bx	lr

0800e440 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800e440:	b570      	push	{r4, r5, r6, lr}
 800e442:	4604      	mov	r4, r0
 800e444:	460e      	mov	r6, r1
 800e446:	6860      	ldr	r0, [r4, #4]
 800e448:	6803      	ldr	r3, [r0, #0]
 800e44a:	685b      	ldr	r3, [r3, #4]
 800e44c:	4798      	blx	r3
 800e44e:	2800      	cmp	r0, #0
 800e450:	d1f9      	bne.n	800e446 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800e452:	4d0d      	ldr	r5, [pc, #52]	@ (800e488 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800e454:	6828      	ldr	r0, [r5, #0]
 800e456:	6803      	ldr	r3, [r0, #0]
 800e458:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800e45a:	4798      	blx	r3
 800e45c:	f7f3 fb72 	bl	8001b44 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800e460:	6828      	ldr	r0, [r5, #0]
 800e462:	2101      	movs	r1, #1
 800e464:	f7ff ff2a 	bl	800e2bc <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800e468:	6860      	ldr	r0, [r4, #4]
 800e46a:	4631      	mov	r1, r6
 800e46c:	6803      	ldr	r3, [r0, #0]
 800e46e:	689b      	ldr	r3, [r3, #8]
 800e470:	4798      	blx	r3
 800e472:	6823      	ldr	r3, [r4, #0]
 800e474:	4620      	mov	r0, r4
 800e476:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e478:	4798      	blx	r3
 800e47a:	6828      	ldr	r0, [r5, #0]
 800e47c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e480:	6803      	ldr	r3, [r0, #0]
 800e482:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800e484:	4718      	bx	r3
 800e486:	bf00      	nop
 800e488:	2004bf98 	.word	0x2004bf98

0800e48c <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800e48c:	b508      	push	{r3, lr}
 800e48e:	f7f3 fb4b 	bl	8001b28 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800e492:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800e496:	f7f3 bb4f 	b.w	8001b38 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800e49a <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800e49a:	b510      	push	{r4, lr}
 800e49c:	4604      	mov	r4, r0
 800e49e:	2114      	movs	r1, #20
 800e4a0:	f016 fc1b 	bl	8024cda <_ZdlPvj>
 800e4a4:	4620      	mov	r0, r4
 800e4a6:	bd10      	pop	{r4, pc}

0800e4a8 <_ZN8touchgfx13DMA_Interface5startEv>:
 800e4a8:	b510      	push	{r4, lr}
 800e4aa:	4604      	mov	r4, r0
 800e4ac:	6840      	ldr	r0, [r0, #4]
 800e4ae:	6803      	ldr	r3, [r0, #0]
 800e4b0:	681b      	ldr	r3, [r3, #0]
 800e4b2:	4798      	blx	r3
 800e4b4:	b948      	cbnz	r0, 800e4ca <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800e4b6:	7a63      	ldrb	r3, [r4, #9]
 800e4b8:	b13b      	cbz	r3, 800e4ca <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800e4ba:	7a23      	ldrb	r3, [r4, #8]
 800e4bc:	b92b      	cbnz	r3, 800e4ca <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800e4be:	6823      	ldr	r3, [r4, #0]
 800e4c0:	4620      	mov	r0, r4
 800e4c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e4c6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e4c8:	4718      	bx	r3
 800e4ca:	bd10      	pop	{r4, pc}

0800e4cc <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800e4cc:	b570      	push	{r4, r5, r6, lr}
 800e4ce:	4604      	mov	r4, r0
 800e4d0:	6840      	ldr	r0, [r0, #4]
 800e4d2:	6803      	ldr	r3, [r0, #0]
 800e4d4:	681b      	ldr	r3, [r3, #0]
 800e4d6:	4798      	blx	r3
 800e4d8:	4605      	mov	r5, r0
 800e4da:	b930      	cbnz	r0, 800e4ea <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800e4dc:	7a23      	ldrb	r3, [r4, #8]
 800e4de:	b123      	cbz	r3, 800e4ea <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800e4e0:	6860      	ldr	r0, [r4, #4]
 800e4e2:	6803      	ldr	r3, [r0, #0]
 800e4e4:	695b      	ldr	r3, [r3, #20]
 800e4e6:	4798      	blx	r3
 800e4e8:	7225      	strb	r5, [r4, #8]
 800e4ea:	6860      	ldr	r0, [r4, #4]
 800e4ec:	6803      	ldr	r3, [r0, #0]
 800e4ee:	681b      	ldr	r3, [r3, #0]
 800e4f0:	4798      	blx	r3
 800e4f2:	b928      	cbnz	r0, 800e500 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800e4f4:	6823      	ldr	r3, [r4, #0]
 800e4f6:	4620      	mov	r0, r4
 800e4f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e4fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e4fe:	4718      	bx	r3
 800e500:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e504:	f7f3 bb26 	b.w	8001b54 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800e508 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800e508:	6082      	str	r2, [r0, #8]
 800e50a:	2200      	movs	r2, #0
 800e50c:	b510      	push	{r4, lr}
 800e50e:	4c03      	ldr	r4, [pc, #12]	@ (800e51c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800e510:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800e514:	e9c0 4100 	strd	r4, r1, [r0]
 800e518:	bd10      	pop	{r4, pc}
 800e51a:	bf00      	nop
 800e51c:	080271d0 	.word	0x080271d0

0800e520 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800e520:	6840      	ldr	r0, [r0, #4]
 800e522:	6803      	ldr	r3, [r0, #0]
 800e524:	681b      	ldr	r3, [r3, #0]
 800e526:	4718      	bx	r3

0800e528 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800e528:	2300      	movs	r3, #0
 800e52a:	8083      	strh	r3, [r0, #4]
 800e52c:	80c3      	strh	r3, [r0, #6]
 800e52e:	8003      	strh	r3, [r0, #0]
 800e530:	8043      	strh	r3, [r0, #2]
 800e532:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800e536:	2bff      	cmp	r3, #255	@ 0xff
 800e538:	bf01      	itttt	eq
 800e53a:	890b      	ldrheq	r3, [r1, #8]
 800e53c:	8083      	strheq	r3, [r0, #4]
 800e53e:	894b      	ldrheq	r3, [r1, #10]
 800e540:	80c3      	strheq	r3, [r0, #6]
 800e542:	4770      	bx	lr

0800e544 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800e544:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e546:	4604      	mov	r4, r0
 800e548:	466b      	mov	r3, sp
 800e54a:	6808      	ldr	r0, [r1, #0]
 800e54c:	6849      	ldr	r1, [r1, #4]
 800e54e:	c303      	stmia	r3!, {r0, r1}
 800e550:	6823      	ldr	r3, [r4, #0]
 800e552:	4669      	mov	r1, sp
 800e554:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e556:	4620      	mov	r0, r4
 800e558:	4798      	blx	r3
 800e55a:	4b08      	ldr	r3, [pc, #32]	@ (800e57c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800e55c:	681b      	ldr	r3, [r3, #0]
 800e55e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800e562:	b10a      	cbz	r2, 800e568 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800e564:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800e566:	b900      	cbnz	r0, 800e56a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800e568:	6898      	ldr	r0, [r3, #8]
 800e56a:	6803      	ldr	r3, [r0, #0]
 800e56c:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800e56e:	6a1d      	ldr	r5, [r3, #32]
 800e570:	4669      	mov	r1, sp
 800e572:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800e576:	47a8      	blx	r5
 800e578:	b003      	add	sp, #12
 800e57a:	bd30      	pop	{r4, r5, pc}
 800e57c:	2004bf98 	.word	0x2004bf98

0800e580 <_ZN8touchgfx3BoxD1Ev>:
 800e580:	4770      	bx	lr

0800e582 <_ZN8touchgfx3BoxD0Ev>:
 800e582:	b510      	push	{r4, lr}
 800e584:	4604      	mov	r4, r0
 800e586:	212c      	movs	r1, #44	@ 0x2c
 800e588:	f016 fba7 	bl	8024cda <_ZdlPvj>
 800e58c:	4620      	mov	r0, r4
 800e58e:	bd10      	pop	{r4, pc}

0800e590 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800e590:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800e594:	b12a      	cbz	r2, 800e5a2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e596:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800e59a:	b112      	cbz	r2, 800e5a2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e59c:	6803      	ldr	r3, [r0, #0]
 800e59e:	695b      	ldr	r3, [r3, #20]
 800e5a0:	4718      	bx	r3
 800e5a2:	4770      	bx	lr

0800e5a4 <_ZN8touchgfx5ImageD1Ev>:
 800e5a4:	4770      	bx	lr

0800e5a6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800e5a6:	b570      	push	{r4, r5, r6, lr}
 800e5a8:	880b      	ldrh	r3, [r1, #0]
 800e5aa:	4604      	mov	r4, r0
 800e5ac:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800e5ae:	4608      	mov	r0, r1
 800e5b0:	460d      	mov	r5, r1
 800e5b2:	f003 fd27 	bl	8012004 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e5b6:	4606      	mov	r6, r0
 800e5b8:	4628      	mov	r0, r5
 800e5ba:	f003 fd57 	bl	801206c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e5be:	4605      	mov	r5, r0
 800e5c0:	6823      	ldr	r3, [r4, #0]
 800e5c2:	4631      	mov	r1, r6
 800e5c4:	4620      	mov	r0, r4
 800e5c6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e5c8:	4798      	blx	r3
 800e5ca:	6823      	ldr	r3, [r4, #0]
 800e5cc:	4629      	mov	r1, r5
 800e5ce:	4620      	mov	r0, r4
 800e5d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e5d4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800e5d6:	4718      	bx	r3

0800e5d8 <_ZN8touchgfx5ImageD0Ev>:
 800e5d8:	b510      	push	{r4, lr}
 800e5da:	4604      	mov	r4, r0
 800e5dc:	212c      	movs	r1, #44	@ 0x2c
 800e5de:	f016 fb7c 	bl	8024cda <_ZdlPvj>
 800e5e2:	4620      	mov	r0, r4
 800e5e4:	bd10      	pop	{r4, pc}

0800e5e6 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800e5e6:	b510      	push	{r4, lr}
 800e5e8:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800e5ec:	4604      	mov	r4, r0
 800e5ee:	2bff      	cmp	r3, #255	@ 0xff
 800e5f0:	d006      	beq.n	800e600 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800e5f2:	2300      	movs	r3, #0
 800e5f4:	8003      	strh	r3, [r0, #0]
 800e5f6:	8043      	strh	r3, [r0, #2]
 800e5f8:	8083      	strh	r3, [r0, #4]
 800e5fa:	80c3      	strh	r3, [r0, #6]
 800e5fc:	4620      	mov	r0, r4
 800e5fe:	bd10      	pop	{r4, pc}
 800e600:	3126      	adds	r1, #38	@ 0x26
 800e602:	f003 fd67 	bl	80120d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e606:	e7f9      	b.n	800e5fc <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800e608 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800e608:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 800e60c:	b12a      	cbz	r2, 800e61a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e60e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800e612:	b112      	cbz	r2, 800e61a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e614:	6803      	ldr	r3, [r0, #0]
 800e616:	695b      	ldr	r3, [r3, #20]
 800e618:	4718      	bx	r3
 800e61a:	4770      	bx	lr

0800e61c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800e61c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e620:	4604      	mov	r4, r0
 800e622:	2500      	movs	r5, #0
 800e624:	f854 3b26 	ldr.w	r3, [r4], #38
 800e628:	b088      	sub	sp, #32
 800e62a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e62c:	460f      	mov	r7, r1
 800e62e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800e632:	a904      	add	r1, sp, #16
 800e634:	4606      	mov	r6, r0
 800e636:	4798      	blx	r3
 800e638:	4620      	mov	r0, r4
 800e63a:	f003 fce3 	bl	8012004 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e63e:	4680      	mov	r8, r0
 800e640:	4620      	mov	r0, r4
 800e642:	f003 fd13 	bl	801206c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e646:	9506      	str	r5, [sp, #24]
 800e648:	ad06      	add	r5, sp, #24
 800e64a:	f8ad 001e 	strh.w	r0, [sp, #30]
 800e64e:	4639      	mov	r1, r7
 800e650:	4628      	mov	r0, r5
 800e652:	f8ad 801c 	strh.w	r8, [sp, #28]
 800e656:	f7fe ff41 	bl	800d4dc <_ZN8touchgfx4RectaNERKS0_>
 800e65a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e65e:	2b00      	cmp	r3, #0
 800e660:	dd19      	ble.n	800e696 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e662:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e666:	2b00      	cmp	r3, #0
 800e668:	dd15      	ble.n	800e696 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e66a:	4b0c      	ldr	r3, [pc, #48]	@ (800e69c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800e66c:	681b      	ldr	r3, [r3, #0]
 800e66e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800e672:	b10a      	cbz	r2, 800e678 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800e674:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800e676:	b900      	cbnz	r0, 800e67a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800e678:	6898      	ldr	r0, [r3, #8]
 800e67a:	2701      	movs	r7, #1
 800e67c:	6801      	ldr	r1, [r0, #0]
 800e67e:	9702      	str	r7, [sp, #8]
 800e680:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 800e684:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800e688:	e9cd 5600 	strd	r5, r6, [sp]
 800e68c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800e690:	688d      	ldr	r5, [r1, #8]
 800e692:	4621      	mov	r1, r4
 800e694:	47a8      	blx	r5
 800e696:	b008      	add	sp, #32
 800e698:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e69c:	2004bf98 	.word	0x2004bf98

0800e6a0 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800e6a0:	b510      	push	{r4, lr}
 800e6a2:	6803      	ldr	r3, [r0, #0]
 800e6a4:	460c      	mov	r4, r1
 800e6a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e6a8:	4798      	blx	r3
 800e6aa:	1b03      	subs	r3, r0, r4
 800e6ac:	4258      	negs	r0, r3
 800e6ae:	4158      	adcs	r0, r3
 800e6b0:	bd10      	pop	{r4, pc}
	...

0800e6b4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800e6b4:	4b01      	ldr	r3, [pc, #4]	@ (800e6bc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800e6b6:	6019      	str	r1, [r3, #0]
 800e6b8:	4770      	bx	lr
 800e6ba:	bf00      	nop
 800e6bc:	2004bfa0 	.word	0x2004bfa0

0800e6c0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e6c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e6c4:	4696      	mov	lr, r2
 800e6c6:	4614      	mov	r4, r2
 800e6c8:	4605      	mov	r5, r0
 800e6ca:	460e      	mov	r6, r1
 800e6cc:	461f      	mov	r7, r3
 800e6ce:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e6d2:	b097      	sub	sp, #92	@ 0x5c
 800e6d4:	f10d 0c1c 	add.w	ip, sp, #28
 800e6d8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e6dc:	f8de 3000 	ldr.w	r3, [lr]
 800e6e0:	f104 0e14 	add.w	lr, r4, #20
 800e6e4:	f8cc 3000 	str.w	r3, [ip]
 800e6e8:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800e6ec:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e6f0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e6f4:	f8de 3000 	ldr.w	r3, [lr]
 800e6f8:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800e6fc:	f8cc 3000 	str.w	r3, [ip]
 800e700:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800e704:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e708:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e70c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800e710:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800e714:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800e718:	f8de 3000 	ldr.w	r3, [lr]
 800e71c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800e71e:	f8cc 3000 	str.w	r3, [ip]
 800e722:	9201      	str	r2, [sp, #4]
 800e724:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e728:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800e72a:	682b      	ldr	r3, [r5, #0]
 800e72c:	9200      	str	r2, [sp, #0]
 800e72e:	f8cd 8008 	str.w	r8, [sp, #8]
 800e732:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800e736:	aa07      	add	r2, sp, #28
 800e738:	463b      	mov	r3, r7
 800e73a:	4631      	mov	r1, r6
 800e73c:	4628      	mov	r0, r5
 800e73e:	47d8      	blx	fp
 800e740:	46a6      	mov	lr, r4
 800e742:	f10d 0c1c 	add.w	ip, sp, #28
 800e746:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e74a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e74e:	f8de 3000 	ldr.w	r3, [lr]
 800e752:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800e756:	f8cc 3000 	str.w	r3, [ip]
 800e75a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800e75e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e762:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e766:	f8de 3000 	ldr.w	r3, [lr]
 800e76a:	343c      	adds	r4, #60	@ 0x3c
 800e76c:	f8cc 3000 	str.w	r3, [ip]
 800e770:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800e774:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e776:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e77a:	6823      	ldr	r3, [r4, #0]
 800e77c:	4631      	mov	r1, r6
 800e77e:	f8cc 3000 	str.w	r3, [ip]
 800e782:	682b      	ldr	r3, [r5, #0]
 800e784:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e788:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800e78a:	f8cd 8008 	str.w	r8, [sp, #8]
 800e78e:	9201      	str	r2, [sp, #4]
 800e790:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800e792:	4628      	mov	r0, r5
 800e794:	9200      	str	r2, [sp, #0]
 800e796:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800e798:	aa07      	add	r2, sp, #28
 800e79a:	463b      	mov	r3, r7
 800e79c:	47a0      	blx	r4
 800e79e:	b017      	add	sp, #92	@ 0x5c
 800e7a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e7a4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800e7a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e7a8:	b08d      	sub	sp, #52	@ 0x34
 800e7aa:	4688      	mov	r8, r1
 800e7ac:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800e7ae:	f8d3 c000 	ldr.w	ip, [r3]
 800e7b2:	680f      	ldr	r7, [r1, #0]
 800e7b4:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800e7b8:	eba7 070c 	sub.w	r7, r7, ip
 800e7bc:	42bc      	cmp	r4, r7
 800e7be:	bfa8      	it	ge
 800e7c0:	463c      	movge	r4, r7
 800e7c2:	ee07 4a90 	vmov	s15, r4
 800e7c6:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800e7ca:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800e7ce:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800e7d2:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800e7d6:	edd3 6a07 	vldr	s13, [r3, #28]
 800e7da:	ee25 4a04 	vmul.f32	s8, s10, s8
 800e7de:	ee65 4a24 	vmul.f32	s9, s10, s9
 800e7e2:	ee25 5a27 	vmul.f32	s10, s10, s15
 800e7e6:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800e7ea:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800e7ee:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800e7f2:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800e7f6:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800e7f8:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800e7fc:	f9b1 9000 	ldrsh.w	r9, [r1]
 800e800:	f9ba 1000 	ldrsh.w	r1, [sl]
 800e804:	eb09 0e0c 	add.w	lr, r9, ip
 800e808:	4571      	cmp	r1, lr
 800e80a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800e80e:	ee32 1a05 	vadd.f32	s2, s4, s10
 800e812:	ee36 0a84 	vadd.f32	s0, s13, s8
 800e816:	ee61 1a87 	vmul.f32	s3, s3, s14
 800e81a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800e81e:	f340 808c 	ble.w	800e93a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 800e822:	eba1 060e 	sub.w	r6, r1, lr
 800e826:	fb96 f5f4 	sdiv	r5, r6, r4
 800e82a:	ee07 5a10 	vmov	s14, r5
 800e82e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e832:	2d00      	cmp	r5, #0
 800e834:	fb04 6615 	mls	r6, r4, r5, r6
 800e838:	eea7 0a04 	vfma.f32	s0, s14, s8
 800e83c:	eee7 0a24 	vfma.f32	s1, s14, s9
 800e840:	eea7 1a05 	vfma.f32	s2, s14, s10
 800e844:	dd12      	ble.n	800e86c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 800e846:	ee70 6a44 	vsub.f32	s13, s0, s8
 800e84a:	eef5 6a40 	vcmp.f32	s13, #0.0
 800e84e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e852:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800e856:	bf14      	ite	ne
 800e858:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800e85c:	eeb0 7a67 	vmoveq.f32	s14, s15
 800e860:	ee31 2a45 	vsub.f32	s4, s2, s10
 800e864:	ee61 1a87 	vmul.f32	s3, s3, s14
 800e868:	ee22 2a07 	vmul.f32	s4, s4, s14
 800e86c:	fb05 f204 	mul.w	r2, r5, r4
 800e870:	1abf      	subs	r7, r7, r2
 800e872:	4494      	add	ip, r2
 800e874:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800e878:	4411      	add	r1, r2
 800e87a:	eb09 020c 	add.w	r2, r9, ip
 800e87e:	443a      	add	r2, r7
 800e880:	b209      	sxth	r1, r1
 800e882:	428a      	cmp	r2, r1
 800e884:	bfc4      	itt	gt
 800e886:	eba1 0209 	subgt.w	r2, r1, r9
 800e88a:	eba2 070c 	subgt.w	r7, r2, ip
 800e88e:	2f00      	cmp	r7, #0
 800e890:	dd50      	ble.n	800e934 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 800e892:	fb97 f1f4 	sdiv	r1, r7, r4
 800e896:	fb04 7211 	mls	r2, r4, r1, r7
 800e89a:	b90a      	cbnz	r2, 800e8a0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800e89c:	4622      	mov	r2, r4
 800e89e:	3901      	subs	r1, #1
 800e8a0:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800e8a4:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800e8a8:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800e8ac:	ee21 3a23 	vmul.f32	s6, s2, s7
 800e8b0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800e8b4:	ee17 7a90 	vmov	r7, s15
 800e8b8:	ee73 7a42 	vsub.f32	s15, s6, s4
 800e8bc:	eef0 6a42 	vmov.f32	s13, s4
 800e8c0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800e8c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e8c8:	ee17 ca90 	vmov	ip, s15
 800e8cc:	eeb0 7a61 	vmov.f32	s14, s3
 800e8d0:	6840      	ldr	r0, [r0, #4]
 800e8d2:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800e8d6:	f8d0 a000 	ldr.w	sl, [r0]
 800e8da:	900b      	str	r0, [sp, #44]	@ 0x2c
 800e8dc:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800e8de:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800e8e2:	9008      	str	r0, [sp, #32]
 800e8e4:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800e8e6:	695b      	ldr	r3, [r3, #20]
 800e8e8:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800e8ec:	fb9c fcf4 	sdiv	ip, ip, r4
 800e8f0:	445b      	add	r3, fp
 800e8f2:	9307      	str	r3, [sp, #28]
 800e8f4:	ee16 3a90 	vmov	r3, s13
 800e8f8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800e8fc:	fb0c 3306 	mla	r3, ip, r6, r3
 800e900:	fb97 f7f4 	sdiv	r7, r7, r4
 800e904:	9302      	str	r3, [sp, #8]
 800e906:	ee17 3a10 	vmov	r3, s14
 800e90a:	2900      	cmp	r1, #0
 800e90c:	bfcc      	ite	gt
 800e90e:	46a1      	movgt	r9, r4
 800e910:	4691      	movle	r9, r2
 800e912:	44b6      	add	lr, r6
 800e914:	fb04 e505 	mla	r5, r4, r5, lr
 800e918:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800e91c:	fb07 3706 	mla	r7, r7, r6, r3
 800e920:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800e924:	e9cd 4700 	strd	r4, r7, [sp]
 800e928:	eba9 0306 	sub.w	r3, r9, r6
 800e92c:	f8da 4008 	ldr.w	r4, [sl, #8]
 800e930:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800e932:	47a0      	blx	r4
 800e934:	b00d      	add	sp, #52	@ 0x34
 800e936:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e93a:	2500      	movs	r5, #0
 800e93c:	462e      	mov	r6, r5
 800e93e:	e799      	b.n	800e874 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

0800e940 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e944:	461d      	mov	r5, r3
 800e946:	b0db      	sub	sp, #364	@ 0x16c
 800e948:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800e94c:	910f      	str	r1, [sp, #60]	@ 0x3c
 800e94e:	930a      	str	r3, [sp, #40]	@ 0x28
 800e950:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800e954:	9009      	str	r0, [sp, #36]	@ 0x24
 800e956:	930b      	str	r3, [sp, #44]	@ 0x2c
 800e958:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800e95c:	4614      	mov	r4, r2
 800e95e:	9310      	str	r3, [sp, #64]	@ 0x40
 800e960:	6803      	ldr	r3, [r0, #0]
 800e962:	4629      	mov	r1, r5
 800e964:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800e966:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800e96a:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800e96e:	47b8      	blx	r7
 800e970:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e972:	6058      	str	r0, [r3, #4]
 800e974:	2800      	cmp	r0, #0
 800e976:	f000 83a1 	beq.w	800f0bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e97a:	ed94 7a02 	vldr	s14, [r4, #8]
 800e97e:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800e982:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e986:	682b      	ldr	r3, [r5, #0]
 800e988:	9314      	str	r3, [sp, #80]	@ 0x50
 800e98a:	686b      	ldr	r3, [r5, #4]
 800e98c:	9315      	str	r3, [sp, #84]	@ 0x54
 800e98e:	4bc1      	ldr	r3, [pc, #772]	@ (800ec94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800e990:	7819      	ldrb	r1, [r3, #0]
 800e992:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800e996:	2900      	cmp	r1, #0
 800e998:	bf16      	itet	ne
 800e99a:	4619      	movne	r1, r3
 800e99c:	4611      	moveq	r1, r2
 800e99e:	4613      	movne	r3, r2
 800e9a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e9a4:	9116      	str	r1, [sp, #88]	@ 0x58
 800e9a6:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800e9aa:	f240 8387 	bls.w	800f0bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e9ae:	ed94 7a07 	vldr	s14, [r4, #28]
 800e9b2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e9b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e9ba:	f240 837f 	bls.w	800f0bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e9be:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800e9c2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e9c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e9ca:	f240 8377 	bls.w	800f0bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e9ce:	6822      	ldr	r2, [r4, #0]
 800e9d0:	4bb1      	ldr	r3, [pc, #708]	@ (800ec98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800e9d2:	429a      	cmp	r2, r3
 800e9d4:	f2c0 8372 	blt.w	800f0bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e9d8:	49b0      	ldr	r1, [pc, #704]	@ (800ec9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800e9da:	6963      	ldr	r3, [r4, #20]
 800e9dc:	428a      	cmp	r2, r1
 800e9de:	f300 836d 	bgt.w	800f0bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e9e2:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800e9e6:	48ae      	ldr	r0, [pc, #696]	@ (800eca0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800e9e8:	33ff      	adds	r3, #255	@ 0xff
 800e9ea:	4283      	cmp	r3, r0
 800e9ec:	f200 8366 	bhi.w	800f0bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e9f0:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800e9f2:	4dac      	ldr	r5, [pc, #688]	@ (800eca4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800e9f4:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800e9f8:	33ff      	adds	r3, #255	@ 0xff
 800e9fa:	42ab      	cmp	r3, r5
 800e9fc:	f200 835e 	bhi.w	800f0bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ea00:	6862      	ldr	r2, [r4, #4]
 800ea02:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800ea06:	33ff      	adds	r3, #255	@ 0xff
 800ea08:	4283      	cmp	r3, r0
 800ea0a:	f200 8357 	bhi.w	800f0bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ea0e:	69a1      	ldr	r1, [r4, #24]
 800ea10:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800ea14:	33ff      	adds	r3, #255	@ 0xff
 800ea16:	4283      	cmp	r3, r0
 800ea18:	f200 8350 	bhi.w	800f0bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ea1c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800ea1e:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800ea22:	30ff      	adds	r0, #255	@ 0xff
 800ea24:	42a8      	cmp	r0, r5
 800ea26:	f200 8349 	bhi.w	800f0bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ea2a:	428a      	cmp	r2, r1
 800ea2c:	f280 8110 	bge.w	800ec50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800ea30:	429a      	cmp	r2, r3
 800ea32:	f300 8119 	bgt.w	800ec68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800ea36:	4299      	cmp	r1, r3
 800ea38:	f280 811d 	bge.w	800ec76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800ea3c:	2502      	movs	r5, #2
 800ea3e:	2701      	movs	r7, #1
 800ea40:	46a9      	mov	r9, r5
 800ea42:	46b8      	mov	r8, r7
 800ea44:	f04f 0a00 	mov.w	sl, #0
 800ea48:	4621      	mov	r1, r4
 800ea4a:	a849      	add	r0, sp, #292	@ 0x124
 800ea4c:	f003 f810 	bl	8011a70 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800ea50:	4622      	mov	r2, r4
 800ea52:	4653      	mov	r3, sl
 800ea54:	a949      	add	r1, sp, #292	@ 0x124
 800ea56:	f8cd 9000 	str.w	r9, [sp]
 800ea5a:	a819      	add	r0, sp, #100	@ 0x64
 800ea5c:	f003 f93a 	bl	8011cd4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ea60:	4622      	mov	r2, r4
 800ea62:	4653      	mov	r3, sl
 800ea64:	a949      	add	r1, sp, #292	@ 0x124
 800ea66:	f8cd 8000 	str.w	r8, [sp]
 800ea6a:	a829      	add	r0, sp, #164	@ 0xa4
 800ea6c:	f003 f932 	bl	8011cd4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ea70:	4643      	mov	r3, r8
 800ea72:	4622      	mov	r2, r4
 800ea74:	a949      	add	r1, sp, #292	@ 0x124
 800ea76:	f8cd 9000 	str.w	r9, [sp]
 800ea7a:	a839      	add	r0, sp, #228	@ 0xe4
 800ea7c:	f003 f92a 	bl	8011cd4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ea80:	42af      	cmp	r7, r5
 800ea82:	bfb5      	itete	lt
 800ea84:	2300      	movlt	r3, #0
 800ea86:	2301      	movge	r3, #1
 800ea88:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800ea8a:	930e      	strge	r3, [sp, #56]	@ 0x38
 800ea8c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800ea8e:	af12      	add	r7, sp, #72	@ 0x48
 800ea90:	e893 0003 	ldmia.w	r3, {r0, r1}
 800ea94:	bfb9      	ittee	lt
 800ea96:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800ea98:	ac19      	addlt	r4, sp, #100	@ 0x64
 800ea9a:	ad19      	addge	r5, sp, #100	@ 0x64
 800ea9c:	ac29      	addge	r4, sp, #164	@ 0xa4
 800ea9e:	e887 0003 	stmia.w	r7, {r0, r1}
 800eaa2:	b928      	cbnz	r0, 800eab0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800eaa4:	4b80      	ldr	r3, [pc, #512]	@ (800eca8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800eaa6:	6818      	ldr	r0, [r3, #0]
 800eaa8:	6803      	ldr	r3, [r0, #0]
 800eaaa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800eaac:	4798      	blx	r3
 800eaae:	6038      	str	r0, [r7, #0]
 800eab0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800eab2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800eab6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800eaba:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800eabc:	930c      	str	r3, [sp, #48]	@ 0x30
 800eabe:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800eac0:	6963      	ldr	r3, [r4, #20]
 800eac2:	440b      	add	r3, r1
 800eac4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800eac8:	4408      	add	r0, r1
 800eaca:	b200      	sxth	r0, r0
 800eacc:	4283      	cmp	r3, r0
 800eace:	900d      	str	r0, [sp, #52]	@ 0x34
 800ead0:	f280 80dd 	bge.w	800ec8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800ead4:	428b      	cmp	r3, r1
 800ead6:	da08      	bge.n	800eaea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ead8:	2a00      	cmp	r2, #0
 800eada:	dd06      	ble.n	800eaea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800eadc:	1acb      	subs	r3, r1, r3
 800eade:	429a      	cmp	r2, r3
 800eae0:	f2c0 80e4 	blt.w	800ecac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800eae4:	2b00      	cmp	r3, #0
 800eae6:	f300 80e2 	bgt.w	800ecae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800eaea:	6967      	ldr	r7, [r4, #20]
 800eaec:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800eaee:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800eaf2:	443b      	add	r3, r7
 800eaf4:	461f      	mov	r7, r3
 800eaf6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800eaf8:	1bdf      	subs	r7, r3, r7
 800eafa:	4297      	cmp	r7, r2
 800eafc:	bfa8      	it	ge
 800eafe:	4617      	movge	r7, r2
 800eb00:	2f00      	cmp	r7, #0
 800eb02:	f340 8166 	ble.w	800edd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800eb06:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800eb08:	6829      	ldr	r1, [r5, #0]
 800eb0a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800eb0e:	f9bb 3000 	ldrsh.w	r3, [fp]
 800eb12:	4411      	add	r1, r2
 800eb14:	4299      	cmp	r1, r3
 800eb16:	6820      	ldr	r0, [r4, #0]
 800eb18:	dd1a      	ble.n	800eb50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800eb1a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800eb1e:	4402      	add	r2, r0
 800eb20:	440b      	add	r3, r1
 800eb22:	b21b      	sxth	r3, r3
 800eb24:	429a      	cmp	r2, r3
 800eb26:	dc13      	bgt.n	800eb50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800eb28:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800eb2a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800eb2c:	a912      	add	r1, sp, #72	@ 0x48
 800eb2e:	681b      	ldr	r3, [r3, #0]
 800eb30:	9206      	str	r2, [sp, #24]
 800eb32:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800eb34:	9500      	str	r5, [sp, #0]
 800eb36:	9205      	str	r2, [sp, #20]
 800eb38:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800eb3a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800eb3c:	e9cd b203 	strd	fp, r2, [sp, #12]
 800eb40:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800eb42:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800eb46:	aa49      	add	r2, sp, #292	@ 0x124
 800eb48:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800eb4c:	4623      	mov	r3, r4
 800eb4e:	47c8      	blx	r9
 800eb50:	e9d4 2300 	ldrd	r2, r3, [r4]
 800eb54:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800eb58:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800eb5c:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800eb60:	ee37 7a27 	vadd.f32	s14, s14, s15
 800eb64:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800eb68:	ed94 6a08 	vldr	s12, [r4, #32]
 800eb6c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800eb70:	edd4 6a07 	vldr	s13, [r4, #28]
 800eb74:	ee76 6a86 	vadd.f32	s13, s13, s12
 800eb78:	441a      	add	r2, r3
 800eb7a:	6963      	ldr	r3, [r4, #20]
 800eb7c:	68a1      	ldr	r1, [r4, #8]
 800eb7e:	3301      	adds	r3, #1
 800eb80:	6163      	str	r3, [r4, #20]
 800eb82:	69a3      	ldr	r3, [r4, #24]
 800eb84:	6022      	str	r2, [r4, #0]
 800eb86:	3b01      	subs	r3, #1
 800eb88:	61a3      	str	r3, [r4, #24]
 800eb8a:	6923      	ldr	r3, [r4, #16]
 800eb8c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800eb90:	440b      	add	r3, r1
 800eb92:	68e1      	ldr	r1, [r4, #12]
 800eb94:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800eb98:	428b      	cmp	r3, r1
 800eb9a:	edc4 6a07 	vstr	s13, [r4, #28]
 800eb9e:	6123      	str	r3, [r4, #16]
 800eba0:	db15      	blt.n	800ebce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800eba2:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800eba6:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ebaa:	edc4 6a07 	vstr	s13, [r4, #28]
 800ebae:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800ebb2:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ebb6:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800ebba:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800ebbe:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ebc2:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ebc6:	3201      	adds	r2, #1
 800ebc8:	1a5b      	subs	r3, r3, r1
 800ebca:	6022      	str	r2, [r4, #0]
 800ebcc:	6123      	str	r3, [r4, #16]
 800ebce:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800ebd2:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ebd6:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800ebda:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800ebde:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ebe2:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800ebe6:	ed95 6a08 	vldr	s12, [r5, #32]
 800ebea:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ebee:	edd5 6a07 	vldr	s13, [r5, #28]
 800ebf2:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ebf6:	441a      	add	r2, r3
 800ebf8:	696b      	ldr	r3, [r5, #20]
 800ebfa:	68a9      	ldr	r1, [r5, #8]
 800ebfc:	3301      	adds	r3, #1
 800ebfe:	616b      	str	r3, [r5, #20]
 800ec00:	69ab      	ldr	r3, [r5, #24]
 800ec02:	602a      	str	r2, [r5, #0]
 800ec04:	3b01      	subs	r3, #1
 800ec06:	61ab      	str	r3, [r5, #24]
 800ec08:	692b      	ldr	r3, [r5, #16]
 800ec0a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800ec0e:	440b      	add	r3, r1
 800ec10:	68e9      	ldr	r1, [r5, #12]
 800ec12:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800ec16:	428b      	cmp	r3, r1
 800ec18:	edc5 6a07 	vstr	s13, [r5, #28]
 800ec1c:	612b      	str	r3, [r5, #16]
 800ec1e:	db15      	blt.n	800ec4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800ec20:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800ec24:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ec28:	edc5 6a07 	vstr	s13, [r5, #28]
 800ec2c:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800ec30:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ec34:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800ec38:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800ec3c:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ec40:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800ec44:	3201      	adds	r2, #1
 800ec46:	1a5b      	subs	r3, r3, r1
 800ec48:	602a      	str	r2, [r5, #0]
 800ec4a:	612b      	str	r3, [r5, #16]
 800ec4c:	3f01      	subs	r7, #1
 800ec4e:	e757      	b.n	800eb00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800ec50:	4299      	cmp	r1, r3
 800ec52:	dc13      	bgt.n	800ec7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800ec54:	429a      	cmp	r2, r3
 800ec56:	da14      	bge.n	800ec82 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800ec58:	2502      	movs	r5, #2
 800ec5a:	2703      	movs	r7, #3
 800ec5c:	46a9      	mov	r9, r5
 800ec5e:	f04f 0800 	mov.w	r8, #0
 800ec62:	f04f 0a01 	mov.w	sl, #1
 800ec66:	e6ef      	b.n	800ea48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ec68:	2501      	movs	r5, #1
 800ec6a:	2700      	movs	r7, #0
 800ec6c:	46a9      	mov	r9, r5
 800ec6e:	46b8      	mov	r8, r7
 800ec70:	f04f 0a02 	mov.w	sl, #2
 800ec74:	e6e8      	b.n	800ea48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ec76:	2501      	movs	r5, #1
 800ec78:	2702      	movs	r7, #2
 800ec7a:	e6e1      	b.n	800ea40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800ec7c:	2500      	movs	r5, #0
 800ec7e:	2701      	movs	r7, #1
 800ec80:	e7f4      	b.n	800ec6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800ec82:	2702      	movs	r7, #2
 800ec84:	2503      	movs	r5, #3
 800ec86:	f04f 0900 	mov.w	r9, #0
 800ec8a:	46b8      	mov	r8, r7
 800ec8c:	e7e9      	b.n	800ec62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800ec8e:	4613      	mov	r3, r2
 800ec90:	e728      	b.n	800eae4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800ec92:	bf00      	nop
 800ec94:	2004bf90 	.word	0x2004bf90
 800ec98:	fffd8f01 	.word	0xfffd8f01
 800ec9c:	00027100 	.word	0x00027100
 800eca0:	0004e1ff 	.word	0x0004e1ff
 800eca4:	0004e1fe 	.word	0x0004e1fe
 800eca8:	2004bf98 	.word	0x2004bf98
 800ecac:	4613      	mov	r3, r2
 800ecae:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800ecb2:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800ecb6:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800ecba:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800ecbe:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800ecc2:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800ecc6:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800ecca:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800ecce:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800ecd2:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800ecd6:	469e      	mov	lr, r3
 800ecd8:	469c      	mov	ip, r3
 800ecda:	f04f 0900 	mov.w	r9, #0
 800ecde:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800ece0:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800ece2:	9111      	str	r1, [sp, #68]	@ 0x44
 800ece4:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800ece8:	f1bc 0f00 	cmp.w	ip, #0
 800ecec:	d147      	bne.n	800ed7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800ecee:	eb03 0c07 	add.w	ip, r3, r7
 800ecf2:	1ad7      	subs	r7, r2, r3
 800ecf4:	f1b9 0f00 	cmp.w	r9, #0
 800ecf8:	d009      	beq.n	800ed0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800ecfa:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800ecfe:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800ed02:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800ed06:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800ed0a:	9029      	str	r0, [sp, #164]	@ 0xa4
 800ed0c:	912d      	str	r1, [sp, #180]	@ 0xb4
 800ed0e:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800ed12:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800ed16:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800ed1a:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800ed1e:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800ed22:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800ed26:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800ed2a:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800ed2e:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800ed32:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800ed36:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800ed3a:	f04f 0800 	mov.w	r8, #0
 800ed3e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800ed40:	9111      	str	r1, [sp, #68]	@ 0x44
 800ed42:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800ed46:	f1be 0f00 	cmp.w	lr, #0
 800ed4a:	d031      	beq.n	800edb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800ed4c:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800ed4e:	4450      	add	r0, sl
 800ed50:	4431      	add	r1, r6
 800ed52:	4549      	cmp	r1, r9
 800ed54:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800ed58:	ee37 7a04 	vadd.f32	s14, s14, s8
 800ed5c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ed60:	db08      	blt.n	800ed74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800ed62:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ed66:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ed6a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800ed6e:	3001      	adds	r0, #1
 800ed70:	eba1 0109 	sub.w	r1, r1, r9
 800ed74:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ed78:	f04f 0801 	mov.w	r8, #1
 800ed7c:	e7e3      	b.n	800ed46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800ed7e:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800ed80:	4450      	add	r0, sl
 800ed82:	4431      	add	r1, r6
 800ed84:	4541      	cmp	r1, r8
 800ed86:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ed8a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ed8e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800ed92:	db08      	blt.n	800eda6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800ed94:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ed98:	ee37 7a25 	vadd.f32	s14, s14, s11
 800ed9c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800eda0:	3001      	adds	r0, #1
 800eda2:	eba1 0108 	sub.w	r1, r1, r8
 800eda6:	f10c 3cff 	add.w	ip, ip, #4294967295
 800edaa:	f04f 0901 	mov.w	r9, #1
 800edae:	e79b      	b.n	800ece8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800edb0:	449c      	add	ip, r3
 800edb2:	1aff      	subs	r7, r7, r3
 800edb4:	f1b8 0f00 	cmp.w	r8, #0
 800edb8:	d009      	beq.n	800edce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800edba:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800edbe:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800edc2:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800edc6:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800edca:	9019      	str	r0, [sp, #100]	@ 0x64
 800edcc:	911d      	str	r1, [sp, #116]	@ 0x74
 800edce:	1ad2      	subs	r2, r2, r3
 800edd0:	e68b      	b.n	800eaea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800edd2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800edd4:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800edd6:	2b00      	cmp	r3, #0
 800edd8:	f000 80d1 	beq.w	800ef7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800eddc:	ad19      	add	r5, sp, #100	@ 0x64
 800edde:	ac39      	add	r4, sp, #228	@ 0xe4
 800ede0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800ede2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ede6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800edea:	930c      	str	r3, [sp, #48]	@ 0x30
 800edec:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800edee:	6963      	ldr	r3, [r4, #20]
 800edf0:	440b      	add	r3, r1
 800edf2:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800edf6:	4408      	add	r0, r1
 800edf8:	b200      	sxth	r0, r0
 800edfa:	4283      	cmp	r3, r0
 800edfc:	900d      	str	r0, [sp, #52]	@ 0x34
 800edfe:	f280 80c1 	bge.w	800ef84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800ee02:	428b      	cmp	r3, r1
 800ee04:	da08      	bge.n	800ee18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ee06:	2a00      	cmp	r2, #0
 800ee08:	dd06      	ble.n	800ee18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ee0a:	1acb      	subs	r3, r1, r3
 800ee0c:	429a      	cmp	r2, r3
 800ee0e:	f2c0 80bb 	blt.w	800ef88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800ee12:	2b00      	cmp	r3, #0
 800ee14:	f300 80b9 	bgt.w	800ef8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800ee18:	6967      	ldr	r7, [r4, #20]
 800ee1a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800ee1c:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800ee20:	443b      	add	r3, r7
 800ee22:	461f      	mov	r7, r3
 800ee24:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800ee26:	1bdf      	subs	r7, r3, r7
 800ee28:	4297      	cmp	r7, r2
 800ee2a:	bfa8      	it	ge
 800ee2c:	4617      	movge	r7, r2
 800ee2e:	2f00      	cmp	r7, #0
 800ee30:	f340 813c 	ble.w	800f0ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800ee34:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800ee36:	6829      	ldr	r1, [r5, #0]
 800ee38:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ee3c:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ee40:	4411      	add	r1, r2
 800ee42:	4299      	cmp	r1, r3
 800ee44:	6820      	ldr	r0, [r4, #0]
 800ee46:	dd1a      	ble.n	800ee7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ee48:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ee4c:	4402      	add	r2, r0
 800ee4e:	440b      	add	r3, r1
 800ee50:	b21b      	sxth	r3, r3
 800ee52:	429a      	cmp	r2, r3
 800ee54:	dc13      	bgt.n	800ee7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ee56:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800ee58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ee5a:	a912      	add	r1, sp, #72	@ 0x48
 800ee5c:	681b      	ldr	r3, [r3, #0]
 800ee5e:	9206      	str	r2, [sp, #24]
 800ee60:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800ee62:	9500      	str	r5, [sp, #0]
 800ee64:	9205      	str	r2, [sp, #20]
 800ee66:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800ee68:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800ee6a:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ee6e:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800ee70:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ee74:	aa49      	add	r2, sp, #292	@ 0x124
 800ee76:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800ee7a:	4623      	mov	r3, r4
 800ee7c:	47c8      	blx	r9
 800ee7e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ee82:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800ee86:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800ee8a:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800ee8e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ee92:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800ee96:	ed94 6a08 	vldr	s12, [r4, #32]
 800ee9a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ee9e:	edd4 6a07 	vldr	s13, [r4, #28]
 800eea2:	ee76 6a86 	vadd.f32	s13, s13, s12
 800eea6:	441a      	add	r2, r3
 800eea8:	6963      	ldr	r3, [r4, #20]
 800eeaa:	68a1      	ldr	r1, [r4, #8]
 800eeac:	3301      	adds	r3, #1
 800eeae:	6163      	str	r3, [r4, #20]
 800eeb0:	69a3      	ldr	r3, [r4, #24]
 800eeb2:	6022      	str	r2, [r4, #0]
 800eeb4:	3b01      	subs	r3, #1
 800eeb6:	61a3      	str	r3, [r4, #24]
 800eeb8:	6923      	ldr	r3, [r4, #16]
 800eeba:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800eebe:	440b      	add	r3, r1
 800eec0:	68e1      	ldr	r1, [r4, #12]
 800eec2:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800eec6:	428b      	cmp	r3, r1
 800eec8:	edc4 6a07 	vstr	s13, [r4, #28]
 800eecc:	6123      	str	r3, [r4, #16]
 800eece:	db15      	blt.n	800eefc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800eed0:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800eed4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800eed8:	edc4 6a07 	vstr	s13, [r4, #28]
 800eedc:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800eee0:	ee36 7a87 	vadd.f32	s14, s13, s14
 800eee4:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800eee8:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800eeec:	ee77 7a27 	vadd.f32	s15, s14, s15
 800eef0:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800eef4:	3201      	adds	r2, #1
 800eef6:	1a5b      	subs	r3, r3, r1
 800eef8:	6022      	str	r2, [r4, #0]
 800eefa:	6123      	str	r3, [r4, #16]
 800eefc:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800ef00:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ef04:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800ef08:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800ef0c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ef10:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800ef14:	ed95 6a08 	vldr	s12, [r5, #32]
 800ef18:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ef1c:	edd5 6a07 	vldr	s13, [r5, #28]
 800ef20:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ef24:	441a      	add	r2, r3
 800ef26:	696b      	ldr	r3, [r5, #20]
 800ef28:	68a9      	ldr	r1, [r5, #8]
 800ef2a:	3301      	adds	r3, #1
 800ef2c:	616b      	str	r3, [r5, #20]
 800ef2e:	69ab      	ldr	r3, [r5, #24]
 800ef30:	602a      	str	r2, [r5, #0]
 800ef32:	3b01      	subs	r3, #1
 800ef34:	61ab      	str	r3, [r5, #24]
 800ef36:	692b      	ldr	r3, [r5, #16]
 800ef38:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800ef3c:	440b      	add	r3, r1
 800ef3e:	68e9      	ldr	r1, [r5, #12]
 800ef40:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800ef44:	428b      	cmp	r3, r1
 800ef46:	edc5 6a07 	vstr	s13, [r5, #28]
 800ef4a:	612b      	str	r3, [r5, #16]
 800ef4c:	db15      	blt.n	800ef7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800ef4e:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800ef52:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ef56:	edc5 6a07 	vstr	s13, [r5, #28]
 800ef5a:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800ef5e:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ef62:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800ef66:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800ef6a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ef6e:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800ef72:	3201      	adds	r2, #1
 800ef74:	1a5b      	subs	r3, r3, r1
 800ef76:	602a      	str	r2, [r5, #0]
 800ef78:	612b      	str	r3, [r5, #16]
 800ef7a:	3f01      	subs	r7, #1
 800ef7c:	e757      	b.n	800ee2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800ef7e:	ad39      	add	r5, sp, #228	@ 0xe4
 800ef80:	ac19      	add	r4, sp, #100	@ 0x64
 800ef82:	e72d      	b.n	800ede0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800ef84:	4613      	mov	r3, r2
 800ef86:	e744      	b.n	800ee12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800ef88:	4613      	mov	r3, r2
 800ef8a:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800ef8e:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800ef92:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800ef96:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800ef9a:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800ef9e:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800efa2:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800efa6:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800efaa:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800efae:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800efb2:	469e      	mov	lr, r3
 800efb4:	461f      	mov	r7, r3
 800efb6:	f04f 0900 	mov.w	r9, #0
 800efba:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800efbc:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800efc0:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800efc2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800efc6:	960e      	str	r6, [sp, #56]	@ 0x38
 800efc8:	2f00      	cmp	r7, #0
 800efca:	d146      	bne.n	800f05a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800efcc:	449c      	add	ip, r3
 800efce:	1ad7      	subs	r7, r2, r3
 800efd0:	f1b9 0f00 	cmp.w	r9, #0
 800efd4:	d009      	beq.n	800efea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800efd6:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800efda:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800efde:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800efe2:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800efe6:	9039      	str	r0, [sp, #228]	@ 0xe4
 800efe8:	913d      	str	r1, [sp, #244]	@ 0xf4
 800efea:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800efee:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800eff2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800eff6:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800effa:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800effe:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800f002:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800f006:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800f00a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800f00e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800f012:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800f016:	f04f 0800 	mov.w	r8, #0
 800f01a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800f01c:	910e      	str	r1, [sp, #56]	@ 0x38
 800f01e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800f022:	f1be 0f00 	cmp.w	lr, #0
 800f026:	d030      	beq.n	800f08a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800f028:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800f02a:	4450      	add	r0, sl
 800f02c:	4431      	add	r1, r6
 800f02e:	4549      	cmp	r1, r9
 800f030:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f034:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f038:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f03c:	db08      	blt.n	800f050 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800f03e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f042:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f046:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f04a:	3001      	adds	r0, #1
 800f04c:	eba1 0109 	sub.w	r1, r1, r9
 800f050:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f054:	f04f 0801 	mov.w	r8, #1
 800f058:	e7e3      	b.n	800f022 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800f05a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800f05c:	4450      	add	r0, sl
 800f05e:	4431      	add	r1, r6
 800f060:	4541      	cmp	r1, r8
 800f062:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f066:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f06a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f06e:	db08      	blt.n	800f082 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800f070:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f074:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f078:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f07c:	3001      	adds	r0, #1
 800f07e:	eba1 0108 	sub.w	r1, r1, r8
 800f082:	3f01      	subs	r7, #1
 800f084:	f04f 0901 	mov.w	r9, #1
 800f088:	e79e      	b.n	800efc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800f08a:	449c      	add	ip, r3
 800f08c:	1aff      	subs	r7, r7, r3
 800f08e:	f1b8 0f00 	cmp.w	r8, #0
 800f092:	d009      	beq.n	800f0a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800f094:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800f098:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800f09c:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800f0a0:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800f0a4:	9019      	str	r0, [sp, #100]	@ 0x64
 800f0a6:	911d      	str	r1, [sp, #116]	@ 0x74
 800f0a8:	1ad2      	subs	r2, r2, r3
 800f0aa:	e6b5      	b.n	800ee18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f0ac:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800f0ae:	681b      	ldr	r3, [r3, #0]
 800f0b0:	b923      	cbnz	r3, 800f0bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f0b2:	4b04      	ldr	r3, [pc, #16]	@ (800f0c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800f0b4:	6818      	ldr	r0, [r3, #0]
 800f0b6:	6803      	ldr	r3, [r0, #0]
 800f0b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f0ba:	4798      	blx	r3
 800f0bc:	b05b      	add	sp, #364	@ 0x16c
 800f0be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f0c2:	bf00      	nop
 800f0c4:	2004bf98 	.word	0x2004bf98

0800f0c8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800f0c8:	2b03      	cmp	r3, #3
 800f0ca:	d818      	bhi.n	800f0fe <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800f0cc:	e8df f003 	tbb	[pc, r3]
 800f0d0:	130d0602 	.word	0x130d0602
 800f0d4:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f0d8:	1850      	adds	r0, r2, r1
 800f0da:	4770      	bx	lr
 800f0dc:	8803      	ldrh	r3, [r0, #0]
 800f0de:	8880      	ldrh	r0, [r0, #4]
 800f0e0:	4418      	add	r0, r3
 800f0e2:	b200      	sxth	r0, r0
 800f0e4:	1a80      	subs	r0, r0, r2
 800f0e6:	3801      	subs	r0, #1
 800f0e8:	4770      	bx	lr
 800f0ea:	8803      	ldrh	r3, [r0, #0]
 800f0ec:	8880      	ldrh	r0, [r0, #4]
 800f0ee:	4418      	add	r0, r3
 800f0f0:	b200      	sxth	r0, r0
 800f0f2:	1a40      	subs	r0, r0, r1
 800f0f4:	e7f7      	b.n	800f0e6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800f0f6:	f9b0 0000 	ldrsh.w	r0, [r0]
 800f0fa:	4410      	add	r0, r2
 800f0fc:	4770      	bx	lr
 800f0fe:	2000      	movs	r0, #0
 800f100:	4770      	bx	lr

0800f102 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800f102:	2b03      	cmp	r3, #3
 800f104:	d817      	bhi.n	800f136 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800f106:	e8df f003 	tbb	[pc, r3]
 800f10a:	0602      	.short	0x0602
 800f10c:	1009      	.short	0x1009
 800f10e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f112:	1850      	adds	r0, r2, r1
 800f114:	4770      	bx	lr
 800f116:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800f11a:	e7fa      	b.n	800f112 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800f11c:	8843      	ldrh	r3, [r0, #2]
 800f11e:	88c0      	ldrh	r0, [r0, #6]
 800f120:	4418      	add	r0, r3
 800f122:	b200      	sxth	r0, r0
 800f124:	1a80      	subs	r0, r0, r2
 800f126:	3801      	subs	r0, #1
 800f128:	4770      	bx	lr
 800f12a:	8843      	ldrh	r3, [r0, #2]
 800f12c:	88c0      	ldrh	r0, [r0, #6]
 800f12e:	4418      	add	r0, r3
 800f130:	b200      	sxth	r0, r0
 800f132:	1a40      	subs	r0, r0, r1
 800f134:	e7f7      	b.n	800f126 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800f136:	2000      	movs	r0, #0
 800f138:	4770      	bx	lr
	...

0800f13c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800f13c:	2200      	movs	r2, #0
 800f13e:	4b01      	ldr	r3, [pc, #4]	@ (800f144 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800f140:	601a      	str	r2, [r3, #0]
 800f142:	4770      	bx	lr
 800f144:	2004bfa0 	.word	0x2004bfa0

0800f148 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800f148:	4603      	mov	r3, r0
 800f14a:	b1c8      	cbz	r0, 800f180 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800f14c:	0c02      	lsrs	r2, r0, #16
 800f14e:	0412      	lsls	r2, r2, #16
 800f150:	b9a2      	cbnz	r2, 800f17c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800f152:	0403      	lsls	r3, r0, #16
 800f154:	2010      	movs	r0, #16
 800f156:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800f15a:	bf04      	itt	eq
 800f15c:	021b      	lsleq	r3, r3, #8
 800f15e:	3008      	addeq	r0, #8
 800f160:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800f164:	bf04      	itt	eq
 800f166:	011b      	lsleq	r3, r3, #4
 800f168:	3004      	addeq	r0, #4
 800f16a:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800f16e:	bf04      	itt	eq
 800f170:	009b      	lsleq	r3, r3, #2
 800f172:	3002      	addeq	r0, #2
 800f174:	2b00      	cmp	r3, #0
 800f176:	db04      	blt.n	800f182 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800f178:	3001      	adds	r0, #1
 800f17a:	4770      	bx	lr
 800f17c:	2000      	movs	r0, #0
 800f17e:	e7ea      	b.n	800f156 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800f180:	2020      	movs	r0, #32
 800f182:	4770      	bx	lr

0800f184 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800f184:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f188:	b087      	sub	sp, #28
 800f18a:	460d      	mov	r5, r1
 800f18c:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800f190:	4616      	mov	r6, r2
 800f192:	4698      	mov	r8, r3
 800f194:	4601      	mov	r1, r0
 800f196:	b120      	cbz	r0, 800f1a2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f198:	b11a      	cbz	r2, 800f1a2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f19a:	2d1f      	cmp	r5, #31
 800f19c:	d801      	bhi.n	800f1a2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f19e:	2b1f      	cmp	r3, #31
 800f1a0:	d904      	bls.n	800f1ac <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800f1a2:	2000      	movs	r0, #0
 800f1a4:	6038      	str	r0, [r7, #0]
 800f1a6:	b007      	add	sp, #28
 800f1a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f1ac:	b97d      	cbnz	r5, 800f1ce <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800f1ae:	b143      	cbz	r3, 800f1c2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800f1b0:	4602      	mov	r2, r0
 800f1b2:	e9cd 4700 	strd	r4, r7, [sp]
 800f1b6:	462b      	mov	r3, r5
 800f1b8:	4641      	mov	r1, r8
 800f1ba:	4630      	mov	r0, r6
 800f1bc:	f7ff ffe2 	bl	800f184 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f1c0:	e7f1      	b.n	800f1a6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f1c2:	f04f 33ff 	mov.w	r3, #4294967295
 800f1c6:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800f1ca:	603b      	str	r3, [r7, #0]
 800f1cc:	e7eb      	b.n	800f1a6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f1ce:	fa32 fa05 	lsrs.w	sl, r2, r5
 800f1d2:	d106      	bne.n	800f1e2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800f1d4:	4346      	muls	r6, r0
 800f1d6:	fbb6 f0f4 	udiv	r0, r6, r4
 800f1da:	fb04 6610 	mls	r6, r4, r0, r6
 800f1de:	603e      	str	r6, [r7, #0]
 800f1e0:	e7e1      	b.n	800f1a6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f1e2:	fa00 fb05 	lsl.w	fp, r0, r5
 800f1e6:	fbbb f9f4 	udiv	r9, fp, r4
 800f1ea:	2201      	movs	r2, #1
 800f1ec:	fb0a f309 	mul.w	r3, sl, r9
 800f1f0:	40aa      	lsls	r2, r5
 800f1f2:	3a01      	subs	r2, #1
 800f1f4:	4016      	ands	r6, r2
 800f1f6:	4630      	mov	r0, r6
 800f1f8:	9303      	str	r3, [sp, #12]
 800f1fa:	f7ff ffa5 	bl	800f148 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f1fe:	462b      	mov	r3, r5
 800f200:	460a      	mov	r2, r1
 800f202:	e9cd 4700 	strd	r4, r7, [sp]
 800f206:	4601      	mov	r1, r0
 800f208:	4630      	mov	r0, r6
 800f20a:	f7ff ffbb 	bl	800f184 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f20e:	fb04 b919 	mls	r9, r4, r9, fp
 800f212:	4606      	mov	r6, r0
 800f214:	4648      	mov	r0, r9
 800f216:	eb05 0108 	add.w	r1, r5, r8
 800f21a:	f7ff ff95 	bl	800f148 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f21e:	ab05      	add	r3, sp, #20
 800f220:	e9cd 4300 	strd	r4, r3, [sp]
 800f224:	464a      	mov	r2, r9
 800f226:	4603      	mov	r3, r0
 800f228:	4650      	mov	r0, sl
 800f22a:	f7ff ffab 	bl	800f184 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f22e:	6839      	ldr	r1, [r7, #0]
 800f230:	9a05      	ldr	r2, [sp, #20]
 800f232:	9b03      	ldr	r3, [sp, #12]
 800f234:	4411      	add	r1, r2
 800f236:	fbb1 f2f4 	udiv	r2, r1, r4
 800f23a:	fb04 1412 	mls	r4, r4, r2, r1
 800f23e:	18d3      	adds	r3, r2, r3
 800f240:	441e      	add	r6, r3
 800f242:	4430      	add	r0, r6
 800f244:	603c      	str	r4, [r7, #0]
 800f246:	e7ae      	b.n	800f1a6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800f248 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800f248:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f24c:	b085      	sub	sp, #20
 800f24e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800f250:	f1b0 0900 	subs.w	r9, r0, #0
 800f254:	461d      	mov	r5, r3
 800f256:	bfbf      	itttt	lt
 800f258:	6823      	ldrlt	r3, [r4, #0]
 800f25a:	f1c9 0900 	rsblt	r9, r9, #0
 800f25e:	425b      	neglt	r3, r3
 800f260:	6023      	strlt	r3, [r4, #0]
 800f262:	bfb4      	ite	lt
 800f264:	f04f 36ff 	movlt.w	r6, #4294967295
 800f268:	2601      	movge	r6, #1
 800f26a:	2a00      	cmp	r2, #0
 800f26c:	4617      	mov	r7, r2
 800f26e:	da04      	bge.n	800f27a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800f270:	6823      	ldr	r3, [r4, #0]
 800f272:	4257      	negs	r7, r2
 800f274:	425b      	negs	r3, r3
 800f276:	4276      	negs	r6, r6
 800f278:	6023      	str	r3, [r4, #0]
 800f27a:	2d00      	cmp	r5, #0
 800f27c:	4638      	mov	r0, r7
 800f27e:	bfba      	itte	lt
 800f280:	426d      	neglt	r5, r5
 800f282:	f04f 38ff 	movlt.w	r8, #4294967295
 800f286:	f04f 0801 	movge.w	r8, #1
 800f28a:	f7ff ff5d 	bl	800f148 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f28e:	ab03      	add	r3, sp, #12
 800f290:	e9cd 5300 	strd	r5, r3, [sp]
 800f294:	463a      	mov	r2, r7
 800f296:	4603      	mov	r3, r0
 800f298:	4648      	mov	r0, r9
 800f29a:	f7ff ff73 	bl	800f184 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f29e:	6823      	ldr	r3, [r4, #0]
 800f2a0:	9a03      	ldr	r2, [sp, #12]
 800f2a2:	4546      	cmp	r6, r8
 800f2a4:	441a      	add	r2, r3
 800f2a6:	fb92 f3f5 	sdiv	r3, r2, r5
 800f2aa:	4418      	add	r0, r3
 800f2ac:	fb05 2313 	mls	r3, r5, r3, r2
 800f2b0:	bf18      	it	ne
 800f2b2:	4240      	negne	r0, r0
 800f2b4:	1c72      	adds	r2, r6, #1
 800f2b6:	6023      	str	r3, [r4, #0]
 800f2b8:	d105      	bne.n	800f2c6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800f2ba:	2b00      	cmp	r3, #0
 800f2bc:	f1c3 0200 	rsb	r2, r3, #0
 800f2c0:	db0b      	blt.n	800f2da <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800f2c2:	6022      	str	r2, [r4, #0]
 800f2c4:	e006      	b.n	800f2d4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f2c6:	2e01      	cmp	r6, #1
 800f2c8:	d104      	bne.n	800f2d4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f2ca:	2b00      	cmp	r3, #0
 800f2cc:	da02      	bge.n	800f2d4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f2ce:	442b      	add	r3, r5
 800f2d0:	3801      	subs	r0, #1
 800f2d2:	6023      	str	r3, [r4, #0]
 800f2d4:	b005      	add	sp, #20
 800f2d6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f2da:	3801      	subs	r0, #1
 800f2dc:	1b52      	subs	r2, r2, r5
 800f2de:	e7f0      	b.n	800f2c2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800f2e0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800f2e0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800f2e4:	4c1c      	ldr	r4, [pc, #112]	@ (800f358 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800f2e6:	4605      	mov	r5, r0
 800f2e8:	69a3      	ldr	r3, [r4, #24]
 800f2ea:	6807      	ldr	r7, [r0, #0]
 800f2ec:	b92b      	cbnz	r3, 800f2fa <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800f2ee:	6840      	ldr	r0, [r0, #4]
 800f2f0:	e9c5 7000 	strd	r7, r0, [r5]
 800f2f4:	b004      	add	sp, #16
 800f2f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f2fa:	f04f 0802 	mov.w	r8, #2
 800f2fe:	fb93 f1f8 	sdiv	r1, r3, r8
 800f302:	68a2      	ldr	r2, [r4, #8]
 800f304:	ae04      	add	r6, sp, #16
 800f306:	440a      	add	r2, r1
 800f308:	f846 2d04 	str.w	r2, [r6, #-4]!
 800f30c:	69e1      	ldr	r1, [r4, #28]
 800f30e:	463a      	mov	r2, r7
 800f310:	9600      	str	r6, [sp, #0]
 800f312:	6820      	ldr	r0, [r4, #0]
 800f314:	f7ff ff98 	bl	800f248 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f318:	69a3      	ldr	r3, [r4, #24]
 800f31a:	4607      	mov	r7, r0
 800f31c:	686a      	ldr	r2, [r5, #4]
 800f31e:	6a21      	ldr	r1, [r4, #32]
 800f320:	9600      	str	r6, [sp, #0]
 800f322:	6860      	ldr	r0, [r4, #4]
 800f324:	f7ff ff90 	bl	800f248 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f328:	69a3      	ldr	r3, [r4, #24]
 800f32a:	6962      	ldr	r2, [r4, #20]
 800f32c:	fb93 f8f8 	sdiv	r8, r3, r8
 800f330:	4442      	add	r2, r8
 800f332:	9203      	str	r2, [sp, #12]
 800f334:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800f336:	682a      	ldr	r2, [r5, #0]
 800f338:	4407      	add	r7, r0
 800f33a:	9600      	str	r6, [sp, #0]
 800f33c:	68e0      	ldr	r0, [r4, #12]
 800f33e:	f7ff ff83 	bl	800f248 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f342:	9600      	str	r6, [sp, #0]
 800f344:	4680      	mov	r8, r0
 800f346:	69a3      	ldr	r3, [r4, #24]
 800f348:	686a      	ldr	r2, [r5, #4]
 800f34a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800f34c:	6920      	ldr	r0, [r4, #16]
 800f34e:	f7ff ff7b 	bl	800f248 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f352:	4440      	add	r0, r8
 800f354:	e7cc      	b.n	800f2f0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800f356:	bf00      	nop
 800f358:	2004bfa4 	.word	0x2004bfa4

0800f35c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800f35c:	4b07      	ldr	r3, [pc, #28]	@ (800f37c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800f35e:	781b      	ldrb	r3, [r3, #0]
 800f360:	2b01      	cmp	r3, #1
 800f362:	d109      	bne.n	800f378 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800f364:	f9b1 3000 	ldrsh.w	r3, [r1]
 800f368:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f36c:	8003      	strh	r3, [r0, #0]
 800f36e:	4b04      	ldr	r3, [pc, #16]	@ (800f380 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800f370:	881b      	ldrh	r3, [r3, #0]
 800f372:	3b01      	subs	r3, #1
 800f374:	1a9b      	subs	r3, r3, r2
 800f376:	800b      	strh	r3, [r1, #0]
 800f378:	4770      	bx	lr
 800f37a:	bf00      	nop
 800f37c:	2004bf90 	.word	0x2004bf90
 800f380:	2004bf8c 	.word	0x2004bf8c

0800f384 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800f384:	b510      	push	{r4, lr}
 800f386:	4b07      	ldr	r3, [pc, #28]	@ (800f3a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800f388:	781b      	ldrb	r3, [r3, #0]
 800f38a:	2b01      	cmp	r3, #1
 800f38c:	d108      	bne.n	800f3a0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800f38e:	4b06      	ldr	r3, [pc, #24]	@ (800f3a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800f390:	880c      	ldrh	r4, [r1, #0]
 800f392:	881b      	ldrh	r3, [r3, #0]
 800f394:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f398:	3b01      	subs	r3, #1
 800f39a:	1b1b      	subs	r3, r3, r4
 800f39c:	8003      	strh	r3, [r0, #0]
 800f39e:	800a      	strh	r2, [r1, #0]
 800f3a0:	bd10      	pop	{r4, pc}
 800f3a2:	bf00      	nop
 800f3a4:	2004bf90 	.word	0x2004bf90
 800f3a8:	2004bf8c 	.word	0x2004bf8c

0800f3ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800f3ac:	b510      	push	{r4, lr}
 800f3ae:	4b0a      	ldr	r3, [pc, #40]	@ (800f3d8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800f3b0:	781b      	ldrb	r3, [r3, #0]
 800f3b2:	2b01      	cmp	r3, #1
 800f3b4:	d10e      	bne.n	800f3d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800f3b6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800f3ba:	8843      	ldrh	r3, [r0, #2]
 800f3bc:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f3c0:	18ca      	adds	r2, r1, r3
 800f3c2:	4b06      	ldr	r3, [pc, #24]	@ (800f3dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800f3c4:	8044      	strh	r4, [r0, #2]
 800f3c6:	881b      	ldrh	r3, [r3, #0]
 800f3c8:	1a9b      	subs	r3, r3, r2
 800f3ca:	8003      	strh	r3, [r0, #0]
 800f3cc:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f3d0:	8081      	strh	r1, [r0, #4]
 800f3d2:	80c3      	strh	r3, [r0, #6]
 800f3d4:	bd10      	pop	{r4, pc}
 800f3d6:	bf00      	nop
 800f3d8:	2004bf90 	.word	0x2004bf90
 800f3dc:	2004bf8c 	.word	0x2004bf8c

0800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800f3e0:	4b08      	ldr	r3, [pc, #32]	@ (800f404 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800f3e2:	781b      	ldrb	r3, [r3, #0]
 800f3e4:	2b01      	cmp	r3, #1
 800f3e6:	d10c      	bne.n	800f402 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800f3e8:	8803      	ldrh	r3, [r0, #0]
 800f3ea:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800f3ee:	8842      	ldrh	r2, [r0, #2]
 800f3f0:	8002      	strh	r2, [r0, #0]
 800f3f2:	185a      	adds	r2, r3, r1
 800f3f4:	4b04      	ldr	r3, [pc, #16]	@ (800f408 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800f3f6:	881b      	ldrh	r3, [r3, #0]
 800f3f8:	1a9b      	subs	r3, r3, r2
 800f3fa:	8043      	strh	r3, [r0, #2]
 800f3fc:	88c3      	ldrh	r3, [r0, #6]
 800f3fe:	80c1      	strh	r1, [r0, #6]
 800f400:	8083      	strh	r3, [r0, #4]
 800f402:	4770      	bx	lr
 800f404:	2004bf90 	.word	0x2004bf90
 800f408:	2004bf8c 	.word	0x2004bf8c

0800f40c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800f40c:	b510      	push	{r4, lr}
 800f40e:	4b07      	ldr	r3, [pc, #28]	@ (800f42c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800f410:	781b      	ldrb	r3, [r3, #0]
 800f412:	2b01      	cmp	r3, #1
 800f414:	d108      	bne.n	800f428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800f416:	f9b1 3000 	ldrsh.w	r3, [r1]
 800f41a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f41e:	8003      	strh	r3, [r0, #0]
 800f420:	8893      	ldrh	r3, [r2, #4]
 800f422:	3b01      	subs	r3, #1
 800f424:	1b1b      	subs	r3, r3, r4
 800f426:	800b      	strh	r3, [r1, #0]
 800f428:	bd10      	pop	{r4, pc}
 800f42a:	bf00      	nop
 800f42c:	2004bf90 	.word	0x2004bf90

0800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800f430:	b510      	push	{r4, lr}
 800f432:	4b0a      	ldr	r3, [pc, #40]	@ (800f45c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800f434:	460a      	mov	r2, r1
 800f436:	781b      	ldrb	r3, [r3, #0]
 800f438:	2b01      	cmp	r3, #1
 800f43a:	d10d      	bne.n	800f458 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800f43c:	8881      	ldrh	r1, [r0, #4]
 800f43e:	8803      	ldrh	r3, [r0, #0]
 800f440:	440b      	add	r3, r1
 800f442:	4601      	mov	r1, r0
 800f444:	3b01      	subs	r3, #1
 800f446:	f821 3b02 	strh.w	r3, [r1], #2
 800f44a:	f7ff ffdf 	bl	800f40c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800f44e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f452:	88c2      	ldrh	r2, [r0, #6]
 800f454:	80c3      	strh	r3, [r0, #6]
 800f456:	8082      	strh	r2, [r0, #4]
 800f458:	bd10      	pop	{r4, pc}
 800f45a:	bf00      	nop
 800f45c:	2004bf90 	.word	0x2004bf90

0800f460 <_ZN8touchgfx11Application13requestRedrawEv>:
 800f460:	2100      	movs	r1, #0
 800f462:	4b06      	ldr	r3, [pc, #24]	@ (800f47c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800f464:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800f468:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f46c:	4b04      	ldr	r3, [pc, #16]	@ (800f480 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800f46e:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800f472:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f476:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800f47a:	4770      	bx	lr
 800f47c:	2004bf8c 	.word	0x2004bf8c
 800f480:	2004bf8e 	.word	0x2004bf8e

0800f484 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800f484:	4b03      	ldr	r3, [pc, #12]	@ (800f494 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800f486:	6818      	ldr	r0, [r3, #0]
 800f488:	b110      	cbz	r0, 800f490 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800f48a:	6803      	ldr	r3, [r0, #0]
 800f48c:	699b      	ldr	r3, [r3, #24]
 800f48e:	4718      	bx	r3
 800f490:	4770      	bx	lr
 800f492:	bf00      	nop
 800f494:	2004bfd4 	.word	0x2004bfd4

0800f498 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800f498:	4770      	bx	lr
	...

0800f49c <_ZN8touchgfx11Application4drawEv>:
 800f49c:	b507      	push	{r0, r1, r2, lr}
 800f49e:	2100      	movs	r1, #0
 800f4a0:	4b08      	ldr	r3, [pc, #32]	@ (800f4c4 <_ZN8touchgfx11Application4drawEv+0x28>)
 800f4a2:	9100      	str	r1, [sp, #0]
 800f4a4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f4a8:	4b07      	ldr	r3, [pc, #28]	@ (800f4c8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800f4aa:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f4ae:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f4b2:	4669      	mov	r1, sp
 800f4b4:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f4b8:	6803      	ldr	r3, [r0, #0]
 800f4ba:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800f4bc:	4798      	blx	r3
 800f4be:	b003      	add	sp, #12
 800f4c0:	f85d fb04 	ldr.w	pc, [sp], #4
 800f4c4:	2004bf8c 	.word	0x2004bf8c
 800f4c8:	2004bf8e 	.word	0x2004bf8e

0800f4cc <_ZN8touchgfx11Application10invalidateEv>:
 800f4cc:	2100      	movs	r1, #0
 800f4ce:	4b09      	ldr	r3, [pc, #36]	@ (800f4f4 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800f4d0:	b082      	sub	sp, #8
 800f4d2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f4d6:	4b08      	ldr	r3, [pc, #32]	@ (800f4f8 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800f4d8:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f4dc:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f4e0:	9100      	str	r1, [sp, #0]
 800f4e2:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f4e6:	6803      	ldr	r3, [r0, #0]
 800f4e8:	aa02      	add	r2, sp, #8
 800f4ea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800f4ec:	e912 0006 	ldmdb	r2, {r1, r2}
 800f4f0:	b002      	add	sp, #8
 800f4f2:	4718      	bx	r3
 800f4f4:	2004bf8c 	.word	0x2004bf8c
 800f4f8:	2004bf8e 	.word	0x2004bf8e

0800f4fc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800f4fc:	4b03      	ldr	r3, [pc, #12]	@ (800f50c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800f4fe:	6818      	ldr	r0, [r3, #0]
 800f500:	b110      	cbz	r0, 800f508 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800f502:	6803      	ldr	r3, [r0, #0]
 800f504:	69db      	ldr	r3, [r3, #28]
 800f506:	4718      	bx	r3
 800f508:	4770      	bx	lr
 800f50a:	bf00      	nop
 800f50c:	2004bfd4 	.word	0x2004bfd4

0800f510 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800f510:	4b03      	ldr	r3, [pc, #12]	@ (800f520 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800f512:	6818      	ldr	r0, [r3, #0]
 800f514:	b110      	cbz	r0, 800f51c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800f516:	6803      	ldr	r3, [r0, #0]
 800f518:	6a1b      	ldr	r3, [r3, #32]
 800f51a:	4718      	bx	r3
 800f51c:	4770      	bx	lr
 800f51e:	bf00      	nop
 800f520:	2004bfd4 	.word	0x2004bfd4

0800f524 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800f524:	2300      	movs	r3, #0
 800f526:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800f52a:	4770      	bx	lr

0800f52c <_ZN8touchgfx11Application14handleKeyEventEh>:
 800f52c:	4b03      	ldr	r3, [pc, #12]	@ (800f53c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800f52e:	6818      	ldr	r0, [r3, #0]
 800f530:	b110      	cbz	r0, 800f538 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800f532:	6803      	ldr	r3, [r0, #0]
 800f534:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f536:	4718      	bx	r3
 800f538:	4770      	bx	lr
 800f53a:	bf00      	nop
 800f53c:	2004bfd4 	.word	0x2004bfd4

0800f540 <_ZN8touchgfx11ApplicationD1Ev>:
 800f540:	4770      	bx	lr

0800f542 <_ZN8touchgfx11ApplicationD0Ev>:
 800f542:	b510      	push	{r4, lr}
 800f544:	4604      	mov	r4, r0
 800f546:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800f54a:	f015 fbc6 	bl	8024cda <_ZdlPvj>
 800f54e:	4620      	mov	r0, r4
 800f550:	bd10      	pop	{r4, pc}

0800f552 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800f552:	b510      	push	{r4, lr}
 800f554:	f9b1 4000 	ldrsh.w	r4, [r1]
 800f558:	888a      	ldrh	r2, [r1, #4]
 800f55a:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f55e:	4422      	add	r2, r4
 800f560:	b212      	sxth	r2, r2
 800f562:	4293      	cmp	r3, r2
 800f564:	da15      	bge.n	800f592 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f566:	8882      	ldrh	r2, [r0, #4]
 800f568:	4413      	add	r3, r2
 800f56a:	b21b      	sxth	r3, r3
 800f56c:	429c      	cmp	r4, r3
 800f56e:	da10      	bge.n	800f592 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f570:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800f574:	88c9      	ldrh	r1, [r1, #6]
 800f576:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800f57a:	4419      	add	r1, r3
 800f57c:	b209      	sxth	r1, r1
 800f57e:	428a      	cmp	r2, r1
 800f580:	da07      	bge.n	800f592 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f582:	88c0      	ldrh	r0, [r0, #6]
 800f584:	4410      	add	r0, r2
 800f586:	b200      	sxth	r0, r0
 800f588:	4283      	cmp	r3, r0
 800f58a:	bfac      	ite	ge
 800f58c:	2000      	movge	r0, #0
 800f58e:	2001      	movlt	r0, #1
 800f590:	bd10      	pop	{r4, pc}
 800f592:	2000      	movs	r0, #0
 800f594:	e7fc      	b.n	800f590 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800f596 <_ZN8touchgfx4Rect10restrictToEss>:
 800f596:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f59a:	b510      	push	{r4, lr}
 800f59c:	2b00      	cmp	r3, #0
 800f59e:	da04      	bge.n	800f5aa <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800f5a0:	8884      	ldrh	r4, [r0, #4]
 800f5a2:	4423      	add	r3, r4
 800f5a4:	8083      	strh	r3, [r0, #4]
 800f5a6:	2300      	movs	r3, #0
 800f5a8:	8003      	strh	r3, [r0, #0]
 800f5aa:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f5ae:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f5b2:	1b09      	subs	r1, r1, r4
 800f5b4:	428b      	cmp	r3, r1
 800f5b6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800f5ba:	bfc8      	it	gt
 800f5bc:	8081      	strhgt	r1, [r0, #4]
 800f5be:	2b00      	cmp	r3, #0
 800f5c0:	da04      	bge.n	800f5cc <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800f5c2:	88c1      	ldrh	r1, [r0, #6]
 800f5c4:	440b      	add	r3, r1
 800f5c6:	80c3      	strh	r3, [r0, #6]
 800f5c8:	2300      	movs	r3, #0
 800f5ca:	8043      	strh	r3, [r0, #2]
 800f5cc:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f5d0:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800f5d4:	1a52      	subs	r2, r2, r1
 800f5d6:	4293      	cmp	r3, r2
 800f5d8:	bfc8      	it	gt
 800f5da:	80c2      	strhgt	r2, [r0, #6]
 800f5dc:	bd10      	pop	{r4, pc}
	...

0800f5e0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800f5e0:	b510      	push	{r4, lr}
 800f5e2:	460c      	mov	r4, r1
 800f5e4:	4b0f      	ldr	r3, [pc, #60]	@ (800f624 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800f5e6:	4620      	mov	r0, r4
 800f5e8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f5ec:	4b0e      	ldr	r3, [pc, #56]	@ (800f628 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800f5ee:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f5f2:	f7ff ffd0 	bl	800f596 <_ZN8touchgfx4Rect10restrictToEss>
 800f5f6:	4b0d      	ldr	r3, [pc, #52]	@ (800f62c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800f5f8:	6818      	ldr	r0, [r3, #0]
 800f5fa:	b190      	cbz	r0, 800f622 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800f5fc:	6803      	ldr	r3, [r0, #0]
 800f5fe:	4621      	mov	r1, r4
 800f600:	689b      	ldr	r3, [r3, #8]
 800f602:	4798      	blx	r3
 800f604:	4b0a      	ldr	r3, [pc, #40]	@ (800f630 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800f606:	6818      	ldr	r0, [r3, #0]
 800f608:	b118      	cbz	r0, 800f612 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800f60a:	6803      	ldr	r3, [r0, #0]
 800f60c:	4621      	mov	r1, r4
 800f60e:	689b      	ldr	r3, [r3, #8]
 800f610:	4798      	blx	r3
 800f612:	4b08      	ldr	r3, [pc, #32]	@ (800f634 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800f614:	4621      	mov	r1, r4
 800f616:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f61a:	6818      	ldr	r0, [r3, #0]
 800f61c:	6803      	ldr	r3, [r0, #0]
 800f61e:	69db      	ldr	r3, [r3, #28]
 800f620:	4718      	bx	r3
 800f622:	bd10      	pop	{r4, pc}
 800f624:	2004bf8e 	.word	0x2004bf8e
 800f628:	2004bf8c 	.word	0x2004bf8c
 800f62c:	2004bfd4 	.word	0x2004bfd4
 800f630:	2004bfd0 	.word	0x2004bfd0
 800f634:	2004bf98 	.word	0x2004bf98

0800f638 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800f638:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f63a:	4606      	mov	r6, r0
 800f63c:	4608      	mov	r0, r1
 800f63e:	460f      	mov	r7, r1
 800f640:	f7fd ff8f 	bl	800d562 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f644:	b9e8      	cbnz	r0, 800f682 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f646:	f9b7 5000 	ldrsh.w	r5, [r7]
 800f64a:	f9b6 4000 	ldrsh.w	r4, [r6]
 800f64e:	42a5      	cmp	r5, r4
 800f650:	db17      	blt.n	800f682 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f652:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800f656:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800f65a:	429a      	cmp	r2, r3
 800f65c:	db11      	blt.n	800f682 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f65e:	88b9      	ldrh	r1, [r7, #4]
 800f660:	440d      	add	r5, r1
 800f662:	88b1      	ldrh	r1, [r6, #4]
 800f664:	b22d      	sxth	r5, r5
 800f666:	440c      	add	r4, r1
 800f668:	b224      	sxth	r4, r4
 800f66a:	42a5      	cmp	r5, r4
 800f66c:	dc09      	bgt.n	800f682 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f66e:	88f8      	ldrh	r0, [r7, #6]
 800f670:	4410      	add	r0, r2
 800f672:	88f2      	ldrh	r2, [r6, #6]
 800f674:	b200      	sxth	r0, r0
 800f676:	4413      	add	r3, r2
 800f678:	b21b      	sxth	r3, r3
 800f67a:	4298      	cmp	r0, r3
 800f67c:	bfcc      	ite	gt
 800f67e:	2000      	movgt	r0, #0
 800f680:	2001      	movle	r0, #1
 800f682:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f684 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800f684:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f686:	4604      	mov	r4, r0
 800f688:	4608      	mov	r0, r1
 800f68a:	460d      	mov	r5, r1
 800f68c:	f7fd ff69 	bl	800d562 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f690:	b978      	cbnz	r0, 800f6b2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800f692:	4620      	mov	r0, r4
 800f694:	f7fd ff65 	bl	800d562 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f698:	f9b5 6000 	ldrsh.w	r6, [r5]
 800f69c:	b150      	cbz	r0, 800f6b4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800f69e:	8026      	strh	r6, [r4, #0]
 800f6a0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800f6a4:	8063      	strh	r3, [r4, #2]
 800f6a6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800f6aa:	80a3      	strh	r3, [r4, #4]
 800f6ac:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f6b0:	80e3      	strh	r3, [r4, #6]
 800f6b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f6b4:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f6b8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f6bc:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800f6c0:	42b1      	cmp	r1, r6
 800f6c2:	460f      	mov	r7, r1
 800f6c4:	bfa8      	it	ge
 800f6c6:	4637      	movge	r7, r6
 800f6c8:	4293      	cmp	r3, r2
 800f6ca:	4618      	mov	r0, r3
 800f6cc:	bfa8      	it	ge
 800f6ce:	4610      	movge	r0, r2
 800f6d0:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800f6d4:	88ed      	ldrh	r5, [r5, #6]
 800f6d6:	4466      	add	r6, ip
 800f6d8:	442a      	add	r2, r5
 800f6da:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800f6de:	88e5      	ldrh	r5, [r4, #6]
 800f6e0:	4461      	add	r1, ip
 800f6e2:	442b      	add	r3, r5
 800f6e4:	b236      	sxth	r6, r6
 800f6e6:	b209      	sxth	r1, r1
 800f6e8:	b212      	sxth	r2, r2
 800f6ea:	b21b      	sxth	r3, r3
 800f6ec:	428e      	cmp	r6, r1
 800f6ee:	bfac      	ite	ge
 800f6f0:	ebc7 0106 	rsbge	r1, r7, r6
 800f6f4:	ebc7 0101 	rsblt	r1, r7, r1
 800f6f8:	429a      	cmp	r2, r3
 800f6fa:	bfac      	ite	ge
 800f6fc:	ebc0 0202 	rsbge	r2, r0, r2
 800f700:	ebc0 0203 	rsblt	r2, r0, r3
 800f704:	8027      	strh	r7, [r4, #0]
 800f706:	8060      	strh	r0, [r4, #2]
 800f708:	80a1      	strh	r1, [r4, #4]
 800f70a:	80e2      	strh	r2, [r4, #6]
 800f70c:	e7d1      	b.n	800f6b2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800f710 <_ZN8touchgfx11Application11getInstanceEv>:
 800f710:	4b01      	ldr	r3, [pc, #4]	@ (800f718 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800f712:	6818      	ldr	r0, [r3, #0]
 800f714:	4770      	bx	lr
 800f716:	bf00      	nop
 800f718:	2004bfe4 	.word	0x2004bfe4

0800f71c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800f71c:	2300      	movs	r3, #0
 800f71e:	b510      	push	{r4, lr}
 800f720:	4604      	mov	r4, r0
 800f722:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800f726:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800f72a:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800f72e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800f732:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800f736:	429a      	cmp	r2, r3
 800f738:	d90e      	bls.n	800f758 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800f73a:	18e2      	adds	r2, r4, r3
 800f73c:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800f740:	b122      	cbz	r2, 800f74c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800f742:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800f746:	6803      	ldr	r3, [r0, #0]
 800f748:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f74a:	4798      	blx	r3
 800f74c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800f750:	3301      	adds	r3, #1
 800f752:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800f756:	e7ea      	b.n	800f72e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800f758:	bd10      	pop	{r4, pc}

0800f75a <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800f75a:	2300      	movs	r3, #0
 800f75c:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800f760:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800f764:	30a4      	adds	r0, #164	@ 0xa4
 800f766:	f802 3b01 	strb.w	r3, [r2], #1
 800f76a:	4282      	cmp	r2, r0
 800f76c:	d1fb      	bne.n	800f766 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800f76e:	4770      	bx	lr

0800f770 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800f770:	b570      	push	{r4, r5, r6, lr}
 800f772:	4c0b      	ldr	r4, [pc, #44]	@ (800f7a0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800f774:	4605      	mov	r5, r0
 800f776:	6820      	ldr	r0, [r4, #0]
 800f778:	460e      	mov	r6, r1
 800f77a:	b110      	cbz	r0, 800f782 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800f77c:	6803      	ldr	r3, [r0, #0]
 800f77e:	695b      	ldr	r3, [r3, #20]
 800f780:	4798      	blx	r3
 800f782:	1d28      	adds	r0, r5, #4
 800f784:	f7ff ffe9 	bl	800f75a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800f788:	6026      	str	r6, [r4, #0]
 800f78a:	6833      	ldr	r3, [r6, #0]
 800f78c:	4630      	mov	r0, r6
 800f78e:	68db      	ldr	r3, [r3, #12]
 800f790:	4798      	blx	r3
 800f792:	682b      	ldr	r3, [r5, #0]
 800f794:	4628      	mov	r0, r5
 800f796:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f79a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f79c:	4718      	bx	r3
 800f79e:	bf00      	nop
 800f7a0:	2004bfd4 	.word	0x2004bfd4

0800f7a4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800f7a4:	2300      	movs	r3, #0
 800f7a6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f7a8:	461a      	mov	r2, r3
 800f7aa:	461c      	mov	r4, r3
 800f7ac:	461d      	mov	r5, r3
 800f7ae:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800f7b2:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800f7b6:	459c      	cmp	ip, r3
 800f7b8:	dd1a      	ble.n	800f7f0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800f7ba:	18c6      	adds	r6, r0, r3
 800f7bc:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800f7c0:	b16e      	cbz	r6, 800f7de <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800f7c2:	429a      	cmp	r2, r3
 800f7c4:	d008      	beq.n	800f7d8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800f7c6:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800f7ca:	fa1f fe82 	uxth.w	lr, r2
 800f7ce:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800f7d2:	1887      	adds	r7, r0, r2
 800f7d4:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 800f7d8:	3201      	adds	r2, #1
 800f7da:	3301      	adds	r3, #1
 800f7dc:	e7eb      	b.n	800f7b6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800f7de:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 800f7e2:	4299      	cmp	r1, r3
 800f7e4:	bfa8      	it	ge
 800f7e6:	3501      	addge	r5, #1
 800f7e8:	429e      	cmp	r6, r3
 800f7ea:	bfc8      	it	gt
 800f7ec:	3401      	addgt	r4, #1
 800f7ee:	e7f4      	b.n	800f7da <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800f7f0:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 800f7f4:	1b49      	subs	r1, r1, r5
 800f7f6:	1b1b      	subs	r3, r3, r4
 800f7f8:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 800f7fc:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800f800:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800f804:	4293      	cmp	r3, r2
 800f806:	dd03      	ble.n	800f810 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800f808:	3b01      	subs	r3, #1
 800f80a:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800f80e:	e7f7      	b.n	800f800 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800f810:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800f814 <_ZN8touchgfx11Application15handleTickEventEv>:
 800f814:	b570      	push	{r4, r5, r6, lr}
 800f816:	4d16      	ldr	r5, [pc, #88]	@ (800f870 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800f818:	4604      	mov	r4, r0
 800f81a:	6828      	ldr	r0, [r5, #0]
 800f81c:	b140      	cbz	r0, 800f830 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800f81e:	7a03      	ldrb	r3, [r0, #8]
 800f820:	b933      	cbnz	r3, 800f830 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800f822:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800f826:	6803      	ldr	r3, [r0, #0]
 800f828:	689b      	ldr	r3, [r3, #8]
 800f82a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f82e:	4718      	bx	r3
 800f830:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 800f834:	4e0f      	ldr	r6, [pc, #60]	@ (800f874 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800f836:	b973      	cbnz	r3, 800f856 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f838:	b168      	cbz	r0, 800f856 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f83a:	7a03      	ldrb	r3, [r0, #8]
 800f83c:	b15b      	cbz	r3, 800f856 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f83e:	6830      	ldr	r0, [r6, #0]
 800f840:	b110      	cbz	r0, 800f848 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800f842:	6803      	ldr	r3, [r0, #0]
 800f844:	691b      	ldr	r3, [r3, #16]
 800f846:	4798      	blx	r3
 800f848:	6828      	ldr	r0, [r5, #0]
 800f84a:	6803      	ldr	r3, [r0, #0]
 800f84c:	68db      	ldr	r3, [r3, #12]
 800f84e:	4798      	blx	r3
 800f850:	2301      	movs	r3, #1
 800f852:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800f856:	3404      	adds	r4, #4
 800f858:	4620      	mov	r0, r4
 800f85a:	f7ff ff5f 	bl	800f71c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800f85e:	4620      	mov	r0, r4
 800f860:	f7ff ffa0 	bl	800f7a4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800f864:	6830      	ldr	r0, [r6, #0]
 800f866:	b110      	cbz	r0, 800f86e <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800f868:	6803      	ldr	r3, [r0, #0]
 800f86a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f86c:	e7dd      	b.n	800f82a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800f86e:	bd70      	pop	{r4, r5, r6, pc}
 800f870:	2004bfd8 	.word	0x2004bfd8
 800f874:	2004bfd4 	.word	0x2004bfd4

0800f878 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800f878:	4603      	mov	r3, r0
 800f87a:	2200      	movs	r2, #0
 800f87c:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800f880:	801a      	strh	r2, [r3, #0]
 800f882:	805a      	strh	r2, [r3, #2]
 800f884:	809a      	strh	r2, [r3, #4]
 800f886:	80da      	strh	r2, [r3, #6]
 800f888:	3308      	adds	r3, #8
 800f88a:	428b      	cmp	r3, r1
 800f88c:	d1f8      	bne.n	800f880 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800f88e:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800f892:	4770      	bx	lr

0800f894 <_ZN8touchgfx11ApplicationC1Ev>:
 800f894:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f896:	4606      	mov	r6, r0
 800f898:	4604      	mov	r4, r0
 800f89a:	2500      	movs	r5, #0
 800f89c:	4b1b      	ldr	r3, [pc, #108]	@ (800f90c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800f89e:	22a8      	movs	r2, #168	@ 0xa8
 800f8a0:	f846 3b04 	str.w	r3, [r6], #4
 800f8a4:	2100      	movs	r1, #0
 800f8a6:	4630      	mov	r0, r6
 800f8a8:	f015 fd50 	bl	802534c <memset>
 800f8ac:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 800f8b0:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800f8b4:	f7ff ffe0 	bl	800f878 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800f8b8:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800f8bc:	f7ff ffdc 	bl	800f878 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800f8c0:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 800f8c4:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 800f8c8:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 800f8cc:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 800f8d0:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 800f8d4:	490e      	ldr	r1, [pc, #56]	@ (800f910 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800f8d6:	480f      	ldr	r0, [pc, #60]	@ (800f914 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800f8d8:	f002 fd04 	bl	80122e4 <CRC_Lock>
 800f8dc:	4f0e      	ldr	r7, [pc, #56]	@ (800f918 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800f8de:	4b0f      	ldr	r3, [pc, #60]	@ (800f91c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800f8e0:	b158      	cbz	r0, 800f8fa <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800f8e2:	801d      	strh	r5, [r3, #0]
 800f8e4:	2300      	movs	r3, #0
 800f8e6:	4a0e      	ldr	r2, [pc, #56]	@ (800f920 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800f8e8:	4630      	mov	r0, r6
 800f8ea:	6013      	str	r3, [r2, #0]
 800f8ec:	4a0d      	ldr	r2, [pc, #52]	@ (800f924 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800f8ee:	603b      	str	r3, [r7, #0]
 800f8f0:	6013      	str	r3, [r2, #0]
 800f8f2:	f7ff ff32 	bl	800f75a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800f8f6:	4620      	mov	r0, r4
 800f8f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f8fa:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800f8fe:	2002      	movs	r0, #2
 800f900:	801a      	strh	r2, [r3, #0]
 800f902:	6038      	str	r0, [r7, #0]
 800f904:	f001 fa5a 	bl	8010dbc <_ZN8touchgfx6Screen4drawEv>
 800f908:	e7ec      	b.n	800f8e4 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800f90a:	bf00      	nop
 800f90c:	080272c8 	.word	0x080272c8
 800f910:	b5e8b5cd 	.word	0xb5e8b5cd
 800f914:	f407a5c2 	.word	0xf407a5c2
 800f918:	2004bfd4 	.word	0x2004bfd4
 800f91c:	2000005c 	.word	0x2000005c
 800f920:	2004bfe4 	.word	0x2004bfe4
 800f924:	2004bfd8 	.word	0x2004bfd8

0800f928 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800f928:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 800f92c:	b510      	push	{r4, lr}
 800f92e:	3b01      	subs	r3, #1
 800f930:	b29b      	uxth	r3, r3
 800f932:	428b      	cmp	r3, r1
 800f934:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800f938:	d908      	bls.n	800f94c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800f93a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800f93e:	681a      	ldr	r2, [r3, #0]
 800f940:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800f944:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800f948:	685a      	ldr	r2, [r3, #4]
 800f94a:	6062      	str	r2, [r4, #4]
 800f94c:	bd10      	pop	{r4, pc}
	...

0800f950 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800f950:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f954:	4b8f      	ldr	r3, [pc, #572]	@ (800fb94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 800f956:	b08f      	sub	sp, #60	@ 0x3c
 800f958:	ac0a      	add	r4, sp, #40	@ 0x28
 800f95a:	e884 0006 	stmia.w	r4, {r1, r2}
 800f95e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f962:	4b8d      	ldr	r3, [pc, #564]	@ (800fb98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 800f964:	4683      	mov	fp, r0
 800f966:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f96a:	4620      	mov	r0, r4
 800f96c:	f7ff fe13 	bl	800f596 <_ZN8touchgfx4Rect10restrictToEss>
 800f970:	4620      	mov	r0, r4
 800f972:	f7fd fdf6 	bl	800d562 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f976:	2800      	cmp	r0, #0
 800f978:	d16a      	bne.n	800fa50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800f97a:	9403      	str	r4, [sp, #12]
 800f97c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800f980:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800f984:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800f988:	35a4      	adds	r5, #164	@ 0xa4
 800f98a:	9301      	str	r3, [sp, #4]
 800f98c:	b15c      	cbz	r4, 800f9a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800f98e:	4629      	mov	r1, r5
 800f990:	9803      	ldr	r0, [sp, #12]
 800f992:	f7ff fe51 	bl	800f638 <_ZNK8touchgfx4Rect8includesERKS0_>
 800f996:	3c01      	subs	r4, #1
 800f998:	b118      	cbz	r0, 800f9a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 800f99a:	b2a1      	uxth	r1, r4
 800f99c:	9801      	ldr	r0, [sp, #4]
 800f99e:	f7ff ffc3 	bl	800f928 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f9a2:	3d08      	subs	r5, #8
 800f9a4:	e7f2      	b.n	800f98c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 800f9a6:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 800f9aa:	f10a 33ff 	add.w	r3, sl, #4294967295
 800f9ae:	9302      	str	r3, [sp, #8]
 800f9b0:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800f9b4:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800f9b8:	f8cd a010 	str.w	sl, [sp, #16]
 800f9bc:	9306      	str	r3, [sp, #24]
 800f9be:	445c      	add	r4, fp
 800f9c0:	2500      	movs	r5, #0
 800f9c2:	4626      	mov	r6, r4
 800f9c4:	462f      	mov	r7, r5
 800f9c6:	f8cd a014 	str.w	sl, [sp, #20]
 800f9ca:	9b05      	ldr	r3, [sp, #20]
 800f9cc:	2b00      	cmp	r3, #0
 800f9ce:	d073      	beq.n	800fab8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800f9d0:	9903      	ldr	r1, [sp, #12]
 800f9d2:	4630      	mov	r0, r6
 800f9d4:	f7ff fdbd 	bl	800f552 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f9d8:	b350      	cbz	r0, 800fa30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800f9da:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 800f9de:	f9b6 c000 	ldrsh.w	ip, [r6]
 800f9e2:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 800f9e6:	45e6      	cmp	lr, ip
 800f9e8:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800f9ec:	db33      	blt.n	800fa56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800f9ee:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800f9f2:	88b3      	ldrh	r3, [r6, #4]
 800f9f4:	4472      	add	r2, lr
 800f9f6:	4463      	add	r3, ip
 800f9f8:	b212      	sxth	r2, r2
 800f9fa:	b21b      	sxth	r3, r3
 800f9fc:	429a      	cmp	r2, r3
 800f9fe:	dc2a      	bgt.n	800fa56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800fa00:	88f3      	ldrh	r3, [r6, #6]
 800fa02:	fa1f f289 	uxth.w	r2, r9
 800fa06:	4413      	add	r3, r2
 800fa08:	b29b      	uxth	r3, r3
 800fa0a:	45c8      	cmp	r8, r9
 800fa0c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800fa10:	fa1f fc88 	uxth.w	ip, r8
 800fa14:	fa0f fe83 	sxth.w	lr, r3
 800fa18:	db0f      	blt.n	800fa3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800fa1a:	eba3 030c 	sub.w	r3, r3, ip
 800fa1e:	1ac9      	subs	r1, r1, r3
 800fa20:	b209      	sxth	r1, r1
 800fa22:	2900      	cmp	r1, #0
 800fa24:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800fa28:	dd12      	ble.n	800fa50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800fa2a:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 800fa2e:	4605      	mov	r5, r0
 800fa30:	9b05      	ldr	r3, [sp, #20]
 800fa32:	3e08      	subs	r6, #8
 800fa34:	3b01      	subs	r3, #1
 800fa36:	9305      	str	r3, [sp, #20]
 800fa38:	e7c7      	b.n	800f9ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800fa3a:	4461      	add	r1, ip
 800fa3c:	b209      	sxth	r1, r1
 800fa3e:	4571      	cmp	r1, lr
 800fa40:	dc38      	bgt.n	800fab4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800fa42:	eba2 020c 	sub.w	r2, r2, ip
 800fa46:	b212      	sxth	r2, r2
 800fa48:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 800fa4c:	2a00      	cmp	r2, #0
 800fa4e:	dcee      	bgt.n	800fa2e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800fa50:	b00f      	add	sp, #60	@ 0x3c
 800fa52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fa56:	45c8      	cmp	r8, r9
 800fa58:	db2c      	blt.n	800fab4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800fa5a:	88f3      	ldrh	r3, [r6, #6]
 800fa5c:	4499      	add	r9, r3
 800fa5e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 800fa62:	fa0f f989 	sxth.w	r9, r9
 800fa66:	4498      	add	r8, r3
 800fa68:	fa0f f888 	sxth.w	r8, r8
 800fa6c:	45c1      	cmp	r9, r8
 800fa6e:	db21      	blt.n	800fab4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800fa70:	88b3      	ldrh	r3, [r6, #4]
 800fa72:	fa1f f28c 	uxth.w	r2, ip
 800fa76:	4413      	add	r3, r2
 800fa78:	b29b      	uxth	r3, r3
 800fa7a:	45e6      	cmp	lr, ip
 800fa7c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 800fa80:	fa1f f88e 	uxth.w	r8, lr
 800fa84:	fa0f f983 	sxth.w	r9, r3
 800fa88:	db0a      	blt.n	800faa0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 800fa8a:	eba3 0308 	sub.w	r3, r3, r8
 800fa8e:	1ac9      	subs	r1, r1, r3
 800fa90:	b209      	sxth	r1, r1
 800fa92:	2900      	cmp	r1, #0
 800fa94:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 800fa98:	ddda      	ble.n	800fa50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800fa9a:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800fa9e:	e7c6      	b.n	800fa2e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800faa0:	4441      	add	r1, r8
 800faa2:	b209      	sxth	r1, r1
 800faa4:	4549      	cmp	r1, r9
 800faa6:	dc05      	bgt.n	800fab4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800faa8:	eba2 0208 	sub.w	r2, r2, r8
 800faac:	b212      	sxth	r2, r2
 800faae:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800fab2:	e7cb      	b.n	800fa4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800fab4:	4607      	mov	r7, r0
 800fab6:	e7bb      	b.n	800fa30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800fab8:	2d00      	cmp	r5, #0
 800faba:	d181      	bne.n	800f9c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 800fabc:	2f00      	cmp	r7, #0
 800fabe:	f000 81de 	beq.w	800fe7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52e>
 800fac2:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 800fac6:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 800faca:	b2b3      	uxth	r3, r6
 800facc:	9305      	str	r3, [sp, #20]
 800face:	9a05      	ldr	r2, [sp, #20]
 800fad0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800fad4:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 800fad8:	4413      	add	r3, r2
 800fada:	b2ba      	uxth	r2, r7
 800fadc:	4492      	add	sl, r2
 800fade:	b29b      	uxth	r3, r3
 800fae0:	fa1f fa8a 	uxth.w	sl, sl
 800fae4:	fa0f f883 	sxth.w	r8, r3
 800fae8:	fa0f f98a 	sxth.w	r9, sl
 800faec:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800faf0:	9b04      	ldr	r3, [sp, #16]
 800faf2:	2b00      	cmp	r3, #0
 800faf4:	d052      	beq.n	800fb9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800faf6:	9903      	ldr	r1, [sp, #12]
 800faf8:	4620      	mov	r0, r4
 800fafa:	f7ff fd2a 	bl	800f552 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800fafe:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800fb02:	b1c0      	cbz	r0, 800fb36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800fb04:	f9b4 e000 	ldrsh.w	lr, [r4]
 800fb08:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fb0c:	4576      	cmp	r6, lr
 800fb0e:	dc22      	bgt.n	800fb56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800fb10:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800fb14:	44f4      	add	ip, lr
 800fb16:	fa0f fc8c 	sxth.w	ip, ip
 800fb1a:	45e0      	cmp	r8, ip
 800fb1c:	db1b      	blt.n	800fb56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800fb1e:	428f      	cmp	r7, r1
 800fb20:	fa1f fc81 	uxth.w	ip, r1
 800fb24:	88e1      	ldrh	r1, [r4, #6]
 800fb26:	dc0d      	bgt.n	800fb44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800fb28:	ebaa 0c0c 	sub.w	ip, sl, ip
 800fb2c:	eba1 010c 	sub.w	r1, r1, ip
 800fb30:	f8a4 9002 	strh.w	r9, [r4, #2]
 800fb34:	80e1      	strh	r1, [r4, #6]
 800fb36:	4628      	mov	r0, r5
 800fb38:	9904      	ldr	r1, [sp, #16]
 800fb3a:	3c08      	subs	r4, #8
 800fb3c:	3901      	subs	r1, #1
 800fb3e:	9104      	str	r1, [sp, #16]
 800fb40:	4605      	mov	r5, r0
 800fb42:	e7d3      	b.n	800faec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 800fb44:	4461      	add	r1, ip
 800fb46:	b209      	sxth	r1, r1
 800fb48:	4549      	cmp	r1, r9
 800fb4a:	dcf5      	bgt.n	800fb38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800fb4c:	eba2 0c0c 	sub.w	ip, r2, ip
 800fb50:	f8a4 c006 	strh.w	ip, [r4, #6]
 800fb54:	e7ef      	b.n	800fb36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800fb56:	428f      	cmp	r7, r1
 800fb58:	dcee      	bgt.n	800fb38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800fb5a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800fb5e:	4461      	add	r1, ip
 800fb60:	b209      	sxth	r1, r1
 800fb62:	4589      	cmp	r9, r1
 800fb64:	dbe8      	blt.n	800fb38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800fb66:	4576      	cmp	r6, lr
 800fb68:	fa1f fc8e 	uxth.w	ip, lr
 800fb6c:	88a1      	ldrh	r1, [r4, #4]
 800fb6e:	dc07      	bgt.n	800fb80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 800fb70:	eba3 0c0c 	sub.w	ip, r3, ip
 800fb74:	eba1 010c 	sub.w	r1, r1, ip
 800fb78:	f8a4 8000 	strh.w	r8, [r4]
 800fb7c:	80a1      	strh	r1, [r4, #4]
 800fb7e:	e7da      	b.n	800fb36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800fb80:	4461      	add	r1, ip
 800fb82:	b209      	sxth	r1, r1
 800fb84:	4588      	cmp	r8, r1
 800fb86:	dbd7      	blt.n	800fb38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800fb88:	9905      	ldr	r1, [sp, #20]
 800fb8a:	eba1 0c0c 	sub.w	ip, r1, ip
 800fb8e:	f8a4 c004 	strh.w	ip, [r4, #4]
 800fb92:	e7d0      	b.n	800fb36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800fb94:	2004bf8e 	.word	0x2004bf8e
 800fb98:	2004bf8c 	.word	0x2004bf8c
 800fb9c:	2d00      	cmp	r5, #0
 800fb9e:	f000 816e 	beq.w	800fe7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52e>
 800fba2:	9b06      	ldr	r3, [sp, #24]
 800fba4:	445b      	add	r3, fp
 800fba6:	461c      	mov	r4, r3
 800fba8:	9b02      	ldr	r3, [sp, #8]
 800fbaa:	3301      	adds	r3, #1
 800fbac:	f000 8167 	beq.w	800fe7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52e>
 800fbb0:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 800fbb4:	4629      	mov	r1, r5
 800fbb6:	9803      	ldr	r0, [sp, #12]
 800fbb8:	f7ff fd3e 	bl	800f638 <_ZNK8touchgfx4Rect8includesERKS0_>
 800fbbc:	b120      	cbz	r0, 800fbc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 800fbbe:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800fbc2:	9801      	ldr	r0, [sp, #4]
 800fbc4:	f7ff feb0 	bl	800f928 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fbc8:	9903      	ldr	r1, [sp, #12]
 800fbca:	4628      	mov	r0, r5
 800fbcc:	f7ff fcc1 	bl	800f552 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800fbd0:	2800      	cmp	r0, #0
 800fbd2:	f000 809c 	beq.w	800fd0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800fbd6:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 800fbda:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800fbde:	fa1f f189 	uxth.w	r1, r9
 800fbe2:	eb01 0c03 	add.w	ip, r1, r3
 800fbe6:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800fbea:	fa1f fa8c 	uxth.w	sl, ip
 800fbee:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 800fbf2:	9309      	str	r3, [sp, #36]	@ 0x24
 800fbf4:	b283      	uxth	r3, r0
 800fbf6:	eb03 050c 	add.w	r5, r3, ip
 800fbfa:	b2ad      	uxth	r5, r5
 800fbfc:	9505      	str	r5, [sp, #20]
 800fbfe:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800fc02:	4548      	cmp	r0, r9
 800fc04:	9504      	str	r5, [sp, #16]
 800fc06:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 800fc0a:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 800fc0e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 800fc12:	f340 8099 	ble.w	800fd48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 800fc16:	1a5b      	subs	r3, r3, r1
 800fc18:	b29b      	uxth	r3, r3
 800fc1a:	4596      	cmp	lr, r2
 800fc1c:	fa0f f08a 	sxth.w	r0, sl
 800fc20:	b21e      	sxth	r6, r3
 800fc22:	dd2e      	ble.n	800fc82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 800fc24:	9f02      	ldr	r7, [sp, #8]
 800fc26:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 800fc2a:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800fc2e:	9f04      	ldr	r7, [sp, #16]
 800fc30:	fa1f fe8e 	uxth.w	lr, lr
 800fc34:	1a3f      	subs	r7, r7, r0
 800fc36:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 800fc3a:	b292      	uxth	r2, r2
 800fc3c:	ebae 0102 	sub.w	r1, lr, r2
 800fc40:	44a6      	add	lr, r4
 800fc42:	4402      	add	r2, r0
 800fc44:	b289      	uxth	r1, r1
 800fc46:	fa0f fe8e 	sxth.w	lr, lr
 800fc4a:	b212      	sxth	r2, r2
 800fc4c:	b20d      	sxth	r5, r1
 800fc4e:	ebae 0202 	sub.w	r2, lr, r2
 800fc52:	436f      	muls	r7, r5
 800fc54:	4372      	muls	r2, r6
 800fc56:	4297      	cmp	r7, r2
 800fc58:	db09      	blt.n	800fc6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 800fc5a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 800fc5e:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 800fc62:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800fc66:	449c      	add	ip, r3
 800fc68:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800fc6c:	e686      	b.n	800f97c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800fc6e:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 800fc72:	4421      	add	r1, r4
 800fc74:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 800fc78:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800fc7c:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800fc80:	e67c      	b.n	800f97c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800fc82:	9f04      	ldr	r7, [sp, #16]
 800fc84:	42b8      	cmp	r0, r7
 800fc86:	da27      	bge.n	800fcd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800fc88:	9902      	ldr	r1, [sp, #8]
 800fc8a:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 800fc8e:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800fc92:	eb05 010e 	add.w	r1, r5, lr
 800fc96:	fa1f f881 	uxth.w	r8, r1
 800fc9a:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 800fc9e:	fa0f f988 	sxth.w	r9, r8
 800fca2:	4411      	add	r1, r2
 800fca4:	eba1 0108 	sub.w	r1, r1, r8
 800fca8:	b289      	uxth	r1, r1
 800fcaa:	fa0f f881 	sxth.w	r8, r1
 800fcae:	eba2 020e 	sub.w	r2, r2, lr
 800fcb2:	1a3f      	subs	r7, r7, r0
 800fcb4:	4372      	muls	r2, r6
 800fcb6:	fb08 f707 	mul.w	r7, r8, r7
 800fcba:	42ba      	cmp	r2, r7
 800fcbc:	dc06      	bgt.n	800fccc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 800fcbe:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 800fcc2:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 800fcc6:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 800fcca:	e7ca      	b.n	800fc62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 800fccc:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 800fcd0:	4429      	add	r1, r5
 800fcd2:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800fcd6:	e651      	b.n	800f97c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800fcd8:	9805      	ldr	r0, [sp, #20]
 800fcda:	2d06      	cmp	r5, #6
 800fcdc:	ebaa 0000 	sub.w	r0, sl, r0
 800fce0:	b280      	uxth	r0, r0
 800fce2:	fa0f fe80 	sxth.w	lr, r0
 800fce6:	d817      	bhi.n	800fd18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 800fce8:	9b04      	ldr	r3, [sp, #16]
 800fcea:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 800fcee:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800fcf2:	1c6b      	adds	r3, r5, #1
 800fcf4:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 800fcf8:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800fcfc:	9b01      	ldr	r3, [sp, #4]
 800fcfe:	9801      	ldr	r0, [sp, #4]
 800fd00:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800fd04:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800fd08:	805a      	strh	r2, [r3, #2]
 800fd0a:	809e      	strh	r6, [r3, #4]
 800fd0c:	80d9      	strh	r1, [r3, #6]
 800fd0e:	9b02      	ldr	r3, [sp, #8]
 800fd10:	3c08      	subs	r4, #8
 800fd12:	3b01      	subs	r3, #1
 800fd14:	9302      	str	r3, [sp, #8]
 800fd16:	e747      	b.n	800fba8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 800fd18:	9a02      	ldr	r2, [sp, #8]
 800fd1a:	45b6      	cmp	lr, r6
 800fd1c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800fd20:	db0d      	blt.n	800fd3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800fd22:	449c      	add	ip, r3
 800fd24:	fa1f fc8c 	uxth.w	ip, ip
 800fd28:	445a      	add	r2, fp
 800fd2a:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800fd2e:	448c      	add	ip, r1
 800fd30:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800fd34:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 800fd38:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 800fd3c:	e61e      	b.n	800f97c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800fd3e:	445a      	add	r2, fp
 800fd40:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 800fd44:	4484      	add	ip, r0
 800fd46:	e78f      	b.n	800fc68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800fd48:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 800fd4c:	fa1f f18e 	uxth.w	r1, lr
 800fd50:	eb01 0806 	add.w	r8, r1, r6
 800fd54:	b293      	uxth	r3, r2
 800fd56:	fa1f f888 	uxth.w	r8, r8
 800fd5a:	9306      	str	r3, [sp, #24]
 800fd5c:	fa0f f388 	sxth.w	r3, r8
 800fd60:	9307      	str	r3, [sp, #28]
 800fd62:	9f06      	ldr	r7, [sp, #24]
 800fd64:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800fd68:	4596      	cmp	lr, r2
 800fd6a:	443b      	add	r3, r7
 800fd6c:	b29b      	uxth	r3, r3
 800fd6e:	9308      	str	r3, [sp, #32]
 800fd70:	da24      	bge.n	800fdbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 800fd72:	9905      	ldr	r1, [sp, #20]
 800fd74:	eba3 0308 	sub.w	r3, r3, r8
 800fd78:	ebaa 0401 	sub.w	r4, sl, r1
 800fd7c:	b2a4      	uxth	r4, r4
 800fd7e:	b29b      	uxth	r3, r3
 800fd80:	b225      	sxth	r5, r4
 800fd82:	b219      	sxth	r1, r3
 800fd84:	eba2 020e 	sub.w	r2, r2, lr
 800fd88:	eba9 0000 	sub.w	r0, r9, r0
 800fd8c:	436a      	muls	r2, r5
 800fd8e:	4348      	muls	r0, r1
 800fd90:	4282      	cmp	r2, r0
 800fd92:	9a02      	ldr	r2, [sp, #8]
 800fd94:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800fd98:	445a      	add	r2, fp
 800fd9a:	dc06      	bgt.n	800fdaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 800fd9c:	9b07      	ldr	r3, [sp, #28]
 800fd9e:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 800fda2:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 800fda6:	44a4      	add	ip, r4
 800fda8:	e75e      	b.n	800fc68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800fdaa:	9904      	ldr	r1, [sp, #16]
 800fdac:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 800fdb0:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 800fdb4:	4433      	add	r3, r6
 800fdb6:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800fdba:	e5df      	b.n	800f97c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800fdbc:	9f06      	ldr	r7, [sp, #24]
 800fdbe:	9b04      	ldr	r3, [sp, #16]
 800fdc0:	1bc9      	subs	r1, r1, r7
 800fdc2:	fa0f f78a 	sxth.w	r7, sl
 800fdc6:	b289      	uxth	r1, r1
 800fdc8:	429f      	cmp	r7, r3
 800fdca:	fa0f fe81 	sxth.w	lr, r1
 800fdce:	dd24      	ble.n	800fe1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4ca>
 800fdd0:	9a05      	ldr	r2, [sp, #20]
 800fdd2:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800fdd6:	ebaa 0202 	sub.w	r2, sl, r2
 800fdda:	9d07      	ldr	r5, [sp, #28]
 800fddc:	b292      	uxth	r2, r2
 800fdde:	eba5 0a03 	sub.w	sl, r5, r3
 800fde2:	b214      	sxth	r4, r2
 800fde4:	eba9 0000 	sub.w	r0, r9, r0
 800fde8:	fb0e f000 	mul.w	r0, lr, r0
 800fdec:	fb04 fa0a 	mul.w	sl, r4, sl
 800fdf0:	9b02      	ldr	r3, [sp, #8]
 800fdf2:	4550      	cmp	r0, sl
 800fdf4:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800fdf8:	445b      	add	r3, fp
 800fdfa:	db03      	blt.n	800fe04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b4>
 800fdfc:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 800fe00:	4494      	add	ip, r2
 800fe02:	e731      	b.n	800fc68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800fe04:	9a04      	ldr	r2, [sp, #16]
 800fe06:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 800fe0a:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 800fe0e:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 800fe12:	4431      	add	r1, r6
 800fe14:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800fe18:	e75b      	b.n	800fcd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 800fe1a:	9b08      	ldr	r3, [sp, #32]
 800fe1c:	2d06      	cmp	r5, #6
 800fe1e:	eba3 0308 	sub.w	r3, r3, r8
 800fe22:	b29b      	uxth	r3, r3
 800fe24:	b218      	sxth	r0, r3
 800fe26:	d813      	bhi.n	800fe50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x500>
 800fe28:	9b07      	ldr	r3, [sp, #28]
 800fe2a:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 800fe2e:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 800fe32:	1c6b      	adds	r3, r5, #1
 800fe34:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800fe38:	9b01      	ldr	r3, [sp, #4]
 800fe3a:	9901      	ldr	r1, [sp, #4]
 800fe3c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800fe40:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800fe44:	805a      	strh	r2, [r3, #2]
 800fe46:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800fe48:	f8a3 e006 	strh.w	lr, [r3, #6]
 800fe4c:	809a      	strh	r2, [r3, #4]
 800fe4e:	e75e      	b.n	800fd0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800fe50:	9c02      	ldr	r4, [sp, #8]
 800fe52:	4570      	cmp	r0, lr
 800fe54:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800fe58:	db0d      	blt.n	800fe76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x526>
 800fe5a:	4431      	add	r1, r6
 800fe5c:	9b06      	ldr	r3, [sp, #24]
 800fe5e:	b289      	uxth	r1, r1
 800fe60:	445c      	add	r4, fp
 800fe62:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800fe66:	4419      	add	r1, r3
 800fe68:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800fe6c:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 800fe70:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 800fe74:	e582      	b.n	800f97c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800fe76:	445c      	add	r4, fp
 800fe78:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 800fe7c:	e79a      	b.n	800fdb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 800fe7e:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800fe82:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800fe86:	1e65      	subs	r5, r4, #1
 800fe88:	b2ad      	uxth	r5, r5
 800fe8a:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 800fe8e:	42b5      	cmp	r5, r6
 800fe90:	d044      	beq.n	800ff1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5cc>
 800fe92:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 800fe96:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 800fe9a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 800fe9e:	4282      	cmp	r2, r0
 800fea0:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 800fea4:	d11f      	bne.n	800fee6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x596>
 800fea6:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 800feaa:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800feae:	459c      	cmp	ip, r3
 800feb0:	d119      	bne.n	800fee6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x596>
 800feb2:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 800feb6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800feba:	19d8      	adds	r0, r3, r7
 800febc:	b200      	sxth	r0, r0
 800febe:	4288      	cmp	r0, r1
 800fec0:	d109      	bne.n	800fed6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x586>
 800fec2:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 800fec6:	4413      	add	r3, r2
 800fec8:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 800fecc:	4629      	mov	r1, r5
 800fece:	9801      	ldr	r0, [sp, #4]
 800fed0:	f7ff fd2a 	bl	800f928 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fed4:	e003      	b.n	800fede <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 800fed6:	4411      	add	r1, r2
 800fed8:	b209      	sxth	r1, r1
 800feda:	42b9      	cmp	r1, r7
 800fedc:	d0f3      	beq.n	800fec6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x576>
 800fede:	3d01      	subs	r5, #1
 800fee0:	b2ad      	uxth	r5, r5
 800fee2:	3c08      	subs	r4, #8
 800fee4:	e7d3      	b.n	800fe8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53e>
 800fee6:	42b9      	cmp	r1, r7
 800fee8:	d1f9      	bne.n	800fede <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 800feea:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 800feee:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800fef2:	4299      	cmp	r1, r3
 800fef4:	d1f3      	bne.n	800fede <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 800fef6:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800fefa:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800fefe:	181f      	adds	r7, r3, r0
 800ff00:	b23f      	sxth	r7, r7
 800ff02:	42ba      	cmp	r2, r7
 800ff04:	d105      	bne.n	800ff12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c2>
 800ff06:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 800ff0a:	440b      	add	r3, r1
 800ff0c:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800ff10:	e7dc      	b.n	800fecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57c>
 800ff12:	440a      	add	r2, r1
 800ff14:	b212      	sxth	r2, r2
 800ff16:	4290      	cmp	r0, r2
 800ff18:	d1e1      	bne.n	800fede <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 800ff1a:	e7f6      	b.n	800ff0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ba>
 800ff1c:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 800ff20:	2e07      	cmp	r6, #7
 800ff22:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800ff26:	d812      	bhi.n	800ff4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800ff28:	1c75      	adds	r5, r6, #1
 800ff2a:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 800ff2e:	9d01      	ldr	r5, [sp, #4]
 800ff30:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800ff34:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 800ff38:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 800ff3c:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 800ff40:	442c      	add	r4, r5
 800ff42:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800ff46:	8061      	strh	r1, [r4, #2]
 800ff48:	80a2      	strh	r2, [r4, #4]
 800ff4a:	80e3      	strh	r3, [r4, #6]
 800ff4c:	e580      	b.n	800fa50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800ff4e:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 800ff52:	f04f 37ff 	mov.w	r7, #4294967295
 800ff56:	2500      	movs	r5, #0
 800ff58:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800ff5c:	3e01      	subs	r6, #1
 800ff5e:	445c      	add	r4, fp
 800ff60:	9305      	str	r3, [sp, #20]
 800ff62:	1e72      	subs	r2, r6, #1
 800ff64:	4691      	mov	r9, r2
 800ff66:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800ff6a:	9302      	str	r3, [sp, #8]
 800ff6c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800ff70:	9304      	str	r3, [sp, #16]
 800ff72:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 800ff76:	f1b9 3fff 	cmp.w	r9, #4294967295
 800ff7a:	bf16      	itet	ne
 800ff7c:	9905      	ldrne	r1, [sp, #20]
 800ff7e:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800ff82:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800ff86:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800ff8a:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800ff8e:	6818      	ldr	r0, [r3, #0]
 800ff90:	fb18 f801 	smulbb	r8, r8, r1
 800ff94:	6859      	ldr	r1, [r3, #4]
 800ff96:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800ff9a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800ff9e:	4671      	mov	r1, lr
 800ffa0:	a80c      	add	r0, sp, #48	@ 0x30
 800ffa2:	9207      	str	r2, [sp, #28]
 800ffa4:	9306      	str	r3, [sp, #24]
 800ffa6:	f7ff fb6d 	bl	800f684 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800ffaa:	f04f 0c08 	mov.w	ip, #8
 800ffae:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800ffb2:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800ffb6:	9b04      	ldr	r3, [sp, #16]
 800ffb8:	9a02      	ldr	r2, [sp, #8]
 800ffba:	fb10 f001 	smulbb	r0, r0, r1
 800ffbe:	fb02 8803 	mla	r8, r2, r3, r8
 800ffc2:	eba0 0108 	sub.w	r1, r0, r8
 800ffc6:	fb90 f0fc 	sdiv	r0, r0, ip
 800ffca:	4288      	cmp	r0, r1
 800ffcc:	dc20      	bgt.n	8010010 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 800ffce:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800ffd2:	4551      	cmp	r1, sl
 800ffd4:	da03      	bge.n	800ffde <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 800ffd6:	b1d9      	cbz	r1, 8010010 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 800ffd8:	468a      	mov	sl, r1
 800ffda:	464f      	mov	r7, r9
 800ffdc:	4635      	mov	r5, r6
 800ffde:	f109 39ff 	add.w	r9, r9, #4294967295
 800ffe2:	f119 0f02 	cmn.w	r9, #2
 800ffe6:	d1c6      	bne.n	800ff76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>
 800ffe8:	4616      	mov	r6, r2
 800ffea:	3201      	adds	r2, #1
 800ffec:	f1a4 0408 	sub.w	r4, r4, #8
 800fff0:	d1b7      	bne.n	800ff62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 800fff2:	9b01      	ldr	r3, [sp, #4]
 800fff4:	b2ac      	uxth	r4, r5
 800fff6:	00ed      	lsls	r5, r5, #3
 800fff8:	1958      	adds	r0, r3, r5
 800fffa:	1c7b      	adds	r3, r7, #1
 800fffc:	d10b      	bne.n	8010016 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 800fffe:	4601      	mov	r1, r0
 8010000:	9803      	ldr	r0, [sp, #12]
 8010002:	f7ff fb3f 	bl	800f684 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010006:	4621      	mov	r1, r4
 8010008:	9801      	ldr	r0, [sp, #4]
 801000a:	f7ff fc8d 	bl	800f928 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801000e:	e4b5      	b.n	800f97c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010010:	464f      	mov	r7, r9
 8010012:	4635      	mov	r5, r6
 8010014:	e7ed      	b.n	800fff2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8010016:	9b01      	ldr	r3, [sp, #4]
 8010018:	00ff      	lsls	r7, r7, #3
 801001a:	19d9      	adds	r1, r3, r7
 801001c:	f7ff fb32 	bl	800f684 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010020:	9b03      	ldr	r3, [sp, #12]
 8010022:	445f      	add	r7, fp
 8010024:	cb03      	ldmia	r3!, {r0, r1}
 8010026:	445d      	add	r5, fp
 8010028:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 801002c:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 8010030:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8010034:	9b03      	ldr	r3, [sp, #12]
 8010036:	6869      	ldr	r1, [r5, #4]
 8010038:	c303      	stmia	r3!, {r0, r1}
 801003a:	e7e4      	b.n	8010006 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

0801003c <_ZN8touchgfx11Application15drawCachedAreasEv>:
 801003c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010040:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 8010044:	b09b      	sub	sp, #108	@ 0x6c
 8010046:	4604      	mov	r4, r0
 8010048:	4630      	mov	r0, r6
 801004a:	f7fd fa8a 	bl	800d562 <_ZNK8touchgfx4Rect7isEmptyEv>
 801004e:	4605      	mov	r5, r0
 8010050:	b948      	cbnz	r0, 8010066 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8010052:	e896 0006 	ldmia.w	r6, {r1, r2}
 8010056:	6823      	ldr	r3, [r4, #0]
 8010058:	4620      	mov	r0, r4
 801005a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801005c:	4798      	blx	r3
 801005e:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 8010062:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 8010066:	4bc6      	ldr	r3, [pc, #792]	@ (8010380 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8010068:	681b      	ldr	r3, [r3, #0]
 801006a:	2b00      	cmp	r3, #0
 801006c:	d03f      	beq.n	80100ee <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 801006e:	4dc5      	ldr	r5, [pc, #788]	@ (8010384 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8010070:	4628      	mov	r0, r5
 8010072:	f7fd fa76 	bl	800d562 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010076:	4606      	mov	r6, r0
 8010078:	2800      	cmp	r0, #0
 801007a:	d138      	bne.n	80100ee <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 801007c:	4628      	mov	r0, r5
 801007e:	f7ff f995 	bl	800f3ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8010082:	6823      	ldr	r3, [r4, #0]
 8010084:	6829      	ldr	r1, [r5, #0]
 8010086:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010088:	686a      	ldr	r2, [r5, #4]
 801008a:	4620      	mov	r0, r4
 801008c:	4798      	blx	r3
 801008e:	802e      	strh	r6, [r5, #0]
 8010090:	806e      	strh	r6, [r5, #2]
 8010092:	80ae      	strh	r6, [r5, #4]
 8010094:	80ee      	strh	r6, [r5, #6]
 8010096:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 801009a:	4dbb      	ldr	r5, [pc, #748]	@ (8010388 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 801009c:	4640      	mov	r0, r8
 801009e:	f7ff fbeb 	bl	800f878 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80100a2:	882e      	ldrh	r6, [r5, #0]
 80100a4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 80100a8:	4633      	mov	r3, r6
 80100aa:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 80100ae:	42bb      	cmp	r3, r7
 80100b0:	d224      	bcs.n	80100fc <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80100b2:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 80100b6:	2907      	cmp	r1, #7
 80100b8:	d816      	bhi.n	80100e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 80100ba:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80100be:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 80100c2:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80100c6:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80100ca:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 80100ce:	1c4a      	adds	r2, r1, #1
 80100d0:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 80100d4:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80100d8:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 80100dc:	f8a2 a002 	strh.w	sl, [r2, #2]
 80100e0:	f8a2 e004 	strh.w	lr, [r2, #4]
 80100e4:	f8a2 c006 	strh.w	ip, [r2, #6]
 80100e8:	3301      	adds	r3, #1
 80100ea:	b29b      	uxth	r3, r3
 80100ec:	e7df      	b.n	80100ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 80100ee:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80100f2:	2b00      	cmp	r3, #0
 80100f4:	d1cf      	bne.n	8010096 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 80100f6:	b01b      	add	sp, #108	@ 0x6c
 80100f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80100fc:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 8010100:	42b3      	cmp	r3, r6
 8010102:	d90c      	bls.n	801011e <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8010104:	6822      	ldr	r2, [r4, #0]
 8010106:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801010a:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 801010c:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 8010110:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 8010114:	4620      	mov	r0, r4
 8010116:	3601      	adds	r6, #1
 8010118:	47b8      	blx	r7
 801011a:	b2b6      	uxth	r6, r6
 801011c:	e7ee      	b.n	80100fc <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 801011e:	4a9b      	ldr	r2, [pc, #620]	@ (801038c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8010120:	6813      	ldr	r3, [r2, #0]
 8010122:	4691      	mov	r9, r2
 8010124:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 8010128:	2b01      	cmp	r3, #1
 801012a:	f040 80e2 	bne.w	80102f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 801012e:	2600      	movs	r6, #0
 8010130:	8829      	ldrh	r1, [r5, #0]
 8010132:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 8010136:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 801013a:	33ae      	adds	r3, #174	@ 0xae
 801013c:	428f      	cmp	r7, r1
 801013e:	f103 0308 	add.w	r3, r3, #8
 8010142:	dd0a      	ble.n	801015a <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8010144:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8010148:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 801014c:	3101      	adds	r1, #1
 801014e:	4402      	add	r2, r0
 8010150:	b212      	sxth	r2, r2
 8010152:	4296      	cmp	r6, r2
 8010154:	bfb8      	it	lt
 8010156:	4616      	movlt	r6, r2
 8010158:	e7f0      	b.n	801013c <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 801015a:	4b8d      	ldr	r3, [pc, #564]	@ (8010390 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 801015c:	f8df 922c 	ldr.w	r9, [pc, #556]	@ 801038c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8010160:	881b      	ldrh	r3, [r3, #0]
 8010162:	2b0f      	cmp	r3, #15
 8010164:	bf88      	it	hi
 8010166:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 801016a:	f04f 0300 	mov.w	r3, #0
 801016e:	bf98      	it	ls
 8010170:	f04f 0b01 	movls.w	fp, #1
 8010174:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8010178:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 801017c:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8010180:	4b82      	ldr	r3, [pc, #520]	@ (801038c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8010182:	4438      	add	r0, r7
 8010184:	b207      	sxth	r7, r0
 8010186:	6818      	ldr	r0, [r3, #0]
 8010188:	42b7      	cmp	r7, r6
 801018a:	6803      	ldr	r3, [r0, #0]
 801018c:	f280 8083 	bge.w	8010296 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8010190:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8010194:	4798      	blx	r3
 8010196:	eb07 030b 	add.w	r3, r7, fp
 801019a:	4298      	cmp	r0, r3
 801019c:	da07      	bge.n	80101ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 801019e:	42b0      	cmp	r0, r6
 80101a0:	da05      	bge.n	80101ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80101a2:	4287      	cmp	r7, r0
 80101a4:	dd6c      	ble.n	8010280 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80101a6:	2f00      	cmp	r7, #0
 80101a8:	dd6a      	ble.n	8010280 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80101aa:	4630      	mov	r0, r6
 80101ac:	e004      	b.n	80101b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 80101ae:	4287      	cmp	r7, r0
 80101b0:	dcfb      	bgt.n	80101aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 80101b2:	42b0      	cmp	r0, r6
 80101b4:	bfa8      	it	ge
 80101b6:	4630      	movge	r0, r6
 80101b8:	2200      	movs	r2, #0
 80101ba:	4b76      	ldr	r3, [pc, #472]	@ (8010394 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 80101bc:	1bc0      	subs	r0, r0, r7
 80101be:	f9b3 3000 	ldrsh.w	r3, [r3]
 80101c2:	f8ad 7016 	strh.w	r7, [sp, #22]
 80101c6:	882f      	ldrh	r7, [r5, #0]
 80101c8:	f8ad 2014 	strh.w	r2, [sp, #20]
 80101cc:	f8ad 3018 	strh.w	r3, [sp, #24]
 80101d0:	f8ad 001a 	strh.w	r0, [sp, #26]
 80101d4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80101d8:	42bb      	cmp	r3, r7
 80101da:	d9cd      	bls.n	8010178 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80101dc:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80101e0:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80101e4:	ab07      	add	r3, sp, #28
 80101e6:	6851      	ldr	r1, [r2, #4]
 80101e8:	c303      	stmia	r3!, {r0, r1}
 80101ea:	a905      	add	r1, sp, #20
 80101ec:	a807      	add	r0, sp, #28
 80101ee:	f7ff f9b0 	bl	800f552 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80101f2:	2800      	cmp	r0, #0
 80101f4:	d04c      	beq.n	8010290 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 80101f6:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 80101fa:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80101fe:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8010202:	4686      	mov	lr, r0
 8010204:	4290      	cmp	r0, r2
 8010206:	4450      	add	r0, sl
 8010208:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801020c:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8010210:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8010214:	bfb8      	it	lt
 8010216:	4696      	movlt	lr, r2
 8010218:	4452      	add	r2, sl
 801021a:	4299      	cmp	r1, r3
 801021c:	b280      	uxth	r0, r0
 801021e:	b292      	uxth	r2, r2
 8010220:	468c      	mov	ip, r1
 8010222:	9302      	str	r3, [sp, #8]
 8010224:	bfb8      	it	lt
 8010226:	469c      	movlt	ip, r3
 8010228:	fa0f fa82 	sxth.w	sl, r2
 801022c:	b203      	sxth	r3, r0
 801022e:	4553      	cmp	r3, sl
 8010230:	bfb8      	it	lt
 8010232:	4602      	movlt	r2, r0
 8010234:	eba2 020e 	sub.w	r2, r2, lr
 8010238:	f8ad 2020 	strh.w	r2, [sp, #32]
 801023c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8010240:	9b02      	ldr	r3, [sp, #8]
 8010242:	4411      	add	r1, r2
 8010244:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8010248:	b289      	uxth	r1, r1
 801024a:	4413      	add	r3, r2
 801024c:	b29b      	uxth	r3, r3
 801024e:	b208      	sxth	r0, r1
 8010250:	b21a      	sxth	r2, r3
 8010252:	4290      	cmp	r0, r2
 8010254:	bfb8      	it	lt
 8010256:	460b      	movlt	r3, r1
 8010258:	eba3 030c 	sub.w	r3, r3, ip
 801025c:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8010260:	f8ad e01c 	strh.w	lr, [sp, #28]
 8010264:	f8ad c01e 	strh.w	ip, [sp, #30]
 8010268:	a807      	add	r0, sp, #28
 801026a:	f7fd f97a 	bl	800d562 <_ZNK8touchgfx4Rect7isEmptyEv>
 801026e:	b920      	cbnz	r0, 801027a <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8010270:	6823      	ldr	r3, [r4, #0]
 8010272:	a907      	add	r1, sp, #28
 8010274:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010276:	4620      	mov	r0, r4
 8010278:	4798      	blx	r3
 801027a:	3701      	adds	r7, #1
 801027c:	b2bf      	uxth	r7, r7
 801027e:	e7a9      	b.n	80101d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8010280:	f8d9 0000 	ldr.w	r0, [r9]
 8010284:	2101      	movs	r1, #1
 8010286:	6803      	ldr	r3, [r0, #0]
 8010288:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 801028c:	4798      	blx	r3
 801028e:	e773      	b.n	8010178 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8010290:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8010294:	e7e8      	b.n	8010268 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8010296:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010298:	4798      	blx	r3
 801029a:	4b3f      	ldr	r3, [pc, #252]	@ (8010398 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 801029c:	781b      	ldrb	r3, [r3, #0]
 801029e:	2b00      	cmp	r3, #0
 80102a0:	f43f af29 	beq.w	80100f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80102a4:	2300      	movs	r3, #0
 80102a6:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 80102aa:	882b      	ldrh	r3, [r5, #0]
 80102ac:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 80102b0:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 80102b4:	42ab      	cmp	r3, r5
 80102b6:	f4bf af1e 	bcs.w	80100f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80102ba:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 80102be:	2907      	cmp	r1, #7
 80102c0:	d814      	bhi.n	80102ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 80102c2:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 80102c6:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 80102ca:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 80102ce:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 80102d2:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 80102d6:	1c4a      	adds	r2, r1, #1
 80102d8:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 80102dc:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 80102e0:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 80102e4:	f8a2 c002 	strh.w	ip, [r2, #2]
 80102e8:	8097      	strh	r7, [r2, #4]
 80102ea:	80d6      	strh	r6, [r2, #6]
 80102ec:	3301      	adds	r3, #1
 80102ee:	b29b      	uxth	r3, r3
 80102f0:	e7e0      	b.n	80102b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 80102f2:	2b02      	cmp	r3, #2
 80102f4:	f040 8133 	bne.w	801055e <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 80102f8:	4b28      	ldr	r3, [pc, #160]	@ (801039c <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 80102fa:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 80102fe:	781b      	ldrb	r3, [r3, #0]
 8010300:	2b01      	cmp	r3, #1
 8010302:	f000 8098 	beq.w	8010436 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8010306:	882a      	ldrh	r2, [r5, #0]
 8010308:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 801030c:	3201      	adds	r2, #1
 801030e:	b292      	uxth	r2, r2
 8010310:	2900      	cmp	r1, #0
 8010312:	d0c2      	beq.n	801029a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8010314:	4694      	mov	ip, r2
 8010316:	f04f 0900 	mov.w	r9, #0
 801031a:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 801031e:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 8010322:	441e      	add	r6, r3
 8010324:	b236      	sxth	r6, r6
 8010326:	fa1f f38c 	uxth.w	r3, ip
 801032a:	4299      	cmp	r1, r3
 801032c:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8010330:	f240 80bf 	bls.w	80104b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8010334:	4427      	add	r7, r4
 8010336:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801033a:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 801033e:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 8010342:	4283      	cmp	r3, r0
 8010344:	f340 80a1 	ble.w	801048a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8010348:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 801034c:	46e1      	mov	r9, ip
 801034e:	4406      	add	r6, r0
 8010350:	b236      	sxth	r6, r6
 8010352:	429e      	cmp	r6, r3
 8010354:	bfa8      	it	ge
 8010356:	461e      	movge	r6, r3
 8010358:	f10c 0c01 	add.w	ip, ip, #1
 801035c:	e7e3      	b.n	8010326 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 801035e:	d10a      	bne.n	8010376 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8010360:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 8010364:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 8010368:	4562      	cmp	r2, ip
 801036a:	bfb8      	it	lt
 801036c:	4662      	movlt	r2, ip
 801036e:	4288      	cmp	r0, r1
 8010370:	bfb8      	it	lt
 8010372:	461f      	movlt	r7, r3
 8010374:	e087      	b.n	8010486 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8010376:	428a      	cmp	r2, r1
 8010378:	bfb8      	it	lt
 801037a:	460a      	movlt	r2, r1
 801037c:	e083      	b.n	8010486 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 801037e:	bf00      	nop
 8010380:	2004bfd0 	.word	0x2004bfd0
 8010384:	2004bfdc 	.word	0x2004bfdc
 8010388:	2000005c 	.word	0x2000005c
 801038c:	2004bf98 	.word	0x2004bf98
 8010390:	2004bf8e 	.word	0x2004bf8e
 8010394:	2004bf8c 	.word	0x2004bf8c
 8010398:	2004bf96 	.word	0x2004bf96
 801039c:	2004bf90 	.word	0x2004bf90
 80103a0:	19a1      	adds	r1, r4, r6
 80103a2:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80103a6:	ab07      	add	r3, sp, #28
 80103a8:	6849      	ldr	r1, [r1, #4]
 80103aa:	c303      	stmia	r3!, {r0, r1}
 80103ac:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80103b0:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80103b4:	2b13      	cmp	r3, #19
 80103b6:	bfd8      	it	le
 80103b8:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 80103bc:	440b      	add	r3, r1
 80103be:	1a9b      	subs	r3, r3, r2
 80103c0:	a807      	add	r0, sp, #28
 80103c2:	f8ad 3020 	strh.w	r3, [sp, #32]
 80103c6:	f8ad 201c 	strh.w	r2, [sp, #28]
 80103ca:	f7ff f809 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80103ce:	a807      	add	r0, sp, #28
 80103d0:	f7fd f8c7 	bl	800d562 <_ZNK8touchgfx4Rect7isEmptyEv>
 80103d4:	bb78      	cbnz	r0, 8010436 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80103d6:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 80103da:	f8d9 0000 	ldr.w	r0, [r9]
 80103de:	f1bc 0f14 	cmp.w	ip, #20
 80103e2:	bfa8      	it	ge
 80103e4:	f04f 0c14 	movge.w	ip, #20
 80103e8:	f8d0 e000 	ldr.w	lr, [r0]
 80103ec:	fa1f fc8c 	uxth.w	ip, ip
 80103f0:	f8cd c000 	str.w	ip, [sp]
 80103f4:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 80103f8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80103fc:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8010400:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8010404:	47d8      	blx	fp
 8010406:	4683      	mov	fp, r0
 8010408:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 801040c:	a807      	add	r0, sp, #28
 801040e:	f7fe ffcd 	bl	800f3ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8010412:	6823      	ldr	r3, [r4, #0]
 8010414:	4620      	mov	r0, r4
 8010416:	4426      	add	r6, r4
 8010418:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801041a:	a907      	add	r1, sp, #28
 801041c:	4798      	blx	r3
 801041e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8010422:	eba0 000b 	sub.w	r0, r0, fp
 8010426:	b200      	sxth	r0, r0
 8010428:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 801042c:	b918      	cbnz	r0, 8010436 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801042e:	b2b9      	uxth	r1, r7
 8010430:	4650      	mov	r0, sl
 8010432:	f7ff fa79 	bl	800f928 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010436:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 801043a:	f1bb 0f00 	cmp.w	fp, #0
 801043e:	f43f af2c 	beq.w	801029a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8010442:	2700      	movs	r7, #0
 8010444:	882b      	ldrh	r3, [r5, #0]
 8010446:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 801044a:	3301      	adds	r3, #1
 801044c:	b29b      	uxth	r3, r3
 801044e:	b299      	uxth	r1, r3
 8010450:	458b      	cmp	fp, r1
 8010452:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8010456:	d9a3      	bls.n	80103a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8010458:	4426      	add	r6, r4
 801045a:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 801045e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8010462:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8010466:	4408      	add	r0, r1
 8010468:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 801046c:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 8010470:	b200      	sxth	r0, r0
 8010472:	4461      	add	r1, ip
 8010474:	b209      	sxth	r1, r1
 8010476:	4288      	cmp	r0, r1
 8010478:	f6bf af71 	bge.w	801035e <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 801047c:	4584      	cmp	ip, r0
 801047e:	4662      	mov	r2, ip
 8010480:	461f      	mov	r7, r3
 8010482:	bfb8      	it	lt
 8010484:	4602      	movlt	r2, r0
 8010486:	3301      	adds	r3, #1
 8010488:	e7e1      	b.n	801044e <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 801048a:	d10e      	bne.n	80104aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 801048c:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 8010490:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 8010494:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 8010498:	4473      	add	r3, lr
 801049a:	b21b      	sxth	r3, r3
 801049c:	429e      	cmp	r6, r3
 801049e:	bfa8      	it	ge
 80104a0:	461e      	movge	r6, r3
 80104a2:	4287      	cmp	r7, r0
 80104a4:	bfb8      	it	lt
 80104a6:	46e1      	movlt	r9, ip
 80104a8:	e756      	b.n	8010358 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80104aa:	4286      	cmp	r6, r0
 80104ac:	bfa8      	it	ge
 80104ae:	4606      	movge	r6, r0
 80104b0:	e752      	b.n	8010358 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80104b2:	eb0a 0007 	add.w	r0, sl, r7
 80104b6:	4427      	add	r7, r4
 80104b8:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 80104bc:	e9cd 2102 	strd	r2, r1, [sp, #8]
 80104c0:	f1bb 0f13 	cmp.w	fp, #19
 80104c4:	bfde      	ittt	le
 80104c6:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 80104ca:	445e      	addle	r6, fp
 80104cc:	b236      	sxthle	r6, r6
 80104ce:	f7fd f848 	bl	800d562 <_ZNK8touchgfx4Rect7isEmptyEv>
 80104d2:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 80104d6:	2800      	cmp	r0, #0
 80104d8:	f47f af1a 	bne.w	8010310 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 80104dc:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 80104e0:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 80104e4:	1ab6      	subs	r6, r6, r2
 80104e6:	2e14      	cmp	r6, #20
 80104e8:	bfa8      	it	ge
 80104ea:	2614      	movge	r6, #20
 80104ec:	4828      	ldr	r0, [pc, #160]	@ (8010590 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 80104ee:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 80104f2:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 80104f6:	6800      	ldr	r0, [r0, #0]
 80104f8:	f8ad 101c 	strh.w	r1, [sp, #28]
 80104fc:	f8ad 201e 	strh.w	r2, [sp, #30]
 8010500:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010504:	f8d0 c000 	ldr.w	ip, [r0]
 8010508:	b2b6      	uxth	r6, r6
 801050a:	fa1f fb8b 	uxth.w	fp, fp
 801050e:	455e      	cmp	r6, fp
 8010510:	bf94      	ite	ls
 8010512:	9600      	strls	r6, [sp, #0]
 8010514:	f8cd b000 	strhi.w	fp, [sp]
 8010518:	b292      	uxth	r2, r2
 801051a:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 801051e:	b29b      	uxth	r3, r3
 8010520:	b289      	uxth	r1, r1
 8010522:	47b0      	blx	r6
 8010524:	6823      	ldr	r3, [r4, #0]
 8010526:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 801052a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801052c:	a907      	add	r1, sp, #28
 801052e:	4620      	mov	r0, r4
 8010530:	4798      	blx	r3
 8010532:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 8010536:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 801053a:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 801053e:	1a5b      	subs	r3, r3, r1
 8010540:	440a      	add	r2, r1
 8010542:	b21b      	sxth	r3, r3
 8010544:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 8010548:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 801054c:	2b00      	cmp	r3, #0
 801054e:	f47f aeda 	bne.w	8010306 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8010552:	fa1f f189 	uxth.w	r1, r9
 8010556:	4650      	mov	r0, sl
 8010558:	f7ff f9e6 	bl	800f928 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801055c:	e6d3      	b.n	8010306 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 801055e:	882e      	ldrh	r6, [r5, #0]
 8010560:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8010564:	42b3      	cmp	r3, r6
 8010566:	f67f ae98 	bls.w	801029a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801056a:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 801056e:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8010572:	ab07      	add	r3, sp, #28
 8010574:	6851      	ldr	r1, [r2, #4]
 8010576:	c303      	stmia	r3!, {r0, r1}
 8010578:	a807      	add	r0, sp, #28
 801057a:	f7fc fff2 	bl	800d562 <_ZNK8touchgfx4Rect7isEmptyEv>
 801057e:	b920      	cbnz	r0, 801058a <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8010580:	6823      	ldr	r3, [r4, #0]
 8010582:	a907      	add	r1, sp, #28
 8010584:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010586:	4620      	mov	r0, r4
 8010588:	4798      	blx	r3
 801058a:	3601      	adds	r6, #1
 801058c:	b2b6      	uxth	r6, r6
 801058e:	e7e7      	b.n	8010560 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8010590:	2004bf98 	.word	0x2004bf98

08010594 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8010594:	2200      	movs	r2, #0
 8010596:	4b03      	ldr	r3, [pc, #12]	@ (80105a4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8010598:	801a      	strh	r2, [r3, #0]
 801059a:	805a      	strh	r2, [r3, #2]
 801059c:	809a      	strh	r2, [r3, #4]
 801059e:	80da      	strh	r2, [r3, #6]
 80105a0:	4770      	bx	lr
 80105a2:	bf00      	nop
 80105a4:	2004bfdc 	.word	0x2004bfdc

080105a8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80105a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80105ac:	4606      	mov	r6, r0
 80105ae:	b09d      	sub	sp, #116	@ 0x74
 80105b0:	a803      	add	r0, sp, #12
 80105b2:	4614      	mov	r4, r2
 80105b4:	468a      	mov	sl, r1
 80105b6:	461d      	mov	r5, r3
 80105b8:	f000 fd7a 	bl	80110b0 <_ZN8touchgfx12TextProviderC1Ev>
 80105bc:	6833      	ldr	r3, [r6, #0]
 80105be:	4630      	mov	r0, r6
 80105c0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80105c2:	4798      	blx	r3
 80105c4:	6833      	ldr	r3, [r6, #0]
 80105c6:	4607      	mov	r7, r0
 80105c8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80105ca:	4630      	mov	r0, r6
 80105cc:	4798      	blx	r3
 80105ce:	462a      	mov	r2, r5
 80105d0:	2500      	movs	r5, #0
 80105d2:	9000      	str	r0, [sp, #0]
 80105d4:	4621      	mov	r1, r4
 80105d6:	463b      	mov	r3, r7
 80105d8:	a803      	add	r0, sp, #12
 80105da:	f000 fdbc 	bl	8011156 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80105de:	462c      	mov	r4, r5
 80105e0:	46a9      	mov	r9, r5
 80105e2:	46a8      	mov	r8, r5
 80105e4:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 80105e8:	2300      	movs	r3, #0
 80105ea:	9302      	str	r3, [sp, #8]
 80105ec:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80105f0:	429c      	cmp	r4, r3
 80105f2:	d002      	beq.n	80105fa <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 80105f4:	455c      	cmp	r4, fp
 80105f6:	bf18      	it	ne
 80105f8:	4625      	movne	r5, r4
 80105fa:	ab02      	add	r3, sp, #8
 80105fc:	4632      	mov	r2, r6
 80105fe:	4651      	mov	r1, sl
 8010600:	a803      	add	r0, sp, #12
 8010602:	f001 f897 	bl	8011734 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010606:	4604      	mov	r4, r0
 8010608:	b108      	cbz	r0, 801060e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801060a:	280a      	cmp	r0, #10
 801060c:	d10a      	bne.n	8010624 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 801060e:	45c1      	cmp	r9, r8
 8010610:	bf38      	it	cc
 8010612:	46c1      	movcc	r9, r8
 8010614:	f04f 0800 	mov.w	r8, #0
 8010618:	2c00      	cmp	r4, #0
 801061a:	d1e5      	bne.n	80105e8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801061c:	4648      	mov	r0, r9
 801061e:	b01d      	add	sp, #116	@ 0x74
 8010620:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010624:	9a02      	ldr	r2, [sp, #8]
 8010626:	2a00      	cmp	r2, #0
 8010628:	d0de      	beq.n	80105e8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801062a:	7b57      	ldrb	r7, [r2, #13]
 801062c:	6833      	ldr	r3, [r6, #0]
 801062e:	007f      	lsls	r7, r7, #1
 8010630:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 8010634:	7a97      	ldrb	r7, [r2, #10]
 8010636:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8010638:	4307      	orrs	r7, r0
 801063a:	4629      	mov	r1, r5
 801063c:	4630      	mov	r0, r6
 801063e:	8894      	ldrh	r4, [r2, #4]
 8010640:	4798      	blx	r3
 8010642:	4438      	add	r0, r7
 8010644:	4480      	add	r8, r0
 8010646:	fa1f f888 	uxth.w	r8, r8
 801064a:	e7e5      	b.n	8010618 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0801064c <_ZNK8touchgfx4Font12getCharWidthEt>:
 801064c:	b508      	push	{r3, lr}
 801064e:	6803      	ldr	r3, [r0, #0]
 8010650:	68db      	ldr	r3, [r3, #12]
 8010652:	4798      	blx	r3
 8010654:	b128      	cbz	r0, 8010662 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8010656:	7b43      	ldrb	r3, [r0, #13]
 8010658:	7a80      	ldrb	r0, [r0, #10]
 801065a:	005b      	lsls	r3, r3, #1
 801065c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010660:	4318      	orrs	r0, r3
 8010662:	bd08      	pop	{r3, pc}

08010664 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8010664:	b40e      	push	{r1, r2, r3}
 8010666:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010668:	4605      	mov	r5, r0
 801066a:	b09e      	sub	sp, #120	@ 0x78
 801066c:	ab23      	add	r3, sp, #140	@ 0x8c
 801066e:	f853 4b04 	ldr.w	r4, [r3], #4
 8010672:	a805      	add	r0, sp, #20
 8010674:	9303      	str	r3, [sp, #12]
 8010676:	f000 fd1b 	bl	80110b0 <_ZN8touchgfx12TextProviderC1Ev>
 801067a:	682b      	ldr	r3, [r5, #0]
 801067c:	4628      	mov	r0, r5
 801067e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010680:	4798      	blx	r3
 8010682:	682b      	ldr	r3, [r5, #0]
 8010684:	4606      	mov	r6, r0
 8010686:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010688:	4628      	mov	r0, r5
 801068a:	4798      	blx	r3
 801068c:	4621      	mov	r1, r4
 801068e:	2400      	movs	r4, #0
 8010690:	4633      	mov	r3, r6
 8010692:	9000      	str	r0, [sp, #0]
 8010694:	9a03      	ldr	r2, [sp, #12]
 8010696:	ae1e      	add	r6, sp, #120	@ 0x78
 8010698:	a805      	add	r0, sp, #20
 801069a:	f000 fd5c 	bl	8011156 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801069e:	f846 4d68 	str.w	r4, [r6, #-104]!
 80106a2:	4633      	mov	r3, r6
 80106a4:	462a      	mov	r2, r5
 80106a6:	4621      	mov	r1, r4
 80106a8:	a805      	add	r0, sp, #20
 80106aa:	f001 f843 	bl	8011734 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80106ae:	b1f0      	cbz	r0, 80106ee <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 80106b0:	280a      	cmp	r0, #10
 80106b2:	d018      	beq.n	80106e6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80106b4:	9f04      	ldr	r7, [sp, #16]
 80106b6:	b1b7      	cbz	r7, 80106e6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80106b8:	7b78      	ldrb	r0, [r7, #13]
 80106ba:	7a3b      	ldrb	r3, [r7, #8]
 80106bc:	00c1      	lsls	r1, r0, #3
 80106be:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80106c2:	4319      	orrs	r1, r3
 80106c4:	0643      	lsls	r3, r0, #25
 80106c6:	bf44      	itt	mi
 80106c8:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 80106cc:	b219      	sxthmi	r1, r3
 80106ce:	0100      	lsls	r0, r0, #4
 80106d0:	79fb      	ldrb	r3, [r7, #7]
 80106d2:	88ea      	ldrh	r2, [r5, #6]
 80106d4:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 80106d8:	4303      	orrs	r3, r0
 80106da:	4413      	add	r3, r2
 80106dc:	1a5b      	subs	r3, r3, r1
 80106de:	b21b      	sxth	r3, r3
 80106e0:	429c      	cmp	r4, r3
 80106e2:	bfb8      	it	lt
 80106e4:	461c      	movlt	r4, r3
 80106e6:	4633      	mov	r3, r6
 80106e8:	462a      	mov	r2, r5
 80106ea:	2100      	movs	r1, #0
 80106ec:	e7dc      	b.n	80106a8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 80106ee:	b2a0      	uxth	r0, r4
 80106f0:	b01e      	add	sp, #120	@ 0x78
 80106f2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80106f6:	b003      	add	sp, #12
 80106f8:	4770      	bx	lr

080106fa <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 80106fa:	7a43      	ldrb	r3, [r0, #9]
 80106fc:	8880      	ldrh	r0, [r0, #4]
 80106fe:	4418      	add	r0, r3
 8010700:	b280      	uxth	r0, r0
 8010702:	4770      	bx	lr

08010704 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8010704:	6803      	ldr	r3, [r0, #0]
 8010706:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010708:	4718      	bx	r3

0801070a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801070a:	b40e      	push	{r1, r2, r3}
 801070c:	b570      	push	{r4, r5, r6, lr}
 801070e:	4604      	mov	r4, r0
 8010710:	b09d      	sub	sp, #116	@ 0x74
 8010712:	ab21      	add	r3, sp, #132	@ 0x84
 8010714:	f853 5b04 	ldr.w	r5, [r3], #4
 8010718:	a803      	add	r0, sp, #12
 801071a:	9302      	str	r3, [sp, #8]
 801071c:	f000 fcc8 	bl	80110b0 <_ZN8touchgfx12TextProviderC1Ev>
 8010720:	6823      	ldr	r3, [r4, #0]
 8010722:	4620      	mov	r0, r4
 8010724:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010726:	4798      	blx	r3
 8010728:	6823      	ldr	r3, [r4, #0]
 801072a:	4606      	mov	r6, r0
 801072c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801072e:	4620      	mov	r0, r4
 8010730:	4798      	blx	r3
 8010732:	4633      	mov	r3, r6
 8010734:	9000      	str	r0, [sp, #0]
 8010736:	9a02      	ldr	r2, [sp, #8]
 8010738:	4629      	mov	r1, r5
 801073a:	a803      	add	r0, sp, #12
 801073c:	f000 fd0b 	bl	8011156 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010740:	a803      	add	r0, sp, #12
 8010742:	f001 f879 	bl	8011838 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010746:	2401      	movs	r4, #1
 8010748:	b2a3      	uxth	r3, r4
 801074a:	b140      	cbz	r0, 801075e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 801074c:	280a      	cmp	r0, #10
 801074e:	bf08      	it	eq
 8010750:	3301      	addeq	r3, #1
 8010752:	a803      	add	r0, sp, #12
 8010754:	bf08      	it	eq
 8010756:	b21c      	sxtheq	r4, r3
 8010758:	f001 f86e 	bl	8011838 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801075c:	e7f4      	b.n	8010748 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 801075e:	4618      	mov	r0, r3
 8010760:	b01d      	add	sp, #116	@ 0x74
 8010762:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010766:	b003      	add	sp, #12
 8010768:	4770      	bx	lr

0801076a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801076a:	b40e      	push	{r1, r2, r3}
 801076c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801076e:	4604      	mov	r4, r0
 8010770:	b09e      	sub	sp, #120	@ 0x78
 8010772:	ab23      	add	r3, sp, #140	@ 0x8c
 8010774:	f853 5b04 	ldr.w	r5, [r3], #4
 8010778:	a805      	add	r0, sp, #20
 801077a:	9303      	str	r3, [sp, #12]
 801077c:	f000 fc98 	bl	80110b0 <_ZN8touchgfx12TextProviderC1Ev>
 8010780:	6823      	ldr	r3, [r4, #0]
 8010782:	4620      	mov	r0, r4
 8010784:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010786:	4798      	blx	r3
 8010788:	6823      	ldr	r3, [r4, #0]
 801078a:	4606      	mov	r6, r0
 801078c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801078e:	4620      	mov	r0, r4
 8010790:	4798      	blx	r3
 8010792:	4633      	mov	r3, r6
 8010794:	4629      	mov	r1, r5
 8010796:	9000      	str	r0, [sp, #0]
 8010798:	9a03      	ldr	r2, [sp, #12]
 801079a:	a805      	add	r0, sp, #20
 801079c:	f000 fcdb 	bl	8011156 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80107a0:	2100      	movs	r1, #0
 80107a2:	ad1e      	add	r5, sp, #120	@ 0x78
 80107a4:	f845 1d68 	str.w	r1, [r5, #-104]!
 80107a8:	462b      	mov	r3, r5
 80107aa:	4622      	mov	r2, r4
 80107ac:	a805      	add	r0, sp, #20
 80107ae:	f000 ffc1 	bl	8011734 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80107b2:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 80107b6:	b1d8      	cbz	r0, 80107f0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 80107b8:	280a      	cmp	r0, #10
 80107ba:	d012      	beq.n	80107e2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80107bc:	9804      	ldr	r0, [sp, #16]
 80107be:	b180      	cbz	r0, 80107e2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80107c0:	7b47      	ldrb	r7, [r0, #13]
 80107c2:	88e2      	ldrh	r2, [r4, #6]
 80107c4:	00fb      	lsls	r3, r7, #3
 80107c6:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80107ca:	7a03      	ldrb	r3, [r0, #8]
 80107cc:	430b      	orrs	r3, r1
 80107ce:	0679      	lsls	r1, r7, #25
 80107d0:	bf44      	itt	mi
 80107d2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80107d6:	b21b      	sxthmi	r3, r3
 80107d8:	1ad3      	subs	r3, r2, r3
 80107da:	b21b      	sxth	r3, r3
 80107dc:	429e      	cmp	r6, r3
 80107de:	bfa8      	it	ge
 80107e0:	461e      	movge	r6, r3
 80107e2:	462b      	mov	r3, r5
 80107e4:	4622      	mov	r2, r4
 80107e6:	2100      	movs	r1, #0
 80107e8:	a805      	add	r0, sp, #20
 80107ea:	f000 ffa3 	bl	8011734 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80107ee:	e7e2      	b.n	80107b6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 80107f0:	4630      	mov	r0, r6
 80107f2:	b01e      	add	sp, #120	@ 0x78
 80107f4:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80107f8:	b003      	add	sp, #12
 80107fa:	4770      	bx	lr

080107fc <_ZNK8touchgfx8Drawable10invalidateEv>:
 80107fc:	b513      	push	{r0, r1, r4, lr}
 80107fe:	2400      	movs	r4, #0
 8010800:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8010804:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010808:	6803      	ldr	r3, [r0, #0]
 801080a:	f8ad 1004 	strh.w	r1, [sp, #4]
 801080e:	9400      	str	r4, [sp, #0]
 8010810:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010814:	691b      	ldr	r3, [r3, #16]
 8010816:	4669      	mov	r1, sp
 8010818:	4798      	blx	r3
 801081a:	b002      	add	sp, #8
 801081c:	bd10      	pop	{r4, pc}

0801081e <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801081e:	b538      	push	{r3, r4, r5, lr}
 8010820:	460c      	mov	r4, r1
 8010822:	4605      	mov	r5, r0
 8010824:	680b      	ldr	r3, [r1, #0]
 8010826:	68db      	ldr	r3, [r3, #12]
 8010828:	4798      	blx	r3
 801082a:	6823      	ldr	r3, [r4, #0]
 801082c:	4620      	mov	r0, r4
 801082e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010830:	4629      	mov	r1, r5
 8010832:	4798      	blx	r3
 8010834:	4628      	mov	r0, r5
 8010836:	bd38      	pop	{r3, r4, r5, pc}

08010838 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8010838:	b410      	push	{r4}
 801083a:	880a      	ldrh	r2, [r1, #0]
 801083c:	8884      	ldrh	r4, [r0, #4]
 801083e:	4422      	add	r2, r4
 8010840:	800a      	strh	r2, [r1, #0]
 8010842:	88c4      	ldrh	r4, [r0, #6]
 8010844:	884a      	ldrh	r2, [r1, #2]
 8010846:	4422      	add	r2, r4
 8010848:	804a      	strh	r2, [r1, #2]
 801084a:	6940      	ldr	r0, [r0, #20]
 801084c:	b120      	cbz	r0, 8010858 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801084e:	6803      	ldr	r3, [r0, #0]
 8010850:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010854:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010856:	4718      	bx	r3
 8010858:	f85d 4b04 	ldr.w	r4, [sp], #4
 801085c:	4770      	bx	lr

0801085e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801085e:	b570      	push	{r4, r5, r6, lr}
 8010860:	460c      	mov	r4, r1
 8010862:	8882      	ldrh	r2, [r0, #4]
 8010864:	880b      	ldrh	r3, [r1, #0]
 8010866:	4605      	mov	r5, r0
 8010868:	4413      	add	r3, r2
 801086a:	800b      	strh	r3, [r1, #0]
 801086c:	88c2      	ldrh	r2, [r0, #6]
 801086e:	884b      	ldrh	r3, [r1, #2]
 8010870:	4413      	add	r3, r2
 8010872:	804b      	strh	r3, [r1, #2]
 8010874:	1d01      	adds	r1, r0, #4
 8010876:	4620      	mov	r0, r4
 8010878:	f7fc fe30 	bl	800d4dc <_ZN8touchgfx4RectaNERKS0_>
 801087c:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010880:	2b00      	cmp	r3, #0
 8010882:	dd0b      	ble.n	801089c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010884:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010888:	2b00      	cmp	r3, #0
 801088a:	dd07      	ble.n	801089c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801088c:	6968      	ldr	r0, [r5, #20]
 801088e:	b128      	cbz	r0, 801089c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010890:	6803      	ldr	r3, [r0, #0]
 8010892:	4621      	mov	r1, r4
 8010894:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010898:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801089a:	4718      	bx	r3
 801089c:	bd70      	pop	{r4, r5, r6, pc}
	...

080108a0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 80108a0:	b570      	push	{r4, r5, r6, lr}
 80108a2:	460c      	mov	r4, r1
 80108a4:	8882      	ldrh	r2, [r0, #4]
 80108a6:	880b      	ldrh	r3, [r1, #0]
 80108a8:	4605      	mov	r5, r0
 80108aa:	4413      	add	r3, r2
 80108ac:	800b      	strh	r3, [r1, #0]
 80108ae:	88c2      	ldrh	r2, [r0, #6]
 80108b0:	884b      	ldrh	r3, [r1, #2]
 80108b2:	4413      	add	r3, r2
 80108b4:	804b      	strh	r3, [r1, #2]
 80108b6:	1d01      	adds	r1, r0, #4
 80108b8:	4620      	mov	r0, r4
 80108ba:	f7fc fe0f 	bl	800d4dc <_ZN8touchgfx4RectaNERKS0_>
 80108be:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80108c2:	2b00      	cmp	r3, #0
 80108c4:	dd19      	ble.n	80108fa <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80108c6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80108ca:	2b00      	cmp	r3, #0
 80108cc:	dd15      	ble.n	80108fa <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80108ce:	6968      	ldr	r0, [r5, #20]
 80108d0:	b128      	cbz	r0, 80108de <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80108d2:	6803      	ldr	r3, [r0, #0]
 80108d4:	4621      	mov	r1, r4
 80108d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80108da:	691b      	ldr	r3, [r3, #16]
 80108dc:	4718      	bx	r3
 80108de:	4b07      	ldr	r3, [pc, #28]	@ (80108fc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80108e0:	681b      	ldr	r3, [r3, #0]
 80108e2:	3304      	adds	r3, #4
 80108e4:	429d      	cmp	r5, r3
 80108e6:	d108      	bne.n	80108fa <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80108e8:	f7fe ff12 	bl	800f710 <_ZN8touchgfx11Application11getInstanceEv>
 80108ec:	6803      	ldr	r3, [r0, #0]
 80108ee:	6821      	ldr	r1, [r4, #0]
 80108f0:	6862      	ldr	r2, [r4, #4]
 80108f2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80108f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80108f8:	4718      	bx	r3
 80108fa:	bd70      	pop	{r4, r5, r6, pc}
 80108fc:	2004bfd4 	.word	0x2004bfd4

08010900 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8010900:	b570      	push	{r4, r5, r6, lr}
 8010902:	4604      	mov	r4, r0
 8010904:	4616      	mov	r6, r2
 8010906:	460d      	mov	r5, r1
 8010908:	b901      	cbnz	r1, 801090c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801090a:	b192      	cbz	r2, 8010932 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 801090c:	6823      	ldr	r3, [r4, #0]
 801090e:	4620      	mov	r0, r4
 8010910:	699b      	ldr	r3, [r3, #24]
 8010912:	4798      	blx	r3
 8010914:	88e2      	ldrh	r2, [r4, #6]
 8010916:	88a1      	ldrh	r1, [r4, #4]
 8010918:	4432      	add	r2, r6
 801091a:	4429      	add	r1, r5
 801091c:	4620      	mov	r0, r4
 801091e:	b212      	sxth	r2, r2
 8010920:	b209      	sxth	r1, r1
 8010922:	f7f2 f807 	bl	8002934 <_ZN8touchgfx8Drawable5setXYEss>
 8010926:	6823      	ldr	r3, [r4, #0]
 8010928:	4620      	mov	r0, r4
 801092a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801092e:	699b      	ldr	r3, [r3, #24]
 8010930:	4718      	bx	r3
 8010932:	bd70      	pop	{r4, r5, r6, pc}

08010934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8010934:	b510      	push	{r4, lr}
 8010936:	2300      	movs	r3, #0
 8010938:	4604      	mov	r4, r0
 801093a:	4608      	mov	r0, r1
 801093c:	8023      	strh	r3, [r4, #0]
 801093e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010942:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8010946:	8063      	strh	r3, [r4, #2]
 8010948:	6803      	ldr	r3, [r0, #0]
 801094a:	80a1      	strh	r1, [r4, #4]
 801094c:	80e2      	strh	r2, [r4, #6]
 801094e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010950:	4621      	mov	r1, r4
 8010952:	4798      	blx	r3
 8010954:	4620      	mov	r0, r4
 8010956:	bd10      	pop	{r4, pc}

08010958 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8010958:	b530      	push	{r4, r5, lr}
 801095a:	8083      	strh	r3, [r0, #4]
 801095c:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8010960:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8010964:	80c3      	strh	r3, [r0, #6]
 8010966:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801096a:	6141      	str	r1, [r0, #20]
 801096c:	7203      	strb	r3, [r0, #8]
 801096e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8010972:	8302      	strh	r2, [r0, #24]
 8010974:	7243      	strb	r3, [r0, #9]
 8010976:	7a83      	ldrb	r3, [r0, #10]
 8010978:	f365 0306 	bfi	r3, r5, #0, #7
 801097c:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8010980:	f365 13c7 	bfi	r3, r5, #7, #1
 8010984:	7283      	strb	r3, [r0, #10]
 8010986:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801098a:	72c3      	strb	r3, [r0, #11]
 801098c:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8010990:	7303      	strb	r3, [r0, #12]
 8010992:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8010996:	81c3      	strh	r3, [r0, #14]
 8010998:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801099c:	8203      	strh	r3, [r0, #16]
 801099e:	4b01      	ldr	r3, [pc, #4]	@ (80109a4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 80109a0:	6003      	str	r3, [r0, #0]
 80109a2:	bd30      	pop	{r4, r5, pc}
 80109a4:	0802731c 	.word	0x0802731c

080109a8 <_ZNK8touchgfx9ConstFont4findEt>:
 80109a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80109aa:	6944      	ldr	r4, [r0, #20]
 80109ac:	b3bc      	cbz	r4, 8010a1e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80109ae:	88a3      	ldrh	r3, [r4, #4]
 80109b0:	8b02      	ldrh	r2, [r0, #24]
 80109b2:	1acb      	subs	r3, r1, r3
 80109b4:	f102 32ff 	add.w	r2, r2, #4294967295
 80109b8:	d431      	bmi.n	8010a1e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80109ba:	4293      	cmp	r3, r2
 80109bc:	dd0c      	ble.n	80109d8 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80109be:	230e      	movs	r3, #14
 80109c0:	fb03 4302 	mla	r3, r3, r2, r4
 80109c4:	889b      	ldrh	r3, [r3, #4]
 80109c6:	1a5b      	subs	r3, r3, r1
 80109c8:	1ad3      	subs	r3, r2, r3
 80109ca:	429a      	cmp	r2, r3
 80109cc:	db27      	blt.n	8010a1e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80109ce:	2b00      	cmp	r3, #0
 80109d0:	bfbc      	itt	lt
 80109d2:	2302      	movlt	r3, #2
 80109d4:	fb92 f3f3 	sdivlt	r3, r2, r3
 80109d8:	2500      	movs	r5, #0
 80109da:	260e      	movs	r6, #14
 80109dc:	4295      	cmp	r5, r2
 80109de:	dc1e      	bgt.n	8010a1e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80109e0:	fb06 4003 	mla	r0, r6, r3, r4
 80109e4:	8887      	ldrh	r7, [r0, #4]
 80109e6:	42b9      	cmp	r1, r7
 80109e8:	d01a      	beq.n	8010a20 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80109ea:	d20d      	bcs.n	8010a08 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80109ec:	1e5a      	subs	r2, r3, #1
 80109ee:	4295      	cmp	r5, r2
 80109f0:	dc15      	bgt.n	8010a1e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80109f2:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80109f6:	1a5b      	subs	r3, r3, r1
 80109f8:	1ad3      	subs	r3, r2, r3
 80109fa:	429a      	cmp	r2, r3
 80109fc:	db0f      	blt.n	8010a1e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80109fe:	429d      	cmp	r5, r3
 8010a00:	ddec      	ble.n	80109dc <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010a02:	1953      	adds	r3, r2, r5
 8010a04:	105b      	asrs	r3, r3, #1
 8010a06:	e7e9      	b.n	80109dc <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010a08:	1c5d      	adds	r5, r3, #1
 8010a0a:	42aa      	cmp	r2, r5
 8010a0c:	db07      	blt.n	8010a1e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010a0e:	8a43      	ldrh	r3, [r0, #18]
 8010a10:	1acb      	subs	r3, r1, r3
 8010a12:	442b      	add	r3, r5
 8010a14:	429d      	cmp	r5, r3
 8010a16:	dc02      	bgt.n	8010a1e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010a18:	429a      	cmp	r2, r3
 8010a1a:	dadf      	bge.n	80109dc <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010a1c:	e7f1      	b.n	8010a02 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8010a1e:	2000      	movs	r0, #0
 8010a20:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010a22 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8010a22:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010a24:	4604      	mov	r4, r0
 8010a26:	4617      	mov	r7, r2
 8010a28:	461e      	mov	r6, r3
 8010a2a:	b911      	cbnz	r1, 8010a32 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8010a2c:	2500      	movs	r5, #0
 8010a2e:	4628      	mov	r0, r5
 8010a30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010a32:	290a      	cmp	r1, #10
 8010a34:	d0fa      	beq.n	8010a2c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010a36:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8010a3a:	4291      	cmp	r1, r2
 8010a3c:	d0f6      	beq.n	8010a2c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010a3e:	f242 020b 	movw	r2, #8203	@ 0x200b
 8010a42:	4291      	cmp	r1, r2
 8010a44:	d0f2      	beq.n	8010a2c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010a46:	f7ff ffaf 	bl	80109a8 <_ZNK8touchgfx9ConstFont4findEt>
 8010a4a:	4605      	mov	r5, r0
 8010a4c:	b950      	cbnz	r0, 8010a64 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8010a4e:	6823      	ldr	r3, [r4, #0]
 8010a50:	4620      	mov	r0, r4
 8010a52:	691b      	ldr	r3, [r3, #16]
 8010a54:	4798      	blx	r3
 8010a56:	4601      	mov	r1, r0
 8010a58:	4620      	mov	r0, r4
 8010a5a:	f7ff ffa5 	bl	80109a8 <_ZNK8touchgfx9ConstFont4findEt>
 8010a5e:	4605      	mov	r5, r0
 8010a60:	2800      	cmp	r0, #0
 8010a62:	d0e3      	beq.n	8010a2c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010a64:	6823      	ldr	r3, [r4, #0]
 8010a66:	4629      	mov	r1, r5
 8010a68:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010a6a:	4620      	mov	r0, r4
 8010a6c:	4798      	blx	r3
 8010a6e:	6038      	str	r0, [r7, #0]
 8010a70:	6823      	ldr	r3, [r4, #0]
 8010a72:	4620      	mov	r0, r4
 8010a74:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8010a76:	4798      	blx	r3
 8010a78:	7030      	strb	r0, [r6, #0]
 8010a7a:	e7d8      	b.n	8010a2e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08010a7c <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8010a7c:	2000      	movs	r0, #0
 8010a7e:	4770      	bx	lr

08010a80 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8010a80:	2001      	movs	r0, #1
 8010a82:	4770      	bx	lr

08010a84 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8010a84:	2002      	movs	r0, #2
 8010a86:	4770      	bx	lr

08010a88 <_ZN8touchgfx6ScreenD1Ev>:
 8010a88:	4770      	bx	lr

08010a8a <_ZN8touchgfx12GestureEventD1Ev>:
 8010a8a:	4770      	bx	lr

08010a8c <_ZN8touchgfx9DragEventD1Ev>:
 8010a8c:	4770      	bx	lr

08010a8e <_ZN8touchgfx10ClickEventD1Ev>:
 8010a8e:	4770      	bx	lr

08010a90 <_ZN8touchgfx10ClickEventD0Ev>:
 8010a90:	b510      	push	{r4, lr}
 8010a92:	4604      	mov	r4, r0
 8010a94:	210c      	movs	r1, #12
 8010a96:	f014 f920 	bl	8024cda <_ZdlPvj>
 8010a9a:	4620      	mov	r0, r4
 8010a9c:	bd10      	pop	{r4, pc}

08010a9e <_ZN8touchgfx9DragEventD0Ev>:
 8010a9e:	b510      	push	{r4, lr}
 8010aa0:	4604      	mov	r4, r0
 8010aa2:	2110      	movs	r1, #16
 8010aa4:	f014 f919 	bl	8024cda <_ZdlPvj>
 8010aa8:	4620      	mov	r0, r4
 8010aaa:	bd10      	pop	{r4, pc}

08010aac <_ZN8touchgfx12GestureEventD0Ev>:
 8010aac:	b510      	push	{r4, lr}
 8010aae:	4604      	mov	r4, r0
 8010ab0:	210c      	movs	r1, #12
 8010ab2:	f014 f912 	bl	8024cda <_ZdlPvj>
 8010ab6:	4620      	mov	r0, r4
 8010ab8:	bd10      	pop	{r4, pc}

08010aba <_ZN8touchgfx6ScreenD0Ev>:
 8010aba:	b510      	push	{r4, lr}
 8010abc:	4604      	mov	r4, r0
 8010abe:	213c      	movs	r1, #60	@ 0x3c
 8010ac0:	f014 f90b 	bl	8024cda <_ZdlPvj>
 8010ac4:	4620      	mov	r0, r4
 8010ac6:	bd10      	pop	{r4, pc}

08010ac8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8010ac8:	b530      	push	{r4, r5, lr}
 8010aca:	460d      	mov	r5, r1
 8010acc:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8010ace:	b087      	sub	sp, #28
 8010ad0:	4604      	mov	r4, r0
 8010ad2:	b301      	cbz	r1, 8010b16 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8010ad4:	a801      	add	r0, sp, #4
 8010ad6:	f7ff ff2d 	bl	8010934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010ada:	892a      	ldrh	r2, [r5, #8]
 8010adc:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8010ae0:	7928      	ldrb	r0, [r5, #4]
 8010ae2:	1ad2      	subs	r2, r2, r3
 8010ae4:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8010ae6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8010aea:	441a      	add	r2, r3
 8010aec:	896b      	ldrh	r3, [r5, #10]
 8010aee:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8010af2:	f88d 0010 	strb.w	r0, [sp, #16]
 8010af6:	1b5b      	subs	r3, r3, r5
 8010af8:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 8010afa:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8010afc:	442b      	add	r3, r5
 8010afe:	4d07      	ldr	r5, [pc, #28]	@ (8010b1c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8010b00:	f8ad 1012 	strh.w	r1, [sp, #18]
 8010b04:	9503      	str	r5, [sp, #12]
 8010b06:	f8ad 2014 	strh.w	r2, [sp, #20]
 8010b0a:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010b0e:	6803      	ldr	r3, [r0, #0]
 8010b10:	a903      	add	r1, sp, #12
 8010b12:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010b14:	4798      	blx	r3
 8010b16:	b007      	add	sp, #28
 8010b18:	bd30      	pop	{r4, r5, pc}
 8010b1a:	bf00      	nop
 8010b1c:	080273a4 	.word	0x080273a4

08010b20 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8010b20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010b24:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8010b26:	b08a      	sub	sp, #40	@ 0x28
 8010b28:	4604      	mov	r4, r0
 8010b2a:	460d      	mov	r5, r1
 8010b2c:	b113      	cbz	r3, 8010b34 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8010b2e:	790b      	ldrb	r3, [r1, #4]
 8010b30:	2b00      	cmp	r3, #0
 8010b32:	d044      	beq.n	8010bbe <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8010b34:	f104 0804 	add.w	r8, r4, #4
 8010b38:	4641      	mov	r1, r8
 8010b3a:	a803      	add	r0, sp, #12
 8010b3c:	f7ff fefa 	bl	8010934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010b40:	792b      	ldrb	r3, [r5, #4]
 8010b42:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8010b46:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8010b4a:	b983      	cbnz	r3, 8010b6e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8010b4c:	892a      	ldrh	r2, [r5, #8]
 8010b4e:	88e9      	ldrh	r1, [r5, #6]
 8010b50:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8010b54:	1b92      	subs	r2, r2, r6
 8010b56:	1bc9      	subs	r1, r1, r7
 8010b58:	9301      	str	r3, [sp, #4]
 8010b5a:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 8010b5e:	9300      	str	r3, [sp, #0]
 8010b60:	b212      	sxth	r2, r2
 8010b62:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 8010b66:	b209      	sxth	r1, r1
 8010b68:	4640      	mov	r0, r8
 8010b6a:	f7fc fbd7 	bl	800d31c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8010b6e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8010b70:	b329      	cbz	r1, 8010bbe <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8010b72:	a805      	add	r0, sp, #20
 8010b74:	f7ff fede 	bl	8010934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010b78:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8010b7c:	792b      	ldrb	r3, [r5, #4]
 8010b7e:	1abf      	subs	r7, r7, r2
 8010b80:	88ea      	ldrh	r2, [r5, #6]
 8010b82:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8010b84:	4417      	add	r7, r2
 8010b86:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 8010b88:	f88d 3020 	strb.w	r3, [sp, #32]
 8010b8c:	4417      	add	r7, r2
 8010b8e:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8010b92:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8010b96:	1ab6      	subs	r6, r6, r2
 8010b98:	892a      	ldrh	r2, [r5, #8]
 8010b9a:	a907      	add	r1, sp, #28
 8010b9c:	4416      	add	r6, r2
 8010b9e:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8010ba0:	4416      	add	r6, r2
 8010ba2:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8010ba6:	2600      	movs	r6, #0
 8010ba8:	4a06      	ldr	r2, [pc, #24]	@ (8010bc4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8010baa:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 8010bae:	9207      	str	r2, [sp, #28]
 8010bb0:	6803      	ldr	r3, [r0, #0]
 8010bb2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8010bb4:	4798      	blx	r3
 8010bb6:	792b      	ldrb	r3, [r5, #4]
 8010bb8:	b10b      	cbz	r3, 8010bbe <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8010bba:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 8010bbe:	b00a      	add	sp, #40	@ 0x28
 8010bc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010bc4:	0802737c 	.word	0x0802737c

08010bc8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8010bc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010bcc:	460c      	mov	r4, r1
 8010bce:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8010bd0:	b088      	sub	sp, #32
 8010bd2:	4605      	mov	r5, r0
 8010bd4:	2900      	cmp	r1, #0
 8010bd6:	d06d      	beq.n	8010cb4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8010bd8:	4668      	mov	r0, sp
 8010bda:	f7ff feab 	bl	8010934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010bde:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 8010be0:	88e3      	ldrh	r3, [r4, #6]
 8010be2:	f9bd 8000 	ldrsh.w	r8, [sp]
 8010be6:	440b      	add	r3, r1
 8010be8:	b21b      	sxth	r3, r3
 8010bea:	4543      	cmp	r3, r8
 8010bec:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8010bf0:	db31      	blt.n	8010c56 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010bf2:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8010bf6:	44c4      	add	ip, r8
 8010bf8:	fa0f fc8c 	sxth.w	ip, ip
 8010bfc:	4563      	cmp	r3, ip
 8010bfe:	da2a      	bge.n	8010c56 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010c00:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 8010c02:	8926      	ldrh	r6, [r4, #8]
 8010c04:	4416      	add	r6, r2
 8010c06:	b236      	sxth	r6, r6
 8010c08:	42be      	cmp	r6, r7
 8010c0a:	db24      	blt.n	8010c56 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010c0c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8010c10:	4438      	add	r0, r7
 8010c12:	b200      	sxth	r0, r0
 8010c14:	4286      	cmp	r6, r0
 8010c16:	da1e      	bge.n	8010c56 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010c18:	8963      	ldrh	r3, [r4, #10]
 8010c1a:	4419      	add	r1, r3
 8010c1c:	b209      	sxth	r1, r1
 8010c1e:	4541      	cmp	r1, r8
 8010c20:	db08      	blt.n	8010c34 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8010c22:	4561      	cmp	r1, ip
 8010c24:	da06      	bge.n	8010c34 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8010c26:	89a3      	ldrh	r3, [r4, #12]
 8010c28:	441a      	add	r2, r3
 8010c2a:	b212      	sxth	r2, r2
 8010c2c:	42ba      	cmp	r2, r7
 8010c2e:	db01      	blt.n	8010c34 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8010c30:	4282      	cmp	r2, r0
 8010c32:	db10      	blt.n	8010c56 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010c34:	4b21      	ldr	r3, [pc, #132]	@ (8010cbc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8010c36:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8010c38:	9304      	str	r3, [sp, #16]
 8010c3a:	2302      	movs	r3, #2
 8010c3c:	f88d 3014 	strb.w	r3, [sp, #20]
 8010c40:	2300      	movs	r3, #0
 8010c42:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010c46:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010c4a:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010c4e:	6803      	ldr	r3, [r0, #0]
 8010c50:	a904      	add	r1, sp, #16
 8010c52:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8010c54:	4798      	blx	r3
 8010c56:	1d29      	adds	r1, r5, #4
 8010c58:	a802      	add	r0, sp, #8
 8010c5a:	f7ff fe6b 	bl	8010934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010c5e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8010c62:	88e0      	ldrh	r0, [r4, #6]
 8010c64:	eba3 0808 	sub.w	r8, r3, r8
 8010c68:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8010c6c:	7921      	ldrb	r1, [r4, #4]
 8010c6e:	1bdf      	subs	r7, r3, r7
 8010c70:	b2bb      	uxth	r3, r7
 8010c72:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 8010c76:	fa1f f888 	uxth.w	r8, r8
 8010c7a:	8922      	ldrh	r2, [r4, #8]
 8010c7c:	8967      	ldrh	r7, [r4, #10]
 8010c7e:	89a4      	ldrh	r4, [r4, #12]
 8010c80:	4440      	add	r0, r8
 8010c82:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 8010c84:	4460      	add	r0, ip
 8010c86:	441a      	add	r2, r3
 8010c88:	44b8      	add	r8, r7
 8010c8a:	4423      	add	r3, r4
 8010c8c:	4c0c      	ldr	r4, [pc, #48]	@ (8010cc0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8010c8e:	f8ad 0016 	strh.w	r0, [sp, #22]
 8010c92:	4433      	add	r3, r6
 8010c94:	4432      	add	r2, r6
 8010c96:	44e0      	add	r8, ip
 8010c98:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8010c9a:	f88d 1014 	strb.w	r1, [sp, #20]
 8010c9e:	9404      	str	r4, [sp, #16]
 8010ca0:	f8ad 2018 	strh.w	r2, [sp, #24]
 8010ca4:	f8ad 801a 	strh.w	r8, [sp, #26]
 8010ca8:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010cac:	6803      	ldr	r3, [r0, #0]
 8010cae:	a904      	add	r1, sp, #16
 8010cb0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010cb2:	4798      	blx	r3
 8010cb4:	b008      	add	sp, #32
 8010cb6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010cba:	bf00      	nop
 8010cbc:	0802737c 	.word	0x0802737c
 8010cc0:	08027390 	.word	0x08027390

08010cc4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8010cc4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010cc6:	4604      	mov	r4, r0
 8010cc8:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8010ccc:	3201      	adds	r2, #1
 8010cce:	d112      	bne.n	8010cf6 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8010cd0:	2500      	movs	r5, #0
 8010cd2:	9500      	str	r5, [sp, #0]
 8010cd4:	466d      	mov	r5, sp
 8010cd6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8010cda:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010cde:	6803      	ldr	r3, [r0, #0]
 8010ce0:	f8ad 1004 	strh.w	r1, [sp, #4]
 8010ce4:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010ce8:	4629      	mov	r1, r5
 8010cea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010cec:	4798      	blx	r3
 8010cee:	e895 0003 	ldmia.w	r5, {r0, r1}
 8010cf2:	e884 0003 	stmia.w	r4, {r0, r1}
 8010cf6:	4620      	mov	r0, r4
 8010cf8:	b003      	add	sp, #12
 8010cfa:	bd30      	pop	{r4, r5, pc}

08010cfc <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8010cfc:	b513      	push	{r0, r1, r4, lr}
 8010cfe:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8010d02:	4604      	mov	r4, r0
 8010d04:	3301      	adds	r3, #1
 8010d06:	d109      	bne.n	8010d1c <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8010d08:	4601      	mov	r1, r0
 8010d0a:	4668      	mov	r0, sp
 8010d0c:	f7ff fe12 	bl	8010934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010d10:	f8bd 3000 	ldrh.w	r3, [sp]
 8010d14:	8423      	strh	r3, [r4, #32]
 8010d16:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010d1a:	8463      	strh	r3, [r4, #34]	@ 0x22
 8010d1c:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8010d20:	b002      	add	sp, #8
 8010d22:	bd10      	pop	{r4, pc}

08010d24 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8010d24:	b513      	push	{r0, r1, r4, lr}
 8010d26:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 8010d2a:	4604      	mov	r4, r0
 8010d2c:	3301      	adds	r3, #1
 8010d2e:	d109      	bne.n	8010d44 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8010d30:	4601      	mov	r1, r0
 8010d32:	4668      	mov	r0, sp
 8010d34:	f7ff fdfe 	bl	8010934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010d38:	f8bd 3000 	ldrh.w	r3, [sp]
 8010d3c:	8423      	strh	r3, [r4, #32]
 8010d3e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010d42:	8463      	strh	r3, [r4, #34]	@ 0x22
 8010d44:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 8010d48:	b002      	add	sp, #8
 8010d4a:	bd10      	pop	{r4, pc}

08010d4c <_ZN8touchgfx6ScreenC1Ev>:
 8010d4c:	b570      	push	{r4, r5, r6, lr}
 8010d4e:	4605      	mov	r5, r0
 8010d50:	4b16      	ldr	r3, [pc, #88]	@ (8010dac <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8010d52:	2101      	movs	r1, #1
 8010d54:	f845 3b04 	str.w	r3, [r5], #4
 8010d58:	2300      	movs	r3, #0
 8010d5a:	4604      	mov	r4, r0
 8010d5c:	8103      	strh	r3, [r0, #8]
 8010d5e:	8143      	strh	r3, [r0, #10]
 8010d60:	8183      	strh	r3, [r0, #12]
 8010d62:	81c3      	strh	r3, [r0, #14]
 8010d64:	8203      	strh	r3, [r0, #16]
 8010d66:	8243      	strh	r3, [r0, #18]
 8010d68:	8283      	strh	r3, [r0, #20]
 8010d6a:	82c3      	strh	r3, [r0, #22]
 8010d6c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8010d70:	6203      	str	r3, [r0, #32]
 8010d72:	8483      	strh	r3, [r0, #36]	@ 0x24
 8010d74:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8010d76:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 8010d7a:	4a0d      	ldr	r2, [pc, #52]	@ (8010db0 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8010d7c:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 8010d80:	6343      	str	r3, [r0, #52]	@ 0x34
 8010d82:	4b0c      	ldr	r3, [pc, #48]	@ (8010db4 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8010d84:	6042      	str	r2, [r0, #4]
 8010d86:	f9b3 6000 	ldrsh.w	r6, [r3]
 8010d8a:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8010d8c:	4a0a      	ldr	r2, [pc, #40]	@ (8010db8 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8010d8e:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 8010d92:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 8010d96:	f9b2 1000 	ldrsh.w	r1, [r2]
 8010d9a:	4628      	mov	r0, r5
 8010d9c:	4798      	blx	r3
 8010d9e:	6863      	ldr	r3, [r4, #4]
 8010da0:	4628      	mov	r0, r5
 8010da2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8010da4:	4631      	mov	r1, r6
 8010da6:	4798      	blx	r3
 8010da8:	4620      	mov	r0, r4
 8010daa:	bd70      	pop	{r4, r5, r6, pc}
 8010dac:	080273b8 	.word	0x080273b8
 8010db0:	08027134 	.word	0x08027134
 8010db4:	2004bf8e 	.word	0x2004bf8e
 8010db8:	2004bf8c 	.word	0x2004bf8c

08010dbc <_ZN8touchgfx6Screen4drawEv>:
 8010dbc:	b507      	push	{r0, r1, r2, lr}
 8010dbe:	2100      	movs	r1, #0
 8010dc0:	4b08      	ldr	r3, [pc, #32]	@ (8010de4 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8010dc2:	9100      	str	r1, [sp, #0]
 8010dc4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010dc8:	4b07      	ldr	r3, [pc, #28]	@ (8010de8 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8010dca:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010dce:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010dd2:	4669      	mov	r1, sp
 8010dd4:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010dd8:	6803      	ldr	r3, [r0, #0]
 8010dda:	689b      	ldr	r3, [r3, #8]
 8010ddc:	4798      	blx	r3
 8010dde:	b003      	add	sp, #12
 8010de0:	f85d fb04 	ldr.w	pc, [sp], #4
 8010de4:	2004bf8c 	.word	0x2004bf8c
 8010de8:	2004bf8e 	.word	0x2004bf8e

08010dec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8010dec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010df0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8010df4:	b089      	sub	sp, #36	@ 0x24
 8010df6:	2b00      	cmp	r3, #0
 8010df8:	4680      	mov	r8, r0
 8010dfa:	460c      	mov	r4, r1
 8010dfc:	4615      	mov	r5, r2
 8010dfe:	dd0e      	ble.n	8010e1e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8010e00:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8010e04:	2b00      	cmp	r3, #0
 8010e06:	dd0a      	ble.n	8010e1e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8010e08:	4628      	mov	r0, r5
 8010e0a:	f7ff ff5b 	bl	8010cc4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8010e0e:	4621      	mov	r1, r4
 8010e10:	f7fe fb9f 	bl	800f552 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010e14:	69eb      	ldr	r3, [r5, #28]
 8010e16:	b928      	cbnz	r0, 8010e24 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8010e18:	461d      	mov	r5, r3
 8010e1a:	2b00      	cmp	r3, #0
 8010e1c:	d1f4      	bne.n	8010e08 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8010e1e:	b009      	add	sp, #36	@ 0x24
 8010e20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010e24:	ae04      	add	r6, sp, #16
 8010e26:	2b00      	cmp	r3, #0
 8010e28:	f000 80b5 	beq.w	8010f96 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8010e2c:	682b      	ldr	r3, [r5, #0]
 8010e2e:	4629      	mov	r1, r5
 8010e30:	68db      	ldr	r3, [r3, #12]
 8010e32:	a802      	add	r0, sp, #8
 8010e34:	4798      	blx	r3
 8010e36:	4628      	mov	r0, r5
 8010e38:	f7ff ff60 	bl	8010cfc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8010e3c:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8010e40:	4407      	add	r7, r0
 8010e42:	4628      	mov	r0, r5
 8010e44:	f7ff ff6e 	bl	8010d24 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8010e48:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8010e4c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8010e50:	4418      	add	r0, r3
 8010e52:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8010e56:	4621      	mov	r1, r4
 8010e58:	f8ad 0012 	strh.w	r0, [sp, #18]
 8010e5c:	b23f      	sxth	r7, r7
 8010e5e:	4630      	mov	r0, r6
 8010e60:	f8ad 2014 	strh.w	r2, [sp, #20]
 8010e64:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010e68:	f8ad 7010 	strh.w	r7, [sp, #16]
 8010e6c:	f7fc fb36 	bl	800d4dc <_ZN8touchgfx4RectaNERKS0_>
 8010e70:	4628      	mov	r0, r5
 8010e72:	f7ff ff27 	bl	8010cc4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8010e76:	4602      	mov	r2, r0
 8010e78:	e896 0003 	ldmia.w	r6, {r0, r1}
 8010e7c:	ab06      	add	r3, sp, #24
 8010e7e:	e883 0003 	stmia.w	r3, {r0, r1}
 8010e82:	4611      	mov	r1, r2
 8010e84:	4618      	mov	r0, r3
 8010e86:	f7fc fb29 	bl	800d4dc <_ZN8touchgfx4RectaNERKS0_>
 8010e8a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8010e8e:	f9b4 1000 	ldrsh.w	r1, [r4]
 8010e92:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8010e96:	4299      	cmp	r1, r3
 8010e98:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8010e9c:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8010ea0:	d10b      	bne.n	8010eba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8010ea2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8010ea6:	4552      	cmp	r2, sl
 8010ea8:	d107      	bne.n	8010eba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8010eaa:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8010eae:	455a      	cmp	r2, fp
 8010eb0:	d103      	bne.n	8010eba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8010eb2:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010eb6:	454a      	cmp	r2, r9
 8010eb8:	d06d      	beq.n	8010f96 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8010eba:	f1bb 0f00 	cmp.w	fp, #0
 8010ebe:	dd65      	ble.n	8010f8c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8010ec0:	f1b9 0f00 	cmp.w	r9, #0
 8010ec4:	dd62      	ble.n	8010f8c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8010ec6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8010eca:	fa1f f08a 	uxth.w	r0, sl
 8010ece:	4552      	cmp	r2, sl
 8010ed0:	9000      	str	r0, [sp, #0]
 8010ed2:	da12      	bge.n	8010efa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8010ed4:	9301      	str	r3, [sp, #4]
 8010ed6:	9b00      	ldr	r3, [sp, #0]
 8010ed8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8010edc:	f8ad 2012 	strh.w	r2, [sp, #18]
 8010ee0:	1a9a      	subs	r2, r3, r2
 8010ee2:	f8ad 1010 	strh.w	r1, [sp, #16]
 8010ee6:	f8ad 0014 	strh.w	r0, [sp, #20]
 8010eea:	f8ad 2016 	strh.w	r2, [sp, #22]
 8010eee:	69ea      	ldr	r2, [r5, #28]
 8010ef0:	4631      	mov	r1, r6
 8010ef2:	4640      	mov	r0, r8
 8010ef4:	f7ff ff7a 	bl	8010dec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010ef8:	9b01      	ldr	r3, [sp, #4]
 8010efa:	f9b4 2000 	ldrsh.w	r2, [r4]
 8010efe:	b29f      	uxth	r7, r3
 8010f00:	429a      	cmp	r2, r3
 8010f02:	da0d      	bge.n	8010f20 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8010f04:	f8ad 2010 	strh.w	r2, [sp, #16]
 8010f08:	1aba      	subs	r2, r7, r2
 8010f0a:	f8ad a012 	strh.w	sl, [sp, #18]
 8010f0e:	f8ad 2014 	strh.w	r2, [sp, #20]
 8010f12:	f8ad 9016 	strh.w	r9, [sp, #22]
 8010f16:	69ea      	ldr	r2, [r5, #28]
 8010f18:	4631      	mov	r1, r6
 8010f1a:	4640      	mov	r0, r8
 8010f1c:	f7ff ff66 	bl	8010dec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010f20:	8822      	ldrh	r2, [r4, #0]
 8010f22:	88a3      	ldrh	r3, [r4, #4]
 8010f24:	445f      	add	r7, fp
 8010f26:	4413      	add	r3, r2
 8010f28:	b29b      	uxth	r3, r3
 8010f2a:	b2bf      	uxth	r7, r7
 8010f2c:	b23a      	sxth	r2, r7
 8010f2e:	b219      	sxth	r1, r3
 8010f30:	4291      	cmp	r1, r2
 8010f32:	dd0d      	ble.n	8010f50 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8010f34:	1bdb      	subs	r3, r3, r7
 8010f36:	f8ad 2010 	strh.w	r2, [sp, #16]
 8010f3a:	f8ad a012 	strh.w	sl, [sp, #18]
 8010f3e:	f8ad 3014 	strh.w	r3, [sp, #20]
 8010f42:	f8ad 9016 	strh.w	r9, [sp, #22]
 8010f46:	69ea      	ldr	r2, [r5, #28]
 8010f48:	4631      	mov	r1, r6
 8010f4a:	4640      	mov	r0, r8
 8010f4c:	f7ff ff4e 	bl	8010dec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010f50:	88e2      	ldrh	r2, [r4, #6]
 8010f52:	8863      	ldrh	r3, [r4, #2]
 8010f54:	4413      	add	r3, r2
 8010f56:	9a00      	ldr	r2, [sp, #0]
 8010f58:	b29b      	uxth	r3, r3
 8010f5a:	444a      	add	r2, r9
 8010f5c:	fa1f f982 	uxth.w	r9, r2
 8010f60:	fa0f f289 	sxth.w	r2, r9
 8010f64:	b219      	sxth	r1, r3
 8010f66:	428a      	cmp	r2, r1
 8010f68:	da15      	bge.n	8010f96 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8010f6a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010f6e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010f72:	eba3 0309 	sub.w	r3, r3, r9
 8010f76:	f8ad 1014 	strh.w	r1, [sp, #20]
 8010f7a:	f8ad 0010 	strh.w	r0, [sp, #16]
 8010f7e:	f8ad 2012 	strh.w	r2, [sp, #18]
 8010f82:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010f86:	69ea      	ldr	r2, [r5, #28]
 8010f88:	4631      	mov	r1, r6
 8010f8a:	e001      	b.n	8010f90 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8010f8c:	4621      	mov	r1, r4
 8010f8e:	69ea      	ldr	r2, [r5, #28]
 8010f90:	4640      	mov	r0, r8
 8010f92:	f7ff ff2b 	bl	8010dec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010f96:	4628      	mov	r0, r5
 8010f98:	f7ff fe94 	bl	8010cc4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8010f9c:	4633      	mov	r3, r6
 8010f9e:	4602      	mov	r2, r0
 8010fa0:	6861      	ldr	r1, [r4, #4]
 8010fa2:	6820      	ldr	r0, [r4, #0]
 8010fa4:	c303      	stmia	r3!, {r0, r1}
 8010fa6:	4611      	mov	r1, r2
 8010fa8:	4630      	mov	r0, r6
 8010faa:	f7fc fa97 	bl	800d4dc <_ZN8touchgfx4RectaNERKS0_>
 8010fae:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8010fb2:	2b00      	cmp	r3, #0
 8010fb4:	f77f af33 	ble.w	8010e1e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8010fb8:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8010fbc:	2b00      	cmp	r3, #0
 8010fbe:	f77f af2e 	ble.w	8010e1e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8010fc2:	4628      	mov	r0, r5
 8010fc4:	f7ff fe9a 	bl	8010cfc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8010fc8:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8010fcc:	1a18      	subs	r0, r3, r0
 8010fce:	f8ad 0010 	strh.w	r0, [sp, #16]
 8010fd2:	4628      	mov	r0, r5
 8010fd4:	f7ff fea6 	bl	8010d24 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8010fd8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8010fdc:	4631      	mov	r1, r6
 8010fde:	1a18      	subs	r0, r3, r0
 8010fe0:	f8ad 0012 	strh.w	r0, [sp, #18]
 8010fe4:	682b      	ldr	r3, [r5, #0]
 8010fe6:	4628      	mov	r0, r5
 8010fe8:	689b      	ldr	r3, [r3, #8]
 8010fea:	4798      	blx	r3
 8010fec:	e717      	b.n	8010e1e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08010fee <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8010fee:	b570      	push	{r4, r5, r6, lr}
 8010ff0:	2300      	movs	r3, #0
 8010ff2:	460c      	mov	r4, r1
 8010ff4:	b086      	sub	sp, #24
 8010ff6:	1d06      	adds	r6, r0, #4
 8010ff8:	4631      	mov	r1, r6
 8010ffa:	4605      	mov	r5, r0
 8010ffc:	a802      	add	r0, sp, #8
 8010ffe:	9301      	str	r3, [sp, #4]
 8011000:	f7ff fc98 	bl	8010934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011004:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011008:	8822      	ldrh	r2, [r4, #0]
 801100a:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801100e:	1ad2      	subs	r2, r2, r3
 8011010:	8863      	ldrh	r3, [r4, #2]
 8011012:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011016:	1a5b      	subs	r3, r3, r1
 8011018:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801101c:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011020:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011024:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011028:	aa01      	add	r2, sp, #4
 801102a:	a904      	add	r1, sp, #16
 801102c:	4630      	mov	r0, r6
 801102e:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011032:	f7fc fb2b 	bl	800d68c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8011036:	9a01      	ldr	r2, [sp, #4]
 8011038:	b11a      	cbz	r2, 8011042 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801103a:	4621      	mov	r1, r4
 801103c:	4628      	mov	r0, r5
 801103e:	f7ff fed5 	bl	8010dec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011042:	b006      	add	sp, #24
 8011044:	bd70      	pop	{r4, r5, r6, pc}

08011046 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8011046:	b530      	push	{r4, r5, lr}
 8011048:	4602      	mov	r2, r0
 801104a:	b085      	sub	sp, #20
 801104c:	460d      	mov	r5, r1
 801104e:	466b      	mov	r3, sp
 8011050:	4604      	mov	r4, r0
 8011052:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8011056:	6851      	ldr	r1, [r2, #4]
 8011058:	c303      	stmia	r3!, {r0, r1}
 801105a:	4629      	mov	r1, r5
 801105c:	4668      	mov	r0, sp
 801105e:	f7fc fa3d 	bl	800d4dc <_ZN8touchgfx4RectaNERKS0_>
 8011062:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8011066:	b12b      	cbz	r3, 8011074 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8011068:	4669      	mov	r1, sp
 801106a:	4620      	mov	r0, r4
 801106c:	f7ff ffbf 	bl	8010fee <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8011070:	b005      	add	sp, #20
 8011072:	bd30      	pop	{r4, r5, pc}
 8011074:	3404      	adds	r4, #4
 8011076:	4621      	mov	r1, r4
 8011078:	a802      	add	r0, sp, #8
 801107a:	f7ff fc5b 	bl	8010934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801107e:	f8bd 3000 	ldrh.w	r3, [sp]
 8011082:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8011086:	4669      	mov	r1, sp
 8011088:	1a9b      	subs	r3, r3, r2
 801108a:	f8ad 3000 	strh.w	r3, [sp]
 801108e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8011092:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011096:	4620      	mov	r0, r4
 8011098:	1a9b      	subs	r3, r3, r2
 801109a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801109e:	f7fc fabc 	bl	800d61a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80110a2:	e7e5      	b.n	8011070 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080110a4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80110a4:	460b      	mov	r3, r1
 80110a6:	680a      	ldr	r2, [r1, #0]
 80110a8:	1d01      	adds	r1, r0, #4
 80110aa:	6992      	ldr	r2, [r2, #24]
 80110ac:	4618      	mov	r0, r3
 80110ae:	4710      	bx	r2

080110b0 <_ZN8touchgfx12TextProviderC1Ev>:
 80110b0:	b538      	push	{r3, r4, r5, lr}
 80110b2:	2500      	movs	r5, #0
 80110b4:	2302      	movs	r3, #2
 80110b6:	4604      	mov	r4, r0
 80110b8:	e9c0 5500 	strd	r5, r5, [r0]
 80110bc:	7403      	strb	r3, [r0, #16]
 80110be:	6145      	str	r5, [r0, #20]
 80110c0:	7605      	strb	r5, [r0, #24]
 80110c2:	83c5      	strh	r5, [r0, #30]
 80110c4:	8405      	strh	r5, [r0, #32]
 80110c6:	86c5      	strh	r5, [r0, #54]	@ 0x36
 80110c8:	8705      	strh	r5, [r0, #56]	@ 0x38
 80110ca:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 80110cc:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 80110d0:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 80110d4:	220e      	movs	r2, #14
 80110d6:	4629      	mov	r1, r5
 80110d8:	304c      	adds	r0, #76	@ 0x4c
 80110da:	f014 f937 	bl	802534c <memset>
 80110de:	2301      	movs	r3, #1
 80110e0:	4620      	mov	r0, r4
 80110e2:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 80110e6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80110ea:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 80110ee:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 80110f2:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 80110f6:	f7f1 fda3 	bl	8002c40 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80110fa:	4620      	mov	r0, r4
 80110fc:	bd38      	pop	{r3, r4, r5, pc}

080110fe <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80110fe:	b530      	push	{r4, r5, lr}
 8011100:	2500      	movs	r5, #0
 8011102:	2401      	movs	r4, #1
 8011104:	6843      	ldr	r3, [r0, #4]
 8011106:	b913      	cbnz	r3, 801110e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8011108:	6803      	ldr	r3, [r0, #0]
 801110a:	b313      	cbz	r3, 8011152 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801110c:	6043      	str	r3, [r0, #4]
 801110e:	7e03      	ldrb	r3, [r0, #24]
 8011110:	b143      	cbz	r3, 8011124 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8011112:	6943      	ldr	r3, [r0, #20]
 8011114:	b12b      	cbz	r3, 8011122 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8011116:	881a      	ldrh	r2, [r3, #0]
 8011118:	b11a      	cbz	r2, 8011122 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801111a:	1c9a      	adds	r2, r3, #2
 801111c:	6142      	str	r2, [r0, #20]
 801111e:	8818      	ldrh	r0, [r3, #0]
 8011120:	bd30      	pop	{r4, r5, pc}
 8011122:	7605      	strb	r5, [r0, #24]
 8011124:	6843      	ldr	r3, [r0, #4]
 8011126:	8819      	ldrh	r1, [r3, #0]
 8011128:	b199      	cbz	r1, 8011152 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801112a:	1c9a      	adds	r2, r3, #2
 801112c:	2902      	cmp	r1, #2
 801112e:	6042      	str	r2, [r0, #4]
 8011130:	d1f5      	bne.n	801111e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8011132:	7c03      	ldrb	r3, [r0, #16]
 8011134:	2b01      	cmp	r3, #1
 8011136:	d8e5      	bhi.n	8011104 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011138:	1c5a      	adds	r2, r3, #1
 801113a:	7402      	strb	r2, [r0, #16]
 801113c:	3302      	adds	r3, #2
 801113e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8011142:	6143      	str	r3, [r0, #20]
 8011144:	2b00      	cmp	r3, #0
 8011146:	d0dd      	beq.n	8011104 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011148:	881b      	ldrh	r3, [r3, #0]
 801114a:	2b00      	cmp	r3, #0
 801114c:	d0da      	beq.n	8011104 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801114e:	7604      	strb	r4, [r0, #24]
 8011150:	e7d8      	b.n	8011104 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011152:	2000      	movs	r0, #0
 8011154:	e7e4      	b.n	8011120 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08011156 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8011156:	6001      	str	r1, [r0, #0]
 8011158:	2100      	movs	r1, #0
 801115a:	b430      	push	{r4, r5}
 801115c:	6041      	str	r1, [r0, #4]
 801115e:	6815      	ldr	r5, [r2, #0]
 8011160:	6085      	str	r5, [r0, #8]
 8011162:	6852      	ldr	r2, [r2, #4]
 8011164:	6443      	str	r3, [r0, #68]	@ 0x44
 8011166:	9b02      	ldr	r3, [sp, #8]
 8011168:	60c2      	str	r2, [r0, #12]
 801116a:	7401      	strb	r1, [r0, #16]
 801116c:	6141      	str	r1, [r0, #20]
 801116e:	7601      	strb	r1, [r0, #24]
 8011170:	8701      	strh	r1, [r0, #56]	@ 0x38
 8011172:	8401      	strh	r1, [r0, #32]
 8011174:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 8011178:	6483      	str	r3, [r0, #72]	@ 0x48
 801117a:	bc30      	pop	{r4, r5}
 801117c:	f7f1 bd60 	b.w	8002c40 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08011180 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8011180:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011182:	4605      	mov	r5, r0
 8011184:	4608      	mov	r0, r1
 8011186:	b1e9      	cbz	r1, 80111c4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8011188:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 801118c:	460b      	mov	r3, r1
 801118e:	4622      	mov	r2, r4
 8011190:	f101 0708 	add.w	r7, r1, #8
 8011194:	4626      	mov	r6, r4
 8011196:	6818      	ldr	r0, [r3, #0]
 8011198:	6859      	ldr	r1, [r3, #4]
 801119a:	3308      	adds	r3, #8
 801119c:	c603      	stmia	r6!, {r0, r1}
 801119e:	42bb      	cmp	r3, r7
 80111a0:	4634      	mov	r4, r6
 80111a2:	d1f7      	bne.n	8011194 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 80111a4:	6818      	ldr	r0, [r3, #0]
 80111a6:	6030      	str	r0, [r6, #0]
 80111a8:	4610      	mov	r0, r2
 80111aa:	889b      	ldrh	r3, [r3, #4]
 80111ac:	80b3      	strh	r3, [r6, #4]
 80111ae:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 80111b2:	015b      	lsls	r3, r3, #5
 80111b4:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80111b8:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 80111bc:	430b      	orrs	r3, r1
 80111be:	425b      	negs	r3, r3
 80111c0:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 80111c4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080111c6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80111c6:	b538      	push	{r3, r4, r5, lr}
 80111c8:	460c      	mov	r4, r1
 80111ca:	6811      	ldr	r1, [r2, #0]
 80111cc:	4610      	mov	r0, r2
 80111ce:	68cd      	ldr	r5, [r1, #12]
 80111d0:	4619      	mov	r1, r3
 80111d2:	47a8      	blx	r5
 80111d4:	2800      	cmp	r0, #0
 80111d6:	bf08      	it	eq
 80111d8:	4620      	moveq	r0, r4
 80111da:	bd38      	pop	{r3, r4, r5, pc}

080111dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 80111dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80111de:	4604      	mov	r4, r0
 80111e0:	4615      	mov	r5, r2
 80111e2:	4608      	mov	r0, r1
 80111e4:	b93a      	cbnz	r2, 80111f6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 80111e6:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 80111ea:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
 80111ee:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
 80111f2:	4628      	mov	r0, r5
 80111f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80111f6:	f46f 6763 	mvn.w	r7, #3632	@ 0xe30
 80111fa:	f892 c00d 	ldrb.w	ip, [r2, #13]
 80111fe:	8893      	ldrh	r3, [r2, #4]
 8011200:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8011204:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8011208:	79ee      	ldrb	r6, [r5, #7]
 801120a:	4316      	orrs	r6, r2
 801120c:	19da      	adds	r2, r3, r7
 801120e:	b291      	uxth	r1, r2
 8011210:	291d      	cmp	r1, #29
 8011212:	b2b7      	uxth	r7, r6
 8011214:	d879      	bhi.n	801130a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x12e>
 8011216:	2201      	movs	r2, #1
 8011218:	408a      	lsls	r2, r1
 801121a:	4974      	ldr	r1, [pc, #464]	@ (80113ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x210>)
 801121c:	10f6      	asrs	r6, r6, #3
 801121e:	420a      	tst	r2, r1
 8011220:	d12d      	bne.n	801127e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa2>
 8011222:	f412 7f60 	tst.w	r2, #896	@ 0x380
 8011226:	d070      	beq.n	801130a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x12e>
 8011228:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
 801122c:	462b      	mov	r3, r5
 801122e:	f105 0e08 	add.w	lr, r5, #8
 8011232:	4615      	mov	r5, r2
 8011234:	4694      	mov	ip, r2
 8011236:	6818      	ldr	r0, [r3, #0]
 8011238:	6859      	ldr	r1, [r3, #4]
 801123a:	3308      	adds	r3, #8
 801123c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8011240:	4573      	cmp	r3, lr
 8011242:	4662      	mov	r2, ip
 8011244:	d1f6      	bne.n	8011234 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 8011246:	6818      	ldr	r0, [r3, #0]
 8011248:	f8cc 0000 	str.w	r0, [ip]
 801124c:	889b      	ldrh	r3, [r3, #4]
 801124e:	f8ac 3004 	strh.w	r3, [ip, #4]
 8011252:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
 8011256:	b2b3      	uxth	r3, r6
 8011258:	1aca      	subs	r2, r1, r3
 801125a:	b292      	uxth	r2, r2
 801125c:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
 8011260:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 8011264:	10d2      	asrs	r2, r2, #3
 8011266:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 801126a:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 801126e:	4302      	orrs	r2, r0
 8011270:	1bcf      	subs	r7, r1, r7
 8011272:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
 8011276:	1afb      	subs	r3, r7, r3
 8011278:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 801127c:	e7b9      	b.n	80111f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801127e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8011280:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8011284:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8011286:	f640 6333 	movw	r3, #3635	@ 0xe33
 801128a:	4299      	cmp	r1, r3
 801128c:	d110      	bne.n	80112b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd4>
 801128e:	6803      	ldr	r3, [r0, #0]
 8011290:	68db      	ldr	r3, [r3, #12]
 8011292:	4798      	blx	r3
 8011294:	7b41      	ldrb	r1, [r0, #13]
 8011296:	00cb      	lsls	r3, r1, #3
 8011298:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801129c:	7a03      	ldrb	r3, [r0, #8]
 801129e:	0648      	lsls	r0, r1, #25
 80112a0:	ea43 0302 	orr.w	r3, r3, r2
 80112a4:	bf44      	itt	mi
 80112a6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80112aa:	b21b      	sxthmi	r3, r3
 80112ac:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80112b0:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
 80112b4:	462a      	mov	r2, r5
 80112b6:	443b      	add	r3, r7
 80112b8:	4433      	add	r3, r6
 80112ba:	f104 064c 	add.w	r6, r4, #76	@ 0x4c
 80112be:	f105 0c08 	add.w	ip, r5, #8
 80112c2:	4635      	mov	r5, r6
 80112c4:	b29b      	uxth	r3, r3
 80112c6:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80112ca:	4637      	mov	r7, r6
 80112cc:	6810      	ldr	r0, [r2, #0]
 80112ce:	6851      	ldr	r1, [r2, #4]
 80112d0:	3208      	adds	r2, #8
 80112d2:	c703      	stmia	r7!, {r0, r1}
 80112d4:	4562      	cmp	r2, ip
 80112d6:	463e      	mov	r6, r7
 80112d8:	d1f7      	bne.n	80112ca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xee>
 80112da:	6810      	ldr	r0, [r2, #0]
 80112dc:	6038      	str	r0, [r7, #0]
 80112de:	8892      	ldrh	r2, [r2, #4]
 80112e0:	80ba      	strh	r2, [r7, #4]
 80112e2:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 80112e6:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 80112ea:	10db      	asrs	r3, r3, #3
 80112ec:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80112f0:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80112f4:	4313      	orrs	r3, r2
 80112f6:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 80112fa:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
 80112fe:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 8011302:	1a9b      	subs	r3, r3, r2
 8011304:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
 8011308:	e773      	b.n	80111f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801130a:	f640 611b 	movw	r1, #3611	@ 0xe1b
 801130e:	f023 0204 	bic.w	r2, r3, #4
 8011312:	428a      	cmp	r2, r1
 8011314:	d003      	beq.n	801131e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 8011316:	f640 621d 	movw	r2, #3613	@ 0xe1d
 801131a:	4293      	cmp	r3, r2
 801131c:	d120      	bne.n	8011360 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x184>
 801131e:	3b01      	subs	r3, #1
 8011320:	4602      	mov	r2, r0
 8011322:	b29b      	uxth	r3, r3
 8011324:	4629      	mov	r1, r5
 8011326:	4620      	mov	r0, r4
 8011328:	f7ff ff4d 	bl	80111c6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801132c:	7b41      	ldrb	r1, [r0, #13]
 801132e:	00cb      	lsls	r3, r1, #3
 8011330:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011334:	7a03      	ldrb	r3, [r0, #8]
 8011336:	0649      	lsls	r1, r1, #25
 8011338:	ea43 0302 	orr.w	r3, r3, r2
 801133c:	bf44      	itt	mi
 801133e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011342:	b21b      	sxthmi	r3, r3
 8011344:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8011348:	7b6b      	ldrb	r3, [r5, #13]
 801134a:	7aaa      	ldrb	r2, [r5, #10]
 801134c:	005b      	lsls	r3, r3, #1
 801134e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011352:	4313      	orrs	r3, r2
 8011354:	115a      	asrs	r2, r3, #5
 8011356:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801135a:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 801135e:	e036      	b.n	80113ce <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 8011360:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8011364:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 8011368:	7a2a      	ldrb	r2, [r5, #8]
 801136a:	f01c 0f40 	tst.w	ip, #64	@ 0x40
 801136e:	ea42 0201 	orr.w	r2, r2, r1
 8011372:	f640 6109 	movw	r1, #3593	@ 0xe09
 8011376:	bf1c      	itt	ne
 8011378:	f5a2 7200 	subne.w	r2, r2, #512	@ 0x200
 801137c:	b212      	sxthne	r2, r2
 801137e:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 8011382:	f023 0210 	bic.w	r2, r3, #16
 8011386:	428a      	cmp	r2, r1
 8011388:	d003      	beq.n	8011392 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 801138a:	f640 6213 	movw	r2, #3603	@ 0xe13
 801138e:	4293      	cmp	r3, r2
 8011390:	d12a      	bne.n	80113e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20c>
 8011392:	7b6e      	ldrb	r6, [r5, #13]
 8011394:	4629      	mov	r1, r5
 8011396:	0076      	lsls	r6, r6, #1
 8011398:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 801139c:	7aae      	ldrb	r6, [r5, #10]
 801139e:	4316      	orrs	r6, r2
 80113a0:	f640 6213 	movw	r2, #3603	@ 0xe13
 80113a4:	4293      	cmp	r3, r2
 80113a6:	bf18      	it	ne
 80113a8:	f103 33ff 	addne.w	r3, r3, #4294967295
 80113ac:	4602      	mov	r2, r0
 80113ae:	bf14      	ite	ne
 80113b0:	b29b      	uxthne	r3, r3
 80113b2:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 80113b6:	4620      	mov	r0, r4
 80113b8:	f7ff ff05 	bl	80111c6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80113bc:	7b43      	ldrb	r3, [r0, #13]
 80113be:	7a82      	ldrb	r2, [r0, #10]
 80113c0:	005b      	lsls	r3, r3, #1
 80113c2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80113c6:	4313      	orrs	r3, r2
 80113c8:	1af6      	subs	r6, r6, r3
 80113ca:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
 80113ce:	7b69      	ldrb	r1, [r5, #13]
 80113d0:	00cb      	lsls	r3, r1, #3
 80113d2:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80113d6:	7a2b      	ldrb	r3, [r5, #8]
 80113d8:	4313      	orrs	r3, r2
 80113da:	064a      	lsls	r2, r1, #25
 80113dc:	bf44      	itt	mi
 80113de:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80113e2:	b21b      	sxthmi	r3, r3
 80113e4:	1bdb      	subs	r3, r3, r7
 80113e6:	e747      	b.n	8011278 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9c>
 80113e8:	2300      	movs	r3, #0
 80113ea:	e7b6      	b.n	801135a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x17e>
 80113ec:	3fc00079 	.word	0x3fc00079

080113f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80113f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80113f4:	4604      	mov	r4, r0
 80113f6:	b942      	cbnz	r2, 801140a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80113f8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80113fc:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 8011400:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 8011404:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8011408:	e047      	b.n	801149a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801140a:	7b51      	ldrb	r1, [r2, #13]
 801140c:	8893      	ldrh	r3, [r2, #4]
 801140e:	010d      	lsls	r5, r1, #4
 8011410:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 8011414:	79d5      	ldrb	r5, [r2, #7]
 8011416:	4305      	orrs	r5, r0
 8011418:	2d04      	cmp	r5, #4
 801141a:	bfcc      	ite	gt
 801141c:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8011420:	f04f 0e01 	movle.w	lr, #1
 8011424:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 8011428:	f200 80ab 	bhi.w	8011582 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 801142c:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 8011430:	4283      	cmp	r3, r0
 8011432:	d216      	bcs.n	8011462 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011434:	f240 605b 	movw	r0, #1627	@ 0x65b
 8011438:	4283      	cmp	r3, r0
 801143a:	d859      	bhi.n	80114f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 801143c:	f240 6057 	movw	r0, #1623	@ 0x657
 8011440:	4283      	cmp	r3, r0
 8011442:	d20e      	bcs.n	8011462 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011444:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8011448:	d24a      	bcs.n	80114e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801144a:	f240 604e 	movw	r0, #1614	@ 0x64e
 801144e:	4283      	cmp	r3, r0
 8011450:	d207      	bcs.n	8011462 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011452:	f240 601a 	movw	r0, #1562	@ 0x61a
 8011456:	4283      	cmp	r3, r0
 8011458:	d02a      	beq.n	80114b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801145a:	d821      	bhi.n	80114a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 801145c:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 8011460:	d35b      	bcc.n	801151a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011462:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 8011466:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801146a:	f040 80d0 	bne.w	801160e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801146e:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 8011472:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8011476:	f040 80ca 	bne.w	801160e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801147a:	00cb      	lsls	r3, r1, #3
 801147c:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8011480:	7a13      	ldrb	r3, [r2, #8]
 8011482:	0649      	lsls	r1, r1, #25
 8011484:	ea43 0300 	orr.w	r3, r3, r0
 8011488:	bf44      	itt	mi
 801148a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801148e:	b21b      	sxthmi	r3, r3
 8011490:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8011494:	1b5d      	subs	r5, r3, r5
 8011496:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801149a:	4610      	mov	r0, r2
 801149c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80114a0:	f240 604b 	movw	r0, #1611	@ 0x64b
 80114a4:	4283      	cmp	r3, r0
 80114a6:	d338      	bcc.n	801151a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80114a8:	f240 604c 	movw	r0, #1612	@ 0x64c
 80114ac:	4283      	cmp	r3, r0
 80114ae:	d9d8      	bls.n	8011462 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80114b0:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 80114b4:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 80114b8:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80114bc:	f040 80f2 	bne.w	80116a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80114c0:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80114c4:	f040 80ee 	bne.w	80116a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80114c8:	00cb      	lsls	r3, r1, #3
 80114ca:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 80114ce:	7a13      	ldrb	r3, [r2, #8]
 80114d0:	064e      	lsls	r6, r1, #25
 80114d2:	ea43 0300 	orr.w	r3, r3, r0
 80114d6:	bf44      	itt	mi
 80114d8:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80114dc:	b21b      	sxthmi	r3, r3
 80114de:	e7d9      	b.n	8011494 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 80114e0:	f240 6054 	movw	r0, #1620	@ 0x654
 80114e4:	4283      	cmp	r3, r0
 80114e6:	d8e3      	bhi.n	80114b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80114e8:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 80114ec:	d9e0      	bls.n	80114b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80114ee:	e7b8      	b.n	8011462 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80114f0:	f240 6074 	movw	r0, #1652	@ 0x674
 80114f4:	4283      	cmp	r3, r0
 80114f6:	d0b4      	beq.n	8011462 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80114f8:	d82d      	bhi.n	8011556 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 80114fa:	f240 605e 	movw	r0, #1630	@ 0x65e
 80114fe:	4283      	cmp	r3, r0
 8011500:	d804      	bhi.n	801150c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8011502:	f240 605d 	movw	r0, #1629	@ 0x65d
 8011506:	4283      	cmp	r3, r0
 8011508:	d3d2      	bcc.n	80114b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801150a:	e7aa      	b.n	8011462 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801150c:	f240 605f 	movw	r0, #1631	@ 0x65f
 8011510:	4283      	cmp	r3, r0
 8011512:	d0cd      	beq.n	80114b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011514:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 8011518:	d0a3      	beq.n	8011462 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801151a:	00cb      	lsls	r3, r1, #3
 801151c:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8011520:	7a13      	ldrb	r3, [r2, #8]
 8011522:	0649      	lsls	r1, r1, #25
 8011524:	ea43 0300 	orr.w	r3, r3, r0
 8011528:	bf44      	itt	mi
 801152a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801152e:	b21b      	sxthmi	r3, r3
 8011530:	1b5d      	subs	r5, r3, r5
 8011532:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8011536:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801153a:	7b53      	ldrb	r3, [r2, #13]
 801153c:	015b      	lsls	r3, r3, #5
 801153e:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8011542:	7993      	ldrb	r3, [r2, #6]
 8011544:	430b      	orrs	r3, r1
 8011546:	2105      	movs	r1, #5
 8011548:	005b      	lsls	r3, r3, #1
 801154a:	fb93 f3f1 	sdiv	r3, r3, r1
 801154e:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8011552:	440b      	add	r3, r1
 8011554:	e756      	b.n	8011404 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8011556:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 801155a:	4283      	cmp	r3, r0
 801155c:	d809      	bhi.n	8011572 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801155e:	f240 60df 	movw	r0, #1759	@ 0x6df
 8011562:	4283      	cmp	r3, r0
 8011564:	f4bf af7d 	bcs.w	8011462 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011568:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 801156c:	2b05      	cmp	r3, #5
 801156e:	d8d4      	bhi.n	801151a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011570:	e777      	b.n	8011462 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011572:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8011576:	4283      	cmp	r3, r0
 8011578:	d09a      	beq.n	80114b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801157a:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 801157e:	4283      	cmp	r3, r0
 8011580:	e7ca      	b.n	8011518 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8011582:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8011586:	d22b      	bcs.n	80115e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8011588:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 801158c:	4283      	cmp	r3, r0
 801158e:	d28f      	bcs.n	80114b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011590:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8011594:	4283      	cmp	r3, r0
 8011596:	d816      	bhi.n	80115c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8011598:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 801159c:	4283      	cmp	r3, r0
 801159e:	f4bf af60 	bcs.w	8011462 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80115a2:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 80115a6:	4283      	cmp	r3, r0
 80115a8:	d80a      	bhi.n	80115c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80115aa:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 80115ae:	4283      	cmp	r3, r0
 80115b0:	f4bf af57 	bcs.w	8011462 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80115b4:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 80115b8:	4283      	cmp	r3, r0
 80115ba:	f43f af79 	beq.w	80114b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80115be:	e7ac      	b.n	801151a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80115c0:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 80115c4:	e7f8      	b.n	80115b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80115c6:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 80115ca:	4283      	cmp	r3, r0
 80115cc:	d802      	bhi.n	80115d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80115ce:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 80115d2:	e798      	b.n	8011506 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 80115d4:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 80115d8:	4283      	cmp	r3, r0
 80115da:	f47f af42 	bne.w	8011462 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80115de:	e767      	b.n	80114b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80115e0:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 80115e4:	4283      	cmp	r3, r0
 80115e6:	f43f af63 	beq.w	80114b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80115ea:	d802      	bhi.n	80115f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 80115ec:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 80115f0:	e7f2      	b.n	80115d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 80115f2:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 80115f6:	4283      	cmp	r3, r0
 80115f8:	d805      	bhi.n	8011606 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 80115fa:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 80115fe:	4283      	cmp	r3, r0
 8011600:	f4ff af2f 	bcc.w	8011462 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011604:	e754      	b.n	80114b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011606:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 801160a:	4283      	cmp	r3, r0
 801160c:	e7af      	b.n	801156e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801160e:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8011612:	4617      	mov	r7, r2
 8011614:	4666      	mov	r6, ip
 8011616:	f102 0808 	add.w	r8, r2, #8
 801161a:	46e6      	mov	lr, ip
 801161c:	6838      	ldr	r0, [r7, #0]
 801161e:	6879      	ldr	r1, [r7, #4]
 8011620:	3708      	adds	r7, #8
 8011622:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8011626:	4547      	cmp	r7, r8
 8011628:	46f4      	mov	ip, lr
 801162a:	d1f6      	bne.n	801161a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 801162c:	6838      	ldr	r0, [r7, #0]
 801162e:	f8ce 0000 	str.w	r0, [lr]
 8011632:	88b9      	ldrh	r1, [r7, #4]
 8011634:	f8ae 1004 	strh.w	r1, [lr, #4]
 8011638:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 801163c:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8011640:	d009      	beq.n	8011656 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8011642:	7b51      	ldrb	r1, [r2, #13]
 8011644:	7992      	ldrb	r2, [r2, #6]
 8011646:	0149      	lsls	r1, r1, #5
 8011648:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801164c:	4311      	orrs	r1, r2
 801164e:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8011652:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8011656:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801165a:	b2ad      	uxth	r5, r5
 801165c:	d00d      	beq.n	801167a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801165e:	442b      	add	r3, r5
 8011660:	b29b      	uxth	r3, r3
 8011662:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8011666:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 801166a:	10db      	asrs	r3, r3, #3
 801166c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8011670:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8011674:	4313      	orrs	r3, r2
 8011676:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 801167a:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 801167e:	00cb      	lsls	r3, r1, #3
 8011680:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011684:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8011688:	064f      	lsls	r7, r1, #25
 801168a:	ea43 0302 	orr.w	r3, r3, r2
 801168e:	bf44      	itt	mi
 8011690:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011694:	b21b      	sxthmi	r3, r3
 8011696:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801169a:	1b5b      	subs	r3, r3, r5
 801169c:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 80116a0:	4632      	mov	r2, r6
 80116a2:	e6fa      	b.n	801149a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80116a4:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 80116a8:	4617      	mov	r7, r2
 80116aa:	4666      	mov	r6, ip
 80116ac:	f102 0908 	add.w	r9, r2, #8
 80116b0:	46e0      	mov	r8, ip
 80116b2:	6838      	ldr	r0, [r7, #0]
 80116b4:	6879      	ldr	r1, [r7, #4]
 80116b6:	3708      	adds	r7, #8
 80116b8:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80116bc:	454f      	cmp	r7, r9
 80116be:	46c4      	mov	ip, r8
 80116c0:	d1f6      	bne.n	80116b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80116c2:	6838      	ldr	r0, [r7, #0]
 80116c4:	f8c8 0000 	str.w	r0, [r8]
 80116c8:	88b9      	ldrh	r1, [r7, #4]
 80116ca:	f8a8 1004 	strh.w	r1, [r8, #4]
 80116ce:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 80116d2:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80116d6:	d009      	beq.n	80116ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 80116d8:	7b51      	ldrb	r1, [r2, #13]
 80116da:	7992      	ldrb	r2, [r2, #6]
 80116dc:	0149      	lsls	r1, r1, #5
 80116de:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80116e2:	4311      	orrs	r1, r2
 80116e4:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80116e8:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 80116ec:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80116f0:	d00e      	beq.n	8011710 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80116f2:	eba3 030e 	sub.w	r3, r3, lr
 80116f6:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 80116fa:	b29b      	uxth	r3, r3
 80116fc:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8011700:	10db      	asrs	r3, r3, #3
 8011702:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8011706:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801170a:	4313      	orrs	r3, r2
 801170c:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8011710:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8011714:	00cb      	lsls	r3, r1, #3
 8011716:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801171a:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 801171e:	0648      	lsls	r0, r1, #25
 8011720:	ea43 0302 	orr.w	r3, r3, r2
 8011724:	bf44      	itt	mi
 8011726:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801172a:	b21b      	sxthmi	r3, r3
 801172c:	1b5d      	subs	r5, r3, r5
 801172e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8011732:	e7b5      	b.n	80116a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08011734 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8011734:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011738:	461e      	mov	r6, r3
 801173a:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801173c:	4604      	mov	r4, r0
 801173e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8011742:	4617      	mov	r7, r2
 8011744:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8011748:	f7f1 fa38 	bl	8002bbc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801174c:	4605      	mov	r5, r0
 801174e:	b918      	cbnz	r0, 8011758 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8011750:	6030      	str	r0, [r6, #0]
 8011752:	4628      	mov	r0, r5
 8011754:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011758:	683b      	ldr	r3, [r7, #0]
 801175a:	4601      	mov	r1, r0
 801175c:	68db      	ldr	r3, [r3, #12]
 801175e:	4638      	mov	r0, r7
 8011760:	4798      	blx	r3
 8011762:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8011766:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 801176a:	4602      	mov	r2, r0
 801176c:	6030      	str	r0, [r6, #0]
 801176e:	d213      	bcs.n	8011798 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8011770:	4643      	mov	r3, r8
 8011772:	4639      	mov	r1, r7
 8011774:	4620      	mov	r0, r4
 8011776:	f7ff fe3b 	bl	80113f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801177a:	6030      	str	r0, [r6, #0]
 801177c:	6833      	ldr	r3, [r6, #0]
 801177e:	b143      	cbz	r3, 8011792 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8011780:	7b5a      	ldrb	r2, [r3, #13]
 8011782:	7a9b      	ldrb	r3, [r3, #10]
 8011784:	0052      	lsls	r2, r2, #1
 8011786:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 801178a:	4313      	orrs	r3, r2
 801178c:	bf0c      	ite	eq
 801178e:	2301      	moveq	r3, #1
 8011790:	2300      	movne	r3, #0
 8011792:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8011796:	e7dc      	b.n	8011752 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8011798:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 801179c:	b29b      	uxth	r3, r3
 801179e:	2b7f      	cmp	r3, #127	@ 0x7f
 80117a0:	d804      	bhi.n	80117ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80117a2:	4639      	mov	r1, r7
 80117a4:	4620      	mov	r0, r4
 80117a6:	f7ff fd19 	bl	80111dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80117aa:	e7e6      	b.n	801177a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80117ac:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 80117b0:	2b00      	cmp	r3, #0
 80117b2:	d0e3      	beq.n	801177c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80117b4:	f640 1302 	movw	r3, #2306	@ 0x902
 80117b8:	429d      	cmp	r5, r3
 80117ba:	d1df      	bne.n	801177c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80117bc:	4601      	mov	r1, r0
 80117be:	4620      	mov	r0, r4
 80117c0:	f7ff fcde 	bl	8011180 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80117c4:	e7d9      	b.n	801177a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080117c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80117c6:	b510      	push	{r4, lr}
 80117c8:	4604      	mov	r4, r0
 80117ca:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 80117ce:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80117d0:	b1f1      	cbz	r1, 8011810 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80117d2:	2b0a      	cmp	r3, #10
 80117d4:	d02f      	beq.n	8011836 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80117d6:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 80117d8:	3901      	subs	r1, #1
 80117da:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80117de:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 80117e0:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 80117e4:	1c51      	adds	r1, r2, #1
 80117e6:	b289      	uxth	r1, r1
 80117e8:	2901      	cmp	r1, #1
 80117ea:	bf84      	itt	hi
 80117ec:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80117f0:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 80117f2:	f103 0201 	add.w	r2, r3, #1
 80117f6:	8722      	strh	r2, [r4, #56]	@ 0x38
 80117f8:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80117fa:	bf98      	it	ls
 80117fc:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 80117fe:	4413      	add	r3, r2
 8011800:	b29b      	uxth	r3, r3
 8011802:	2b09      	cmp	r3, #9
 8011804:	bf88      	it	hi
 8011806:	3b0a      	subhi	r3, #10
 8011808:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801180c:	8458      	strh	r0, [r3, #34]	@ 0x22
 801180e:	e7dc      	b.n	80117ca <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8011810:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8011812:	2b0a      	cmp	r3, #10
 8011814:	d00f      	beq.n	8011836 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8011816:	4620      	mov	r0, r4
 8011818:	f7ff fc71 	bl	80110fe <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801181c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801181e:	1c5a      	adds	r2, r3, #1
 8011820:	8722      	strh	r2, [r4, #56]	@ 0x38
 8011822:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8011824:	4413      	add	r3, r2
 8011826:	b29b      	uxth	r3, r3
 8011828:	2b09      	cmp	r3, #9
 801182a:	bf88      	it	hi
 801182c:	3b0a      	subhi	r3, #10
 801182e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8011832:	8458      	strh	r0, [r3, #34]	@ 0x22
 8011834:	e7ec      	b.n	8011810 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8011836:	bd10      	pop	{r4, pc}

08011838 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8011838:	b538      	push	{r3, r4, r5, lr}
 801183a:	4604      	mov	r4, r0
 801183c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801183e:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8011842:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8011844:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 8011846:	3a01      	subs	r2, #1
 8011848:	8702      	strh	r2, [r0, #56]	@ 0x38
 801184a:	1c5a      	adds	r2, r3, #1
 801184c:	b292      	uxth	r2, r2
 801184e:	2a09      	cmp	r2, #9
 8011850:	bf86      	itte	hi
 8011852:	3b09      	subhi	r3, #9
 8011854:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 8011856:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 8011858:	f7ff ffb5 	bl	80117c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801185c:	8c23      	ldrh	r3, [r4, #32]
 801185e:	2b01      	cmp	r3, #1
 8011860:	bf9c      	itt	ls
 8011862:	3301      	addls	r3, #1
 8011864:	8423      	strhls	r3, [r4, #32]
 8011866:	8be3      	ldrh	r3, [r4, #30]
 8011868:	b90b      	cbnz	r3, 801186e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801186a:	2302      	movs	r3, #2
 801186c:	83e3      	strh	r3, [r4, #30]
 801186e:	8be3      	ldrh	r3, [r4, #30]
 8011870:	4628      	mov	r0, r5
 8011872:	3b01      	subs	r3, #1
 8011874:	b29b      	uxth	r3, r3
 8011876:	83e3      	strh	r3, [r4, #30]
 8011878:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801187c:	8365      	strh	r5, [r4, #26]
 801187e:	bd38      	pop	{r3, r4, r5, pc}

08011880 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8011880:	428a      	cmp	r2, r1
 8011882:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011886:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 8011888:	d931      	bls.n	80118ee <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801188a:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 801188c:	1a54      	subs	r4, r2, r1
 801188e:	19ee      	adds	r6, r5, r7
 8011890:	3e01      	subs	r6, #1
 8011892:	fa1f fe84 	uxth.w	lr, r4
 8011896:	b2b4      	uxth	r4, r6
 8011898:	eba4 090e 	sub.w	r9, r4, lr
 801189c:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 80118a0:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 80118a4:	fa1f f989 	uxth.w	r9, r9
 80118a8:	2c09      	cmp	r4, #9
 80118aa:	4626      	mov	r6, r4
 80118ac:	bf88      	it	hi
 80118ae:	f1a4 060a 	subhi.w	r6, r4, #10
 80118b2:	f1bc 0f00 	cmp.w	ip, #0
 80118b6:	bf08      	it	eq
 80118b8:	f04f 0c02 	moveq.w	ip, #2
 80118bc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80118c0:	f10c 3cff 	add.w	ip, ip, #4294967295
 80118c4:	3c01      	subs	r4, #1
 80118c6:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 80118ca:	fa1f fc8c 	uxth.w	ip, ip
 80118ce:	b2a4      	uxth	r4, r4
 80118d0:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80118d4:	454c      	cmp	r4, r9
 80118d6:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 80118da:	d1e5      	bne.n	80118a8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80118dc:	eba5 050e 	sub.w	r5, r5, lr
 80118e0:	eb0e 0408 	add.w	r4, lr, r8
 80118e4:	8705      	strh	r5, [r0, #56]	@ 0x38
 80118e6:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 80118ea:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 80118ee:	250a      	movs	r5, #10
 80118f0:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 80118f2:	1a64      	subs	r4, r4, r1
 80118f4:	4439      	add	r1, r7
 80118f6:	b289      	uxth	r1, r1
 80118f8:	2909      	cmp	r1, #9
 80118fa:	bf88      	it	hi
 80118fc:	390a      	subhi	r1, #10
 80118fe:	8704      	strh	r4, [r0, #56]	@ 0x38
 8011900:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8011902:	b18a      	cbz	r2, 8011928 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8011904:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 8011906:	3a01      	subs	r2, #1
 8011908:	3101      	adds	r1, #1
 801190a:	b292      	uxth	r2, r2
 801190c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8011910:	8701      	strh	r1, [r0, #56]	@ 0x38
 8011912:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8011914:	b901      	cbnz	r1, 8011918 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8011916:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8011918:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 801191a:	3901      	subs	r1, #1
 801191c:	b289      	uxth	r1, r1
 801191e:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8011920:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8011924:	844c      	strh	r4, [r1, #34]	@ 0x22
 8011926:	e7ec      	b.n	8011902 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8011928:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801192c:	f7ff bf4b 	b.w	80117c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08011930 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8011930:	b570      	push	{r4, r5, r6, lr}
 8011932:	2500      	movs	r5, #0
 8011934:	4295      	cmp	r5, r2
 8011936:	d011      	beq.n	801195c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8011938:	8bc4      	ldrh	r4, [r0, #30]
 801193a:	f831 6b02 	ldrh.w	r6, [r1], #2
 801193e:	4414      	add	r4, r2
 8011940:	3c01      	subs	r4, #1
 8011942:	1b64      	subs	r4, r4, r5
 8011944:	b2a4      	uxth	r4, r4
 8011946:	2c01      	cmp	r4, #1
 8011948:	bf88      	it	hi
 801194a:	3c02      	subhi	r4, #2
 801194c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8011950:	8b64      	ldrh	r4, [r4, #26]
 8011952:	42b4      	cmp	r4, r6
 8011954:	d117      	bne.n	8011986 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8011956:	3501      	adds	r5, #1
 8011958:	b2ad      	uxth	r5, r5
 801195a:	e7eb      	b.n	8011934 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801195c:	2400      	movs	r4, #0
 801195e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8011962:	4413      	add	r3, r2
 8011964:	b2a2      	uxth	r2, r4
 8011966:	429a      	cmp	r2, r3
 8011968:	da0f      	bge.n	801198a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801196a:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 801196c:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8011970:	4432      	add	r2, r6
 8011972:	b292      	uxth	r2, r2
 8011974:	2a09      	cmp	r2, #9
 8011976:	bf88      	it	hi
 8011978:	3a0a      	subhi	r2, #10
 801197a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801197e:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8011980:	3401      	adds	r4, #1
 8011982:	42aa      	cmp	r2, r5
 8011984:	d0ee      	beq.n	8011964 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8011986:	2000      	movs	r0, #0
 8011988:	bd70      	pop	{r4, r5, r6, pc}
 801198a:	2001      	movs	r0, #1
 801198c:	e7fc      	b.n	8011988 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801198e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801198e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011992:	4605      	mov	r5, r0
 8011994:	4616      	mov	r6, r2
 8011996:	1c8c      	adds	r4, r1, #2
 8011998:	8809      	ldrh	r1, [r1, #0]
 801199a:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801199e:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80119a2:	42b3      	cmp	r3, r6
 80119a4:	d124      	bne.n	80119f0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80119a6:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80119aa:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80119ae:	f001 070f 	and.w	r7, r1, #15
 80119b2:	f8cd 8000 	str.w	r8, [sp]
 80119b6:	464b      	mov	r3, r9
 80119b8:	4652      	mov	r2, sl
 80119ba:	4621      	mov	r1, r4
 80119bc:	4628      	mov	r0, r5
 80119be:	f7ff ffb7 	bl	8011930 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80119c2:	4683      	mov	fp, r0
 80119c4:	b168      	cbz	r0, 80119e2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80119c6:	eb0a 0109 	add.w	r1, sl, r9
 80119ca:	4441      	add	r1, r8
 80119cc:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80119d0:	463a      	mov	r2, r7
 80119d2:	4649      	mov	r1, r9
 80119d4:	4628      	mov	r0, r5
 80119d6:	f7ff ff53 	bl	8011880 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80119da:	4658      	mov	r0, fp
 80119dc:	b003      	add	sp, #12
 80119de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80119e2:	eb07 010a 	add.w	r1, r7, sl
 80119e6:	4449      	add	r1, r9
 80119e8:	4441      	add	r1, r8
 80119ea:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80119ee:	e7d2      	b.n	8011996 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80119f0:	f04f 0b00 	mov.w	fp, #0
 80119f4:	e7f1      	b.n	80119da <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080119f6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80119f6:	b570      	push	{r4, r5, r6, lr}
 80119f8:	8810      	ldrh	r0, [r2, #0]
 80119fa:	4298      	cmp	r0, r3
 80119fc:	d817      	bhi.n	8011a2e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80119fe:	1e48      	subs	r0, r1, #1
 8011a00:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8011a04:	4298      	cmp	r0, r3
 8011a06:	d312      	bcc.n	8011a2e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8011a08:	2400      	movs	r4, #0
 8011a0a:	428c      	cmp	r4, r1
 8011a0c:	d20f      	bcs.n	8011a2e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8011a0e:	1860      	adds	r0, r4, r1
 8011a10:	1040      	asrs	r0, r0, #1
 8011a12:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8011a16:	0085      	lsls	r5, r0, #2
 8011a18:	42b3      	cmp	r3, r6
 8011a1a:	d902      	bls.n	8011a22 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8011a1c:	3001      	adds	r0, #1
 8011a1e:	b284      	uxth	r4, r0
 8011a20:	e7f3      	b.n	8011a0a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8011a22:	d201      	bcs.n	8011a28 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8011a24:	b281      	uxth	r1, r0
 8011a26:	e7f0      	b.n	8011a0a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8011a28:	442a      	add	r2, r5
 8011a2a:	8850      	ldrh	r0, [r2, #2]
 8011a2c:	bd70      	pop	{r4, r5, r6, pc}
 8011a2e:	2000      	movs	r0, #0
 8011a30:	e7fc      	b.n	8011a2c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08011a32 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8011a32:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011a36:	4604      	mov	r4, r0
 8011a38:	260b      	movs	r6, #11
 8011a3a:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 8011a3c:	886f      	ldrh	r7, [r5, #2]
 8011a3e:	087f      	lsrs	r7, r7, #1
 8011a40:	3e01      	subs	r6, #1
 8011a42:	d013      	beq.n	8011a6c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8011a44:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8011a46:	462a      	mov	r2, r5
 8011a48:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8011a4c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8011a50:	4639      	mov	r1, r7
 8011a52:	4643      	mov	r3, r8
 8011a54:	4620      	mov	r0, r4
 8011a56:	f7ff ffce 	bl	80119f6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8011a5a:	b138      	cbz	r0, 8011a6c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8011a5c:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8011a60:	4642      	mov	r2, r8
 8011a62:	4620      	mov	r0, r4
 8011a64:	f7ff ff93 	bl	801198e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8011a68:	2800      	cmp	r0, #0
 8011a6a:	d1e9      	bne.n	8011a40 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8011a6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011a70 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8011a70:	b570      	push	{r4, r5, r6, lr}
 8011a72:	694a      	ldr	r2, [r1, #20]
 8011a74:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8011a76:	684b      	ldr	r3, [r1, #4]
 8011a78:	1b54      	subs	r4, r2, r5
 8011a7a:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 8011a7c:	f000 8107 	beq.w	8011c8e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21e>
 8011a80:	1b9b      	subs	r3, r3, r6
 8011a82:	d003      	beq.n	8011a8c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8011a84:	2210      	movs	r2, #16
 8011a86:	4363      	muls	r3, r4
 8011a88:	fb93 f3f2 	sdiv	r3, r3, r2
 8011a8c:	680c      	ldr	r4, [r1, #0]
 8011a8e:	698a      	ldr	r2, [r1, #24]
 8011a90:	1b65      	subs	r5, r4, r5
 8011a92:	f000 80fe 	beq.w	8011c92 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x222>
 8011a96:	1b92      	subs	r2, r2, r6
 8011a98:	d003      	beq.n	8011aa2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8011a9a:	2410      	movs	r4, #16
 8011a9c:	436a      	muls	r2, r5
 8011a9e:	fb92 f2f4 	sdiv	r2, r2, r4
 8011aa2:	1a9b      	subs	r3, r3, r2
 8011aa4:	ee07 3a90 	vmov	s15, r3
 8011aa8:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 8011cd0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x260>
 8011aac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011ab0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8011ab4:	ee67 7a84 	vmul.f32	s15, s15, s8
 8011ab8:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8011abc:	460a      	mov	r2, r1
 8011abe:	eeb1 6a43 	vneg.f32	s12, s6
 8011ac2:	4603      	mov	r3, r0
 8011ac4:	f100 040c 	add.w	r4, r0, #12
 8011ac8:	edd2 7a02 	vldr	s15, [r2, #8]
 8011acc:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8011ad0:	ece3 6a01 	vstmia	r3!, {s13}
 8011ad4:	edd2 7a03 	vldr	s15, [r2, #12]
 8011ad8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8011adc:	edc3 7a02 	vstr	s15, [r3, #8]
 8011ae0:	edd2 7a04 	vldr	s15, [r2, #16]
 8011ae4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8011ae8:	429c      	cmp	r4, r3
 8011aea:	edc3 7a05 	vstr	s15, [r3, #20]
 8011aee:	f102 0214 	add.w	r2, r2, #20
 8011af2:	d1e9      	bne.n	8011ac8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8011af4:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8011af6:	698b      	ldr	r3, [r1, #24]
 8011af8:	edd0 4a02 	vldr	s9, [r0, #8]
 8011afc:	1a9b      	subs	r3, r3, r2
 8011afe:	ee07 3a90 	vmov	s15, r3
 8011b02:	684b      	ldr	r3, [r1, #4]
 8011b04:	edd0 3a00 	vldr	s7, [r0]
 8011b08:	1a9b      	subs	r3, r3, r2
 8011b0a:	edd0 6a01 	vldr	s13, [r0, #4]
 8011b0e:	ee07 3a10 	vmov	s14, r3
 8011b12:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011b16:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8011b1a:	ee67 7a84 	vmul.f32	s15, s15, s8
 8011b1e:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8011b22:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011b26:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8011b2a:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011b2e:	eee6 7a87 	vfma.f32	s15, s13, s14
 8011b32:	ee67 7a83 	vmul.f32	s15, s15, s6
 8011b36:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 8011b3a:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8011b3c:	694a      	ldr	r2, [r1, #20]
 8011b3e:	ed90 5a05 	vldr	s10, [r0, #20]
 8011b42:	1b13      	subs	r3, r2, r4
 8011b44:	ee07 3a10 	vmov	s14, r3
 8011b48:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011b4c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011b50:	680b      	ldr	r3, [r1, #0]
 8011b52:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8011b56:	1b1b      	subs	r3, r3, r4
 8011b58:	ee07 3a10 	vmov	s14, r3
 8011b5c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011b60:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011b64:	eee6 4a87 	vfma.f32	s9, s13, s14
 8011b68:	ee64 4a86 	vmul.f32	s9, s9, s12
 8011b6c:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 8011b70:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8011b72:	698b      	ldr	r3, [r1, #24]
 8011b74:	ed90 2a03 	vldr	s4, [r0, #12]
 8011b78:	1a9b      	subs	r3, r3, r2
 8011b7a:	ee06 3a90 	vmov	s13, r3
 8011b7e:	684b      	ldr	r3, [r1, #4]
 8011b80:	edd0 5a04 	vldr	s11, [r0, #16]
 8011b84:	1a9b      	subs	r3, r3, r2
 8011b86:	ee07 3a10 	vmov	s14, r3
 8011b8a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8011b8e:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8011b92:	ee66 6a84 	vmul.f32	s13, s13, s8
 8011b96:	ee32 5a45 	vsub.f32	s10, s4, s10
 8011b9a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011b9e:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8011ba2:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011ba6:	eee5 6a87 	vfma.f32	s13, s11, s14
 8011baa:	ee66 6a83 	vmul.f32	s13, s13, s6
 8011bae:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 8011bb2:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8011bb4:	694a      	ldr	r2, [r1, #20]
 8011bb6:	ed90 1a07 	vldr	s2, [r0, #28]
 8011bba:	1b13      	subs	r3, r2, r4
 8011bbc:	ee07 3a10 	vmov	s14, r3
 8011bc0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011bc4:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011bc8:	680b      	ldr	r3, [r1, #0]
 8011bca:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8011bce:	1b1b      	subs	r3, r3, r4
 8011bd0:	ee07 3a10 	vmov	s14, r3
 8011bd4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011bd8:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011bdc:	eea5 5a87 	vfma.f32	s10, s11, s14
 8011be0:	ee25 5a06 	vmul.f32	s10, s10, s12
 8011be4:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 8011be8:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8011bea:	698b      	ldr	r3, [r1, #24]
 8011bec:	edd0 5a08 	vldr	s11, [r0, #32]
 8011bf0:	1a9b      	subs	r3, r3, r2
 8011bf2:	ee07 3a10 	vmov	s14, r3
 8011bf6:	684b      	ldr	r3, [r1, #4]
 8011bf8:	edd0 2a06 	vldr	s5, [r0, #24]
 8011bfc:	1a9b      	subs	r3, r3, r2
 8011bfe:	ee01 3a90 	vmov	s3, r3
 8011c02:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011c06:	ee31 1a65 	vsub.f32	s2, s2, s11
 8011c0a:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011c0e:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8011c12:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8011c16:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8011c1a:	ee61 1a84 	vmul.f32	s3, s3, s8
 8011c1e:	eea1 7a21 	vfma.f32	s14, s2, s3
 8011c22:	ee27 7a03 	vmul.f32	s14, s14, s6
 8011c26:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8011c2a:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8011c2c:	694a      	ldr	r2, [r1, #20]
 8011c2e:	1b13      	subs	r3, r2, r4
 8011c30:	ee03 3a10 	vmov	s6, r3
 8011c34:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8011c38:	ee23 3a04 	vmul.f32	s6, s6, s8
 8011c3c:	680b      	ldr	r3, [r1, #0]
 8011c3e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8011c42:	1b1b      	subs	r3, r3, r4
 8011c44:	ee03 3a10 	vmov	s6, r3
 8011c48:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8011c4c:	ee23 4a04 	vmul.f32	s8, s6, s8
 8011c50:	eee1 5a04 	vfma.f32	s11, s2, s8
 8011c54:	ee25 6a86 	vmul.f32	s12, s11, s12
 8011c58:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8011c5c:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8011c60:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8011c64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011c68:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 8011c6c:	dd13      	ble.n	8011c96 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8011c6e:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8011c72:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8011c76:	eee3 7a87 	vfma.f32	s15, s7, s14
 8011c7a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8011c7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011c82:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8011c84:	dd15      	ble.n	8011cb2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8011c86:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8011c8a:	6403      	str	r3, [r0, #64]	@ 0x40
 8011c8c:	bd70      	pop	{r4, r5, r6, pc}
 8011c8e:	4623      	mov	r3, r4
 8011c90:	e6fc      	b.n	8011a8c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8011c92:	462a      	mov	r2, r5
 8011c94:	e705      	b.n	8011aa2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8011c96:	d502      	bpl.n	8011c9e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22e>
 8011c98:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8011c9c:	e7e9      	b.n	8011c72 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x202>
 8011c9e:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8011ca2:	eea3 2a85 	vfma.f32	s4, s7, s10
 8011ca6:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8011caa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011cae:	dade      	bge.n	8011c6e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fe>
 8011cb0:	e7f2      	b.n	8011c98 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x228>
 8011cb2:	d502      	bpl.n	8011cba <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x24a>
 8011cb4:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8011cb8:	e7e7      	b.n	8011c8a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21a>
 8011cba:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8011cbe:	eee3 4a86 	vfma.f32	s9, s7, s12
 8011cc2:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8011cc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011cca:	dadc      	bge.n	8011c86 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x216>
 8011ccc:	e7f2      	b.n	8011cb4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x244>
 8011cce:	bf00      	nop
 8011cd0:	3d800000 	.word	0x3d800000

08011cd4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8011cd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011cd8:	2714      	movs	r7, #20
 8011cda:	435f      	muls	r7, r3
 8011cdc:	eb02 0c07 	add.w	ip, r2, r7
 8011ce0:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8011ce4:	f115 0e0f 	adds.w	lr, r5, #15
 8011ce8:	f100 80a2 	bmi.w	8011e30 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8011cec:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8011cf0:	2614      	movs	r6, #20
 8011cf2:	9c08      	ldr	r4, [sp, #32]
 8011cf4:	f8c0 e014 	str.w	lr, [r0, #20]
 8011cf8:	4366      	muls	r6, r4
 8011cfa:	eb02 0806 	add.w	r8, r2, r6
 8011cfe:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8011d02:	f115 040f 	adds.w	r4, r5, #15
 8011d06:	f100 809f 	bmi.w	8011e48 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8011d0a:	1124      	asrs	r4, r4, #4
 8011d0c:	eba4 040e 	sub.w	r4, r4, lr
 8011d10:	6184      	str	r4, [r0, #24]
 8011d12:	2c00      	cmp	r4, #0
 8011d14:	f000 808a 	beq.w	8011e2c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8011d18:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8011d1c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8011d20:	5995      	ldr	r5, [r2, r6]
 8011d22:	eba4 0809 	sub.w	r8, r4, r9
 8011d26:	59d4      	ldr	r4, [r2, r7]
 8011d28:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8011d2c:	eba5 0a04 	sub.w	sl, r5, r4
 8011d30:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8011d34:	fb0e fe05 	mul.w	lr, lr, r5
 8011d38:	fb0a ee19 	mls	lr, sl, r9, lr
 8011d3c:	fb08 e404 	mla	r4, r8, r4, lr
 8011d40:	3c01      	subs	r4, #1
 8011d42:	19a4      	adds	r4, r4, r6
 8011d44:	f100 808c 	bmi.w	8011e60 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8011d48:	fb94 fef6 	sdiv	lr, r4, r6
 8011d4c:	fb06 441e 	mls	r4, r6, lr, r4
 8011d50:	f8c0 e000 	str.w	lr, [r0]
 8011d54:	6104      	str	r4, [r0, #16]
 8011d56:	2d00      	cmp	r5, #0
 8011d58:	f2c0 8095 	blt.w	8011e86 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8011d5c:	fb95 f4f6 	sdiv	r4, r5, r6
 8011d60:	fb06 5514 	mls	r5, r6, r4, r5
 8011d64:	6044      	str	r4, [r0, #4]
 8011d66:	6085      	str	r5, [r0, #8]
 8011d68:	60c6      	str	r6, [r0, #12]
 8011d6a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8011d6e:	6945      	ldr	r5, [r0, #20]
 8011d70:	59d2      	ldr	r2, [r2, r7]
 8011d72:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8011d76:	ee07 4a10 	vmov	s14, r4
 8011d7a:	6804      	ldr	r4, [r0, #0]
 8011d7c:	eddf 6a4a 	vldr	s13, [pc, #296]	@ 8011ea8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8011d80:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8011d84:	ee07 2a90 	vmov	s15, r2
 8011d88:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011d8c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011d90:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8011d94:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8011d98:	ee27 7a26 	vmul.f32	s14, s14, s13
 8011d9c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8011da0:	edd3 6a00 	vldr	s13, [r3]
 8011da4:	eee6 6a07 	vfma.f32	s13, s12, s14
 8011da8:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 8011dac:	eee6 6a27 	vfma.f32	s13, s12, s15
 8011db0:	edc0 6a07 	vstr	s13, [r0, #28]
 8011db4:	edd0 6a01 	vldr	s13, [r0, #4]
 8011db8:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 8011dbc:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8011dc0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8011dc4:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8011dc8:	ed80 6a08 	vstr	s12, [r0, #32]
 8011dcc:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8011dce:	6242      	str	r2, [r0, #36]	@ 0x24
 8011dd0:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 8011dd4:	ed93 6a03 	vldr	s12, [r3, #12]
 8011dd8:	eea5 6a87 	vfma.f32	s12, s11, s14
 8011ddc:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8011de0:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8011de4:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8011de8:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8011dec:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8011df0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8011df4:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8011df8:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8011dfa:	6302      	str	r2, [r0, #48]	@ 0x30
 8011dfc:	ed93 6a06 	vldr	s12, [r3, #24]
 8011e00:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8011e04:	eea5 6a87 	vfma.f32	s12, s11, s14
 8011e08:	eeb0 7a46 	vmov.f32	s14, s12
 8011e0c:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8011e10:	eea6 7a27 	vfma.f32	s14, s12, s15
 8011e14:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8011e18:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 8011e1c:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8011e20:	eee6 7a87 	vfma.f32	s15, s13, s14
 8011e24:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 8011e28:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 8011e2a:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8011e2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011e30:	2410      	movs	r4, #16
 8011e32:	f1c5 0501 	rsb	r5, r5, #1
 8011e36:	f015 050f 	ands.w	r5, r5, #15
 8011e3a:	fb9e fef4 	sdiv	lr, lr, r4
 8011e3e:	bf18      	it	ne
 8011e40:	2501      	movne	r5, #1
 8011e42:	ebae 0e05 	sub.w	lr, lr, r5
 8011e46:	e753      	b.n	8011cf0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8011e48:	f04f 0910 	mov.w	r9, #16
 8011e4c:	f1c5 0501 	rsb	r5, r5, #1
 8011e50:	f015 050f 	ands.w	r5, r5, #15
 8011e54:	fb94 f4f9 	sdiv	r4, r4, r9
 8011e58:	bf18      	it	ne
 8011e5a:	2501      	movne	r5, #1
 8011e5c:	1b64      	subs	r4, r4, r5
 8011e5e:	e755      	b.n	8011d0c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8011e60:	4264      	negs	r4, r4
 8011e62:	fb94 fef6 	sdiv	lr, r4, r6
 8011e66:	fb06 441e 	mls	r4, r6, lr, r4
 8011e6a:	f1ce 0800 	rsb	r8, lr, #0
 8011e6e:	f8c0 8000 	str.w	r8, [r0]
 8011e72:	6104      	str	r4, [r0, #16]
 8011e74:	2c00      	cmp	r4, #0
 8011e76:	f43f af6e 	beq.w	8011d56 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8011e7a:	ea6f 0e0e 	mvn.w	lr, lr
 8011e7e:	1b34      	subs	r4, r6, r4
 8011e80:	f8c0 e000 	str.w	lr, [r0]
 8011e84:	e766      	b.n	8011d54 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8011e86:	426d      	negs	r5, r5
 8011e88:	fb95 f4f6 	sdiv	r4, r5, r6
 8011e8c:	fb06 5514 	mls	r5, r6, r4, r5
 8011e90:	f1c4 0e00 	rsb	lr, r4, #0
 8011e94:	f8c0 e004 	str.w	lr, [r0, #4]
 8011e98:	6085      	str	r5, [r0, #8]
 8011e9a:	2d00      	cmp	r5, #0
 8011e9c:	f43f af64 	beq.w	8011d68 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8011ea0:	43e4      	mvns	r4, r4
 8011ea2:	1b75      	subs	r5, r6, r5
 8011ea4:	6044      	str	r4, [r0, #4]
 8011ea6:	e75e      	b.n	8011d66 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8011ea8:	3d800000 	.word	0x3d800000

08011eac <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8011eac:	4b01      	ldr	r3, [pc, #4]	@ (8011eb4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8011eae:	6018      	str	r0, [r3, #0]
 8011eb0:	4770      	bx	lr
 8011eb2:	bf00      	nop
 8011eb4:	2004bff8 	.word	0x2004bff8

08011eb8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8011eb8:	4b06      	ldr	r3, [pc, #24]	@ (8011ed4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8011eba:	881a      	ldrh	r2, [r3, #0]
 8011ebc:	4282      	cmp	r2, r0
 8011ebe:	d807      	bhi.n	8011ed0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8011ec0:	4b05      	ldr	r3, [pc, #20]	@ (8011ed8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8011ec2:	881b      	ldrh	r3, [r3, #0]
 8011ec4:	4413      	add	r3, r2
 8011ec6:	4298      	cmp	r0, r3
 8011ec8:	bfac      	ite	ge
 8011eca:	2000      	movge	r0, #0
 8011ecc:	2001      	movlt	r0, #1
 8011ece:	4770      	bx	lr
 8011ed0:	2000      	movs	r0, #0
 8011ed2:	4770      	bx	lr
 8011ed4:	2004c018 	.word	0x2004c018
 8011ed8:	2004c01c 	.word	0x2004c01c

08011edc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8011edc:	b508      	push	{r3, lr}
 8011ede:	4601      	mov	r1, r0
 8011ee0:	f7ff ffea 	bl	8011eb8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8011ee4:	b118      	cbz	r0, 8011eee <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8011ee6:	4b02      	ldr	r3, [pc, #8]	@ (8011ef0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8011ee8:	681b      	ldr	r3, [r3, #0]
 8011eea:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8011eee:	bd08      	pop	{r3, pc}
 8011ef0:	2004bffc 	.word	0x2004bffc

08011ef4 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8011ef4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011ef6:	4c24      	ldr	r4, [pc, #144]	@ (8011f88 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8011ef8:	6823      	ldr	r3, [r4, #0]
 8011efa:	2b00      	cmp	r3, #0
 8011efc:	d042      	beq.n	8011f84 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8011efe:	4a23      	ldr	r2, [pc, #140]	@ (8011f8c <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8011f00:	4d23      	ldr	r5, [pc, #140]	@ (8011f90 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8011f02:	8811      	ldrh	r1, [r2, #0]
 8011f04:	f8b5 c000 	ldrh.w	ip, [r5]
 8011f08:	4822      	ldr	r0, [pc, #136]	@ (8011f94 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8011f0a:	4461      	add	r1, ip
 8011f0c:	1c4a      	adds	r2, r1, #1
 8011f0e:	f022 0201 	bic.w	r2, r2, #1
 8011f12:	008f      	lsls	r7, r1, #2
 8011f14:	0412      	lsls	r2, r2, #16
 8011f16:	19de      	adds	r6, r3, r7
 8011f18:	0c12      	lsrs	r2, r2, #16
 8011f1a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8011f1e:	6006      	str	r6, [r0, #0]
 8011f20:	4e1d      	ldr	r6, [pc, #116]	@ (8011f98 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8011f22:	19da      	adds	r2, r3, r7
 8011f24:	6032      	str	r2, [r6, #0]
 8011f26:	220e      	movs	r2, #14
 8011f28:	fb02 f20c 	mul.w	r2, r2, ip
 8011f2c:	3203      	adds	r2, #3
 8011f2e:	f022 0203 	bic.w	r2, r2, #3
 8011f32:	443a      	add	r2, r7
 8011f34:	4f19      	ldr	r7, [pc, #100]	@ (8011f9c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8011f36:	4413      	add	r3, r2
 8011f38:	603b      	str	r3, [r7, #0]
 8011f3a:	2300      	movs	r3, #0
 8011f3c:	4f18      	ldr	r7, [pc, #96]	@ (8011fa0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8011f3e:	469c      	mov	ip, r3
 8011f40:	803b      	strh	r3, [r7, #0]
 8011f42:	4f18      	ldr	r7, [pc, #96]	@ (8011fa4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8011f44:	683f      	ldr	r7, [r7, #0]
 8011f46:	1aba      	subs	r2, r7, r2
 8011f48:	4f17      	ldr	r7, [pc, #92]	@ (8011fa8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8011f4a:	603a      	str	r2, [r7, #0]
 8011f4c:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8011f50:	4a16      	ldr	r2, [pc, #88]	@ (8011fac <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8011f52:	8013      	strh	r3, [r2, #0]
 8011f54:	428b      	cmp	r3, r1
 8011f56:	d10d      	bne.n	8011f74 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8011f58:	2300      	movs	r3, #0
 8011f5a:	240e      	movs	r4, #14
 8011f5c:	882d      	ldrh	r5, [r5, #0]
 8011f5e:	6830      	ldr	r0, [r6, #0]
 8011f60:	429d      	cmp	r5, r3
 8011f62:	d90f      	bls.n	8011f84 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8011f64:	fb04 0203 	mla	r2, r4, r3, r0
 8011f68:	7b11      	ldrb	r1, [r2, #12]
 8011f6a:	3301      	adds	r3, #1
 8011f6c:	f36f 1145 	bfc	r1, #5, #1
 8011f70:	7311      	strb	r1, [r2, #12]
 8011f72:	e7f5      	b.n	8011f60 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8011f74:	6822      	ldr	r2, [r4, #0]
 8011f76:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8011f7a:	6802      	ldr	r2, [r0, #0]
 8011f7c:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8011f80:	3301      	adds	r3, #1
 8011f82:	e7e7      	b.n	8011f54 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8011f84:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011f86:	bf00      	nop
 8011f88:	2004bffc 	.word	0x2004bffc
 8011f8c:	2004c018 	.word	0x2004c018
 8011f90:	2004c01c 	.word	0x2004c01c
 8011f94:	2004c010 	.word	0x2004c010
 8011f98:	2004c000 	.word	0x2004c000
 8011f9c:	2004c008 	.word	0x2004c008
 8011fa0:	2004c01a 	.word	0x2004c01a
 8011fa4:	2004c004 	.word	0x2004c004
 8011fa8:	2004c014 	.word	0x2004c014
 8011fac:	2004c00c 	.word	0x2004c00c

08011fb0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8011fb0:	4b06      	ldr	r3, [pc, #24]	@ (8011fcc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8011fb2:	681b      	ldr	r3, [r3, #0]
 8011fb4:	b943      	cbnz	r3, 8011fc8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8011fb6:	b139      	cbz	r1, 8011fc8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8011fb8:	4b05      	ldr	r3, [pc, #20]	@ (8011fd0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8011fba:	801a      	strh	r2, [r3, #0]
 8011fbc:	4b05      	ldr	r3, [pc, #20]	@ (8011fd4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8011fbe:	6019      	str	r1, [r3, #0]
 8011fc0:	4b05      	ldr	r3, [pc, #20]	@ (8011fd8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8011fc2:	6018      	str	r0, [r3, #0]
 8011fc4:	f7ff bf96 	b.w	8011ef4 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8011fc8:	4770      	bx	lr
 8011fca:	bf00      	nop
 8011fcc:	2004c008 	.word	0x2004c008
 8011fd0:	2004c01c 	.word	0x2004c01c
 8011fd4:	2004c004 	.word	0x2004c004
 8011fd8:	2004bffc 	.word	0x2004bffc

08011fdc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8011fdc:	b470      	push	{r4, r5, r6}
 8011fde:	4c07      	ldr	r4, [pc, #28]	@ (8011ffc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8011fe0:	4605      	mov	r5, r0
 8011fe2:	6826      	ldr	r6, [r4, #0]
 8011fe4:	4610      	mov	r0, r2
 8011fe6:	9a03      	ldr	r2, [sp, #12]
 8011fe8:	b936      	cbnz	r6, 8011ff8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8011fea:	6025      	str	r5, [r4, #0]
 8011fec:	4c04      	ldr	r4, [pc, #16]	@ (8012000 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8011fee:	8021      	strh	r1, [r4, #0]
 8011ff0:	bc70      	pop	{r4, r5, r6}
 8011ff2:	4619      	mov	r1, r3
 8011ff4:	f7ff bfdc 	b.w	8011fb0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8011ff8:	bc70      	pop	{r4, r5, r6}
 8011ffa:	4770      	bx	lr
 8011ffc:	2004c020 	.word	0x2004c020
 8012000:	2004c018 	.word	0x2004c018

08012004 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8012004:	4a12      	ldr	r2, [pc, #72]	@ (8012050 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8012006:	8803      	ldrh	r3, [r0, #0]
 8012008:	8812      	ldrh	r2, [r2, #0]
 801200a:	4293      	cmp	r3, r2
 801200c:	d207      	bcs.n	801201e <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801200e:	2114      	movs	r1, #20
 8012010:	4a10      	ldr	r2, [pc, #64]	@ (8012054 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8012012:	6812      	ldr	r2, [r2, #0]
 8012014:	fb01 2303 	mla	r3, r1, r3, r2
 8012018:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801201c:	4770      	bx	lr
 801201e:	490e      	ldr	r1, [pc, #56]	@ (8012058 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8012020:	8809      	ldrh	r1, [r1, #0]
 8012022:	4411      	add	r1, r2
 8012024:	428b      	cmp	r3, r1
 8012026:	da04      	bge.n	8012032 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8012028:	1a9b      	subs	r3, r3, r2
 801202a:	4a0c      	ldr	r2, [pc, #48]	@ (801205c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801202c:	210e      	movs	r1, #14
 801202e:	6812      	ldr	r2, [r2, #0]
 8012030:	e7f0      	b.n	8012014 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8012032:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8012036:	4293      	cmp	r3, r2
 8012038:	d108      	bne.n	801204c <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801203a:	4b09      	ldr	r3, [pc, #36]	@ (8012060 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801203c:	781b      	ldrb	r3, [r3, #0]
 801203e:	b91b      	cbnz	r3, 8012048 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8012040:	4b08      	ldr	r3, [pc, #32]	@ (8012064 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8012042:	f9b3 0000 	ldrsh.w	r0, [r3]
 8012046:	4770      	bx	lr
 8012048:	4b07      	ldr	r3, [pc, #28]	@ (8012068 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801204a:	e7fa      	b.n	8012042 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801204c:	2000      	movs	r0, #0
 801204e:	4770      	bx	lr
 8012050:	2004c018 	.word	0x2004c018
 8012054:	2004c020 	.word	0x2004c020
 8012058:	2004c01c 	.word	0x2004c01c
 801205c:	2004c000 	.word	0x2004c000
 8012060:	2004bf90 	.word	0x2004bf90
 8012064:	2004bf92 	.word	0x2004bf92
 8012068:	2004bf94 	.word	0x2004bf94

0801206c <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801206c:	4a12      	ldr	r2, [pc, #72]	@ (80120b8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801206e:	8803      	ldrh	r3, [r0, #0]
 8012070:	8812      	ldrh	r2, [r2, #0]
 8012072:	4293      	cmp	r3, r2
 8012074:	d207      	bcs.n	8012086 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8012076:	2114      	movs	r1, #20
 8012078:	4a10      	ldr	r2, [pc, #64]	@ (80120bc <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801207a:	6812      	ldr	r2, [r2, #0]
 801207c:	fb01 2303 	mla	r3, r1, r3, r2
 8012080:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8012084:	4770      	bx	lr
 8012086:	490e      	ldr	r1, [pc, #56]	@ (80120c0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8012088:	8809      	ldrh	r1, [r1, #0]
 801208a:	4411      	add	r1, r2
 801208c:	428b      	cmp	r3, r1
 801208e:	da04      	bge.n	801209a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8012090:	1a9b      	subs	r3, r3, r2
 8012092:	4a0c      	ldr	r2, [pc, #48]	@ (80120c4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8012094:	210e      	movs	r1, #14
 8012096:	6812      	ldr	r2, [r2, #0]
 8012098:	e7f0      	b.n	801207c <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801209a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801209e:	4293      	cmp	r3, r2
 80120a0:	d108      	bne.n	80120b4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80120a2:	4b09      	ldr	r3, [pc, #36]	@ (80120c8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80120a4:	781b      	ldrb	r3, [r3, #0]
 80120a6:	b91b      	cbnz	r3, 80120b0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80120a8:	4b08      	ldr	r3, [pc, #32]	@ (80120cc <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80120aa:	f9b3 0000 	ldrsh.w	r0, [r3]
 80120ae:	4770      	bx	lr
 80120b0:	4b07      	ldr	r3, [pc, #28]	@ (80120d0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80120b2:	e7fa      	b.n	80120aa <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80120b4:	2000      	movs	r0, #0
 80120b6:	4770      	bx	lr
 80120b8:	2004c018 	.word	0x2004c018
 80120bc:	2004c020 	.word	0x2004c020
 80120c0:	2004c01c 	.word	0x2004c01c
 80120c4:	2004c000 	.word	0x2004c000
 80120c8:	2004bf90 	.word	0x2004bf90
 80120cc:	2004bf94 	.word	0x2004bf94
 80120d0:	2004bf92 	.word	0x2004bf92

080120d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80120d4:	b510      	push	{r4, lr}
 80120d6:	4a1f      	ldr	r2, [pc, #124]	@ (8012154 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 80120d8:	880b      	ldrh	r3, [r1, #0]
 80120da:	8812      	ldrh	r2, [r2, #0]
 80120dc:	4293      	cmp	r3, r2
 80120de:	d213      	bcs.n	8012108 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80120e0:	2114      	movs	r1, #20
 80120e2:	4a1d      	ldr	r2, [pc, #116]	@ (8012158 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 80120e4:	6812      	ldr	r2, [r2, #0]
 80120e6:	fb01 2303 	mla	r3, r1, r3, r2
 80120ea:	8a1a      	ldrh	r2, [r3, #16]
 80120ec:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80120f0:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80120f4:	8a5b      	ldrh	r3, [r3, #18]
 80120f6:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80120fa:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80120fe:	8004      	strh	r4, [r0, #0]
 8012100:	8041      	strh	r1, [r0, #2]
 8012102:	8082      	strh	r2, [r0, #4]
 8012104:	80c3      	strh	r3, [r0, #6]
 8012106:	e00e      	b.n	8012126 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8012108:	4914      	ldr	r1, [pc, #80]	@ (801215c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801210a:	8809      	ldrh	r1, [r1, #0]
 801210c:	4411      	add	r1, r2
 801210e:	428b      	cmp	r3, r1
 8012110:	da0a      	bge.n	8012128 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8012112:	210e      	movs	r1, #14
 8012114:	1a9b      	subs	r3, r3, r2
 8012116:	4a12      	ldr	r2, [pc, #72]	@ (8012160 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8012118:	6812      	ldr	r2, [r2, #0]
 801211a:	fb01 2303 	mla	r3, r1, r3, r2
 801211e:	681a      	ldr	r2, [r3, #0]
 8012120:	6002      	str	r2, [r0, #0]
 8012122:	685a      	ldr	r2, [r3, #4]
 8012124:	6042      	str	r2, [r0, #4]
 8012126:	bd10      	pop	{r4, pc}
 8012128:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801212c:	4293      	cmp	r3, r2
 801212e:	d10b      	bne.n	8012148 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8012130:	4b0c      	ldr	r3, [pc, #48]	@ (8012164 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8012132:	f9b3 1000 	ldrsh.w	r1, [r3]
 8012136:	4b0c      	ldr	r3, [pc, #48]	@ (8012168 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8012138:	8081      	strh	r1, [r0, #4]
 801213a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801213e:	2300      	movs	r3, #0
 8012140:	80c2      	strh	r2, [r0, #6]
 8012142:	8003      	strh	r3, [r0, #0]
 8012144:	8043      	strh	r3, [r0, #2]
 8012146:	e7ee      	b.n	8012126 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8012148:	2300      	movs	r3, #0
 801214a:	8003      	strh	r3, [r0, #0]
 801214c:	8043      	strh	r3, [r0, #2]
 801214e:	8083      	strh	r3, [r0, #4]
 8012150:	e7d8      	b.n	8012104 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8012152:	bf00      	nop
 8012154:	2004c018 	.word	0x2004c018
 8012158:	2004c020 	.word	0x2004c020
 801215c:	2004c01c 	.word	0x2004c01c
 8012160:	2004c000 	.word	0x2004c000
 8012164:	2004bf8c 	.word	0x2004bf8c
 8012168:	2004bf8e 	.word	0x2004bf8e

0801216c <_ZNK8touchgfx6Bitmap7getDataEv>:
 801216c:	4a12      	ldr	r2, [pc, #72]	@ (80121b8 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801216e:	8803      	ldrh	r3, [r0, #0]
 8012170:	8811      	ldrh	r1, [r2, #0]
 8012172:	428b      	cmp	r3, r1
 8012174:	d20b      	bcs.n	801218e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8012176:	4a11      	ldr	r2, [pc, #68]	@ (80121bc <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8012178:	6812      	ldr	r2, [r2, #0]
 801217a:	b112      	cbz	r2, 8012182 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801217c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8012180:	b9c0      	cbnz	r0, 80121b4 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8012182:	4a0f      	ldr	r2, [pc, #60]	@ (80121c0 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8012184:	6811      	ldr	r1, [r2, #0]
 8012186:	2214      	movs	r2, #20
 8012188:	4353      	muls	r3, r2
 801218a:	58c8      	ldr	r0, [r1, r3]
 801218c:	4770      	bx	lr
 801218e:	4a0d      	ldr	r2, [pc, #52]	@ (80121c4 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8012190:	8812      	ldrh	r2, [r2, #0]
 8012192:	440a      	add	r2, r1
 8012194:	4293      	cmp	r3, r2
 8012196:	da04      	bge.n	80121a2 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8012198:	4a08      	ldr	r2, [pc, #32]	@ (80121bc <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801219a:	6812      	ldr	r2, [r2, #0]
 801219c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80121a0:	4770      	bx	lr
 80121a2:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80121a6:	4293      	cmp	r3, r2
 80121a8:	d103      	bne.n	80121b2 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80121aa:	4b07      	ldr	r3, [pc, #28]	@ (80121c8 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80121ac:	681b      	ldr	r3, [r3, #0]
 80121ae:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 80121b0:	4770      	bx	lr
 80121b2:	2000      	movs	r0, #0
 80121b4:	4770      	bx	lr
 80121b6:	bf00      	nop
 80121b8:	2004c018 	.word	0x2004c018
 80121bc:	2004bffc 	.word	0x2004bffc
 80121c0:	2004c020 	.word	0x2004c020
 80121c4:	2004c01c 	.word	0x2004c01c
 80121c8:	2004bf98 	.word	0x2004bf98

080121cc <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80121cc:	4b24      	ldr	r3, [pc, #144]	@ (8012260 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80121ce:	8802      	ldrh	r2, [r0, #0]
 80121d0:	8818      	ldrh	r0, [r3, #0]
 80121d2:	4282      	cmp	r2, r0
 80121d4:	d221      	bcs.n	801221a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80121d6:	4b23      	ldr	r3, [pc, #140]	@ (8012264 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80121d8:	6819      	ldr	r1, [r3, #0]
 80121da:	2314      	movs	r3, #20
 80121dc:	fb03 1302 	mla	r3, r3, r2, r1
 80121e0:	6858      	ldr	r0, [r3, #4]
 80121e2:	2800      	cmp	r0, #0
 80121e4:	d03a      	beq.n	801225c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80121e6:	4920      	ldr	r1, [pc, #128]	@ (8012268 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80121e8:	6809      	ldr	r1, [r1, #0]
 80121ea:	2900      	cmp	r1, #0
 80121ec:	d036      	beq.n	801225c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80121ee:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80121f2:	2900      	cmp	r1, #0
 80121f4:	d032      	beq.n	801225c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80121f6:	891a      	ldrh	r2, [r3, #8]
 80121f8:	8958      	ldrh	r0, [r3, #10]
 80121fa:	4350      	muls	r0, r2
 80121fc:	7c5a      	ldrb	r2, [r3, #17]
 80121fe:	7cdb      	ldrb	r3, [r3, #19]
 8012200:	0952      	lsrs	r2, r2, #5
 8012202:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8012206:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801220a:	2b0b      	cmp	r3, #11
 801220c:	bf18      	it	ne
 801220e:	0040      	lslne	r0, r0, #1
 8012210:	3003      	adds	r0, #3
 8012212:	f020 0003 	bic.w	r0, r0, #3
 8012216:	4408      	add	r0, r1
 8012218:	4770      	bx	lr
 801221a:	4b14      	ldr	r3, [pc, #80]	@ (801226c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801221c:	881b      	ldrh	r3, [r3, #0]
 801221e:	4403      	add	r3, r0
 8012220:	429a      	cmp	r2, r3
 8012222:	da1a      	bge.n	801225a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8012224:	210e      	movs	r1, #14
 8012226:	4b12      	ldr	r3, [pc, #72]	@ (8012270 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8012228:	1a10      	subs	r0, r2, r0
 801222a:	681b      	ldr	r3, [r3, #0]
 801222c:	fb01 3000 	mla	r0, r1, r0, r3
 8012230:	7b03      	ldrb	r3, [r0, #12]
 8012232:	f003 031f 	and.w	r3, r3, #31
 8012236:	2b0b      	cmp	r3, #11
 8012238:	d10b      	bne.n	8012252 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801223a:	8903      	ldrh	r3, [r0, #8]
 801223c:	8940      	ldrh	r0, [r0, #10]
 801223e:	4358      	muls	r0, r3
 8012240:	4b09      	ldr	r3, [pc, #36]	@ (8012268 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8012242:	3003      	adds	r0, #3
 8012244:	6819      	ldr	r1, [r3, #0]
 8012246:	f020 0303 	bic.w	r3, r0, #3
 801224a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801224e:	4418      	add	r0, r3
 8012250:	4770      	bx	lr
 8012252:	2b0d      	cmp	r3, #13
 8012254:	d101      	bne.n	801225a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8012256:	300d      	adds	r0, #13
 8012258:	4770      	bx	lr
 801225a:	2000      	movs	r0, #0
 801225c:	4770      	bx	lr
 801225e:	bf00      	nop
 8012260:	2004c018 	.word	0x2004c018
 8012264:	2004c020 	.word	0x2004c020
 8012268:	2004bffc 	.word	0x2004bffc
 801226c:	2004c01c 	.word	0x2004c01c
 8012270:	2004c000 	.word	0x2004c000

08012274 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8012274:	b510      	push	{r4, lr}
 8012276:	4a17      	ldr	r2, [pc, #92]	@ (80122d4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8012278:	8803      	ldrh	r3, [r0, #0]
 801227a:	8812      	ldrh	r2, [r2, #0]
 801227c:	4293      	cmp	r3, r2
 801227e:	d20c      	bcs.n	801229a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8012280:	2114      	movs	r1, #20
 8012282:	4a15      	ldr	r2, [pc, #84]	@ (80122d8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8012284:	6812      	ldr	r2, [r2, #0]
 8012286:	fb01 2303 	mla	r3, r1, r3, r2
 801228a:	7c58      	ldrb	r0, [r3, #17]
 801228c:	0942      	lsrs	r2, r0, #5
 801228e:	7cd8      	ldrb	r0, [r3, #19]
 8012290:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8012294:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8012298:	bd10      	pop	{r4, pc}
 801229a:	4910      	ldr	r1, [pc, #64]	@ (80122dc <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801229c:	8809      	ldrh	r1, [r1, #0]
 801229e:	4411      	add	r1, r2
 80122a0:	428b      	cmp	r3, r1
 80122a2:	da09      	bge.n	80122b8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80122a4:	210e      	movs	r1, #14
 80122a6:	1a9b      	subs	r3, r3, r2
 80122a8:	4a0d      	ldr	r2, [pc, #52]	@ (80122e0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80122aa:	6812      	ldr	r2, [r2, #0]
 80122ac:	fb01 2303 	mla	r3, r1, r3, r2
 80122b0:	7b18      	ldrb	r0, [r3, #12]
 80122b2:	f000 001f 	and.w	r0, r0, #31
 80122b6:	e7ef      	b.n	8012298 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80122b8:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80122bc:	4293      	cmp	r3, r2
 80122be:	d106      	bne.n	80122ce <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80122c0:	f7fb fbf0 	bl	800daa4 <_ZN8touchgfx3HAL3lcdEv>
 80122c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80122c8:	6803      	ldr	r3, [r0, #0]
 80122ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80122cc:	4718      	bx	r3
 80122ce:	2000      	movs	r0, #0
 80122d0:	e7e2      	b.n	8012298 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80122d2:	bf00      	nop
 80122d4:	2004c018 	.word	0x2004c018
 80122d8:	2004c020 	.word	0x2004c020
 80122dc:	2004c01c 	.word	0x2004c01c
 80122e0:	2004c000 	.word	0x2004c000

080122e4 <CRC_Lock>:
 80122e4:	b530      	push	{r4, r5, lr}
 80122e6:	f64f 74f0 	movw	r4, #65520	@ 0xfff0
 80122ea:	f24c 2540 	movw	r5, #49728	@ 0xc240
 80122ee:	4a1e      	ldr	r2, [pc, #120]	@ (8012368 <CRC_Lock+0x84>)
 80122f0:	6813      	ldr	r3, [r2, #0]
 80122f2:	f023 0301 	bic.w	r3, r3, #1
 80122f6:	6013      	str	r3, [r2, #0]
 80122f8:	4b1c      	ldr	r3, [pc, #112]	@ (801236c <CRC_Lock+0x88>)
 80122fa:	681a      	ldr	r2, [r3, #0]
 80122fc:	4022      	ands	r2, r4
 80122fe:	42aa      	cmp	r2, r5
 8012300:	d005      	beq.n	801230e <CRC_Lock+0x2a>
 8012302:	f24c 2270 	movw	r2, #49776	@ 0xc270
 8012306:	681b      	ldr	r3, [r3, #0]
 8012308:	4023      	ands	r3, r4
 801230a:	4293      	cmp	r3, r2
 801230c:	d124      	bne.n	8012358 <CRC_Lock+0x74>
 801230e:	4b18      	ldr	r3, [pc, #96]	@ (8012370 <CRC_Lock+0x8c>)
 8012310:	681b      	ldr	r3, [r3, #0]
 8012312:	bb0b      	cbnz	r3, 8012358 <CRC_Lock+0x74>
 8012314:	4b17      	ldr	r3, [pc, #92]	@ (8012374 <CRC_Lock+0x90>)
 8012316:	681a      	ldr	r2, [r3, #0]
 8012318:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801231c:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 8012320:	d00d      	beq.n	801233e <CRC_Lock+0x5a>
 8012322:	f240 4483 	movw	r4, #1155	@ 0x483
 8012326:	681a      	ldr	r2, [r3, #0]
 8012328:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801232c:	42a2      	cmp	r2, r4
 801232e:	d006      	beq.n	801233e <CRC_Lock+0x5a>
 8012330:	f240 4285 	movw	r2, #1157	@ 0x485
 8012334:	681b      	ldr	r3, [r3, #0]
 8012336:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801233a:	4293      	cmp	r3, r2
 801233c:	d10c      	bne.n	8012358 <CRC_Lock+0x74>
 801233e:	2201      	movs	r2, #1
 8012340:	4b0d      	ldr	r3, [pc, #52]	@ (8012378 <CRC_Lock+0x94>)
 8012342:	601a      	str	r2, [r3, #0]
 8012344:	681a      	ldr	r2, [r3, #0]
 8012346:	2a00      	cmp	r2, #0
 8012348:	d1fc      	bne.n	8012344 <CRC_Lock+0x60>
 801234a:	4b0c      	ldr	r3, [pc, #48]	@ (801237c <CRC_Lock+0x98>)
 801234c:	6018      	str	r0, [r3, #0]
 801234e:	6818      	ldr	r0, [r3, #0]
 8012350:	1a43      	subs	r3, r0, r1
 8012352:	4258      	negs	r0, r3
 8012354:	4158      	adcs	r0, r3
 8012356:	bd30      	pop	{r4, r5, pc}
 8012358:	2201      	movs	r2, #1
 801235a:	4b09      	ldr	r3, [pc, #36]	@ (8012380 <CRC_Lock+0x9c>)
 801235c:	601a      	str	r2, [r3, #0]
 801235e:	681a      	ldr	r2, [r3, #0]
 8012360:	2a00      	cmp	r2, #0
 8012362:	d1fc      	bne.n	801235e <CRC_Lock+0x7a>
 8012364:	4b07      	ldr	r3, [pc, #28]	@ (8012384 <CRC_Lock+0xa0>)
 8012366:	e7f1      	b.n	801234c <CRC_Lock+0x68>
 8012368:	e0002000 	.word	0xe0002000
 801236c:	e000ed00 	.word	0xe000ed00
 8012370:	e0042000 	.word	0xe0042000
 8012374:	5c001000 	.word	0x5c001000
 8012378:	58024c08 	.word	0x58024c08
 801237c:	58024c00 	.word	0x58024c00
 8012380:	40023008 	.word	0x40023008
 8012384:	40023000 	.word	0x40023000

08012388 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8012388:	6101      	str	r1, [r0, #16]
 801238a:	4770      	bx	lr

0801238c <_ZN8touchgfx8Gestures4tickEv>:
 801238c:	7b83      	ldrb	r3, [r0, #14]
 801238e:	b14b      	cbz	r3, 80123a4 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8012390:	8903      	ldrh	r3, [r0, #8]
 8012392:	3301      	adds	r3, #1
 8012394:	b29b      	uxth	r3, r3
 8012396:	2b07      	cmp	r3, #7
 8012398:	8103      	strh	r3, [r0, #8]
 801239a:	bf81      	itttt	hi
 801239c:	2300      	movhi	r3, #0
 801239e:	8143      	strhhi	r3, [r0, #10]
 80123a0:	8183      	strhhi	r3, [r0, #12]
 80123a2:	7383      	strbhi	r3, [r0, #14]
 80123a4:	4770      	bx	lr
	...

080123a8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80123a8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80123ac:	4698      	mov	r8, r3
 80123ae:	4604      	mov	r4, r0
 80123b0:	8883      	ldrh	r3, [r0, #4]
 80123b2:	460e      	mov	r6, r1
 80123b4:	88c1      	ldrh	r1, [r0, #6]
 80123b6:	2000      	movs	r0, #0
 80123b8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80123bc:	eba8 0303 	sub.w	r3, r8, r3
 80123c0:	b21b      	sxth	r3, r3
 80123c2:	4617      	mov	r7, r2
 80123c4:	4a17      	ldr	r2, [pc, #92]	@ (8012424 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80123c6:	2b00      	cmp	r3, #0
 80123c8:	bfb8      	it	lt
 80123ca:	425b      	neglt	r3, r3
 80123cc:	9200      	str	r2, [sp, #0]
 80123ce:	8aa2      	ldrh	r2, [r4, #20]
 80123d0:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 80123d4:	b21b      	sxth	r3, r3
 80123d6:	4293      	cmp	r3, r2
 80123d8:	f88d 0004 	strb.w	r0, [sp, #4]
 80123dc:	f8ad 1008 	strh.w	r1, [sp, #8]
 80123e0:	f8ad 800a 	strh.w	r8, [sp, #10]
 80123e4:	f8ad 500c 	strh.w	r5, [sp, #12]
 80123e8:	dc07      	bgt.n	80123fa <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 80123ea:	1a69      	subs	r1, r5, r1
 80123ec:	b209      	sxth	r1, r1
 80123ee:	2900      	cmp	r1, #0
 80123f0:	bfb8      	it	lt
 80123f2:	4249      	neglt	r1, r1
 80123f4:	b209      	sxth	r1, r1
 80123f6:	428a      	cmp	r2, r1
 80123f8:	da10      	bge.n	801241c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 80123fa:	6920      	ldr	r0, [r4, #16]
 80123fc:	4669      	mov	r1, sp
 80123fe:	6803      	ldr	r3, [r0, #0]
 8012400:	eba8 0606 	sub.w	r6, r8, r6
 8012404:	685b      	ldr	r3, [r3, #4]
 8012406:	4798      	blx	r3
 8012408:	2300      	movs	r3, #0
 801240a:	2001      	movs	r0, #1
 801240c:	1bef      	subs	r7, r5, r7
 801240e:	8123      	strh	r3, [r4, #8]
 8012410:	8166      	strh	r6, [r4, #10]
 8012412:	81a7      	strh	r7, [r4, #12]
 8012414:	f8a4 8004 	strh.w	r8, [r4, #4]
 8012418:	80e5      	strh	r5, [r4, #6]
 801241a:	73a0      	strb	r0, [r4, #14]
 801241c:	b004      	add	sp, #16
 801241e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012422:	bf00      	nop
 8012424:	08027390 	.word	0x08027390

08012428 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8012428:	b5f0      	push	{r4, r5, r6, r7, lr}
 801242a:	461e      	mov	r6, r3
 801242c:	1e4b      	subs	r3, r1, #1
 801242e:	2b01      	cmp	r3, #1
 8012430:	b085      	sub	sp, #20
 8012432:	4604      	mov	r4, r0
 8012434:	460d      	mov	r5, r1
 8012436:	4617      	mov	r7, r2
 8012438:	d84b      	bhi.n	80124d2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801243a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801243e:	1cd3      	adds	r3, r2, #3
 8012440:	b29b      	uxth	r3, r3
 8012442:	2b06      	cmp	r3, #6
 8012444:	d916      	bls.n	8012474 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8012446:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 80124e8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801244a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801244e:	f8cd c004 	str.w	ip, [sp, #4]
 8012452:	f04f 0c00 	mov.w	ip, #0
 8012456:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801245a:	6900      	ldr	r0, [r0, #16]
 801245c:	f8ad 100c 	strh.w	r1, [sp, #12]
 8012460:	f88d c008 	strb.w	ip, [sp, #8]
 8012464:	f8ad 200a 	strh.w	r2, [sp, #10]
 8012468:	f8ad 300e 	strh.w	r3, [sp, #14]
 801246c:	6803      	ldr	r3, [r0, #0]
 801246e:	a901      	add	r1, sp, #4
 8012470:	689b      	ldr	r3, [r3, #8]
 8012472:	4798      	blx	r3
 8012474:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8012478:	1cd3      	adds	r3, r2, #3
 801247a:	b29b      	uxth	r3, r3
 801247c:	2b06      	cmp	r3, #6
 801247e:	d916      	bls.n	80124ae <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8012480:	f8df c064 	ldr.w	ip, [pc, #100]	@ 80124e8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8012484:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012488:	f8cd c004 	str.w	ip, [sp, #4]
 801248c:	f04f 0c01 	mov.w	ip, #1
 8012490:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8012494:	6920      	ldr	r0, [r4, #16]
 8012496:	f8ad 100c 	strh.w	r1, [sp, #12]
 801249a:	f88d c008 	strb.w	ip, [sp, #8]
 801249e:	f8ad 200a 	strh.w	r2, [sp, #10]
 80124a2:	f8ad 300e 	strh.w	r3, [sp, #14]
 80124a6:	6803      	ldr	r3, [r0, #0]
 80124a8:	a901      	add	r1, sp, #4
 80124aa:	689b      	ldr	r3, [r3, #8]
 80124ac:	4798      	blx	r3
 80124ae:	4b0d      	ldr	r3, [pc, #52]	@ (80124e4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80124b0:	6920      	ldr	r0, [r4, #16]
 80124b2:	9301      	str	r3, [sp, #4]
 80124b4:	2300      	movs	r3, #0
 80124b6:	f88d 5008 	strb.w	r5, [sp, #8]
 80124ba:	f8ad 700a 	strh.w	r7, [sp, #10]
 80124be:	f8ad 600c 	strh.w	r6, [sp, #12]
 80124c2:	f8ad 300e 	strh.w	r3, [sp, #14]
 80124c6:	6803      	ldr	r3, [r0, #0]
 80124c8:	a901      	add	r1, sp, #4
 80124ca:	681b      	ldr	r3, [r3, #0]
 80124cc:	4798      	blx	r3
 80124ce:	b005      	add	sp, #20
 80124d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80124d2:	2900      	cmp	r1, #0
 80124d4:	d1eb      	bne.n	80124ae <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80124d6:	80a2      	strh	r2, [r4, #4]
 80124d8:	80c6      	strh	r6, [r0, #6]
 80124da:	60a1      	str	r1, [r4, #8]
 80124dc:	81a1      	strh	r1, [r4, #12]
 80124de:	73a1      	strb	r1, [r4, #14]
 80124e0:	e7e5      	b.n	80124ae <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80124e2:	bf00      	nop
 80124e4:	0802737c 	.word	0x0802737c
 80124e8:	080273a4 	.word	0x080273a4

080124ec <nema_rb_init>:
 80124ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80124f0:	6805      	ldr	r5, [r0, #0]
 80124f2:	4f23      	ldr	r7, [pc, #140]	@ (8012580 <nema_rb_init+0x94>)
 80124f4:	2d00      	cmp	r5, #0
 80124f6:	603d      	str	r5, [r7, #0]
 80124f8:	dd3c      	ble.n	8012574 <nema_rb_init+0x88>
 80124fa:	f8df c090 	ldr.w	ip, [pc, #144]	@ 801258c <nema_rb_init+0xa0>
 80124fe:	10ab      	asrs	r3, r5, #2
 8012500:	3b04      	subs	r3, #4
 8012502:	f8df e08c 	ldr.w	lr, [pc, #140]	@ 8012590 <nema_rb_init+0xa4>
 8012506:	6886      	ldr	r6, [r0, #8]
 8012508:	4c1e      	ldr	r4, [pc, #120]	@ (8012584 <nema_rb_init+0x98>)
 801250a:	f8cc 3000 	str.w	r3, [ip]
 801250e:	f8df 8084 	ldr.w	r8, [pc, #132]	@ 8012594 <nema_rb_init+0xa8>
 8012512:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 8012516:	f8ce 0000 	str.w	r0, [lr]
 801251a:	6026      	str	r6, [r4, #0]
 801251c:	f8c8 c000 	str.w	ip, [r8]
 8012520:	b329      	cbz	r1, 801256e <nema_rb_init+0x82>
 8012522:	2400      	movs	r4, #0
 8012524:	f8df e070 	ldr.w	lr, [pc, #112]	@ 8012598 <nema_rb_init+0xac>
 8012528:	4917      	ldr	r1, [pc, #92]	@ (8012588 <nema_rb_init+0x9c>)
 801252a:	e9c0 4404 	strd	r4, r4, [r0, #16]
 801252e:	f846 e023 	str.w	lr, [r6, r3, lsl #2]
 8012532:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8012536:	e9c3 1502 	strd	r1, r5, [r3, #8]
 801253a:	f8c3 c004 	str.w	ip, [r3, #4]
 801253e:	f7ef ffc9 	bl	80024d4 <nema_buffer_flush>
 8012542:	4621      	mov	r1, r4
 8012544:	f44f 70a4 	mov.w	r0, #328	@ 0x148
 8012548:	f7ef feea 	bl	8002320 <nema_reg_write>
 801254c:	f8d8 1000 	ldr.w	r1, [r8]
 8012550:	20ec      	movs	r0, #236	@ 0xec
 8012552:	f041 0106 	orr.w	r1, r1, #6
 8012556:	f7ef fee3 	bl	8002320 <nema_reg_write>
 801255a:	f8d8 1000 	ldr.w	r1, [r8]
 801255e:	20f0      	movs	r0, #240	@ 0xf0
 8012560:	f7ef fede 	bl	8002320 <nema_reg_write>
 8012564:	6839      	ldr	r1, [r7, #0]
 8012566:	20f4      	movs	r0, #244	@ 0xf4
 8012568:	f7ef feda 	bl	8002320 <nema_reg_write>
 801256c:	4621      	mov	r1, r4
 801256e:	4608      	mov	r0, r1
 8012570:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012574:	2004      	movs	r0, #4
 8012576:	f000 fa25 	bl	80129c4 <nema_set_error>
 801257a:	f04f 31ff 	mov.w	r1, #4294967295
 801257e:	e7f6      	b.n	801256e <nema_rb_init+0x82>
 8012580:	2004c034 	.word	0x2004c034
 8012584:	2004c02c 	.word	0x2004c02c
 8012588:	ff0000f4 	.word	0xff0000f4
 801258c:	2004c030 	.word	0x2004c030
 8012590:	2004c024 	.word	0x2004c024
 8012594:	2004c028 	.word	0x2004c028
 8012598:	ff0000f0 	.word	0xff0000f0

0801259c <nema_rb_submit_cmdlist2>:
 801259c:	2900      	cmp	r1, #0
 801259e:	d074      	beq.n	801268a <nema_rb_submit_cmdlist2+0xee>
 80125a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80125a4:	f8df 80f8 	ldr.w	r8, [pc, #248]	@ 80126a0 <nema_rb_submit_cmdlist2+0x104>
 80125a8:	4b39      	ldr	r3, [pc, #228]	@ (8012690 <nema_rb_submit_cmdlist2+0xf4>)
 80125aa:	f8d8 2000 	ldr.w	r2, [r8]
 80125ae:	681d      	ldr	r5, [r3, #0]
 80125b0:	6913      	ldr	r3, [r2, #16]
 80125b2:	468c      	mov	ip, r1
 80125b4:	4c37      	ldr	r4, [pc, #220]	@ (8012694 <nema_rb_submit_cmdlist2+0xf8>)
 80125b6:	1d19      	adds	r1, r3, #4
 80125b8:	42a9      	cmp	r1, r5
 80125ba:	6824      	ldr	r4, [r4, #0]
 80125bc:	db0a      	blt.n	80125d4 <nema_rb_submit_cmdlist2+0x38>
 80125be:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 80125c2:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 80125c6:	6913      	ldr	r3, [r2, #16]
 80125c8:	3301      	adds	r3, #1
 80125ca:	429d      	cmp	r5, r3
 80125cc:	6113      	str	r3, [r2, #16]
 80125ce:	dc59      	bgt.n	8012684 <nema_rb_submit_cmdlist2+0xe8>
 80125d0:	2300      	movs	r3, #0
 80125d2:	6113      	str	r3, [r2, #16]
 80125d4:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 80125d8:	f04f 0e00 	mov.w	lr, #0
 80125dc:	e009      	b.n	80125f2 <nema_rb_submit_cmdlist2+0x56>
 80125de:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 80125e2:	6913      	ldr	r3, [r2, #16]
 80125e4:	3301      	adds	r3, #1
 80125e6:	429d      	cmp	r5, r3
 80125e8:	6113      	str	r3, [r2, #16]
 80125ea:	bfdc      	itt	le
 80125ec:	2300      	movle	r3, #0
 80125ee:	f8c2 e010 	strle.w	lr, [r2, #16]
 80125f2:	f013 0703 	ands.w	r7, r3, #3
 80125f6:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 80125fa:	d1f0      	bne.n	80125de <nema_rb_submit_cmdlist2+0x42>
 80125fc:	23f0      	movs	r3, #240	@ 0xf0
 80125fe:	6033      	str	r3, [r6, #0]
 8012600:	6913      	ldr	r3, [r2, #16]
 8012602:	3301      	adds	r3, #1
 8012604:	429d      	cmp	r5, r3
 8012606:	bfd3      	iteet	le
 8012608:	4623      	movle	r3, r4
 801260a:	6113      	strgt	r3, [r2, #16]
 801260c:	eb04 0383 	addgt.w	r3, r4, r3, lsl #2
 8012610:	6117      	strle	r7, [r2, #16]
 8012612:	6018      	str	r0, [r3, #0]
 8012614:	6913      	ldr	r3, [r2, #16]
 8012616:	3301      	adds	r3, #1
 8012618:	429d      	cmp	r5, r3
 801261a:	dd2f      	ble.n	801267c <nema_rb_submit_cmdlist2+0xe0>
 801261c:	6113      	str	r3, [r2, #16]
 801261e:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8012622:	491d      	ldr	r1, [pc, #116]	@ (8012698 <nema_rb_submit_cmdlist2+0xfc>)
 8012624:	4610      	mov	r0, r2
 8012626:	6019      	str	r1, [r3, #0]
 8012628:	6913      	ldr	r3, [r2, #16]
 801262a:	3301      	adds	r3, #1
 801262c:	429d      	cmp	r5, r3
 801262e:	bfd3      	iteet	le
 8012630:	2300      	movle	r3, #0
 8012632:	eb04 0483 	addgt.w	r4, r4, r3, lsl #2
 8012636:	6113      	strgt	r3, [r2, #16]
 8012638:	6113      	strle	r3, [r2, #16]
 801263a:	f8c4 c000 	str.w	ip, [r4]
 801263e:	6913      	ldr	r3, [r2, #16]
 8012640:	3301      	adds	r3, #1
 8012642:	429d      	cmp	r5, r3
 8012644:	bfd8      	it	le
 8012646:	2300      	movle	r3, #0
 8012648:	6113      	str	r3, [r2, #16]
 801264a:	f7ef ff43 	bl	80024d4 <nema_buffer_flush>
 801264e:	4a13      	ldr	r2, [pc, #76]	@ (801269c <nema_rb_submit_cmdlist2+0x100>)
 8012650:	f8d8 3000 	ldr.w	r3, [r8]
 8012654:	6811      	ldr	r1, [r2, #0]
 8012656:	691b      	ldr	r3, [r3, #16]
 8012658:	20ec      	movs	r0, #236	@ 0xec
 801265a:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801265e:	f041 0104 	orr.w	r1, r1, #4
 8012662:	f7ef fe5d 	bl	8002320 <nema_reg_write>
 8012666:	f8d8 3000 	ldr.w	r3, [r8]
 801266a:	6958      	ldr	r0, [r3, #20]
 801266c:	3001      	adds	r0, #1
 801266e:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8012672:	bfa8      	it	ge
 8012674:	2000      	movge	r0, #0
 8012676:	6158      	str	r0, [r3, #20]
 8012678:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801267c:	2100      	movs	r1, #0
 801267e:	4623      	mov	r3, r4
 8012680:	6111      	str	r1, [r2, #16]
 8012682:	e7ce      	b.n	8012622 <nema_rb_submit_cmdlist2+0x86>
 8012684:	2b00      	cmp	r3, #0
 8012686:	d19c      	bne.n	80125c2 <nema_rb_submit_cmdlist2+0x26>
 8012688:	e7a4      	b.n	80125d4 <nema_rb_submit_cmdlist2+0x38>
 801268a:	f04f 30ff 	mov.w	r0, #4294967295
 801268e:	4770      	bx	lr
 8012690:	2004c030 	.word	0x2004c030
 8012694:	2004c02c 	.word	0x2004c02c
 8012698:	000200f4 	.word	0x000200f4
 801269c:	2004c028 	.word	0x2004c028
 80126a0:	2004c024 	.word	0x2004c024

080126a4 <nema_rb_submit_cmdlist>:
 80126a4:	68c0      	ldr	r0, [r0, #12]
 80126a6:	f7ff bf79 	b.w	801259c <nema_rb_submit_cmdlist2>
 80126aa:	bf00      	nop

080126ac <nema_rb_inline_cmd>:
 80126ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80126ae:	4e21      	ldr	r6, [pc, #132]	@ (8012734 <nema_rb_inline_cmd+0x88>)
 80126b0:	4b21      	ldr	r3, [pc, #132]	@ (8012738 <nema_rb_inline_cmd+0x8c>)
 80126b2:	6832      	ldr	r2, [r6, #0]
 80126b4:	681d      	ldr	r5, [r3, #0]
 80126b6:	6913      	ldr	r3, [r2, #16]
 80126b8:	4c20      	ldr	r4, [pc, #128]	@ (801273c <nema_rb_inline_cmd+0x90>)
 80126ba:	1c5f      	adds	r7, r3, #1
 80126bc:	42af      	cmp	r7, r5
 80126be:	6824      	ldr	r4, [r4, #0]
 80126c0:	db24      	blt.n	801270c <nema_rb_inline_cmd+0x60>
 80126c2:	f44f 3780 	mov.w	r7, #65536	@ 0x10000
 80126c6:	f844 7023 	str.w	r7, [r4, r3, lsl #2]
 80126ca:	6913      	ldr	r3, [r2, #16]
 80126cc:	3301      	adds	r3, #1
 80126ce:	429d      	cmp	r5, r3
 80126d0:	6113      	str	r3, [r2, #16]
 80126d2:	dc17      	bgt.n	8012704 <nema_rb_inline_cmd+0x58>
 80126d4:	2700      	movs	r7, #0
 80126d6:	4623      	mov	r3, r4
 80126d8:	6117      	str	r7, [r2, #16]
 80126da:	6018      	str	r0, [r3, #0]
 80126dc:	6913      	ldr	r3, [r2, #16]
 80126de:	3301      	adds	r3, #1
 80126e0:	429d      	cmp	r5, r3
 80126e2:	bfd3      	iteet	le
 80126e4:	2300      	movle	r3, #0
 80126e6:	eb04 0483 	addgt.w	r4, r4, r3, lsl #2
 80126ea:	6113      	strgt	r3, [r2, #16]
 80126ec:	6113      	strle	r3, [r2, #16]
 80126ee:	6021      	str	r1, [r4, #0]
 80126f0:	6913      	ldr	r3, [r2, #16]
 80126f2:	3301      	adds	r3, #1
 80126f4:	429d      	cmp	r5, r3
 80126f6:	bfd8      	it	le
 80126f8:	2300      	movle	r3, #0
 80126fa:	f010 4f7f 	tst.w	r0, #4278190080	@ 0xff000000
 80126fe:	6113      	str	r3, [r2, #16]
 8012700:	d107      	bne.n	8012712 <nema_rb_inline_cmd+0x66>
 8012702:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012704:	2b00      	cmp	r3, #0
 8012706:	d1de      	bne.n	80126c6 <nema_rb_inline_cmd+0x1a>
 8012708:	4623      	mov	r3, r4
 801270a:	e7e6      	b.n	80126da <nema_rb_inline_cmd+0x2e>
 801270c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8012710:	e7e3      	b.n	80126da <nema_rb_inline_cmd+0x2e>
 8012712:	4610      	mov	r0, r2
 8012714:	f7ef fede 	bl	80024d4 <nema_buffer_flush>
 8012718:	6833      	ldr	r3, [r6, #0]
 801271a:	4a09      	ldr	r2, [pc, #36]	@ (8012740 <nema_rb_inline_cmd+0x94>)
 801271c:	691b      	ldr	r3, [r3, #16]
 801271e:	6811      	ldr	r1, [r2, #0]
 8012720:	20ec      	movs	r0, #236	@ 0xec
 8012722:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8012726:	f041 0104 	orr.w	r1, r1, #4
 801272a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801272e:	f7ef bdf7 	b.w	8002320 <nema_reg_write>
 8012732:	bf00      	nop
 8012734:	2004c024 	.word	0x2004c024
 8012738:	2004c030 	.word	0x2004c030
 801273c:	2004c02c 	.word	0x2004c02c
 8012740:	2004c028 	.word	0x2004c028

08012744 <nema_rb_force_flush>:
 8012744:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012746:	4e36      	ldr	r6, [pc, #216]	@ (8012820 <nema_rb_force_flush+0xdc>)
 8012748:	4b36      	ldr	r3, [pc, #216]	@ (8012824 <nema_rb_force_flush+0xe0>)
 801274a:	6830      	ldr	r0, [r6, #0]
 801274c:	6819      	ldr	r1, [r3, #0]
 801274e:	6903      	ldr	r3, [r0, #16]
 8012750:	4a35      	ldr	r2, [pc, #212]	@ (8012828 <nema_rb_force_flush+0xe4>)
 8012752:	1d1c      	adds	r4, r3, #4
 8012754:	428c      	cmp	r4, r1
 8012756:	6812      	ldr	r2, [r2, #0]
 8012758:	db0a      	blt.n	8012770 <nema_rb_force_flush+0x2c>
 801275a:	f44f 3480 	mov.w	r4, #65536	@ 0x10000
 801275e:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
 8012762:	6903      	ldr	r3, [r0, #16]
 8012764:	3301      	adds	r3, #1
 8012766:	4299      	cmp	r1, r3
 8012768:	6103      	str	r3, [r0, #16]
 801276a:	dc51      	bgt.n	8012810 <nema_rb_force_flush+0xcc>
 801276c:	2300      	movs	r3, #0
 801276e:	6103      	str	r3, [r0, #16]
 8012770:	f44f 3580 	mov.w	r5, #65536	@ 0x10000
 8012774:	2700      	movs	r7, #0
 8012776:	e008      	b.n	801278a <nema_rb_force_flush+0x46>
 8012778:	f842 5023 	str.w	r5, [r2, r3, lsl #2]
 801277c:	6903      	ldr	r3, [r0, #16]
 801277e:	3301      	adds	r3, #1
 8012780:	4299      	cmp	r1, r3
 8012782:	6103      	str	r3, [r0, #16]
 8012784:	bfdc      	itt	le
 8012786:	2300      	movle	r3, #0
 8012788:	6107      	strle	r7, [r0, #16]
 801278a:	f013 0c03 	ands.w	ip, r3, #3
 801278e:	eb02 0483 	add.w	r4, r2, r3, lsl #2
 8012792:	d1f1      	bne.n	8012778 <nema_rb_force_flush+0x34>
 8012794:	4d25      	ldr	r5, [pc, #148]	@ (801282c <nema_rb_force_flush+0xe8>)
 8012796:	4f26      	ldr	r7, [pc, #152]	@ (8012830 <nema_rb_force_flush+0xec>)
 8012798:	6025      	str	r5, [r4, #0]
 801279a:	6904      	ldr	r4, [r0, #16]
 801279c:	683d      	ldr	r5, [r7, #0]
 801279e:	3401      	adds	r4, #1
 80127a0:	42a1      	cmp	r1, r4
 80127a2:	bfd8      	it	le
 80127a4:	4614      	movle	r4, r2
 80127a6:	f103 0304 	add.w	r3, r3, #4
 80127aa:	bfc8      	it	gt
 80127ac:	6104      	strgt	r4, [r0, #16]
 80127ae:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 80127b2:	bfcc      	ite	gt
 80127b4:	eb02 0484 	addgt.w	r4, r2, r4, lsl #2
 80127b8:	f8c0 c010 	strle.w	ip, [r0, #16]
 80127bc:	6023      	str	r3, [r4, #0]
 80127be:	6903      	ldr	r3, [r0, #16]
 80127c0:	3301      	adds	r3, #1
 80127c2:	4299      	cmp	r1, r3
 80127c4:	dd27      	ble.n	8012816 <nema_rb_force_flush+0xd2>
 80127c6:	6103      	str	r3, [r0, #16]
 80127c8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80127cc:	4c19      	ldr	r4, [pc, #100]	@ (8012834 <nema_rb_force_flush+0xf0>)
 80127ce:	601c      	str	r4, [r3, #0]
 80127d0:	6903      	ldr	r3, [r0, #16]
 80127d2:	3301      	adds	r3, #1
 80127d4:	4299      	cmp	r1, r3
 80127d6:	bfd5      	itete	le
 80127d8:	2300      	movle	r3, #0
 80127da:	6103      	strgt	r3, [r0, #16]
 80127dc:	6103      	strle	r3, [r0, #16]
 80127de:	eb02 0283 	addgt.w	r2, r2, r3, lsl #2
 80127e2:	4b15      	ldr	r3, [pc, #84]	@ (8012838 <nema_rb_force_flush+0xf4>)
 80127e4:	681b      	ldr	r3, [r3, #0]
 80127e6:	6013      	str	r3, [r2, #0]
 80127e8:	6903      	ldr	r3, [r0, #16]
 80127ea:	3301      	adds	r3, #1
 80127ec:	4299      	cmp	r1, r3
 80127ee:	bfd8      	it	le
 80127f0:	2300      	movle	r3, #0
 80127f2:	6103      	str	r3, [r0, #16]
 80127f4:	f7ef fe6e 	bl	80024d4 <nema_buffer_flush>
 80127f8:	6833      	ldr	r3, [r6, #0]
 80127fa:	6839      	ldr	r1, [r7, #0]
 80127fc:	691b      	ldr	r3, [r3, #16]
 80127fe:	20ec      	movs	r0, #236	@ 0xec
 8012800:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8012804:	f041 0104 	orr.w	r1, r1, #4
 8012808:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801280c:	f7ef bd88 	b.w	8002320 <nema_reg_write>
 8012810:	2b00      	cmp	r3, #0
 8012812:	d1a4      	bne.n	801275e <nema_rb_force_flush+0x1a>
 8012814:	e7ac      	b.n	8012770 <nema_rb_force_flush+0x2c>
 8012816:	2400      	movs	r4, #0
 8012818:	4613      	mov	r3, r2
 801281a:	6104      	str	r4, [r0, #16]
 801281c:	e7d6      	b.n	80127cc <nema_rb_force_flush+0x88>
 801281e:	bf00      	nop
 8012820:	2004c024 	.word	0x2004c024
 8012824:	2004c030 	.word	0x2004c030
 8012828:	2004c02c 	.word	0x2004c02c
 801282c:	ff0000f0 	.word	0xff0000f0
 8012830:	2004c028 	.word	0x2004c028
 8012834:	ff0000f4 	.word	0xff0000f4
 8012838:	2004c034 	.word	0x2004c034

0801283c <nema_rb_submit_cl_id>:
 801283c:	b510      	push	{r4, lr}
 801283e:	1e04      	subs	r4, r0, #0
 8012840:	dd40      	ble.n	80128c4 <nema_rb_submit_cl_id+0x88>
 8012842:	2000      	movs	r0, #0
 8012844:	f7ef fe47 	bl	80024d6 <nema_mutex_lock>
 8012848:	4621      	mov	r1, r4
 801284a:	f44f 70a4 	mov.w	r0, #328	@ 0x148
 801284e:	f7ff ff2d 	bl	80126ac <nema_rb_inline_cmd>
 8012852:	4a1d      	ldr	r2, [pc, #116]	@ (80128c8 <nema_rb_submit_cl_id+0x8c>)
 8012854:	4b1d      	ldr	r3, [pc, #116]	@ (80128cc <nema_rb_submit_cl_id+0x90>)
 8012856:	6812      	ldr	r2, [r2, #0]
 8012858:	6818      	ldr	r0, [r3, #0]
 801285a:	6913      	ldr	r3, [r2, #16]
 801285c:	1c59      	adds	r1, r3, #1
 801285e:	4281      	cmp	r1, r0
 8012860:	db0e      	blt.n	8012880 <nema_rb_submit_cl_id+0x44>
 8012862:	f44f 3480 	mov.w	r4, #65536	@ 0x10000
 8012866:	491a      	ldr	r1, [pc, #104]	@ (80128d0 <nema_rb_submit_cl_id+0x94>)
 8012868:	6809      	ldr	r1, [r1, #0]
 801286a:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 801286e:	6913      	ldr	r3, [r2, #16]
 8012870:	3301      	adds	r3, #1
 8012872:	4298      	cmp	r0, r3
 8012874:	6113      	str	r3, [r2, #16]
 8012876:	dc21      	bgt.n	80128bc <nema_rb_submit_cl_id+0x80>
 8012878:	2400      	movs	r4, #0
 801287a:	460b      	mov	r3, r1
 801287c:	6114      	str	r4, [r2, #16]
 801287e:	e003      	b.n	8012888 <nema_rb_submit_cl_id+0x4c>
 8012880:	4913      	ldr	r1, [pc, #76]	@ (80128d0 <nema_rb_submit_cl_id+0x94>)
 8012882:	6809      	ldr	r1, [r1, #0]
 8012884:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8012888:	24f8      	movs	r4, #248	@ 0xf8
 801288a:	601c      	str	r4, [r3, #0]
 801288c:	6913      	ldr	r3, [r2, #16]
 801288e:	3301      	adds	r3, #1
 8012890:	4298      	cmp	r0, r3
 8012892:	bfd5      	itete	le
 8012894:	2300      	movle	r3, #0
 8012896:	6113      	strgt	r3, [r2, #16]
 8012898:	6113      	strle	r3, [r2, #16]
 801289a:	eb01 0183 	addgt.w	r1, r1, r3, lsl #2
 801289e:	2301      	movs	r3, #1
 80128a0:	600b      	str	r3, [r1, #0]
 80128a2:	6913      	ldr	r3, [r2, #16]
 80128a4:	3301      	adds	r3, #1
 80128a6:	4298      	cmp	r0, r3
 80128a8:	bfd8      	it	le
 80128aa:	2300      	movle	r3, #0
 80128ac:	6113      	str	r3, [r2, #16]
 80128ae:	f7ff ff49 	bl	8012744 <nema_rb_force_flush>
 80128b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80128b6:	2000      	movs	r0, #0
 80128b8:	f7ef be0f 	b.w	80024da <nema_mutex_unlock>
 80128bc:	2b00      	cmp	r3, #0
 80128be:	d1d4      	bne.n	801286a <nema_rb_submit_cl_id+0x2e>
 80128c0:	460b      	mov	r3, r1
 80128c2:	e7e1      	b.n	8012888 <nema_rb_submit_cl_id+0x4c>
 80128c4:	bd10      	pop	{r4, pc}
 80128c6:	bf00      	nop
 80128c8:	2004c024 	.word	0x2004c024
 80128cc:	2004c030 	.word	0x2004c030
 80128d0:	2004c02c 	.word	0x2004c02c

080128d4 <init_nema_regs>:
 80128d4:	b538      	push	{r3, r4, r5, lr}
 80128d6:	2100      	movs	r1, #0
 80128d8:	20e8      	movs	r0, #232	@ 0xe8
 80128da:	f7ef fd21 	bl	8002320 <nema_reg_write>
 80128de:	2100      	movs	r1, #0
 80128e0:	20fc      	movs	r0, #252	@ 0xfc
 80128e2:	f7ef fd1d 	bl	8002320 <nema_reg_write>
 80128e6:	2101      	movs	r1, #1
 80128e8:	f44f 7062 	mov.w	r0, #904	@ 0x388
 80128ec:	f7ef fd18 	bl	8002320 <nema_reg_write>
 80128f0:	2000      	movs	r0, #0
 80128f2:	f001 f969 	bl	8013bc8 <nema_set_interrupt_ctrl>
 80128f6:	f001 ffbb 	bl	8014870 <nema_blender_init>
 80128fa:	2100      	movs	r1, #0
 80128fc:	f44f 7000 	mov.w	r0, #512	@ 0x200
 8012900:	f001 febe 	bl	8014680 <nema_cl_add_cmd>
 8012904:	f04f 31ff 	mov.w	r1, #4294967295
 8012908:	f44f 7001 	mov.w	r0, #516	@ 0x204
 801290c:	f001 feb8 	bl	8014680 <nema_cl_add_cmd>
 8012910:	f000 ff12 	bl	8013738 <nema_readHwConfig>
 8012914:	f410 2080 	ands.w	r0, r0, #262144	@ 0x40000
 8012918:	d015      	beq.n	8012946 <init_nema_regs+0x72>
 801291a:	2007      	movs	r0, #7
 801291c:	f001 f8a0 	bl	8013a60 <nema_set_depth_ctrl>
 8012920:	2300      	movs	r3, #0
 8012922:	4c10      	ldr	r4, [pc, #64]	@ (8012964 <init_nema_regs+0x90>)
 8012924:	7820      	ldrb	r0, [r4, #0]
 8012926:	7063      	strb	r3, [r4, #1]
 8012928:	f000 ff18 	bl	801375c <nema_enable_tiling>
 801292c:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 8012930:	2500      	movs	r5, #0
 8012932:	6962      	ldr	r2, [r4, #20]
 8012934:	430b      	orrs	r3, r1
 8012936:	4313      	orrs	r3, r2
 8012938:	e9c4 5303 	strd	r5, r3, [r4, #12]
 801293c:	f000 ff0a 	bl	8013754 <nema_readHwConfigH>
 8012940:	0583      	lsls	r3, r0, #22
 8012942:	d403      	bmi.n	801294c <init_nema_regs+0x78>
 8012944:	bd38      	pop	{r3, r4, r5, pc}
 8012946:	4c07      	ldr	r4, [pc, #28]	@ (8012964 <init_nema_regs+0x90>)
 8012948:	70a0      	strb	r0, [r4, #2]
 801294a:	e7ef      	b.n	801292c <init_nema_regs+0x58>
 801294c:	4629      	mov	r1, r5
 801294e:	f44f 705d 	mov.w	r0, #884	@ 0x374
 8012952:	f7ef fce5 	bl	8002320 <nema_reg_write>
 8012956:	4629      	mov	r1, r5
 8012958:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801295c:	f44f 705a 	mov.w	r0, #872	@ 0x368
 8012960:	f7ef bcde 	b.w	8002320 <nema_reg_write>
 8012964:	20000060 	.word	0x20000060

08012968 <nema_init>:
 8012968:	b510      	push	{r4, lr}
 801296a:	f7ef fd21 	bl	80023b0 <nema_sys_init>
 801296e:	1e04      	subs	r4, r0, #0
 8012970:	db11      	blt.n	8012996 <nema_init+0x2e>
 8012972:	f44f 70f6 	mov.w	r0, #492	@ 0x1ec
 8012976:	f7ef fccd 	bl	8002314 <nema_reg_read>
 801297a:	4b10      	ldr	r3, [pc, #64]	@ (80129bc <nema_init+0x54>)
 801297c:	4298      	cmp	r0, r3
 801297e:	d114      	bne.n	80129aa <nema_init+0x42>
 8012980:	f001 fd92 	bl	80144a8 <nema_cl_unbind>
 8012984:	22d0      	movs	r2, #208	@ 0xd0
 8012986:	2100      	movs	r1, #0
 8012988:	480d      	ldr	r0, [pc, #52]	@ (80129c0 <nema_init+0x58>)
 801298a:	f012 fcdf 	bl	802534c <memset>
 801298e:	b14c      	cbz	r4, 80129a4 <nema_init+0x3c>
 8012990:	2400      	movs	r4, #0
 8012992:	4620      	mov	r0, r4
 8012994:	bd10      	pop	{r4, pc}
 8012996:	4a0a      	ldr	r2, [pc, #40]	@ (80129c0 <nema_init+0x58>)
 8012998:	4620      	mov	r0, r4
 801299a:	6993      	ldr	r3, [r2, #24]
 801299c:	f043 0301 	orr.w	r3, r3, #1
 80129a0:	6193      	str	r3, [r2, #24]
 80129a2:	bd10      	pop	{r4, pc}
 80129a4:	f7ff ff96 	bl	80128d4 <init_nema_regs>
 80129a8:	e7f3      	b.n	8012992 <nema_init+0x2a>
 80129aa:	4a05      	ldr	r2, [pc, #20]	@ (80129c0 <nema_init+0x58>)
 80129ac:	f04f 34ff 	mov.w	r4, #4294967295
 80129b0:	6993      	ldr	r3, [r2, #24]
 80129b2:	f043 0302 	orr.w	r3, r3, #2
 80129b6:	6193      	str	r3, [r2, #24]
 80129b8:	e7eb      	b.n	8012992 <nema_init+0x2a>
 80129ba:	bf00      	nop
 80129bc:	86362000 	.word	0x86362000
 80129c0:	20000060 	.word	0x20000060

080129c4 <nema_set_error>:
 80129c4:	4a02      	ldr	r2, [pc, #8]	@ (80129d0 <nema_set_error+0xc>)
 80129c6:	6993      	ldr	r3, [r2, #24]
 80129c8:	4318      	orrs	r0, r3
 80129ca:	6190      	str	r0, [r2, #24]
 80129cc:	4770      	bx	lr
 80129ce:	bf00      	nop
 80129d0:	20000060 	.word	0x20000060

080129d4 <nema_set_tex_color>:
 80129d4:	4601      	mov	r1, r0
 80129d6:	201c      	movs	r0, #28
 80129d8:	f001 be52 	b.w	8014680 <nema_cl_add_cmd>

080129dc <nema_set_const_reg>:
 80129dc:	3080      	adds	r0, #128	@ 0x80
 80129de:	0080      	lsls	r0, r0, #2
 80129e0:	f5b0 7f03 	cmp.w	r0, #524	@ 0x20c
 80129e4:	d900      	bls.n	80129e8 <nema_set_const_reg+0xc>
 80129e6:	4770      	bx	lr
 80129e8:	f001 be4a 	b.w	8014680 <nema_cl_add_cmd>

080129ec <nema_set_clip>:
 80129ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80129ee:	460c      	mov	r4, r1
 80129f0:	4607      	mov	r7, r0
 80129f2:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 80129f6:	4d0c      	ldr	r5, [pc, #48]	@ (8012a28 <nema_set_clip+0x3c>)
 80129f8:	ea24 70e4 	bic.w	r0, r4, r4, asr #31
 80129fc:	b289      	uxth	r1, r1
 80129fe:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8012a02:	19d6      	adds	r6, r2, r7
 8012a04:	f44f 7088 	mov.w	r0, #272	@ 0x110
 8012a08:	e9c5 7407 	strd	r7, r4, [r5, #28]
 8012a0c:	e9c5 2309 	strd	r2, r3, [r5, #36]	@ 0x24
 8012a10:	441c      	add	r4, r3
 8012a12:	f001 fe35 	bl	8014680 <nema_cl_add_cmd>
 8012a16:	b2b1      	uxth	r1, r6
 8012a18:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8012a1c:	f44f 708a 	mov.w	r0, #276	@ 0x114
 8012a20:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8012a24:	f001 be2c 	b.w	8014680 <nema_cl_add_cmd>
 8012a28:	20000060 	.word	0x20000060

08012a2c <nema_enable_gradient>:
 8012a2c:	2800      	cmp	r0, #0
 8012a2e:	bf14      	ite	ne
 8012a30:	f04f 6100 	movne.w	r1, #134217728	@ 0x8000000
 8012a34:	2100      	moveq	r1, #0
 8012a36:	b410      	push	{r4}
 8012a38:	4a05      	ldr	r2, [pc, #20]	@ (8012a50 <nema_enable_gradient+0x24>)
 8012a3a:	6950      	ldr	r0, [r2, #20]
 8012a3c:	e9d2 3401 	ldrd	r3, r4, [r2, #4]
 8012a40:	4323      	orrs	r3, r4
 8012a42:	4303      	orrs	r3, r0
 8012a44:	430b      	orrs	r3, r1
 8012a46:	e9c2 1303 	strd	r1, r3, [r2, #12]
 8012a4a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012a4e:	4770      	bx	lr
 8012a50:	20000060 	.word	0x20000060

08012a54 <nema_rgba>:
 8012a54:	061b      	lsls	r3, r3, #24
 8012a56:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8012a5a:	4318      	orrs	r0, r3
 8012a5c:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 8012a60:	4770      	bx	lr
 8012a62:	bf00      	nop

08012a64 <nema_bind_src_tex>:
 8012a64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012a68:	9c06      	ldr	r4, [sp, #24]
 8012a6a:	460e      	mov	r6, r1
 8012a6c:	1c61      	adds	r1, r4, #1
 8012a6e:	4605      	mov	r5, r0
 8012a70:	4617      	mov	r7, r2
 8012a72:	f89d 001c 	ldrb.w	r0, [sp, #28]
 8012a76:	d022      	beq.n	8012abe <nema_bind_src_tex+0x5a>
 8012a78:	2201      	movs	r2, #1
 8012a7a:	0400      	lsls	r0, r0, #16
 8012a7c:	f8df 80e8 	ldr.w	r8, [pc, #232]	@ 8012b68 <nema_bind_src_tex+0x104>
 8012a80:	ea40 6303 	orr.w	r3, r0, r3, lsl #24
 8012a84:	b2a4      	uxth	r4, r4
 8012a86:	4323      	orrs	r3, r4
 8012a88:	2003      	movs	r0, #3
 8012a8a:	f8c8 3050 	str.w	r3, [r8, #80]	@ 0x50
 8012a8e:	e9c8 5611 	strd	r5, r6, [r8, #68]	@ 0x44
 8012a92:	f8c8 704c 	str.w	r7, [r8, #76]	@ 0x4c
 8012a96:	f8c8 2054 	str.w	r2, [r8, #84]	@ 0x54
 8012a9a:	f001 fd93 	bl	80145c4 <nema_cl_get_space>
 8012a9e:	b160      	cbz	r0, 8012aba <nema_bind_src_tex+0x56>
 8012aa0:	2110      	movs	r1, #16
 8012aa2:	2214      	movs	r2, #20
 8012aa4:	2318      	movs	r3, #24
 8012aa6:	e9c0 1500 	strd	r1, r5, [r0]
 8012aaa:	6082      	str	r2, [r0, #8]
 8012aac:	f8d8 2050 	ldr.w	r2, [r8, #80]	@ 0x50
 8012ab0:	ea46 4607 	orr.w	r6, r6, r7, lsl #16
 8012ab4:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8012ab8:	6146      	str	r6, [r0, #20]
 8012aba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012abe:	06c2      	lsls	r2, r0, #27
 8012ac0:	f003 017f 	and.w	r1, r3, #127	@ 0x7f
 8012ac4:	d428      	bmi.n	8012b18 <nema_bind_src_tex+0xb4>
 8012ac6:	4634      	mov	r4, r6
 8012ac8:	f1a1 020b 	sub.w	r2, r1, #11
 8012acc:	2a42      	cmp	r2, #66	@ 0x42
 8012ace:	d83f      	bhi.n	8012b50 <nema_bind_src_tex+0xec>
 8012ad0:	e8df f002 	tbb	[pc, r2]
 8012ad4:	3e3e3636 	.word	0x3e3e3636
 8012ad8:	3c3e3e3e 	.word	0x3c3e3e3e
 8012adc:	283e3e3e 	.word	0x283e3e3e
 8012ae0:	3e3e3e28 	.word	0x3e3e3e28
 8012ae4:	3e3e3e3e 	.word	0x3e3e3e3e
 8012ae8:	3e3e3e3e 	.word	0x3e3e3e3e
 8012aec:	3e3e3e3e 	.word	0x3e3e3e3e
 8012af0:	36302b36 	.word	0x36302b36
 8012af4:	3e3e302b 	.word	0x3e3e302b
 8012af8:	3e2b2b3e 	.word	0x3e2b2b3e
 8012afc:	3e30303e 	.word	0x3e30303e
 8012b00:	3e3e3e3e 	.word	0x3e3e3e3e
 8012b04:	3e3e3e3e 	.word	0x3e3e3e3e
 8012b08:	3e3e3e3e 	.word	0x3e3e3e3e
 8012b0c:	3e3e3e3e 	.word	0x3e3e3e3e
 8012b10:	3e3e3e3e 	.word	0x3e3e3e3e
 8012b14:	283e      	.short	0x283e
 8012b16:	28          	.byte	0x28
 8012b17:	00          	.byte	0x00
 8012b18:	1cf4      	adds	r4, r6, #3
 8012b1a:	bf48      	it	mi
 8012b1c:	1db4      	addmi	r4, r6, #6
 8012b1e:	f024 0403 	bic.w	r4, r4, #3
 8012b22:	e7d1      	b.n	8012ac8 <nema_bind_src_tex+0x64>
 8012b24:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8012b28:	e7a6      	b.n	8012a78 <nema_bind_src_tex+0x14>
 8012b2a:	0062      	lsls	r2, r4, #1
 8012b2c:	1dd4      	adds	r4, r2, #7
 8012b2e:	d404      	bmi.n	8012b3a <nema_bind_src_tex+0xd6>
 8012b30:	10e4      	asrs	r4, r4, #3
 8012b32:	e7a1      	b.n	8012a78 <nema_bind_src_tex+0x14>
 8012b34:	00a2      	lsls	r2, r4, #2
 8012b36:	1dd4      	adds	r4, r2, #7
 8012b38:	d5fa      	bpl.n	8012b30 <nema_bind_src_tex+0xcc>
 8012b3a:	f102 040e 	add.w	r4, r2, #14
 8012b3e:	e7f7      	b.n	8012b30 <nema_bind_src_tex+0xcc>
 8012b40:	1de2      	adds	r2, r4, #7
 8012b42:	bf48      	it	mi
 8012b44:	f104 020e 	addmi.w	r2, r4, #14
 8012b48:	10d4      	asrs	r4, r2, #3
 8012b4a:	e795      	b.n	8012a78 <nema_bind_src_tex+0x14>
 8012b4c:	0064      	lsls	r4, r4, #1
 8012b4e:	e793      	b.n	8012a78 <nema_bind_src_tex+0x14>
 8012b50:	3904      	subs	r1, #4
 8012b52:	2949      	cmp	r1, #73	@ 0x49
 8012b54:	bf8e      	itee	hi
 8012b56:	2204      	movhi	r2, #4
 8012b58:	4a02      	ldrls	r2, [pc, #8]	@ (8012b64 <nema_bind_src_tex+0x100>)
 8012b5a:	5652      	ldrsbls	r2, [r2, r1]
 8012b5c:	fb02 f404 	mul.w	r4, r2, r4
 8012b60:	e78a      	b.n	8012a78 <nema_bind_src_tex+0x14>
 8012b62:	bf00      	nop
 8012b64:	080273e4 	.word	0x080273e4
 8012b68:	20000060 	.word	0x20000060

08012b6c <nema_bind_dst_tex>:
 8012b6c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012b70:	9d08      	ldr	r5, [sp, #32]
 8012b72:	4699      	mov	r9, r3
 8012b74:	4617      	mov	r7, r2
 8012b76:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 8012b7a:	1c6b      	adds	r3, r5, #1
 8012b7c:	4680      	mov	r8, r0
 8012b7e:	460e      	mov	r6, r1
 8012b80:	d031      	beq.n	8012be6 <nema_bind_dst_tex+0x7a>
 8012b82:	2a12      	cmp	r2, #18
 8012b84:	d00e      	beq.n	8012ba4 <nema_bind_dst_tex+0x38>
 8012b86:	f1a2 0316 	sub.w	r3, r2, #22
 8012b8a:	2b01      	cmp	r3, #1
 8012b8c:	d90a      	bls.n	8012ba4 <nema_bind_dst_tex+0x38>
 8012b8e:	3a4c      	subs	r2, #76	@ 0x4c
 8012b90:	2a01      	cmp	r2, #1
 8012b92:	f240 80b7 	bls.w	8012d04 <nema_bind_dst_tex+0x198>
 8012b96:	4c6e      	ldr	r4, [pc, #440]	@ (8012d50 <nema_bind_dst_tex+0x1e4>)
 8012b98:	7860      	ldrb	r0, [r4, #1]
 8012b9a:	f000 fddf 	bl	801375c <nema_enable_tiling>
 8012b9e:	e007      	b.n	8012bb0 <nema_bind_dst_tex+0x44>
 8012ba0:	eb06 0546 	add.w	r5, r6, r6, lsl #1
 8012ba4:	2301      	movs	r3, #1
 8012ba6:	4c6a      	ldr	r4, [pc, #424]	@ (8012d50 <nema_bind_dst_tex+0x1e4>)
 8012ba8:	4618      	mov	r0, r3
 8012baa:	7023      	strb	r3, [r4, #0]
 8012bac:	f000 fdd6 	bl	801375c <nema_enable_tiling>
 8012bb0:	2201      	movs	r2, #1
 8012bb2:	b2ad      	uxth	r5, r5
 8012bb4:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8012bb8:	2003      	movs	r0, #3
 8012bba:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8012bbc:	e9c4 860c 	strd	r8, r6, [r4, #48]	@ 0x30
 8012bc0:	63a7      	str	r7, [r4, #56]	@ 0x38
 8012bc2:	6422      	str	r2, [r4, #64]	@ 0x40
 8012bc4:	f001 fcfe 	bl	80145c4 <nema_cl_get_space>
 8012bc8:	b158      	cbz	r0, 8012be2 <nema_bind_dst_tex+0x76>
 8012bca:	2100      	movs	r1, #0
 8012bcc:	2204      	movs	r2, #4
 8012bce:	2308      	movs	r3, #8
 8012bd0:	e9c0 1800 	strd	r1, r8, [r0]
 8012bd4:	6082      	str	r2, [r0, #8]
 8012bd6:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8012bd8:	ea46 4607 	orr.w	r6, r6, r7, lsl #16
 8012bdc:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8012be0:	6146      	str	r6, [r0, #20]
 8012be2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012be6:	f1a2 030b 	sub.w	r3, r2, #11
 8012bea:	2b42      	cmp	r3, #66	@ 0x42
 8012bec:	f200 80a6 	bhi.w	8012d3c <nema_bind_dst_tex+0x1d0>
 8012bf0:	a101      	add	r1, pc, #4	@ (adr r1, 8012bf8 <nema_bind_dst_tex+0x8c>)
 8012bf2:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8012bf6:	bf00      	nop
 8012bf8:	08012d2f 	.word	0x08012d2f
 8012bfc:	08012d2f 	.word	0x08012d2f
 8012c00:	08012d3d 	.word	0x08012d3d
 8012c04:	08012d3d 	.word	0x08012d3d
 8012c08:	08012d3d 	.word	0x08012d3d
 8012c0c:	08012d3d 	.word	0x08012d3d
 8012c10:	08012d3d 	.word	0x08012d3d
 8012c14:	08012d39 	.word	0x08012d39
 8012c18:	08012d3d 	.word	0x08012d3d
 8012c1c:	08012d3d 	.word	0x08012d3d
 8012c20:	08012d3d 	.word	0x08012d3d
 8012c24:	08012ba1 	.word	0x08012ba1
 8012c28:	08012ba1 	.word	0x08012ba1
 8012c2c:	08012d3d 	.word	0x08012d3d
 8012c30:	08012d3d 	.word	0x08012d3d
 8012c34:	08012d3d 	.word	0x08012d3d
 8012c38:	08012d3d 	.word	0x08012d3d
 8012c3c:	08012d3d 	.word	0x08012d3d
 8012c40:	08012d3d 	.word	0x08012d3d
 8012c44:	08012d3d 	.word	0x08012d3d
 8012c48:	08012d3d 	.word	0x08012d3d
 8012c4c:	08012d3d 	.word	0x08012d3d
 8012c50:	08012d3d 	.word	0x08012d3d
 8012c54:	08012d3d 	.word	0x08012d3d
 8012c58:	08012d3d 	.word	0x08012d3d
 8012c5c:	08012d3d 	.word	0x08012d3d
 8012c60:	08012d3d 	.word	0x08012d3d
 8012c64:	08012d3d 	.word	0x08012d3d
 8012c68:	08012d2f 	.word	0x08012d2f
 8012c6c:	08012d19 	.word	0x08012d19
 8012c70:	08012d23 	.word	0x08012d23
 8012c74:	08012d2f 	.word	0x08012d2f
 8012c78:	08012d19 	.word	0x08012d19
 8012c7c:	08012d23 	.word	0x08012d23
 8012c80:	08012d3d 	.word	0x08012d3d
 8012c84:	08012d3d 	.word	0x08012d3d
 8012c88:	08012d3d 	.word	0x08012d3d
 8012c8c:	08012d19 	.word	0x08012d19
 8012c90:	08012d19 	.word	0x08012d19
 8012c94:	08012d3d 	.word	0x08012d3d
 8012c98:	08012d3d 	.word	0x08012d3d
 8012c9c:	08012d23 	.word	0x08012d23
 8012ca0:	08012d23 	.word	0x08012d23
 8012ca4:	08012d3d 	.word	0x08012d3d
 8012ca8:	08012d3d 	.word	0x08012d3d
 8012cac:	08012d3d 	.word	0x08012d3d
 8012cb0:	08012d3d 	.word	0x08012d3d
 8012cb4:	08012d3d 	.word	0x08012d3d
 8012cb8:	08012d3d 	.word	0x08012d3d
 8012cbc:	08012d3d 	.word	0x08012d3d
 8012cc0:	08012d3d 	.word	0x08012d3d
 8012cc4:	08012d3d 	.word	0x08012d3d
 8012cc8:	08012d3d 	.word	0x08012d3d
 8012ccc:	08012d3d 	.word	0x08012d3d
 8012cd0:	08012d3d 	.word	0x08012d3d
 8012cd4:	08012d3d 	.word	0x08012d3d
 8012cd8:	08012d3d 	.word	0x08012d3d
 8012cdc:	08012d3d 	.word	0x08012d3d
 8012ce0:	08012d3d 	.word	0x08012d3d
 8012ce4:	08012d3d 	.word	0x08012d3d
 8012ce8:	08012d3d 	.word	0x08012d3d
 8012cec:	08012d3d 	.word	0x08012d3d
 8012cf0:	08012d3d 	.word	0x08012d3d
 8012cf4:	08012d3d 	.word	0x08012d3d
 8012cf8:	08012d3d 	.word	0x08012d3d
 8012cfc:	08012d13 	.word	0x08012d13
 8012d00:	08012d13 	.word	0x08012d13
 8012d04:	2301      	movs	r3, #1
 8012d06:	4c12      	ldr	r4, [pc, #72]	@ (8012d50 <nema_bind_dst_tex+0x1e4>)
 8012d08:	4618      	mov	r0, r3
 8012d0a:	7023      	strb	r3, [r4, #0]
 8012d0c:	f000 fd3a 	bl	8013784 <nema_enable_tiling_2x2>
 8012d10:	e74e      	b.n	8012bb0 <nema_bind_dst_tex+0x44>
 8012d12:	eb06 0546 	add.w	r5, r6, r6, lsl #1
 8012d16:	e734      	b.n	8012b82 <nema_bind_dst_tex+0x16>
 8012d18:	0073      	lsls	r3, r6, #1
 8012d1a:	1ddd      	adds	r5, r3, #7
 8012d1c:	d404      	bmi.n	8012d28 <nema_bind_dst_tex+0x1bc>
 8012d1e:	10ed      	asrs	r5, r5, #3
 8012d20:	e72f      	b.n	8012b82 <nema_bind_dst_tex+0x16>
 8012d22:	00b3      	lsls	r3, r6, #2
 8012d24:	1ddd      	adds	r5, r3, #7
 8012d26:	d5fa      	bpl.n	8012d1e <nema_bind_dst_tex+0x1b2>
 8012d28:	f103 050e 	add.w	r5, r3, #14
 8012d2c:	e7f7      	b.n	8012d1e <nema_bind_dst_tex+0x1b2>
 8012d2e:	1df5      	adds	r5, r6, #7
 8012d30:	d5f5      	bpl.n	8012d1e <nema_bind_dst_tex+0x1b2>
 8012d32:	f106 050e 	add.w	r5, r6, #14
 8012d36:	e7f2      	b.n	8012d1e <nema_bind_dst_tex+0x1b2>
 8012d38:	0075      	lsls	r5, r6, #1
 8012d3a:	e733      	b.n	8012ba4 <nema_bind_dst_tex+0x38>
 8012d3c:	1f13      	subs	r3, r2, #4
 8012d3e:	2b49      	cmp	r3, #73	@ 0x49
 8012d40:	bf8e      	itee	hi
 8012d42:	2504      	movhi	r5, #4
 8012d44:	4903      	ldrls	r1, [pc, #12]	@ (8012d54 <nema_bind_dst_tex+0x1e8>)
 8012d46:	56cd      	ldrsbls	r5, [r1, r3]
 8012d48:	fb05 f506 	mul.w	r5, r5, r6
 8012d4c:	e719      	b.n	8012b82 <nema_bind_dst_tex+0x16>
 8012d4e:	bf00      	nop
 8012d50:	20000060 	.word	0x20000060
 8012d54:	080273e4 	.word	0x080273e4

08012d58 <nema_fill_rect>:
 8012d58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012d5c:	4604      	mov	r4, r0
 8012d5e:	460d      	mov	r5, r1
 8012d60:	4616      	mov	r6, r2
 8012d62:	461f      	mov	r7, r3
 8012d64:	9806      	ldr	r0, [sp, #24]
 8012d66:	f000 fe81 	bl	8013a6c <nema_set_raster_color>
 8012d6a:	463b      	mov	r3, r7
 8012d6c:	4632      	mov	r2, r6
 8012d6e:	4629      	mov	r1, r5
 8012d70:	4620      	mov	r0, r4
 8012d72:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012d76:	f000 bebb 	b.w	8013af0 <nema_raster_rect>
 8012d7a:	bf00      	nop

08012d7c <nema_blit>:
 8012d7c:	ee07 0a90 	vmov	s15, r0
 8012d80:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8012d84:	ee07 1a90 	vmov	s15, r1
 8012d88:	b500      	push	{lr}
 8012d8a:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8012d8e:	b083      	sub	sp, #12
 8012d90:	e9cd 0100 	strd	r0, r1, [sp]
 8012d94:	f000 fe04 	bl	80139a0 <nema_set_matrix_translate>
 8012d98:	e9dd 0100 	ldrd	r0, r1, [sp]
 8012d9c:	4a03      	ldr	r2, [pc, #12]	@ (8012dac <nema_blit+0x30>)
 8012d9e:	e9d2 2312 	ldrd	r2, r3, [r2, #72]	@ 0x48
 8012da2:	b003      	add	sp, #12
 8012da4:	f85d eb04 	ldr.w	lr, [sp], #4
 8012da8:	f000 bea2 	b.w	8013af0 <nema_raster_rect>
 8012dac:	20000060 	.word	0x20000060

08012db0 <nema_blit_rotate>:
 8012db0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012db2:	2600      	movs	r6, #0
 8012db4:	f04f 577e 	mov.w	r7, #1065353216	@ 0x3f800000
 8012db8:	4b68      	ldr	r3, [pc, #416]	@ (8012f5c <nema_blit_rotate+0x1ac>)
 8012dba:	b08b      	sub	sp, #44	@ 0x2c
 8012dbc:	3a01      	subs	r2, #1
 8012dbe:	9607      	str	r6, [sp, #28]
 8012dc0:	9608      	str	r6, [sp, #32]
 8012dc2:	9709      	str	r7, [sp, #36]	@ 0x24
 8012dc4:	4604      	mov	r4, r0
 8012dc6:	e9d3 6712 	ldrd	r6, r7, [r3, #72]	@ 0x48
 8012dca:	460d      	mov	r5, r1
 8012dcc:	2a0e      	cmp	r2, #14
 8012dce:	f200 80b0 	bhi.w	8012f32 <nema_blit_rotate+0x182>
 8012dd2:	e8df f002 	tbb	[pc, r2]
 8012dd6:	4730      	.short	0x4730
 8012dd8:	9a836f58 	.word	0x9a836f58
 8012ddc:	6f089a08 	.word	0x6f089a08
 8012de0:	ae584783 	.word	0xae584783
 8012de4:	30          	.byte	0x30
 8012de5:	00          	.byte	0x00
 8012de6:	1970      	adds	r0, r6, r5
 8012de8:	ee07 0a10 	vmov	s14, r0
 8012dec:	1938      	adds	r0, r7, r4
 8012dee:	4631      	mov	r1, r6
 8012df0:	ee07 0a90 	vmov	s15, r0
 8012df4:	2200      	movs	r2, #0
 8012df6:	463e      	mov	r6, r7
 8012df8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012dfc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012e00:	460f      	mov	r7, r1
 8012e02:	4b57      	ldr	r3, [pc, #348]	@ (8012f60 <nema_blit_rotate+0x1b0>)
 8012e04:	9201      	str	r2, [sp, #4]
 8012e06:	9205      	str	r2, [sp, #20]
 8012e08:	9302      	str	r3, [sp, #8]
 8012e0a:	9304      	str	r3, [sp, #16]
 8012e0c:	eddf 6a55 	vldr	s13, [pc, #340]	@ 8012f64 <nema_blit_rotate+0x1b4>
 8012e10:	ee37 7a26 	vadd.f32	s14, s14, s13
 8012e14:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012e18:	a801      	add	r0, sp, #4
 8012e1a:	ed8d 7a03 	vstr	s14, [sp, #12]
 8012e1e:	edcd 7a06 	vstr	s15, [sp, #24]
 8012e22:	f000 fd03 	bl	801382c <nema_set_matrix>
 8012e26:	463b      	mov	r3, r7
 8012e28:	4632      	mov	r2, r6
 8012e2a:	4629      	mov	r1, r5
 8012e2c:	4620      	mov	r0, r4
 8012e2e:	f000 fe5f 	bl	8013af0 <nema_raster_rect>
 8012e32:	b00b      	add	sp, #44	@ 0x2c
 8012e34:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012e36:	ee07 4a90 	vmov	s15, r4
 8012e3a:	4630      	mov	r0, r6
 8012e3c:	442e      	add	r6, r5
 8012e3e:	2300      	movs	r3, #0
 8012e40:	ee07 6a10 	vmov	s14, r6
 8012e44:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8012e48:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012e4c:	4944      	ldr	r1, [pc, #272]	@ (8012f60 <nema_blit_rotate+0x1b0>)
 8012e4e:	463e      	mov	r6, r7
 8012e50:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012e54:	9301      	str	r3, [sp, #4]
 8012e56:	4607      	mov	r7, r0
 8012e58:	9305      	str	r3, [sp, #20]
 8012e5a:	9102      	str	r1, [sp, #8]
 8012e5c:	9204      	str	r2, [sp, #16]
 8012e5e:	eef1 7a67 	vneg.f32	s15, s15
 8012e62:	e7d3      	b.n	8012e0c <nema_blit_rotate+0x5c>
 8012e64:	4b3e      	ldr	r3, [pc, #248]	@ (8012f60 <nema_blit_rotate+0x1b0>)
 8012e66:	2200      	movs	r2, #0
 8012e68:	9301      	str	r3, [sp, #4]
 8012e6a:	9305      	str	r3, [sp, #20]
 8012e6c:	1833      	adds	r3, r6, r0
 8012e6e:	ee07 3a90 	vmov	s15, r3
 8012e72:	1878      	adds	r0, r7, r1
 8012e74:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8012e78:	ee07 0a90 	vmov	s15, r0
 8012e7c:	9202      	str	r2, [sp, #8]
 8012e7e:	9204      	str	r2, [sp, #16]
 8012e80:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012e84:	e7c2      	b.n	8012e0c <nema_blit_rotate+0x5c>
 8012e86:	ee07 5a10 	vmov	s14, r5
 8012e8a:	4630      	mov	r0, r6
 8012e8c:	193e      	adds	r6, r7, r4
 8012e8e:	2300      	movs	r3, #0
 8012e90:	ee07 6a90 	vmov	s15, r6
 8012e94:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 8012e98:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012e9c:	4a30      	ldr	r2, [pc, #192]	@ (8012f60 <nema_blit_rotate+0x1b0>)
 8012e9e:	463e      	mov	r6, r7
 8012ea0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012ea4:	4607      	mov	r7, r0
 8012ea6:	9301      	str	r3, [sp, #4]
 8012ea8:	9305      	str	r3, [sp, #20]
 8012eaa:	9102      	str	r1, [sp, #8]
 8012eac:	eeb1 7a47 	vneg.f32	s14, s14
 8012eb0:	9204      	str	r2, [sp, #16]
 8012eb2:	e7ab      	b.n	8012e0c <nema_blit_rotate+0x5c>
 8012eb4:	ee07 4a90 	vmov	s15, r4
 8012eb8:	1978      	adds	r0, r7, r5
 8012eba:	2300      	movs	r3, #0
 8012ebc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8012ec0:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 8012ec4:	ee07 0a90 	vmov	s15, r0
 8012ec8:	4a25      	ldr	r2, [pc, #148]	@ (8012f60 <nema_blit_rotate+0x1b0>)
 8012eca:	9101      	str	r1, [sp, #4]
 8012ecc:	9302      	str	r3, [sp, #8]
 8012ece:	9304      	str	r3, [sp, #16]
 8012ed0:	eeb1 7a47 	vneg.f32	s14, s14
 8012ed4:	9205      	str	r2, [sp, #20]
 8012ed6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012eda:	e797      	b.n	8012e0c <nema_blit_rotate+0x5c>
 8012edc:	ee07 5a90 	vmov	s15, r5
 8012ee0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8012ee4:	ee07 0a90 	vmov	s15, r0
 8012ee8:	4631      	mov	r1, r6
 8012eea:	2200      	movs	r2, #0
 8012eec:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8012ef0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012ef4:	463e      	mov	r6, r7
 8012ef6:	eeb1 7a47 	vneg.f32	s14, s14
 8012efa:	460f      	mov	r7, r1
 8012efc:	eef1 7a67 	vneg.f32	s15, s15
 8012f00:	9201      	str	r2, [sp, #4]
 8012f02:	9205      	str	r2, [sp, #20]
 8012f04:	9302      	str	r3, [sp, #8]
 8012f06:	9304      	str	r3, [sp, #16]
 8012f08:	e780      	b.n	8012e0c <nema_blit_rotate+0x5c>
 8012f0a:	ee07 5a90 	vmov	s15, r5
 8012f0e:	1830      	adds	r0, r6, r0
 8012f10:	2300      	movs	r3, #0
 8012f12:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8012f16:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012f1a:	ee07 0a10 	vmov	s14, r0
 8012f1e:	4910      	ldr	r1, [pc, #64]	@ (8012f60 <nema_blit_rotate+0x1b0>)
 8012f20:	9302      	str	r3, [sp, #8]
 8012f22:	9101      	str	r1, [sp, #4]
 8012f24:	9304      	str	r3, [sp, #16]
 8012f26:	9205      	str	r2, [sp, #20]
 8012f28:	eef1 7a67 	vneg.f32	s15, s15
 8012f2c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012f30:	e76c      	b.n	8012e0c <nema_blit_rotate+0x5c>
 8012f32:	ee07 0a90 	vmov	s15, r0
 8012f36:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8012f3a:	ee07 1a90 	vmov	s15, r1
 8012f3e:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8012f42:	2300      	movs	r3, #0
 8012f44:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012f48:	9201      	str	r2, [sp, #4]
 8012f4a:	9205      	str	r2, [sp, #20]
 8012f4c:	9302      	str	r3, [sp, #8]
 8012f4e:	9304      	str	r3, [sp, #16]
 8012f50:	eeb1 7a47 	vneg.f32	s14, s14
 8012f54:	eef1 7a67 	vneg.f32	s15, s15
 8012f58:	e758      	b.n	8012e0c <nema_blit_rotate+0x5c>
 8012f5a:	bf00      	nop
 8012f5c:	20000060 	.word	0x20000060
 8012f60:	bf800000 	.word	0xbf800000
 8012f64:	00000000 	.word	0x00000000

08012f68 <nema_blit_tri_fit>:
 8012f68:	2803      	cmp	r0, #3
 8012f6a:	d801      	bhi.n	8012f70 <nema_blit_tri_fit+0x8>
 8012f6c:	2903      	cmp	r1, #3
 8012f6e:	d900      	bls.n	8012f72 <nema_blit_tri_fit+0xa>
 8012f70:	4770      	bx	lr
 8012f72:	2a03      	cmp	r2, #3
 8012f74:	d8fc      	bhi.n	8012f70 <nema_blit_tri_fit+0x8>
 8012f76:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012f7a:	460c      	mov	r4, r1
 8012f7c:	493b      	ldr	r1, [pc, #236]	@ (801306c <nema_blit_tri_fit+0x104>)
 8012f7e:	4603      	mov	r3, r0
 8012f80:	e9d1 0112 	ldrd	r0, r1, [r1, #72]	@ 0x48
 8012f84:	ee07 0a90 	vmov	s15, r0
 8012f88:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8012f8c:	ee07 1a90 	vmov	s15, r1
 8012f90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012f94:	b08a      	sub	sp, #40	@ 0x28
 8012f96:	f04f 0c00 	mov.w	ip, #0
 8012f9a:	edcd 7a08 	vstr	s15, [sp, #32]
 8012f9e:	edcd 7a09 	vstr	s15, [sp, #36]	@ 0x24
 8012fa2:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8012fa6:	ed8d 7a03 	vstr	s14, [sp, #12]
 8012faa:	ed8d 7a04 	vstr	s14, [sp, #16]
 8012fae:	ee12 8a10 	vmov	r8, s4
 8012fb2:	ee11 9a90 	vmov	r9, s3
 8012fb6:	ee11 aa10 	vmov	sl, s2
 8012fba:	ee10 6a10 	vmov	r6, s0
 8012fbe:	f10d 0e28 	add.w	lr, sp, #40	@ 0x28
 8012fc2:	eb0e 0282 	add.w	r2, lr, r2, lsl #2
 8012fc6:	eb0e 0484 	add.w	r4, lr, r4, lsl #2
 8012fca:	eb0e 0383 	add.w	r3, lr, r3, lsl #2
 8012fce:	f8cd c008 	str.w	ip, [sp, #8]
 8012fd2:	f8cd c014 	str.w	ip, [sp, #20]
 8012fd6:	f8cd c018 	str.w	ip, [sp, #24]
 8012fda:	f8cd c01c 	str.w	ip, [sp, #28]
 8012fde:	ed52 6a08 	vldr	s13, [r2, #-32]	@ 0xffffffe0
 8012fe2:	ed14 4a08 	vldr	s8, [r4, #-32]	@ 0xffffffe0
 8012fe6:	ed53 1a08 	vldr	s3, [r3, #-32]	@ 0xffffffe0
 8012fea:	ed12 7a04 	vldr	s14, [r2, #-16]
 8012fee:	ed54 4a04 	vldr	s9, [r4, #-16]
 8012ff2:	ed13 2a04 	vldr	s4, [r3, #-16]
 8012ff6:	eef0 5a62 	vmov.f32	s11, s5
 8012ffa:	ee05 8a10 	vmov	s10, r8
 8012ffe:	ee03 9a10 	vmov	s6, r9
 8013002:	eef0 3a46 	vmov.f32	s7, s12
 8013006:	eeb0 1a46 	vmov.f32	s2, s12
 801300a:	ee12 7a90 	vmov	r7, s5
 801300e:	ee02 aa90 	vmov	s5, sl
 8013012:	ee10 5a90 	vmov	r5, s1
 8013016:	f000 f889 	bl	801312c <nema_interpolate_tx_ty>
 801301a:	ee00 6a10 	vmov	s0, r6
 801301e:	f000 f90f 	bl	8013240 <nema_f2fx>
 8013022:	ee00 5a10 	vmov	s0, r5
 8013026:	4604      	mov	r4, r0
 8013028:	f000 f90a 	bl	8013240 <nema_f2fx>
 801302c:	ee00 aa10 	vmov	s0, sl
 8013030:	4605      	mov	r5, r0
 8013032:	f000 f905 	bl	8013240 <nema_f2fx>
 8013036:	ee00 9a10 	vmov	s0, r9
 801303a:	4606      	mov	r6, r0
 801303c:	f000 f900 	bl	8013240 <nema_f2fx>
 8013040:	ee00 8a10 	vmov	s0, r8
 8013044:	4681      	mov	r9, r0
 8013046:	f000 f8fb 	bl	8013240 <nema_f2fx>
 801304a:	ee00 7a10 	vmov	s0, r7
 801304e:	4680      	mov	r8, r0
 8013050:	f000 f8f6 	bl	8013240 <nema_f2fx>
 8013054:	464b      	mov	r3, r9
 8013056:	e9cd 8000 	strd	r8, r0, [sp]
 801305a:	4632      	mov	r2, r6
 801305c:	4629      	mov	r1, r5
 801305e:	4620      	mov	r0, r4
 8013060:	f000 fd0a 	bl	8013a78 <nema_raster_triangle_fx>
 8013064:	b00a      	add	sp, #40	@ 0x28
 8013066:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801306a:	bf00      	nop
 801306c:	20000060 	.word	0x20000060

08013070 <nema_blit_quad_fit>:
 8013070:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013074:	ed2d 8b08 	vpush	{d8-d11}
 8013078:	4b2b      	ldr	r3, [pc, #172]	@ (8013128 <nema_blit_quad_fit+0xb8>)
 801307a:	b08e      	sub	sp, #56	@ 0x38
 801307c:	e9d3 0112 	ldrd	r0, r1, [r3, #72]	@ 0x48
 8013080:	aa05      	add	r2, sp, #20
 8013082:	eef0 ba40 	vmov.f32	s23, s0
 8013086:	eeb0 ba60 	vmov.f32	s22, s1
 801308a:	eef0 aa41 	vmov.f32	s21, s2
 801308e:	eeb0 aa61 	vmov.f32	s20, s3
 8013092:	eef0 9a42 	vmov.f32	s19, s4
 8013096:	eeb0 9a62 	vmov.f32	s18, s5
 801309a:	eef0 8a43 	vmov.f32	s17, s6
 801309e:	eeb0 8a63 	vmov.f32	s16, s7
 80130a2:	f000 f9e1 	bl	8013468 <nema_mat3x3_quad_to_rect>
 80130a6:	b120      	cbz	r0, 80130b2 <nema_blit_quad_fit+0x42>
 80130a8:	b00e      	add	sp, #56	@ 0x38
 80130aa:	ecbd 8b08 	vpop	{d8-d11}
 80130ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80130b2:	a805      	add	r0, sp, #20
 80130b4:	f000 fbba 	bl	801382c <nema_set_matrix>
 80130b8:	eeb0 0a6b 	vmov.f32	s0, s23
 80130bc:	f000 f8c0 	bl	8013240 <nema_f2fx>
 80130c0:	eeb0 0a4b 	vmov.f32	s0, s22
 80130c4:	4604      	mov	r4, r0
 80130c6:	f000 f8bb 	bl	8013240 <nema_f2fx>
 80130ca:	eeb0 0a6a 	vmov.f32	s0, s21
 80130ce:	4605      	mov	r5, r0
 80130d0:	f000 f8b6 	bl	8013240 <nema_f2fx>
 80130d4:	eeb0 0a4a 	vmov.f32	s0, s20
 80130d8:	4606      	mov	r6, r0
 80130da:	f000 f8b1 	bl	8013240 <nema_f2fx>
 80130de:	eeb0 0a69 	vmov.f32	s0, s19
 80130e2:	4607      	mov	r7, r0
 80130e4:	f000 f8ac 	bl	8013240 <nema_f2fx>
 80130e8:	eeb0 0a49 	vmov.f32	s0, s18
 80130ec:	4682      	mov	sl, r0
 80130ee:	f000 f8a7 	bl	8013240 <nema_f2fx>
 80130f2:	eeb0 0a68 	vmov.f32	s0, s17
 80130f6:	4680      	mov	r8, r0
 80130f8:	f000 f8a2 	bl	8013240 <nema_f2fx>
 80130fc:	eeb0 0a48 	vmov.f32	s0, s16
 8013100:	4681      	mov	r9, r0
 8013102:	f000 f89d 	bl	8013240 <nema_f2fx>
 8013106:	f8cd a000 	str.w	sl, [sp]
 801310a:	e9cd 9002 	strd	r9, r0, [sp, #8]
 801310e:	f8cd 8004 	str.w	r8, [sp, #4]
 8013112:	463b      	mov	r3, r7
 8013114:	4632      	mov	r2, r6
 8013116:	4629      	mov	r1, r5
 8013118:	4620      	mov	r0, r4
 801311a:	f000 fd13 	bl	8013b44 <nema_raster_quad_fx>
 801311e:	b00e      	add	sp, #56	@ 0x38
 8013120:	ecbd 8b08 	vpop	{d8-d11}
 8013124:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013128:	20000060 	.word	0x20000060

0801312c <nema_interpolate_tx_ty>:
 801312c:	eeb5 1ac0 	vcmpe.f32	s2, #0.0
 8013130:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013134:	d407      	bmi.n	8013146 <nema_interpolate_tx_ty+0x1a>
 8013136:	eddf 7a40 	vldr	s15, [pc, #256]	@ 8013238 <nema_interpolate_tx_ty+0x10c>
 801313a:	eeb4 1ae7 	vcmpe.f32	s2, s15
 801313e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013142:	d807      	bhi.n	8013154 <nema_interpolate_tx_ty+0x28>
 8013144:	4770      	bx	lr
 8013146:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 801323c <nema_interpolate_tx_ty+0x110>
 801314a:	eeb4 1ae7 	vcmpe.f32	s2, s15
 801314e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013152:	daf7      	bge.n	8013144 <nema_interpolate_tx_ty+0x18>
 8013154:	eef5 3ac0 	vcmpe.f32	s7, #0.0
 8013158:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801315c:	d45b      	bmi.n	8013216 <nema_interpolate_tx_ty+0xea>
 801315e:	eddf 7a36 	vldr	s15, [pc, #216]	@ 8013238 <nema_interpolate_tx_ty+0x10c>
 8013162:	eef4 3ae7 	vcmpe.f32	s7, s15
 8013166:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801316a:	d9eb      	bls.n	8013144 <nema_interpolate_tx_ty+0x18>
 801316c:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8013170:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013174:	d457      	bmi.n	8013226 <nema_interpolate_tx_ty+0xfa>
 8013176:	eddf 7a30 	vldr	s15, [pc, #192]	@ 8013238 <nema_interpolate_tx_ty+0x10c>
 801317a:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801317e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013182:	d9df      	bls.n	8013144 <nema_interpolate_tx_ty+0x18>
 8013184:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8013188:	b570      	push	{r4, r5, r6, lr}
 801318a:	ee15 3a90 	vmov	r3, s11
 801318e:	ee13 2a10 	vmov	r2, s6
 8013192:	eec7 5a86 	vdiv.f32	s11, s15, s12
 8013196:	ee87 3a81 	vdiv.f32	s6, s15, s2
 801319a:	ee15 4a10 	vmov	r4, s10
 801319e:	ee87 5aa3 	vdiv.f32	s10, s15, s7
 80131a2:	ee63 1a21 	vmul.f32	s3, s6, s3
 80131a6:	ee23 2a02 	vmul.f32	s4, s6, s4
 80131aa:	ee25 4a04 	vmul.f32	s8, s10, s8
 80131ae:	ee65 4a24 	vmul.f32	s9, s10, s9
 80131b2:	ee65 6aa6 	vmul.f32	s13, s11, s13
 80131b6:	ee25 7a87 	vmul.f32	s14, s11, s14
 80131ba:	b092      	sub	sp, #72	@ 0x48
 80131bc:	a809      	add	r0, sp, #36	@ 0x24
 80131be:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 80131c2:	edcd 2a0a 	vstr	s5, [sp, #40]	@ 0x28
 80131c6:	edcd 0a0c 	vstr	s1, [sp, #48]	@ 0x30
 80131ca:	920d      	str	r2, [sp, #52]	@ 0x34
 80131cc:	930e      	str	r3, [sp, #56]	@ 0x38
 80131ce:	edcd 1a00 	vstr	s3, [sp]
 80131d2:	ed8d 2a03 	vstr	s4, [sp, #12]
 80131d6:	ed8d 4a01 	vstr	s8, [sp, #4]
 80131da:	edcd 4a04 	vstr	s9, [sp, #16]
 80131de:	edcd 6a02 	vstr	s13, [sp, #8]
 80131e2:	ed8d 7a05 	vstr	s14, [sp, #20]
 80131e6:	ed8d 3a06 	vstr	s6, [sp, #24]
 80131ea:	ed8d 5a07 	vstr	s10, [sp, #28]
 80131ee:	edcd 5a08 	vstr	s11, [sp, #32]
 80131f2:	edcd 7a0f 	vstr	s15, [sp, #60]	@ 0x3c
 80131f6:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 80131fa:	edcd 7a11 	vstr	s15, [sp, #68]	@ 0x44
 80131fe:	940b      	str	r4, [sp, #44]	@ 0x2c
 8013200:	f000 f8d2 	bl	80133a8 <nema_mat3x3_adj>
 8013204:	a909      	add	r1, sp, #36	@ 0x24
 8013206:	4668      	mov	r0, sp
 8013208:	f000 f838 	bl	801327c <nema_mat3x3_mul>
 801320c:	4668      	mov	r0, sp
 801320e:	f000 fb0d 	bl	801382c <nema_set_matrix>
 8013212:	b012      	add	sp, #72	@ 0x48
 8013214:	bd70      	pop	{r4, r5, r6, pc}
 8013216:	eddf 7a09 	vldr	s15, [pc, #36]	@ 801323c <nema_interpolate_tx_ty+0x110>
 801321a:	eef4 3ae7 	vcmpe.f32	s7, s15
 801321e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013222:	da8f      	bge.n	8013144 <nema_interpolate_tx_ty+0x18>
 8013224:	e7a2      	b.n	801316c <nema_interpolate_tx_ty+0x40>
 8013226:	eddf 7a05 	vldr	s15, [pc, #20]	@ 801323c <nema_interpolate_tx_ty+0x110>
 801322a:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801322e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013232:	da87      	bge.n	8013144 <nema_interpolate_tx_ty+0x18>
 8013234:	e7a6      	b.n	8013184 <nema_interpolate_tx_ty+0x58>
 8013236:	bf00      	nop
 8013238:	3727c5ac 	.word	0x3727c5ac
 801323c:	b727c5ac 	.word	0xb727c5ac

08013240 <nema_f2fx>:
 8013240:	eddf 7a06 	vldr	s15, [pc, #24]	@ 801325c <nema_f2fx+0x1c>
 8013244:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8013248:	ee20 0a27 	vmul.f32	s0, s0, s15
 801324c:	ee30 0a07 	vadd.f32	s0, s0, s14
 8013250:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8013254:	ee17 0a90 	vmov	r0, s15
 8013258:	4770      	bx	lr
 801325a:	bf00      	nop
 801325c:	47800000 	.word	0x47800000

08013260 <nema_mat3x3_load_identity>:
 8013260:	2300      	movs	r3, #0
 8013262:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8013266:	61c3      	str	r3, [r0, #28]
 8013268:	6202      	str	r2, [r0, #32]
 801326a:	6102      	str	r2, [r0, #16]
 801326c:	6002      	str	r2, [r0, #0]
 801326e:	6183      	str	r3, [r0, #24]
 8013270:	6143      	str	r3, [r0, #20]
 8013272:	60c3      	str	r3, [r0, #12]
 8013274:	6083      	str	r3, [r0, #8]
 8013276:	6043      	str	r3, [r0, #4]
 8013278:	4770      	bx	lr
 801327a:	bf00      	nop

0801327c <nema_mat3x3_mul>:
 801327c:	edd1 4a01 	vldr	s9, [r1, #4]
 8013280:	ed91 0a04 	vldr	s0, [r1, #16]
 8013284:	edd1 0a05 	vldr	s1, [r1, #20]
 8013288:	ed2d 8b0c 	vpush	{d8-d13}
 801328c:	ed91 6a00 	vldr	s12, [r1]
 8013290:	ed91 4a03 	vldr	s8, [r1, #12]
 8013294:	ed91 aa02 	vldr	s20, [r1, #8]
 8013298:	edd0 3a03 	vldr	s7, [r0, #12]
 801329c:	ed90 8a04 	vldr	s16, [r0, #16]
 80132a0:	ed90 9a00 	vldr	s18, [r0]
 80132a4:	edd0 8a01 	vldr	s17, [r0, #4]
 80132a8:	edd0 9a06 	vldr	s19, [r0, #24]
 80132ac:	ed90 1a07 	vldr	s2, [r0, #28]
 80132b0:	edd1 aa06 	vldr	s21, [r1, #24]
 80132b4:	edd1 6a07 	vldr	s13, [r1, #28]
 80132b8:	ed91 7a08 	vldr	s14, [r1, #32]
 80132bc:	ed90 5a02 	vldr	s10, [r0, #8]
 80132c0:	edd0 5a05 	vldr	s11, [r0, #20]
 80132c4:	ee69 da06 	vmul.f32	s27, s18, s12
 80132c8:	ee29 da24 	vmul.f32	s26, s18, s9
 80132cc:	ee66 ca23 	vmul.f32	s25, s12, s7
 80132d0:	ee24 caa3 	vmul.f32	s24, s9, s7
 80132d4:	ee68 1a84 	vmul.f32	s3, s17, s8
 80132d8:	ee29 9a0a 	vmul.f32	s18, s18, s20
 80132dc:	ee28 2a80 	vmul.f32	s4, s17, s0
 80132e0:	ee26 6a29 	vmul.f32	s12, s12, s19
 80132e4:	ee64 2a08 	vmul.f32	s5, s8, s16
 80132e8:	ee6a ba23 	vmul.f32	s23, s20, s7
 80132ec:	ee24 baa9 	vmul.f32	s22, s9, s19
 80132f0:	ee20 3a08 	vmul.f32	s6, s0, s16
 80132f4:	ee60 3a88 	vmul.f32	s7, s1, s16
 80132f8:	ee60 4a01 	vmul.f32	s9, s0, s2
 80132fc:	ee68 8aa0 	vmul.f32	s17, s17, s1
 8013300:	ee24 4a01 	vmul.f32	s8, s8, s2
 8013304:	ee6a 7a29 	vmul.f32	s15, s20, s19
 8013308:	ee20 1a81 	vmul.f32	s2, s1, s2
 801330c:	edd0 0a08 	vldr	s1, [r0, #32]
 8013310:	ee25 0a2a 	vmul.f32	s0, s10, s21
 8013314:	ee79 8a28 	vadd.f32	s17, s18, s17
 8013318:	ee2a 8aa5 	vmul.f32	s16, s21, s11
 801331c:	ee25 9a26 	vmul.f32	s18, s10, s13
 8013320:	ee7d 1aa1 	vadd.f32	s3, s27, s3
 8013324:	ee3d 2a02 	vadd.f32	s4, s26, s4
 8013328:	ee7c 2aa2 	vadd.f32	s5, s25, s5
 801332c:	ee3c 3a03 	vadd.f32	s6, s24, s6
 8013330:	ee7b 3aa3 	vadd.f32	s7, s23, s7
 8013334:	ee36 4a04 	vadd.f32	s8, s12, s8
 8013338:	ee7b 4a24 	vadd.f32	s9, s22, s9
 801333c:	ee77 7a81 	vadd.f32	s15, s15, s2
 8013340:	ee25 5a07 	vmul.f32	s10, s10, s14
 8013344:	ee26 1aa5 	vmul.f32	s2, s13, s11
 8013348:	ee2a 6aa0 	vmul.f32	s12, s21, s1
 801334c:	ee67 5a25 	vmul.f32	s11, s14, s11
 8013350:	ee66 6aa0 	vmul.f32	s13, s13, s1
 8013354:	ee27 7a20 	vmul.f32	s14, s14, s1
 8013358:	ee32 2a09 	vadd.f32	s4, s4, s18
 801335c:	ee38 5a85 	vadd.f32	s10, s17, s10
 8013360:	ee72 2a88 	vadd.f32	s5, s5, s16
 8013364:	ee71 1a80 	vadd.f32	s3, s3, s0
 8013368:	ee33 3a01 	vadd.f32	s6, s6, s2
 801336c:	ee73 5aa5 	vadd.f32	s11, s7, s11
 8013370:	ee34 6a06 	vadd.f32	s12, s8, s12
 8013374:	ee74 6aa6 	vadd.f32	s13, s9, s13
 8013378:	ee77 7a87 	vadd.f32	s15, s15, s14
 801337c:	edc0 1a00 	vstr	s3, [r0]
 8013380:	ed80 2a01 	vstr	s4, [r0, #4]
 8013384:	ed80 5a02 	vstr	s10, [r0, #8]
 8013388:	edc0 2a03 	vstr	s5, [r0, #12]
 801338c:	ed80 3a04 	vstr	s6, [r0, #16]
 8013390:	edc0 5a05 	vstr	s11, [r0, #20]
 8013394:	ed80 6a06 	vstr	s12, [r0, #24]
 8013398:	edc0 6a07 	vstr	s13, [r0, #28]
 801339c:	edc0 7a08 	vstr	s15, [r0, #32]
 80133a0:	ecbd 8b0c 	vpop	{d8-d13}
 80133a4:	4770      	bx	lr
 80133a6:	bf00      	nop

080133a8 <nema_mat3x3_adj>:
 80133a8:	edd0 3a03 	vldr	s7, [r0, #12]
 80133ac:	edd0 4a04 	vldr	s9, [r0, #16]
 80133b0:	ed90 6a08 	vldr	s12, [r0, #32]
 80133b4:	ed90 5a07 	vldr	s10, [r0, #28]
 80133b8:	ed90 4a05 	vldr	s8, [r0, #20]
 80133bc:	edd0 7a00 	vldr	s15, [r0]
 80133c0:	edd0 6a02 	vldr	s13, [r0, #8]
 80133c4:	edd0 5a01 	vldr	s11, [r0, #4]
 80133c8:	ed90 7a06 	vldr	s14, [r0, #24]
 80133cc:	ed2d 8b04 	vpush	{d8-d9}
 80133d0:	ee24 1a86 	vmul.f32	s2, s9, s12
 80133d4:	ee25 9a04 	vmul.f32	s18, s10, s8
 80133d8:	ee66 8a25 	vmul.f32	s17, s12, s11
 80133dc:	ee24 8aa6 	vmul.f32	s16, s9, s13
 80133e0:	ee65 1a26 	vmul.f32	s3, s10, s13
 80133e4:	ee24 2a25 	vmul.f32	s4, s8, s11
 80133e8:	ee64 2a07 	vmul.f32	s5, s8, s14
 80133ec:	ee66 0a87 	vmul.f32	s1, s13, s14
 80133f0:	ee25 3a23 	vmul.f32	s6, s10, s7
 80133f4:	ee24 4a27 	vmul.f32	s8, s8, s15
 80133f8:	ee26 0a23 	vmul.f32	s0, s12, s7
 80133fc:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8013400:	ee26 6a27 	vmul.f32	s12, s12, s15
 8013404:	ee25 5a27 	vmul.f32	s10, s10, s15
 8013408:	ee64 7aa7 	vmul.f32	s15, s9, s15
 801340c:	ee64 4a87 	vmul.f32	s9, s9, s14
 8013410:	ee25 7a87 	vmul.f32	s14, s11, s14
 8013414:	ee65 5aa3 	vmul.f32	s11, s11, s7
 8013418:	ee31 1a49 	vsub.f32	s2, s2, s18
 801341c:	ee71 1ae8 	vsub.f32	s3, s3, s17
 8013420:	ee32 2a48 	vsub.f32	s4, s4, s16
 8013424:	ecbd 8b04 	vpop	{d8-d9}
 8013428:	ee72 3ac0 	vsub.f32	s7, s5, s0
 801342c:	ee36 6a60 	vsub.f32	s12, s12, s1
 8013430:	ee76 6ac4 	vsub.f32	s13, s13, s8
 8013434:	ee73 4a64 	vsub.f32	s9, s6, s9
 8013438:	ee37 7a45 	vsub.f32	s14, s14, s10
 801343c:	ee77 7ae5 	vsub.f32	s15, s15, s11
 8013440:	ed80 1a00 	vstr	s2, [r0]
 8013444:	edc0 1a01 	vstr	s3, [r0, #4]
 8013448:	ed80 2a02 	vstr	s4, [r0, #8]
 801344c:	edc0 3a03 	vstr	s7, [r0, #12]
 8013450:	ed80 6a04 	vstr	s12, [r0, #16]
 8013454:	edc0 6a05 	vstr	s13, [r0, #20]
 8013458:	edc0 4a06 	vstr	s9, [r0, #24]
 801345c:	ed80 7a07 	vstr	s14, [r0, #28]
 8013460:	edc0 7a08 	vstr	s15, [r0, #32]
 8013464:	4770      	bx	lr
 8013466:	bf00      	nop

08013468 <nema_mat3x3_quad_to_rect>:
 8013468:	ee70 6a41 	vsub.f32	s13, s0, s2
 801346c:	ee76 6a82 	vadd.f32	s13, s13, s4
 8013470:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8013474:	ee30 6ae1 	vsub.f32	s12, s1, s3
 8013478:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801347c:	ee36 6a22 	vadd.f32	s12, s12, s5
 8013480:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013484:	ed2d 8b06 	vpush	{d8-d10}
 8013488:	ee36 6a63 	vsub.f32	s12, s12, s7
 801348c:	ee09 0a10 	vmov	s18, r0
 8013490:	ee08 1a90 	vmov	s17, r1
 8013494:	f100 812e 	bmi.w	80136f4 <nema_mat3x3_quad_to_rect+0x28c>
 8013498:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 801372c <nema_mat3x3_quad_to_rect+0x2c4>
 801349c:	eef4 6ae7 	vcmpe.f32	s13, s15
 80134a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134a4:	d80d      	bhi.n	80134c2 <nema_mat3x3_quad_to_rect+0x5a>
 80134a6:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80134aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134ae:	f100 80f7 	bmi.w	80136a0 <nema_mat3x3_quad_to_rect+0x238>
 80134b2:	eddf 7a9e 	vldr	s15, [pc, #632]	@ 801372c <nema_mat3x3_quad_to_rect+0x2c4>
 80134b6:	eeb4 6ae7 	vcmpe.f32	s12, s15
 80134ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134be:	f240 80f7 	bls.w	80136b0 <nema_mat3x3_quad_to_rect+0x248>
 80134c2:	ee31 7a42 	vsub.f32	s14, s2, s4
 80134c6:	ee73 7ae2 	vsub.f32	s15, s7, s5
 80134ca:	ee33 2a42 	vsub.f32	s4, s6, s4
 80134ce:	ee71 2ae2 	vsub.f32	s5, s3, s5
 80134d2:	ee67 5a27 	vmul.f32	s11, s14, s15
 80134d6:	ee22 5a22 	vmul.f32	s10, s4, s5
 80134da:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80134de:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80134e2:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80134e6:	ee26 7a07 	vmul.f32	s14, s12, s14
 80134ea:	ee66 6aa2 	vmul.f32	s13, s13, s5
 80134ee:	ee26 6a02 	vmul.f32	s12, s12, s4
 80134f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134f6:	ee77 7ac6 	vsub.f32	s15, s15, s12
 80134fa:	ee77 6a66 	vsub.f32	s13, s14, s13
 80134fe:	f100 80c5 	bmi.w	801368c <nema_mat3x3_quad_to_rect+0x224>
 8013502:	ed9f 7a8a 	vldr	s14, [pc, #552]	@ 801372c <nema_mat3x3_quad_to_rect+0x2c4>
 8013506:	eef4 5ac7 	vcmpe.f32	s11, s14
 801350a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801350e:	bf94      	ite	ls
 8013510:	2301      	movls	r3, #1
 8013512:	2300      	movhi	r3, #0
 8013514:	2b00      	cmp	r3, #0
 8013516:	f040 8106 	bne.w	8013726 <nema_mat3x3_quad_to_rect+0x2be>
 801351a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801351e:	ee87 6a25 	vdiv.f32	s12, s14, s11
 8013522:	ee67 7a86 	vmul.f32	s15, s15, s12
 8013526:	ee66 6a86 	vmul.f32	s13, s13, s12
 801352a:	ee21 5a27 	vmul.f32	s10, s2, s15
 801352e:	ee61 5aa7 	vmul.f32	s11, s3, s15
 8013532:	ee63 2aa6 	vmul.f32	s5, s7, s13
 8013536:	ee31 1a40 	vsub.f32	s2, s2, s0
 801353a:	ee23 6a26 	vmul.f32	s12, s6, s13
 801353e:	ee33 2a40 	vsub.f32	s4, s6, s0
 8013542:	ee71 1ae0 	vsub.f32	s3, s3, s1
 8013546:	ee73 3ae0 	vsub.f32	s7, s7, s1
 801354a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801354e:	ee32 2a06 	vadd.f32	s4, s4, s12
 8013552:	ee71 1aa5 	vadd.f32	s3, s3, s11
 8013556:	ee73 2aa2 	vadd.f32	s5, s7, s5
 801355a:	ed82 0a02 	vstr	s0, [r2, #8]
 801355e:	edc2 0a05 	vstr	s1, [r2, #20]
 8013562:	edc2 7a06 	vstr	s15, [r2, #24]
 8013566:	edc2 6a07 	vstr	s13, [r2, #28]
 801356a:	ed82 7a08 	vstr	s14, [r2, #32]
 801356e:	ed82 1a00 	vstr	s2, [r2]
 8013572:	ed82 2a01 	vstr	s4, [r2, #4]
 8013576:	edc2 1a03 	vstr	s3, [r2, #12]
 801357a:	edc2 2a04 	vstr	s5, [r2, #16]
 801357e:	ee20 4aa6 	vmul.f32	s8, s1, s13
 8013582:	ee60 5aa7 	vmul.f32	s11, s1, s15
 8013586:	ee32 3ac4 	vsub.f32	s6, s5, s8
 801358a:	ee31 7ae5 	vsub.f32	s14, s3, s11
 801358e:	ee21 8aa6 	vmul.f32	s16, s3, s13
 8013592:	ee22 6aa7 	vmul.f32	s12, s5, s15
 8013596:	ee27 7a02 	vmul.f32	s14, s14, s4
 801359a:	ee23 4a01 	vmul.f32	s8, s6, s2
 801359e:	ee38 8a46 	vsub.f32	s16, s16, s12
 80135a2:	ee34 4a47 	vsub.f32	s8, s8, s14
 80135a6:	ee20 7a08 	vmul.f32	s14, s0, s16
 80135aa:	ee34 4a07 	vadd.f32	s8, s8, s14
 80135ae:	eeb5 4ac0 	vcmpe.f32	s8, #0.0
 80135b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80135b6:	f100 80ac 	bmi.w	8013712 <nema_mat3x3_quad_to_rect+0x2aa>
 80135ba:	ed9f 7a5c 	vldr	s14, [pc, #368]	@ 801372c <nema_mat3x3_quad_to_rect+0x2c4>
 80135be:	eeb4 4ac7 	vcmpe.f32	s8, s14
 80135c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80135c6:	bf94      	ite	ls
 80135c8:	2001      	movls	r0, #1
 80135ca:	2000      	movhi	r0, #0
 80135cc:	2800      	cmp	r0, #0
 80135ce:	f040 80aa 	bne.w	8013726 <nema_mat3x3_quad_to_rect+0x2be>
 80135d2:	ee20 5a82 	vmul.f32	s10, s1, s4
 80135d6:	ee60 4a26 	vmul.f32	s9, s0, s13
 80135da:	ee20 6a27 	vmul.f32	s12, s0, s15
 80135de:	ee60 9a22 	vmul.f32	s19, s0, s5
 80135e2:	eeb7 aa00 	vmov.f32	s20, #112	@ 0x3f800000  1.0
 80135e6:	ee60 0a81 	vmul.f32	s1, s1, s2
 80135ea:	ee20 7a21 	vmul.f32	s14, s0, s3
 80135ee:	eeca 3a04 	vdiv.f32	s7, s20, s8
 80135f2:	ee74 4ac2 	vsub.f32	s9, s9, s4
 80135f6:	ee61 6a26 	vmul.f32	s13, s2, s13
 80135fa:	ee67 7a82 	vmul.f32	s15, s15, s4
 80135fe:	ee35 5a69 	vsub.f32	s10, s10, s19
 8013602:	ee75 5ae1 	vsub.f32	s11, s11, s3
 8013606:	ee31 6a46 	vsub.f32	s12, s2, s12
 801360a:	ee62 2a81 	vmul.f32	s5, s5, s2
 801360e:	ee37 7a60 	vsub.f32	s14, s14, s1
 8013612:	ee21 2a82 	vmul.f32	s4, s3, s4
 8013616:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 801361a:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 801361e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8013622:	ee23 4a23 	vmul.f32	s8, s6, s7
 8013626:	ee65 6a23 	vmul.f32	s13, s10, s7
 801362a:	ee65 5aa3 	vmul.f32	s11, s11, s7
 801362e:	ee64 4aa3 	vmul.f32	s9, s9, s7
 8013632:	ee26 6a23 	vmul.f32	s12, s12, s7
 8013636:	ee27 7a23 	vmul.f32	s14, s14, s7
 801363a:	ee72 2ac2 	vsub.f32	s5, s5, s4
 801363e:	ee24 4a09 	vmul.f32	s8, s8, s18
 8013642:	ee65 5aa8 	vmul.f32	s11, s11, s17
 8013646:	ee28 8a23 	vmul.f32	s16, s16, s7
 801364a:	ee24 5a89 	vmul.f32	s10, s9, s18
 801364e:	ee26 6a28 	vmul.f32	s12, s12, s17
 8013652:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8013656:	ee66 6a89 	vmul.f32	s13, s13, s18
 801365a:	ee27 7a28 	vmul.f32	s14, s14, s17
 801365e:	ee62 2aa3 	vmul.f32	s5, s5, s7
 8013662:	ed82 4a00 	vstr	s8, [r2]
 8013666:	edc2 5a03 	vstr	s11, [r2, #12]
 801366a:	ed82 8a06 	vstr	s16, [r2, #24]
 801366e:	ed82 5a01 	vstr	s10, [r2, #4]
 8013672:	ed82 6a04 	vstr	s12, [r2, #16]
 8013676:	edc2 7a07 	vstr	s15, [r2, #28]
 801367a:	edc2 6a02 	vstr	s13, [r2, #8]
 801367e:	ed82 7a05 	vstr	s14, [r2, #20]
 8013682:	edc2 2a08 	vstr	s5, [r2, #32]
 8013686:	ecbd 8b06 	vpop	{d8-d10}
 801368a:	4770      	bx	lr
 801368c:	ed9f 7a28 	vldr	s14, [pc, #160]	@ 8013730 <nema_mat3x3_quad_to_rect+0x2c8>
 8013690:	eef4 5ac7 	vcmpe.f32	s11, s14
 8013694:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013698:	bfac      	ite	ge
 801369a:	2301      	movge	r3, #1
 801369c:	2300      	movlt	r3, #0
 801369e:	e739      	b.n	8013514 <nema_mat3x3_quad_to_rect+0xac>
 80136a0:	eddf 7a23 	vldr	s15, [pc, #140]	@ 8013730 <nema_mat3x3_quad_to_rect+0x2c8>
 80136a4:	eeb4 6ae7 	vcmpe.f32	s12, s15
 80136a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80136ac:	f6ff af09 	blt.w	80134c2 <nema_mat3x3_quad_to_rect+0x5a>
 80136b0:	ed9f 7a20 	vldr	s14, [pc, #128]	@ 8013734 <nema_mat3x3_quad_to_rect+0x2cc>
 80136b4:	ee32 2a41 	vsub.f32	s4, s4, s2
 80136b8:	ee72 2ae1 	vsub.f32	s5, s5, s3
 80136bc:	ee31 1a40 	vsub.f32	s2, s2, s0
 80136c0:	ee71 1ae0 	vsub.f32	s3, s3, s1
 80136c4:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 80136c8:	eef0 7a47 	vmov.f32	s15, s14
 80136cc:	ed82 2a01 	vstr	s4, [r2, #4]
 80136d0:	ed82 1a00 	vstr	s2, [r2]
 80136d4:	edc2 2a04 	vstr	s5, [r2, #16]
 80136d8:	edc2 1a03 	vstr	s3, [r2, #12]
 80136dc:	ed82 0a02 	vstr	s0, [r2, #8]
 80136e0:	edc2 0a05 	vstr	s1, [r2, #20]
 80136e4:	ed82 7a06 	vstr	s14, [r2, #24]
 80136e8:	ed82 7a07 	vstr	s14, [r2, #28]
 80136ec:	eef0 6a47 	vmov.f32	s13, s14
 80136f0:	6213      	str	r3, [r2, #32]
 80136f2:	e744      	b.n	801357e <nema_mat3x3_quad_to_rect+0x116>
 80136f4:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 8013730 <nema_mat3x3_quad_to_rect+0x2c8>
 80136f8:	eef4 6ae7 	vcmpe.f32	s13, s15
 80136fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013700:	f6ff aedf 	blt.w	80134c2 <nema_mat3x3_quad_to_rect+0x5a>
 8013704:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8013708:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801370c:	f57f aed1 	bpl.w	80134b2 <nema_mat3x3_quad_to_rect+0x4a>
 8013710:	e7c6      	b.n	80136a0 <nema_mat3x3_quad_to_rect+0x238>
 8013712:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 8013730 <nema_mat3x3_quad_to_rect+0x2c8>
 8013716:	eeb4 4ac7 	vcmpe.f32	s8, s14
 801371a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801371e:	bfac      	ite	ge
 8013720:	2001      	movge	r0, #1
 8013722:	2000      	movlt	r0, #0
 8013724:	e752      	b.n	80135cc <nema_mat3x3_quad_to_rect+0x164>
 8013726:	f04f 30ff 	mov.w	r0, #4294967295
 801372a:	e7ac      	b.n	8013686 <nema_mat3x3_quad_to_rect+0x21e>
 801372c:	3727c5ac 	.word	0x3727c5ac
 8013730:	b727c5ac 	.word	0xb727c5ac
 8013734:	00000000 	.word	0x00000000

08013738 <nema_readHwConfig>:
 8013738:	b510      	push	{r4, lr}
 801373a:	4c05      	ldr	r4, [pc, #20]	@ (8013750 <nema_readHwConfig+0x18>)
 801373c:	6820      	ldr	r0, [r4, #0]
 801373e:	b100      	cbz	r0, 8013742 <nema_readHwConfig+0xa>
 8013740:	bd10      	pop	{r4, pc}
 8013742:	f44f 70f8 	mov.w	r0, #496	@ 0x1f0
 8013746:	f7ee fde5 	bl	8002314 <nema_reg_read>
 801374a:	6020      	str	r0, [r4, #0]
 801374c:	bd10      	pop	{r4, pc}
 801374e:	bf00      	nop
 8013750:	2004c038 	.word	0x2004c038

08013754 <nema_readHwConfigH>:
 8013754:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8013758:	f7ee bddc 	b.w	8002314 <nema_reg_read>

0801375c <nema_enable_tiling>:
 801375c:	2800      	cmp	r0, #0
 801375e:	bf14      	ite	ne
 8013760:	f04f 4080 	movne.w	r0, #1073741824	@ 0x40000000
 8013764:	2000      	moveq	r0, #0
 8013766:	b410      	push	{r4}
 8013768:	4a05      	ldr	r2, [pc, #20]	@ (8013780 <nema_enable_tiling+0x24>)
 801376a:	6951      	ldr	r1, [r2, #20]
 801376c:	e9d2 4302 	ldrd	r4, r3, [r2, #8]
 8013770:	4323      	orrs	r3, r4
 8013772:	430b      	orrs	r3, r1
 8013774:	4303      	orrs	r3, r0
 8013776:	6050      	str	r0, [r2, #4]
 8013778:	6113      	str	r3, [r2, #16]
 801377a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801377e:	4770      	bx	lr
 8013780:	20000060 	.word	0x20000060

08013784 <nema_enable_tiling_2x2>:
 8013784:	2800      	cmp	r0, #0
 8013786:	bf14      	ite	ne
 8013788:	f04f 4040 	movne.w	r0, #3221225472	@ 0xc0000000
 801378c:	2000      	moveq	r0, #0
 801378e:	b410      	push	{r4}
 8013790:	4a05      	ldr	r2, [pc, #20]	@ (80137a8 <nema_enable_tiling_2x2+0x24>)
 8013792:	6951      	ldr	r1, [r2, #20]
 8013794:	e9d2 4302 	ldrd	r4, r3, [r2, #8]
 8013798:	4323      	orrs	r3, r4
 801379a:	430b      	orrs	r3, r1
 801379c:	4303      	orrs	r3, r0
 801379e:	6050      	str	r0, [r2, #4]
 80137a0:	6113      	str	r3, [r2, #16]
 80137a2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80137a6:	4770      	bx	lr
 80137a8:	20000060 	.word	0x20000060

080137ac <nema_enable_aa>:
 80137ac:	2800      	cmp	r0, #0
 80137ae:	b410      	push	{r4}
 80137b0:	bf19      	ittee	ne
 80137b2:	f04f 6080 	movne.w	r0, #67108864	@ 0x4000000
 80137b6:	f04f 64c0 	movne.w	r4, #100663296	@ 0x6000000
 80137ba:	f04f 7400 	moveq.w	r4, #33554432	@ 0x2000000
 80137be:	2000      	moveq	r0, #0
 80137c0:	2900      	cmp	r1, #0
 80137c2:	bf08      	it	eq
 80137c4:	4604      	moveq	r4, r0
 80137c6:	b10a      	cbz	r2, 80137cc <nema_enable_aa+0x20>
 80137c8:	f044 7480 	orr.w	r4, r4, #16777216	@ 0x1000000
 80137cc:	b10b      	cbz	r3, 80137d2 <nema_enable_aa+0x26>
 80137ce:	f444 0400 	orr.w	r4, r4, #8388608	@ 0x800000
 80137d2:	4a06      	ldr	r2, [pc, #24]	@ (80137ec <nema_enable_aa+0x40>)
 80137d4:	6853      	ldr	r3, [r2, #4]
 80137d6:	e9d2 1002 	ldrd	r1, r0, [r2, #8]
 80137da:	4303      	orrs	r3, r0
 80137dc:	430b      	orrs	r3, r1
 80137de:	4323      	orrs	r3, r4
 80137e0:	6950      	ldr	r0, [r2, #20]
 80137e2:	e9c2 3404 	strd	r3, r4, [r2, #16]
 80137e6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80137ea:	4770      	bx	lr
 80137ec:	20000060 	.word	0x20000060

080137f0 <nema_enable_aa_flags>:
 80137f0:	b410      	push	{r4}
 80137f2:	4a07      	ldr	r2, [pc, #28]	@ (8013810 <nema_enable_aa_flags+0x20>)
 80137f4:	f000 61f0 	and.w	r1, r0, #125829120	@ 0x7800000
 80137f8:	6853      	ldr	r3, [r2, #4]
 80137fa:	e9d2 0402 	ldrd	r0, r4, [r2, #8]
 80137fe:	4323      	orrs	r3, r4
 8013800:	4303      	orrs	r3, r0
 8013802:	430b      	orrs	r3, r1
 8013804:	6950      	ldr	r0, [r2, #20]
 8013806:	e9c2 3104 	strd	r3, r1, [r2, #16]
 801380a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801380e:	4770      	bx	lr
 8013810:	20000060 	.word	0x20000060

08013814 <nema_matmul_bypass>:
 8013814:	b920      	cbnz	r0, 8013820 <nema_matmul_bypass+0xc>
 8013816:	4601      	mov	r1, r0
 8013818:	f44f 708c 	mov.w	r0, #280	@ 0x118
 801381c:	f000 bf30 	b.w	8014680 <nema_cl_add_cmd>
 8013820:	f04f 4110 	mov.w	r1, #2415919104	@ 0x90000000
 8013824:	f44f 708c 	mov.w	r0, #280	@ 0x118
 8013828:	f000 bf2a 	b.w	8014680 <nema_cl_add_cmd>

0801382c <nema_set_matrix>:
 801382c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013830:	ed9f 7a59 	vldr	s14, [pc, #356]	@ 8013998 <nema_set_matrix+0x16c>
 8013834:	edd0 7a06 	vldr	s15, [r0, #24]
 8013838:	eef4 7ac7 	vcmpe.f32	s15, s14
 801383c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013840:	4604      	mov	r4, r0
 8013842:	d506      	bpl.n	8013852 <nema_set_matrix+0x26>
 8013844:	eddf 6a55 	vldr	s13, [pc, #340]	@ 801399c <nema_set_matrix+0x170>
 8013848:	eef4 7ae6 	vcmpe.f32	s15, s13
 801384c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013850:	dc47      	bgt.n	80138e2 <nema_set_matrix+0xb6>
 8013852:	2009      	movs	r0, #9
 8013854:	f000 feb6 	bl	80145c4 <nema_cl_get_space>
 8013858:	2800      	cmp	r0, #0
 801385a:	d040      	beq.n	80138de <nema_set_matrix+0xb2>
 801385c:	f44f 73ba 	mov.w	r3, #372	@ 0x174
 8013860:	6003      	str	r3, [r0, #0]
 8013862:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 8013866:	6962      	ldr	r2, [r4, #20]
 8013868:	6083      	str	r3, [r0, #8]
 801386a:	f44f 73bc 	mov.w	r3, #376	@ 0x178
 801386e:	6042      	str	r2, [r0, #4]
 8013870:	68a2      	ldr	r2, [r4, #8]
 8013872:	6103      	str	r3, [r0, #16]
 8013874:	f44f 73be 	mov.w	r3, #380	@ 0x17c
 8013878:	60c2      	str	r2, [r0, #12]
 801387a:	69a2      	ldr	r2, [r4, #24]
 801387c:	6183      	str	r3, [r0, #24]
 801387e:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8013882:	6142      	str	r2, [r0, #20]
 8013884:	69e2      	ldr	r2, [r4, #28]
 8013886:	6203      	str	r3, [r0, #32]
 8013888:	61c2      	str	r2, [r0, #28]
 801388a:	6a23      	ldr	r3, [r4, #32]
 801388c:	2544      	movs	r5, #68	@ 0x44
 801388e:	6243      	str	r3, [r0, #36]	@ 0x24
 8013890:	2640      	movs	r6, #64	@ 0x40
 8013892:	233c      	movs	r3, #60	@ 0x3c
 8013894:	2738      	movs	r7, #56	@ 0x38
 8013896:	2234      	movs	r2, #52	@ 0x34
 8013898:	f04f 0c30 	mov.w	ip, #48	@ 0x30
 801389c:	212c      	movs	r1, #44	@ 0x2c
 801389e:	f04f 0e28 	mov.w	lr, #40	@ 0x28
 80138a2:	f44f 78b0 	mov.w	r8, #352	@ 0x160
 80138a6:	f840 800e 	str.w	r8, [r0, lr]
 80138aa:	f44f 7eb2 	mov.w	lr, #356	@ 0x164
 80138ae:	f8d4 8000 	ldr.w	r8, [r4]
 80138b2:	4401      	add	r1, r0
 80138b4:	f8c1 8000 	str.w	r8, [r1]
 80138b8:	f840 e00c 	str.w	lr, [r0, ip]
 80138bc:	f44f 71b6 	mov.w	r1, #364	@ 0x16c
 80138c0:	f8d4 c004 	ldr.w	ip, [r4, #4]
 80138c4:	4402      	add	r2, r0
 80138c6:	f8c2 c000 	str.w	ip, [r2]
 80138ca:	f44f 72b8 	mov.w	r2, #368	@ 0x170
 80138ce:	51c1      	str	r1, [r0, r7]
 80138d0:	68e1      	ldr	r1, [r4, #12]
 80138d2:	4403      	add	r3, r0
 80138d4:	6019      	str	r1, [r3, #0]
 80138d6:	5182      	str	r2, [r0, r6]
 80138d8:	6923      	ldr	r3, [r4, #16]
 80138da:	4428      	add	r0, r5
 80138dc:	6003      	str	r3, [r0, #0]
 80138de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80138e2:	ed90 6a07 	vldr	s12, [r0, #28]
 80138e6:	eeb4 6ac7 	vcmpe.f32	s12, s14
 80138ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80138ee:	d5b0      	bpl.n	8013852 <nema_set_matrix+0x26>
 80138f0:	eeb4 6ae6 	vcmpe.f32	s12, s13
 80138f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80138f8:	ddab      	ble.n	8013852 <nema_set_matrix+0x26>
 80138fa:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 80138fe:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8013902:	eef4 7ac7 	vcmpe.f32	s15, s14
 8013906:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801390a:	d43f      	bmi.n	801398c <nema_set_matrix+0x160>
 801390c:	edd4 7a08 	vldr	s15, [r4, #32]
 8013910:	ed94 5a00 	vldr	s10, [r4]
 8013914:	edd4 5a01 	vldr	s11, [r4, #4]
 8013918:	ed94 6a02 	vldr	s12, [r4, #8]
 801391c:	edd4 6a03 	vldr	s13, [r4, #12]
 8013920:	ed94 7a04 	vldr	s14, [r4, #16]
 8013924:	ed94 4a05 	vldr	s8, [r4, #20]
 8013928:	eec5 4a27 	vdiv.f32	s9, s10, s15
 801392c:	ee85 5aa7 	vdiv.f32	s10, s11, s15
 8013930:	eec6 5a27 	vdiv.f32	s11, s12, s15
 8013934:	ee86 6aa7 	vdiv.f32	s12, s13, s15
 8013938:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801393c:	ee84 7a27 	vdiv.f32	s14, s8, s15
 8013940:	edc4 4a00 	vstr	s9, [r4]
 8013944:	ed84 5a01 	vstr	s10, [r4, #4]
 8013948:	edc4 5a02 	vstr	s11, [r4, #8]
 801394c:	ed84 6a03 	vstr	s12, [r4, #12]
 8013950:	edc4 6a04 	vstr	s13, [r4, #16]
 8013954:	ed84 7a05 	vstr	s14, [r4, #20]
 8013958:	2006      	movs	r0, #6
 801395a:	f000 fe33 	bl	80145c4 <nema_cl_get_space>
 801395e:	2800      	cmp	r0, #0
 8013960:	d0bd      	beq.n	80138de <nema_set_matrix+0xb2>
 8013962:	f44f 73ba 	mov.w	r3, #372	@ 0x174
 8013966:	6003      	str	r3, [r0, #0]
 8013968:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 801396c:	6962      	ldr	r2, [r4, #20]
 801396e:	6083      	str	r3, [r0, #8]
 8013970:	6042      	str	r2, [r0, #4]
 8013972:	68a3      	ldr	r3, [r4, #8]
 8013974:	252c      	movs	r5, #44	@ 0x2c
 8013976:	60c3      	str	r3, [r0, #12]
 8013978:	2628      	movs	r6, #40	@ 0x28
 801397a:	2324      	movs	r3, #36	@ 0x24
 801397c:	2720      	movs	r7, #32
 801397e:	221c      	movs	r2, #28
 8013980:	f04f 0c18 	mov.w	ip, #24
 8013984:	2114      	movs	r1, #20
 8013986:	f04f 0e10 	mov.w	lr, #16
 801398a:	e78a      	b.n	80138a2 <nema_set_matrix+0x76>
 801398c:	eef4 7ae6 	vcmpe.f32	s15, s13
 8013990:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013994:	dce0      	bgt.n	8013958 <nema_set_matrix+0x12c>
 8013996:	e7b9      	b.n	801390c <nema_set_matrix+0xe0>
 8013998:	33d6bf95 	.word	0x33d6bf95
 801399c:	b3d6bf95 	.word	0xb3d6bf95

080139a0 <nema_set_matrix_translate>:
 80139a0:	b508      	push	{r3, lr}
 80139a2:	2002      	movs	r0, #2
 80139a4:	ed2d 8b02 	vpush	{d8}
 80139a8:	eeb0 8a40 	vmov.f32	s16, s0
 80139ac:	eef0 8a60 	vmov.f32	s17, s1
 80139b0:	f000 fe08 	bl	80145c4 <nema_cl_get_space>
 80139b4:	b1c8      	cbz	r0, 80139ea <nema_set_matrix_translate+0x4a>
 80139b6:	eddf 7a13 	vldr	s15, [pc, #76]	@ 8013a04 <nema_set_matrix_translate+0x64>
 80139ba:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80139be:	f44f 72ba 	mov.w	r2, #372	@ 0x174
 80139c2:	eef1 6a68 	vneg.f32	s13, s17
 80139c6:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 80139ca:	eeb1 7a48 	vneg.f32	s14, s16
 80139ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80139d2:	6002      	str	r2, [r0, #0]
 80139d4:	edc0 6a01 	vstr	s13, [r0, #4]
 80139d8:	6083      	str	r3, [r0, #8]
 80139da:	ed80 7a03 	vstr	s14, [r0, #12]
 80139de:	dc07      	bgt.n	80139f0 <nema_set_matrix_translate+0x50>
 80139e0:	eef4 8ae7 	vcmpe.f32	s17, s15
 80139e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80139e8:	dc02      	bgt.n	80139f0 <nema_set_matrix_translate+0x50>
 80139ea:	ecbd 8b02 	vpop	{d8}
 80139ee:	bd08      	pop	{r3, pc}
 80139f0:	ecbd 8b02 	vpop	{d8}
 80139f4:	f04f 4100 	mov.w	r1, #2147483648	@ 0x80000000
 80139f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80139fc:	f44f 708c 	mov.w	r0, #280	@ 0x118
 8013a00:	f000 be3e 	b.w	8014680 <nema_cl_add_cmd>
 8013a04:	45000000 	.word	0x45000000

08013a08 <nema_load_frag_shader>:
 8013a08:	b570      	push	{r4, r5, r6, lr}
 8013a0a:	460e      	mov	r6, r1
 8013a0c:	4604      	mov	r4, r0
 8013a0e:	4611      	mov	r1, r2
 8013a10:	20c4      	movs	r0, #196	@ 0xc4
 8013a12:	f000 fe35 	bl	8014680 <nema_cl_add_cmd>
 8013a16:	b186      	cbz	r6, 8013a3a <nema_load_frag_shader+0x32>
 8013a18:	2500      	movs	r5, #0
 8013a1a:	3408      	adds	r4, #8
 8013a1c:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8013a20:	20c8      	movs	r0, #200	@ 0xc8
 8013a22:	f000 fe2d 	bl	8014680 <nema_cl_add_cmd>
 8013a26:	3501      	adds	r5, #1
 8013a28:	f854 1c04 	ldr.w	r1, [r4, #-4]
 8013a2c:	20cc      	movs	r0, #204	@ 0xcc
 8013a2e:	f000 fe27 	bl	8014680 <nema_cl_add_cmd>
 8013a32:	42ae      	cmp	r6, r5
 8013a34:	f104 0408 	add.w	r4, r4, #8
 8013a38:	d1f0      	bne.n	8013a1c <nema_load_frag_shader+0x14>
 8013a3a:	bd70      	pop	{r4, r5, r6, pc}

08013a3c <nema_set_frag_ptr>:
 8013a3c:	4601      	mov	r1, r0
 8013a3e:	f44f 708e 	mov.w	r0, #284	@ 0x11c
 8013a42:	f000 be1d 	b.w	8014680 <nema_cl_add_cmd>
 8013a46:	bf00      	nop

08013a48 <nema_set_rop_blend_mode>:
 8013a48:	4601      	mov	r1, r0
 8013a4a:	f44f 70e8 	mov.w	r0, #464	@ 0x1d0
 8013a4e:	f000 be17 	b.w	8014680 <nema_cl_add_cmd>
 8013a52:	bf00      	nop

08013a54 <nema_set_rop_const_color>:
 8013a54:	4601      	mov	r1, r0
 8013a56:	f44f 70ec 	mov.w	r0, #472	@ 0x1d8
 8013a5a:	f000 be11 	b.w	8014680 <nema_cl_add_cmd>
 8013a5e:	bf00      	nop

08013a60 <nema_set_depth_ctrl>:
 8013a60:	4601      	mov	r1, r0
 8013a62:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
 8013a66:	f000 be0b 	b.w	8014680 <nema_cl_add_cmd>
 8013a6a:	bf00      	nop

08013a6c <nema_set_raster_color>:
 8013a6c:	4601      	mov	r1, r0
 8013a6e:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8013a72:	f000 be05 	b.w	8014680 <nema_cl_add_cmd>
 8013a76:	bf00      	nop

08013a78 <nema_raster_triangle_fx>:
 8013a78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013a7c:	4607      	mov	r7, r0
 8013a7e:	2007      	movs	r0, #7
 8013a80:	460e      	mov	r6, r1
 8013a82:	4615      	mov	r5, r2
 8013a84:	461c      	mov	r4, r3
 8013a86:	f000 fd9d 	bl	80145c4 <nema_cl_get_space>
 8013a8a:	b350      	cbz	r0, 8013ae2 <nema_raster_triangle_fx+0x6a>
 8013a8c:	f44f 7398 	mov.w	r3, #304	@ 0x130
 8013a90:	f44f 7292 	mov.w	r2, #292	@ 0x124
 8013a94:	f44f 7890 	mov.w	r8, #288	@ 0x120
 8013a98:	f44f 7e9a 	mov.w	lr, #308	@ 0x134
 8013a9c:	f44f 7ca0 	mov.w	ip, #320	@ 0x140
 8013aa0:	f44f 71a2 	mov.w	r1, #324	@ 0x144
 8013aa4:	6103      	str	r3, [r0, #16]
 8013aa6:	4b10      	ldr	r3, [pc, #64]	@ (8013ae8 <nema_raster_triangle_fx+0x70>)
 8013aa8:	6047      	str	r7, [r0, #4]
 8013aaa:	60c6      	str	r6, [r0, #12]
 8013aac:	f8c0 8000 	str.w	r8, [r0]
 8013ab0:	6082      	str	r2, [r0, #8]
 8013ab2:	691a      	ldr	r2, [r3, #16]
 8013ab4:	4b0d      	ldr	r3, [pc, #52]	@ (8013aec <nema_raster_triangle_fx+0x74>)
 8013ab6:	61c4      	str	r4, [r0, #28]
 8013ab8:	9c06      	ldr	r4, [sp, #24]
 8013aba:	6303      	str	r3, [r0, #48]	@ 0x30
 8013abc:	01d3      	lsls	r3, r2, #7
 8013abe:	6244      	str	r4, [r0, #36]	@ 0x24
 8013ac0:	bf48      	it	mi
 8013ac2:	f442 0200 	orrmi.w	r2, r2, #8388608	@ 0x800000
 8013ac6:	9c07      	ldr	r4, [sp, #28]
 8013ac8:	bf58      	it	pl
 8013aca:	f422 0200 	bicpl.w	r2, r2, #8388608	@ 0x800000
 8013ace:	f042 0204 	orr.w	r2, r2, #4
 8013ad2:	6145      	str	r5, [r0, #20]
 8013ad4:	62c4      	str	r4, [r0, #44]	@ 0x2c
 8013ad6:	f8c0 e018 	str.w	lr, [r0, #24]
 8013ada:	f8c0 c020 	str.w	ip, [r0, #32]
 8013ade:	6281      	str	r1, [r0, #40]	@ 0x28
 8013ae0:	6342      	str	r2, [r0, #52]	@ 0x34
 8013ae2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013ae6:	bf00      	nop
 8013ae8:	20000060 	.word	0x20000060
 8013aec:	ff000100 	.word	0xff000100

08013af0 <nema_raster_rect>:
 8013af0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013af2:	1e17      	subs	r7, r2, #0
 8013af4:	dd20      	ble.n	8013b38 <nema_raster_rect+0x48>
 8013af6:	2b00      	cmp	r3, #0
 8013af8:	dd1e      	ble.n	8013b38 <nema_raster_rect+0x48>
 8013afa:	4604      	mov	r4, r0
 8013afc:	2003      	movs	r0, #3
 8013afe:	461d      	mov	r5, r3
 8013b00:	460e      	mov	r6, r1
 8013b02:	f000 fd5f 	bl	80145c4 <nema_cl_get_space>
 8013b06:	b1b8      	cbz	r0, 8013b38 <nema_raster_rect+0x48>
 8013b08:	f44f 7c82 	mov.w	ip, #260	@ 0x104
 8013b0c:	f44f 7184 	mov.w	r1, #264	@ 0x108
 8013b10:	193a      	adds	r2, r7, r4
 8013b12:	b292      	uxth	r2, r2
 8013b14:	19ab      	adds	r3, r5, r6
 8013b16:	b2a4      	uxth	r4, r4
 8013b18:	4d08      	ldr	r5, [pc, #32]	@ (8013b3c <nema_raster_rect+0x4c>)
 8013b1a:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 8013b1e:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8013b22:	4a07      	ldr	r2, [pc, #28]	@ (8013b40 <nema_raster_rect+0x50>)
 8013b24:	6044      	str	r4, [r0, #4]
 8013b26:	60c3      	str	r3, [r0, #12]
 8013b28:	f8c0 c000 	str.w	ip, [r0]
 8013b2c:	6081      	str	r1, [r0, #8]
 8013b2e:	6105      	str	r5, [r0, #16]
 8013b30:	6913      	ldr	r3, [r2, #16]
 8013b32:	f043 0302 	orr.w	r3, r3, #2
 8013b36:	6143      	str	r3, [r0, #20]
 8013b38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013b3a:	bf00      	nop
 8013b3c:	ff000100 	.word	0xff000100
 8013b40:	20000060 	.word	0x20000060

08013b44 <nema_raster_quad_fx>:
 8013b44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013b48:	4607      	mov	r7, r0
 8013b4a:	2009      	movs	r0, #9
 8013b4c:	460e      	mov	r6, r1
 8013b4e:	4615      	mov	r5, r2
 8013b50:	461c      	mov	r4, r3
 8013b52:	f000 fd37 	bl	80145c4 <nema_cl_get_space>
 8013b56:	2800      	cmp	r0, #0
 8013b58:	d02f      	beq.n	8013bba <nema_raster_quad_fx+0x76>
 8013b5a:	f44f 7398 	mov.w	r3, #304	@ 0x130
 8013b5e:	f44f 7292 	mov.w	r2, #292	@ 0x124
 8013b62:	f44f 7a90 	mov.w	sl, #288	@ 0x120
 8013b66:	f44f 799a 	mov.w	r9, #308	@ 0x134
 8013b6a:	f44f 78a0 	mov.w	r8, #320	@ 0x140
 8013b6e:	f44f 7ea2 	mov.w	lr, #324	@ 0x144
 8013b72:	f44f 7ca8 	mov.w	ip, #336	@ 0x150
 8013b76:	f44f 71aa 	mov.w	r1, #340	@ 0x154
 8013b7a:	6103      	str	r3, [r0, #16]
 8013b7c:	4b10      	ldr	r3, [pc, #64]	@ (8013bc0 <nema_raster_quad_fx+0x7c>)
 8013b7e:	6047      	str	r7, [r0, #4]
 8013b80:	60c6      	str	r6, [r0, #12]
 8013b82:	f8c0 a000 	str.w	sl, [r0]
 8013b86:	6082      	str	r2, [r0, #8]
 8013b88:	691a      	ldr	r2, [r3, #16]
 8013b8a:	9b08      	ldr	r3, [sp, #32]
 8013b8c:	f042 0205 	orr.w	r2, r2, #5
 8013b90:	6243      	str	r3, [r0, #36]	@ 0x24
 8013b92:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013b94:	6145      	str	r5, [r0, #20]
 8013b96:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8013b98:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8013b9a:	61c4      	str	r4, [r0, #28]
 8013b9c:	6343      	str	r3, [r0, #52]	@ 0x34
 8013b9e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8013ba0:	6442      	str	r2, [r0, #68]	@ 0x44
 8013ba2:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8013ba4:	4b07      	ldr	r3, [pc, #28]	@ (8013bc4 <nema_raster_quad_fx+0x80>)
 8013ba6:	f8c0 9018 	str.w	r9, [r0, #24]
 8013baa:	f8c0 8020 	str.w	r8, [r0, #32]
 8013bae:	f8c0 e028 	str.w	lr, [r0, #40]	@ 0x28
 8013bb2:	f8c0 c030 	str.w	ip, [r0, #48]	@ 0x30
 8013bb6:	6381      	str	r1, [r0, #56]	@ 0x38
 8013bb8:	6403      	str	r3, [r0, #64]	@ 0x40
 8013bba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013bbe:	bf00      	nop
 8013bc0:	20000060 	.word	0x20000060
 8013bc4:	ff000100 	.word	0xff000100

08013bc8 <nema_set_interrupt_ctrl>:
 8013bc8:	4601      	mov	r1, r0
 8013bca:	20f8      	movs	r0, #248	@ 0xf8
 8013bcc:	f000 bd58 	b.w	8014680 <nema_cl_add_cmd>

08013bd0 <nema_vg_init_stencil_pool>:
 8013bd0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013bd2:	460f      	mov	r7, r1
 8013bd4:	4606      	mov	r6, r0
 8013bd6:	b08f      	sub	sp, #60	@ 0x3c
 8013bd8:	ac02      	add	r4, sp, #8
 8013bda:	4613      	mov	r3, r2
 8013bdc:	4601      	mov	r1, r0
 8013bde:	463a      	mov	r2, r7
 8013be0:	4620      	mov	r0, r4
 8013be2:	f000 f881 	bl	8013ce8 <stencil_buffer_create>
 8013be6:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8013bea:	ad0a      	add	r5, sp, #40	@ 0x28
 8013bec:	ac06      	add	r4, sp, #24
 8013bee:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8013bf2:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8013bf6:	f000 f827 	bl	8013c48 <context_reset>
 8013bfa:	ab0e      	add	r3, sp, #56	@ 0x38
 8013bfc:	e913 0003 	ldmdb	r3, {r0, r1}
 8013c00:	e895 000c 	ldmia.w	r5, {r2, r3}
 8013c04:	e88d 0003 	stmia.w	sp, {r0, r1}
 8013c08:	4639      	mov	r1, r7
 8013c0a:	4630      	mov	r0, r6
 8013c0c:	f000 f880 	bl	8013d10 <stencil_buffer_set>
 8013c10:	f000 f8ba 	bl	8013d88 <lut_buffer_create>
 8013c14:	f000 f948 	bl	8013ea8 <tsvg_init>
 8013c18:	4639      	mov	r1, r7
 8013c1a:	4630      	mov	r0, r6
 8013c1c:	f000 f93a 	bl	8013e94 <set_tsvg_text_max_size>
 8013c20:	f000 f85e 	bl	8013ce0 <nema_vg_get_context>
 8013c24:	4c06      	ldr	r4, [pc, #24]	@ (8013c40 <nema_vg_init_stencil_pool+0x70>)
 8013c26:	6020      	str	r0, [r4, #0]
 8013c28:	f000 f8a8 	bl	8013d7c <nema_vg_get_stencil>
 8013c2c:	6822      	ldr	r2, [r4, #0]
 8013c2e:	4905      	ldr	r1, [pc, #20]	@ (8013c44 <nema_vg_init_stencil_pool+0x74>)
 8013c30:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8013c32:	6008      	str	r0, [r1, #0]
 8013c34:	f043 0320 	orr.w	r3, r3, #32
 8013c38:	6313      	str	r3, [r2, #48]	@ 0x30
 8013c3a:	b00f      	add	sp, #60	@ 0x3c
 8013c3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013c3e:	bf00      	nop
 8013c40:	2004c03c 	.word	0x2004c03c
 8013c44:	2004c040 	.word	0x2004c040

08013c48 <context_reset>:
 8013c48:	b570      	push	{r4, r5, r6, lr}
 8013c4a:	4c23      	ldr	r4, [pc, #140]	@ (8013cd8 <context_reset+0x90>)
 8013c4c:	6820      	ldr	r0, [r4, #0]
 8013c4e:	b110      	cbz	r0, 8013c56 <context_reset+0xe>
 8013c50:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8013c52:	069b      	lsls	r3, r3, #26
 8013c54:	d43a      	bmi.n	8013ccc <context_reset+0x84>
 8013c56:	2300      	movs	r3, #0
 8013c58:	6962      	ldr	r2, [r4, #20]
 8013c5a:	e9c4 3300 	strd	r3, r3, [r4]
 8013c5e:	60a3      	str	r3, [r4, #8]
 8013c60:	b112      	cbz	r2, 8013c68 <context_reset+0x20>
 8013c62:	481e      	ldr	r0, [pc, #120]	@ (8013cdc <context_reset+0x94>)
 8013c64:	f7ee fc26 	bl	80024b4 <nema_buffer_destroy>
 8013c68:	2300      	movs	r3, #0
 8013c6a:	2200      	movs	r2, #0
 8013c6c:	2602      	movs	r6, #2
 8013c6e:	f240 5501 	movw	r5, #1281	@ 0x501
 8013c72:	f04f 7000 	mov.w	r0, #33554432	@ 0x2000000
 8013c76:	f04f 61f0 	mov.w	r1, #125829120	@ 0x7800000
 8013c7a:	e9c4 2203 	strd	r2, r2, [r4, #12]
 8013c7e:	e9c4 2205 	strd	r2, r2, [r4, #20]
 8013c82:	6222      	str	r2, [r4, #32]
 8013c84:	e9c4 220c 	strd	r2, r2, [r4, #48]	@ 0x30
 8013c88:	e9c4 220e 	strd	r2, r2, [r4, #56]	@ 0x38
 8013c8c:	f884 2048 	strb.w	r2, [r4, #72]	@ 0x48
 8013c90:	61e6      	str	r6, [r4, #28]
 8013c92:	e9c4 5009 	strd	r5, r0, [r4, #36]	@ 0x24
 8013c96:	62e1      	str	r1, [r4, #44]	@ 0x2c
 8013c98:	6423      	str	r3, [r4, #64]	@ 0x40
 8013c9a:	6463      	str	r3, [r4, #68]	@ 0x44
 8013c9c:	64e3      	str	r3, [r4, #76]	@ 0x4c
 8013c9e:	6723      	str	r3, [r4, #112]	@ 0x70
 8013ca0:	6523      	str	r3, [r4, #80]	@ 0x50
 8013ca2:	6763      	str	r3, [r4, #116]	@ 0x74
 8013ca4:	6563      	str	r3, [r4, #84]	@ 0x54
 8013ca6:	67a3      	str	r3, [r4, #120]	@ 0x78
 8013ca8:	65a3      	str	r3, [r4, #88]	@ 0x58
 8013caa:	67e3      	str	r3, [r4, #124]	@ 0x7c
 8013cac:	65e3      	str	r3, [r4, #92]	@ 0x5c
 8013cae:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
 8013cb2:	6623      	str	r3, [r4, #96]	@ 0x60
 8013cb4:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 8013cb8:	6663      	str	r3, [r4, #100]	@ 0x64
 8013cba:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 8013cbe:	66a3      	str	r3, [r4, #104]	@ 0x68
 8013cc0:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8013cc4:	66e3      	str	r3, [r4, #108]	@ 0x6c
 8013cc6:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 8013cca:	bd70      	pop	{r4, r5, r6, pc}
 8013ccc:	6883      	ldr	r3, [r0, #8]
 8013cce:	2b00      	cmp	r3, #0
 8013cd0:	d0c1      	beq.n	8013c56 <context_reset+0xe>
 8013cd2:	f7ee fbef 	bl	80024b4 <nema_buffer_destroy>
 8013cd6:	e7be      	b.n	8013c56 <context_reset+0xe>
 8013cd8:	20000130 	.word	0x20000130
 8013cdc:	2000013c 	.word	0x2000013c

08013ce0 <nema_vg_get_context>:
 8013ce0:	4800      	ldr	r0, [pc, #0]	@ (8013ce4 <nema_vg_get_context+0x4>)
 8013ce2:	4770      	bx	lr
 8013ce4:	20000130 	.word	0x20000130

08013ce8 <stencil_buffer_create>:
 8013ce8:	b538      	push	{r3, r4, r5, lr}
 8013cea:	4605      	mov	r5, r0
 8013cec:	1cc8      	adds	r0, r1, #3
 8013cee:	bf48      	it	mi
 8013cf0:	1d88      	addmi	r0, r1, #6
 8013cf2:	1cd4      	adds	r4, r2, #3
 8013cf4:	bf48      	it	mi
 8013cf6:	1d94      	addmi	r4, r2, #6
 8013cf8:	1080      	asrs	r0, r0, #2
 8013cfa:	0080      	lsls	r0, r0, #2
 8013cfc:	f024 0203 	bic.w	r2, r4, #3
 8013d00:	fb02 f200 	mul.w	r2, r2, r0
 8013d04:	4619      	mov	r1, r3
 8013d06:	4628      	mov	r0, r5
 8013d08:	f7ee fbb0 	bl	800246c <nema_buffer_create_pool>
 8013d0c:	4628      	mov	r0, r5
 8013d0e:	bd38      	pop	{r3, r4, r5, pc}

08013d10 <stencil_buffer_set>:
 8013d10:	b082      	sub	sp, #8
 8013d12:	b470      	push	{r4, r5, r6}
 8013d14:	4606      	mov	r6, r0
 8013d16:	460d      	mov	r5, r1
 8013d18:	a803      	add	r0, sp, #12
 8013d1a:	e880 000c 	stmia.w	r0, {r2, r3}
 8013d1e:	4c15      	ldr	r4, [pc, #84]	@ (8013d74 <stencil_buffer_set+0x64>)
 8013d20:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 8013d22:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8013d26:	1cf3      	adds	r3, r6, #3
 8013d28:	bf48      	it	mi
 8013d2a:	1db3      	addmi	r3, r6, #6
 8013d2c:	1cea      	adds	r2, r5, #3
 8013d2e:	bf48      	it	mi
 8013d30:	1daa      	addmi	r2, r5, #6
 8013d32:	f022 0203 	bic.w	r2, r2, #3
 8013d36:	ee07 2a90 	vmov	s15, r2
 8013d3a:	f023 0303 	bic.w	r3, r3, #3
 8013d3e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8013d42:	ee07 3a90 	vmov	s15, r3
 8013d46:	2100      	movs	r1, #0
 8013d48:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013d4c:	61a1      	str	r1, [r4, #24]
 8013d4e:	61e1      	str	r1, [r4, #28]
 8013d50:	6261      	str	r1, [r4, #36]	@ 0x24
 8013d52:	6321      	str	r1, [r4, #48]	@ 0x30
 8013d54:	4908      	ldr	r1, [pc, #32]	@ (8013d78 <stencil_buffer_set+0x68>)
 8013d56:	ed84 7a0b 	vstr	s14, [r4, #44]	@ 0x2c
 8013d5a:	600c      	str	r4, [r1, #0]
 8013d5c:	ed84 7a0d 	vstr	s14, [r4, #52]	@ 0x34
 8013d60:	edc4 7a08 	vstr	s15, [r4, #32]
 8013d64:	edc4 7a0a 	vstr	s15, [r4, #40]	@ 0x28
 8013d68:	e9c4 3204 	strd	r3, r2, [r4, #16]
 8013d6c:	bc70      	pop	{r4, r5, r6}
 8013d6e:	b002      	add	sp, #8
 8013d70:	4770      	bx	lr
 8013d72:	bf00      	nop
 8013d74:	2004c044 	.word	0x2004c044
 8013d78:	20000130 	.word	0x20000130

08013d7c <nema_vg_get_stencil>:
 8013d7c:	4b01      	ldr	r3, [pc, #4]	@ (8013d84 <nema_vg_get_stencil+0x8>)
 8013d7e:	6818      	ldr	r0, [r3, #0]
 8013d80:	4770      	bx	lr
 8013d82:	bf00      	nop
 8013d84:	20000130 	.word	0x20000130

08013d88 <lut_buffer_create>:
 8013d88:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013d8a:	4d1a      	ldr	r5, [pc, #104]	@ (8013df4 <lut_buffer_create+0x6c>)
 8013d8c:	b085      	sub	sp, #20
 8013d8e:	69ac      	ldr	r4, [r5, #24]
 8013d90:	b10c      	cbz	r4, 8013d96 <lut_buffer_create+0xe>
 8013d92:	b005      	add	sp, #20
 8013d94:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013d96:	466e      	mov	r6, sp
 8013d98:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8013d9c:	4630      	mov	r0, r6
 8013d9e:	4621      	mov	r1, r4
 8013da0:	f7ee fb64 	bl	800246c <nema_buffer_create_pool>
 8013da4:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8013da8:	f105 060c 	add.w	r6, r5, #12
 8013dac:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8013db0:	4627      	mov	r7, r4
 8013db2:	4623      	mov	r3, r4
 8013db4:	696d      	ldr	r5, [r5, #20]
 8013db6:	26ff      	movs	r6, #255	@ 0xff
 8013db8:	e008      	b.n	8013dcc <lut_buffer_create+0x44>
 8013dba:	2880      	cmp	r0, #128	@ 0x80
 8013dbc:	f1c4 0100 	rsb	r1, r4, #0
 8013dc0:	d016      	beq.n	8013df0 <lut_buffer_create+0x68>
 8013dc2:	bfcc      	ite	gt
 8013dc4:	b2e1      	uxtbgt	r1, r4
 8013dc6:	b2c9      	uxtble	r1, r1
 8013dc8:	54a9      	strb	r1, [r5, r2]
 8013dca:	3410      	adds	r4, #16
 8013dcc:	ea44 1213 	orr.w	r2, r4, r3, lsr #4
 8013dd0:	3301      	adds	r3, #1
 8013dd2:	f1a3 0172 	sub.w	r1, r3, #114	@ 0x72
 8013dd6:	291e      	cmp	r1, #30
 8013dd8:	f103 30ff 	add.w	r0, r3, #4294967295
 8013ddc:	b2d2      	uxtb	r2, r2
 8013dde:	d9ec      	bls.n	8013dba <lut_buffer_create+0x32>
 8013de0:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8013de4:	54ae      	strb	r6, [r5, r2]
 8013de6:	d1f0      	bne.n	8013dca <lut_buffer_create+0x42>
 8013de8:	f885 60ff 	strb.w	r6, [r5, #255]	@ 0xff
 8013dec:	b005      	add	sp, #20
 8013dee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013df0:	54af      	strb	r7, [r5, r2]
 8013df2:	e7ea      	b.n	8013dca <lut_buffer_create+0x42>
 8013df4:	20000130 	.word	0x20000130

08013df8 <nema_vg_set_error>:
 8013df8:	4a02      	ldr	r2, [pc, #8]	@ (8013e04 <nema_vg_set_error+0xc>)
 8013dfa:	6a13      	ldr	r3, [r2, #32]
 8013dfc:	4318      	orrs	r0, r3
 8013dfe:	6210      	str	r0, [r2, #32]
 8013e00:	4770      	bx	lr
 8013e02:	bf00      	nop
 8013e04:	20000130 	.word	0x20000130

08013e08 <nema_vg_paint_create>:
 8013e08:	b538      	push	{r3, r4, r5, lr}
 8013e0a:	20e0      	movs	r0, #224	@ 0xe0
 8013e0c:	f7ee faac 	bl	8002368 <nema_host_malloc>
 8013e10:	4604      	mov	r4, r0
 8013e12:	b1e8      	cbz	r0, 8013e50 <nema_vg_paint_create+0x48>
 8013e14:	2500      	movs	r5, #0
 8013e16:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8013e1a:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
 8013e1e:	f8c0 30d4 	str.w	r3, [r0, #212]	@ 0xd4
 8013e22:	f8c0 30d8 	str.w	r3, [r0, #216]	@ 0xd8
 8013e26:	f880 502c 	strb.w	r5, [r0, #44]	@ 0x2c
 8013e2a:	f880 50dd 	strb.w	r5, [r0, #221]	@ 0xdd
 8013e2e:	f880 50d0 	strb.w	r5, [r0, #208]	@ 0xd0
 8013e32:	e9c0 250c 	strd	r2, r5, [r0, #48]	@ 0x30
 8013e36:	e9c0 5500 	strd	r5, r5, [r0]
 8013e3a:	3038      	adds	r0, #56	@ 0x38
 8013e3c:	f7ff fa10 	bl	8013260 <nema_mat3x3_load_identity>
 8013e40:	f104 0008 	add.w	r0, r4, #8
 8013e44:	f7ff fa0c 	bl	8013260 <nema_mat3x3_load_identity>
 8013e48:	f884 50dc 	strb.w	r5, [r4, #220]	@ 0xdc
 8013e4c:	4620      	mov	r0, r4
 8013e4e:	bd38      	pop	{r3, r4, r5, pc}
 8013e50:	2001      	movs	r0, #1
 8013e52:	f7ff ffd1 	bl	8013df8 <nema_vg_set_error>
 8013e56:	4620      	mov	r0, r4
 8013e58:	bd38      	pop	{r3, r4, r5, pc}
 8013e5a:	bf00      	nop

08013e5c <nema_vg_grad_create>:
 8013e5c:	b530      	push	{r4, r5, lr}
 8013e5e:	2010      	movs	r0, #16
 8013e60:	b085      	sub	sp, #20
 8013e62:	f7ee fa81 	bl	8002368 <nema_host_malloc>
 8013e66:	466d      	mov	r5, sp
 8013e68:	4604      	mov	r4, r0
 8013e6a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8013e6e:	4628      	mov	r0, r5
 8013e70:	2100      	movs	r1, #0
 8013e72:	f7ee fafb 	bl	800246c <nema_buffer_create_pool>
 8013e76:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8013e7a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8013e7e:	4620      	mov	r0, r4
 8013e80:	b005      	add	sp, #20
 8013e82:	bd30      	pop	{r4, r5, pc}

08013e84 <nema_vg_path_create>:
 8013e84:	b508      	push	{r3, lr}
 8013e86:	2088      	movs	r0, #136	@ 0x88
 8013e88:	f7ee fa6e 	bl	8002368 <nema_host_malloc>
 8013e8c:	2200      	movs	r2, #0
 8013e8e:	f8c0 2084 	str.w	r2, [r0, #132]	@ 0x84
 8013e92:	bd08      	pop	{r3, pc}

08013e94 <set_tsvg_text_max_size>:
 8013e94:	4a02      	ldr	r2, [pc, #8]	@ (8013ea0 <set_tsvg_text_max_size+0xc>)
 8013e96:	4b03      	ldr	r3, [pc, #12]	@ (8013ea4 <set_tsvg_text_max_size+0x10>)
 8013e98:	6010      	str	r0, [r2, #0]
 8013e9a:	6019      	str	r1, [r3, #0]
 8013e9c:	4770      	bx	lr
 8013e9e:	bf00      	nop
 8013ea0:	200001c4 	.word	0x200001c4
 8013ea4:	200001c8 	.word	0x200001c8

08013ea8 <tsvg_init>:
 8013ea8:	b508      	push	{r3, lr}
 8013eaa:	f7ff ffad 	bl	8013e08 <nema_vg_paint_create>
 8013eae:	4b05      	ldr	r3, [pc, #20]	@ (8013ec4 <tsvg_init+0x1c>)
 8013eb0:	6018      	str	r0, [r3, #0]
 8013eb2:	f7ff ffe7 	bl	8013e84 <nema_vg_path_create>
 8013eb6:	4b04      	ldr	r3, [pc, #16]	@ (8013ec8 <tsvg_init+0x20>)
 8013eb8:	6018      	str	r0, [r3, #0]
 8013eba:	f7ff ffcf 	bl	8013e5c <nema_vg_grad_create>
 8013ebe:	4b03      	ldr	r3, [pc, #12]	@ (8013ecc <tsvg_init+0x24>)
 8013ec0:	6018      	str	r0, [r3, #0]
 8013ec2:	bd08      	pop	{r3, pc}
 8013ec4:	2004c080 	.word	0x2004c080
 8013ec8:	2004c084 	.word	0x2004c084
 8013ecc:	2004c07c 	.word	0x2004c07c

08013ed0 <tsi_malloc_init_pool_aligned>:
 8013ed0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013ed4:	2807      	cmp	r0, #7
 8013ed6:	e9dd e706 	ldrd	lr, r7, [sp, #24]
 8013eda:	d845      	bhi.n	8013f68 <tsi_malloc_init_pool_aligned+0x98>
 8013edc:	2f0f      	cmp	r7, #15
 8013ede:	dd36      	ble.n	8013f4e <tsi_malloc_init_pool_aligned+0x7e>
 8013ee0:	07bc      	lsls	r4, r7, #30
 8013ee2:	463e      	mov	r6, r7
 8013ee4:	d043      	beq.n	8013f6e <tsi_malloc_init_pool_aligned+0x9e>
 8013ee6:	f027 0703 	bic.w	r7, r7, #3
 8013eea:	3704      	adds	r7, #4
 8013eec:	f107 0c0b 	add.w	ip, r7, #11
 8013ef0:	fb9c fcf7 	sdiv	ip, ip, r7
 8013ef4:	463e      	mov	r6, r7
 8013ef6:	fb07 fc0c 	mul.w	ip, r7, ip
 8013efa:	fbb1 f4f6 	udiv	r4, r1, r6
 8013efe:	fb06 1514 	mls	r5, r6, r4, r1
 8013f02:	f8df 8080 	ldr.w	r8, [pc, #128]	@ 8013f84 <tsi_malloc_init_pool_aligned+0xb4>
 8013f06:	f8c8 c000 	str.w	ip, [r8]
 8013f0a:	b32d      	cbz	r5, 8013f58 <tsi_malloc_init_pool_aligned+0x88>
 8013f0c:	fb04 6406 	mla	r4, r4, r6, r6
 8013f10:	eb00 0540 	add.w	r5, r0, r0, lsl #1
 8013f14:	4819      	ldr	r0, [pc, #100]	@ (8013f7c <tsi_malloc_init_pool_aligned+0xac>)
 8013f16:	00ed      	lsls	r5, r5, #3
 8013f18:	1946      	adds	r6, r0, r5
 8013f1a:	5142      	str	r2, [r0, r5]
 8013f1c:	18ca      	adds	r2, r1, r3
 8013f1e:	60f4      	str	r4, [r6, #12]
 8013f20:	6071      	str	r1, [r6, #4]
 8013f22:	e9c6 3704 	strd	r3, r7, [r6, #16]
 8013f26:	60b2      	str	r2, [r6, #8]
 8013f28:	f1be 0f00 	cmp.w	lr, #0
 8013f2c:	d016      	beq.n	8013f5c <tsi_malloc_init_pool_aligned+0x8c>
 8013f2e:	b1c4      	cbz	r4, 8013f62 <tsi_malloc_init_pool_aligned+0x92>
 8013f30:	2200      	movs	r2, #0
 8013f32:	4610      	mov	r0, r2
 8013f34:	4d12      	ldr	r5, [pc, #72]	@ (8013f80 <tsi_malloc_init_pool_aligned+0xb0>)
 8013f36:	eba3 034c 	sub.w	r3, r3, ip, lsl #1
 8013f3a:	eb0c 0104 	add.w	r1, ip, r4
 8013f3e:	e884 1024 	stmia.w	r4, {r2, r5, ip}
 8013f42:	f84c 3004 	str.w	r3, [ip, r4]
 8013f46:	e9c1 5201 	strd	r5, r2, [r1, #4]
 8013f4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013f4e:	f04f 0c10 	mov.w	ip, #16
 8013f52:	4666      	mov	r6, ip
 8013f54:	4667      	mov	r7, ip
 8013f56:	e7d0      	b.n	8013efa <tsi_malloc_init_pool_aligned+0x2a>
 8013f58:	460c      	mov	r4, r1
 8013f5a:	e7d9      	b.n	8013f10 <tsi_malloc_init_pool_aligned+0x40>
 8013f5c:	4670      	mov	r0, lr
 8013f5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013f62:	4620      	mov	r0, r4
 8013f64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013f68:	f04f 30ff 	mov.w	r0, #4294967295
 8013f6c:	e7ed      	b.n	8013f4a <tsi_malloc_init_pool_aligned+0x7a>
 8013f6e:	f107 0c0b 	add.w	ip, r7, #11
 8013f72:	fb9c fcf7 	sdiv	ip, ip, r7
 8013f76:	fb07 fc0c 	mul.w	ip, r7, ip
 8013f7a:	e7be      	b.n	8013efa <tsi_malloc_init_pool_aligned+0x2a>
 8013f7c:	2004c088 	.word	0x2004c088
 8013f80:	000f1fa1 	.word	0x000f1fa1
 8013f84:	200001cc 	.word	0x200001cc

08013f88 <tsi_malloc_pool>:
 8013f88:	2807      	cmp	r0, #7
 8013f8a:	d850      	bhi.n	801402e <tsi_malloc_pool+0xa6>
 8013f8c:	b4f0      	push	{r4, r5, r6, r7}
 8013f8e:	4b29      	ldr	r3, [pc, #164]	@ (8014034 <tsi_malloc_pool+0xac>)
 8013f90:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8013f94:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 8013f98:	68c4      	ldr	r4, [r0, #12]
 8013f9a:	2c00      	cmp	r4, #0
 8013f9c:	d03e      	beq.n	801401c <tsi_malloc_pool+0x94>
 8013f9e:	6947      	ldr	r7, [r0, #20]
 8013fa0:	4b25      	ldr	r3, [pc, #148]	@ (8014038 <tsi_malloc_pool+0xb0>)
 8013fa2:	f107 000b 	add.w	r0, r7, #11
 8013fa6:	fb90 f0f7 	sdiv	r0, r0, r7
 8013faa:	fb07 f000 	mul.w	r0, r7, r0
 8013fae:	1e7d      	subs	r5, r7, #1
 8013fb0:	4281      	cmp	r1, r0
 8013fb2:	bfac      	ite	ge
 8013fb4:	186d      	addge	r5, r5, r1
 8013fb6:	182d      	addlt	r5, r5, r0
 8013fb8:	fb95 f5f7 	sdiv	r5, r5, r7
 8013fbc:	fb07 f505 	mul.w	r5, r7, r5
 8013fc0:	6821      	ldr	r1, [r4, #0]
 8013fc2:	6018      	str	r0, [r3, #0]
 8013fc4:	428d      	cmp	r5, r1
 8013fc6:	dd2f      	ble.n	8014028 <tsi_malloc_pool+0xa0>
 8013fc8:	68a3      	ldr	r3, [r4, #8]
 8013fca:	b33b      	cbz	r3, 801401c <tsi_malloc_pool+0x94>
 8013fcc:	4626      	mov	r6, r4
 8013fce:	e002      	b.n	8013fd6 <tsi_malloc_pool+0x4e>
 8013fd0:	6893      	ldr	r3, [r2, #8]
 8013fd2:	4616      	mov	r6, r2
 8013fd4:	b313      	cbz	r3, 801401c <tsi_malloc_pool+0x94>
 8013fd6:	58e1      	ldr	r1, [r4, r3]
 8013fd8:	18e2      	adds	r2, r4, r3
 8013fda:	42a9      	cmp	r1, r5
 8013fdc:	dbf8      	blt.n	8013fd0 <tsi_malloc_pool+0x48>
 8013fde:	1943      	adds	r3, r0, r5
 8013fe0:	428b      	cmp	r3, r1
 8013fe2:	da1e      	bge.n	8014022 <tsi_malloc_pool+0x9a>
 8013fe4:	1ac9      	subs	r1, r1, r3
 8013fe6:	f8df c058 	ldr.w	ip, [pc, #88]	@ 8014040 <tsi_malloc_pool+0xb8>
 8013fea:	5099      	str	r1, [r3, r2]
 8013fec:	4413      	add	r3, r2
 8013fee:	f8c3 c004 	str.w	ip, [r3, #4]
 8013ff2:	6891      	ldr	r1, [r2, #8]
 8013ff4:	2f00      	cmp	r7, #0
 8013ff6:	6099      	str	r1, [r3, #8]
 8013ff8:	dd08      	ble.n	801400c <tsi_malloc_pool+0x84>
 8013ffa:	fbb3 f1f7 	udiv	r1, r3, r7
 8013ffe:	fb07 3c11 	mls	ip, r7, r1, r3
 8014002:	f1bc 0f00 	cmp.w	ip, #0
 8014006:	d001      	beq.n	801400c <tsi_malloc_pool+0x84>
 8014008:	fb01 7307 	mla	r3, r1, r7, r7
 801400c:	1b1b      	subs	r3, r3, r4
 801400e:	60b3      	str	r3, [r6, #8]
 8014010:	6015      	str	r5, [r2, #0]
 8014012:	4b0a      	ldr	r3, [pc, #40]	@ (801403c <tsi_malloc_pool+0xb4>)
 8014014:	4410      	add	r0, r2
 8014016:	6053      	str	r3, [r2, #4]
 8014018:	bcf0      	pop	{r4, r5, r6, r7}
 801401a:	4770      	bx	lr
 801401c:	2000      	movs	r0, #0
 801401e:	bcf0      	pop	{r4, r5, r6, r7}
 8014020:	4770      	bx	lr
 8014022:	6893      	ldr	r3, [r2, #8]
 8014024:	60b3      	str	r3, [r6, #8]
 8014026:	e7f4      	b.n	8014012 <tsi_malloc_pool+0x8a>
 8014028:	4626      	mov	r6, r4
 801402a:	4622      	mov	r2, r4
 801402c:	e7d7      	b.n	8013fde <tsi_malloc_pool+0x56>
 801402e:	2000      	movs	r0, #0
 8014030:	4770      	bx	lr
 8014032:	bf00      	nop
 8014034:	2004c088 	.word	0x2004c088
 8014038:	200001cc 	.word	0x200001cc
 801403c:	000f1fa2 	.word	0x000f1fa2
 8014040:	000f1fa1 	.word	0x000f1fa1

08014044 <tsi_free>:
 8014044:	2800      	cmp	r0, #0
 8014046:	d044      	beq.n	80140d2 <tsi_free+0x8e>
 8014048:	4b6f      	ldr	r3, [pc, #444]	@ (8014208 <tsi_free+0x1c4>)
 801404a:	68da      	ldr	r2, [r3, #12]
 801404c:	b12a      	cbz	r2, 801405a <tsi_free+0x16>
 801404e:	6859      	ldr	r1, [r3, #4]
 8014050:	4288      	cmp	r0, r1
 8014052:	d302      	bcc.n	801405a <tsi_free+0x16>
 8014054:	6899      	ldr	r1, [r3, #8]
 8014056:	4288      	cmp	r0, r1
 8014058:	d342      	bcc.n	80140e0 <tsi_free+0x9c>
 801405a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 801405c:	b12a      	cbz	r2, 801406a <tsi_free+0x26>
 801405e:	69d9      	ldr	r1, [r3, #28]
 8014060:	4288      	cmp	r0, r1
 8014062:	d302      	bcc.n	801406a <tsi_free+0x26>
 8014064:	6a19      	ldr	r1, [r3, #32]
 8014066:	4288      	cmp	r0, r1
 8014068:	d352      	bcc.n	8014110 <tsi_free+0xcc>
 801406a:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 801406c:	b12a      	cbz	r2, 801407a <tsi_free+0x36>
 801406e:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8014070:	4288      	cmp	r0, r1
 8014072:	d302      	bcc.n	801407a <tsi_free+0x36>
 8014074:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 8014076:	4288      	cmp	r0, r1
 8014078:	d34c      	bcc.n	8014114 <tsi_free+0xd0>
 801407a:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 801407c:	b12a      	cbz	r2, 801408a <tsi_free+0x46>
 801407e:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8014080:	4281      	cmp	r1, r0
 8014082:	d802      	bhi.n	801408a <tsi_free+0x46>
 8014084:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 8014086:	4281      	cmp	r1, r0
 8014088:	d846      	bhi.n	8014118 <tsi_free+0xd4>
 801408a:	6eda      	ldr	r2, [r3, #108]	@ 0x6c
 801408c:	b12a      	cbz	r2, 801409a <tsi_free+0x56>
 801408e:	6e59      	ldr	r1, [r3, #100]	@ 0x64
 8014090:	4288      	cmp	r0, r1
 8014092:	d302      	bcc.n	801409a <tsi_free+0x56>
 8014094:	6e99      	ldr	r1, [r3, #104]	@ 0x68
 8014096:	4281      	cmp	r1, r0
 8014098:	d840      	bhi.n	801411c <tsi_free+0xd8>
 801409a:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
 801409e:	b132      	cbz	r2, 80140ae <tsi_free+0x6a>
 80140a0:	6fd9      	ldr	r1, [r3, #124]	@ 0x7c
 80140a2:	4281      	cmp	r1, r0
 80140a4:	d803      	bhi.n	80140ae <tsi_free+0x6a>
 80140a6:	f8d3 1080 	ldr.w	r1, [r3, #128]	@ 0x80
 80140aa:	4288      	cmp	r0, r1
 80140ac:	d338      	bcc.n	8014120 <tsi_free+0xdc>
 80140ae:	f8d3 209c 	ldr.w	r2, [r3, #156]	@ 0x9c
 80140b2:	b13a      	cbz	r2, 80140c4 <tsi_free+0x80>
 80140b4:	f8d3 1094 	ldr.w	r1, [r3, #148]	@ 0x94
 80140b8:	4288      	cmp	r0, r1
 80140ba:	d303      	bcc.n	80140c4 <tsi_free+0x80>
 80140bc:	f8d3 1098 	ldr.w	r1, [r3, #152]	@ 0x98
 80140c0:	4288      	cmp	r0, r1
 80140c2:	d32f      	bcc.n	8014124 <tsi_free+0xe0>
 80140c4:	f8d3 20b4 	ldr.w	r2, [r3, #180]	@ 0xb4
 80140c8:	b11a      	cbz	r2, 80140d2 <tsi_free+0x8e>
 80140ca:	f8d3 10ac 	ldr.w	r1, [r3, #172]	@ 0xac
 80140ce:	4281      	cmp	r1, r0
 80140d0:	d900      	bls.n	80140d4 <tsi_free+0x90>
 80140d2:	4770      	bx	lr
 80140d4:	f8d3 10b0 	ldr.w	r1, [r3, #176]	@ 0xb0
 80140d8:	4281      	cmp	r1, r0
 80140da:	d9fa      	bls.n	80140d2 <tsi_free+0x8e>
 80140dc:	2107      	movs	r1, #7
 80140de:	e000      	b.n	80140e2 <tsi_free+0x9e>
 80140e0:	2100      	movs	r1, #0
 80140e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80140e6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80140ea:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 80140ee:	695e      	ldr	r6, [r3, #20]
 80140f0:	4b46      	ldr	r3, [pc, #280]	@ (801420c <tsi_free+0x1c8>)
 80140f2:	f106 010b 	add.w	r1, r6, #11
 80140f6:	fb91 f1f6 	sdiv	r1, r1, r6
 80140fa:	fb06 f101 	mul.w	r1, r6, r1
 80140fe:	1a45      	subs	r5, r0, r1
 8014100:	686c      	ldr	r4, [r5, #4]
 8014102:	4f43      	ldr	r7, [pc, #268]	@ (8014210 <tsi_free+0x1cc>)
 8014104:	429c      	cmp	r4, r3
 8014106:	6039      	str	r1, [r7, #0]
 8014108:	46a8      	mov	r8, r5
 801410a:	d00d      	beq.n	8014128 <tsi_free+0xe4>
 801410c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014110:	2101      	movs	r1, #1
 8014112:	e7e6      	b.n	80140e2 <tsi_free+0x9e>
 8014114:	2102      	movs	r1, #2
 8014116:	e7e4      	b.n	80140e2 <tsi_free+0x9e>
 8014118:	2103      	movs	r1, #3
 801411a:	e7e2      	b.n	80140e2 <tsi_free+0x9e>
 801411c:	2104      	movs	r1, #4
 801411e:	e7e0      	b.n	80140e2 <tsi_free+0x9e>
 8014120:	2105      	movs	r1, #5
 8014122:	e7de      	b.n	80140e2 <tsi_free+0x9e>
 8014124:	2106      	movs	r1, #6
 8014126:	e7dc      	b.n	80140e2 <tsi_free+0x9e>
 8014128:	4b3a      	ldr	r3, [pc, #232]	@ (8014214 <tsi_free+0x1d0>)
 801412a:	606b      	str	r3, [r5, #4]
 801412c:	6894      	ldr	r4, [r2, #8]
 801412e:	18a3      	adds	r3, r4, r2
 8014130:	429d      	cmp	r5, r3
 8014132:	d95e      	bls.n	80141f2 <tsi_free+0x1ae>
 8014134:	b90c      	cbnz	r4, 801413a <tsi_free+0xf6>
 8014136:	e05c      	b.n	80141f2 <tsi_free+0x1ae>
 8014138:	b12c      	cbz	r4, 8014146 <tsi_free+0x102>
 801413a:	689c      	ldr	r4, [r3, #8]
 801413c:	469c      	mov	ip, r3
 801413e:	469e      	mov	lr, r3
 8014140:	1913      	adds	r3, r2, r4
 8014142:	429d      	cmp	r5, r3
 8014144:	d8f8      	bhi.n	8014138 <tsi_free+0xf4>
 8014146:	682f      	ldr	r7, [r5, #0]
 8014148:	4594      	cmp	ip, r2
 801414a:	4438      	add	r0, r7
 801414c:	d04d      	beq.n	80141ea <tsi_free+0x1a6>
 801414e:	f8dc 7000 	ldr.w	r7, [ip]
 8014152:	eb01 040c 	add.w	r4, r1, ip
 8014156:	443c      	add	r4, r7
 8014158:	1b64      	subs	r4, r4, r5
 801415a:	fab4 f484 	clz	r4, r4
 801415e:	0964      	lsrs	r4, r4, #5
 8014160:	2e00      	cmp	r6, #0
 8014162:	dd32      	ble.n	80141ca <tsi_free+0x186>
 8014164:	fbb5 f7f6 	udiv	r7, r5, r6
 8014168:	fb06 5c17 	mls	ip, r6, r7, r5
 801416c:	f1bc 0f00 	cmp.w	ip, #0
 8014170:	d001      	beq.n	8014176 <tsi_free+0x132>
 8014172:	fb07 6506 	mla	r5, r7, r6, r6
 8014176:	fbb3 f7f6 	udiv	r7, r3, r6
 801417a:	fb06 3c17 	mls	ip, r6, r7, r3
 801417e:	1aad      	subs	r5, r5, r2
 8014180:	f8ce 5008 	str.w	r5, [lr, #8]
 8014184:	f1bc 0f00 	cmp.w	ip, #0
 8014188:	d01d      	beq.n	80141c6 <tsi_free+0x182>
 801418a:	fb07 6606 	mla	r6, r7, r6, r6
 801418e:	1ab2      	subs	r2, r6, r2
 8014190:	f8c8 2008 	str.w	r2, [r8, #8]
 8014194:	b154      	cbz	r4, 80141ac <tsi_free+0x168>
 8014196:	f8d8 5000 	ldr.w	r5, [r8]
 801419a:	46f0      	mov	r8, lr
 801419c:	f8de 4000 	ldr.w	r4, [lr]
 80141a0:	440d      	add	r5, r1
 80141a2:	442c      	add	r4, r5
 80141a4:	f8ce 4000 	str.w	r4, [lr]
 80141a8:	f8ce 2008 	str.w	r2, [lr, #8]
 80141ac:	4283      	cmp	r3, r0
 80141ae:	d1ad      	bne.n	801410c <tsi_free+0xc8>
 80141b0:	6818      	ldr	r0, [r3, #0]
 80141b2:	f8d8 2000 	ldr.w	r2, [r8]
 80141b6:	4401      	add	r1, r0
 80141b8:	440a      	add	r2, r1
 80141ba:	f8c8 2000 	str.w	r2, [r8]
 80141be:	689b      	ldr	r3, [r3, #8]
 80141c0:	f8c8 3008 	str.w	r3, [r8, #8]
 80141c4:	e7a2      	b.n	801410c <tsi_free+0xc8>
 80141c6:	461e      	mov	r6, r3
 80141c8:	e7e1      	b.n	801418e <tsi_free+0x14a>
 80141ca:	1aae      	subs	r6, r5, r2
 80141cc:	1a9a      	subs	r2, r3, r2
 80141ce:	f8ce 6008 	str.w	r6, [lr, #8]
 80141d2:	60aa      	str	r2, [r5, #8]
 80141d4:	2c00      	cmp	r4, #0
 80141d6:	d0e9      	beq.n	80141ac <tsi_free+0x168>
 80141d8:	682d      	ldr	r5, [r5, #0]
 80141da:	f8de 4000 	ldr.w	r4, [lr]
 80141de:	440d      	add	r5, r1
 80141e0:	442c      	add	r4, r5
 80141e2:	f8ce 4000 	str.w	r4, [lr]
 80141e6:	46f0      	mov	r8, lr
 80141e8:	e7de      	b.n	80141a8 <tsi_free+0x164>
 80141ea:	2e00      	cmp	r6, #0
 80141ec:	dd06      	ble.n	80141fc <tsi_free+0x1b8>
 80141ee:	2400      	movs	r4, #0
 80141f0:	e7b8      	b.n	8014164 <tsi_free+0x120>
 80141f2:	682c      	ldr	r4, [r5, #0]
 80141f4:	4696      	mov	lr, r2
 80141f6:	4420      	add	r0, r4
 80141f8:	2400      	movs	r4, #0
 80141fa:	e7b1      	b.n	8014160 <tsi_free+0x11c>
 80141fc:	eba5 020c 	sub.w	r2, r5, ip
 8014200:	f8cc 2008 	str.w	r2, [ip, #8]
 8014204:	60ac      	str	r4, [r5, #8]
 8014206:	e7d1      	b.n	80141ac <tsi_free+0x168>
 8014208:	2004c088 	.word	0x2004c088
 801420c:	000f1fa2 	.word	0x000f1fa2
 8014210:	200001cc 	.word	0x200001cc
 8014214:	000f1fa1 	.word	0x000f1fa1

08014218 <nema_cl_create_sized>:
 8014218:	b5f0      	push	{r4, r5, r6, r7, lr}
 801421a:	b093      	sub	sp, #76	@ 0x4c
 801421c:	466d      	mov	r5, sp
 801421e:	4606      	mov	r6, r0
 8014220:	460a      	mov	r2, r1
 8014222:	4628      	mov	r0, r5
 8014224:	2100      	movs	r1, #0
 8014226:	f7ee f921 	bl	800246c <nema_buffer_create_pool>
 801422a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 801422e:	2500      	movs	r5, #0
 8014230:	ac04      	add	r4, sp, #16
 8014232:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8014236:	4620      	mov	r0, r4
 8014238:	f7ee f93a 	bl	80024b0 <nema_buffer_map>
 801423c:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8014240:	ac08      	add	r4, sp, #32
 8014242:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8014246:	2110      	movs	r1, #16
 8014248:	f04f 32ff 	mov.w	r2, #4294967295
 801424c:	9b04      	ldr	r3, [sp, #16]
 801424e:	950d      	str	r5, [sp, #52]	@ 0x34
 8014250:	e9cd 5510 	strd	r5, r5, [sp, #64]	@ 0x40
 8014254:	42ab      	cmp	r3, r5
 8014256:	4635      	mov	r5, r6
 8014258:	bfb8      	it	lt
 801425a:	3307      	addlt	r3, #7
 801425c:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 8014260:	10db      	asrs	r3, r3, #3
 8014262:	005b      	lsls	r3, r3, #1
 8014264:	930c      	str	r3, [sp, #48]	@ 0x30
 8014266:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014268:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 801426a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801426c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 801426e:	e894 0003 	ldmia.w	r4, {r0, r1}
 8014272:	2700      	movs	r7, #0
 8014274:	e885 0003 	stmia.w	r5, {r0, r1}
 8014278:	4630      	mov	r0, r6
 801427a:	61b7      	str	r7, [r6, #24]
 801427c:	b013      	add	sp, #76	@ 0x4c
 801427e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014280 <nema_extend_bound_cl>:
 8014280:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014282:	4d6e      	ldr	r5, [pc, #440]	@ (801443c <nema_extend_bound_cl+0x1bc>)
 8014284:	b09f      	sub	sp, #124	@ 0x7c
 8014286:	682b      	ldr	r3, [r5, #0]
 8014288:	2b00      	cmp	r3, #0
 801428a:	f000 80c1 	beq.w	8014410 <nema_extend_bound_cl+0x190>
 801428e:	4606      	mov	r6, r0
 8014290:	6998      	ldr	r0, [r3, #24]
 8014292:	0784      	lsls	r4, r0, #30
 8014294:	f140 80b6 	bpl.w	8014404 <nema_extend_bound_cl+0x184>
 8014298:	e9d3 1204 	ldrd	r1, r2, [r3, #16]
 801429c:	0680      	lsls	r0, r0, #26
 801429e:	d44e      	bmi.n	801433e <nema_extend_bound_cl+0xbe>
 80142a0:	1a89      	subs	r1, r1, r2
 80142a2:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80142a6:	1049      	asrs	r1, r1, #1
 80142a8:	2902      	cmp	r1, #2
 80142aa:	dd13      	ble.n	80142d4 <nema_extend_bound_cl+0x54>
 80142ac:	f44f 3c80 	mov.w	ip, #65536	@ 0x10000
 80142b0:	2700      	movs	r7, #0
 80142b2:	1e94      	subs	r4, r2, #2
 80142b4:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80142b8:	1c91      	adds	r1, r2, #2
 80142ba:	0092      	lsls	r2, r2, #2
 80142bc:	6898      	ldr	r0, [r3, #8]
 80142be:	f840 c002 	str.w	ip, [r0, r2]
 80142c2:	6898      	ldr	r0, [r3, #8]
 80142c4:	4410      	add	r0, r2
 80142c6:	6047      	str	r7, [r0, #4]
 80142c8:	6159      	str	r1, [r3, #20]
 80142ca:	3102      	adds	r1, #2
 80142cc:	428c      	cmp	r4, r1
 80142ce:	f102 0208 	add.w	r2, r2, #8
 80142d2:	d1f3      	bne.n	80142bc <nema_extend_bound_cl+0x3c>
 80142d4:	6a1c      	ldr	r4, [r3, #32]
 80142d6:	2c00      	cmp	r4, #0
 80142d8:	d050      	beq.n	801437c <nema_extend_bound_cl+0xfc>
 80142da:	e9d3 2105 	ldrd	r2, r1, [r3, #20]
 80142de:	26f0      	movs	r6, #240	@ 0xf0
 80142e0:	27f4      	movs	r7, #244	@ 0xf4
 80142e2:	6898      	ldr	r0, [r3, #8]
 80142e4:	f041 0104 	orr.w	r1, r1, #4
 80142e8:	6199      	str	r1, [r3, #24]
 80142ea:	f840 6022 	str.w	r6, [r0, r2, lsl #2]
 80142ee:	6899      	ldr	r1, [r3, #8]
 80142f0:	68e6      	ldr	r6, [r4, #12]
 80142f2:	0090      	lsls	r0, r2, #2
 80142f4:	4401      	add	r1, r0
 80142f6:	604e      	str	r6, [r1, #4]
 80142f8:	6899      	ldr	r1, [r3, #8]
 80142fa:	1c96      	adds	r6, r2, #2
 80142fc:	4401      	add	r1, r0
 80142fe:	615e      	str	r6, [r3, #20]
 8014300:	608f      	str	r7, [r1, #8]
 8014302:	6899      	ldr	r1, [r3, #8]
 8014304:	6926      	ldr	r6, [r4, #16]
 8014306:	4401      	add	r1, r0
 8014308:	1d17      	adds	r7, r2, #4
 801430a:	60ce      	str	r6, [r1, #12]
 801430c:	621c      	str	r4, [r3, #32]
 801430e:	615f      	str	r7, [r3, #20]
 8014310:	68e1      	ldr	r1, [r4, #12]
 8014312:	f011 0107 	ands.w	r1, r1, #7
 8014316:	d120      	bne.n	801435a <nema_extend_bound_cl+0xda>
 8014318:	691e      	ldr	r6, [r3, #16]
 801431a:	3205      	adds	r2, #5
 801431c:	42b2      	cmp	r2, r6
 801431e:	db23      	blt.n	8014368 <nema_extend_bound_cl+0xe8>
 8014320:	699a      	ldr	r2, [r3, #24]
 8014322:	f022 0220 	bic.w	r2, r2, #32
 8014326:	619a      	str	r2, [r3, #24]
 8014328:	69a3      	ldr	r3, [r4, #24]
 801432a:	075a      	lsls	r2, r3, #29
 801432c:	d503      	bpl.n	8014336 <nema_extend_bound_cl+0xb6>
 801432e:	6a24      	ldr	r4, [r4, #32]
 8014330:	69a3      	ldr	r3, [r4, #24]
 8014332:	075b      	lsls	r3, r3, #29
 8014334:	d4fb      	bmi.n	801432e <nema_extend_bound_cl+0xae>
 8014336:	2000      	movs	r0, #0
 8014338:	602c      	str	r4, [r5, #0]
 801433a:	b01f      	add	sp, #124	@ 0x7c
 801433c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801433e:	2900      	cmp	r1, #0
 8014340:	bfb8      	it	lt
 8014342:	3103      	addlt	r1, #3
 8014344:	1089      	asrs	r1, r1, #2
 8014346:	0049      	lsls	r1, r1, #1
 8014348:	4291      	cmp	r1, r2
 801434a:	bfcc      	ite	gt
 801434c:	4610      	movgt	r0, r2
 801434e:	1a50      	suble	r0, r2, r1
 8014350:	1a09      	subs	r1, r1, r0
 8014352:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8014356:	1049      	asrs	r1, r1, #1
 8014358:	e7a6      	b.n	80142a8 <nema_extend_bound_cl+0x28>
 801435a:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 801435e:	f7fe fb31 	bl	80129c4 <nema_set_error>
 8014362:	2000      	movs	r0, #0
 8014364:	b01f      	add	sp, #124	@ 0x7c
 8014366:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014368:	f44f 26a0 	mov.w	r6, #327680	@ 0x50000
 801436c:	689a      	ldr	r2, [r3, #8]
 801436e:	4410      	add	r0, r2
 8014370:	e9c0 6104 	strd	r6, r1, [r0, #16]
 8014374:	699a      	ldr	r2, [r3, #24]
 8014376:	f022 0208 	bic.w	r2, r2, #8
 801437a:	e7d2      	b.n	8014322 <nema_extend_bound_cl+0xa2>
 801437c:	2028      	movs	r0, #40	@ 0x28
 801437e:	f7ed fff3 	bl	8002368 <nema_host_malloc>
 8014382:	4604      	mov	r4, r0
 8014384:	2800      	cmp	r0, #0
 8014386:	d052      	beq.n	801442e <nema_extend_bound_cl+0x1ae>
 8014388:	1cb1      	adds	r1, r6, #2
 801438a:	00c9      	lsls	r1, r1, #3
 801438c:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8014390:	dd1a      	ble.n	80143c8 <nema_extend_bound_cl+0x148>
 8014392:	466e      	mov	r6, sp
 8014394:	4627      	mov	r7, r4
 8014396:	4668      	mov	r0, sp
 8014398:	f7ff ff3e 	bl	8014218 <nema_cl_create_sized>
 801439c:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801439e:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 80143a0:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 80143a2:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 80143a4:	e896 0003 	ldmia.w	r6, {r0, r1}
 80143a8:	e887 0003 	stmia.w	r7, {r0, r1}
 80143ac:	68a3      	ldr	r3, [r4, #8]
 80143ae:	2b00      	cmp	r3, #0
 80143b0:	d034      	beq.n	801441c <nema_extend_bound_cl+0x19c>
 80143b2:	682b      	ldr	r3, [r5, #0]
 80143b4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80143b6:	2a00      	cmp	r2, #0
 80143b8:	bf08      	it	eq
 80143ba:	461a      	moveq	r2, r3
 80143bc:	6262      	str	r2, [r4, #36]	@ 0x24
 80143be:	699a      	ldr	r2, [r3, #24]
 80143c0:	f022 020c 	bic.w	r2, r2, #12
 80143c4:	61a2      	str	r2, [r4, #24]
 80143c6:	e788      	b.n	80142da <nema_extend_bound_cl+0x5a>
 80143c8:	a80a      	add	r0, sp, #40	@ 0x28
 80143ca:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80143ce:	f7ff ff23 	bl	8014218 <nema_cl_create_sized>
 80143d2:	2302      	movs	r3, #2
 80143d4:	46a4      	mov	ip, r4
 80143d6:	9310      	str	r3, [sp, #64]	@ 0x40
 80143d8:	ae0a      	add	r6, sp, #40	@ 0x28
 80143da:	af14      	add	r7, sp, #80	@ 0x50
 80143dc:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 80143de:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 80143e0:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 80143e2:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 80143e4:	e896 0003 	ldmia.w	r6, {r0, r1}
 80143e8:	ae14      	add	r6, sp, #80	@ 0x50
 80143ea:	e887 0003 	stmia.w	r7, {r0, r1}
 80143ee:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 80143f0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80143f4:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 80143f6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80143fa:	e897 0003 	ldmia.w	r7, {r0, r1}
 80143fe:	e88c 0003 	stmia.w	ip, {r0, r1}
 8014402:	e7d3      	b.n	80143ac <nema_extend_bound_cl+0x12c>
 8014404:	2008      	movs	r0, #8
 8014406:	f7fe fadd 	bl	80129c4 <nema_set_error>
 801440a:	f04f 30ff 	mov.w	r0, #4294967295
 801440e:	e7a9      	b.n	8014364 <nema_extend_bound_cl+0xe4>
 8014410:	2080      	movs	r0, #128	@ 0x80
 8014412:	f7fe fad7 	bl	80129c4 <nema_set_error>
 8014416:	f04f 30ff 	mov.w	r0, #4294967295
 801441a:	e7a3      	b.n	8014364 <nema_extend_bound_cl+0xe4>
 801441c:	2010      	movs	r0, #16
 801441e:	f7fe fad1 	bl	80129c4 <nema_set_error>
 8014422:	4620      	mov	r0, r4
 8014424:	f7ed ff9e 	bl	8002364 <nema_host_free>
 8014428:	f04f 30ff 	mov.w	r0, #4294967295
 801442c:	e79a      	b.n	8014364 <nema_extend_bound_cl+0xe4>
 801442e:	2010      	movs	r0, #16
 8014430:	f7fe fac8 	bl	80129c4 <nema_set_error>
 8014434:	f04f 30ff 	mov.w	r0, #4294967295
 8014438:	e794      	b.n	8014364 <nema_extend_bound_cl+0xe4>
 801443a:	bf00      	nop
 801443c:	2004c148 	.word	0x2004c148

08014440 <nema_cl_bind_circular>:
 8014440:	b358      	cbz	r0, 801449a <nema_cl_bind_circular+0x5a>
 8014442:	68c3      	ldr	r3, [r0, #12]
 8014444:	f013 0207 	ands.w	r2, r3, #7
 8014448:	d117      	bne.n	801447a <nema_cl_bind_circular+0x3a>
 801444a:	b4f0      	push	{r4, r5, r6, r7}
 801444c:	4c15      	ldr	r4, [pc, #84]	@ (80144a4 <nema_cl_bind_circular+0x64>)
 801444e:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8014450:	6821      	ldr	r1, [r4, #0]
 8014452:	2b00      	cmp	r3, #0
 8014454:	bf08      	it	eq
 8014456:	4603      	moveq	r3, r0
 8014458:	b141      	cbz	r1, 801446c <nema_cl_bind_circular+0x2c>
 801445a:	e9d1 5004 	ldrd	r5, r0, [r1, #16]
 801445e:	1c46      	adds	r6, r0, #1
 8014460:	42ae      	cmp	r6, r5
 8014462:	db0e      	blt.n	8014482 <nema_cl_bind_circular+0x42>
 8014464:	698a      	ldr	r2, [r1, #24]
 8014466:	f022 0220 	bic.w	r2, r2, #32
 801446a:	618a      	str	r2, [r1, #24]
 801446c:	699a      	ldr	r2, [r3, #24]
 801446e:	6023      	str	r3, [r4, #0]
 8014470:	f042 0220 	orr.w	r2, r2, #32
 8014474:	619a      	str	r2, [r3, #24]
 8014476:	bcf0      	pop	{r4, r5, r6, r7}
 8014478:	4770      	bx	lr
 801447a:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 801447e:	f7fe baa1 	b.w	80129c4 <nema_set_error>
 8014482:	f44f 27a0 	mov.w	r7, #327680	@ 0x50000
 8014486:	688d      	ldr	r5, [r1, #8]
 8014488:	eb05 0680 	add.w	r6, r5, r0, lsl #2
 801448c:	f845 7020 	str.w	r7, [r5, r0, lsl #2]
 8014490:	6072      	str	r2, [r6, #4]
 8014492:	698a      	ldr	r2, [r1, #24]
 8014494:	f022 0208 	bic.w	r2, r2, #8
 8014498:	e7e5      	b.n	8014466 <nema_cl_bind_circular+0x26>
 801449a:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 801449e:	f7fe ba91 	b.w	80129c4 <nema_set_error>
 80144a2:	bf00      	nop
 80144a4:	2004c148 	.word	0x2004c148

080144a8 <nema_cl_unbind>:
 80144a8:	4910      	ldr	r1, [pc, #64]	@ (80144ec <nema_cl_unbind+0x44>)
 80144aa:	680b      	ldr	r3, [r1, #0]
 80144ac:	b1d3      	cbz	r3, 80144e4 <nema_cl_unbind+0x3c>
 80144ae:	b430      	push	{r4, r5}
 80144b0:	e9d3 0204 	ldrd	r0, r2, [r3, #16]
 80144b4:	1c54      	adds	r4, r2, #1
 80144b6:	4284      	cmp	r4, r0
 80144b8:	db07      	blt.n	80144ca <nema_cl_unbind+0x22>
 80144ba:	699a      	ldr	r2, [r3, #24]
 80144bc:	f022 0220 	bic.w	r2, r2, #32
 80144c0:	619a      	str	r2, [r3, #24]
 80144c2:	2300      	movs	r3, #0
 80144c4:	600b      	str	r3, [r1, #0]
 80144c6:	bc30      	pop	{r4, r5}
 80144c8:	4770      	bx	lr
 80144ca:	f44f 25a0 	mov.w	r5, #327680	@ 0x50000
 80144ce:	2400      	movs	r4, #0
 80144d0:	6898      	ldr	r0, [r3, #8]
 80144d2:	f840 5022 	str.w	r5, [r0, r2, lsl #2]
 80144d6:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 80144da:	6054      	str	r4, [r2, #4]
 80144dc:	699a      	ldr	r2, [r3, #24]
 80144de:	f022 0208 	bic.w	r2, r2, #8
 80144e2:	e7eb      	b.n	80144bc <nema_cl_unbind+0x14>
 80144e4:	2300      	movs	r3, #0
 80144e6:	600b      	str	r3, [r1, #0]
 80144e8:	4770      	bx	lr
 80144ea:	bf00      	nop
 80144ec:	2004c148 	.word	0x2004c148

080144f0 <nema_cl_submit_no_irq>:
 80144f0:	2800      	cmp	r0, #0
 80144f2:	d05b      	beq.n	80145ac <nema_cl_submit_no_irq+0xbc>
 80144f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80144f6:	6983      	ldr	r3, [r0, #24]
 80144f8:	4605      	mov	r5, r0
 80144fa:	069a      	lsls	r2, r3, #26
 80144fc:	d51f      	bpl.n	801453e <nema_cl_submit_no_irq+0x4e>
 80144fe:	6902      	ldr	r2, [r0, #16]
 8014500:	6946      	ldr	r6, [r0, #20]
 8014502:	2a00      	cmp	r2, #0
 8014504:	bfb8      	it	lt
 8014506:	3203      	addlt	r2, #3
 8014508:	1092      	asrs	r2, r2, #2
 801450a:	0054      	lsls	r4, r2, #1
 801450c:	68c7      	ldr	r7, [r0, #12]
 801450e:	42a6      	cmp	r6, r4
 8014510:	bfa4      	itt	ge
 8014512:	1b36      	subge	r6, r6, r4
 8014514:	eb07 07c2 	addge.w	r7, r7, r2, lsl #3
 8014518:	071b      	lsls	r3, r3, #28
 801451a:	d54b      	bpl.n	80145b4 <nema_cl_submit_no_irq+0xc4>
 801451c:	69e8      	ldr	r0, [r5, #28]
 801451e:	2800      	cmp	r0, #0
 8014520:	da3f      	bge.n	80145a2 <nema_cl_submit_no_irq+0xb2>
 8014522:	f04f 33ff 	mov.w	r3, #4294967295
 8014526:	61eb      	str	r3, [r5, #28]
 8014528:	4631      	mov	r1, r6
 801452a:	4638      	mov	r0, r7
 801452c:	f7fe f836 	bl	801259c <nema_rb_submit_cmdlist2>
 8014530:	696b      	ldr	r3, [r5, #20]
 8014532:	61e8      	str	r0, [r5, #28]
 8014534:	42a3      	cmp	r3, r4
 8014536:	bfa8      	it	ge
 8014538:	2400      	movge	r4, #0
 801453a:	616c      	str	r4, [r5, #20]
 801453c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801453e:	4604      	mov	r4, r0
 8014540:	f06f 4640 	mvn.w	r6, #3221225472	@ 0xc0000000
 8014544:	e012      	b.n	801456c <nema_cl_submit_no_irq+0x7c>
 8014546:	6923      	ldr	r3, [r4, #16]
 8014548:	6949      	ldr	r1, [r1, #20]
 801454a:	4433      	add	r3, r6
 801454c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8014550:	69a3      	ldr	r3, [r4, #24]
 8014552:	4620      	mov	r0, r4
 8014554:	f023 0308 	bic.w	r3, r3, #8
 8014558:	61a3      	str	r3, [r4, #24]
 801455a:	f7ed ffbb 	bl	80024d4 <nema_buffer_flush>
 801455e:	69a3      	ldr	r3, [r4, #24]
 8014560:	f043 0308 	orr.w	r3, r3, #8
 8014564:	61a3      	str	r3, [r4, #24]
 8014566:	6a24      	ldr	r4, [r4, #32]
 8014568:	b134      	cbz	r4, 8014578 <nema_cl_submit_no_irq+0x88>
 801456a:	69a3      	ldr	r3, [r4, #24]
 801456c:	0758      	lsls	r0, r3, #29
 801456e:	68a2      	ldr	r2, [r4, #8]
 8014570:	6a21      	ldr	r1, [r4, #32]
 8014572:	d4e8      	bmi.n	8014546 <nema_cl_submit_no_irq+0x56>
 8014574:	071b      	lsls	r3, r3, #28
 8014576:	d50c      	bpl.n	8014592 <nema_cl_submit_no_irq+0xa2>
 8014578:	2000      	movs	r0, #0
 801457a:	f7ed ffac 	bl	80024d6 <nema_mutex_lock>
 801457e:	6969      	ldr	r1, [r5, #20]
 8014580:	4628      	mov	r0, r5
 8014582:	f7fe f88f 	bl	80126a4 <nema_rb_submit_cmdlist>
 8014586:	61e8      	str	r0, [r5, #28]
 8014588:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801458c:	2000      	movs	r0, #0
 801458e:	f7ed bfa4 	b.w	80024da <nema_mutex_unlock>
 8014592:	4620      	mov	r0, r4
 8014594:	f7ed ff9e 	bl	80024d4 <nema_buffer_flush>
 8014598:	69a3      	ldr	r3, [r4, #24]
 801459a:	f043 0308 	orr.w	r3, r3, #8
 801459e:	61a3      	str	r3, [r4, #24]
 80145a0:	e7ea      	b.n	8014578 <nema_cl_submit_no_irq+0x88>
 80145a2:	f7ed fed1 	bl	8002348 <nema_wait_irq_cl>
 80145a6:	2800      	cmp	r0, #0
 80145a8:	dabb      	bge.n	8014522 <nema_cl_submit_no_irq+0x32>
 80145aa:	e7bd      	b.n	8014528 <nema_cl_submit_no_irq+0x38>
 80145ac:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 80145b0:	f7fe ba08 	b.w	80129c4 <nema_set_error>
 80145b4:	f7ed ff8e 	bl	80024d4 <nema_buffer_flush>
 80145b8:	69ab      	ldr	r3, [r5, #24]
 80145ba:	f043 0308 	orr.w	r3, r3, #8
 80145be:	61ab      	str	r3, [r5, #24]
 80145c0:	e7ac      	b.n	801451c <nema_cl_submit_no_irq+0x2c>
 80145c2:	bf00      	nop

080145c4 <nema_cl_get_space>:
 80145c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80145c6:	4e2d      	ldr	r6, [pc, #180]	@ (801467c <nema_cl_get_space+0xb8>)
 80145c8:	6834      	ldr	r4, [r6, #0]
 80145ca:	2c00      	cmp	r4, #0
 80145cc:	d039      	beq.n	8014642 <nema_cl_get_space+0x7e>
 80145ce:	69a7      	ldr	r7, [r4, #24]
 80145d0:	4605      	mov	r5, r0
 80145d2:	f027 0208 	bic.w	r2, r7, #8
 80145d6:	f017 0720 	ands.w	r7, r7, #32
 80145da:	61a2      	str	r2, [r4, #24]
 80145dc:	6923      	ldr	r3, [r4, #16]
 80145de:	6962      	ldr	r2, [r4, #20]
 80145e0:	d016      	beq.n	8014610 <nema_cl_get_space+0x4c>
 80145e2:	2b00      	cmp	r3, #0
 80145e4:	bfb8      	it	lt
 80145e6:	3303      	addlt	r3, #3
 80145e8:	109b      	asrs	r3, r3, #2
 80145ea:	005b      	lsls	r3, r3, #1
 80145ec:	4293      	cmp	r3, r2
 80145ee:	bfcc      	ite	gt
 80145f0:	4611      	movgt	r1, r2
 80145f2:	1ad1      	suble	r1, r2, r3
 80145f4:	1a5b      	subs	r3, r3, r1
 80145f6:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80145fa:	1c41      	adds	r1, r0, #1
 80145fc:	ebb1 0f63 	cmp.w	r1, r3, asr #1
 8014600:	da1a      	bge.n	8014638 <nema_cl_get_space+0x74>
 8014602:	68a0      	ldr	r0, [r4, #8]
 8014604:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8014608:	6165      	str	r5, [r4, #20]
 801460a:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 801460e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014610:	1a9b      	subs	r3, r3, r2
 8014612:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8014616:	105b      	asrs	r3, r3, #1
 8014618:	3b01      	subs	r3, #1
 801461a:	4283      	cmp	r3, r0
 801461c:	dcf1      	bgt.n	8014602 <nema_cl_get_space+0x3e>
 801461e:	f7ff fe2f 	bl	8014280 <nema_extend_bound_cl>
 8014622:	2800      	cmp	r0, #0
 8014624:	db27      	blt.n	8014676 <nema_cl_get_space+0xb2>
 8014626:	6834      	ldr	r4, [r6, #0]
 8014628:	6962      	ldr	r2, [r4, #20]
 801462a:	68a0      	ldr	r0, [r4, #8]
 801462c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8014630:	6165      	str	r5, [r4, #20]
 8014632:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 8014636:	e7ea      	b.n	801460e <nema_cl_get_space+0x4a>
 8014638:	b942      	cbnz	r2, 801464c <nema_cl_get_space+0x88>
 801463a:	f04f 33ff 	mov.w	r3, #4294967295
 801463e:	61e3      	str	r3, [r4, #28]
 8014640:	e7df      	b.n	8014602 <nema_cl_get_space+0x3e>
 8014642:	2080      	movs	r0, #128	@ 0x80
 8014644:	f7fe f9be 	bl	80129c4 <nema_set_error>
 8014648:	4620      	mov	r0, r4
 801464a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801464c:	4620      	mov	r0, r4
 801464e:	f7ff ff4f 	bl	80144f0 <nema_cl_submit_no_irq>
 8014652:	69e0      	ldr	r0, [r4, #28]
 8014654:	f7fe f8f2 	bl	801283c <nema_rb_submit_cl_id>
 8014658:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 801465c:	69e0      	ldr	r0, [r4, #28]
 801465e:	4298      	cmp	r0, r3
 8014660:	d1e1      	bne.n	8014626 <nema_cl_get_space+0x62>
 8014662:	f7ed fe71 	bl	8002348 <nema_wait_irq_cl>
 8014666:	2800      	cmp	r0, #0
 8014668:	dbdd      	blt.n	8014626 <nema_cl_get_space+0x62>
 801466a:	f04f 33ff 	mov.w	r3, #4294967295
 801466e:	61e3      	str	r3, [r4, #28]
 8014670:	6834      	ldr	r4, [r6, #0]
 8014672:	6962      	ldr	r2, [r4, #20]
 8014674:	e7c5      	b.n	8014602 <nema_cl_get_space+0x3e>
 8014676:	4638      	mov	r0, r7
 8014678:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801467a:	bf00      	nop
 801467c:	2004c148 	.word	0x2004c148

08014680 <nema_cl_add_cmd>:
 8014680:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014684:	4e30      	ldr	r6, [pc, #192]	@ (8014748 <nema_cl_add_cmd+0xc8>)
 8014686:	4607      	mov	r7, r0
 8014688:	6834      	ldr	r4, [r6, #0]
 801468a:	4688      	mov	r8, r1
 801468c:	b35c      	cbz	r4, 80146e6 <nema_cl_add_cmd+0x66>
 801468e:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
 8014692:	f025 0308 	bic.w	r3, r5, #8
 8014696:	f015 0020 	ands.w	r0, r5, #32
 801469a:	61a3      	str	r3, [r4, #24]
 801469c:	6923      	ldr	r3, [r4, #16]
 801469e:	d016      	beq.n	80146ce <nema_cl_add_cmd+0x4e>
 80146a0:	2b00      	cmp	r3, #0
 80146a2:	bfb8      	it	lt
 80146a4:	3303      	addlt	r3, #3
 80146a6:	109b      	asrs	r3, r3, #2
 80146a8:	005b      	lsls	r3, r3, #1
 80146aa:	4293      	cmp	r3, r2
 80146ac:	bfcc      	ite	gt
 80146ae:	4611      	movgt	r1, r2
 80146b0:	1ad1      	suble	r1, r2, r3
 80146b2:	1a5b      	subs	r3, r3, r1
 80146b4:	2b03      	cmp	r3, #3
 80146b6:	dd2a      	ble.n	801470e <nema_cl_add_cmd+0x8e>
 80146b8:	1c51      	adds	r1, r2, #1
 80146ba:	68a0      	ldr	r0, [r4, #8]
 80146bc:	1c93      	adds	r3, r2, #2
 80146be:	f840 7022 	str.w	r7, [r0, r2, lsl #2]
 80146c2:	68a2      	ldr	r2, [r4, #8]
 80146c4:	f842 8021 	str.w	r8, [r2, r1, lsl #2]
 80146c8:	6163      	str	r3, [r4, #20]
 80146ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80146ce:	07a9      	lsls	r1, r5, #30
 80146d0:	d515      	bpl.n	80146fe <nema_cl_add_cmd+0x7e>
 80146d2:	1d11      	adds	r1, r2, #4
 80146d4:	4299      	cmp	r1, r3
 80146d6:	dbef      	blt.n	80146b8 <nema_cl_add_cmd+0x38>
 80146d8:	f7ff fdd2 	bl	8014280 <nema_extend_bound_cl>
 80146dc:	2800      	cmp	r0, #0
 80146de:	dbf4      	blt.n	80146ca <nema_cl_add_cmd+0x4a>
 80146e0:	6834      	ldr	r4, [r6, #0]
 80146e2:	6962      	ldr	r2, [r4, #20]
 80146e4:	e7e8      	b.n	80146b8 <nema_cl_add_cmd+0x38>
 80146e6:	4620      	mov	r0, r4
 80146e8:	f7ed fef5 	bl	80024d6 <nema_mutex_lock>
 80146ec:	4638      	mov	r0, r7
 80146ee:	4641      	mov	r1, r8
 80146f0:	f7fd ffdc 	bl	80126ac <nema_rb_inline_cmd>
 80146f4:	4620      	mov	r0, r4
 80146f6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80146fa:	f7ed beee 	b.w	80024da <nema_mutex_unlock>
 80146fe:	1c51      	adds	r1, r2, #1
 8014700:	4299      	cmp	r1, r3
 8014702:	dbda      	blt.n	80146ba <nema_cl_add_cmd+0x3a>
 8014704:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8014708:	2008      	movs	r0, #8
 801470a:	f7fe b95b 	b.w	80129c4 <nema_set_error>
 801470e:	b922      	cbnz	r2, 801471a <nema_cl_add_cmd+0x9a>
 8014710:	f04f 33ff 	mov.w	r3, #4294967295
 8014714:	2101      	movs	r1, #1
 8014716:	61e3      	str	r3, [r4, #28]
 8014718:	e7cf      	b.n	80146ba <nema_cl_add_cmd+0x3a>
 801471a:	4620      	mov	r0, r4
 801471c:	f7ff fee8 	bl	80144f0 <nema_cl_submit_no_irq>
 8014720:	69e0      	ldr	r0, [r4, #28]
 8014722:	f7fe f88b 	bl	801283c <nema_rb_submit_cl_id>
 8014726:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 801472a:	69e0      	ldr	r0, [r4, #28]
 801472c:	4298      	cmp	r0, r3
 801472e:	d1d7      	bne.n	80146e0 <nema_cl_add_cmd+0x60>
 8014730:	f7ed fe0a 	bl	8002348 <nema_wait_irq_cl>
 8014734:	2800      	cmp	r0, #0
 8014736:	dbd3      	blt.n	80146e0 <nema_cl_add_cmd+0x60>
 8014738:	f04f 33ff 	mov.w	r3, #4294967295
 801473c:	61e3      	str	r3, [r4, #28]
 801473e:	6834      	ldr	r4, [r6, #0]
 8014740:	6962      	ldr	r2, [r4, #20]
 8014742:	1c51      	adds	r1, r2, #1
 8014744:	e7b9      	b.n	80146ba <nema_cl_add_cmd+0x3a>
 8014746:	bf00      	nop
 8014748:	2004c148 	.word	0x2004c148

0801474c <nema_cl_submit>:
 801474c:	2800      	cmp	r0, #0
 801474e:	d05e      	beq.n	801480e <nema_cl_submit+0xc2>
 8014750:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014752:	6944      	ldr	r4, [r0, #20]
 8014754:	4605      	mov	r5, r0
 8014756:	b91c      	cbnz	r4, 8014760 <nema_cl_submit+0x14>
 8014758:	f04f 33ff 	mov.w	r3, #4294967295
 801475c:	61eb      	str	r3, [r5, #28]
 801475e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014760:	6983      	ldr	r3, [r0, #24]
 8014762:	069a      	lsls	r2, r3, #26
 8014764:	d529      	bpl.n	80147ba <nema_cl_submit+0x6e>
 8014766:	6902      	ldr	r2, [r0, #16]
 8014768:	68c7      	ldr	r7, [r0, #12]
 801476a:	2a00      	cmp	r2, #0
 801476c:	bfb8      	it	lt
 801476e:	3203      	addlt	r2, #3
 8014770:	1092      	asrs	r2, r2, #2
 8014772:	0056      	lsls	r6, r2, #1
 8014774:	42b4      	cmp	r4, r6
 8014776:	bfa4      	itt	ge
 8014778:	1ba4      	subge	r4, r4, r6
 801477a:	eb07 07c2 	addge.w	r7, r7, r2, lsl #3
 801477e:	071b      	lsls	r3, r3, #28
 8014780:	d556      	bpl.n	8014830 <nema_cl_submit+0xe4>
 8014782:	69e8      	ldr	r0, [r5, #28]
 8014784:	2800      	cmp	r0, #0
 8014786:	da46      	bge.n	8014816 <nema_cl_submit+0xca>
 8014788:	f04f 33ff 	mov.w	r3, #4294967295
 801478c:	61eb      	str	r3, [r5, #28]
 801478e:	4621      	mov	r1, r4
 8014790:	4638      	mov	r0, r7
 8014792:	f7fd ff03 	bl	801259c <nema_rb_submit_cmdlist2>
 8014796:	696b      	ldr	r3, [r5, #20]
 8014798:	61e8      	str	r0, [r5, #28]
 801479a:	429e      	cmp	r6, r3
 801479c:	bfd8      	it	le
 801479e:	2600      	movle	r6, #0
 80147a0:	616e      	str	r6, [r5, #20]
 80147a2:	f7fe f84b 	bl	801283c <nema_rb_submit_cl_id>
 80147a6:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 80147aa:	69e8      	ldr	r0, [r5, #28]
 80147ac:	4298      	cmp	r0, r3
 80147ae:	d1d6      	bne.n	801475e <nema_cl_submit+0x12>
 80147b0:	f7ed fdca 	bl	8002348 <nema_wait_irq_cl>
 80147b4:	2800      	cmp	r0, #0
 80147b6:	dacf      	bge.n	8014758 <nema_cl_submit+0xc>
 80147b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80147ba:	4604      	mov	r4, r0
 80147bc:	f06f 4640 	mvn.w	r6, #3221225472	@ 0xc0000000
 80147c0:	e012      	b.n	80147e8 <nema_cl_submit+0x9c>
 80147c2:	6923      	ldr	r3, [r4, #16]
 80147c4:	6949      	ldr	r1, [r1, #20]
 80147c6:	4433      	add	r3, r6
 80147c8:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 80147cc:	69a3      	ldr	r3, [r4, #24]
 80147ce:	4620      	mov	r0, r4
 80147d0:	f023 0308 	bic.w	r3, r3, #8
 80147d4:	61a3      	str	r3, [r4, #24]
 80147d6:	f7ed fe7d 	bl	80024d4 <nema_buffer_flush>
 80147da:	69a3      	ldr	r3, [r4, #24]
 80147dc:	f043 0308 	orr.w	r3, r3, #8
 80147e0:	61a3      	str	r3, [r4, #24]
 80147e2:	6a24      	ldr	r4, [r4, #32]
 80147e4:	b134      	cbz	r4, 80147f4 <nema_cl_submit+0xa8>
 80147e6:	69a3      	ldr	r3, [r4, #24]
 80147e8:	0758      	lsls	r0, r3, #29
 80147ea:	68a2      	ldr	r2, [r4, #8]
 80147ec:	6a21      	ldr	r1, [r4, #32]
 80147ee:	d4e8      	bmi.n	80147c2 <nema_cl_submit+0x76>
 80147f0:	071b      	lsls	r3, r3, #28
 80147f2:	d515      	bpl.n	8014820 <nema_cl_submit+0xd4>
 80147f4:	2000      	movs	r0, #0
 80147f6:	f7ed fe6e 	bl	80024d6 <nema_mutex_lock>
 80147fa:	6969      	ldr	r1, [r5, #20]
 80147fc:	4628      	mov	r0, r5
 80147fe:	f7fd ff51 	bl	80126a4 <nema_rb_submit_cmdlist>
 8014802:	61e8      	str	r0, [r5, #28]
 8014804:	2000      	movs	r0, #0
 8014806:	f7ed fe68 	bl	80024da <nema_mutex_unlock>
 801480a:	69e8      	ldr	r0, [r5, #28]
 801480c:	e7c9      	b.n	80147a2 <nema_cl_submit+0x56>
 801480e:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 8014812:	f7fe b8d7 	b.w	80129c4 <nema_set_error>
 8014816:	f7ed fd97 	bl	8002348 <nema_wait_irq_cl>
 801481a:	2800      	cmp	r0, #0
 801481c:	dab4      	bge.n	8014788 <nema_cl_submit+0x3c>
 801481e:	e7b6      	b.n	801478e <nema_cl_submit+0x42>
 8014820:	4620      	mov	r0, r4
 8014822:	f7ed fe57 	bl	80024d4 <nema_buffer_flush>
 8014826:	69a3      	ldr	r3, [r4, #24]
 8014828:	f043 0308 	orr.w	r3, r3, #8
 801482c:	61a3      	str	r3, [r4, #24]
 801482e:	e7e1      	b.n	80147f4 <nema_cl_submit+0xa8>
 8014830:	f7ed fe50 	bl	80024d4 <nema_buffer_flush>
 8014834:	69ab      	ldr	r3, [r5, #24]
 8014836:	f043 0308 	orr.w	r3, r3, #8
 801483a:	61ab      	str	r3, [r5, #24]
 801483c:	e7a1      	b.n	8014782 <nema_cl_submit+0x36>
 801483e:	bf00      	nop

08014840 <nema_cl_wait>:
 8014840:	b510      	push	{r4, lr}
 8014842:	b170      	cbz	r0, 8014862 <nema_cl_wait+0x22>
 8014844:	4604      	mov	r4, r0
 8014846:	69c0      	ldr	r0, [r0, #28]
 8014848:	2800      	cmp	r0, #0
 801484a:	da04      	bge.n	8014856 <nema_cl_wait+0x16>
 801484c:	f04f 33ff 	mov.w	r3, #4294967295
 8014850:	61e3      	str	r3, [r4, #28]
 8014852:	2000      	movs	r0, #0
 8014854:	bd10      	pop	{r4, pc}
 8014856:	f7ed fd77 	bl	8002348 <nema_wait_irq_cl>
 801485a:	2800      	cmp	r0, #0
 801485c:	daf6      	bge.n	801484c <nema_cl_wait+0xc>
 801485e:	2000      	movs	r0, #0
 8014860:	bd10      	pop	{r4, pc}
 8014862:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 8014866:	f7fe f8ad 	bl	80129c4 <nema_set_error>
 801486a:	f04f 30ff 	mov.w	r0, #4294967295
 801486e:	bd10      	pop	{r4, pc}

08014870 <nema_blender_init>:
 8014870:	b530      	push	{r4, r5, lr}
 8014872:	b085      	sub	sp, #20
 8014874:	466d      	mov	r5, sp
 8014876:	2418      	movs	r4, #24
 8014878:	4b11      	ldr	r3, [pc, #68]	@ (80148c0 <nema_blender_init+0x50>)
 801487a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 801487c:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8014880:	2101      	movs	r1, #1
 8014882:	4622      	mov	r2, r4
 8014884:	4628      	mov	r0, r5
 8014886:	440c      	add	r4, r1
 8014888:	f7ff f8be 	bl	8013a08 <nema_load_frag_shader>
 801488c:	2c1f      	cmp	r4, #31
 801488e:	d1f7      	bne.n	8014880 <nema_blender_init+0x10>
 8014890:	4622      	mov	r2, r4
 8014892:	2101      	movs	r1, #1
 8014894:	a802      	add	r0, sp, #8
 8014896:	f7ff f8b7 	bl	8013a08 <nema_load_frag_shader>
 801489a:	f7fe ff4d 	bl	8013738 <nema_readHwConfig>
 801489e:	f000 5080 	and.w	r0, r0, #268435456	@ 0x10000000
 80148a2:	2800      	cmp	r0, #0
 80148a4:	bf14      	ite	ne
 80148a6:	2201      	movne	r2, #1
 80148a8:	2200      	moveq	r2, #0
 80148aa:	4b06      	ldr	r3, [pc, #24]	@ (80148c4 <nema_blender_init+0x54>)
 80148ac:	701a      	strb	r2, [r3, #0]
 80148ae:	d005      	beq.n	80148bc <nema_blender_init+0x4c>
 80148b0:	2200      	movs	r2, #0
 80148b2:	4b05      	ldr	r3, [pc, #20]	@ (80148c8 <nema_blender_init+0x58>)
 80148b4:	2001      	movs	r0, #1
 80148b6:	601a      	str	r2, [r3, #0]
 80148b8:	f7ff f8c6 	bl	8013a48 <nema_set_rop_blend_mode>
 80148bc:	b005      	add	sp, #20
 80148be:	bd30      	pop	{r4, r5, pc}
 80148c0:	08025fe4 	.word	0x08025fe4
 80148c4:	2004c14d 	.word	0x2004c14d
 80148c8:	200001d0 	.word	0x200001d0

080148cc <nema_set_blend>:
 80148cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80148d0:	4ca5      	ldr	r4, [pc, #660]	@ (8014b68 <nema_set_blend+0x29c>)
 80148d2:	4683      	mov	fp, r0
 80148d4:	7820      	ldrb	r0, [r4, #0]
 80148d6:	b0a7      	sub	sp, #156	@ 0x9c
 80148d8:	9102      	str	r1, [sp, #8]
 80148da:	9200      	str	r2, [sp, #0]
 80148dc:	2800      	cmp	r0, #0
 80148de:	f040 8233 	bne.w	8014d48 <nema_set_blend+0x47c>
 80148e2:	469a      	mov	sl, r3
 80148e4:	465c      	mov	r4, fp
 80148e6:	ea4f 535b 	mov.w	r3, fp, lsr #21
 80148ea:	055b      	lsls	r3, r3, #21
 80148ec:	930e      	str	r3, [sp, #56]	@ 0x38
 80148ee:	f40b 0300 	and.w	r3, fp, #8388608	@ 0x800000
 80148f2:	930c      	str	r3, [sp, #48]	@ 0x30
 80148f4:	f40b 0380 	and.w	r3, fp, #4194304	@ 0x400000
 80148f8:	f00b 010f 	and.w	r1, fp, #15
 80148fc:	930d      	str	r3, [sp, #52]	@ 0x34
 80148fe:	f40b 1300 	and.w	r3, fp, #2097152	@ 0x200000
 8014902:	930b      	str	r3, [sp, #44]	@ 0x2c
 8014904:	9101      	str	r1, [sp, #4]
 8014906:	b2d2      	uxtb	r2, r2
 8014908:	fa5f f38a 	uxtb.w	r3, sl
 801490c:	f3cb 2903 	ubfx	r9, fp, #8, #4
 8014910:	f00b 7100 	and.w	r1, fp, #33554432	@ 0x2000000
 8014914:	f3cb 6840 	ubfx	r8, fp, #25, #1
 8014918:	9d02      	ldr	r5, [sp, #8]
 801491a:	b2e8      	uxtb	r0, r5
 801491c:	2804      	cmp	r0, #4
 801491e:	4628      	mov	r0, r5
 8014920:	bf28      	it	cs
 8014922:	2000      	movcs	r0, #0
 8014924:	2a04      	cmp	r2, #4
 8014926:	9a00      	ldr	r2, [sp, #0]
 8014928:	bf28      	it	cs
 801492a:	f04f 32ff 	movcs.w	r2, #4294967295
 801492e:	2b04      	cmp	r3, #4
 8014930:	9002      	str	r0, [sp, #8]
 8014932:	9200      	str	r2, [sp, #0]
 8014934:	bf28      	it	cs
 8014936:	4682      	movcs	sl, r0
 8014938:	4602      	mov	r2, r0
 801493a:	bf34      	ite	cc
 801493c:	4650      	movcc	r0, sl
 801493e:	2002      	movcs	r0, #2
 8014940:	4b8a      	ldr	r3, [pc, #552]	@ (8014b6c <nema_set_blend+0x2a0>)
 8014942:	9010      	str	r0, [sp, #64]	@ 0x40
 8014944:	781b      	ldrb	r3, [r3, #0]
 8014946:	b14b      	cbz	r3, 801495c <nema_set_blend+0x90>
 8014948:	f01b 7380 	ands.w	r3, fp, #16777216	@ 0x1000000
 801494c:	9303      	str	r3, [sp, #12]
 801494e:	d102      	bne.n	8014956 <nema_set_blend+0x8a>
 8014950:	4552      	cmp	r2, sl
 8014952:	f000 830c 	beq.w	8014f6e <nema_set_blend+0x6a2>
 8014956:	2001      	movs	r0, #1
 8014958:	f7ff f876 	bl	8013a48 <nema_set_rop_blend_mode>
 801495c:	2c00      	cmp	r4, #0
 801495e:	bfac      	ite	ge
 8014960:	4642      	movge	r2, r8
 8014962:	2201      	movlt	r2, #1
 8014964:	4b82      	ldr	r3, [pc, #520]	@ (8014b70 <nema_set_blend+0x2a4>)
 8014966:	f1bb 0f01 	cmp.w	fp, #1
 801496a:	789b      	ldrb	r3, [r3, #2]
 801496c:	9207      	str	r2, [sp, #28]
 801496e:	9305      	str	r3, [sp, #20]
 8014970:	f000 80e0 	beq.w	8014b34 <nema_set_blend+0x268>
 8014974:	f00b 4380 	and.w	r3, fp, #1073741824	@ 0x40000000
 8014978:	9315      	str	r3, [sp, #84]	@ 0x54
 801497a:	f3cb 7380 	ubfx	r3, fp, #30, #1
 801497e:	9306      	str	r3, [sp, #24]
 8014980:	f00b 5300 	and.w	r3, fp, #536870912	@ 0x20000000
 8014984:	9309      	str	r3, [sp, #36]	@ 0x24
 8014986:	9b01      	ldr	r3, [sp, #4]
 8014988:	f00b 5280 	and.w	r2, fp, #268435456	@ 0x10000000
 801498c:	2b05      	cmp	r3, #5
 801498e:	f240 80df 	bls.w	8014b50 <nema_set_blend+0x284>
 8014992:	2301      	movs	r3, #1
 8014994:	930a      	str	r3, [sp, #40]	@ 0x28
 8014996:	9304      	str	r3, [sp, #16]
 8014998:	2303      	movs	r3, #3
 801499a:	4976      	ldr	r1, [pc, #472]	@ (8014b74 <nema_set_blend+0x2a8>)
 801499c:	9303      	str	r3, [sp, #12]
 801499e:	9108      	str	r1, [sp, #32]
 80149a0:	4d75      	ldr	r5, [pc, #468]	@ (8014b78 <nema_set_blend+0x2ac>)
 80149a2:	2a00      	cmp	r2, #0
 80149a4:	4b75      	ldr	r3, [pc, #468]	@ (8014b7c <nema_set_blend+0x2b0>)
 80149a6:	bf18      	it	ne
 80149a8:	462b      	movne	r3, r5
 80149aa:	f105 4500 	add.w	r5, r5, #2147483648	@ 0x80000000
 80149ae:	f105 0502 	add.w	r5, r5, #2
 80149b2:	9312      	str	r3, [sp, #72]	@ 0x48
 80149b4:	4b72      	ldr	r3, [pc, #456]	@ (8014b80 <nema_set_blend+0x2b4>)
 80149b6:	bf08      	it	eq
 80149b8:	462b      	moveq	r3, r5
 80149ba:	f8df e20c 	ldr.w	lr, [pc, #524]	@ 8014bc8 <nema_set_blend+0x2fc>
 80149be:	f8df c20c 	ldr.w	ip, [pc, #524]	@ 8014bcc <nema_set_blend+0x300>
 80149c2:	9311      	str	r3, [sp, #68]	@ 0x44
 80149c4:	bf14      	ite	ne
 80149c6:	4673      	movne	r3, lr
 80149c8:	4663      	moveq	r3, ip
 80149ca:	4f6e      	ldr	r7, [pc, #440]	@ (8014b84 <nema_set_blend+0x2b8>)
 80149cc:	9314      	str	r3, [sp, #80]	@ 0x50
 80149ce:	4b6e      	ldr	r3, [pc, #440]	@ (8014b88 <nema_set_blend+0x2bc>)
 80149d0:	bf18      	it	ne
 80149d2:	463b      	movne	r3, r7
 80149d4:	f5a5 25c8 	sub.w	r5, r5, #409600	@ 0x64000
 80149d8:	9313      	str	r3, [sp, #76]	@ 0x4c
 80149da:	4b6c      	ldr	r3, [pc, #432]	@ (8014b8c <nema_set_blend+0x2c0>)
 80149dc:	f1a5 0542 	sub.w	r5, r5, #66	@ 0x42
 80149e0:	496b      	ldr	r1, [pc, #428]	@ (8014b90 <nema_set_blend+0x2c4>)
 80149e2:	bf18      	it	ne
 80149e4:	4619      	movne	r1, r3
 80149e6:	f1a3 033e 	sub.w	r3, r3, #62	@ 0x3e
 80149ea:	bf18      	it	ne
 80149ec:	462b      	movne	r3, r5
 80149ee:	4e69      	ldr	r6, [pc, #420]	@ (8014b94 <nema_set_blend+0x2c8>)
 80149f0:	4f69      	ldr	r7, [pc, #420]	@ (8014b98 <nema_set_blend+0x2cc>)
 80149f2:	461d      	mov	r5, r3
 80149f4:	4b69      	ldr	r3, [pc, #420]	@ (8014b9c <nema_set_blend+0x2d0>)
 80149f6:	486a      	ldr	r0, [pc, #424]	@ (8014ba0 <nema_set_blend+0x2d4>)
 80149f8:	bf18      	it	ne
 80149fa:	4630      	movne	r0, r6
 80149fc:	f106 4600 	add.w	r6, r6, #2147483648	@ 0x80000000
 8014a00:	f8df c1cc 	ldr.w	ip, [pc, #460]	@ 8014bd0 <nema_set_blend+0x304>
 8014a04:	f506 3650 	add.w	r6, r6, #212992	@ 0x34000
 8014a08:	bf04      	itt	eq
 8014a0a:	46bc      	moveq	ip, r7
 8014a0c:	461e      	moveq	r6, r3
 8014a0e:	f107 4700 	add.w	r7, r7, #2147483648	@ 0x80000000
 8014a12:	f1a3 0340 	sub.w	r3, r3, #64	@ 0x40
 8014a16:	f1a7 0742 	sub.w	r7, r7, #66	@ 0x42
 8014a1a:	bf08      	it	eq
 8014a1c:	461f      	moveq	r7, r3
 8014a1e:	4c61      	ldr	r4, [pc, #388]	@ (8014ba4 <nema_set_blend+0x2d8>)
 8014a20:	f8df e1b0 	ldr.w	lr, [pc, #432]	@ 8014bd4 <nema_set_blend+0x308>
 8014a24:	4a60      	ldr	r2, [pc, #384]	@ (8014ba8 <nema_set_blend+0x2dc>)
 8014a26:	bf18      	it	ne
 8014a28:	4622      	movne	r2, r4
 8014a2a:	f504 3450 	add.w	r4, r4, #212992	@ 0x34000
 8014a2e:	bf08      	it	eq
 8014a30:	4674      	moveq	r4, lr
 8014a32:	f8dd e018 	ldr.w	lr, [sp, #24]
 8014a36:	f1b8 0f00 	cmp.w	r8, #0
 8014a3a:	f040 8109 	bne.w	8014c50 <nema_set_blend+0x384>
 8014a3e:	9b07      	ldr	r3, [sp, #28]
 8014a40:	2b00      	cmp	r3, #0
 8014a42:	bf0c      	ite	eq
 8014a44:	2300      	moveq	r3, #0
 8014a46:	f44f 1300 	movne.w	r3, #2097152	@ 0x200000
 8014a4a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8014a4c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014a4e:	2b00      	cmp	r3, #0
 8014a50:	f040 8105 	bne.w	8014c5e <nema_set_blend+0x392>
 8014a54:	f01b 6f80 	tst.w	fp, #67108864	@ 0x4000000
 8014a58:	f000 81b4 	beq.w	8014dc4 <nema_set_blend+0x4f8>
 8014a5c:	4684      	mov	ip, r0
 8014a5e:	460e      	mov	r6, r1
 8014a60:	4614      	mov	r4, r2
 8014a62:	462f      	mov	r7, r5
 8014a64:	f04f 0804 	mov.w	r8, #4
 8014a68:	2200      	movs	r2, #0
 8014a6a:	4850      	ldr	r0, [pc, #320]	@ (8014bac <nema_set_blend+0x2e0>)
 8014a6c:	f00b 53c0 	and.w	r3, fp, #402653184	@ 0x18000000
 8014a70:	4293      	cmp	r3, r2
 8014a72:	f850 302a 	ldr.w	r3, [r0, sl, lsl #2]
 8014a76:	bf18      	it	ne
 8014a78:	463e      	movne	r6, r7
 8014a7a:	9309      	str	r3, [sp, #36]	@ 0x24
 8014a7c:	9b05      	ldr	r3, [sp, #20]
 8014a7e:	bf16      	itet	ne
 8014a80:	46a4      	movne	ip, r4
 8014a82:	270e      	moveq	r7, #14
 8014a84:	270c      	movne	r7, #12
 8014a86:	9216      	str	r2, [sp, #88]	@ 0x58
 8014a88:	2b00      	cmp	r3, #0
 8014a8a:	f000 80eb 	beq.w	8014c64 <nema_set_blend+0x398>
 8014a8e:	4b48      	ldr	r3, [pc, #288]	@ (8014bb0 <nema_set_blend+0x2e4>)
 8014a90:	4948      	ldr	r1, [pc, #288]	@ (8014bb4 <nema_set_blend+0x2e8>)
 8014a92:	9800      	ldr	r0, [sp, #0]
 8014a94:	e9cd 1316 	strd	r1, r3, [sp, #88]	@ 0x58
 8014a98:	1c43      	adds	r3, r0, #1
 8014a9a:	f000 8257 	beq.w	8014f4c <nema_set_blend+0x680>
 8014a9e:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8014aa2:	4b45      	ldr	r3, [pc, #276]	@ (8014bb8 <nema_set_blend+0x2ec>)
 8014aa4:	9204      	str	r2, [sp, #16]
 8014aa6:	ea43 13c0 	orr.w	r3, r3, r0, lsl #7
 8014aaa:	e9cd 3118 	strd	r3, r1, [sp, #96]	@ 0x60
 8014aae:	2203      	movs	r2, #3
 8014ab0:	2102      	movs	r1, #2
 8014ab2:	4c42      	ldr	r4, [pc, #264]	@ (8014bbc <nema_set_blend+0x2f0>)
 8014ab4:	f1b9 0f01 	cmp.w	r9, #1
 8014ab8:	f240 8110 	bls.w	8014cdc <nema_set_blend+0x410>
 8014abc:	9b01      	ldr	r3, [sp, #4]
 8014abe:	2b05      	cmp	r3, #5
 8014ac0:	d803      	bhi.n	8014aca <nema_set_blend+0x1fe>
 8014ac2:	f01b 5f70 	tst.w	fp, #1006632960	@ 0x3c000000
 8014ac6:	f000 8087 	beq.w	8014bd8 <nema_set_blend+0x30c>
 8014aca:	9b03      	ldr	r3, [sp, #12]
 8014acc:	b933      	cbnz	r3, 8014adc <nema_set_blend+0x210>
 8014ace:	f1b9 0f00 	cmp.w	r9, #0
 8014ad2:	d103      	bne.n	8014adc <nema_set_blend+0x210>
 8014ad4:	9b07      	ldr	r3, [sp, #28]
 8014ad6:	2b00      	cmp	r3, #0
 8014ad8:	f000 81ca 	beq.w	8014e70 <nema_set_blend+0x5a4>
 8014adc:	f1b8 0f1d 	cmp.w	r8, #29
 8014ae0:	f000 8150 	beq.w	8014d84 <nema_set_blend+0x4b8>
 8014ae4:	4b36      	ldr	r3, [pc, #216]	@ (8014bc0 <nema_set_blend+0x2f4>)
 8014ae6:	a826      	add	r0, sp, #152	@ 0x98
 8014ae8:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8014aec:	ea43 13ca 	orr.w	r3, r3, sl, lsl #7
 8014af0:	9803      	ldr	r0, [sp, #12]
 8014af2:	ea43 530e 	orr.w	r3, r3, lr, lsl #20
 8014af6:	4303      	orrs	r3, r0
 8014af8:	e941 3c10 	strd	r3, ip, [r1, #-64]	@ 0x40
 8014afc:	1c55      	adds	r5, r2, #1
 8014afe:	f1b9 0f00 	cmp.w	r9, #0
 8014b02:	f040 8150 	bne.w	8014da6 <nema_set_blend+0x4da>
 8014b06:	46ce      	mov	lr, r9
 8014b08:	4b2d      	ldr	r3, [pc, #180]	@ (8014bc0 <nema_set_blend+0x2f4>)
 8014b0a:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 8014b0e:	f8cd 9018 	str.w	r9, [sp, #24]
 8014b12:	9308      	str	r3, [sp, #32]
 8014b14:	9b07      	ldr	r3, [sp, #28]
 8014b16:	2b00      	cmp	r3, #0
 8014b18:	d163      	bne.n	8014be2 <nema_set_blend+0x316>
 8014b1a:	4b2a      	ldr	r3, [pc, #168]	@ (8014bc4 <nema_set_blend+0x2f8>)
 8014b1c:	f8dd a008 	ldr.w	sl, [sp, #8]
 8014b20:	9308      	str	r3, [sp, #32]
 8014b22:	f04f 4600 	mov.w	r6, #2147483648	@ 0x80000000
 8014b26:	9f01      	ldr	r7, [sp, #4]
 8014b28:	e061      	b.n	8014bee <nema_set_blend+0x322>
 8014b2a:	f04f 0900 	mov.w	r9, #0
 8014b2e:	46c8      	mov	r8, r9
 8014b30:	f8cd 901c 	str.w	r9, [sp, #28]
 8014b34:	2b00      	cmp	r3, #0
 8014b36:	f000 8153 	beq.w	8014de0 <nema_set_blend+0x514>
 8014b3a:	9b01      	ldr	r3, [sp, #4]
 8014b3c:	2b05      	cmp	r3, #5
 8014b3e:	f200 8169 	bhi.w	8014e14 <nema_set_blend+0x548>
 8014b42:	2300      	movs	r3, #0
 8014b44:	f04f 0b01 	mov.w	fp, #1
 8014b48:	461a      	mov	r2, r3
 8014b4a:	9306      	str	r3, [sp, #24]
 8014b4c:	9309      	str	r3, [sp, #36]	@ 0x24
 8014b4e:	9315      	str	r3, [sp, #84]	@ 0x54
 8014b50:	9b07      	ldr	r3, [sp, #28]
 8014b52:	2b00      	cmp	r3, #0
 8014b54:	f000 8200 	beq.w	8014f58 <nema_set_blend+0x68c>
 8014b58:	930a      	str	r3, [sp, #40]	@ 0x28
 8014b5a:	4b06      	ldr	r3, [pc, #24]	@ (8014b74 <nema_set_blend+0x2a8>)
 8014b5c:	2001      	movs	r0, #1
 8014b5e:	9308      	str	r3, [sp, #32]
 8014b60:	2303      	movs	r3, #3
 8014b62:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8014b66:	e71b      	b.n	80149a0 <nema_set_blend+0xd4>
 8014b68:	2004c14c 	.word	0x2004c14c
 8014b6c:	2004c14d 	.word	0x2004c14d
 8014b70:	20000060 	.word	0x20000060
 8014b74:	080c0003 	.word	0x080c0003
 8014b78:	000761c5 	.word	0x000761c5
 8014b7c:	000761c7 	.word	0x000761c7
 8014b80:	800761c5 	.word	0x800761c5
 8014b84:	80076185 	.word	0x80076185
 8014b88:	80076187 	.word	0x80076187
 8014b8c:	800121c5 	.word	0x800121c5
 8014b90:	800121c7 	.word	0x800121c7
 8014b94:	000121c5 	.word	0x000121c5
 8014b98:	000461c7 	.word	0x000461c7
 8014b9c:	800461c7 	.word	0x800461c7
 8014ba0:	000121c7 	.word	0x000121c7
 8014ba4:	00012185 	.word	0x00012185
 8014ba8:	00012187 	.word	0x00012187
 8014bac:	08027430 	.word	0x08027430
 8014bb0:	02009408 	.word	0x02009408
 8014bb4:	00f40182 	.word	0x00f40182
 8014bb8:	000c100b 	.word	0x000c100b
 8014bbc:	1000fc00 	.word	0x1000fc00
 8014bc0:	080c0000 	.word	0x080c0000
 8014bc4:	080c0002 	.word	0x080c0002
 8014bc8:	00076185 	.word	0x00076185
 8014bcc:	00076187 	.word	0x00076187
 8014bd0:	000461c5 	.word	0x000461c5
 8014bd4:	00046187 	.word	0x00046187
 8014bd8:	4615      	mov	r5, r2
 8014bda:	460a      	mov	r2, r1
 8014bdc:	f1b9 0f00 	cmp.w	r9, #0
 8014be0:	d098      	beq.n	8014b14 <nema_set_blend+0x248>
 8014be2:	9b06      	ldr	r3, [sp, #24]
 8014be4:	2b00      	cmp	r3, #0
 8014be6:	f000 8202 	beq.w	8014fee <nema_set_blend+0x722>
 8014bea:	2600      	movs	r6, #0
 8014bec:	9f01      	ldr	r7, [sp, #4]
 8014bee:	48c1      	ldr	r0, [pc, #772]	@ (8014ef4 <nema_set_blend+0x628>)
 8014bf0:	49c1      	ldr	r1, [pc, #772]	@ (8014ef8 <nema_set_blend+0x62c>)
 8014bf2:	f850 3027 	ldr.w	r3, [r0, r7, lsl #2]
 8014bf6:	f851 7027 	ldr.w	r7, [r1, r7, lsl #2]
 8014bfa:	015b      	lsls	r3, r3, #5
 8014bfc:	ea43 3387 	orr.w	r3, r3, r7, lsl #14
 8014c00:	9f08      	ldr	r7, [sp, #32]
 8014c02:	ea47 5e0e 	orr.w	lr, r7, lr, lsl #20
 8014c06:	4fbd      	ldr	r7, [pc, #756]	@ (8014efc <nema_set_blend+0x630>)
 8014c08:	ea4e 1eca 	orr.w	lr, lr, sl, lsl #7
 8014c0c:	431f      	orrs	r7, r3
 8014c0e:	ab26      	add	r3, sp, #152	@ 0x98
 8014c10:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 8014c14:	4337      	orrs	r7, r6
 8014c16:	e942 e710 	strd	lr, r7, [r2, #-64]	@ 0x40
 8014c1a:	2e00      	cmp	r6, #0
 8014c1c:	f000 813f 	beq.w	8014e9e <nema_set_blend+0x5d2>
 8014c20:	9804      	ldr	r0, [sp, #16]
 8014c22:	f7fe fdf7 	bl	8013814 <nema_matmul_bypass>
 8014c26:	4629      	mov	r1, r5
 8014c28:	2200      	movs	r2, #0
 8014c2a:	a816      	add	r0, sp, #88	@ 0x58
 8014c2c:	f7fe feec 	bl	8013a08 <nema_load_frag_shader>
 8014c30:	4bb3      	ldr	r3, [pc, #716]	@ (8014f00 <nema_set_blend+0x634>)
 8014c32:	f1c5 0520 	rsb	r5, r5, #32
 8014c36:	6818      	ldr	r0, [r3, #0]
 8014c38:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014c3a:	ea43 0800 	orr.w	r8, r3, r0
 8014c3e:	ea48 0005 	orr.w	r0, r8, r5
 8014c42:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
 8014c46:	f7fe fef9 	bl	8013a3c <nema_set_frag_ptr>
 8014c4a:	b027      	add	sp, #156	@ 0x9c
 8014c4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014c50:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 8014c54:	930f      	str	r3, [sp, #60]	@ 0x3c
 8014c56:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014c58:	2b00      	cmp	r3, #0
 8014c5a:	f43f aefb 	beq.w	8014a54 <nema_set_blend+0x188>
 8014c5e:	f04f 0811 	mov.w	r8, #17
 8014c62:	e701      	b.n	8014a68 <nema_set_blend+0x19c>
 8014c64:	9b00      	ldr	r3, [sp, #0]
 8014c66:	1c5a      	adds	r2, r3, #1
 8014c68:	f000 8136 	beq.w	8014ed8 <nema_set_blend+0x60c>
 8014c6c:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8014c70:	9a05      	ldr	r2, [sp, #20]
 8014c72:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8014c76:	9204      	str	r2, [sp, #16]
 8014c78:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8014c7a:	2a00      	cmp	r2, #0
 8014c7c:	f000 80a9 	beq.w	8014dd2 <nema_set_blend+0x506>
 8014c80:	f44f 2440 	mov.w	r4, #786432	@ 0xc0000
 8014c84:	499f      	ldr	r1, [pc, #636]	@ (8014f04 <nema_set_blend+0x638>)
 8014c86:	4aa0      	ldr	r2, [pc, #640]	@ (8014f08 <nema_set_blend+0x63c>)
 8014c88:	f44f 5500 	mov.w	r5, #8192	@ 0x2000
 8014c8c:	9219      	str	r2, [sp, #100]	@ 0x64
 8014c8e:	2204      	movs	r2, #4
 8014c90:	9116      	str	r1, [sp, #88]	@ 0x58
 8014c92:	9205      	str	r2, [sp, #20]
 8014c94:	2102      	movs	r1, #2
 8014c96:	2203      	movs	r2, #3
 8014c98:	e9cd 5417 	strd	r5, r4, [sp, #92]	@ 0x5c
 8014c9c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8014c9e:	2c00      	cmp	r4, #0
 8014ca0:	d04f      	beq.n	8014d42 <nema_set_blend+0x476>
 8014ca2:	9c00      	ldr	r4, [sp, #0]
 8014ca4:	f1b4 3fff 	cmp.w	r4, #4294967295
 8014ca8:	d04b      	beq.n	8014d42 <nema_set_blend+0x476>
 8014caa:	f241 050b 	movw	r5, #4107	@ 0x100b
 8014cae:	2300      	movs	r3, #0
 8014cb0:	f850 4024 	ldr.w	r4, [r0, r4, lsl #2]
 8014cb4:	a826      	add	r0, sp, #152	@ 0x98
 8014cb6:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 8014cba:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8014cbc:	f044 5480 	orr.w	r4, r4, #268435456	@ 0x10000000
 8014cc0:	ea45 11c1 	orr.w	r1, r5, r1, lsl #7
 8014cc4:	f1b9 0f01 	cmp.w	r9, #1
 8014cc8:	f840 1c40 	str.w	r1, [r0, #-64]
 8014ccc:	f444 4420 	orr.w	r4, r4, #40960	@ 0xa000
 8014cd0:	4611      	mov	r1, r2
 8014cd2:	f840 3c3c 	str.w	r3, [r0, #-60]
 8014cd6:	9a05      	ldr	r2, [sp, #20]
 8014cd8:	f63f aef0 	bhi.w	8014abc <nema_set_blend+0x1f0>
 8014cdc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014cde:	2b00      	cmp	r3, #0
 8014ce0:	f47f aeec 	bne.w	8014abc <nema_set_blend+0x1f0>
 8014ce4:	9b00      	ldr	r3, [sp, #0]
 8014ce6:	3301      	adds	r3, #1
 8014ce8:	f47f aee8 	bne.w	8014abc <nema_set_blend+0x1f0>
 8014cec:	9b02      	ldr	r3, [sp, #8]
 8014cee:	4553      	cmp	r3, sl
 8014cf0:	f47f aee4 	bne.w	8014abc <nema_set_blend+0x1f0>
 8014cf4:	f1b9 0f00 	cmp.w	r9, #0
 8014cf8:	bf15      	itete	ne
 8014cfa:	f44f 6600 	movne.w	r6, #2048	@ 0x800
 8014cfe:	f44f 5600 	moveq.w	r6, #8192	@ 0x2000
 8014d02:	f44f 1500 	movne.w	r5, #2097152	@ 0x200000
 8014d06:	f44f 0500 	moveq.w	r5, #8388608	@ 0x800000
 8014d0a:	9f01      	ldr	r7, [sp, #4]
 8014d0c:	f8df c1e4 	ldr.w	ip, [pc, #484]	@ 8014ef4 <nema_set_blend+0x628>
 8014d10:	4879      	ldr	r0, [pc, #484]	@ (8014ef8 <nema_set_blend+0x62c>)
 8014d12:	f85c 3027 	ldr.w	r3, [ip, r7, lsl #2]
 8014d16:	f850 0027 	ldr.w	r0, [r0, r7, lsl #2]
 8014d1a:	015b      	lsls	r3, r3, #5
 8014d1c:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 8014d20:	f043 430a 	orr.w	r3, r3, #2315255808	@ 0x8a000000
 8014d24:	f043 0306 	orr.w	r3, r3, #6
 8014d28:	4333      	orrs	r3, r6
 8014d2a:	432b      	orrs	r3, r5
 8014d2c:	4877      	ldr	r0, [pc, #476]	@ (8014f0c <nema_set_blend+0x640>)
 8014d2e:	9d02      	ldr	r5, [sp, #8]
 8014d30:	ae26      	add	r6, sp, #152	@ 0x98
 8014d32:	ea40 10c5 	orr.w	r0, r0, r5, lsl #7
 8014d36:	eb06 01c1 	add.w	r1, r6, r1, lsl #3
 8014d3a:	4615      	mov	r5, r2
 8014d3c:	e941 0310 	strd	r0, r3, [r1, #-64]	@ 0x40
 8014d40:	e76e      	b.n	8014c20 <nema_set_blend+0x354>
 8014d42:	f043 5480 	orr.w	r4, r3, #268435456	@ 0x10000000
 8014d46:	e6b5      	b.n	8014ab4 <nema_set_blend+0x1e8>
 8014d48:	f04f 3020 	mov.w	r0, #538976288	@ 0x20202020
 8014d4c:	f7fe fe8e 	bl	8013a6c <nema_set_raster_color>
 8014d50:	2000      	movs	r0, #0
 8014d52:	f7fd fe6b 	bl	8012a2c <nema_enable_gradient>
 8014d56:	f04f 0800 	mov.w	r8, #0
 8014d5a:	f04f 0901 	mov.w	r9, #1
 8014d5e:	23ff      	movs	r3, #255	@ 0xff
 8014d60:	f240 1401 	movw	r4, #257	@ 0x101
 8014d64:	f04f 3aff 	mov.w	sl, #4294967295
 8014d68:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 8014d6c:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 8014d70:	e9cd 880c 	strd	r8, r8, [sp, #48]	@ 0x30
 8014d74:	4641      	mov	r1, r8
 8014d76:	f8cd 9004 	str.w	r9, [sp, #4]
 8014d7a:	461a      	mov	r2, r3
 8014d7c:	46a3      	mov	fp, r4
 8014d7e:	f8cd a000 	str.w	sl, [sp]
 8014d82:	e5c9      	b.n	8014918 <nema_set_blend+0x4c>
 8014d84:	2f0e      	cmp	r7, #14
 8014d86:	f47f aead 	bne.w	8014ae4 <nema_set_blend+0x218>
 8014d8a:	9b03      	ldr	r3, [sp, #12]
 8014d8c:	2b00      	cmp	r3, #0
 8014d8e:	f47f aea9 	bne.w	8014ae4 <nema_set_blend+0x218>
 8014d92:	9b06      	ldr	r3, [sp, #24]
 8014d94:	2b00      	cmp	r3, #0
 8014d96:	f47f aea5 	bne.w	8014ae4 <nema_set_blend+0x218>
 8014d9a:	4615      	mov	r5, r2
 8014d9c:	460a      	mov	r2, r1
 8014d9e:	f1b9 0f00 	cmp.w	r9, #0
 8014da2:	f43f aeb0 	beq.w	8014b06 <nema_set_blend+0x23a>
 8014da6:	f04f 0e00 	mov.w	lr, #0
 8014daa:	4b59      	ldr	r3, [pc, #356]	@ (8014f10 <nema_set_blend+0x644>)
 8014dac:	9308      	str	r3, [sp, #32]
 8014dae:	9b01      	ldr	r3, [sp, #4]
 8014db0:	2b00      	cmp	r3, #0
 8014db2:	f000 8123 	beq.w	8014ffc <nema_set_blend+0x730>
 8014db6:	2b01      	cmp	r3, #1
 8014db8:	f04f 0600 	mov.w	r6, #0
 8014dbc:	f000 8137 	beq.w	801502e <nema_set_blend+0x762>
 8014dc0:	461f      	mov	r7, r3
 8014dc2:	e714      	b.n	8014bee <nema_set_blend+0x322>
 8014dc4:	e9dd 6c11 	ldrd	r6, ip, [sp, #68]	@ 0x44
 8014dc8:	e9dd 7413 	ldrd	r7, r4, [sp, #76]	@ 0x4c
 8014dcc:	f04f 081d 	mov.w	r8, #29
 8014dd0:	e64a      	b.n	8014a68 <nema_set_blend+0x19c>
 8014dd2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8014dd4:	2a00      	cmp	r2, #0
 8014dd6:	d046      	beq.n	8014e66 <nema_set_blend+0x59a>
 8014dd8:	f44f 2440 	mov.w	r4, #786432	@ 0xc0000
 8014ddc:	494d      	ldr	r1, [pc, #308]	@ (8014f14 <nema_set_blend+0x648>)
 8014dde:	e752      	b.n	8014c86 <nema_set_blend+0x3ba>
 8014de0:	9b02      	ldr	r3, [sp, #8]
 8014de2:	2b00      	cmp	r3, #0
 8014de4:	f47f aea9 	bne.w	8014b3a <nema_set_blend+0x26e>
 8014de8:	9b00      	ldr	r3, [sp, #0]
 8014dea:	3301      	adds	r3, #1
 8014dec:	f000 8114 	beq.w	8015018 <nema_set_blend+0x74c>
 8014df0:	9802      	ldr	r0, [sp, #8]
 8014df2:	f7fe fd0f 	bl	8013814 <nema_matmul_bypass>
 8014df6:	4b42      	ldr	r3, [pc, #264]	@ (8014f00 <nema_set_blend+0x634>)
 8014df8:	4947      	ldr	r1, [pc, #284]	@ (8014f18 <nema_set_blend+0x64c>)
 8014dfa:	9800      	ldr	r0, [sp, #0]
 8014dfc:	681a      	ldr	r2, [r3, #0]
 8014dfe:	4b47      	ldr	r3, [pc, #284]	@ (8014f1c <nema_set_blend+0x650>)
 8014e00:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 8014e04:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8014e08:	4318      	orrs	r0, r3
 8014e0a:	f7fe fe17 	bl	8013a3c <nema_set_frag_ptr>
 8014e0e:	b027      	add	sp, #156	@ 0x9c
 8014e10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014e14:	2301      	movs	r3, #1
 8014e16:	930a      	str	r3, [sp, #40]	@ 0x28
 8014e18:	9304      	str	r3, [sp, #16]
 8014e1a:	469b      	mov	fp, r3
 8014e1c:	2303      	movs	r3, #3
 8014e1e:	f04f 0e00 	mov.w	lr, #0
 8014e22:	9303      	str	r3, [sp, #12]
 8014e24:	f103 6300 	add.w	r3, r3, #134217728	@ 0x8000000
 8014e28:	f503 2340 	add.w	r3, r3, #786432	@ 0xc0000
 8014e2c:	9308      	str	r3, [sp, #32]
 8014e2e:	4b3c      	ldr	r3, [pc, #240]	@ (8014f20 <nema_set_blend+0x654>)
 8014e30:	f8cd e018 	str.w	lr, [sp, #24]
 8014e34:	9312      	str	r3, [sp, #72]	@ 0x48
 8014e36:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8014e3a:	9311      	str	r3, [sp, #68]	@ 0x44
 8014e3c:	4b39      	ldr	r3, [pc, #228]	@ (8014f24 <nema_set_blend+0x658>)
 8014e3e:	f8cd e024 	str.w	lr, [sp, #36]	@ 0x24
 8014e42:	9314      	str	r3, [sp, #80]	@ 0x50
 8014e44:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8014e48:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014e4a:	f5a3 23c8 	sub.w	r3, r3, #409600	@ 0x64000
 8014e4e:	f8cd e054 	str.w	lr, [sp, #84]	@ 0x54
 8014e52:	4835      	ldr	r0, [pc, #212]	@ (8014f28 <nema_set_blend+0x65c>)
 8014e54:	4935      	ldr	r1, [pc, #212]	@ (8014f2c <nema_set_blend+0x660>)
 8014e56:	4a36      	ldr	r2, [pc, #216]	@ (8014f30 <nema_set_blend+0x664>)
 8014e58:	461d      	mov	r5, r3
 8014e5a:	f8df c0ec 	ldr.w	ip, [pc, #236]	@ 8014f48 <nema_set_blend+0x67c>
 8014e5e:	4e35      	ldr	r6, [pc, #212]	@ (8014f34 <nema_set_blend+0x668>)
 8014e60:	4c35      	ldr	r4, [pc, #212]	@ (8014f38 <nema_set_blend+0x66c>)
 8014e62:	4f36      	ldr	r7, [pc, #216]	@ (8014f3c <nema_set_blend+0x670>)
 8014e64:	e5e7      	b.n	8014a36 <nema_set_blend+0x16a>
 8014e66:	4611      	mov	r1, r2
 8014e68:	2202      	movs	r2, #2
 8014e6a:	9205      	str	r2, [sp, #20]
 8014e6c:	2201      	movs	r2, #1
 8014e6e:	e715      	b.n	8014c9c <nema_set_blend+0x3d0>
 8014e70:	9b01      	ldr	r3, [sp, #4]
 8014e72:	2b01      	cmp	r3, #1
 8014e74:	f47f ae32 	bne.w	8014adc <nema_set_blend+0x210>
 8014e78:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8014e7a:	2b00      	cmp	r3, #0
 8014e7c:	f47f ae2e 	bne.w	8014adc <nema_set_blend+0x210>
 8014e80:	a826      	add	r0, sp, #152	@ 0x98
 8014e82:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8014e86:	4b21      	ldr	r3, [pc, #132]	@ (8014f0c <nema_set_blend+0x640>)
 8014e88:	9802      	ldr	r0, [sp, #8]
 8014e8a:	f841 6c3c 	str.w	r6, [r1, #-60]
 8014e8e:	ea43 13c0 	orr.w	r3, r3, r0, lsl #7
 8014e92:	ea43 530e 	orr.w	r3, r3, lr, lsl #20
 8014e96:	4615      	mov	r5, r2
 8014e98:	f841 3c40 	str.w	r3, [r1, #-64]
 8014e9c:	e6c0      	b.n	8014c20 <nema_set_blend+0x354>
 8014e9e:	f44f 0680 	mov.w	r6, #4194304	@ 0x400000
 8014ea2:	f44f 5780 	mov.w	r7, #4096	@ 0x1000
 8014ea6:	462a      	mov	r2, r5
 8014ea8:	3501      	adds	r5, #1
 8014eaa:	f850 0029 	ldr.w	r0, [r0, r9, lsl #2]
 8014eae:	f851 1029 	ldr.w	r1, [r1, r9, lsl #2]
 8014eb2:	0140      	lsls	r0, r0, #5
 8014eb4:	4b22      	ldr	r3, [pc, #136]	@ (8014f40 <nema_set_blend+0x674>)
 8014eb6:	ea40 3081 	orr.w	r0, r0, r1, lsl #14
 8014eba:	4303      	orrs	r3, r0
 8014ebc:	4921      	ldr	r1, [pc, #132]	@ (8014f44 <nema_set_blend+0x678>)
 8014ebe:	9802      	ldr	r0, [sp, #8]
 8014ec0:	433b      	orrs	r3, r7
 8014ec2:	ea41 11c0 	orr.w	r1, r1, r0, lsl #7
 8014ec6:	a826      	add	r0, sp, #152	@ 0x98
 8014ec8:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 8014ecc:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8014ece:	4333      	orrs	r3, r6
 8014ed0:	4301      	orrs	r1, r0
 8014ed2:	e942 1310 	strd	r1, r3, [r2, #-64]	@ 0x40
 8014ed6:	e6a3      	b.n	8014c20 <nema_set_blend+0x354>
 8014ed8:	9b04      	ldr	r3, [sp, #16]
 8014eda:	2b00      	cmp	r3, #0
 8014edc:	f000 8082 	beq.w	8014fe4 <nema_set_blend+0x718>
 8014ee0:	9a05      	ldr	r2, [sp, #20]
 8014ee2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014ee4:	9203      	str	r2, [sp, #12]
 8014ee6:	920a      	str	r2, [sp, #40]	@ 0x28
 8014ee8:	4a09      	ldr	r2, [pc, #36]	@ (8014f10 <nema_set_blend+0x644>)
 8014eea:	f443 4330 	orr.w	r3, r3, #45056	@ 0xb000
 8014eee:	9208      	str	r2, [sp, #32]
 8014ef0:	e6c2      	b.n	8014c78 <nema_set_blend+0x3ac>
 8014ef2:	bf00      	nop
 8014ef4:	08027440 	.word	0x08027440
 8014ef8:	08027470 	.word	0x08027470
 8014efc:	0a002007 	.word	0x0a002007
 8014f00:	200001d0 	.word	0x200001d0
 8014f04:	100c118b 	.word	0x100c118b
 8014f08:	0081a042 	.word	0x0081a042
 8014f0c:	080c0002 	.word	0x080c0002
 8014f10:	080c0000 	.word	0x080c0000
 8014f14:	100c1183 	.word	0x100c1183
 8014f18:	08027430 	.word	0x08027430
 8014f1c:	141f801f 	.word	0x141f801f
 8014f20:	000761c7 	.word	0x000761c7
 8014f24:	00076187 	.word	0x00076187
 8014f28:	000121c7 	.word	0x000121c7
 8014f2c:	800121c7 	.word	0x800121c7
 8014f30:	00012187 	.word	0x00012187
 8014f34:	800461c7 	.word	0x800461c7
 8014f38:	00046187 	.word	0x00046187
 8014f3c:	80046187 	.word	0x80046187
 8014f40:	80080206 	.word	0x80080206
 8014f44:	004e0002 	.word	0x004e0002
 8014f48:	000461c7 	.word	0x000461c7
 8014f4c:	2301      	movs	r3, #1
 8014f4e:	2202      	movs	r2, #2
 8014f50:	9304      	str	r3, [sp, #16]
 8014f52:	4619      	mov	r1, r3
 8014f54:	4c38      	ldr	r4, [pc, #224]	@ (8015038 <nema_set_blend+0x76c>)
 8014f56:	e5ad      	b.n	8014ab4 <nema_set_blend+0x1e8>
 8014f58:	f1b9 0f00 	cmp.w	r9, #0
 8014f5c:	d055      	beq.n	801500a <nema_set_blend+0x73e>
 8014f5e:	2301      	movs	r3, #1
 8014f60:	2103      	movs	r1, #3
 8014f62:	930a      	str	r3, [sp, #40]	@ 0x28
 8014f64:	e9cd 1303 	strd	r1, r3, [sp, #12]
 8014f68:	4b34      	ldr	r3, [pc, #208]	@ (801503c <nema_set_blend+0x770>)
 8014f6a:	9308      	str	r3, [sp, #32]
 8014f6c:	e518      	b.n	80149a0 <nema_set_blend+0xd4>
 8014f6e:	2c00      	cmp	r4, #0
 8014f70:	bfbd      	ittte	lt
 8014f72:	f02b 4b00 	biclt.w	fp, fp, #2147483648	@ 0x80000000
 8014f76:	f04f 4202 	movlt.w	r2, #2181038080	@ 0x82000000
 8014f7a:	f04f 4300 	movlt.w	r3, #2147483648	@ 0x80000000
 8014f7e:	f04f 7200 	movge.w	r2, #33554432	@ 0x2000000
 8014f82:	b111      	cbz	r1, 8014f8a <nema_set_blend+0x6be>
 8014f84:	4613      	mov	r3, r2
 8014f86:	f02b 7b00 	bic.w	fp, fp, #33554432	@ 0x2000000
 8014f8a:	9a01      	ldr	r2, [sp, #4]
 8014f8c:	ea42 2009 	orr.w	r0, r2, r9, lsl #8
 8014f90:	4318      	orrs	r0, r3
 8014f92:	f7fe fd59 	bl	8013a48 <nema_set_rop_blend_mode>
 8014f96:	ea4f 505b 	mov.w	r0, fp, lsr #21
 8014f9a:	4b29      	ldr	r3, [pc, #164]	@ (8015040 <nema_set_blend+0x774>)
 8014f9c:	0540      	lsls	r0, r0, #21
 8014f9e:	f040 0201 	orr.w	r2, r0, #1
 8014fa2:	789b      	ldrb	r3, [r3, #2]
 8014fa4:	2a01      	cmp	r2, #1
 8014fa6:	9201      	str	r2, [sp, #4]
 8014fa8:	9305      	str	r3, [sp, #20]
 8014faa:	f43f adbe 	beq.w	8014b2a <nema_set_blend+0x25e>
 8014fae:	f00b 4380 	and.w	r3, fp, #1073741824	@ 0x40000000
 8014fb2:	9315      	str	r3, [sp, #84]	@ 0x54
 8014fb4:	f3cb 7380 	ubfx	r3, fp, #30, #1
 8014fb8:	9306      	str	r3, [sp, #24]
 8014fba:	f00b 5300 	and.w	r3, fp, #536870912	@ 0x20000000
 8014fbe:	9309      	str	r3, [sp, #36]	@ 0x24
 8014fc0:	2301      	movs	r3, #1
 8014fc2:	f04f 0900 	mov.w	r9, #0
 8014fc6:	f00b 5280 	and.w	r2, fp, #268435456	@ 0x10000000
 8014fca:	f8dd b004 	ldr.w	fp, [sp, #4]
 8014fce:	9301      	str	r3, [sp, #4]
 8014fd0:	4b1c      	ldr	r3, [pc, #112]	@ (8015044 <nema_set_blend+0x778>)
 8014fd2:	46c8      	mov	r8, r9
 8014fd4:	f8cd 901c 	str.w	r9, [sp, #28]
 8014fd8:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 8014fdc:	f8cd 9010 	str.w	r9, [sp, #16]
 8014fe0:	9308      	str	r3, [sp, #32]
 8014fe2:	e4dd      	b.n	80149a0 <nema_set_blend+0xd4>
 8014fe4:	2201      	movs	r2, #1
 8014fe6:	9b05      	ldr	r3, [sp, #20]
 8014fe8:	9204      	str	r2, [sp, #16]
 8014fea:	930a      	str	r3, [sp, #40]	@ 0x28
 8014fec:	e644      	b.n	8014c78 <nema_set_blend+0x3ac>
 8014fee:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014ff0:	2b00      	cmp	r3, #0
 8014ff2:	f43f aedc 	beq.w	8014dae <nema_set_blend+0x4e2>
 8014ff6:	9e06      	ldr	r6, [sp, #24]
 8014ff8:	9f01      	ldr	r7, [sp, #4]
 8014ffa:	e5f8      	b.n	8014bee <nema_set_blend+0x322>
 8014ffc:	f44f 0600 	mov.w	r6, #8388608	@ 0x800000
 8015000:	f44f 5700 	mov.w	r7, #8192	@ 0x2000
 8015004:	4910      	ldr	r1, [pc, #64]	@ (8015048 <nema_set_blend+0x77c>)
 8015006:	4811      	ldr	r0, [pc, #68]	@ (801504c <nema_set_blend+0x780>)
 8015008:	e74f      	b.n	8014eaa <nema_set_blend+0x5de>
 801500a:	4b0e      	ldr	r3, [pc, #56]	@ (8015044 <nema_set_blend+0x778>)
 801500c:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 8015010:	9308      	str	r3, [sp, #32]
 8015012:	e9cd 9903 	strd	r9, r9, [sp, #12]
 8015016:	e4c3      	b.n	80149a0 <nema_set_blend+0xd4>
 8015018:	2001      	movs	r0, #1
 801501a:	f7fe fbfb 	bl	8013814 <nema_matmul_bypass>
 801501e:	4a0c      	ldr	r2, [pc, #48]	@ (8015050 <nema_set_blend+0x784>)
 8015020:	4b0c      	ldr	r3, [pc, #48]	@ (8015054 <nema_set_blend+0x788>)
 8015022:	6810      	ldr	r0, [r2, #0]
 8015024:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8015028:	f7fe fd08 	bl	8013a3c <nema_set_frag_ptr>
 801502c:	e6ef      	b.n	8014e0e <nema_set_blend+0x542>
 801502e:	4637      	mov	r7, r6
 8015030:	4905      	ldr	r1, [pc, #20]	@ (8015048 <nema_set_blend+0x77c>)
 8015032:	4806      	ldr	r0, [pc, #24]	@ (801504c <nema_set_blend+0x780>)
 8015034:	e739      	b.n	8014eaa <nema_set_blend+0x5de>
 8015036:	bf00      	nop
 8015038:	1000fc00 	.word	0x1000fc00
 801503c:	080c0003 	.word	0x080c0003
 8015040:	20000060 	.word	0x20000060
 8015044:	080c0000 	.word	0x080c0000
 8015048:	08027470 	.word	0x08027470
 801504c:	08027440 	.word	0x08027440
 8015050:	200001d0 	.word	0x200001d0
 8015054:	141f001f 	.word	0x141f001f

08015058 <nema_set_const_color>:
 8015058:	b510      	push	{r4, lr}
 801505a:	4604      	mov	r4, r0
 801505c:	2001      	movs	r0, #1
 801505e:	4621      	mov	r1, r4
 8015060:	f7fd fcbc 	bl	80129dc <nema_set_const_reg>
 8015064:	4b04      	ldr	r3, [pc, #16]	@ (8015078 <nema_set_const_color+0x20>)
 8015066:	781b      	ldrb	r3, [r3, #0]
 8015068:	b903      	cbnz	r3, 801506c <nema_set_const_color+0x14>
 801506a:	bd10      	pop	{r4, pc}
 801506c:	4620      	mov	r0, r4
 801506e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015072:	f7fe bcef 	b.w	8013a54 <nema_set_rop_const_color>
 8015076:	bf00      	nop
 8015078:	2004c14d 	.word	0x2004c14d

0801507c <_ZN8touchgfx8HALGPU2D17unlockFrameBufferEv>:
 801507c:	f7f8 bc76 	b.w	800d96c <_ZN8touchgfx3HAL17unlockFrameBufferEv>

08015080 <_ZN8touchgfx8HALGPU2D10beginFrameEv>:
 8015080:	2200      	movs	r2, #0
 8015082:	f880 20a5 	strb.w	r2, [r0, #165]	@ 0xa5
 8015086:	f7f8 bb75 	b.w	800d774 <_ZN8touchgfx3HAL10beginFrameEv>
 801508a:	bf00      	nop

0801508c <_ZN8touchgfx8HALGPU2D15lockFrameBufferEv>:
 801508c:	b538      	push	{r3, r4, r5, lr}
 801508e:	f890 30a5 	ldrb.w	r3, [r0, #165]	@ 0xa5
 8015092:	4604      	mov	r4, r0
 8015094:	f100 057c 	add.w	r5, r0, #124	@ 0x7c
 8015098:	b12b      	cbz	r3, 80150a6 <_ZN8touchgfx8HALGPU2D15lockFrameBufferEv+0x1a>
 801509a:	2300      	movs	r3, #0
 801509c:	4628      	mov	r0, r5
 801509e:	f884 30a5 	strb.w	r3, [r4, #165]	@ 0xa5
 80150a2:	f7ff fb53 	bl	801474c <nema_cl_submit>
 80150a6:	4628      	mov	r0, r5
 80150a8:	f7ff fbca 	bl	8014840 <nema_cl_wait>
 80150ac:	4620      	mov	r0, r4
 80150ae:	f7f9 f917 	bl	800e2e0 <_ZN8touchgfx3HAL15lockFrameBufferEv>
 80150b2:	2300      	movs	r3, #0
 80150b4:	f884 30a4 	strb.w	r3, [r4, #164]	@ 0xa4
 80150b8:	bd38      	pop	{r3, r4, r5, pc}
 80150ba:	bf00      	nop

080150bc <_ZN8touchgfx8HALGPU2D10initializeEi.part.2>:
 80150bc:	b508      	push	{r3, lr}
 80150be:	4a03      	ldr	r2, [pc, #12]	@ (80150cc <_ZN8touchgfx8HALGPU2D10initializeEi.part.2+0x10>)
 80150c0:	4b03      	ldr	r3, [pc, #12]	@ (80150d0 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2+0x14>)
 80150c2:	2118      	movs	r1, #24
 80150c4:	4803      	ldr	r0, [pc, #12]	@ (80150d4 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2+0x18>)
 80150c6:	f00f fe35 	bl	8024d34 <__assert_func>
 80150ca:	bf00      	nop
 80150cc:	080275f4 	.word	0x080275f4
 80150d0:	080274a0 	.word	0x080274a0
 80150d4:	080274f8 	.word	0x080274f8

080150d8 <_ZN8touchgfx8HALGPU2D8endFrameEv>:
 80150d8:	b538      	push	{r3, r4, r5, lr}
 80150da:	f890 30a4 	ldrb.w	r3, [r0, #164]	@ 0xa4
 80150de:	4604      	mov	r4, r0
 80150e0:	b97b      	cbnz	r3, 8015102 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x2a>
 80150e2:	f894 30a5 	ldrb.w	r3, [r4, #165]	@ 0xa5
 80150e6:	f104 057c 	add.w	r5, r4, #124	@ 0x7c
 80150ea:	b113      	cbz	r3, 80150f2 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x1a>
 80150ec:	4628      	mov	r0, r5
 80150ee:	f7ff fb2d 	bl	801474c <nema_cl_submit>
 80150f2:	4628      	mov	r0, r5
 80150f4:	f7ff fba4 	bl	8014840 <nema_cl_wait>
 80150f8:	4620      	mov	r0, r4
 80150fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80150fe:	f7f8 bb45 	b.w	800d78c <_ZN8touchgfx3HAL8endFrameEv>
 8015102:	6840      	ldr	r0, [r0, #4]
 8015104:	4906      	ldr	r1, [pc, #24]	@ (8015120 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x48>)
 8015106:	6803      	ldr	r3, [r0, #0]
 8015108:	689a      	ldr	r2, [r3, #8]
 801510a:	428a      	cmp	r2, r1
 801510c:	d105      	bne.n	801511a <_ZN8touchgfx8HALGPU2D8endFrameEv+0x42>
 801510e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8015110:	4798      	blx	r3
 8015112:	2300      	movs	r3, #0
 8015114:	f884 30a4 	strb.w	r3, [r4, #164]	@ 0xa4
 8015118:	e7e3      	b.n	80150e2 <_ZN8touchgfx8HALGPU2D8endFrameEv+0xa>
 801511a:	4790      	blx	r2
 801511c:	e7f9      	b.n	8015112 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x3a>
 801511e:	bf00      	nop
 8015120:	08001b99 	.word	0x08001b99

08015124 <_ZN8touchgfx8HALGPU2D10initializeEv>:
 8015124:	b570      	push	{r4, r5, r6, lr}
 8015126:	4606      	mov	r6, r0
 8015128:	b08a      	sub	sp, #40	@ 0x28
 801512a:	466c      	mov	r4, sp
 801512c:	f7f8 fb3b 	bl	800d7a6 <_ZN8touchgfx3HAL10initializeEv>
 8015130:	f106 057c 	add.w	r5, r6, #124	@ 0x7c
 8015134:	4668      	mov	r0, sp
 8015136:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 801513a:	f7ff f86d 	bl	8014218 <nema_cl_create_sized>
 801513e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015140:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8015142:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015144:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8015146:	e894 0003 	ldmia.w	r4, {r0, r1}
 801514a:	e885 0003 	stmia.w	r5, {r0, r1}
 801514e:	f8d6 3088 	ldr.w	r3, [r6, #136]	@ 0x88
 8015152:	b10b      	cbz	r3, 8015158 <_ZN8touchgfx8HALGPU2D10initializeEv+0x34>
 8015154:	b00a      	add	sp, #40	@ 0x28
 8015156:	bd70      	pop	{r4, r5, r6, pc}
 8015158:	f7ff ffb0 	bl	80150bc <_ZN8touchgfx8HALGPU2D10initializeEi.part.2>

0801515c <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
 801515c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801515e:	f04f 0c01 	mov.w	ip, #1
 8015162:	2500      	movs	r5, #0
 8015164:	f8bd 7014 	ldrh.w	r7, [sp, #20]
 8015168:	f8bd 6018 	ldrh.w	r6, [sp, #24]
 801516c:	60c3      	str	r3, [r0, #12]
 801516e:	42b7      	cmp	r7, r6
 8015170:	bf2c      	ite	cs
 8015172:	f04f 0e00 	movcs.w	lr, #0
 8015176:	f04f 0e01 	movcc.w	lr, #1
 801517a:	4b23      	ldr	r3, [pc, #140]	@ (8015208 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xac>)
 801517c:	e9c0 1201 	strd	r1, r2, [r0, #4]
 8015180:	6683      	str	r3, [r0, #104]	@ 0x68
 8015182:	4b22      	ldr	r3, [pc, #136]	@ (801520c <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xb0>)
 8015184:	6105      	str	r5, [r0, #16]
 8015186:	e9c0 5505 	strd	r5, r5, [r0, #20]
 801518a:	61c5      	str	r5, [r0, #28]
 801518c:	6205      	str	r5, [r0, #32]
 801518e:	8485      	strh	r5, [r0, #36]	@ 0x24
 8015190:	f8c0 5026 	str.w	r5, [r0, #38]	@ 0x26
 8015194:	f880 502a 	strb.w	r5, [r0, #42]	@ 0x2a
 8015198:	62c5      	str	r5, [r0, #44]	@ 0x2c
 801519a:	8605      	strh	r5, [r0, #48]	@ 0x30
 801519c:	e9c0 550e 	strd	r5, r5, [r0, #56]	@ 0x38
 80151a0:	e9c0 5510 	strd	r5, r5, [r0, #64]	@ 0x40
 80151a4:	f880 5048 	strb.w	r5, [r0, #72]	@ 0x48
 80151a8:	f880 504a 	strb.w	r5, [r0, #74]	@ 0x4a
 80151ac:	f880 504b 	strb.w	r5, [r0, #75]	@ 0x4b
 80151b0:	64c5      	str	r5, [r0, #76]	@ 0x4c
 80151b2:	6505      	str	r5, [r0, #80]	@ 0x50
 80151b4:	6545      	str	r5, [r0, #84]	@ 0x54
 80151b6:	f880 5058 	strb.w	r5, [r0, #88]	@ 0x58
 80151ba:	e9c0 5517 	strd	r5, r5, [r0, #92]	@ 0x5c
 80151be:	6645      	str	r5, [r0, #100]	@ 0x64
 80151c0:	66c5      	str	r5, [r0, #108]	@ 0x6c
 80151c2:	4a13      	ldr	r2, [pc, #76]	@ (8015210 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xb4>)
 80151c4:	f880 c049 	strb.w	ip, [r0, #73]	@ 0x49
 80151c8:	6018      	str	r0, [r3, #0]
 80151ca:	4b12      	ldr	r3, [pc, #72]	@ (8015214 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xb8>)
 80151cc:	8017      	strh	r7, [r2, #0]
 80151ce:	801f      	strh	r7, [r3, #0]
 80151d0:	4a11      	ldr	r2, [pc, #68]	@ (8015218 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xbc>)
 80151d2:	4b12      	ldr	r3, [pc, #72]	@ (801521c <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xc0>)
 80151d4:	8016      	strh	r6, [r2, #0]
 80151d6:	801e      	strh	r6, [r3, #0]
 80151d8:	4911      	ldr	r1, [pc, #68]	@ (8015220 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xc4>)
 80151da:	4a12      	ldr	r2, [pc, #72]	@ (8015224 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xc8>)
 80151dc:	4b12      	ldr	r3, [pc, #72]	@ (8015228 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xcc>)
 80151de:	700d      	strb	r5, [r1, #0]
 80151e0:	6002      	str	r2, [r0, #0]
 80151e2:	6018      	str	r0, [r3, #0]
 80151e4:	f880 5070 	strb.w	r5, [r0, #112]	@ 0x70
 80151e8:	6745      	str	r5, [r0, #116]	@ 0x74
 80151ea:	f880 5078 	strb.w	r5, [r0, #120]	@ 0x78
 80151ee:	f880 5079 	strb.w	r5, [r0, #121]	@ 0x79
 80151f2:	f880 c07a 	strb.w	ip, [r0, #122]	@ 0x7a
 80151f6:	f880 c07b 	strb.w	ip, [r0, #123]	@ 0x7b
 80151fa:	f880 50a4 	strb.w	r5, [r0, #164]	@ 0xa4
 80151fe:	f880 50a5 	strb.w	r5, [r0, #165]	@ 0xa5
 8015202:	f880 e034 	strb.w	lr, [r0, #52]	@ 0x34
 8015206:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015208:	01000001 	.word	0x01000001
 801520c:	2004bf98 	.word	0x2004bf98
 8015210:	2004bf8c 	.word	0x2004bf8c
 8015214:	2004bf92 	.word	0x2004bf92
 8015218:	2004bf8e 	.word	0x2004bf8e
 801521c:	2004bf94 	.word	0x2004bf94
 8015220:	2004bf90 	.word	0x2004bf90
 8015224:	08027524 	.word	0x08027524
 8015228:	2004c150 	.word	0x2004c150

0801522c <_ZN8touchgfx8HALGPU2D10initializeEi>:
 801522c:	b570      	push	{r4, r5, r6, lr}
 801522e:	460c      	mov	r4, r1
 8015230:	b08a      	sub	sp, #40	@ 0x28
 8015232:	4606      	mov	r6, r0
 8015234:	f7f8 fab7 	bl	800d7a6 <_ZN8touchgfx3HAL10initializeEv>
 8015238:	4621      	mov	r1, r4
 801523a:	466c      	mov	r4, sp
 801523c:	4668      	mov	r0, sp
 801523e:	f106 057c 	add.w	r5, r6, #124	@ 0x7c
 8015242:	f7fe ffe9 	bl	8014218 <nema_cl_create_sized>
 8015246:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015248:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 801524a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801524c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 801524e:	e894 0003 	ldmia.w	r4, {r0, r1}
 8015252:	e885 0003 	stmia.w	r5, {r0, r1}
 8015256:	f8d6 3088 	ldr.w	r3, [r6, #136]	@ 0x88
 801525a:	b10b      	cbz	r3, 8015260 <_ZN8touchgfx8HALGPU2D10initializeEi+0x34>
 801525c:	b00a      	add	sp, #40	@ 0x28
 801525e:	bd70      	pop	{r4, r5, r6, pc}
 8015260:	f7ff ff2c 	bl	80150bc <_ZN8touchgfx8HALGPU2D10initializeEi.part.2>

08015264 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>:
 8015264:	b510      	push	{r4, lr}
 8015266:	f890 30a4 	ldrb.w	r3, [r0, #164]	@ 0xa4
 801526a:	4604      	mov	r4, r0
 801526c:	b94b      	cbnz	r3, 8015282 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x1e>
 801526e:	4620      	mov	r0, r4
 8015270:	2101      	movs	r1, #1
 8015272:	f7f9 f823 	bl	800e2bc <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8015276:	f104 007c 	add.w	r0, r4, #124	@ 0x7c
 801527a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801527e:	f7ff b8df 	b.w	8014440 <nema_cl_bind_circular>
 8015282:	6840      	ldr	r0, [r0, #4]
 8015284:	4906      	ldr	r1, [pc, #24]	@ (80152a0 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x3c>)
 8015286:	6803      	ldr	r3, [r0, #0]
 8015288:	689a      	ldr	r2, [r3, #8]
 801528a:	428a      	cmp	r2, r1
 801528c:	d105      	bne.n	801529a <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x36>
 801528e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8015290:	4798      	blx	r3
 8015292:	2300      	movs	r3, #0
 8015294:	f884 30a4 	strb.w	r3, [r4, #164]	@ 0xa4
 8015298:	e7e9      	b.n	801526e <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0xa>
 801529a:	4790      	blx	r2
 801529c:	e7f9      	b.n	8015292 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x2e>
 801529e:	bf00      	nop
 80152a0:	08001b99 	.word	0x08001b99

080152a4 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>:
 80152a4:	4603      	mov	r3, r0
 80152a6:	2200      	movs	r2, #0
 80152a8:	307c      	adds	r0, #124	@ 0x7c
 80152aa:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 80152ae:	f7ff ba4d 	b.w	801474c <nema_cl_submit>
 80152b2:	bf00      	nop

080152b4 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 80152b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80152b8:	b091      	sub	sp, #68	@ 0x44
 80152ba:	4604      	mov	r4, r0
 80152bc:	461d      	mov	r5, r3
 80152be:	f8bd 3080 	ldrh.w	r3, [sp, #128]	@ 0x80
 80152c2:	e9cd 210e 	strd	r2, r1, [sp, #56]	@ 0x38
 80152c6:	930d      	str	r3, [sp, #52]	@ 0x34
 80152c8:	f89d 2088 	ldrb.w	r2, [sp, #136]	@ 0x88
 80152cc:	f89d 3084 	ldrb.w	r3, [sp, #132]	@ 0x84
 80152d0:	307c      	adds	r0, #124	@ 0x7c
 80152d2:	f8bd 6068 	ldrh.w	r6, [sp, #104]	@ 0x68
 80152d6:	f8bd 706c 	ldrh.w	r7, [sp, #108]	@ 0x6c
 80152da:	f8bd 8070 	ldrh.w	r8, [sp, #112]	@ 0x70
 80152de:	f8bd 9074 	ldrh.w	r9, [sp, #116]	@ 0x74
 80152e2:	f89d a078 	ldrb.w	sl, [sp, #120]	@ 0x78
 80152e6:	f89d b07c 	ldrb.w	fp, [sp, #124]	@ 0x7c
 80152ea:	930b      	str	r3, [sp, #44]	@ 0x2c
 80152ec:	920c      	str	r2, [sp, #48]	@ 0x30
 80152ee:	f7ff faa7 	bl	8014840 <nema_cl_wait>
 80152f2:	f04f 0e01 	mov.w	lr, #1
 80152f6:	2000      	movs	r0, #0
 80152f8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80152fa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80152fc:	9208      	str	r2, [sp, #32]
 80152fe:	f8d4 c000 	ldr.w	ip, [r4]
 8015302:	9307      	str	r3, [sp, #28]
 8015304:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015306:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801530a:	e9dd 210e 	ldrd	r2, r1, [sp, #56]	@ 0x38
 801530e:	e9cd b305 	strd	fp, r3, [sp, #20]
 8015312:	e9cd 7801 	strd	r7, r8, [sp, #4]
 8015316:	9600      	str	r6, [sp, #0]
 8015318:	f884 e0a4 	strb.w	lr, [r4, #164]	@ 0xa4
 801531c:	9009      	str	r0, [sp, #36]	@ 0x24
 801531e:	462b      	mov	r3, r5
 8015320:	4620      	mov	r0, r4
 8015322:	f8dc 403c 	ldr.w	r4, [ip, #60]	@ 0x3c
 8015326:	47a0      	blx	r4
 8015328:	b011      	add	sp, #68	@ 0x44
 801532a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801532e:	bf00      	nop

08015330 <_ZN8touchgfx8LCDGPU2DD1Ev>:
 8015330:	4770      	bx	lr
 8015332:	bf00      	nop

08015334 <_ZNK8touchgfx8LCDGPU2D8bitDepthEv>:
 8015334:	7a03      	ldrb	r3, [r0, #8]
 8015336:	2b02      	cmp	r3, #2
 8015338:	d004      	beq.n	8015344 <_ZNK8touchgfx8LCDGPU2D8bitDepthEv+0x10>
 801533a:	2b01      	cmp	r3, #1
 801533c:	bf0c      	ite	eq
 801533e:	2018      	moveq	r0, #24
 8015340:	2010      	movne	r0, #16
 8015342:	4770      	bx	lr
 8015344:	2020      	movs	r0, #32
 8015346:	4770      	bx	lr

08015348 <_ZNK8touchgfx8LCDGPU2D17framebufferFormatEv>:
 8015348:	7a00      	ldrb	r0, [r0, #8]
 801534a:	4770      	bx	lr

0801534c <_ZN8touchgfx8LCDGPU2D4initEv>:
 801534c:	4770      	bx	lr
 801534e:	bf00      	nop

08015350 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015354:	b087      	sub	sp, #28
 8015356:	f89d 5064 	ldrb.w	r5, [sp, #100]	@ 0x64
 801535a:	9102      	str	r1, [sp, #8]
 801535c:	ea6f 0c05 	mvn.w	ip, r5
 8015360:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 8015364:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8015366:	9203      	str	r2, [sp, #12]
 8015368:	e9dd 4215 	ldrd	r4, r2, [sp, #84]	@ 0x54
 801536c:	6860      	ldr	r0, [r4, #4]
 801536e:	fa5f fc8c 	uxtb.w	ip, ip
 8015372:	fb00 2e01 	mla	lr, r0, r1, r2
 8015376:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8015378:	6820      	ldr	r0, [r4, #0]
 801537a:	e9d2 2400 	ldrd	r2, r4, [r2]
 801537e:	3404      	adds	r4, #4
 8015380:	eb00 004e 	add.w	r0, r0, lr, lsl #1
 8015384:	fa1f fb85 	uxth.w	fp, r5
 8015388:	9405      	str	r4, [sp, #20]
 801538a:	9200      	str	r2, [sp, #0]
 801538c:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 8015390:	9c02      	ldr	r4, [sp, #8]
 8015392:	2c00      	cmp	r4, #0
 8015394:	dc03      	bgt.n	801539e <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8015396:	9c03      	ldr	r4, [sp, #12]
 8015398:	2c00      	cmp	r4, #0
 801539a:	f340 80c2 	ble.w	8015522 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801539e:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80153a0:	2b00      	cmp	r3, #0
 80153a2:	e9d4 ea02 	ldrd	lr, sl, [r4, #8]
 80153a6:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80153aa:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 80153ae:	fa0f f48e 	sxth.w	r4, lr
 80153b2:	fa0f f88a 	sxth.w	r8, sl
 80153b6:	f340 80b7 	ble.w	8015528 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 80153ba:	1415      	asrs	r5, r2, #16
 80153bc:	d406      	bmi.n	80153cc <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80153be:	42a5      	cmp	r5, r4
 80153c0:	da04      	bge.n	80153cc <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80153c2:	ea5f 4921 	movs.w	r9, r1, asr #16
 80153c6:	d401      	bmi.n	80153cc <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80153c8:	45c1      	cmp	r9, r8
 80153ca:	db3e      	blt.n	801544a <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80153cc:	3b01      	subs	r3, #1
 80153ce:	4432      	add	r2, r6
 80153d0:	4439      	add	r1, r7
 80153d2:	f100 0002 	add.w	r0, r0, #2
 80153d6:	d1f0      	bne.n	80153ba <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80153d8:	9b02      	ldr	r3, [sp, #8]
 80153da:	2b00      	cmp	r3, #0
 80153dc:	f340 80a1 	ble.w	8015522 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80153e0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80153e4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80153e8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80153ec:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80153f0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80153f4:	ee20 6aa7 	vmul.f32	s12, s1, s15
 80153f8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80153fc:	ee76 6a62 	vsub.f32	s13, s12, s5
 8015400:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8015404:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015408:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801540c:	ee16 2a90 	vmov	r2, s13
 8015410:	3b01      	subs	r3, #1
 8015412:	9302      	str	r3, [sp, #8]
 8015414:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015416:	9c03      	ldr	r4, [sp, #12]
 8015418:	fb92 f6f3 	sdiv	r6, r2, r3
 801541c:	ee17 2a10 	vmov	r2, s14
 8015420:	eeb0 7a43 	vmov.f32	s14, s6
 8015424:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8015428:	ee17 1a10 	vmov	r1, s14
 801542c:	eeb0 7a62 	vmov.f32	s14, s5
 8015430:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8015434:	fb92 f7f3 	sdiv	r7, r2, r3
 8015438:	eeb0 3a67 	vmov.f32	s6, s15
 801543c:	ee17 2a10 	vmov	r2, s14
 8015440:	eef0 2a46 	vmov.f32	s5, s12
 8015444:	bf08      	it	eq
 8015446:	4623      	moveq	r3, r4
 8015448:	e7a2      	b.n	8015390 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801544a:	9501      	str	r5, [sp, #4]
 801544c:	1e5d      	subs	r5, r3, #1
 801544e:	fb05 2906 	mla	r9, r5, r6, r2
 8015452:	ea5f 4929 	movs.w	r9, r9, asr #16
 8015456:	9504      	str	r5, [sp, #16]
 8015458:	d570      	bpl.n	801553c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801545a:	4680      	mov	r8, r0
 801545c:	9d01      	ldr	r5, [sp, #4]
 801545e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015462:	4654      	mov	r4, sl
 8015464:	4673      	mov	r3, lr
 8015466:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801546a:	e002      	b.n	8015472 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 801546c:	1415      	asrs	r5, r2, #16
 801546e:	e9d9 3402 	ldrd	r3, r4, [r9, #8]
 8015472:	2d00      	cmp	r5, #0
 8015474:	4432      	add	r2, r6
 8015476:	db4b      	blt.n	8015510 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8015478:	429d      	cmp	r5, r3
 801547a:	da49      	bge.n	8015510 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801547c:	ea5f 4e21 	movs.w	lr, r1, asr #16
 8015480:	d446      	bmi.n	8015510 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8015482:	45a6      	cmp	lr, r4
 8015484:	da44      	bge.n	8015510 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8015486:	9c00      	ldr	r4, [sp, #0]
 8015488:	b21b      	sxth	r3, r3
 801548a:	fb0e 4303 	mla	r3, lr, r3, r4
 801548e:	5d5b      	ldrb	r3, [r3, r5]
 8015490:	9d05      	ldr	r5, [sp, #20]
 8015492:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8015496:	441d      	add	r5, r3
 8015498:	f895 a002 	ldrb.w	sl, [r5, #2]
 801549c:	786d      	ldrb	r5, [r5, #1]
 801549e:	f8b8 4000 	ldrh.w	r4, [r8]
 80154a2:	fb15 f50b 	smulbb	r5, r5, fp
 80154a6:	ea4f 0ec4 	mov.w	lr, r4, lsl #3
 80154aa:	fa5f fe8e 	uxtb.w	lr, lr
 80154ae:	9501      	str	r5, [sp, #4]
 80154b0:	fb1e fe0c 	smulbb	lr, lr, ip
 80154b4:	9d05      	ldr	r5, [sp, #20]
 80154b6:	fb1a fa0b 	smulbb	sl, sl, fp
 80154ba:	5ced      	ldrb	r5, [r5, r3]
 80154bc:	1223      	asrs	r3, r4, #8
 80154be:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80154c2:	fb05 ee0b 	mla	lr, r5, fp, lr
 80154c6:	fb03 aa0c 	mla	sl, r3, ip, sl
 80154ca:	9d01      	ldr	r5, [sp, #4]
 80154cc:	10e4      	asrs	r4, r4, #3
 80154ce:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80154d2:	fb04 540c 	mla	r4, r4, ip, r5
 80154d6:	fa1f fe8e 	uxth.w	lr, lr
 80154da:	fa1f fa8a 	uxth.w	sl, sl
 80154de:	f10e 0301 	add.w	r3, lr, #1
 80154e2:	f10a 0501 	add.w	r5, sl, #1
 80154e6:	9301      	str	r3, [sp, #4]
 80154e8:	b2a4      	uxth	r4, r4
 80154ea:	eb05 2a1a 	add.w	sl, r5, sl, lsr #8
 80154ee:	9d01      	ldr	r5, [sp, #4]
 80154f0:	1c63      	adds	r3, r4, #1
 80154f2:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80154f6:	eb05 251e 	add.w	r5, r5, lr, lsr #8
 80154fa:	f40a 4378 	and.w	r3, sl, #63488	@ 0xf800
 80154fe:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015502:	0964      	lsrs	r4, r4, #5
 8015504:	432b      	orrs	r3, r5
 8015506:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801550a:	4323      	orrs	r3, r4
 801550c:	f8a8 3000 	strh.w	r3, [r8]
 8015510:	f108 0802 	add.w	r8, r8, #2
 8015514:	4580      	cmp	r8, r0
 8015516:	4439      	add	r1, r7
 8015518:	d1a8      	bne.n	801546c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801551a:	9b02      	ldr	r3, [sp, #8]
 801551c:	2b00      	cmp	r3, #0
 801551e:	f73f af5f 	bgt.w	80153e0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015522:	b007      	add	sp, #28
 8015524:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015528:	f43f af56 	beq.w	80153d8 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801552c:	1e5d      	subs	r5, r3, #1
 801552e:	fb05 2906 	mla	r9, r5, r6, r2
 8015532:	ea5f 4929 	movs.w	r9, r9, asr #16
 8015536:	9504      	str	r5, [sp, #16]
 8015538:	f53f af4e 	bmi.w	80153d8 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801553c:	454c      	cmp	r4, r9
 801553e:	dd5b      	ble.n	80155f8 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8015540:	9d04      	ldr	r5, [sp, #16]
 8015542:	fb05 1507 	mla	r5, r5, r7, r1
 8015546:	142d      	asrs	r5, r5, #16
 8015548:	d456      	bmi.n	80155f8 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801554a:	4545      	cmp	r5, r8
 801554c:	da54      	bge.n	80155f8 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801554e:	2b00      	cmp	r3, #0
 8015550:	f77f af42 	ble.w	80153d8 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8015554:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015558:	f8dd 8014 	ldr.w	r8, [sp, #20]
 801555c:	9301      	str	r3, [sp, #4]
 801555e:	e002      	b.n	8015566 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8015560:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8015562:	f9b3 4008 	ldrsh.w	r4, [r3, #8]
 8015566:	9d00      	ldr	r5, [sp, #0]
 8015568:	140b      	asrs	r3, r1, #16
 801556a:	fb04 5303 	mla	r3, r4, r3, r5
 801556e:	1414      	asrs	r4, r2, #16
 8015570:	5d1b      	ldrb	r3, [r3, r4]
 8015572:	8804      	ldrh	r4, [r0, #0]
 8015574:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8015578:	eb08 0503 	add.w	r5, r8, r3
 801557c:	f895 a002 	ldrb.w	sl, [r5, #2]
 8015580:	f895 9001 	ldrb.w	r9, [r5, #1]
 8015584:	ea4f 0ec4 	mov.w	lr, r4, lsl #3
 8015588:	fa5f fe8e 	uxtb.w	lr, lr
 801558c:	fb1e fe0c 	smulbb	lr, lr, ip
 8015590:	fb19 f90b 	smulbb	r9, r9, fp
 8015594:	fb1a fa0b 	smulbb	sl, sl, fp
 8015598:	f818 5003 	ldrb.w	r5, [r8, r3]
 801559c:	1223      	asrs	r3, r4, #8
 801559e:	10e4      	asrs	r4, r4, #3
 80155a0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80155a4:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80155a8:	fb05 e50b 	mla	r5, r5, fp, lr
 80155ac:	fb03 aa0c 	mla	sl, r3, ip, sl
 80155b0:	fb04 940c 	mla	r4, r4, ip, r9
 80155b4:	b2ad      	uxth	r5, r5
 80155b6:	fa1f fa8a 	uxth.w	sl, sl
 80155ba:	b2a4      	uxth	r4, r4
 80155bc:	f10a 0301 	add.w	r3, sl, #1
 80155c0:	f105 0e01 	add.w	lr, r5, #1
 80155c4:	f104 0901 	add.w	r9, r4, #1
 80155c8:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80155cc:	eb0e 2e15 	add.w	lr, lr, r5, lsr #8
 80155d0:	eb09 2414 	add.w	r4, r9, r4, lsr #8
 80155d4:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80155d8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80155dc:	0964      	lsrs	r4, r4, #5
 80155de:	ea43 030e 	orr.w	r3, r3, lr
 80155e2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80155e6:	4323      	orrs	r3, r4
 80155e8:	f820 3b02 	strh.w	r3, [r0], #2
 80155ec:	9b01      	ldr	r3, [sp, #4]
 80155ee:	4439      	add	r1, r7
 80155f0:	4298      	cmp	r0, r3
 80155f2:	4432      	add	r2, r6
 80155f4:	d1b4      	bne.n	8015560 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80155f6:	e6ef      	b.n	80153d8 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80155f8:	2b00      	cmp	r3, #0
 80155fa:	f77f aeed 	ble.w	80153d8 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80155fe:	1414      	asrs	r4, r2, #16
 8015600:	4680      	mov	r8, r0
 8015602:	9401      	str	r4, [sp, #4]
 8015604:	4625      	mov	r5, r4
 8015606:	e72a      	b.n	801545e <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>

08015608 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801560c:	4689      	mov	r9, r1
 801560e:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8015612:	46ca      	mov	sl, r9
 8015614:	b087      	sub	sp, #28
 8015616:	9203      	str	r2, [sp, #12]
 8015618:	e9dd 2115 	ldrd	r2, r1, [sp, #84]	@ 0x54
 801561c:	6854      	ldr	r4, [r2, #4]
 801561e:	e9dd 0c17 	ldrd	r0, ip, [sp, #92]	@ 0x5c
 8015622:	fb04 1000 	mla	r0, r4, r0, r1
 8015626:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 801562a:	6815      	ldr	r5, [r2, #0]
 801562c:	e9dc 2400 	ldrd	r2, r4, [ip]
 8015630:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 8015634:	f104 0b04 	add.w	fp, r4, #4
 8015638:	9205      	str	r2, [sp, #20]
 801563a:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 801563e:	f1ba 0f00 	cmp.w	sl, #0
 8015642:	dc03      	bgt.n	801564c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8015644:	9c03      	ldr	r4, [sp, #12]
 8015646:	2c00      	cmp	r4, #0
 8015648:	f340 8095 	ble.w	8015776 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801564c:	e9dc e802 	ldrd	lr, r8, [ip, #8]
 8015650:	2b00      	cmp	r3, #0
 8015652:	fa0f f588 	sxth.w	r5, r8
 8015656:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801565a:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 801565e:	fa0f f48e 	sxth.w	r4, lr
 8015662:	9502      	str	r5, [sp, #8]
 8015664:	f340 808a 	ble.w	801577c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015668:	46f1      	mov	r9, lr
 801566a:	9401      	str	r4, [sp, #4]
 801566c:	1415      	asrs	r5, r2, #16
 801566e:	d408      	bmi.n	8015682 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015670:	9c01      	ldr	r4, [sp, #4]
 8015672:	42a5      	cmp	r5, r4
 8015674:	da05      	bge.n	8015682 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015676:	ea5f 4e21 	movs.w	lr, r1, asr #16
 801567a:	d402      	bmi.n	8015682 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801567c:	9c02      	ldr	r4, [sp, #8]
 801567e:	45a6      	cmp	lr, r4
 8015680:	db3b      	blt.n	80156fa <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf2>
 8015682:	3b01      	subs	r3, #1
 8015684:	4432      	add	r2, r6
 8015686:	4439      	add	r1, r7
 8015688:	f100 0002 	add.w	r0, r0, #2
 801568c:	d1ee      	bne.n	801566c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801568e:	f1ba 0f00 	cmp.w	sl, #0
 8015692:	dd70      	ble.n	8015776 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8015694:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015698:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801569c:	eec5 7a80 	vdiv.f32	s15, s11, s0
 80156a0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80156a4:	ee20 6aa7 	vmul.f32	s12, s1, s15
 80156a8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80156ac:	ee76 6a62 	vsub.f32	s13, s12, s5
 80156b0:	ee37 7ac3 	vsub.f32	s14, s15, s6
 80156b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80156b8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80156bc:	ee16 2a90 	vmov	r2, s13
 80156c0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80156c2:	9c03      	ldr	r4, [sp, #12]
 80156c4:	fb92 f6f3 	sdiv	r6, r2, r3
 80156c8:	ee17 2a10 	vmov	r2, s14
 80156cc:	eeb0 7a43 	vmov.f32	s14, s6
 80156d0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80156d4:	ee17 1a10 	vmov	r1, s14
 80156d8:	eeb0 7a62 	vmov.f32	s14, s5
 80156dc:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80156e0:	f1ba 0a01 	subs.w	sl, sl, #1
 80156e4:	fb92 f7f3 	sdiv	r7, r2, r3
 80156e8:	eeb0 3a67 	vmov.f32	s6, s15
 80156ec:	ee17 2a10 	vmov	r2, s14
 80156f0:	eef0 2a46 	vmov.f32	s5, s12
 80156f4:	bf08      	it	eq
 80156f6:	4623      	moveq	r3, r4
 80156f8:	e7a1      	b.n	801563e <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80156fa:	9c01      	ldr	r4, [sp, #4]
 80156fc:	9501      	str	r5, [sp, #4]
 80156fe:	1e5d      	subs	r5, r3, #1
 8015700:	46ce      	mov	lr, r9
 8015702:	fb05 2906 	mla	r9, r5, r6, r2
 8015706:	ea5f 4929 	movs.w	r9, r9, asr #16
 801570a:	9504      	str	r5, [sp, #16]
 801570c:	d53e      	bpl.n	801578c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801570e:	4604      	mov	r4, r0
 8015710:	9d01      	ldr	r5, [sp, #4]
 8015712:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015716:	4673      	mov	r3, lr
 8015718:	46b6      	mov	lr, r6
 801571a:	4646      	mov	r6, r8
 801571c:	e002      	b.n	8015724 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801571e:	1415      	asrs	r5, r2, #16
 8015720:	e9dc 3602 	ldrd	r3, r6, [ip, #8]
 8015724:	2d00      	cmp	r5, #0
 8015726:	4472      	add	r2, lr
 8015728:	db1e      	blt.n	8015768 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 801572a:	429d      	cmp	r5, r3
 801572c:	da1c      	bge.n	8015768 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 801572e:	ea5f 4821 	movs.w	r8, r1, asr #16
 8015732:	d419      	bmi.n	8015768 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 8015734:	45b0      	cmp	r8, r6
 8015736:	da17      	bge.n	8015768 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 8015738:	9e05      	ldr	r6, [sp, #20]
 801573a:	b21b      	sxth	r3, r3
 801573c:	fb08 6303 	mla	r3, r8, r3, r6
 8015740:	5d5e      	ldrb	r6, [r3, r5]
 8015742:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015746:	eb0b 0306 	add.w	r3, fp, r6
 801574a:	785d      	ldrb	r5, [r3, #1]
 801574c:	789b      	ldrb	r3, [r3, #2]
 801574e:	00ed      	lsls	r5, r5, #3
 8015750:	f405 68fc 	and.w	r8, r5, #2016	@ 0x7e0
 8015754:	4d2d      	ldr	r5, [pc, #180]	@ (801580c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>)
 8015756:	f81b 6006 	ldrb.w	r6, [fp, r6]
 801575a:	ea05 2303 	and.w	r3, r5, r3, lsl #8
 801575e:	ea43 0308 	orr.w	r3, r3, r8
 8015762:	ea43 03d6 	orr.w	r3, r3, r6, lsr #3
 8015766:	8023      	strh	r3, [r4, #0]
 8015768:	3402      	adds	r4, #2
 801576a:	4284      	cmp	r4, r0
 801576c:	4439      	add	r1, r7
 801576e:	d1d6      	bne.n	801571e <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8015770:	f1ba 0f00 	cmp.w	sl, #0
 8015774:	dc8e      	bgt.n	8015694 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8015776:	b007      	add	sp, #28
 8015778:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801577c:	d087      	beq.n	801568e <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801577e:	1e5d      	subs	r5, r3, #1
 8015780:	fb05 2906 	mla	r9, r5, r6, r2
 8015784:	ea5f 4929 	movs.w	r9, r9, asr #16
 8015788:	9504      	str	r5, [sp, #16]
 801578a:	d480      	bmi.n	801568e <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801578c:	454c      	cmp	r4, r9
 801578e:	dd35      	ble.n	80157fc <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 8015790:	9d04      	ldr	r5, [sp, #16]
 8015792:	fb05 1507 	mla	r5, r5, r7, r1
 8015796:	ea5f 4925 	movs.w	r9, r5, asr #16
 801579a:	d42f      	bmi.n	80157fc <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 801579c:	9d02      	ldr	r5, [sp, #8]
 801579e:	45a9      	cmp	r9, r5
 80157a0:	da2c      	bge.n	80157fc <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 80157a2:	2b00      	cmp	r3, #0
 80157a4:	f77f af73 	ble.w	801568e <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80157a8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80157ac:	9d05      	ldr	r5, [sp, #20]
 80157ae:	4699      	mov	r9, r3
 80157b0:	46a6      	mov	lr, r4
 80157b2:	e001      	b.n	80157b8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 80157b4:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80157b8:	140c      	asrs	r4, r1, #16
 80157ba:	fb0e 5404 	mla	r4, lr, r4, r5
 80157be:	ea4f 4e22 	mov.w	lr, r2, asr #16
 80157c2:	f814 e00e 	ldrb.w	lr, [r4, lr]
 80157c6:	4b11      	ldr	r3, [pc, #68]	@ (801580c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>)
 80157c8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80157cc:	eb0b 040e 	add.w	r4, fp, lr
 80157d0:	f894 8001 	ldrb.w	r8, [r4, #1]
 80157d4:	78a4      	ldrb	r4, [r4, #2]
 80157d6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80157da:	f81b e00e 	ldrb.w	lr, [fp, lr]
 80157de:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80157e2:	ea03 2404 	and.w	r4, r3, r4, lsl #8
 80157e6:	ea44 0408 	orr.w	r4, r4, r8
 80157ea:	ea44 04de 	orr.w	r4, r4, lr, lsr #3
 80157ee:	f820 4b02 	strh.w	r4, [r0], #2
 80157f2:	4548      	cmp	r0, r9
 80157f4:	4439      	add	r1, r7
 80157f6:	4432      	add	r2, r6
 80157f8:	d1dc      	bne.n	80157b4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 80157fa:	e748      	b.n	801568e <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80157fc:	2b00      	cmp	r3, #0
 80157fe:	f77f af46 	ble.w	801568e <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8015802:	1415      	asrs	r5, r2, #16
 8015804:	4604      	mov	r4, r0
 8015806:	9501      	str	r5, [sp, #4]
 8015808:	e783      	b.n	8015712 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10a>
 801580a:	bf00      	nop
 801580c:	fffff800 	.word	0xfffff800

08015810 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015810:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8015814:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015818:	b087      	sub	sp, #28
 801581a:	e9cd 1203 	strd	r1, r2, [sp, #12]
 801581e:	e9dd 2115 	ldrd	r2, r1, [sp, #84]	@ 0x54
 8015822:	e9dd 0b17 	ldrd	r0, fp, [sp, #92]	@ 0x5c
 8015826:	6854      	ldr	r4, [r2, #4]
 8015828:	f89d 5064 	ldrb.w	r5, [sp, #100]	@ 0x64
 801582c:	fb04 1100 	mla	r1, r4, r0, r1
 8015830:	e9dd 9a13 	ldrd	r9, sl, [sp, #76]	@ 0x4c
 8015834:	6810      	ldr	r0, [r2, #0]
 8015836:	e9db 2400 	ldrd	r2, r4, [fp]
 801583a:	eb00 0e41 	add.w	lr, r0, r1, lsl #1
 801583e:	1d21      	adds	r1, r4, #4
 8015840:	9505      	str	r5, [sp, #20]
 8015842:	9102      	str	r1, [sp, #8]
 8015844:	9201      	str	r2, [sp, #4]
 8015846:	e9dd 7211 	ldrd	r7, r2, [sp, #68]	@ 0x44
 801584a:	9903      	ldr	r1, [sp, #12]
 801584c:	2900      	cmp	r1, #0
 801584e:	dc03      	bgt.n	8015858 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8015850:	9904      	ldr	r1, [sp, #16]
 8015852:	2900      	cmp	r1, #0
 8015854:	f340 80b6 	ble.w	80159c4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8015858:	e9db 4602 	ldrd	r4, r6, [fp, #8]
 801585c:	2b00      	cmp	r3, #0
 801585e:	f507 4700 	add.w	r7, r7, #32768	@ 0x8000
 8015862:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8015866:	b221      	sxth	r1, r4
 8015868:	b235      	sxth	r5, r6
 801586a:	f340 80ae 	ble.w	80159ca <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801586e:	1438      	asrs	r0, r7, #16
 8015870:	d406      	bmi.n	8015880 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015872:	4288      	cmp	r0, r1
 8015874:	da04      	bge.n	8015880 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015876:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801587a:	d401      	bmi.n	8015880 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801587c:	45ac      	cmp	ip, r5
 801587e:	db3c      	blt.n	80158fa <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8015880:	3b01      	subs	r3, #1
 8015882:	444f      	add	r7, r9
 8015884:	4452      	add	r2, sl
 8015886:	f10e 0e02 	add.w	lr, lr, #2
 801588a:	d1f0      	bne.n	801586e <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801588c:	9b03      	ldr	r3, [sp, #12]
 801588e:	2b00      	cmp	r3, #0
 8015890:	f340 8098 	ble.w	80159c4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8015894:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015898:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801589c:	eec5 7a80 	vdiv.f32	s15, s11, s0
 80158a0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80158a4:	ee20 6aa7 	vmul.f32	s12, s1, s15
 80158a8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80158ac:	ee76 6a62 	vsub.f32	s13, s12, s5
 80158b0:	ee37 7ac3 	vsub.f32	s14, s15, s6
 80158b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80158b8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80158bc:	ee16 2a90 	vmov	r2, s13
 80158c0:	3b01      	subs	r3, #1
 80158c2:	9303      	str	r3, [sp, #12]
 80158c4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80158c6:	9904      	ldr	r1, [sp, #16]
 80158c8:	fb92 f9f3 	sdiv	r9, r2, r3
 80158cc:	ee17 2a10 	vmov	r2, s14
 80158d0:	eeb0 7a43 	vmov.f32	s14, s6
 80158d4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80158d8:	fb92 faf3 	sdiv	sl, r2, r3
 80158dc:	ee17 2a10 	vmov	r2, s14
 80158e0:	eeb0 7a62 	vmov.f32	s14, s5
 80158e4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80158e8:	eeb0 3a67 	vmov.f32	s6, s15
 80158ec:	ee17 7a10 	vmov	r7, s14
 80158f0:	eef0 2a46 	vmov.f32	s5, s12
 80158f4:	bf08      	it	eq
 80158f6:	460b      	moveq	r3, r1
 80158f8:	e7a7      	b.n	801584a <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80158fa:	f103 38ff 	add.w	r8, r3, #4294967295
 80158fe:	fb08 7c09 	mla	ip, r8, r9, r7
 8015902:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 8015906:	d56a      	bpl.n	80159de <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ce>
 8015908:	4675      	mov	r5, lr
 801590a:	eb0e 0e43 	add.w	lr, lr, r3, lsl #1
 801590e:	e002      	b.n	8015916 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8015910:	1438      	asrs	r0, r7, #16
 8015912:	e9db 4602 	ldrd	r4, r6, [fp, #8]
 8015916:	2800      	cmp	r0, #0
 8015918:	444f      	add	r7, r9
 801591a:	db4b      	blt.n	80159b4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801591c:	42a0      	cmp	r0, r4
 801591e:	da49      	bge.n	80159b4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8015920:	1413      	asrs	r3, r2, #16
 8015922:	d447      	bmi.n	80159b4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8015924:	42b3      	cmp	r3, r6
 8015926:	b224      	sxth	r4, r4
 8015928:	da44      	bge.n	80159b4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801592a:	9901      	ldr	r1, [sp, #4]
 801592c:	fb03 1404 	mla	r4, r3, r4, r1
 8015930:	9902      	ldr	r1, [sp, #8]
 8015932:	5c23      	ldrb	r3, [r4, r0]
 8015934:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8015938:	0e0b      	lsrs	r3, r1, #24
 801593a:	d03b      	beq.n	80159b4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801593c:	9805      	ldr	r0, [sp, #20]
 801593e:	f3c1 4807 	ubfx	r8, r1, #16, #8
 8015942:	fb00 f003 	mul.w	r0, r0, r3
 8015946:	1c43      	adds	r3, r0, #1
 8015948:	eb03 2320 	add.w	r3, r3, r0, asr #8
 801594c:	121b      	asrs	r3, r3, #8
 801594e:	43d8      	mvns	r0, r3
 8015950:	f3c1 2c07 	ubfx	ip, r1, #8, #8
 8015954:	b29b      	uxth	r3, r3
 8015956:	b2c9      	uxtb	r1, r1
 8015958:	882e      	ldrh	r6, [r5, #0]
 801595a:	fb1c fc03 	smulbb	ip, ip, r3
 801595e:	fb18 f803 	smulbb	r8, r8, r3
 8015962:	fb11 f303 	smulbb	r3, r1, r3
 8015966:	10f4      	asrs	r4, r6, #3
 8015968:	1231      	asrs	r1, r6, #8
 801596a:	00f6      	lsls	r6, r6, #3
 801596c:	b2c0      	uxtb	r0, r0
 801596e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8015972:	b2f6      	uxtb	r6, r6
 8015974:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8015978:	fb01 8800 	mla	r8, r1, r0, r8
 801597c:	fb04 c400 	mla	r4, r4, r0, ip
 8015980:	fb06 3100 	mla	r1, r6, r0, r3
 8015984:	fa1f fc88 	uxth.w	ip, r8
 8015988:	b289      	uxth	r1, r1
 801598a:	b2a4      	uxth	r4, r4
 801598c:	1c4e      	adds	r6, r1, #1
 801598e:	1c60      	adds	r0, r4, #1
 8015990:	f10c 0301 	add.w	r3, ip, #1
 8015994:	eb06 2611 	add.w	r6, r6, r1, lsr #8
 8015998:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801599c:	eb00 2114 	add.w	r1, r0, r4, lsr #8
 80159a0:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80159a4:	f3c6 20c4 	ubfx	r0, r6, #11, #5
 80159a8:	0949      	lsrs	r1, r1, #5
 80159aa:	4303      	orrs	r3, r0
 80159ac:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80159b0:	430b      	orrs	r3, r1
 80159b2:	802b      	strh	r3, [r5, #0]
 80159b4:	3502      	adds	r5, #2
 80159b6:	4575      	cmp	r5, lr
 80159b8:	4452      	add	r2, sl
 80159ba:	d1a9      	bne.n	8015910 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80159bc:	9b03      	ldr	r3, [sp, #12]
 80159be:	2b00      	cmp	r3, #0
 80159c0:	f73f af68 	bgt.w	8015894 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80159c4:	b007      	add	sp, #28
 80159c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80159ca:	f43f af5f 	beq.w	801588c <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80159ce:	f103 38ff 	add.w	r8, r3, #4294967295
 80159d2:	fb08 7c09 	mla	ip, r8, r9, r7
 80159d6:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 80159da:	f53f af57 	bmi.w	801588c <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80159de:	4561      	cmp	r1, ip
 80159e0:	dd5c      	ble.n	8015a9c <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80159e2:	fb08 280a 	mla	r8, r8, sl, r2
 80159e6:	ea5f 4828 	movs.w	r8, r8, asr #16
 80159ea:	d457      	bmi.n	8015a9c <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80159ec:	45a8      	cmp	r8, r5
 80159ee:	da55      	bge.n	8015a9c <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80159f0:	2b00      	cmp	r3, #0
 80159f2:	f77f af4b 	ble.w	801588c <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80159f6:	eb0e 0843 	add.w	r8, lr, r3, lsl #1
 80159fa:	e001      	b.n	8015a00 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80159fc:	f9bb 1008 	ldrsh.w	r1, [fp, #8]
 8015a00:	9801      	ldr	r0, [sp, #4]
 8015a02:	1413      	asrs	r3, r2, #16
 8015a04:	fb01 0303 	mla	r3, r1, r3, r0
 8015a08:	1439      	asrs	r1, r7, #16
 8015a0a:	5c5b      	ldrb	r3, [r3, r1]
 8015a0c:	9902      	ldr	r1, [sp, #8]
 8015a0e:	444f      	add	r7, r9
 8015a10:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8015a14:	4452      	add	r2, sl
 8015a16:	0e18      	lsrs	r0, r3, #24
 8015a18:	d03b      	beq.n	8015a92 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8015a1a:	9905      	ldr	r1, [sp, #20]
 8015a1c:	f3c3 4c07 	ubfx	ip, r3, #16, #8
 8015a20:	fb01 f100 	mul.w	r1, r1, r0
 8015a24:	1c48      	adds	r0, r1, #1
 8015a26:	eb00 2021 	add.w	r0, r0, r1, asr #8
 8015a2a:	1200      	asrs	r0, r0, #8
 8015a2c:	43c1      	mvns	r1, r0
 8015a2e:	f3c3 2607 	ubfx	r6, r3, #8, #8
 8015a32:	b280      	uxth	r0, r0
 8015a34:	b2db      	uxtb	r3, r3
 8015a36:	f8be 5000 	ldrh.w	r5, [lr]
 8015a3a:	fb16 f600 	smulbb	r6, r6, r0
 8015a3e:	fb1c fc00 	smulbb	ip, ip, r0
 8015a42:	fb13 f300 	smulbb	r3, r3, r0
 8015a46:	122c      	asrs	r4, r5, #8
 8015a48:	10e8      	asrs	r0, r5, #3
 8015a4a:	00ed      	lsls	r5, r5, #3
 8015a4c:	b2c9      	uxtb	r1, r1
 8015a4e:	b2ed      	uxtb	r5, r5
 8015a50:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8015a54:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8015a58:	fb00 6001 	mla	r0, r0, r1, r6
 8015a5c:	fb05 3301 	mla	r3, r5, r1, r3
 8015a60:	fb04 c401 	mla	r4, r4, r1, ip
 8015a64:	b280      	uxth	r0, r0
 8015a66:	b2a4      	uxth	r4, r4
 8015a68:	b29b      	uxth	r3, r3
 8015a6a:	1c65      	adds	r5, r4, #1
 8015a6c:	1c5e      	adds	r6, r3, #1
 8015a6e:	1c41      	adds	r1, r0, #1
 8015a70:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 8015a74:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8015a78:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8015a7c:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8015a80:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8015a84:	0949      	lsrs	r1, r1, #5
 8015a86:	431c      	orrs	r4, r3
 8015a88:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8015a8c:	430c      	orrs	r4, r1
 8015a8e:	f8ae 4000 	strh.w	r4, [lr]
 8015a92:	f10e 0e02 	add.w	lr, lr, #2
 8015a96:	45c6      	cmp	lr, r8
 8015a98:	d1b0      	bne.n	80159fc <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8015a9a:	e6f7      	b.n	801588c <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015a9c:	2b00      	cmp	r3, #0
 8015a9e:	f77f aef5 	ble.w	801588c <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015aa2:	4675      	mov	r5, lr
 8015aa4:	1438      	asrs	r0, r7, #16
 8015aa6:	e730      	b.n	801590a <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>

08015aa8 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015aa8:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8015aac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ab0:	b085      	sub	sp, #20
 8015ab2:	e9cd 1202 	strd	r1, r2, [sp, #8]
 8015ab6:	e9dd 2113 	ldrd	r2, r1, [sp, #76]	@ 0x4c
 8015aba:	e9dd 0b15 	ldrd	r0, fp, [sp, #84]	@ 0x54
 8015abe:	6854      	ldr	r4, [r2, #4]
 8015ac0:	e9dd 9a11 	ldrd	r9, sl, [sp, #68]	@ 0x44
 8015ac4:	fb04 1000 	mla	r0, r4, r0, r1
 8015ac8:	6814      	ldr	r4, [r2, #0]
 8015aca:	e9db 2500 	ldrd	r2, r5, [fp]
 8015ace:	eb04 0e40 	add.w	lr, r4, r0, lsl #1
 8015ad2:	1d28      	adds	r0, r5, #4
 8015ad4:	9001      	str	r0, [sp, #4]
 8015ad6:	9200      	str	r2, [sp, #0]
 8015ad8:	e9dd 120f 	ldrd	r1, r2, [sp, #60]	@ 0x3c
 8015adc:	9802      	ldr	r0, [sp, #8]
 8015ade:	2800      	cmp	r0, #0
 8015ae0:	dc03      	bgt.n	8015aea <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8015ae2:	9803      	ldr	r0, [sp, #12]
 8015ae4:	2800      	cmp	r0, #0
 8015ae6:	f340 80b8 	ble.w	8015c5a <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 8015aea:	e9db 5602 	ldrd	r5, r6, [fp, #8]
 8015aee:	2b00      	cmp	r3, #0
 8015af0:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8015af4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8015af8:	b228      	sxth	r0, r5
 8015afa:	b237      	sxth	r7, r6
 8015afc:	f340 80b0 	ble.w	8015c60 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8015b00:	140c      	asrs	r4, r1, #16
 8015b02:	d406      	bmi.n	8015b12 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8015b04:	4284      	cmp	r4, r0
 8015b06:	da04      	bge.n	8015b12 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8015b08:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015b0c:	d401      	bmi.n	8015b12 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8015b0e:	45bc      	cmp	ip, r7
 8015b10:	db3c      	blt.n	8015b8c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xe4>
 8015b12:	3b01      	subs	r3, #1
 8015b14:	4449      	add	r1, r9
 8015b16:	4452      	add	r2, sl
 8015b18:	f10e 0e02 	add.w	lr, lr, #2
 8015b1c:	d1f0      	bne.n	8015b00 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8015b1e:	9b02      	ldr	r3, [sp, #8]
 8015b20:	2b00      	cmp	r3, #0
 8015b22:	f340 809a 	ble.w	8015c5a <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 8015b26:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015b2a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015b2e:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8015b32:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015b36:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8015b3a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015b3e:	ee76 6a62 	vsub.f32	s13, s12, s5
 8015b42:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8015b46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015b4a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8015b4e:	ee16 2a90 	vmov	r2, s13
 8015b52:	3b01      	subs	r3, #1
 8015b54:	9302      	str	r3, [sp, #8]
 8015b56:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015b58:	9803      	ldr	r0, [sp, #12]
 8015b5a:	fb92 f9f3 	sdiv	r9, r2, r3
 8015b5e:	ee17 2a10 	vmov	r2, s14
 8015b62:	eeb0 7a43 	vmov.f32	s14, s6
 8015b66:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8015b6a:	fb92 faf3 	sdiv	sl, r2, r3
 8015b6e:	ee17 2a10 	vmov	r2, s14
 8015b72:	eeb0 7a62 	vmov.f32	s14, s5
 8015b76:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8015b7a:	eeb0 3a67 	vmov.f32	s6, s15
 8015b7e:	ee17 1a10 	vmov	r1, s14
 8015b82:	eef0 2a46 	vmov.f32	s5, s12
 8015b86:	bf08      	it	eq
 8015b88:	4603      	moveq	r3, r0
 8015b8a:	e7a7      	b.n	8015adc <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8015b8c:	f103 38ff 	add.w	r8, r3, #4294967295
 8015b90:	fb08 1c09 	mla	ip, r8, r9, r1
 8015b94:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 8015b98:	d56c      	bpl.n	8015c74 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1cc>
 8015b9a:	4677      	mov	r7, lr
 8015b9c:	eb0e 0e43 	add.w	lr, lr, r3, lsl #1
 8015ba0:	e002      	b.n	8015ba8 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8015ba2:	140c      	asrs	r4, r1, #16
 8015ba4:	e9db 5602 	ldrd	r5, r6, [fp, #8]
 8015ba8:	2c00      	cmp	r4, #0
 8015baa:	db4d      	blt.n	8015c48 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 8015bac:	42ac      	cmp	r4, r5
 8015bae:	da4b      	bge.n	8015c48 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 8015bb0:	1413      	asrs	r3, r2, #16
 8015bb2:	d449      	bmi.n	8015c48 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 8015bb4:	42b3      	cmp	r3, r6
 8015bb6:	b22d      	sxth	r5, r5
 8015bb8:	da46      	bge.n	8015c48 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 8015bba:	9800      	ldr	r0, [sp, #0]
 8015bbc:	fb03 0505 	mla	r5, r3, r5, r0
 8015bc0:	9801      	ldr	r0, [sp, #4]
 8015bc2:	5d2b      	ldrb	r3, [r5, r4]
 8015bc4:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8015bc8:	0e18      	lsrs	r0, r3, #24
 8015bca:	28ff      	cmp	r0, #255	@ 0xff
 8015bcc:	f000 80c0 	beq.w	8015d50 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8015bd0:	b2c4      	uxtb	r4, r0
 8015bd2:	f3c3 4c07 	ubfx	ip, r3, #16, #8
 8015bd6:	f3c3 2607 	ubfx	r6, r3, #8, #8
 8015bda:	b2a5      	uxth	r5, r4
 8015bdc:	b2db      	uxtb	r3, r3
 8015bde:	b398      	cbz	r0, 8015c48 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 8015be0:	43e4      	mvns	r4, r4
 8015be2:	f8b7 8000 	ldrh.w	r8, [r7]
 8015be6:	fb16 f605 	smulbb	r6, r6, r5
 8015bea:	fb1c fc05 	smulbb	ip, ip, r5
 8015bee:	fb13 f505 	smulbb	r5, r3, r5
 8015bf2:	ea4f 2028 	mov.w	r0, r8, asr #8
 8015bf6:	b2e3      	uxtb	r3, r4
 8015bf8:	ea4f 04e8 	mov.w	r4, r8, asr #3
 8015bfc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015c00:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8015c04:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8015c08:	fa5f f888 	uxtb.w	r8, r8
 8015c0c:	fb04 6403 	mla	r4, r4, r3, r6
 8015c10:	fb00 cc03 	mla	ip, r0, r3, ip
 8015c14:	fb08 5303 	mla	r3, r8, r3, r5
 8015c18:	fa1f fc8c 	uxth.w	ip, ip
 8015c1c:	b298      	uxth	r0, r3
 8015c1e:	b2a5      	uxth	r5, r4
 8015c20:	f10c 0301 	add.w	r3, ip, #1
 8015c24:	1c44      	adds	r4, r0, #1
 8015c26:	1c6e      	adds	r6, r5, #1
 8015c28:	eb04 2410 	add.w	r4, r4, r0, lsr #8
 8015c2c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8015c30:	eb06 2015 	add.w	r0, r6, r5, lsr #8
 8015c34:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8015c38:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8015c3c:	0940      	lsrs	r0, r0, #5
 8015c3e:	4323      	orrs	r3, r4
 8015c40:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8015c44:	4303      	orrs	r3, r0
 8015c46:	803b      	strh	r3, [r7, #0]
 8015c48:	3702      	adds	r7, #2
 8015c4a:	4577      	cmp	r7, lr
 8015c4c:	4449      	add	r1, r9
 8015c4e:	4452      	add	r2, sl
 8015c50:	d1a7      	bne.n	8015ba2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8015c52:	9b02      	ldr	r3, [sp, #8]
 8015c54:	2b00      	cmp	r3, #0
 8015c56:	f73f af66 	bgt.w	8015b26 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015c5a:	b005      	add	sp, #20
 8015c5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015c60:	f43f af5d 	beq.w	8015b1e <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015c64:	f103 38ff 	add.w	r8, r3, #4294967295
 8015c68:	fb08 1c09 	mla	ip, r8, r9, r1
 8015c6c:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 8015c70:	f53f af55 	bmi.w	8015b1e <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015c74:	4560      	cmp	r0, ip
 8015c76:	dd65      	ble.n	8015d44 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8015c78:	fb08 280a 	mla	r8, r8, sl, r2
 8015c7c:	ea5f 4828 	movs.w	r8, r8, asr #16
 8015c80:	d460      	bmi.n	8015d44 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8015c82:	45b8      	cmp	r8, r7
 8015c84:	da5e      	bge.n	8015d44 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8015c86:	2b00      	cmp	r3, #0
 8015c88:	f77f af49 	ble.w	8015b1e <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015c8c:	eb0e 0843 	add.w	r8, lr, r3, lsl #1
 8015c90:	e03f      	b.n	8015d12 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8015c92:	b2f0      	uxtb	r0, r6
 8015c94:	f3c3 4c07 	ubfx	ip, r3, #16, #8
 8015c98:	f3c3 2707 	ubfx	r7, r3, #8, #8
 8015c9c:	b284      	uxth	r4, r0
 8015c9e:	b2db      	uxtb	r3, r3
 8015ca0:	b376      	cbz	r6, 8015d00 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8015ca2:	43c0      	mvns	r0, r0
 8015ca4:	f8be 6000 	ldrh.w	r6, [lr]
 8015ca8:	fb17 f704 	smulbb	r7, r7, r4
 8015cac:	fb1c fc04 	smulbb	ip, ip, r4
 8015cb0:	fb13 f304 	smulbb	r3, r3, r4
 8015cb4:	1235      	asrs	r5, r6, #8
 8015cb6:	10f4      	asrs	r4, r6, #3
 8015cb8:	00f6      	lsls	r6, r6, #3
 8015cba:	b2c0      	uxtb	r0, r0
 8015cbc:	b2f6      	uxtb	r6, r6
 8015cbe:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8015cc2:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8015cc6:	fb04 7400 	mla	r4, r4, r0, r7
 8015cca:	fb06 3300 	mla	r3, r6, r0, r3
 8015cce:	fb05 c500 	mla	r5, r5, r0, ip
 8015cd2:	b2a4      	uxth	r4, r4
 8015cd4:	b2ad      	uxth	r5, r5
 8015cd6:	b29b      	uxth	r3, r3
 8015cd8:	1c6e      	adds	r6, r5, #1
 8015cda:	1c5f      	adds	r7, r3, #1
 8015cdc:	1c60      	adds	r0, r4, #1
 8015cde:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8015ce2:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 8015ce6:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8015cea:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8015cee:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8015cf2:	0940      	lsrs	r0, r0, #5
 8015cf4:	432b      	orrs	r3, r5
 8015cf6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8015cfa:	4303      	orrs	r3, r0
 8015cfc:	f8ae 3000 	strh.w	r3, [lr]
 8015d00:	f10e 0e02 	add.w	lr, lr, #2
 8015d04:	45c6      	cmp	lr, r8
 8015d06:	4449      	add	r1, r9
 8015d08:	4452      	add	r2, sl
 8015d0a:	f43f af08 	beq.w	8015b1e <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015d0e:	f9bb 0008 	ldrsh.w	r0, [fp, #8]
 8015d12:	9c00      	ldr	r4, [sp, #0]
 8015d14:	1413      	asrs	r3, r2, #16
 8015d16:	fb00 4303 	mla	r3, r0, r3, r4
 8015d1a:	1408      	asrs	r0, r1, #16
 8015d1c:	5c1b      	ldrb	r3, [r3, r0]
 8015d1e:	9801      	ldr	r0, [sp, #4]
 8015d20:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8015d24:	0e1e      	lsrs	r6, r3, #24
 8015d26:	2eff      	cmp	r6, #255	@ 0xff
 8015d28:	d1b3      	bne.n	8015c92 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8015d2a:	0958      	lsrs	r0, r3, #5
 8015d2c:	f400 64fc 	and.w	r4, r0, #2016	@ 0x7e0
 8015d30:	480d      	ldr	r0, [pc, #52]	@ (8015d68 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>)
 8015d32:	ea00 2013 	and.w	r0, r0, r3, lsr #8
 8015d36:	4320      	orrs	r0, r4
 8015d38:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8015d3c:	4303      	orrs	r3, r0
 8015d3e:	f8ae 3000 	strh.w	r3, [lr]
 8015d42:	e7dd      	b.n	8015d00 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8015d44:	2b00      	cmp	r3, #0
 8015d46:	f77f aeea 	ble.w	8015b1e <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015d4a:	4677      	mov	r7, lr
 8015d4c:	140c      	asrs	r4, r1, #16
 8015d4e:	e725      	b.n	8015b9c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf4>
 8015d50:	0958      	lsrs	r0, r3, #5
 8015d52:	f400 64fc 	and.w	r4, r0, #2016	@ 0x7e0
 8015d56:	4804      	ldr	r0, [pc, #16]	@ (8015d68 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>)
 8015d58:	ea00 2013 	and.w	r0, r0, r3, lsr #8
 8015d5c:	4320      	orrs	r0, r4
 8015d5e:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8015d62:	4303      	orrs	r3, r0
 8015d64:	803b      	strh	r3, [r7, #0]
 8015d66:	e76f      	b.n	8015c48 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 8015d68:	fffff800 	.word	0xfffff800

08015d6c <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015d6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d70:	b089      	sub	sp, #36	@ 0x24
 8015d72:	f89d 506c 	ldrb.w	r5, [sp, #108]	@ 0x6c
 8015d76:	9104      	str	r1, [sp, #16]
 8015d78:	ea6f 0c05 	mvn.w	ip, r5
 8015d7c:	e9dd 4117 	ldrd	r4, r1, [sp, #92]	@ 0x5c
 8015d80:	e9dd 6715 	ldrd	r6, r7, [sp, #84]	@ 0x54
 8015d84:	6860      	ldr	r0, [r4, #4]
 8015d86:	9205      	str	r2, [sp, #20]
 8015d88:	e9dd 2b19 	ldrd	r2, fp, [sp, #100]	@ 0x64
 8015d8c:	fb00 1102 	mla	r1, r0, r2, r1
 8015d90:	6824      	ldr	r4, [r4, #0]
 8015d92:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8015d96:	4421      	add	r1, r4
 8015d98:	f8db 4004 	ldr.w	r4, [fp, #4]
 8015d9c:	f8db 2000 	ldr.w	r2, [fp]
 8015da0:	3404      	adds	r4, #4
 8015da2:	fa5f fc8c 	uxtb.w	ip, ip
 8015da6:	fa1f f985 	uxth.w	r9, r5
 8015daa:	9407      	str	r4, [sp, #28]
 8015dac:	9202      	str	r2, [sp, #8]
 8015dae:	e9dd 2013 	ldrd	r2, r0, [sp, #76]	@ 0x4c
 8015db2:	9c04      	ldr	r4, [sp, #16]
 8015db4:	2c00      	cmp	r4, #0
 8015db6:	dc03      	bgt.n	8015dc0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8015db8:	9c05      	ldr	r4, [sp, #20]
 8015dba:	2c00      	cmp	r4, #0
 8015dbc:	f340 80b1 	ble.w	8015f22 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8015dc0:	e9db e802 	ldrd	lr, r8, [fp, #8]
 8015dc4:	2b00      	cmp	r3, #0
 8015dc6:	fa0f f588 	sxth.w	r5, r8
 8015dca:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8015dce:	f500 4000 	add.w	r0, r0, #32768	@ 0x8000
 8015dd2:	fa0f f48e 	sxth.w	r4, lr
 8015dd6:	9503      	str	r5, [sp, #12]
 8015dd8:	f340 80a6 	ble.w	8015f28 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015ddc:	46f2      	mov	sl, lr
 8015dde:	9401      	str	r4, [sp, #4]
 8015de0:	1415      	asrs	r5, r2, #16
 8015de2:	d408      	bmi.n	8015df6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8015de4:	9c01      	ldr	r4, [sp, #4]
 8015de6:	42a5      	cmp	r5, r4
 8015de8:	da05      	bge.n	8015df6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8015dea:	ea5f 4e20 	movs.w	lr, r0, asr #16
 8015dee:	d402      	bmi.n	8015df6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8015df0:	9c03      	ldr	r4, [sp, #12]
 8015df2:	45a6      	cmp	lr, r4
 8015df4:	db3e      	blt.n	8015e74 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x108>
 8015df6:	3b01      	subs	r3, #1
 8015df8:	4432      	add	r2, r6
 8015dfa:	4438      	add	r0, r7
 8015dfc:	f101 0103 	add.w	r1, r1, #3
 8015e00:	d1ee      	bne.n	8015de0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015e02:	9b04      	ldr	r3, [sp, #16]
 8015e04:	2b00      	cmp	r3, #0
 8015e06:	f340 808c 	ble.w	8015f22 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8015e0a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8015e0e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015e12:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015e16:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015e1a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015e1e:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8015e22:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015e26:	ee76 6a62 	vsub.f32	s13, s12, s5
 8015e2a:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8015e2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015e32:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8015e36:	ee16 2a90 	vmov	r2, s13
 8015e3a:	3b01      	subs	r3, #1
 8015e3c:	9304      	str	r3, [sp, #16]
 8015e3e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8015e40:	9c05      	ldr	r4, [sp, #20]
 8015e42:	fb92 f6f3 	sdiv	r6, r2, r3
 8015e46:	ee17 2a10 	vmov	r2, s14
 8015e4a:	eeb0 7a43 	vmov.f32	s14, s6
 8015e4e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8015e52:	ee17 0a10 	vmov	r0, s14
 8015e56:	eeb0 7a62 	vmov.f32	s14, s5
 8015e5a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8015e5e:	fb92 f7f3 	sdiv	r7, r2, r3
 8015e62:	eeb0 3a67 	vmov.f32	s6, s15
 8015e66:	ee17 2a10 	vmov	r2, s14
 8015e6a:	eef0 2a46 	vmov.f32	s5, s12
 8015e6e:	bf08      	it	eq
 8015e70:	4623      	moveq	r3, r4
 8015e72:	e79e      	b.n	8015db2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8015e74:	9506      	str	r5, [sp, #24]
 8015e76:	1e5d      	subs	r5, r3, #1
 8015e78:	46d6      	mov	lr, sl
 8015e7a:	fb05 2a06 	mla	sl, r5, r6, r2
 8015e7e:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 8015e82:	9c01      	ldr	r4, [sp, #4]
 8015e84:	9501      	str	r5, [sp, #4]
 8015e86:	d559      	bpl.n	8015f3c <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8015e88:	460c      	mov	r4, r1
 8015e8a:	9d06      	ldr	r5, [sp, #24]
 8015e8c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8015e90:	4419      	add	r1, r3
 8015e92:	4673      	mov	r3, lr
 8015e94:	46b6      	mov	lr, r6
 8015e96:	4646      	mov	r6, r8
 8015e98:	e002      	b.n	8015ea0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8015e9a:	1415      	asrs	r5, r2, #16
 8015e9c:	e9db 3602 	ldrd	r3, r6, [fp, #8]
 8015ea0:	2d00      	cmp	r5, #0
 8015ea2:	4472      	add	r2, lr
 8015ea4:	db35      	blt.n	8015f12 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8015ea6:	429d      	cmp	r5, r3
 8015ea8:	da33      	bge.n	8015f12 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8015eaa:	ea5f 4820 	movs.w	r8, r0, asr #16
 8015eae:	d430      	bmi.n	8015f12 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8015eb0:	45b0      	cmp	r8, r6
 8015eb2:	b21b      	sxth	r3, r3
 8015eb4:	da2d      	bge.n	8015f12 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8015eb6:	9e02      	ldr	r6, [sp, #8]
 8015eb8:	fb08 6303 	mla	r3, r8, r3, r6
 8015ebc:	7826      	ldrb	r6, [r4, #0]
 8015ebe:	5d5b      	ldrb	r3, [r3, r5]
 8015ec0:	fb16 f80c 	smulbb	r8, r6, ip
 8015ec4:	9d07      	ldr	r5, [sp, #28]
 8015ec6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8015eca:	5cee      	ldrb	r6, [r5, r3]
 8015ecc:	442b      	add	r3, r5
 8015ece:	fb06 8609 	mla	r6, r6, r9, r8
 8015ed2:	b2b6      	uxth	r6, r6
 8015ed4:	7865      	ldrb	r5, [r4, #1]
 8015ed6:	f106 0801 	add.w	r8, r6, #1
 8015eda:	eb08 2616 	add.w	r6, r8, r6, lsr #8
 8015ede:	1236      	asrs	r6, r6, #8
 8015ee0:	fb15 f80c 	smulbb	r8, r5, ip
 8015ee4:	7026      	strb	r6, [r4, #0]
 8015ee6:	785d      	ldrb	r5, [r3, #1]
 8015ee8:	78a6      	ldrb	r6, [r4, #2]
 8015eea:	fb05 8509 	mla	r5, r5, r9, r8
 8015eee:	b2ad      	uxth	r5, r5
 8015ef0:	f105 0801 	add.w	r8, r5, #1
 8015ef4:	eb08 2515 	add.w	r5, r8, r5, lsr #8
 8015ef8:	122d      	asrs	r5, r5, #8
 8015efa:	fb16 f60c 	smulbb	r6, r6, ip
 8015efe:	7065      	strb	r5, [r4, #1]
 8015f00:	789b      	ldrb	r3, [r3, #2]
 8015f02:	fb03 6309 	mla	r3, r3, r9, r6
 8015f06:	b29b      	uxth	r3, r3
 8015f08:	1c5d      	adds	r5, r3, #1
 8015f0a:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 8015f0e:	121b      	asrs	r3, r3, #8
 8015f10:	70a3      	strb	r3, [r4, #2]
 8015f12:	3403      	adds	r4, #3
 8015f14:	428c      	cmp	r4, r1
 8015f16:	4438      	add	r0, r7
 8015f18:	d1bf      	bne.n	8015e9a <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 8015f1a:	9b04      	ldr	r3, [sp, #16]
 8015f1c:	2b00      	cmp	r3, #0
 8015f1e:	f73f af74 	bgt.w	8015e0a <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015f22:	b009      	add	sp, #36	@ 0x24
 8015f24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015f28:	f43f af6b 	beq.w	8015e02 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015f2c:	1e5d      	subs	r5, r3, #1
 8015f2e:	fb05 2a06 	mla	sl, r5, r6, r2
 8015f32:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 8015f36:	9501      	str	r5, [sp, #4]
 8015f38:	f53f af63 	bmi.w	8015e02 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015f3c:	4554      	cmp	r4, sl
 8015f3e:	dd54      	ble.n	8015fea <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8015f40:	9d01      	ldr	r5, [sp, #4]
 8015f42:	fb05 0507 	mla	r5, r5, r7, r0
 8015f46:	ea5f 4a25 	movs.w	sl, r5, asr #16
 8015f4a:	d44e      	bmi.n	8015fea <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8015f4c:	9d03      	ldr	r5, [sp, #12]
 8015f4e:	45aa      	cmp	sl, r5
 8015f50:	da4b      	bge.n	8015fea <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8015f52:	2b00      	cmp	r3, #0
 8015f54:	f77f af55 	ble.w	8015e02 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015f58:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8015f5c:	eb01 0e03 	add.w	lr, r1, r3
 8015f60:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8015f64:	3103      	adds	r1, #3
 8015f66:	e002      	b.n	8015f6e <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8015f68:	f9bb 4008 	ldrsh.w	r4, [fp, #8]
 8015f6c:	3103      	adds	r1, #3
 8015f6e:	9d02      	ldr	r5, [sp, #8]
 8015f70:	1403      	asrs	r3, r0, #16
 8015f72:	fb04 5303 	mla	r3, r4, r3, r5
 8015f76:	1415      	asrs	r5, r2, #16
 8015f78:	f811 4c03 	ldrb.w	r4, [r1, #-3]
 8015f7c:	5d5b      	ldrb	r3, [r3, r5]
 8015f7e:	fb14 f40c 	smulbb	r4, r4, ip
 8015f82:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8015f86:	f818 5003 	ldrb.w	r5, [r8, r3]
 8015f8a:	4443      	add	r3, r8
 8015f8c:	fb05 4509 	mla	r5, r5, r9, r4
 8015f90:	b2ad      	uxth	r5, r5
 8015f92:	f105 0a01 	add.w	sl, r5, #1
 8015f96:	f811 4c02 	ldrb.w	r4, [r1, #-2]
 8015f9a:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8015f9e:	122d      	asrs	r5, r5, #8
 8015fa0:	fb14 f40c 	smulbb	r4, r4, ip
 8015fa4:	f801 5c03 	strb.w	r5, [r1, #-3]
 8015fa8:	785d      	ldrb	r5, [r3, #1]
 8015faa:	f811 ac01 	ldrb.w	sl, [r1, #-1]
 8015fae:	fb05 4409 	mla	r4, r5, r9, r4
 8015fb2:	b2a4      	uxth	r4, r4
 8015fb4:	1c65      	adds	r5, r4, #1
 8015fb6:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 8015fba:	1224      	asrs	r4, r4, #8
 8015fbc:	fb1a fa0c 	smulbb	sl, sl, ip
 8015fc0:	f801 4c02 	strb.w	r4, [r1, #-2]
 8015fc4:	789b      	ldrb	r3, [r3, #2]
 8015fc6:	458e      	cmp	lr, r1
 8015fc8:	fb03 aa09 	mla	sl, r3, r9, sl
 8015fcc:	fa1f fa8a 	uxth.w	sl, sl
 8015fd0:	f10a 0301 	add.w	r3, sl, #1
 8015fd4:	eb03 2a1a 	add.w	sl, r3, sl, lsr #8
 8015fd8:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8015fdc:	4438      	add	r0, r7
 8015fde:	4432      	add	r2, r6
 8015fe0:	f801 ac01 	strb.w	sl, [r1, #-1]
 8015fe4:	d1c0      	bne.n	8015f68 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8015fe6:	4671      	mov	r1, lr
 8015fe8:	e70b      	b.n	8015e02 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015fea:	2b00      	cmp	r3, #0
 8015fec:	f77f af09 	ble.w	8015e02 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015ff0:	1415      	asrs	r5, r2, #16
 8015ff2:	460c      	mov	r4, r1
 8015ff4:	9506      	str	r5, [sp, #24]
 8015ff6:	e749      	b.n	8015e8c <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>

08015ff8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015ff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ffc:	4689      	mov	r9, r1
 8015ffe:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8016002:	46c8      	mov	r8, r9
 8016004:	b087      	sub	sp, #28
 8016006:	e9dd 1015 	ldrd	r1, r0, [sp, #84]	@ 0x54
 801600a:	684c      	ldr	r4, [r1, #4]
 801600c:	9203      	str	r2, [sp, #12]
 801600e:	e9dd 2c17 	ldrd	r2, ip, [sp, #92]	@ 0x5c
 8016012:	fb04 0202 	mla	r2, r4, r2, r0
 8016016:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 801601a:	680d      	ldr	r5, [r1, #0]
 801601c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8016020:	eb02 0042 	add.w	r0, r2, r2, lsl #1
 8016024:	f8dc 2000 	ldr.w	r2, [ip]
 8016028:	4428      	add	r0, r5
 801602a:	f104 0b04 	add.w	fp, r4, #4
 801602e:	9205      	str	r2, [sp, #20]
 8016030:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 8016034:	f1b8 0f00 	cmp.w	r8, #0
 8016038:	dc03      	bgt.n	8016042 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801603a:	9c03      	ldr	r4, [sp, #12]
 801603c:	2c00      	cmp	r4, #0
 801603e:	f340 808d 	ble.w	801615c <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016042:	e9dc ea02 	ldrd	lr, sl, [ip, #8]
 8016046:	2b00      	cmp	r3, #0
 8016048:	fa0f f58a 	sxth.w	r5, sl
 801604c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8016050:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8016054:	fa0f f48e 	sxth.w	r4, lr
 8016058:	9502      	str	r5, [sp, #8]
 801605a:	f340 8082 	ble.w	8016162 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801605e:	46f1      	mov	r9, lr
 8016060:	9401      	str	r4, [sp, #4]
 8016062:	1415      	asrs	r5, r2, #16
 8016064:	d408      	bmi.n	8016078 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016066:	9c01      	ldr	r4, [sp, #4]
 8016068:	42a5      	cmp	r5, r4
 801606a:	da05      	bge.n	8016078 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801606c:	ea5f 4e21 	movs.w	lr, r1, asr #16
 8016070:	d402      	bmi.n	8016078 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016072:	9c02      	ldr	r4, [sp, #8]
 8016074:	45a6      	cmp	lr, r4
 8016076:	db3b      	blt.n	80160f0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf8>
 8016078:	3b01      	subs	r3, #1
 801607a:	4432      	add	r2, r6
 801607c:	4439      	add	r1, r7
 801607e:	f100 0003 	add.w	r0, r0, #3
 8016082:	d1ee      	bne.n	8016062 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8016084:	f1b8 0f00 	cmp.w	r8, #0
 8016088:	dd68      	ble.n	801615c <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801608a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801608e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016092:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8016096:	ee31 1a05 	vadd.f32	s2, s2, s10
 801609a:	ee20 6aa7 	vmul.f32	s12, s1, s15
 801609e:	ee61 7a27 	vmul.f32	s15, s2, s15
 80160a2:	ee76 6a62 	vsub.f32	s13, s12, s5
 80160a6:	ee37 7ac3 	vsub.f32	s14, s15, s6
 80160aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80160ae:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80160b2:	ee16 2a90 	vmov	r2, s13
 80160b6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80160b8:	9c03      	ldr	r4, [sp, #12]
 80160ba:	fb92 f6f3 	sdiv	r6, r2, r3
 80160be:	ee17 2a10 	vmov	r2, s14
 80160c2:	eeb0 7a43 	vmov.f32	s14, s6
 80160c6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80160ca:	ee17 1a10 	vmov	r1, s14
 80160ce:	eeb0 7a62 	vmov.f32	s14, s5
 80160d2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80160d6:	f1b8 0801 	subs.w	r8, r8, #1
 80160da:	fb92 f7f3 	sdiv	r7, r2, r3
 80160de:	eeb0 3a67 	vmov.f32	s6, s15
 80160e2:	ee17 2a10 	vmov	r2, s14
 80160e6:	eef0 2a46 	vmov.f32	s5, s12
 80160ea:	bf08      	it	eq
 80160ec:	4623      	moveq	r3, r4
 80160ee:	e7a1      	b.n	8016034 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80160f0:	9c01      	ldr	r4, [sp, #4]
 80160f2:	9501      	str	r5, [sp, #4]
 80160f4:	1e5d      	subs	r5, r3, #1
 80160f6:	46ce      	mov	lr, r9
 80160f8:	fb06 2905 	mla	r9, r6, r5, r2
 80160fc:	ea5f 4929 	movs.w	r9, r9, asr #16
 8016100:	9504      	str	r5, [sp, #16]
 8016102:	d536      	bpl.n	8016172 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 8016104:	4604      	mov	r4, r0
 8016106:	9d01      	ldr	r5, [sp, #4]
 8016108:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801610c:	4418      	add	r0, r3
 801610e:	4673      	mov	r3, lr
 8016110:	46b6      	mov	lr, r6
 8016112:	4656      	mov	r6, sl
 8016114:	e002      	b.n	801611c <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8016116:	1415      	asrs	r5, r2, #16
 8016118:	e9dc 3602 	ldrd	r3, r6, [ip, #8]
 801611c:	2d00      	cmp	r5, #0
 801611e:	4472      	add	r2, lr
 8016120:	db15      	blt.n	801614e <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8016122:	429d      	cmp	r5, r3
 8016124:	da13      	bge.n	801614e <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8016126:	ea5f 4921 	movs.w	r9, r1, asr #16
 801612a:	d410      	bmi.n	801614e <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801612c:	45b1      	cmp	r9, r6
 801612e:	da0e      	bge.n	801614e <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8016130:	9e05      	ldr	r6, [sp, #20]
 8016132:	b21b      	sxth	r3, r3
 8016134:	fb09 6303 	mla	r3, r9, r3, r6
 8016138:	5d5b      	ldrb	r3, [r3, r5]
 801613a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801613e:	f81b 5003 	ldrb.w	r5, [fp, r3]
 8016142:	445b      	add	r3, fp
 8016144:	7025      	strb	r5, [r4, #0]
 8016146:	785d      	ldrb	r5, [r3, #1]
 8016148:	7065      	strb	r5, [r4, #1]
 801614a:	789b      	ldrb	r3, [r3, #2]
 801614c:	70a3      	strb	r3, [r4, #2]
 801614e:	3403      	adds	r4, #3
 8016150:	4284      	cmp	r4, r0
 8016152:	4439      	add	r1, r7
 8016154:	d1df      	bne.n	8016116 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8016156:	f1b8 0f00 	cmp.w	r8, #0
 801615a:	dc96      	bgt.n	801608a <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801615c:	b007      	add	sp, #28
 801615e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016162:	d08f      	beq.n	8016084 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016164:	1e5d      	subs	r5, r3, #1
 8016166:	fb06 2905 	mla	r9, r6, r5, r2
 801616a:	ea5f 4929 	movs.w	r9, r9, asr #16
 801616e:	9504      	str	r5, [sp, #16]
 8016170:	d488      	bmi.n	8016084 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016172:	45a1      	cmp	r9, r4
 8016174:	da2d      	bge.n	80161d2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8016176:	9d04      	ldr	r5, [sp, #16]
 8016178:	fb07 1505 	mla	r5, r7, r5, r1
 801617c:	ea5f 4925 	movs.w	r9, r5, asr #16
 8016180:	d427      	bmi.n	80161d2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8016182:	9d02      	ldr	r5, [sp, #8]
 8016184:	454d      	cmp	r5, r9
 8016186:	dd24      	ble.n	80161d2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8016188:	2b00      	cmp	r3, #0
 801618a:	f77f af7b 	ble.w	8016084 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801618e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8016192:	18c5      	adds	r5, r0, r3
 8016194:	f8dd e014 	ldr.w	lr, [sp, #20]
 8016198:	3003      	adds	r0, #3
 801619a:	e002      	b.n	80161a2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801619c:	f9bc 4008 	ldrsh.w	r4, [ip, #8]
 80161a0:	3003      	adds	r0, #3
 80161a2:	140b      	asrs	r3, r1, #16
 80161a4:	fb04 e303 	mla	r3, r4, r3, lr
 80161a8:	1414      	asrs	r4, r2, #16
 80161aa:	5d1b      	ldrb	r3, [r3, r4]
 80161ac:	4285      	cmp	r5, r0
 80161ae:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80161b2:	f81b 4003 	ldrb.w	r4, [fp, r3]
 80161b6:	445b      	add	r3, fp
 80161b8:	f800 4c03 	strb.w	r4, [r0, #-3]
 80161bc:	785c      	ldrb	r4, [r3, #1]
 80161be:	4439      	add	r1, r7
 80161c0:	f800 4c02 	strb.w	r4, [r0, #-2]
 80161c4:	789b      	ldrb	r3, [r3, #2]
 80161c6:	4432      	add	r2, r6
 80161c8:	f800 3c01 	strb.w	r3, [r0, #-1]
 80161cc:	d1e6      	bne.n	801619c <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80161ce:	4628      	mov	r0, r5
 80161d0:	e758      	b.n	8016084 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80161d2:	2b00      	cmp	r3, #0
 80161d4:	f77f af56 	ble.w	8016084 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80161d8:	1415      	asrs	r5, r2, #16
 80161da:	4604      	mov	r4, r0
 80161dc:	9501      	str	r5, [sp, #4]
 80161de:	e793      	b.n	8016108 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>

080161e0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80161e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80161e4:	b087      	sub	sp, #28
 80161e6:	e9cd 1202 	strd	r1, r2, [sp, #8]
 80161ea:	e9dd 1015 	ldrd	r1, r0, [sp, #84]	@ 0x54
 80161ee:	e9dd 2c17 	ldrd	r2, ip, [sp, #92]	@ 0x5c
 80161f2:	684c      	ldr	r4, [r1, #4]
 80161f4:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 80161f8:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 80161fc:	fb04 0202 	mla	r2, r4, r2, r0
 8016200:	eb02 0542 	add.w	r5, r2, r2, lsl #1
 8016204:	f8dc 2000 	ldr.w	r2, [ip]
 8016208:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801620c:	9201      	str	r2, [sp, #4]
 801620e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016212:	6808      	ldr	r0, [r1, #0]
 8016214:	9204      	str	r2, [sp, #16]
 8016216:	1d22      	adds	r2, r4, #4
 8016218:	e9dd e111 	ldrd	lr, r1, [sp, #68]	@ 0x44
 801621c:	9205      	str	r2, [sp, #20]
 801621e:	4672      	mov	r2, lr
 8016220:	4428      	add	r0, r5
 8016222:	9c02      	ldr	r4, [sp, #8]
 8016224:	2c00      	cmp	r4, #0
 8016226:	dc03      	bgt.n	8016230 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8016228:	9c03      	ldr	r4, [sp, #12]
 801622a:	2c00      	cmp	r4, #0
 801622c:	f340 80ba 	ble.w	80163a4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8016230:	e9dc e802 	ldrd	lr, r8, [ip, #8]
 8016234:	2b00      	cmp	r3, #0
 8016236:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801623a:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 801623e:	fa0f f48e 	sxth.w	r4, lr
 8016242:	fa0f f988 	sxth.w	r9, r8
 8016246:	f340 80b0 	ble.w	80163aa <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801624a:	1415      	asrs	r5, r2, #16
 801624c:	d406      	bmi.n	801625c <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801624e:	42a5      	cmp	r5, r4
 8016250:	da04      	bge.n	801625c <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016252:	ea5f 4a21 	movs.w	sl, r1, asr #16
 8016256:	d401      	bmi.n	801625c <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016258:	45ca      	cmp	sl, r9
 801625a:	db3c      	blt.n	80162d6 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf6>
 801625c:	3b01      	subs	r3, #1
 801625e:	4432      	add	r2, r6
 8016260:	4439      	add	r1, r7
 8016262:	f100 0003 	add.w	r0, r0, #3
 8016266:	d1f0      	bne.n	801624a <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8016268:	9b02      	ldr	r3, [sp, #8]
 801626a:	2b00      	cmp	r3, #0
 801626c:	f340 809a 	ble.w	80163a4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8016270:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016274:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016278:	eec5 7a80 	vdiv.f32	s15, s11, s0
 801627c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016280:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8016284:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016288:	ee76 6a62 	vsub.f32	s13, s12, s5
 801628c:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8016290:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016294:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8016298:	ee16 2a90 	vmov	r2, s13
 801629c:	3b01      	subs	r3, #1
 801629e:	9302      	str	r3, [sp, #8]
 80162a0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80162a2:	9c03      	ldr	r4, [sp, #12]
 80162a4:	fb92 f6f3 	sdiv	r6, r2, r3
 80162a8:	ee17 2a10 	vmov	r2, s14
 80162ac:	eeb0 7a43 	vmov.f32	s14, s6
 80162b0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80162b4:	ee17 1a10 	vmov	r1, s14
 80162b8:	eeb0 7a62 	vmov.f32	s14, s5
 80162bc:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80162c0:	fb92 f7f3 	sdiv	r7, r2, r3
 80162c4:	eeb0 3a67 	vmov.f32	s6, s15
 80162c8:	ee17 2a10 	vmov	r2, s14
 80162cc:	eef0 2a46 	vmov.f32	s5, s12
 80162d0:	bf08      	it	eq
 80162d2:	4623      	moveq	r3, r4
 80162d4:	e7a5      	b.n	8016222 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80162d6:	f103 3bff 	add.w	fp, r3, #4294967295
 80162da:	fb0b 2a06 	mla	sl, fp, r6, r2
 80162de:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 80162e2:	d56c      	bpl.n	80163be <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 80162e4:	4604      	mov	r4, r0
 80162e6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80162ea:	4418      	add	r0, r3
 80162ec:	4673      	mov	r3, lr
 80162ee:	46b6      	mov	lr, r6
 80162f0:	4646      	mov	r6, r8
 80162f2:	e002      	b.n	80162fa <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80162f4:	1415      	asrs	r5, r2, #16
 80162f6:	e9dc 3602 	ldrd	r3, r6, [ip, #8]
 80162fa:	2d00      	cmp	r5, #0
 80162fc:	4472      	add	r2, lr
 80162fe:	db49      	blt.n	8016394 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8016300:	429d      	cmp	r5, r3
 8016302:	da47      	bge.n	8016394 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8016304:	ea5f 4821 	movs.w	r8, r1, asr #16
 8016308:	d444      	bmi.n	8016394 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801630a:	45b0      	cmp	r8, r6
 801630c:	b21b      	sxth	r3, r3
 801630e:	da41      	bge.n	8016394 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8016310:	9e01      	ldr	r6, [sp, #4]
 8016312:	fb08 6303 	mla	r3, r8, r3, r6
 8016316:	5d5b      	ldrb	r3, [r3, r5]
 8016318:	9d05      	ldr	r5, [sp, #20]
 801631a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801631e:	0e1d      	lsrs	r5, r3, #24
 8016320:	d038      	beq.n	8016394 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8016322:	9e04      	ldr	r6, [sp, #16]
 8016324:	fa5f f983 	uxtb.w	r9, r3
 8016328:	fb06 f605 	mul.w	r6, r6, r5
 801632c:	1c75      	adds	r5, r6, #1
 801632e:	eb05 2526 	add.w	r5, r5, r6, asr #8
 8016332:	122d      	asrs	r5, r5, #8
 8016334:	43ee      	mvns	r6, r5
 8016336:	b2ad      	uxth	r5, r5
 8016338:	fb19 f905 	smulbb	r9, r9, r5
 801633c:	f3c3 2807 	ubfx	r8, r3, #8, #8
 8016340:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8016344:	f894 a000 	ldrb.w	sl, [r4]
 8016348:	fb18 f805 	smulbb	r8, r8, r5
 801634c:	fb13 f305 	smulbb	r3, r3, r5
 8016350:	b2f5      	uxtb	r5, r6
 8016352:	fb0a 9605 	mla	r6, sl, r5, r9
 8016356:	f894 b001 	ldrb.w	fp, [r4, #1]
 801635a:	f894 9002 	ldrb.w	r9, [r4, #2]
 801635e:	fb0b 8805 	mla	r8, fp, r5, r8
 8016362:	fb09 3305 	mla	r3, r9, r5, r3
 8016366:	fa1f fa86 	uxth.w	sl, r6
 801636a:	fa1f f888 	uxth.w	r8, r8
 801636e:	b29b      	uxth	r3, r3
 8016370:	f10a 0601 	add.w	r6, sl, #1
 8016374:	f108 0501 	add.w	r5, r8, #1
 8016378:	f103 0901 	add.w	r9, r3, #1
 801637c:	eb06 261a 	add.w	r6, r6, sl, lsr #8
 8016380:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 8016384:	eb09 2313 	add.w	r3, r9, r3, lsr #8
 8016388:	1236      	asrs	r6, r6, #8
 801638a:	122d      	asrs	r5, r5, #8
 801638c:	121b      	asrs	r3, r3, #8
 801638e:	7026      	strb	r6, [r4, #0]
 8016390:	7065      	strb	r5, [r4, #1]
 8016392:	70a3      	strb	r3, [r4, #2]
 8016394:	3403      	adds	r4, #3
 8016396:	4284      	cmp	r4, r0
 8016398:	4439      	add	r1, r7
 801639a:	d1ab      	bne.n	80162f4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801639c:	9b02      	ldr	r3, [sp, #8]
 801639e:	2b00      	cmp	r3, #0
 80163a0:	f73f af66 	bgt.w	8016270 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80163a4:	b007      	add	sp, #28
 80163a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80163aa:	f43f af5d 	beq.w	8016268 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80163ae:	f103 3bff 	add.w	fp, r3, #4294967295
 80163b2:	fb0b 2a06 	mla	sl, fp, r6, r2
 80163b6:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 80163ba:	f53f af55 	bmi.w	8016268 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80163be:	4554      	cmp	r4, sl
 80163c0:	dd64      	ble.n	801648c <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 80163c2:	fb0b 1b07 	mla	fp, fp, r7, r1
 80163c6:	ea5f 4b2b 	movs.w	fp, fp, asr #16
 80163ca:	d45f      	bmi.n	801648c <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 80163cc:	45cb      	cmp	fp, r9
 80163ce:	da5d      	bge.n	801648c <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 80163d0:	2b00      	cmp	r3, #0
 80163d2:	f77f af49 	ble.w	8016268 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80163d6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80163da:	eb00 0e03 	add.w	lr, r0, r3
 80163de:	f8dd 8014 	ldr.w	r8, [sp, #20]
 80163e2:	3003      	adds	r0, #3
 80163e4:	e002      	b.n	80163ec <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 80163e6:	f9bc 4008 	ldrsh.w	r4, [ip, #8]
 80163ea:	3003      	adds	r0, #3
 80163ec:	9d01      	ldr	r5, [sp, #4]
 80163ee:	140b      	asrs	r3, r1, #16
 80163f0:	fb04 5303 	mla	r3, r4, r3, r5
 80163f4:	1414      	asrs	r4, r2, #16
 80163f6:	5d1b      	ldrb	r3, [r3, r4]
 80163f8:	4432      	add	r2, r6
 80163fa:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80163fe:	4439      	add	r1, r7
 8016400:	ea5f 6a13 	movs.w	sl, r3, lsr #24
 8016404:	d03e      	beq.n	8016484 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8016406:	9c04      	ldr	r4, [sp, #16]
 8016408:	fa5f f983 	uxtb.w	r9, r3
 801640c:	fb04 f40a 	mul.w	r4, r4, sl
 8016410:	f104 0a01 	add.w	sl, r4, #1
 8016414:	eb0a 2a24 	add.w	sl, sl, r4, asr #8
 8016418:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 801641c:	ea6f 040a 	mvn.w	r4, sl
 8016420:	fa1f fa8a 	uxth.w	sl, sl
 8016424:	fb19 f90a 	smulbb	r9, r9, sl
 8016428:	f3c3 2507 	ubfx	r5, r3, #8, #8
 801642c:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8016430:	fb15 fb0a 	smulbb	fp, r5, sl
 8016434:	fb13 f30a 	smulbb	r3, r3, sl
 8016438:	f810 ac03 	ldrb.w	sl, [r0, #-3]
 801643c:	b2e4      	uxtb	r4, r4
 801643e:	fb0a 9904 	mla	r9, sl, r4, r9
 8016442:	f810 5c02 	ldrb.w	r5, [r0, #-2]
 8016446:	f810 ac01 	ldrb.w	sl, [r0, #-1]
 801644a:	fb05 b504 	mla	r5, r5, r4, fp
 801644e:	fb0a 3304 	mla	r3, sl, r4, r3
 8016452:	fa1f f989 	uxth.w	r9, r9
 8016456:	b2ad      	uxth	r5, r5
 8016458:	b29b      	uxth	r3, r3
 801645a:	f109 0b01 	add.w	fp, r9, #1
 801645e:	f105 0a01 	add.w	sl, r5, #1
 8016462:	1c5c      	adds	r4, r3, #1
 8016464:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8016468:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801646c:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8016470:	ea4f 2929 	mov.w	r9, r9, asr #8
 8016474:	122d      	asrs	r5, r5, #8
 8016476:	121b      	asrs	r3, r3, #8
 8016478:	f800 9c03 	strb.w	r9, [r0, #-3]
 801647c:	f800 5c02 	strb.w	r5, [r0, #-2]
 8016480:	f800 3c01 	strb.w	r3, [r0, #-1]
 8016484:	4586      	cmp	lr, r0
 8016486:	d1ae      	bne.n	80163e6 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8016488:	4670      	mov	r0, lr
 801648a:	e6ed      	b.n	8016268 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801648c:	2b00      	cmp	r3, #0
 801648e:	f77f aeeb 	ble.w	8016268 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8016492:	4604      	mov	r4, r0
 8016494:	1415      	asrs	r5, r2, #16
 8016496:	e726      	b.n	80162e6 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>

08016498 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016498:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 801649c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80164a0:	b087      	sub	sp, #28
 80164a2:	e9cd 1203 	strd	r1, r2, [sp, #12]
 80164a6:	e9dd 1015 	ldrd	r1, r0, [sp, #84]	@ 0x54
 80164aa:	e9dd 2b17 	ldrd	r2, fp, [sp, #92]	@ 0x5c
 80164ae:	684c      	ldr	r4, [r1, #4]
 80164b0:	680d      	ldr	r5, [r1, #0]
 80164b2:	fb04 0202 	mla	r2, r4, r2, r0
 80164b6:	e9dd 8913 	ldrd	r8, r9, [sp, #76]	@ 0x4c
 80164ba:	f8db 4004 	ldr.w	r4, [fp, #4]
 80164be:	eb02 0042 	add.w	r0, r2, r2, lsl #1
 80164c2:	3404      	adds	r4, #4
 80164c4:	f8db 2000 	ldr.w	r2, [fp]
 80164c8:	4428      	add	r0, r5
 80164ca:	9402      	str	r4, [sp, #8]
 80164cc:	9201      	str	r2, [sp, #4]
 80164ce:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 80164d2:	9c03      	ldr	r4, [sp, #12]
 80164d4:	2c00      	cmp	r4, #0
 80164d6:	dc03      	bgt.n	80164e0 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80164d8:	9c04      	ldr	r4, [sp, #16]
 80164da:	2c00      	cmp	r4, #0
 80164dc:	f340 80b7 	ble.w	801664e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 80164e0:	e9db 6702 	ldrd	r6, r7, [fp, #8]
 80164e4:	2b00      	cmp	r3, #0
 80164e6:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80164ea:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 80164ee:	b234      	sxth	r4, r6
 80164f0:	fa0f fc87 	sxth.w	ip, r7
 80164f4:	f340 80ae 	ble.w	8016654 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80164f8:	1415      	asrs	r5, r2, #16
 80164fa:	d406      	bmi.n	801650a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80164fc:	42a5      	cmp	r5, r4
 80164fe:	da04      	bge.n	801650a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016500:	ea5f 4e21 	movs.w	lr, r1, asr #16
 8016504:	d401      	bmi.n	801650a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016506:	45e6      	cmp	lr, ip
 8016508:	db3c      	blt.n	8016584 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xec>
 801650a:	3b01      	subs	r3, #1
 801650c:	4442      	add	r2, r8
 801650e:	4449      	add	r1, r9
 8016510:	f100 0003 	add.w	r0, r0, #3
 8016514:	d1f0      	bne.n	80164f8 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016516:	9b03      	ldr	r3, [sp, #12]
 8016518:	2b00      	cmp	r3, #0
 801651a:	f340 8098 	ble.w	801664e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801651e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016522:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016526:	eec5 7a80 	vdiv.f32	s15, s11, s0
 801652a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801652e:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8016532:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016536:	ee76 6a62 	vsub.f32	s13, s12, s5
 801653a:	ee37 7ac3 	vsub.f32	s14, s15, s6
 801653e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016542:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8016546:	ee16 2a90 	vmov	r2, s13
 801654a:	3b01      	subs	r3, #1
 801654c:	9303      	str	r3, [sp, #12]
 801654e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016550:	9c04      	ldr	r4, [sp, #16]
 8016552:	fb92 f8f3 	sdiv	r8, r2, r3
 8016556:	ee17 2a10 	vmov	r2, s14
 801655a:	eeb0 7a43 	vmov.f32	s14, s6
 801655e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8016562:	ee17 1a10 	vmov	r1, s14
 8016566:	eeb0 7a62 	vmov.f32	s14, s5
 801656a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801656e:	fb92 f9f3 	sdiv	r9, r2, r3
 8016572:	eeb0 3a67 	vmov.f32	s6, s15
 8016576:	ee17 2a10 	vmov	r2, s14
 801657a:	eef0 2a46 	vmov.f32	s5, s12
 801657e:	bf08      	it	eq
 8016580:	4623      	moveq	r3, r4
 8016582:	e7a6      	b.n	80164d2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8016584:	f103 3aff 	add.w	sl, r3, #4294967295
 8016588:	fb0a 2e08 	mla	lr, sl, r8, r2
 801658c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8016590:	d56a      	bpl.n	8016668 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8016592:	4604      	mov	r4, r0
 8016594:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8016598:	4418      	add	r0, r3
 801659a:	e002      	b.n	80165a2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10a>
 801659c:	1415      	asrs	r5, r2, #16
 801659e:	e9db 6702 	ldrd	r6, r7, [fp, #8]
 80165a2:	2d00      	cmp	r5, #0
 80165a4:	db4a      	blt.n	801663c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80165a6:	42b5      	cmp	r5, r6
 80165a8:	da48      	bge.n	801663c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80165aa:	140b      	asrs	r3, r1, #16
 80165ac:	d446      	bmi.n	801663c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80165ae:	42bb      	cmp	r3, r7
 80165b0:	b236      	sxth	r6, r6
 80165b2:	da43      	bge.n	801663c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80165b4:	9f01      	ldr	r7, [sp, #4]
 80165b6:	fb03 7606 	mla	r6, r3, r6, r7
 80165ba:	5d73      	ldrb	r3, [r6, r5]
 80165bc:	9d02      	ldr	r5, [sp, #8]
 80165be:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80165c2:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80165c6:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 80165ca:	f000 80be 	beq.w	801674a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80165ce:	b2df      	uxtb	r7, r3
 80165d0:	f3c3 2607 	ubfx	r6, r3, #8, #8
 80165d4:	f3c3 4a07 	ubfx	sl, r3, #16, #8
 80165d8:	fa5f f38c 	uxtb.w	r3, ip
 80165dc:	b29d      	uxth	r5, r3
 80165de:	f1bc 0f00 	cmp.w	ip, #0
 80165e2:	d02b      	beq.n	801663c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80165e4:	43db      	mvns	r3, r3
 80165e6:	b2db      	uxtb	r3, r3
 80165e8:	9305      	str	r3, [sp, #20]
 80165ea:	f894 e001 	ldrb.w	lr, [r4, #1]
 80165ee:	fb17 f305 	smulbb	r3, r7, r5
 80165f2:	9f05      	ldr	r7, [sp, #20]
 80165f4:	f894 c002 	ldrb.w	ip, [r4, #2]
 80165f8:	fb1e fe07 	smulbb	lr, lr, r7
 80165fc:	fb1c fc07 	smulbb	ip, ip, r7
 8016600:	fb06 ee05 	mla	lr, r6, r5, lr
 8016604:	7827      	ldrb	r7, [r4, #0]
 8016606:	9e05      	ldr	r6, [sp, #20]
 8016608:	fb0a c505 	mla	r5, sl, r5, ip
 801660c:	fb07 3706 	mla	r7, r7, r6, r3
 8016610:	b2ab      	uxth	r3, r5
 8016612:	b2bf      	uxth	r7, r7
 8016614:	fa1f f68e 	uxth.w	r6, lr
 8016618:	1c7d      	adds	r5, r7, #1
 801661a:	f106 0e01 	add.w	lr, r6, #1
 801661e:	f103 0c01 	add.w	ip, r3, #1
 8016622:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8016626:	eb0c 2613 	add.w	r6, ip, r3, lsr #8
 801662a:	eb05 2317 	add.w	r3, r5, r7, lsr #8
 801662e:	121b      	asrs	r3, r3, #8
 8016630:	ea4f 272e 	mov.w	r7, lr, asr #8
 8016634:	1235      	asrs	r5, r6, #8
 8016636:	7067      	strb	r7, [r4, #1]
 8016638:	70a5      	strb	r5, [r4, #2]
 801663a:	7023      	strb	r3, [r4, #0]
 801663c:	3403      	adds	r4, #3
 801663e:	4284      	cmp	r4, r0
 8016640:	4442      	add	r2, r8
 8016642:	4449      	add	r1, r9
 8016644:	d1aa      	bne.n	801659c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 8016646:	9b03      	ldr	r3, [sp, #12]
 8016648:	2b00      	cmp	r3, #0
 801664a:	f73f af68 	bgt.w	801651e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801664e:	b007      	add	sp, #28
 8016650:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016654:	f43f af5f 	beq.w	8016516 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016658:	f103 3aff 	add.w	sl, r3, #4294967295
 801665c:	fb0a 2e08 	mla	lr, sl, r8, r2
 8016660:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8016664:	f53f af57 	bmi.w	8016516 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016668:	4574      	cmp	r4, lr
 801666a:	dd68      	ble.n	801673e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801666c:	fb0a 1a09 	mla	sl, sl, r9, r1
 8016670:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 8016674:	d463      	bmi.n	801673e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8016676:	45e2      	cmp	sl, ip
 8016678:	da61      	bge.n	801673e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801667a:	2b00      	cmp	r3, #0
 801667c:	f77f af4b 	ble.w	8016516 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016680:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8016684:	eb00 0e03 	add.w	lr, r0, r3
 8016688:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
 801668c:	3003      	adds	r0, #3
 801668e:	e03b      	b.n	8016708 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8016690:	b2fc      	uxtb	r4, r7
 8016692:	fa5f fc83 	uxtb.w	ip, r3
 8016696:	f3c3 2607 	ubfx	r6, r3, #8, #8
 801669a:	b2a5      	uxth	r5, r4
 801669c:	f3c3 4307 	ubfx	r3, r3, #16, #8
 80166a0:	b357      	cbz	r7, 80166f8 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 80166a2:	43e4      	mvns	r4, r4
 80166a4:	f810 ac02 	ldrb.w	sl, [r0, #-2]
 80166a8:	f810 8c01 	ldrb.w	r8, [r0, #-1]
 80166ac:	b2e4      	uxtb	r4, r4
 80166ae:	fb1c fc05 	smulbb	ip, ip, r5
 80166b2:	fb18 f804 	smulbb	r8, r8, r4
 80166b6:	fb1a fa04 	smulbb	sl, sl, r4
 80166ba:	f810 7c03 	ldrb.w	r7, [r0, #-3]
 80166be:	fb03 8305 	mla	r3, r3, r5, r8
 80166c2:	fb06 a605 	mla	r6, r6, r5, sl
 80166c6:	fb07 c404 	mla	r4, r7, r4, ip
 80166ca:	b2b6      	uxth	r6, r6
 80166cc:	b2a4      	uxth	r4, r4
 80166ce:	b29b      	uxth	r3, r3
 80166d0:	f106 0c01 	add.w	ip, r6, #1
 80166d4:	f103 0801 	add.w	r8, r3, #1
 80166d8:	1c65      	adds	r5, r4, #1
 80166da:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 80166de:	eb08 2313 	add.w	r3, r8, r3, lsr #8
 80166e2:	eb05 2514 	add.w	r5, r5, r4, lsr #8
 80166e6:	1236      	asrs	r6, r6, #8
 80166e8:	121b      	asrs	r3, r3, #8
 80166ea:	122d      	asrs	r5, r5, #8
 80166ec:	f800 6c02 	strb.w	r6, [r0, #-2]
 80166f0:	f800 3c01 	strb.w	r3, [r0, #-1]
 80166f4:	f800 5c03 	strb.w	r5, [r0, #-3]
 80166f8:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80166fa:	4586      	cmp	lr, r0
 80166fc:	441a      	add	r2, r3
 80166fe:	4449      	add	r1, r9
 8016700:	d01b      	beq.n	801673a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8016702:	f9bb 4008 	ldrsh.w	r4, [fp, #8]
 8016706:	3003      	adds	r0, #3
 8016708:	9d01      	ldr	r5, [sp, #4]
 801670a:	140b      	asrs	r3, r1, #16
 801670c:	fb04 5303 	mla	r3, r4, r3, r5
 8016710:	1414      	asrs	r4, r2, #16
 8016712:	5d1b      	ldrb	r3, [r3, r4]
 8016714:	9c02      	ldr	r4, [sp, #8]
 8016716:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 801671a:	0e1f      	lsrs	r7, r3, #24
 801671c:	2fff      	cmp	r7, #255	@ 0xff
 801671e:	d1b7      	bne.n	8016690 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8016720:	0a1d      	lsrs	r5, r3, #8
 8016722:	0c1c      	lsrs	r4, r3, #16
 8016724:	f800 3c03 	strb.w	r3, [r0, #-3]
 8016728:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801672a:	4586      	cmp	lr, r0
 801672c:	f800 5c02 	strb.w	r5, [r0, #-2]
 8016730:	f800 4c01 	strb.w	r4, [r0, #-1]
 8016734:	441a      	add	r2, r3
 8016736:	4449      	add	r1, r9
 8016738:	d1e3      	bne.n	8016702 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801673a:	4670      	mov	r0, lr
 801673c:	e6eb      	b.n	8016516 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801673e:	2b00      	cmp	r3, #0
 8016740:	f77f aee9 	ble.w	8016516 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016744:	4604      	mov	r4, r0
 8016746:	1415      	asrs	r5, r2, #16
 8016748:	e724      	b.n	8016594 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801674a:	0a1e      	lsrs	r6, r3, #8
 801674c:	0c1d      	lsrs	r5, r3, #16
 801674e:	7023      	strb	r3, [r4, #0]
 8016750:	7066      	strb	r6, [r4, #1]
 8016752:	70a5      	strb	r5, [r4, #2]
 8016754:	e772      	b.n	801663c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8016756:	bf00      	nop

08016758 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016758:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801675c:	b089      	sub	sp, #36	@ 0x24
 801675e:	f89d 006c 	ldrb.w	r0, [sp, #108]	@ 0x6c
 8016762:	9101      	str	r1, [sp, #4]
 8016764:	ea6f 0a00 	mvn.w	sl, r0
 8016768:	e9dd e815 	ldrd	lr, r8, [sp, #84]	@ 0x54
 801676c:	9919      	ldr	r1, [sp, #100]	@ 0x64
 801676e:	9202      	str	r2, [sp, #8]
 8016770:	e9dd 5217 	ldrd	r5, r2, [sp, #92]	@ 0x5c
 8016774:	686c      	ldr	r4, [r5, #4]
 8016776:	682f      	ldr	r7, [r5, #0]
 8016778:	fb04 2401 	mla	r4, r4, r1, r2
 801677c:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 801677e:	b280      	uxth	r0, r0
 8016780:	e9d2 2100 	ldrd	r2, r1, [r2]
 8016784:	3104      	adds	r1, #4
 8016786:	eb07 0784 	add.w	r7, r7, r4, lsl #2
 801678a:	fa5f fa8a 	uxtb.w	sl, sl
 801678e:	9007      	str	r0, [sp, #28]
 8016790:	9105      	str	r1, [sp, #20]
 8016792:	9200      	str	r2, [sp, #0]
 8016794:	e9dd 2513 	ldrd	r2, r5, [sp, #76]	@ 0x4c
 8016798:	9901      	ldr	r1, [sp, #4]
 801679a:	2900      	cmp	r1, #0
 801679c:	dc03      	bgt.n	80167a6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801679e:	9902      	ldr	r1, [sp, #8]
 80167a0:	2900      	cmp	r1, #0
 80167a2:	f340 80b6 	ble.w	8016912 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 80167a6:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80167a8:	2b00      	cmp	r3, #0
 80167aa:	e9d1 4602 	ldrd	r4, r6, [r1, #8]
 80167ae:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80167b2:	f505 4500 	add.w	r5, r5, #32768	@ 0x8000
 80167b6:	b221      	sxth	r1, r4
 80167b8:	fa0f fc86 	sxth.w	ip, r6
 80167bc:	f340 80ac 	ble.w	8016918 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80167c0:	1410      	asrs	r0, r2, #16
 80167c2:	d406      	bmi.n	80167d2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80167c4:	4288      	cmp	r0, r1
 80167c6:	da04      	bge.n	80167d2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80167c8:	ea5f 4925 	movs.w	r9, r5, asr #16
 80167cc:	d401      	bmi.n	80167d2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80167ce:	45e1      	cmp	r9, ip
 80167d0:	db3e      	blt.n	8016850 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf8>
 80167d2:	3b01      	subs	r3, #1
 80167d4:	4472      	add	r2, lr
 80167d6:	4445      	add	r5, r8
 80167d8:	f107 0704 	add.w	r7, r7, #4
 80167dc:	d1f0      	bne.n	80167c0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80167de:	9b01      	ldr	r3, [sp, #4]
 80167e0:	2b00      	cmp	r3, #0
 80167e2:	f340 8096 	ble.w	8016912 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 80167e6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80167ea:	ee30 0a04 	vadd.f32	s0, s0, s8
 80167ee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80167f2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80167f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80167fa:	ee20 6aa7 	vmul.f32	s12, s1, s15
 80167fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016802:	ee76 6a62 	vsub.f32	s13, s12, s5
 8016806:	ee37 7ac3 	vsub.f32	s14, s15, s6
 801680a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801680e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8016812:	ee16 2a90 	vmov	r2, s13
 8016816:	3b01      	subs	r3, #1
 8016818:	9301      	str	r3, [sp, #4]
 801681a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801681c:	9902      	ldr	r1, [sp, #8]
 801681e:	fb92 fef3 	sdiv	lr, r2, r3
 8016822:	ee17 2a10 	vmov	r2, s14
 8016826:	eeb0 7a43 	vmov.f32	s14, s6
 801682a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801682e:	ee17 5a10 	vmov	r5, s14
 8016832:	eeb0 7a62 	vmov.f32	s14, s5
 8016836:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801683a:	fb92 f8f3 	sdiv	r8, r2, r3
 801683e:	eeb0 3a67 	vmov.f32	s6, s15
 8016842:	ee17 2a10 	vmov	r2, s14
 8016846:	eef0 2a46 	vmov.f32	s5, s12
 801684a:	bf08      	it	eq
 801684c:	460b      	moveq	r3, r1
 801684e:	e7a3      	b.n	8016798 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8016850:	f103 39ff 	add.w	r9, r3, #4294967295
 8016854:	fb09 2b0e 	mla	fp, r9, lr, r2
 8016858:	ea5f 4b2b 	movs.w	fp, fp, asr #16
 801685c:	d566      	bpl.n	801692c <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801685e:	e9cd 7303 	strd	r7, r3, [sp, #12]
 8016862:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8016864:	e002      	b.n	801686c <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8016866:	1410      	asrs	r0, r2, #16
 8016868:	e9d1 4602 	ldrd	r4, r6, [r1, #8]
 801686c:	2800      	cmp	r0, #0
 801686e:	f109 39ff 	add.w	r9, r9, #4294967295
 8016872:	4472      	add	r2, lr
 8016874:	db3f      	blt.n	80168f6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 8016876:	42a0      	cmp	r0, r4
 8016878:	da3d      	bge.n	80168f6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 801687a:	ea5f 4c25 	movs.w	ip, r5, asr #16
 801687e:	d43a      	bmi.n	80168f6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 8016880:	45b4      	cmp	ip, r6
 8016882:	da38      	bge.n	80168f6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 8016884:	9e00      	ldr	r6, [sp, #0]
 8016886:	b224      	sxth	r4, r4
 8016888:	fb0c 6404 	mla	r4, ip, r4, r6
 801688c:	f814 b000 	ldrb.w	fp, [r4, r0]
 8016890:	7838      	ldrb	r0, [r7, #0]
 8016892:	9c05      	ldr	r4, [sp, #20]
 8016894:	fb10 f30a 	smulbb	r3, r0, sl
 8016898:	9306      	str	r3, [sp, #24]
 801689a:	9b07      	ldr	r3, [sp, #28]
 801689c:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 80168a0:	4618      	mov	r0, r3
 80168a2:	eb04 060b 	add.w	r6, r4, fp
 80168a6:	78b4      	ldrb	r4, [r6, #2]
 80168a8:	7876      	ldrb	r6, [r6, #1]
 80168aa:	fb14 fc03 	smulbb	ip, r4, r3
 80168ae:	9c05      	ldr	r4, [sp, #20]
 80168b0:	fb16 f603 	smulbb	r6, r6, r3
 80168b4:	f814 400b 	ldrb.w	r4, [r4, fp]
 80168b8:	9b06      	ldr	r3, [sp, #24]
 80168ba:	f897 b001 	ldrb.w	fp, [r7, #1]
 80168be:	fb04 3000 	mla	r0, r4, r0, r3
 80168c2:	78bc      	ldrb	r4, [r7, #2]
 80168c4:	fb0b 660a 	mla	r6, fp, sl, r6
 80168c8:	fb04 c40a 	mla	r4, r4, sl, ip
 80168cc:	b2b6      	uxth	r6, r6
 80168ce:	b280      	uxth	r0, r0
 80168d0:	b2a4      	uxth	r4, r4
 80168d2:	f106 0c01 	add.w	ip, r6, #1
 80168d6:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 80168da:	f104 0b01 	add.w	fp, r4, #1
 80168de:	f100 0c01 	add.w	ip, r0, #1
 80168e2:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 80168e6:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 80168ea:	1236      	asrs	r6, r6, #8
 80168ec:	1224      	asrs	r4, r4, #8
 80168ee:	1200      	asrs	r0, r0, #8
 80168f0:	707e      	strb	r6, [r7, #1]
 80168f2:	70bc      	strb	r4, [r7, #2]
 80168f4:	7038      	strb	r0, [r7, #0]
 80168f6:	f1b9 3fff 	cmp.w	r9, #4294967295
 80168fa:	f107 0704 	add.w	r7, r7, #4
 80168fe:	4445      	add	r5, r8
 8016900:	d1b1      	bne.n	8016866 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8016902:	e9dd b303 	ldrd	fp, r3, [sp, #12]
 8016906:	eb0b 0783 	add.w	r7, fp, r3, lsl #2
 801690a:	9b01      	ldr	r3, [sp, #4]
 801690c:	2b00      	cmp	r3, #0
 801690e:	f73f af6a 	bgt.w	80167e6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8016912:	b009      	add	sp, #36	@ 0x24
 8016914:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016918:	f43f af61 	beq.w	80167de <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801691c:	f103 39ff 	add.w	r9, r3, #4294967295
 8016920:	fb09 2b0e 	mla	fp, r9, lr, r2
 8016924:	ea5f 4b2b 	movs.w	fp, fp, asr #16
 8016928:	f53f af59 	bmi.w	80167de <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801692c:	4559      	cmp	r1, fp
 801692e:	dd57      	ble.n	80169e0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8016930:	fb09 5008 	mla	r0, r9, r8, r5
 8016934:	1400      	asrs	r0, r0, #16
 8016936:	d453      	bmi.n	80169e0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8016938:	4560      	cmp	r0, ip
 801693a:	da51      	bge.n	80169e0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801693c:	2b00      	cmp	r3, #0
 801693e:	f77f af4e 	ble.w	80167de <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8016942:	e9cd 7303 	strd	r7, r3, [sp, #12]
 8016946:	f107 0c04 	add.w	ip, r7, #4
 801694a:	f8dd b014 	ldr.w	fp, [sp, #20]
 801694e:	460b      	mov	r3, r1
 8016950:	9f07      	ldr	r7, [sp, #28]
 8016952:	e002      	b.n	801695a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8016954:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8016956:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801695a:	9800      	ldr	r0, [sp, #0]
 801695c:	1429      	asrs	r1, r5, #16
 801695e:	fb03 0301 	mla	r3, r3, r1, r0
 8016962:	1411      	asrs	r1, r2, #16
 8016964:	5c5e      	ldrb	r6, [r3, r1]
 8016966:	f81c 3c04 	ldrb.w	r3, [ip, #-4]
 801696a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801696e:	eb0b 0006 	add.w	r0, fp, r6
 8016972:	7881      	ldrb	r1, [r0, #2]
 8016974:	7840      	ldrb	r0, [r0, #1]
 8016976:	fb13 f30a 	smulbb	r3, r3, sl
 801697a:	fb10 f007 	smulbb	r0, r0, r7
 801697e:	fb11 f407 	smulbb	r4, r1, r7
 8016982:	f81b 1006 	ldrb.w	r1, [fp, r6]
 8016986:	f81c 6c03 	ldrb.w	r6, [ip, #-3]
 801698a:	fb01 3307 	mla	r3, r1, r7, r3
 801698e:	f81c 1c02 	ldrb.w	r1, [ip, #-2]
 8016992:	fb06 000a 	mla	r0, r6, sl, r0
 8016996:	fb01 410a 	mla	r1, r1, sl, r4
 801699a:	b280      	uxth	r0, r0
 801699c:	b29b      	uxth	r3, r3
 801699e:	b289      	uxth	r1, r1
 80169a0:	1c44      	adds	r4, r0, #1
 80169a2:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 80169a6:	1c4e      	adds	r6, r1, #1
 80169a8:	1c5c      	adds	r4, r3, #1
 80169aa:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 80169ae:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 80169b2:	f109 39ff 	add.w	r9, r9, #4294967295
 80169b6:	1200      	asrs	r0, r0, #8
 80169b8:	1209      	asrs	r1, r1, #8
 80169ba:	121b      	asrs	r3, r3, #8
 80169bc:	f1b9 3fff 	cmp.w	r9, #4294967295
 80169c0:	f80c 0c03 	strb.w	r0, [ip, #-3]
 80169c4:	f80c 1c02 	strb.w	r1, [ip, #-2]
 80169c8:	f80c 3c04 	strb.w	r3, [ip, #-4]
 80169cc:	4445      	add	r5, r8
 80169ce:	4472      	add	r2, lr
 80169d0:	f10c 0c04 	add.w	ip, ip, #4
 80169d4:	d1be      	bne.n	8016954 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80169d6:	e9dd 7303 	ldrd	r7, r3, [sp, #12]
 80169da:	eb07 0783 	add.w	r7, r7, r3, lsl #2
 80169de:	e6fe      	b.n	80167de <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80169e0:	2b00      	cmp	r3, #0
 80169e2:	f77f aefc 	ble.w	80167de <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80169e6:	1410      	asrs	r0, r2, #16
 80169e8:	e9cd 7303 	strd	r7, r3, [sp, #12]
 80169ec:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80169ee:	e73d      	b.n	801686c <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>

080169f0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80169f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80169f4:	468a      	mov	sl, r1
 80169f6:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 80169fa:	46d1      	mov	r9, sl
 80169fc:	b087      	sub	sp, #28
 80169fe:	e9dd 1415 	ldrd	r1, r4, [sp, #84]	@ 0x54
 8016a02:	684d      	ldr	r5, [r1, #4]
 8016a04:	9203      	str	r2, [sp, #12]
 8016a06:	e9dd 2e17 	ldrd	r2, lr, [sp, #92]	@ 0x5c
 8016a0a:	fb05 4402 	mla	r4, r5, r2, r4
 8016a0e:	e9de 2000 	ldrd	r2, r0, [lr]
 8016a12:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 8016a16:	680d      	ldr	r5, [r1, #0]
 8016a18:	f100 0b04 	add.w	fp, r0, #4
 8016a1c:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 8016a20:	9205      	str	r2, [sp, #20]
 8016a22:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 8016a26:	f1b9 0f00 	cmp.w	r9, #0
 8016a2a:	dc03      	bgt.n	8016a34 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8016a2c:	9803      	ldr	r0, [sp, #12]
 8016a2e:	2800      	cmp	r0, #0
 8016a30:	f340 8091 	ble.w	8016b56 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x166>
 8016a34:	e9de 8a02 	ldrd	r8, sl, [lr, #8]
 8016a38:	2b00      	cmp	r3, #0
 8016a3a:	fa0f f088 	sxth.w	r0, r8
 8016a3e:	fa0f f48a 	sxth.w	r4, sl
 8016a42:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8016a46:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8016a4a:	9001      	str	r0, [sp, #4]
 8016a4c:	9402      	str	r4, [sp, #8]
 8016a4e:	f340 8085 	ble.w	8016b5c <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8016a52:	1414      	asrs	r4, r2, #16
 8016a54:	d408      	bmi.n	8016a68 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8016a56:	9801      	ldr	r0, [sp, #4]
 8016a58:	4284      	cmp	r4, r0
 8016a5a:	da05      	bge.n	8016a68 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8016a5c:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8016a60:	d402      	bmi.n	8016a68 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8016a62:	9802      	ldr	r0, [sp, #8]
 8016a64:	4584      	cmp	ip, r0
 8016a66:	db3b      	blt.n	8016ae0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf0>
 8016a68:	3b01      	subs	r3, #1
 8016a6a:	4432      	add	r2, r6
 8016a6c:	4439      	add	r1, r7
 8016a6e:	f105 0504 	add.w	r5, r5, #4
 8016a72:	d1ee      	bne.n	8016a52 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8016a74:	f1b9 0f00 	cmp.w	r9, #0
 8016a78:	dd6d      	ble.n	8016b56 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x166>
 8016a7a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016a7e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016a82:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8016a86:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016a8a:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8016a8e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016a92:	ee76 6a62 	vsub.f32	s13, s12, s5
 8016a96:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8016a9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016a9e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8016aa2:	ee16 2a90 	vmov	r2, s13
 8016aa6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016aa8:	9803      	ldr	r0, [sp, #12]
 8016aaa:	fb92 f6f3 	sdiv	r6, r2, r3
 8016aae:	ee17 2a10 	vmov	r2, s14
 8016ab2:	eeb0 7a43 	vmov.f32	s14, s6
 8016ab6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8016aba:	ee17 1a10 	vmov	r1, s14
 8016abe:	eeb0 7a62 	vmov.f32	s14, s5
 8016ac2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8016ac6:	f1b9 0901 	subs.w	r9, r9, #1
 8016aca:	fb92 f7f3 	sdiv	r7, r2, r3
 8016ace:	eeb0 3a67 	vmov.f32	s6, s15
 8016ad2:	ee17 2a10 	vmov	r2, s14
 8016ad6:	eef0 2a46 	vmov.f32	s5, s12
 8016ada:	bf08      	it	eq
 8016adc:	4603      	moveq	r3, r0
 8016ade:	e7a2      	b.n	8016a26 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8016ae0:	f103 3cff 	add.w	ip, r3, #4294967295
 8016ae4:	9404      	str	r4, [sp, #16]
 8016ae6:	fb06 240c 	mla	r4, r6, ip, r2
 8016aea:	1424      	asrs	r4, r4, #16
 8016aec:	d578      	bpl.n	8016be0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016aee:	9613      	str	r6, [sp, #76]	@ 0x4c
 8016af0:	2000      	movs	r0, #0
 8016af2:	4646      	mov	r6, r8
 8016af4:	46d4      	mov	ip, sl
 8016af6:	9c04      	ldr	r4, [sp, #16]
 8016af8:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
 8016afc:	e002      	b.n	8016b04 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8016afe:	1414      	asrs	r4, r2, #16
 8016b00:	e9de 6c02 	ldrd	r6, ip, [lr, #8]
 8016b04:	2c00      	cmp	r4, #0
 8016b06:	4442      	add	r2, r8
 8016b08:	db1c      	blt.n	8016b44 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8016b0a:	42b4      	cmp	r4, r6
 8016b0c:	da1a      	bge.n	8016b44 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8016b0e:	ea5f 4a21 	movs.w	sl, r1, asr #16
 8016b12:	d417      	bmi.n	8016b44 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8016b14:	45e2      	cmp	sl, ip
 8016b16:	da15      	bge.n	8016b44 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8016b18:	fa0f fc86 	sxth.w	ip, r6
 8016b1c:	9e05      	ldr	r6, [sp, #20]
 8016b1e:	fb0a 6c0c 	mla	ip, sl, ip, r6
 8016b22:	f81c 4004 	ldrb.w	r4, [ip, r4]
 8016b26:	eb05 0680 	add.w	r6, r5, r0, lsl #2
 8016b2a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8016b2e:	f81b c004 	ldrb.w	ip, [fp, r4]
 8016b32:	445c      	add	r4, fp
 8016b34:	f805 c020 	strb.w	ip, [r5, r0, lsl #2]
 8016b38:	f894 c001 	ldrb.w	ip, [r4, #1]
 8016b3c:	f886 c001 	strb.w	ip, [r6, #1]
 8016b40:	78a4      	ldrb	r4, [r4, #2]
 8016b42:	70b4      	strb	r4, [r6, #2]
 8016b44:	3001      	adds	r0, #1
 8016b46:	4283      	cmp	r3, r0
 8016b48:	4439      	add	r1, r7
 8016b4a:	d1d8      	bne.n	8016afe <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8016b4c:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 8016b50:	f1b9 0f00 	cmp.w	r9, #0
 8016b54:	dc91      	bgt.n	8016a7a <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8016b56:	b007      	add	sp, #28
 8016b58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016b5c:	d08a      	beq.n	8016a74 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016b5e:	f103 3cff 	add.w	ip, r3, #4294967295
 8016b62:	fb0c 2406 	mla	r4, ip, r6, r2
 8016b66:	1424      	asrs	r4, r4, #16
 8016b68:	d484      	bmi.n	8016a74 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016b6a:	42a0      	cmp	r0, r4
 8016b6c:	dd32      	ble.n	8016bd4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8016b6e:	fb07 140c 	mla	r4, r7, ip, r1
 8016b72:	1420      	asrs	r0, r4, #16
 8016b74:	d42e      	bmi.n	8016bd4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8016b76:	9c02      	ldr	r4, [sp, #8]
 8016b78:	4284      	cmp	r4, r0
 8016b7a:	dd2b      	ble.n	8016bd4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8016b7c:	2b00      	cmp	r3, #0
 8016b7e:	f77f af79 	ble.w	8016a74 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016b82:	1d2c      	adds	r4, r5, #4
 8016b84:	f8dd a014 	ldr.w	sl, [sp, #20]
 8016b88:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8016b8c:	e001      	b.n	8016b92 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8016b8e:	f9be 8008 	ldrsh.w	r8, [lr, #8]
 8016b92:	1408      	asrs	r0, r1, #16
 8016b94:	fb08 a000 	mla	r0, r8, r0, sl
 8016b98:	ea4f 4822 	mov.w	r8, r2, asr #16
 8016b9c:	f810 0008 	ldrb.w	r0, [r0, r8]
 8016ba0:	f10c 3cff 	add.w	ip, ip, #4294967295
 8016ba4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016ba8:	f81b 8000 	ldrb.w	r8, [fp, r0]
 8016bac:	4458      	add	r0, fp
 8016bae:	f804 8c04 	strb.w	r8, [r4, #-4]
 8016bb2:	f890 8001 	ldrb.w	r8, [r0, #1]
 8016bb6:	f1bc 3fff 	cmp.w	ip, #4294967295
 8016bba:	f804 8c03 	strb.w	r8, [r4, #-3]
 8016bbe:	7880      	ldrb	r0, [r0, #2]
 8016bc0:	4439      	add	r1, r7
 8016bc2:	f804 0c02 	strb.w	r0, [r4, #-2]
 8016bc6:	4432      	add	r2, r6
 8016bc8:	f104 0404 	add.w	r4, r4, #4
 8016bcc:	d1df      	bne.n	8016b8e <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 8016bce:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 8016bd2:	e7bd      	b.n	8016b50 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 8016bd4:	2b00      	cmp	r3, #0
 8016bd6:	f77f af4d 	ble.w	8016a74 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016bda:	1410      	asrs	r0, r2, #16
 8016bdc:	9004      	str	r0, [sp, #16]
 8016bde:	e786      	b.n	8016aee <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfe>
 8016be0:	9801      	ldr	r0, [sp, #4]
 8016be2:	e7c2      	b.n	8016b6a <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>

08016be4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016be4:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8016be8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016bec:	b08b      	sub	sp, #44	@ 0x2c
 8016bee:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8016bf2:	e9dd 2119 	ldrd	r2, r1, [sp, #100]	@ 0x64
 8016bf6:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8016bf8:	6854      	ldr	r4, [r2, #4]
 8016bfa:	6816      	ldr	r6, [r2, #0]
 8016bfc:	fb04 1000 	mla	r0, r4, r0, r1
 8016c00:	e9dd 4b17 	ldrd	r4, fp, [sp, #92]	@ 0x5c
 8016c04:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8016c06:	f89d 7074 	ldrb.w	r7, [sp, #116]	@ 0x74
 8016c0a:	e9d2 2500 	ldrd	r2, r5, [r2]
 8016c0e:	3504      	adds	r5, #4
 8016c10:	9703      	str	r7, [sp, #12]
 8016c12:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 8016c16:	9507      	str	r5, [sp, #28]
 8016c18:	9206      	str	r2, [sp, #24]
 8016c1a:	e9dd 2115 	ldrd	r2, r1, [sp, #84]	@ 0x54
 8016c1e:	9d01      	ldr	r5, [sp, #4]
 8016c20:	2d00      	cmp	r5, #0
 8016c22:	dc03      	bgt.n	8016c2c <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8016c24:	9d02      	ldr	r5, [sp, #8]
 8016c26:	2d00      	cmp	r5, #0
 8016c28:	f340 80d5 	ble.w	8016dd6 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8016c2c:	9d1c      	ldr	r5, [sp, #112]	@ 0x70
 8016c2e:	2b00      	cmp	r3, #0
 8016c30:	e9d5 7c02 	ldrd	r7, ip, [r5, #8]
 8016c34:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8016c38:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8016c3c:	b23d      	sxth	r5, r7
 8016c3e:	fa0f fe8c 	sxth.w	lr, ip
 8016c42:	f340 80cb 	ble.w	8016ddc <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8016c46:	1416      	asrs	r6, r2, #16
 8016c48:	d406      	bmi.n	8016c58 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8016c4a:	42ae      	cmp	r6, r5
 8016c4c:	da04      	bge.n	8016c58 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8016c4e:	ea5f 4821 	movs.w	r8, r1, asr #16
 8016c52:	d401      	bmi.n	8016c58 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8016c54:	45f0      	cmp	r8, lr
 8016c56:	db3c      	blt.n	8016cd2 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xee>
 8016c58:	3b01      	subs	r3, #1
 8016c5a:	4422      	add	r2, r4
 8016c5c:	4459      	add	r1, fp
 8016c5e:	f100 0004 	add.w	r0, r0, #4
 8016c62:	d1f0      	bne.n	8016c46 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8016c64:	9b01      	ldr	r3, [sp, #4]
 8016c66:	2b00      	cmp	r3, #0
 8016c68:	f340 80b5 	ble.w	8016dd6 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8016c6c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016c70:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016c74:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8016c78:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016c7c:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8016c80:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016c84:	ee76 6a62 	vsub.f32	s13, s12, s5
 8016c88:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8016c8c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016c90:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8016c94:	ee16 2a90 	vmov	r2, s13
 8016c98:	3b01      	subs	r3, #1
 8016c9a:	9301      	str	r3, [sp, #4]
 8016c9c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8016c9e:	9d02      	ldr	r5, [sp, #8]
 8016ca0:	fb92 f4f3 	sdiv	r4, r2, r3
 8016ca4:	ee17 2a10 	vmov	r2, s14
 8016ca8:	eeb0 7a43 	vmov.f32	s14, s6
 8016cac:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8016cb0:	ee17 1a10 	vmov	r1, s14
 8016cb4:	eeb0 7a62 	vmov.f32	s14, s5
 8016cb8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8016cbc:	fb92 fbf3 	sdiv	fp, r2, r3
 8016cc0:	eeb0 3a67 	vmov.f32	s6, s15
 8016cc4:	ee17 2a10 	vmov	r2, s14
 8016cc8:	eef0 2a46 	vmov.f32	s5, s12
 8016ccc:	bf08      	it	eq
 8016cce:	462b      	moveq	r3, r5
 8016cd0:	e7a5      	b.n	8016c1e <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8016cd2:	f103 38ff 	add.w	r8, r3, #4294967295
 8016cd6:	fb08 2904 	mla	r9, r8, r4, r2
 8016cda:	ea5f 4929 	movs.w	r9, r9, asr #16
 8016cde:	f140 8087 	bpl.w	8016df0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8016ce2:	f1c3 0900 	rsb	r9, r3, #0
 8016ce6:	4698      	mov	r8, r3
 8016ce8:	2500      	movs	r5, #0
 8016cea:	9004      	str	r0, [sp, #16]
 8016cec:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8016cee:	e002      	b.n	8016cf6 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x112>
 8016cf0:	1416      	asrs	r6, r2, #16
 8016cf2:	e9d3 7c02 	ldrd	r7, ip, [r3, #8]
 8016cf6:	2e00      	cmp	r6, #0
 8016cf8:	4422      	add	r2, r4
 8016cfa:	db61      	blt.n	8016dc0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8016cfc:	42be      	cmp	r6, r7
 8016cfe:	da5f      	bge.n	8016dc0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8016d00:	ea5f 4e21 	movs.w	lr, r1, asr #16
 8016d04:	d45c      	bmi.n	8016dc0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8016d06:	45e6      	cmp	lr, ip
 8016d08:	b23f      	sxth	r7, r7
 8016d0a:	da59      	bge.n	8016dc0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8016d0c:	9806      	ldr	r0, [sp, #24]
 8016d0e:	fb0e 0707 	mla	r7, lr, r7, r0
 8016d12:	9807      	ldr	r0, [sp, #28]
 8016d14:	5dbe      	ldrb	r6, [r7, r6]
 8016d16:	ebc5 7785 	rsb	r7, r5, r5, lsl #30
 8016d1a:	f850 6026 	ldr.w	r6, [r0, r6, lsl #2]
 8016d1e:	9804      	ldr	r0, [sp, #16]
 8016d20:	9705      	str	r7, [sp, #20]
 8016d22:	eb00 0087 	add.w	r0, r0, r7, lsl #2
 8016d26:	0e37      	lsrs	r7, r6, #24
 8016d28:	9008      	str	r0, [sp, #32]
 8016d2a:	d049      	beq.n	8016dc0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8016d2c:	9803      	ldr	r0, [sp, #12]
 8016d2e:	fa5f fa86 	uxtb.w	sl, r6
 8016d32:	fb00 f707 	mul.w	r7, r0, r7
 8016d36:	9805      	ldr	r0, [sp, #20]
 8016d38:	f107 0c01 	add.w	ip, r7, #1
 8016d3c:	eb0c 2c27 	add.w	ip, ip, r7, asr #8
 8016d40:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 8016d44:	4686      	mov	lr, r0
 8016d46:	ea6f 070c 	mvn.w	r7, ip
 8016d4a:	fa1f fc8c 	uxth.w	ip, ip
 8016d4e:	fb1a fa0c 	smulbb	sl, sl, ip
 8016d52:	9804      	ldr	r0, [sp, #16]
 8016d54:	b2ff      	uxtb	r7, r7
 8016d56:	f810 e02e 	ldrb.w	lr, [r0, lr, lsl #2]
 8016d5a:	9805      	ldr	r0, [sp, #20]
 8016d5c:	fb0e ae07 	mla	lr, lr, r7, sl
 8016d60:	fa1f fe8e 	uxth.w	lr, lr
 8016d64:	f10e 0a01 	add.w	sl, lr, #1
 8016d68:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
 8016d6c:	f3c6 2a07 	ubfx	sl, r6, #8, #8
 8016d70:	f3c6 4607 	ubfx	r6, r6, #16, #8
 8016d74:	fb16 f60c 	smulbb	r6, r6, ip
 8016d78:	9609      	str	r6, [sp, #36]	@ 0x24
 8016d7a:	4606      	mov	r6, r0
 8016d7c:	9804      	ldr	r0, [sp, #16]
 8016d7e:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8016d82:	f800 e026 	strb.w	lr, [r0, r6, lsl #2]
 8016d86:	fb1a fa0c 	smulbb	sl, sl, ip
 8016d8a:	9808      	ldr	r0, [sp, #32]
 8016d8c:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 8016d8e:	f890 e002 	ldrb.w	lr, [r0, #2]
 8016d92:	f890 c001 	ldrb.w	ip, [r0, #1]
 8016d96:	fb0e 6607 	mla	r6, lr, r7, r6
 8016d9a:	fb0c ac07 	mla	ip, ip, r7, sl
 8016d9e:	b2b6      	uxth	r6, r6
 8016da0:	fa1f fe8c 	uxth.w	lr, ip
 8016da4:	1c77      	adds	r7, r6, #1
 8016da6:	f10e 0c01 	add.w	ip, lr, #1
 8016daa:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8016dae:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8016db2:	ea4f 272c 	mov.w	r7, ip, asr #8
 8016db6:	ea4f 2c26 	mov.w	ip, r6, asr #8
 8016dba:	7047      	strb	r7, [r0, #1]
 8016dbc:	f880 c002 	strb.w	ip, [r0, #2]
 8016dc0:	3d01      	subs	r5, #1
 8016dc2:	45a9      	cmp	r9, r5
 8016dc4:	4459      	add	r1, fp
 8016dc6:	d193      	bne.n	8016cf0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8016dc8:	9b01      	ldr	r3, [sp, #4]
 8016dca:	9804      	ldr	r0, [sp, #16]
 8016dcc:	2b00      	cmp	r3, #0
 8016dce:	eb00 0088 	add.w	r0, r0, r8, lsl #2
 8016dd2:	f73f af4b 	bgt.w	8016c6c <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8016dd6:	b00b      	add	sp, #44	@ 0x2c
 8016dd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016ddc:	f43f af42 	beq.w	8016c64 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016de0:	f103 38ff 	add.w	r8, r3, #4294967295
 8016de4:	fb08 2904 	mla	r9, r8, r4, r2
 8016de8:	ea5f 4929 	movs.w	r9, r9, asr #16
 8016dec:	f53f af3a 	bmi.w	8016c64 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016df0:	454d      	cmp	r5, r9
 8016df2:	dd68      	ble.n	8016ec6 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8016df4:	fb08 160b 	mla	r6, r8, fp, r1
 8016df8:	1436      	asrs	r6, r6, #16
 8016dfa:	d464      	bmi.n	8016ec6 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8016dfc:	4576      	cmp	r6, lr
 8016dfe:	da62      	bge.n	8016ec6 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8016e00:	2b00      	cmp	r3, #0
 8016e02:	f77f af2f 	ble.w	8016c64 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016e06:	e9dd 6706 	ldrd	r6, r7, [sp, #24]
 8016e0a:	f100 0e04 	add.w	lr, r0, #4
 8016e0e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8016e12:	e002      	b.n	8016e1a <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8016e14:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8016e16:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 8016e1a:	140b      	asrs	r3, r1, #16
 8016e1c:	fb05 6303 	mla	r3, r5, r3, r6
 8016e20:	1410      	asrs	r0, r2, #16
 8016e22:	5c1b      	ldrb	r3, [r3, r0]
 8016e24:	f108 38ff 	add.w	r8, r8, #4294967295
 8016e28:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
 8016e2c:	4422      	add	r2, r4
 8016e2e:	0e18      	lsrs	r0, r3, #24
 8016e30:	4459      	add	r1, fp
 8016e32:	d03e      	beq.n	8016eb2 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ce>
 8016e34:	9d03      	ldr	r5, [sp, #12]
 8016e36:	fa5f fc83 	uxtb.w	ip, r3
 8016e3a:	fb05 f000 	mul.w	r0, r5, r0
 8016e3e:	f100 0901 	add.w	r9, r0, #1
 8016e42:	eb09 2920 	add.w	r9, r9, r0, asr #8
 8016e46:	ea4f 2929 	mov.w	r9, r9, asr #8
 8016e4a:	ea6f 0009 	mvn.w	r0, r9
 8016e4e:	fa1f f989 	uxth.w	r9, r9
 8016e52:	fb1c fc09 	smulbb	ip, ip, r9
 8016e56:	f3c3 2507 	ubfx	r5, r3, #8, #8
 8016e5a:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8016e5e:	fb15 fa09 	smulbb	sl, r5, r9
 8016e62:	fb13 f309 	smulbb	r3, r3, r9
 8016e66:	f81e 9c04 	ldrb.w	r9, [lr, #-4]
 8016e6a:	b2c0      	uxtb	r0, r0
 8016e6c:	fb09 cc00 	mla	ip, r9, r0, ip
 8016e70:	f81e 5c03 	ldrb.w	r5, [lr, #-3]
 8016e74:	f81e 9c02 	ldrb.w	r9, [lr, #-2]
 8016e78:	fb05 a500 	mla	r5, r5, r0, sl
 8016e7c:	fb09 3300 	mla	r3, r9, r0, r3
 8016e80:	fa1f fc8c 	uxth.w	ip, ip
 8016e84:	b2ad      	uxth	r5, r5
 8016e86:	b29b      	uxth	r3, r3
 8016e88:	f10c 0a01 	add.w	sl, ip, #1
 8016e8c:	f105 0901 	add.w	r9, r5, #1
 8016e90:	1c58      	adds	r0, r3, #1
 8016e92:	eb0a 2c1c 	add.w	ip, sl, ip, lsr #8
 8016e96:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 8016e9a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8016e9e:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 8016ea2:	122d      	asrs	r5, r5, #8
 8016ea4:	121b      	asrs	r3, r3, #8
 8016ea6:	f80e cc04 	strb.w	ip, [lr, #-4]
 8016eaa:	f80e 5c03 	strb.w	r5, [lr, #-3]
 8016eae:	f80e 3c02 	strb.w	r3, [lr, #-2]
 8016eb2:	f1b8 3fff 	cmp.w	r8, #4294967295
 8016eb6:	f10e 0e04 	add.w	lr, lr, #4
 8016eba:	d1ab      	bne.n	8016e14 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8016ebc:	e9dd 0304 	ldrd	r0, r3, [sp, #16]
 8016ec0:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8016ec4:	e6ce      	b.n	8016c64 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016ec6:	2b00      	cmp	r3, #0
 8016ec8:	f77f aecc 	ble.w	8016c64 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016ecc:	1416      	asrs	r6, r2, #16
 8016ece:	e708      	b.n	8016ce2 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfe>

08016ed0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016ed0:	4770      	bx	lr
 8016ed2:	bf00      	nop

08016ed4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016ed4:	4770      	bx	lr
 8016ed6:	bf00      	nop

08016ed8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016ed8:	4770      	bx	lr
 8016eda:	bf00      	nop

08016edc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8016edc:	4770      	bx	lr
 8016ede:	bf00      	nop

08016ee0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016ee0:	4770      	bx	lr
 8016ee2:	bf00      	nop

08016ee4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8016ee4:	4770      	bx	lr
 8016ee6:	bf00      	nop

08016ee8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016ee8:	4770      	bx	lr
 8016eea:	bf00      	nop

08016eec <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016eec:	4770      	bx	lr
 8016eee:	bf00      	nop

08016ef0 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016ef0:	4770      	bx	lr
 8016ef2:	bf00      	nop

08016ef4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016ef4:	4770      	bx	lr
 8016ef6:	bf00      	nop

08016ef8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016ef8:	4770      	bx	lr
 8016efa:	bf00      	nop

08016efc <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8016efc:	4770      	bx	lr
 8016efe:	bf00      	nop

08016f00 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016f00:	4770      	bx	lr
 8016f02:	bf00      	nop

08016f04 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8016f04:	4770      	bx	lr
 8016f06:	bf00      	nop

08016f08 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016f08:	4770      	bx	lr
 8016f0a:	bf00      	nop

08016f0c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016f0c:	4770      	bx	lr
 8016f0e:	bf00      	nop

08016f10 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016f10:	4770      	bx	lr
 8016f12:	bf00      	nop

08016f14 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016f14:	4770      	bx	lr
 8016f16:	bf00      	nop

08016f18 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016f18:	4770      	bx	lr
 8016f1a:	bf00      	nop

08016f1c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8016f1c:	4770      	bx	lr
 8016f1e:	bf00      	nop

08016f20 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016f20:	4770      	bx	lr
 8016f22:	bf00      	nop

08016f24 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8016f24:	4770      	bx	lr
 8016f26:	bf00      	nop

08016f28 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv>:
 8016f28:	b508      	push	{r3, lr}
 8016f2a:	4b0d      	ldr	r3, [pc, #52]	@ (8016f60 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x38>)
 8016f2c:	881b      	ldrh	r3, [r3, #0]
 8016f2e:	b17b      	cbz	r3, 8016f50 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x28>
 8016f30:	7a02      	ldrb	r2, [r0, #8]
 8016f32:	2a02      	cmp	r2, #2
 8016f34:	d007      	beq.n	8016f46 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x1e>
 8016f36:	2a01      	cmp	r2, #1
 8016f38:	bf0c      	ite	eq
 8016f3a:	2003      	moveq	r0, #3
 8016f3c:	2002      	movne	r0, #2
 8016f3e:	fb13 f000 	smulbb	r0, r3, r0
 8016f42:	b280      	uxth	r0, r0
 8016f44:	bd08      	pop	{r3, pc}
 8016f46:	2004      	movs	r0, #4
 8016f48:	fb13 f000 	smulbb	r0, r3, r0
 8016f4c:	b280      	uxth	r0, r0
 8016f4e:	bd08      	pop	{r3, pc}
 8016f50:	4b04      	ldr	r3, [pc, #16]	@ (8016f64 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x3c>)
 8016f52:	4a05      	ldr	r2, [pc, #20]	@ (8016f68 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x40>)
 8016f54:	f240 110f 	movw	r1, #271	@ 0x10f
 8016f58:	4804      	ldr	r0, [pc, #16]	@ (8016f6c <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x44>)
 8016f5a:	f00d feeb 	bl	8024d34 <__assert_func>
 8016f5e:	bf00      	nop
 8016f60:	2004bf92 	.word	0x2004bf92
 8016f64:	08027ea0 	.word	0x08027ea0
 8016f68:	08029664 	.word	0x08029664
 8016f6c:	08027ee4 	.word	0x08027ee4

08016f70 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv>:
 8016f70:	b530      	push	{r4, r5, lr}
 8016f72:	4b26      	ldr	r3, [pc, #152]	@ (801700c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x9c>)
 8016f74:	b083      	sub	sp, #12
 8016f76:	681c      	ldr	r4, [r3, #0]
 8016f78:	2c00      	cmp	r4, #0
 8016f7a:	d040      	beq.n	8016ffe <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x8e>
 8016f7c:	4b24      	ldr	r3, [pc, #144]	@ (8017010 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa0>)
 8016f7e:	4605      	mov	r5, r0
 8016f80:	781b      	ldrb	r3, [r3, #0]
 8016f82:	b9f3      	cbnz	r3, 8016fc2 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x52>
 8016f84:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8016f86:	7a2a      	ldrb	r2, [r5, #8]
 8016f88:	2a01      	cmp	r2, #1
 8016f8a:	d025      	beq.n	8016fd8 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x68>
 8016f8c:	d30d      	bcc.n	8016faa <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x3a>
 8016f8e:	2a02      	cmp	r2, #2
 8016f90:	d12f      	bne.n	8016ff2 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x82>
 8016f92:	4920      	ldr	r1, [pc, #128]	@ (8017014 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa4>)
 8016f94:	4a20      	ldr	r2, [pc, #128]	@ (8017018 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa8>)
 8016f96:	8809      	ldrh	r1, [r1, #0]
 8016f98:	8812      	ldrh	r2, [r2, #0]
 8016f9a:	008c      	lsls	r4, r1, #2
 8016f9c:	4618      	mov	r0, r3
 8016f9e:	9400      	str	r4, [sp, #0]
 8016fa0:	2310      	movs	r3, #16
 8016fa2:	f7fb fde3 	bl	8012b6c <nema_bind_dst_tex>
 8016fa6:	b003      	add	sp, #12
 8016fa8:	bd30      	pop	{r4, r5, pc}
 8016faa:	491a      	ldr	r1, [pc, #104]	@ (8017014 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa4>)
 8016fac:	4a1a      	ldr	r2, [pc, #104]	@ (8017018 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa8>)
 8016fae:	8809      	ldrh	r1, [r1, #0]
 8016fb0:	8812      	ldrh	r2, [r2, #0]
 8016fb2:	004c      	lsls	r4, r1, #1
 8016fb4:	4618      	mov	r0, r3
 8016fb6:	9400      	str	r4, [sp, #0]
 8016fb8:	2304      	movs	r3, #4
 8016fba:	f7fb fdd7 	bl	8012b6c <nema_bind_dst_tex>
 8016fbe:	b003      	add	sp, #12
 8016fc0:	bd30      	pop	{r4, r5, pc}
 8016fc2:	6823      	ldr	r3, [r4, #0]
 8016fc4:	4620      	mov	r0, r4
 8016fc6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016fc8:	4798      	blx	r3
 8016fca:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8016fcc:	4283      	cmp	r3, r0
 8016fce:	d1da      	bne.n	8016f86 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x16>
 8016fd0:	7a2a      	ldrb	r2, [r5, #8]
 8016fd2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8016fd4:	2a01      	cmp	r2, #1
 8016fd6:	d1d9      	bne.n	8016f8c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x1c>
 8016fd8:	490e      	ldr	r1, [pc, #56]	@ (8017014 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa4>)
 8016fda:	4a0f      	ldr	r2, [pc, #60]	@ (8017018 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa8>)
 8016fdc:	8809      	ldrh	r1, [r1, #0]
 8016fde:	8812      	ldrh	r2, [r2, #0]
 8016fe0:	eb01 0441 	add.w	r4, r1, r1, lsl #1
 8016fe4:	4618      	mov	r0, r3
 8016fe6:	9400      	str	r4, [sp, #0]
 8016fe8:	2339      	movs	r3, #57	@ 0x39
 8016fea:	f7fb fdbf 	bl	8012b6c <nema_bind_dst_tex>
 8016fee:	b003      	add	sp, #12
 8016ff0:	bd30      	pop	{r4, r5, pc}
 8016ff2:	4b0a      	ldr	r3, [pc, #40]	@ (801701c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xac>)
 8016ff4:	4a0a      	ldr	r2, [pc, #40]	@ (8017020 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xb0>)
 8016ff6:	2141      	movs	r1, #65	@ 0x41
 8016ff8:	480a      	ldr	r0, [pc, #40]	@ (8017024 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xb4>)
 8016ffa:	f00d fe9b 	bl	8024d34 <__assert_func>
 8016ffe:	4b0a      	ldr	r3, [pc, #40]	@ (8017028 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xb8>)
 8017000:	4a0a      	ldr	r2, [pc, #40]	@ (801702c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xbc>)
 8017002:	217c      	movs	r1, #124	@ 0x7c
 8017004:	480a      	ldr	r0, [pc, #40]	@ (8017030 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xc0>)
 8017006:	f00d fe95 	bl	8024d34 <__assert_func>
 801700a:	bf00      	nop
 801700c:	2004c150 	.word	0x2004c150
 8017010:	2004bf96 	.word	0x2004bf96
 8017014:	2004bf92 	.word	0x2004bf92
 8017018:	2004bf94 	.word	0x2004bf94
 801701c:	080278e0 	.word	0x080278e0
 8017020:	08028498 	.word	0x08028498
 8017024:	08027928 	.word	0x08027928
 8017028:	08027884 	.word	0x08027884
 801702c:	08028130 	.word	0x08028130
 8017030:	080278ac 	.word	0x080278ac

08017034 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh>:
 8017034:	2b00      	cmp	r3, #0
 8017036:	d05b      	beq.n	80170f0 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xbc>
 8017038:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801703c:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 8017040:	b085      	sub	sp, #20
 8017042:	2c00      	cmp	r4, #0
 8017044:	dd51      	ble.n	80170ea <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xb6>
 8017046:	f9b1 4006 	ldrsh.w	r4, [r1, #6]
 801704a:	2c00      	cmp	r4, #0
 801704c:	dd4d      	ble.n	80170ea <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xb6>
 801704e:	4616      	mov	r6, r2
 8017050:	4605      	mov	r5, r0
 8017052:	6808      	ldr	r0, [r1, #0]
 8017054:	6849      	ldr	r1, [r1, #4]
 8017056:	461c      	mov	r4, r3
 8017058:	4f29      	ldr	r7, [pc, #164]	@ (8017100 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xcc>)
 801705a:	ab02      	add	r3, sp, #8
 801705c:	c303      	stmia	r3!, {r0, r1}
 801705e:	a802      	add	r0, sp, #8
 8017060:	f7f8 f9be 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017064:	6838      	ldr	r0, [r7, #0]
 8017066:	f3c6 4807 	ubfx	r8, r6, #16, #8
 801706a:	f3c6 2907 	ubfx	r9, r6, #8, #8
 801706e:	b2f6      	uxtb	r6, r6
 8017070:	2800      	cmp	r0, #0
 8017072:	d03e      	beq.n	80170f2 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xbe>
 8017074:	f7fe f8f6 	bl	8015264 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8017078:	682b      	ldr	r3, [r5, #0]
 801707a:	4628      	mov	r0, r5
 801707c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 801707e:	4798      	blx	r3
 8017080:	f9bd 0008 	ldrsh.w	r0, [sp, #8]
 8017084:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8017088:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801708c:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 8017090:	f7fb fcac 	bl	80129ec <nema_set_clip>
 8017094:	f04f 33ff 	mov.w	r3, #4294967295
 8017098:	2cff      	cmp	r4, #255	@ 0xff
 801709a:	bf0c      	ite	eq
 801709c:	2001      	moveq	r0, #1
 801709e:	4819      	ldrne	r0, [pc, #100]	@ (8017104 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xd0>)
 80170a0:	461a      	mov	r2, r3
 80170a2:	2100      	movs	r1, #0
 80170a4:	f7fd fc12 	bl	80148cc <nema_set_blend>
 80170a8:	2200      	movs	r2, #0
 80170aa:	4623      	mov	r3, r4
 80170ac:	4611      	mov	r1, r2
 80170ae:	4610      	mov	r0, r2
 80170b0:	f7fb fcd0 	bl	8012a54 <nema_rgba>
 80170b4:	f7fd ffd0 	bl	8015058 <nema_set_const_color>
 80170b8:	4632      	mov	r2, r6
 80170ba:	4649      	mov	r1, r9
 80170bc:	4640      	mov	r0, r8
 80170be:	23ff      	movs	r3, #255	@ 0xff
 80170c0:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 80170c4:	f9bd 500a 	ldrsh.w	r5, [sp, #10]
 80170c8:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80170cc:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 80170d0:	f7fb fcc0 	bl	8012a54 <nema_rgba>
 80170d4:	4643      	mov	r3, r8
 80170d6:	9000      	str	r0, [sp, #0]
 80170d8:	4632      	mov	r2, r6
 80170da:	4620      	mov	r0, r4
 80170dc:	4629      	mov	r1, r5
 80170de:	f7fb fe3b 	bl	8012d58 <nema_fill_rect>
 80170e2:	6838      	ldr	r0, [r7, #0]
 80170e4:	b128      	cbz	r0, 80170f2 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xbe>
 80170e6:	f7fe f8dd 	bl	80152a4 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 80170ea:	b005      	add	sp, #20
 80170ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80170f0:	4770      	bx	lr
 80170f2:	4b05      	ldr	r3, [pc, #20]	@ (8017108 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xd4>)
 80170f4:	4a05      	ldr	r2, [pc, #20]	@ (801710c <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xd8>)
 80170f6:	217c      	movs	r1, #124	@ 0x7c
 80170f8:	4805      	ldr	r0, [pc, #20]	@ (8017110 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xdc>)
 80170fa:	f00d fe1b 	bl	8024d34 <__assert_func>
 80170fe:	bf00      	nop
 8017100:	2004c150 	.word	0x2004c150
 8017104:	08000504 	.word	0x08000504
 8017108:	08027884 	.word	0x08027884
 801710c:	08028130 	.word	0x08028130
 8017110:	080278ac 	.word	0x080278ac

08017114 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8017114:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017118:	b085      	sub	sp, #20
 801711a:	f89d 403c 	ldrb.w	r4, [sp, #60]	@ 0x3c
 801711e:	2c00      	cmp	r4, #0
 8017120:	d063      	beq.n	80171ea <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd6>
 8017122:	f9b3 5004 	ldrsh.w	r5, [r3, #4]
 8017126:	2d00      	cmp	r5, #0
 8017128:	dd5f      	ble.n	80171ea <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd6>
 801712a:	f9b3 5006 	ldrsh.w	r5, [r3, #6]
 801712e:	2d00      	cmp	r5, #0
 8017130:	dd5b      	ble.n	80171ea <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd6>
 8017132:	460f      	mov	r7, r1
 8017134:	4606      	mov	r6, r0
 8017136:	6859      	ldr	r1, [r3, #4]
 8017138:	6818      	ldr	r0, [r3, #0]
 801713a:	f8df 9124 	ldr.w	r9, [pc, #292]	@ 8017260 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14c>
 801713e:	ab02      	add	r3, sp, #8
 8017140:	c303      	stmia	r3!, {r0, r1}
 8017142:	a802      	add	r0, sp, #8
 8017144:	4690      	mov	r8, r2
 8017146:	f7f8 f94b 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801714a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801714c:	f8d9 0000 	ldr.w	r0, [r9]
 8017150:	f3c3 4a07 	ubfx	sl, r3, #16, #8
 8017154:	f3c3 2b07 	ubfx	fp, r3, #8, #8
 8017158:	b2dd      	uxtb	r5, r3
 801715a:	2800      	cmp	r0, #0
 801715c:	d060      	beq.n	8017220 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10c>
 801715e:	f7fe f881 	bl	8015264 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8017162:	7a33      	ldrb	r3, [r6, #8]
 8017164:	2b01      	cmp	r3, #1
 8017166:	d043      	beq.n	80171f0 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xdc>
 8017168:	d34e      	bcc.n	8017208 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xf4>
 801716a:	2b02      	cmp	r3, #2
 801716c:	d15e      	bne.n	801722c <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 801716e:	4b33      	ldr	r3, [pc, #204]	@ (801723c <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>)
 8017170:	4a33      	ldr	r2, [pc, #204]	@ (8017240 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>)
 8017172:	8819      	ldrh	r1, [r3, #0]
 8017174:	ea4f 0388 	mov.w	r3, r8, lsl #2
 8017178:	8812      	ldrh	r2, [r2, #0]
 801717a:	4638      	mov	r0, r7
 801717c:	9300      	str	r3, [sp, #0]
 801717e:	2310      	movs	r3, #16
 8017180:	f7fb fcf4 	bl	8012b6c <nema_bind_dst_tex>
 8017184:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8017188:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801718c:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 8017190:	f9bd 0008 	ldrsh.w	r0, [sp, #8]
 8017194:	f7fb fc2a 	bl	80129ec <nema_set_clip>
 8017198:	f04f 33ff 	mov.w	r3, #4294967295
 801719c:	2100      	movs	r1, #0
 801719e:	461a      	mov	r2, r3
 80171a0:	4828      	ldr	r0, [pc, #160]	@ (8017244 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x130>)
 80171a2:	f7fd fb93 	bl	80148cc <nema_set_blend>
 80171a6:	2200      	movs	r2, #0
 80171a8:	4623      	mov	r3, r4
 80171aa:	4611      	mov	r1, r2
 80171ac:	4610      	mov	r0, r2
 80171ae:	f7fb fc51 	bl	8012a54 <nema_rgba>
 80171b2:	f7fd ff51 	bl	8015058 <nema_set_const_color>
 80171b6:	462a      	mov	r2, r5
 80171b8:	4659      	mov	r1, fp
 80171ba:	23ff      	movs	r3, #255	@ 0xff
 80171bc:	4650      	mov	r0, sl
 80171be:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 80171c2:	f9bd 500a 	ldrsh.w	r5, [sp, #10]
 80171c6:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80171ca:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 80171ce:	f7fb fc41 	bl	8012a54 <nema_rgba>
 80171d2:	463b      	mov	r3, r7
 80171d4:	9000      	str	r0, [sp, #0]
 80171d6:	4632      	mov	r2, r6
 80171d8:	4620      	mov	r0, r4
 80171da:	4629      	mov	r1, r5
 80171dc:	f7fb fdbc 	bl	8012d58 <nema_fill_rect>
 80171e0:	f8d9 0000 	ldr.w	r0, [r9]
 80171e4:	b1e0      	cbz	r0, 8017220 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10c>
 80171e6:	f7fe f85d 	bl	80152a4 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 80171ea:	b005      	add	sp, #20
 80171ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80171f0:	4b12      	ldr	r3, [pc, #72]	@ (801723c <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>)
 80171f2:	4a13      	ldr	r2, [pc, #76]	@ (8017240 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>)
 80171f4:	8819      	ldrh	r1, [r3, #0]
 80171f6:	eb08 0348 	add.w	r3, r8, r8, lsl #1
 80171fa:	8812      	ldrh	r2, [r2, #0]
 80171fc:	4638      	mov	r0, r7
 80171fe:	9300      	str	r3, [sp, #0]
 8017200:	2339      	movs	r3, #57	@ 0x39
 8017202:	f7fb fcb3 	bl	8012b6c <nema_bind_dst_tex>
 8017206:	e7bd      	b.n	8017184 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 8017208:	4b0c      	ldr	r3, [pc, #48]	@ (801723c <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>)
 801720a:	4a0d      	ldr	r2, [pc, #52]	@ (8017240 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>)
 801720c:	8819      	ldrh	r1, [r3, #0]
 801720e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8017212:	8812      	ldrh	r2, [r2, #0]
 8017214:	4638      	mov	r0, r7
 8017216:	9300      	str	r3, [sp, #0]
 8017218:	2304      	movs	r3, #4
 801721a:	f7fb fca7 	bl	8012b6c <nema_bind_dst_tex>
 801721e:	e7b1      	b.n	8017184 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 8017220:	4b09      	ldr	r3, [pc, #36]	@ (8017248 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x134>)
 8017222:	4a0a      	ldr	r2, [pc, #40]	@ (801724c <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x138>)
 8017224:	217c      	movs	r1, #124	@ 0x7c
 8017226:	480a      	ldr	r0, [pc, #40]	@ (8017250 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13c>)
 8017228:	f00d fd84 	bl	8024d34 <__assert_func>
 801722c:	4b09      	ldr	r3, [pc, #36]	@ (8017254 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x140>)
 801722e:	4a0a      	ldr	r2, [pc, #40]	@ (8017258 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>)
 8017230:	f240 11a5 	movw	r1, #421	@ 0x1a5
 8017234:	4809      	ldr	r0, [pc, #36]	@ (801725c <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>)
 8017236:	f00d fd7d 	bl	8024d34 <__assert_func>
 801723a:	bf00      	nop
 801723c:	2004bf92 	.word	0x2004bf92
 8017240:	2004bf94 	.word	0x2004bf94
 8017244:	08000504 	.word	0x08000504
 8017248:	08027884 	.word	0x08027884
 801724c:	08028130 	.word	0x08028130
 8017250:	080278ac 	.word	0x080278ac
 8017254:	080278e0 	.word	0x080278e0
 8017258:	080281ec 	.word	0x080281ec
 801725c:	08027928 	.word	0x08027928
 8017260:	2004c150 	.word	0x2004c150

08017264 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8017264:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017268:	b091      	sub	sp, #68	@ 0x44
 801726a:	f89d 108c 	ldrb.w	r1, [sp, #140]	@ 0x8c
 801726e:	ac0a      	add	r4, sp, #40	@ 0x28
 8017270:	e884 000c 	stmia.w	r4, {r2, r3}
 8017274:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8017278:	1e4f      	subs	r7, r1, #1
 801727a:	fa5f fc87 	uxtb.w	ip, r7
 801727e:	4682      	mov	sl, r0
 8017280:	9303      	str	r3, [sp, #12]
 8017282:	f89d 0090 	ldrb.w	r0, [sp, #144]	@ 0x90
 8017286:	f8bd 3074 	ldrh.w	r3, [sp, #116]	@ 0x74
 801728a:	f1bc 0f01 	cmp.w	ip, #1
 801728e:	9304      	str	r3, [sp, #16]
 8017290:	f9bd 8068 	ldrsh.w	r8, [sp, #104]	@ 0x68
 8017294:	f9bd b06c 	ldrsh.w	fp, [sp, #108]	@ 0x6c
 8017298:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801729a:	f89d 3084 	ldrb.w	r3, [sp, #132]	@ 0x84
 801729e:	9005      	str	r0, [sp, #20]
 80172a0:	f89d 6094 	ldrb.w	r6, [sp, #148]	@ 0x94
 80172a4:	d905      	bls.n	80172b2 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4e>
 80172a6:	2904      	cmp	r1, #4
 80172a8:	f000 80d0 	beq.w	801744c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e8>
 80172ac:	2908      	cmp	r1, #8
 80172ae:	f040 816f 	bne.w	8017590 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32c>
 80172b2:	7b53      	ldrb	r3, [r2, #13]
 80172b4:	7990      	ldrb	r0, [r2, #6]
 80172b6:	0159      	lsls	r1, r3, #5
 80172b8:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80172bc:	ea50 0901 	orrs.w	r9, r0, r1
 80172c0:	f000 80c1 	beq.w	8017446 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e2>
 80172c4:	011b      	lsls	r3, r3, #4
 80172c6:	79d0      	ldrb	r0, [r2, #7]
 80172c8:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80172cc:	ea50 0301 	orrs.w	r3, r0, r1
 80172d0:	9306      	str	r3, [sp, #24]
 80172d2:	f000 80b8 	beq.w	8017446 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e2>
 80172d6:	f992 3009 	ldrsb.w	r3, [r2, #9]
 80172da:	9a03      	ldr	r2, [sp, #12]
 80172dc:	b29b      	uxth	r3, r3
 80172de:	2a00      	cmp	r2, #0
 80172e0:	f040 80be 	bne.w	8017460 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1fc>
 80172e4:	4498      	add	r8, r3
 80172e6:	fa0f f888 	sxth.w	r8, r8
 80172ea:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80172ec:	f9b3 3000 	ldrsh.w	r3, [r3]
 80172f0:	4543      	cmp	r3, r8
 80172f2:	dd06      	ble.n	8017302 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x9e>
 80172f4:	9a03      	ldr	r2, [sp, #12]
 80172f6:	441a      	add	r2, r3
 80172f8:	eba2 0508 	sub.w	r5, r2, r8
 80172fc:	4698      	mov	r8, r3
 80172fe:	b2ab      	uxth	r3, r5
 8017300:	9303      	str	r3, [sp, #12]
 8017302:	f8df c30c 	ldr.w	ip, [pc, #780]	@ 8017610 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8017306:	465a      	mov	r2, fp
 8017308:	f89c 5000 	ldrb.w	r5, [ip]
 801730c:	4641      	mov	r1, r8
 801730e:	4633      	mov	r3, r6
 8017310:	4620      	mov	r0, r4
 8017312:	9507      	str	r5, [sp, #28]
 8017314:	f7f7 fed8 	bl	800f0c8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8017318:	465a      	mov	r2, fp
 801731a:	4641      	mov	r1, r8
 801731c:	4633      	mov	r3, r6
 801731e:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 8017322:	4620      	mov	r0, r4
 8017324:	f7f7 feed 	bl	800f102 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8017328:	a910      	add	r1, sp, #64	@ 0x40
 801732a:	f821 0d0a 	strh.w	r0, [r1, #-10]!
 801732e:	a80d      	add	r0, sp, #52	@ 0x34
 8017330:	f7f8 f814 	bl	800f35c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8017334:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8017336:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801733a:	9308      	str	r3, [sp, #32]
 801733c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801733e:	f3c3 2b07 	ubfx	fp, r3, #8, #8
 8017342:	fa5f f883 	uxtb.w	r8, r3
 8017346:	2f07      	cmp	r7, #7
 8017348:	f200 811f 	bhi.w	801758a <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x326>
 801734c:	e8df f017 	tbh	[pc, r7, lsl #1]
 8017350:	009b00a1 	.word	0x009b00a1
 8017354:	0095011d 	.word	0x0095011d
 8017358:	011d011d 	.word	0x011d011d
 801735c:	0008011d 	.word	0x0008011d
 8017360:	2708      	movs	r7, #8
 8017362:	f8cd 9024 	str.w	r9, [sp, #36]	@ 0x24
 8017366:	4ca1      	ldr	r4, [pc, #644]	@ (80175ec <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 8017368:	6820      	ldr	r0, [r4, #0]
 801736a:	2800      	cmp	r0, #0
 801736c:	f000 8137 	beq.w	80175de <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37a>
 8017370:	f7fd ff78 	bl	8015264 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8017374:	f8da 3000 	ldr.w	r3, [sl]
 8017378:	4650      	mov	r0, sl
 801737a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 801737c:	4798      	blx	r3
 801737e:	2e02      	cmp	r6, #2
 8017380:	f000 80e6 	beq.w	8017550 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ec>
 8017384:	2e03      	cmp	r6, #3
 8017386:	f000 80c7 	beq.w	8017518 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2b4>
 801738a:	2e01      	cmp	r6, #1
 801738c:	f000 80a8 	beq.w	80174e0 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x27c>
 8017390:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8017392:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8017396:	8819      	ldrh	r1, [r3, #0]
 8017398:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801739c:	440a      	add	r2, r1
 801739e:	991e      	ldr	r1, [sp, #120]	@ 0x78
 80173a0:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 80173a4:	8848      	ldrh	r0, [r1, #2]
 80173a6:	6849      	ldr	r1, [r1, #4]
 80173a8:	4403      	add	r3, r0
 80173aa:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 80173ae:	910f      	str	r1, [sp, #60]	@ 0x3c
 80173b0:	a80e      	add	r0, sp, #56	@ 0x38
 80173b2:	f7f8 f815 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80173b6:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 80173ba:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 80173be:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 80173c2:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 80173c6:	f7fb fb11 	bl	80129ec <nema_set_clip>
 80173ca:	2200      	movs	r2, #0
 80173cc:	9d05      	ldr	r5, [sp, #20]
 80173ce:	4611      	mov	r1, r2
 80173d0:	462b      	mov	r3, r5
 80173d2:	4610      	mov	r0, r2
 80173d4:	f7fb fb3e 	bl	8012a54 <nema_rgba>
 80173d8:	f7fd fe3e 	bl	8015058 <nema_set_const_color>
 80173dc:	462b      	mov	r3, r5
 80173de:	4642      	mov	r2, r8
 80173e0:	4659      	mov	r1, fp
 80173e2:	9808      	ldr	r0, [sp, #32]
 80173e4:	f7fb fb36 	bl	8012a54 <nema_rgba>
 80173e8:	f7fb faf4 	bl	80129d4 <nema_set_tex_color>
 80173ec:	f04f 33ff 	mov.w	r3, #4294967295
 80173f0:	2201      	movs	r2, #1
 80173f2:	2100      	movs	r1, #0
 80173f4:	487e      	ldr	r0, [pc, #504]	@ (80175f0 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>)
 80173f6:	f7fd fa69 	bl	80148cc <nema_set_blend>
 80173fa:	2200      	movs	r2, #0
 80173fc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80173fe:	9201      	str	r2, [sp, #4]
 8017400:	9300      	str	r3, [sp, #0]
 8017402:	4649      	mov	r1, r9
 8017404:	463b      	mov	r3, r7
 8017406:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8017408:	9a06      	ldr	r2, [sp, #24]
 801740a:	f7fb fb2b 	bl	8012a64 <nema_bind_src_tex>
 801740e:	9b07      	ldr	r3, [sp, #28]
 8017410:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 8017414:	2b01      	cmp	r3, #1
 8017416:	f9bd 1036 	ldrsh.w	r1, [sp, #54]	@ 0x36
 801741a:	d040      	beq.n	801749e <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x23a>
 801741c:	2e02      	cmp	r6, #2
 801741e:	d051      	beq.n	80174c4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x260>
 8017420:	2e03      	cmp	r6, #3
 8017422:	f000 80c7 	beq.w	80175b4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x350>
 8017426:	2e01      	cmp	r6, #1
 8017428:	9b04      	ldr	r3, [sp, #16]
 801742a:	f000 80b8 	beq.w	801759e <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x33a>
 801742e:	1ac9      	subs	r1, r1, r3
 8017430:	9b03      	ldr	r3, [sp, #12]
 8017432:	1ac0      	subs	r0, r0, r3
 8017434:	f7fb fca2 	bl	8012d7c <nema_blit>
 8017438:	6823      	ldr	r3, [r4, #0]
 801743a:	2b00      	cmp	r3, #0
 801743c:	f000 80cf 	beq.w	80175de <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37a>
 8017440:	2201      	movs	r2, #1
 8017442:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 8017446:	b011      	add	sp, #68	@ 0x44
 8017448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801744c:	2b00      	cmp	r3, #0
 801744e:	f47f af30 	bne.w	80172b2 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4e>
 8017452:	4b68      	ldr	r3, [pc, #416]	@ (80175f4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>)
 8017454:	4a68      	ldr	r2, [pc, #416]	@ (80175f8 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x394>)
 8017456:	f240 11bb 	movw	r1, #443	@ 0x1bb
 801745a:	4868      	ldr	r0, [pc, #416]	@ (80175fc <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>)
 801745c:	f00d fc6a 	bl	8024d34 <__assert_func>
 8017460:	1ad5      	subs	r5, r2, r3
 8017462:	b2ab      	uxth	r3, r5
 8017464:	041a      	lsls	r2, r3, #16
 8017466:	9303      	str	r3, [sp, #12]
 8017468:	f57f af3f 	bpl.w	80172ea <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x86>
 801746c:	eba8 0803 	sub.w	r8, r8, r3
 8017470:	2300      	movs	r3, #0
 8017472:	fa0f f888 	sxth.w	r8, r8
 8017476:	9303      	str	r3, [sp, #12]
 8017478:	e737      	b.n	80172ea <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x86>
 801747a:	f109 0301 	add.w	r3, r9, #1
 801747e:	105b      	asrs	r3, r3, #1
 8017480:	9309      	str	r3, [sp, #36]	@ 0x24
 8017482:	2729      	movs	r7, #41	@ 0x29
 8017484:	e76f      	b.n	8017366 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8017486:	f109 0303 	add.w	r3, r9, #3
 801748a:	109b      	asrs	r3, r3, #2
 801748c:	9309      	str	r3, [sp, #36]	@ 0x24
 801748e:	2728      	movs	r7, #40	@ 0x28
 8017490:	e769      	b.n	8017366 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8017492:	f109 0307 	add.w	r3, r9, #7
 8017496:	10db      	asrs	r3, r3, #3
 8017498:	9309      	str	r3, [sp, #36]	@ 0x24
 801749a:	2727      	movs	r7, #39	@ 0x27
 801749c:	e763      	b.n	8017366 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 801749e:	2e02      	cmp	r6, #2
 80174a0:	f000 8093 	beq.w	80175ca <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x366>
 80174a4:	2e03      	cmp	r6, #3
 80174a6:	d00d      	beq.n	80174c4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x260>
 80174a8:	2e01      	cmp	r6, #1
 80174aa:	f000 8091 	beq.w	80175d0 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x36c>
 80174ae:	461a      	mov	r2, r3
 80174b0:	9b03      	ldr	r3, [sp, #12]
 80174b2:	4419      	add	r1, r3
 80174b4:	9b04      	ldr	r3, [sp, #16]
 80174b6:	eba1 0109 	sub.w	r1, r1, r9
 80174ba:	3101      	adds	r1, #1
 80174bc:	1ac0      	subs	r0, r0, r3
 80174be:	f7fb fc77 	bl	8012db0 <nema_blit_rotate>
 80174c2:	e7b9      	b.n	8017438 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 80174c4:	9b04      	ldr	r3, [sp, #16]
 80174c6:	2202      	movs	r2, #2
 80174c8:	4419      	add	r1, r3
 80174ca:	9b03      	ldr	r3, [sp, #12]
 80174cc:	4418      	add	r0, r3
 80174ce:	9b06      	ldr	r3, [sp, #24]
 80174d0:	eba0 0009 	sub.w	r0, r0, r9
 80174d4:	1ac9      	subs	r1, r1, r3
 80174d6:	3101      	adds	r1, #1
 80174d8:	3001      	adds	r0, #1
 80174da:	f7fb fc69 	bl	8012db0 <nema_blit_rotate>
 80174de:	e7ab      	b.n	8017438 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 80174e0:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 80174e4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80174e8:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 80174ea:	440b      	add	r3, r1
 80174ec:	8852      	ldrh	r2, [r2, #2]
 80174ee:	981e      	ldr	r0, [sp, #120]	@ 0x78
 80174f0:	991e      	ldr	r1, [sp, #120]	@ 0x78
 80174f2:	1a9b      	subs	r3, r3, r2
 80174f4:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 80174f8:	f8b0 c000 	ldrh.w	ip, [r0]
 80174fc:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8017500:	8880      	ldrh	r0, [r0, #4]
 8017502:	1a5b      	subs	r3, r3, r1
 8017504:	4462      	add	r2, ip
 8017506:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 801750a:	f8ad 103c 	strh.w	r1, [sp, #60]	@ 0x3c
 801750e:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 8017512:	f8ad 003e 	strh.w	r0, [sp, #62]	@ 0x3e
 8017516:	e74b      	b.n	80173b0 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x14c>
 8017518:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 801751c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8017520:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8017522:	440b      	add	r3, r1
 8017524:	8812      	ldrh	r2, [r2, #0]
 8017526:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8017528:	991e      	ldr	r1, [sp, #120]	@ 0x78
 801752a:	1a9b      	subs	r3, r3, r2
 801752c:	f9b1 1004 	ldrsh.w	r1, [r1, #4]
 8017530:	f8b0 c002 	ldrh.w	ip, [r0, #2]
 8017534:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8017538:	88c0      	ldrh	r0, [r0, #6]
 801753a:	1a5b      	subs	r3, r3, r1
 801753c:	4462      	add	r2, ip
 801753e:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8017542:	f8ad 103e 	strh.w	r1, [sp, #62]	@ 0x3e
 8017546:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801754a:	f8ad 003c 	strh.w	r0, [sp, #60]	@ 0x3c
 801754e:	e72f      	b.n	80173b0 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x14c>
 8017550:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8017554:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8017558:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801755c:	440a      	add	r2, r1
 801755e:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8017560:	8808      	ldrh	r0, [r1, #0]
 8017562:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8017566:	1a12      	subs	r2, r2, r0
 8017568:	440b      	add	r3, r1
 801756a:	991e      	ldr	r1, [sp, #120]	@ 0x78
 801756c:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801756e:	8849      	ldrh	r1, [r1, #2]
 8017570:	8880      	ldrh	r0, [r0, #4]
 8017572:	1a5b      	subs	r3, r3, r1
 8017574:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8017576:	1a12      	subs	r2, r2, r0
 8017578:	88c8      	ldrh	r0, [r1, #6]
 801757a:	6849      	ldr	r1, [r1, #4]
 801757c:	1a1b      	subs	r3, r3, r0
 801757e:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8017582:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8017586:	910f      	str	r1, [sp, #60]	@ 0x3c
 8017588:	e712      	b.n	80173b0 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x14c>
 801758a:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 801758e:	e6ea      	b.n	8017366 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8017590:	4b1b      	ldr	r3, [pc, #108]	@ (8017600 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8017592:	4a19      	ldr	r2, [pc, #100]	@ (80175f8 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x394>)
 8017594:	f44f 71dd 	mov.w	r1, #442	@ 0x1ba
 8017598:	4818      	ldr	r0, [pc, #96]	@ (80175fc <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>)
 801759a:	f00d fbcb 	bl	8024d34 <__assert_func>
 801759e:	4403      	add	r3, r0
 80175a0:	4618      	mov	r0, r3
 80175a2:	9b06      	ldr	r3, [sp, #24]
 80175a4:	2203      	movs	r2, #3
 80175a6:	1ac0      	subs	r0, r0, r3
 80175a8:	9b03      	ldr	r3, [sp, #12]
 80175aa:	3001      	adds	r0, #1
 80175ac:	1ac9      	subs	r1, r1, r3
 80175ae:	f7fb fbff 	bl	8012db0 <nema_blit_rotate>
 80175b2:	e741      	b.n	8017438 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 80175b4:	9b03      	ldr	r3, [sp, #12]
 80175b6:	2201      	movs	r2, #1
 80175b8:	4419      	add	r1, r3
 80175ba:	9b04      	ldr	r3, [sp, #16]
 80175bc:	eba1 0109 	sub.w	r1, r1, r9
 80175c0:	3101      	adds	r1, #1
 80175c2:	1ac0      	subs	r0, r0, r3
 80175c4:	f7fb fbf4 	bl	8012db0 <nema_blit_rotate>
 80175c8:	e736      	b.n	8017438 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 80175ca:	9b04      	ldr	r3, [sp, #16]
 80175cc:	4418      	add	r0, r3
 80175ce:	e7e8      	b.n	80175a2 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x33e>
 80175d0:	9b04      	ldr	r3, [sp, #16]
 80175d2:	1ac9      	subs	r1, r1, r3
 80175d4:	9b03      	ldr	r3, [sp, #12]
 80175d6:	1ac0      	subs	r0, r0, r3
 80175d8:	f7fb fbd0 	bl	8012d7c <nema_blit>
 80175dc:	e72c      	b.n	8017438 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 80175de:	4b09      	ldr	r3, [pc, #36]	@ (8017604 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 80175e0:	4a09      	ldr	r2, [pc, #36]	@ (8017608 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 80175e2:	217c      	movs	r1, #124	@ 0x7c
 80175e4:	4809      	ldr	r0, [pc, #36]	@ (801760c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 80175e6:	f00d fba5 	bl	8024d34 <__assert_func>
 80175ea:	bf00      	nop
 80175ec:	2004c150 	.word	0x2004c150
 80175f0:	08000504 	.word	0x08000504
 80175f4:	08027e38 	.word	0x08027e38
 80175f8:	0802956c 	.word	0x0802956c
 80175fc:	08027928 	.word	0x08027928
 8017600:	08027da8 	.word	0x08027da8
 8017604:	08027884 	.word	0x08027884
 8017608:	08028130 	.word	0x08028130
 801760c:	080278ac 	.word	0x080278ac
 8017610:	2004bf90 	.word	0x2004bf90

08017614 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8017614:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017618:	4680      	mov	r8, r0
 801761a:	460f      	mov	r7, r1
 801761c:	4614      	mov	r4, r2
 801761e:	461e      	mov	r6, r3
 8017620:	4db2      	ldr	r5, [pc, #712]	@ (80178ec <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2d8>)
 8017622:	e8d5 3f8f 	ldab	r3, [r5]
 8017626:	07da      	lsls	r2, r3, #31
 8017628:	f140 823a 	bpl.w	8017aa0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x48c>
 801762c:	4db0      	ldr	r5, [pc, #704]	@ (80178f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2dc>)
 801762e:	e8d5 3f8f 	ldab	r3, [r5]
 8017632:	07db      	lsls	r3, r3, #31
 8017634:	f140 8225 	bpl.w	8017a82 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x46e>
 8017638:	4dae      	ldr	r5, [pc, #696]	@ (80178f4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2e0>)
 801763a:	e8d5 3f8f 	ldab	r3, [r5]
 801763e:	07d8      	lsls	r0, r3, #31
 8017640:	f140 8210 	bpl.w	8017a64 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x450>
 8017644:	4dac      	ldr	r5, [pc, #688]	@ (80178f8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2e4>)
 8017646:	e8d5 3f8f 	ldab	r3, [r5]
 801764a:	07d9      	lsls	r1, r3, #31
 801764c:	f140 81fb 	bpl.w	8017a46 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x432>
 8017650:	4daa      	ldr	r5, [pc, #680]	@ (80178fc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2e8>)
 8017652:	e8d5 3f8f 	ldab	r3, [r5]
 8017656:	07da      	lsls	r2, r3, #31
 8017658:	f140 81e6 	bpl.w	8017a28 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x414>
 801765c:	4da8      	ldr	r5, [pc, #672]	@ (8017900 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2ec>)
 801765e:	e8d5 3f8f 	ldab	r3, [r5]
 8017662:	07db      	lsls	r3, r3, #31
 8017664:	f140 81d1 	bpl.w	8017a0a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3f6>
 8017668:	4da6      	ldr	r5, [pc, #664]	@ (8017904 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2f0>)
 801766a:	e8d5 3f8f 	ldab	r3, [r5]
 801766e:	07d8      	lsls	r0, r3, #31
 8017670:	f140 81bc 	bpl.w	80179ec <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3d8>
 8017674:	4da4      	ldr	r5, [pc, #656]	@ (8017908 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2f4>)
 8017676:	e8d5 3f8f 	ldab	r3, [r5]
 801767a:	07d9      	lsls	r1, r3, #31
 801767c:	f140 81a7 	bpl.w	80179ce <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3ba>
 8017680:	4da2      	ldr	r5, [pc, #648]	@ (801790c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2f8>)
 8017682:	e8d5 3f8f 	ldab	r3, [r5]
 8017686:	07da      	lsls	r2, r3, #31
 8017688:	f140 8192 	bpl.w	80179b0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x39c>
 801768c:	4da0      	ldr	r5, [pc, #640]	@ (8017910 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2fc>)
 801768e:	e8d5 3f8f 	ldab	r3, [r5]
 8017692:	07db      	lsls	r3, r3, #31
 8017694:	f140 811a 	bpl.w	80178cc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2b8>
 8017698:	4d9e      	ldr	r5, [pc, #632]	@ (8017914 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x300>)
 801769a:	e8d5 3f8f 	ldab	r3, [r5]
 801769e:	07d8      	lsls	r0, r3, #31
 80176a0:	f140 8105 	bpl.w	80178ae <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x29a>
 80176a4:	4d9c      	ldr	r5, [pc, #624]	@ (8017918 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x304>)
 80176a6:	e8d5 3f8f 	ldab	r3, [r5]
 80176aa:	07d9      	lsls	r1, r3, #31
 80176ac:	f140 80f0 	bpl.w	8017890 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x27c>
 80176b0:	4d9a      	ldr	r5, [pc, #616]	@ (801791c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x308>)
 80176b2:	e8d5 3f8f 	ldab	r3, [r5]
 80176b6:	07da      	lsls	r2, r3, #31
 80176b8:	f140 80db 	bpl.w	8017872 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x25e>
 80176bc:	4d98      	ldr	r5, [pc, #608]	@ (8017920 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x30c>)
 80176be:	e8d5 3f8f 	ldab	r3, [r5]
 80176c2:	07db      	lsls	r3, r3, #31
 80176c4:	f140 80c6 	bpl.w	8017854 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x240>
 80176c8:	4d96      	ldr	r5, [pc, #600]	@ (8017924 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x310>)
 80176ca:	e8d5 3f8f 	ldab	r3, [r5]
 80176ce:	07d8      	lsls	r0, r3, #31
 80176d0:	f140 80b1 	bpl.w	8017836 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x222>
 80176d4:	4d94      	ldr	r5, [pc, #592]	@ (8017928 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x314>)
 80176d6:	e8d5 3f8f 	ldab	r3, [r5]
 80176da:	07d9      	lsls	r1, r3, #31
 80176dc:	f140 809c 	bpl.w	8017818 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x204>
 80176e0:	4d92      	ldr	r5, [pc, #584]	@ (801792c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x318>)
 80176e2:	e8d5 3f8f 	ldab	r3, [r5]
 80176e6:	07da      	lsls	r2, r3, #31
 80176e8:	f140 8087 	bpl.w	80177fa <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1e6>
 80176ec:	4d90      	ldr	r5, [pc, #576]	@ (8017930 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x31c>)
 80176ee:	e8d5 3f8f 	ldab	r3, [r5]
 80176f2:	07db      	lsls	r3, r3, #31
 80176f4:	d573      	bpl.n	80177de <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1ca>
 80176f6:	4d8f      	ldr	r5, [pc, #572]	@ (8017934 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x320>)
 80176f8:	e8d5 3f8f 	ldab	r3, [r5]
 80176fc:	07d8      	lsls	r0, r3, #31
 80176fe:	d560      	bpl.n	80177c2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1ae>
 8017700:	4d8d      	ldr	r5, [pc, #564]	@ (8017938 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x324>)
 8017702:	e8d5 3f8f 	ldab	r3, [r5]
 8017706:	07d9      	lsls	r1, r3, #31
 8017708:	d54d      	bpl.n	80177a6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x192>
 801770a:	4d8c      	ldr	r5, [pc, #560]	@ (801793c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x328>)
 801770c:	e8d5 3f8f 	ldab	r3, [r5]
 8017710:	07da      	lsls	r2, r3, #31
 8017712:	d53a      	bpl.n	801778a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 8017714:	4d8a      	ldr	r5, [pc, #552]	@ (8017940 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x32c>)
 8017716:	e8d5 3f8f 	ldab	r3, [r5]
 801771a:	07db      	lsls	r3, r3, #31
 801771c:	d517      	bpl.n	801774e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801771e:	f898 3008 	ldrb.w	r3, [r8, #8]
 8017722:	2b01      	cmp	r3, #1
 8017724:	d024      	beq.n	8017770 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15c>
 8017726:	f0c0 81ca 	bcc.w	8017abe <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4aa>
 801772a:	2b02      	cmp	r3, #2
 801772c:	d002      	beq.n	8017734 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801772e:	2000      	movs	r0, #0
 8017730:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017734:	2eff      	cmp	r6, #255	@ 0xff
 8017736:	f1a4 042c 	sub.w	r4, r4, #44	@ 0x2c
 801773a:	f000 81cb 	beq.w	8017ad4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4c0>
 801773e:	2c03      	cmp	r4, #3
 8017740:	d8f5      	bhi.n	801772e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8017742:	e8df f014 	tbh	[pc, r4, lsl #1]
 8017746:	01ff      	.short	0x01ff
 8017748:	01e701ee 	.word	0x01e701ee
 801774c:	01e0      	.short	0x01e0
 801774e:	4628      	mov	r0, r5
 8017750:	f00d fac5 	bl	8024cde <__cxa_guard_acquire>
 8017754:	2800      	cmp	r0, #0
 8017756:	d0e2      	beq.n	801771e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x10a>
 8017758:	4628      	mov	r0, r5
 801775a:	f00d facc 	bl	8024cf6 <__cxa_guard_release>
 801775e:	4a79      	ldr	r2, [pc, #484]	@ (8017944 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8017760:	4979      	ldr	r1, [pc, #484]	@ (8017948 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x334>)
 8017762:	487a      	ldr	r0, [pc, #488]	@ (801794c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x338>)
 8017764:	f00d fab4 	bl	8024cd0 <__aeabi_atexit>
 8017768:	f898 3008 	ldrb.w	r3, [r8, #8]
 801776c:	2b01      	cmp	r3, #1
 801776e:	d1da      	bne.n	8017726 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x112>
 8017770:	2eff      	cmp	r6, #255	@ 0xff
 8017772:	f1a4 042c 	sub.w	r4, r4, #44	@ 0x2c
 8017776:	f000 81b6 	beq.w	8017ae6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4d2>
 801777a:	2c03      	cmp	r4, #3
 801777c:	d8d7      	bhi.n	801772e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 801777e:	e8df f014 	tbh	[pc, r4, lsl #1]
 8017782:	0233      	.short	0x0233
 8017784:	021b0222 	.word	0x021b0222
 8017788:	0214      	.short	0x0214
 801778a:	4628      	mov	r0, r5
 801778c:	f00d faa7 	bl	8024cde <__cxa_guard_acquire>
 8017790:	2800      	cmp	r0, #0
 8017792:	d0bf      	beq.n	8017714 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x100>
 8017794:	4628      	mov	r0, r5
 8017796:	f00d faae 	bl	8024cf6 <__cxa_guard_release>
 801779a:	4a6a      	ldr	r2, [pc, #424]	@ (8017944 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 801779c:	496c      	ldr	r1, [pc, #432]	@ (8017950 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x33c>)
 801779e:	486d      	ldr	r0, [pc, #436]	@ (8017954 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x340>)
 80177a0:	f00d fa96 	bl	8024cd0 <__aeabi_atexit>
 80177a4:	e7b6      	b.n	8017714 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x100>
 80177a6:	4628      	mov	r0, r5
 80177a8:	f00d fa99 	bl	8024cde <__cxa_guard_acquire>
 80177ac:	2800      	cmp	r0, #0
 80177ae:	d0ac      	beq.n	801770a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xf6>
 80177b0:	4628      	mov	r0, r5
 80177b2:	f00d faa0 	bl	8024cf6 <__cxa_guard_release>
 80177b6:	4a63      	ldr	r2, [pc, #396]	@ (8017944 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80177b8:	4967      	ldr	r1, [pc, #412]	@ (8017958 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x344>)
 80177ba:	4868      	ldr	r0, [pc, #416]	@ (801795c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x348>)
 80177bc:	f00d fa88 	bl	8024cd0 <__aeabi_atexit>
 80177c0:	e7a3      	b.n	801770a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xf6>
 80177c2:	4628      	mov	r0, r5
 80177c4:	f00d fa8b 	bl	8024cde <__cxa_guard_acquire>
 80177c8:	2800      	cmp	r0, #0
 80177ca:	d099      	beq.n	8017700 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80177cc:	4628      	mov	r0, r5
 80177ce:	f00d fa92 	bl	8024cf6 <__cxa_guard_release>
 80177d2:	4a5c      	ldr	r2, [pc, #368]	@ (8017944 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80177d4:	4962      	ldr	r1, [pc, #392]	@ (8017960 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x34c>)
 80177d6:	4863      	ldr	r0, [pc, #396]	@ (8017964 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x350>)
 80177d8:	f00d fa7a 	bl	8024cd0 <__aeabi_atexit>
 80177dc:	e790      	b.n	8017700 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80177de:	4628      	mov	r0, r5
 80177e0:	f00d fa7d 	bl	8024cde <__cxa_guard_acquire>
 80177e4:	2800      	cmp	r0, #0
 80177e6:	d086      	beq.n	80176f6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 80177e8:	4628      	mov	r0, r5
 80177ea:	f00d fa84 	bl	8024cf6 <__cxa_guard_release>
 80177ee:	4a55      	ldr	r2, [pc, #340]	@ (8017944 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80177f0:	495d      	ldr	r1, [pc, #372]	@ (8017968 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x354>)
 80177f2:	485e      	ldr	r0, [pc, #376]	@ (801796c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x358>)
 80177f4:	f00d fa6c 	bl	8024cd0 <__aeabi_atexit>
 80177f8:	e77d      	b.n	80176f6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 80177fa:	4628      	mov	r0, r5
 80177fc:	f00d fa6f 	bl	8024cde <__cxa_guard_acquire>
 8017800:	2800      	cmp	r0, #0
 8017802:	f43f af73 	beq.w	80176ec <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 8017806:	4628      	mov	r0, r5
 8017808:	f00d fa75 	bl	8024cf6 <__cxa_guard_release>
 801780c:	4a4d      	ldr	r2, [pc, #308]	@ (8017944 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 801780e:	4958      	ldr	r1, [pc, #352]	@ (8017970 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x35c>)
 8017810:	4858      	ldr	r0, [pc, #352]	@ (8017974 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x360>)
 8017812:	f00d fa5d 	bl	8024cd0 <__aeabi_atexit>
 8017816:	e769      	b.n	80176ec <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 8017818:	4628      	mov	r0, r5
 801781a:	f00d fa60 	bl	8024cde <__cxa_guard_acquire>
 801781e:	2800      	cmp	r0, #0
 8017820:	f43f af5e 	beq.w	80176e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xcc>
 8017824:	4628      	mov	r0, r5
 8017826:	f00d fa66 	bl	8024cf6 <__cxa_guard_release>
 801782a:	4a46      	ldr	r2, [pc, #280]	@ (8017944 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 801782c:	4952      	ldr	r1, [pc, #328]	@ (8017978 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x364>)
 801782e:	4853      	ldr	r0, [pc, #332]	@ (801797c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x368>)
 8017830:	f00d fa4e 	bl	8024cd0 <__aeabi_atexit>
 8017834:	e754      	b.n	80176e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xcc>
 8017836:	4628      	mov	r0, r5
 8017838:	f00d fa51 	bl	8024cde <__cxa_guard_acquire>
 801783c:	2800      	cmp	r0, #0
 801783e:	f43f af49 	beq.w	80176d4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc0>
 8017842:	4628      	mov	r0, r5
 8017844:	f00d fa57 	bl	8024cf6 <__cxa_guard_release>
 8017848:	4a3e      	ldr	r2, [pc, #248]	@ (8017944 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 801784a:	494d      	ldr	r1, [pc, #308]	@ (8017980 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x36c>)
 801784c:	484d      	ldr	r0, [pc, #308]	@ (8017984 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x370>)
 801784e:	f00d fa3f 	bl	8024cd0 <__aeabi_atexit>
 8017852:	e73f      	b.n	80176d4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc0>
 8017854:	4628      	mov	r0, r5
 8017856:	f00d fa42 	bl	8024cde <__cxa_guard_acquire>
 801785a:	2800      	cmp	r0, #0
 801785c:	f43f af34 	beq.w	80176c8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb4>
 8017860:	4628      	mov	r0, r5
 8017862:	f00d fa48 	bl	8024cf6 <__cxa_guard_release>
 8017866:	4a37      	ldr	r2, [pc, #220]	@ (8017944 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8017868:	4947      	ldr	r1, [pc, #284]	@ (8017988 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x374>)
 801786a:	4848      	ldr	r0, [pc, #288]	@ (801798c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x378>)
 801786c:	f00d fa30 	bl	8024cd0 <__aeabi_atexit>
 8017870:	e72a      	b.n	80176c8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb4>
 8017872:	4628      	mov	r0, r5
 8017874:	f00d fa33 	bl	8024cde <__cxa_guard_acquire>
 8017878:	2800      	cmp	r0, #0
 801787a:	f43f af1f 	beq.w	80176bc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa8>
 801787e:	4628      	mov	r0, r5
 8017880:	f00d fa39 	bl	8024cf6 <__cxa_guard_release>
 8017884:	4a2f      	ldr	r2, [pc, #188]	@ (8017944 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8017886:	4942      	ldr	r1, [pc, #264]	@ (8017990 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x37c>)
 8017888:	4842      	ldr	r0, [pc, #264]	@ (8017994 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x380>)
 801788a:	f00d fa21 	bl	8024cd0 <__aeabi_atexit>
 801788e:	e715      	b.n	80176bc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa8>
 8017890:	4628      	mov	r0, r5
 8017892:	f00d fa24 	bl	8024cde <__cxa_guard_acquire>
 8017896:	2800      	cmp	r0, #0
 8017898:	f43f af0a 	beq.w	80176b0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9c>
 801789c:	4628      	mov	r0, r5
 801789e:	f00d fa2a 	bl	8024cf6 <__cxa_guard_release>
 80178a2:	4a28      	ldr	r2, [pc, #160]	@ (8017944 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80178a4:	493c      	ldr	r1, [pc, #240]	@ (8017998 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x384>)
 80178a6:	483d      	ldr	r0, [pc, #244]	@ (801799c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x388>)
 80178a8:	f00d fa12 	bl	8024cd0 <__aeabi_atexit>
 80178ac:	e700      	b.n	80176b0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9c>
 80178ae:	4628      	mov	r0, r5
 80178b0:	f00d fa15 	bl	8024cde <__cxa_guard_acquire>
 80178b4:	2800      	cmp	r0, #0
 80178b6:	f43f aef5 	beq.w	80176a4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x90>
 80178ba:	4628      	mov	r0, r5
 80178bc:	f00d fa1b 	bl	8024cf6 <__cxa_guard_release>
 80178c0:	4a20      	ldr	r2, [pc, #128]	@ (8017944 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80178c2:	4937      	ldr	r1, [pc, #220]	@ (80179a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x38c>)
 80178c4:	4837      	ldr	r0, [pc, #220]	@ (80179a4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x390>)
 80178c6:	f00d fa03 	bl	8024cd0 <__aeabi_atexit>
 80178ca:	e6eb      	b.n	80176a4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x90>
 80178cc:	4628      	mov	r0, r5
 80178ce:	f00d fa06 	bl	8024cde <__cxa_guard_acquire>
 80178d2:	2800      	cmp	r0, #0
 80178d4:	f43f aee0 	beq.w	8017698 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x84>
 80178d8:	4628      	mov	r0, r5
 80178da:	f00d fa0c 	bl	8024cf6 <__cxa_guard_release>
 80178de:	4a19      	ldr	r2, [pc, #100]	@ (8017944 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80178e0:	4931      	ldr	r1, [pc, #196]	@ (80179a8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x394>)
 80178e2:	4832      	ldr	r0, [pc, #200]	@ (80179ac <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x398>)
 80178e4:	f00d f9f4 	bl	8024cd0 <__aeabi_atexit>
 80178e8:	e6d6      	b.n	8017698 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x84>
 80178ea:	bf00      	nop
 80178ec:	2004c178 	.word	0x2004c178
 80178f0:	2004c18c 	.word	0x2004c18c
 80178f4:	2004c154 	.word	0x2004c154
 80178f8:	2004c160 	.word	0x2004c160
 80178fc:	2004c198 	.word	0x2004c198
 8017900:	2004c1a4 	.word	0x2004c1a4
 8017904:	2004c16c 	.word	0x2004c16c
 8017908:	2004c184 	.word	0x2004c184
 801790c:	2004c17c 	.word	0x2004c17c
 8017910:	2004c190 	.word	0x2004c190
 8017914:	2004c158 	.word	0x2004c158
 8017918:	2004c164 	.word	0x2004c164
 801791c:	2004c19c 	.word	0x2004c19c
 8017920:	2004c1a8 	.word	0x2004c1a8
 8017924:	2004c170 	.word	0x2004c170
 8017928:	2004c188 	.word	0x2004c188
 801792c:	2004c180 	.word	0x2004c180
 8017930:	2004c194 	.word	0x2004c194
 8017934:	2004c15c 	.word	0x2004c15c
 8017938:	2004c168 	.word	0x2004c168
 801793c:	2004c1a0 	.word	0x2004c1a0
 8017940:	2004c174 	.word	0x2004c174
 8017944:	20000000 	.word	0x20000000
 8017948:	08016ed5 	.word	0x08016ed5
 801794c:	200001f4 	.word	0x200001f4
 8017950:	08016ed1 	.word	0x08016ed1
 8017954:	20000220 	.word	0x20000220
 8017958:	08016ee1 	.word	0x08016ee1
 801795c:	200001e8 	.word	0x200001e8
 8017960:	08016ee5 	.word	0x08016ee5
 8017964:	200001dc 	.word	0x200001dc
 8017968:	08016ed9 	.word	0x08016ed9
 801796c:	20000214 	.word	0x20000214
 8017970:	08016edd 	.word	0x08016edd
 8017974:	20000200 	.word	0x20000200
 8017978:	08016ef1 	.word	0x08016ef1
 801797c:	20000208 	.word	0x20000208
 8017980:	08016ef5 	.word	0x08016ef5
 8017984:	200001f0 	.word	0x200001f0
 8017988:	08016ee9 	.word	0x08016ee9
 801798c:	20000228 	.word	0x20000228
 8017990:	08016eed 	.word	0x08016eed
 8017994:	2000021c 	.word	0x2000021c
 8017998:	08016f01 	.word	0x08016f01
 801799c:	200001e4 	.word	0x200001e4
 80179a0:	08016f05 	.word	0x08016f05
 80179a4:	200001d8 	.word	0x200001d8
 80179a8:	08016ef9 	.word	0x08016ef9
 80179ac:	20000210 	.word	0x20000210
 80179b0:	4628      	mov	r0, r5
 80179b2:	f00d f994 	bl	8024cde <__cxa_guard_acquire>
 80179b6:	2800      	cmp	r0, #0
 80179b8:	f43f ae68 	beq.w	801768c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78>
 80179bc:	4628      	mov	r0, r5
 80179be:	f00d f99a 	bl	8024cf6 <__cxa_guard_release>
 80179c2:	4aa6      	ldr	r2, [pc, #664]	@ (8017c5c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 80179c4:	49a6      	ldr	r1, [pc, #664]	@ (8017c60 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64c>)
 80179c6:	48a7      	ldr	r0, [pc, #668]	@ (8017c64 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x650>)
 80179c8:	f00d f982 	bl	8024cd0 <__aeabi_atexit>
 80179cc:	e65e      	b.n	801768c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78>
 80179ce:	4628      	mov	r0, r5
 80179d0:	f00d f985 	bl	8024cde <__cxa_guard_acquire>
 80179d4:	2800      	cmp	r0, #0
 80179d6:	f43f ae53 	beq.w	8017680 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 80179da:	4628      	mov	r0, r5
 80179dc:	f00d f98b 	bl	8024cf6 <__cxa_guard_release>
 80179e0:	4a9e      	ldr	r2, [pc, #632]	@ (8017c5c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 80179e2:	49a1      	ldr	r1, [pc, #644]	@ (8017c68 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x654>)
 80179e4:	48a1      	ldr	r0, [pc, #644]	@ (8017c6c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x658>)
 80179e6:	f00d f973 	bl	8024cd0 <__aeabi_atexit>
 80179ea:	e649      	b.n	8017680 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 80179ec:	4628      	mov	r0, r5
 80179ee:	f00d f976 	bl	8024cde <__cxa_guard_acquire>
 80179f2:	2800      	cmp	r0, #0
 80179f4:	f43f ae3e 	beq.w	8017674 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 80179f8:	4628      	mov	r0, r5
 80179fa:	f00d f97c 	bl	8024cf6 <__cxa_guard_release>
 80179fe:	4a97      	ldr	r2, [pc, #604]	@ (8017c5c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8017a00:	499b      	ldr	r1, [pc, #620]	@ (8017c70 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x65c>)
 8017a02:	489c      	ldr	r0, [pc, #624]	@ (8017c74 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x660>)
 8017a04:	f00d f964 	bl	8024cd0 <__aeabi_atexit>
 8017a08:	e634      	b.n	8017674 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 8017a0a:	4628      	mov	r0, r5
 8017a0c:	f00d f967 	bl	8024cde <__cxa_guard_acquire>
 8017a10:	2800      	cmp	r0, #0
 8017a12:	f43f ae29 	beq.w	8017668 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x54>
 8017a16:	4628      	mov	r0, r5
 8017a18:	f00d f96d 	bl	8024cf6 <__cxa_guard_release>
 8017a1c:	4a8f      	ldr	r2, [pc, #572]	@ (8017c5c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8017a1e:	4996      	ldr	r1, [pc, #600]	@ (8017c78 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x664>)
 8017a20:	4896      	ldr	r0, [pc, #600]	@ (8017c7c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x668>)
 8017a22:	f00d f955 	bl	8024cd0 <__aeabi_atexit>
 8017a26:	e61f      	b.n	8017668 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x54>
 8017a28:	4628      	mov	r0, r5
 8017a2a:	f00d f958 	bl	8024cde <__cxa_guard_acquire>
 8017a2e:	2800      	cmp	r0, #0
 8017a30:	f43f ae14 	beq.w	801765c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x48>
 8017a34:	4628      	mov	r0, r5
 8017a36:	f00d f95e 	bl	8024cf6 <__cxa_guard_release>
 8017a3a:	4a88      	ldr	r2, [pc, #544]	@ (8017c5c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8017a3c:	4990      	ldr	r1, [pc, #576]	@ (8017c80 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x66c>)
 8017a3e:	4891      	ldr	r0, [pc, #580]	@ (8017c84 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x670>)
 8017a40:	f00d f946 	bl	8024cd0 <__aeabi_atexit>
 8017a44:	e60a      	b.n	801765c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x48>
 8017a46:	4628      	mov	r0, r5
 8017a48:	f00d f949 	bl	8024cde <__cxa_guard_acquire>
 8017a4c:	2800      	cmp	r0, #0
 8017a4e:	f43f adff 	beq.w	8017650 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3c>
 8017a52:	4628      	mov	r0, r5
 8017a54:	f00d f94f 	bl	8024cf6 <__cxa_guard_release>
 8017a58:	4a80      	ldr	r2, [pc, #512]	@ (8017c5c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8017a5a:	498b      	ldr	r1, [pc, #556]	@ (8017c88 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x674>)
 8017a5c:	488b      	ldr	r0, [pc, #556]	@ (8017c8c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x678>)
 8017a5e:	f00d f937 	bl	8024cd0 <__aeabi_atexit>
 8017a62:	e5f5      	b.n	8017650 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3c>
 8017a64:	4628      	mov	r0, r5
 8017a66:	f00d f93a 	bl	8024cde <__cxa_guard_acquire>
 8017a6a:	2800      	cmp	r0, #0
 8017a6c:	f43f adea 	beq.w	8017644 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x30>
 8017a70:	4628      	mov	r0, r5
 8017a72:	f00d f940 	bl	8024cf6 <__cxa_guard_release>
 8017a76:	4a79      	ldr	r2, [pc, #484]	@ (8017c5c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8017a78:	4985      	ldr	r1, [pc, #532]	@ (8017c90 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x67c>)
 8017a7a:	4886      	ldr	r0, [pc, #536]	@ (8017c94 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x680>)
 8017a7c:	f00d f928 	bl	8024cd0 <__aeabi_atexit>
 8017a80:	e5e0      	b.n	8017644 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x30>
 8017a82:	4628      	mov	r0, r5
 8017a84:	f00d f92b 	bl	8024cde <__cxa_guard_acquire>
 8017a88:	2800      	cmp	r0, #0
 8017a8a:	f43f add5 	beq.w	8017638 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017a8e:	4628      	mov	r0, r5
 8017a90:	f00d f931 	bl	8024cf6 <__cxa_guard_release>
 8017a94:	4a71      	ldr	r2, [pc, #452]	@ (8017c5c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8017a96:	4980      	ldr	r1, [pc, #512]	@ (8017c98 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x684>)
 8017a98:	4880      	ldr	r0, [pc, #512]	@ (8017c9c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x688>)
 8017a9a:	f00d f919 	bl	8024cd0 <__aeabi_atexit>
 8017a9e:	e5cb      	b.n	8017638 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017aa0:	4628      	mov	r0, r5
 8017aa2:	f00d f91c 	bl	8024cde <__cxa_guard_acquire>
 8017aa6:	2800      	cmp	r0, #0
 8017aa8:	f43f adc0 	beq.w	801762c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 8017aac:	4628      	mov	r0, r5
 8017aae:	f00d f922 	bl	8024cf6 <__cxa_guard_release>
 8017ab2:	4a6a      	ldr	r2, [pc, #424]	@ (8017c5c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8017ab4:	497a      	ldr	r1, [pc, #488]	@ (8017ca0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x68c>)
 8017ab6:	487b      	ldr	r0, [pc, #492]	@ (8017ca4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x690>)
 8017ab8:	f00d f90a 	bl	8024cd0 <__aeabi_atexit>
 8017abc:	e5b6      	b.n	801762c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 8017abe:	2eff      	cmp	r6, #255	@ 0xff
 8017ac0:	f1a4 042c 	sub.w	r4, r4, #44	@ 0x2c
 8017ac4:	d018      	beq.n	8017af8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4e4>
 8017ac6:	2c03      	cmp	r4, #3
 8017ac8:	f63f ae31 	bhi.w	801772e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8017acc:	e8df f004 	tbb	[pc, r4]
 8017ad0:	4b525963 	.word	0x4b525963
 8017ad4:	2c03      	cmp	r4, #3
 8017ad6:	f63f ae2a 	bhi.w	801772e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8017ada:	e8df f014 	tbh	[pc, r4, lsl #1]
 8017ade:	012d      	.short	0x012d
 8017ae0:	001b011e 	.word	0x001b011e
 8017ae4:	0014      	.short	0x0014
 8017ae6:	2c03      	cmp	r4, #3
 8017ae8:	f63f ae21 	bhi.w	801772e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8017aec:	e8df f014 	tbh	[pc, r4, lsl #1]
 8017af0:	00f000ff 	.word	0x00f000ff
 8017af4:	00af010e 	.word	0x00af010e
 8017af8:	2c03      	cmp	r4, #3
 8017afa:	f63f ae18 	bhi.w	801772e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8017afe:	e8df f004 	tbb	[pc, r4]
 8017b02:	929c      	.short	0x929c
 8017b04:	848b      	.short	0x848b
 8017b06:	687b      	ldr	r3, [r7, #4]
 8017b08:	4867      	ldr	r0, [pc, #412]	@ (8017ca8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x694>)
 8017b0a:	781b      	ldrb	r3, [r3, #0]
 8017b0c:	2b00      	cmp	r3, #0
 8017b0e:	bf18      	it	ne
 8017b10:	2000      	movne	r0, #0
 8017b12:	e60d      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017b14:	687b      	ldr	r3, [r7, #4]
 8017b16:	4865      	ldr	r0, [pc, #404]	@ (8017cac <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x698>)
 8017b18:	781b      	ldrb	r3, [r3, #0]
 8017b1a:	2b00      	cmp	r3, #0
 8017b1c:	bf18      	it	ne
 8017b1e:	2000      	movne	r0, #0
 8017b20:	e606      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017b22:	687b      	ldr	r3, [r7, #4]
 8017b24:	781b      	ldrb	r3, [r3, #0]
 8017b26:	2b01      	cmp	r3, #1
 8017b28:	f000 811b 	beq.w	8017d62 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x74e>
 8017b2c:	f0c0 8113 	bcc.w	8017d56 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x742>
 8017b30:	2b02      	cmp	r3, #2
 8017b32:	f47f adfc 	bne.w	801772e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8017b36:	4b5e      	ldr	r3, [pc, #376]	@ (8017cb0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x69c>)
 8017b38:	4a5e      	ldr	r2, [pc, #376]	@ (8017cb4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a0>)
 8017b3a:	f241 21e4 	movw	r1, #4836	@ 0x12e4
 8017b3e:	485e      	ldr	r0, [pc, #376]	@ (8017cb8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a4>)
 8017b40:	f00d f8f8 	bl	8024d34 <__assert_func>
 8017b44:	687b      	ldr	r3, [r7, #4]
 8017b46:	781b      	ldrb	r3, [r3, #0]
 8017b48:	2b01      	cmp	r3, #1
 8017b4a:	f000 8108 	beq.w	8017d5e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x74a>
 8017b4e:	f0c0 8104 	bcc.w	8017d5a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x746>
 8017b52:	2b02      	cmp	r3, #2
 8017b54:	f47f adeb 	bne.w	801772e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8017b58:	4b55      	ldr	r3, [pc, #340]	@ (8017cb0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x69c>)
 8017b5a:	4a56      	ldr	r2, [pc, #344]	@ (8017cb4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a0>)
 8017b5c:	f241 21f0 	movw	r1, #4848	@ 0x12f0
 8017b60:	4855      	ldr	r0, [pc, #340]	@ (8017cb8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a4>)
 8017b62:	f00d f8e7 	bl	8024d34 <__assert_func>
 8017b66:	687b      	ldr	r3, [r7, #4]
 8017b68:	4846      	ldr	r0, [pc, #280]	@ (8017c84 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x670>)
 8017b6a:	781b      	ldrb	r3, [r3, #0]
 8017b6c:	2b00      	cmp	r3, #0
 8017b6e:	bf18      	it	ne
 8017b70:	2000      	movne	r0, #0
 8017b72:	e5dd      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017b74:	687b      	ldr	r3, [r7, #4]
 8017b76:	483f      	ldr	r0, [pc, #252]	@ (8017c74 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x660>)
 8017b78:	781b      	ldrb	r3, [r3, #0]
 8017b7a:	2b00      	cmp	r3, #0
 8017b7c:	bf18      	it	ne
 8017b7e:	2000      	movne	r0, #0
 8017b80:	e5d6      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017b82:	687b      	ldr	r3, [r7, #4]
 8017b84:	781b      	ldrb	r3, [r3, #0]
 8017b86:	2b00      	cmp	r3, #0
 8017b88:	f000 80ed 	beq.w	8017d66 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x752>
 8017b8c:	2b01      	cmp	r3, #1
 8017b8e:	4845      	ldr	r0, [pc, #276]	@ (8017ca4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x690>)
 8017b90:	bf18      	it	ne
 8017b92:	2000      	movne	r0, #0
 8017b94:	e5cc      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017b96:	687b      	ldr	r3, [r7, #4]
 8017b98:	781b      	ldrb	r3, [r3, #0]
 8017b9a:	2b00      	cmp	r3, #0
 8017b9c:	f000 80e5 	beq.w	8017d6a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x756>
 8017ba0:	2b01      	cmp	r3, #1
 8017ba2:	483c      	ldr	r0, [pc, #240]	@ (8017c94 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x680>)
 8017ba4:	bf18      	it	ne
 8017ba6:	2000      	movne	r0, #0
 8017ba8:	e5c2      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017baa:	687b      	ldr	r3, [r7, #4]
 8017bac:	4843      	ldr	r0, [pc, #268]	@ (8017cbc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a8>)
 8017bae:	781b      	ldrb	r3, [r3, #0]
 8017bb0:	2b00      	cmp	r3, #0
 8017bb2:	bf18      	it	ne
 8017bb4:	2000      	movne	r0, #0
 8017bb6:	e5bb      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017bb8:	687b      	ldr	r3, [r7, #4]
 8017bba:	4841      	ldr	r0, [pc, #260]	@ (8017cc0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6ac>)
 8017bbc:	781b      	ldrb	r3, [r3, #0]
 8017bbe:	2b00      	cmp	r3, #0
 8017bc0:	bf18      	it	ne
 8017bc2:	2000      	movne	r0, #0
 8017bc4:	e5b4      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017bc6:	687b      	ldr	r3, [r7, #4]
 8017bc8:	781b      	ldrb	r3, [r3, #0]
 8017bca:	2b01      	cmp	r3, #1
 8017bcc:	f000 80d5 	beq.w	8017d7a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x766>
 8017bd0:	f0c0 80d1 	bcc.w	8017d76 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x762>
 8017bd4:	2b02      	cmp	r3, #2
 8017bd6:	f47f adaa 	bne.w	801772e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8017bda:	4b3a      	ldr	r3, [pc, #232]	@ (8017cc4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6b0>)
 8017bdc:	4a35      	ldr	r2, [pc, #212]	@ (8017cb4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a0>)
 8017bde:	f241 2189 	movw	r1, #4745	@ 0x1289
 8017be2:	4835      	ldr	r0, [pc, #212]	@ (8017cb8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a4>)
 8017be4:	f00d f8a6 	bl	8024d34 <__assert_func>
 8017be8:	687b      	ldr	r3, [r7, #4]
 8017bea:	781b      	ldrb	r3, [r3, #0]
 8017bec:	2b01      	cmp	r3, #1
 8017bee:	f000 80c0 	beq.w	8017d72 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x75e>
 8017bf2:	f0c0 80bc 	bcc.w	8017d6e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x75a>
 8017bf6:	2b02      	cmp	r3, #2
 8017bf8:	f47f ad99 	bne.w	801772e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8017bfc:	4b32      	ldr	r3, [pc, #200]	@ (8017cc8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6b4>)
 8017bfe:	4a2d      	ldr	r2, [pc, #180]	@ (8017cb4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a0>)
 8017c00:	f241 2195 	movw	r1, #4757	@ 0x1295
 8017c04:	482c      	ldr	r0, [pc, #176]	@ (8017cb8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a4>)
 8017c06:	f00d f895 	bl	8024d34 <__assert_func>
 8017c0a:	687b      	ldr	r3, [r7, #4]
 8017c0c:	481b      	ldr	r0, [pc, #108]	@ (8017c7c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x668>)
 8017c0e:	781b      	ldrb	r3, [r3, #0]
 8017c10:	2b00      	cmp	r3, #0
 8017c12:	bf18      	it	ne
 8017c14:	2000      	movne	r0, #0
 8017c16:	e58b      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017c18:	687b      	ldr	r3, [r7, #4]
 8017c1a:	4814      	ldr	r0, [pc, #80]	@ (8017c6c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x658>)
 8017c1c:	781b      	ldrb	r3, [r3, #0]
 8017c1e:	2b00      	cmp	r3, #0
 8017c20:	bf18      	it	ne
 8017c22:	2000      	movne	r0, #0
 8017c24:	e584      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017c26:	687b      	ldr	r3, [r7, #4]
 8017c28:	781b      	ldrb	r3, [r3, #0]
 8017c2a:	2b00      	cmp	r3, #0
 8017c2c:	f000 80af 	beq.w	8017d8e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x77a>
 8017c30:	2b01      	cmp	r3, #1
 8017c32:	481a      	ldr	r0, [pc, #104]	@ (8017c9c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x688>)
 8017c34:	bf18      	it	ne
 8017c36:	2000      	movne	r0, #0
 8017c38:	e57a      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017c3a:	687b      	ldr	r3, [r7, #4]
 8017c3c:	781b      	ldrb	r3, [r3, #0]
 8017c3e:	2b00      	cmp	r3, #0
 8017c40:	f000 80a7 	beq.w	8017d92 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x77e>
 8017c44:	2b01      	cmp	r3, #1
 8017c46:	4811      	ldr	r0, [pc, #68]	@ (8017c8c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x678>)
 8017c48:	bf18      	it	ne
 8017c4a:	2000      	movne	r0, #0
 8017c4c:	e570      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017c4e:	687b      	ldr	r3, [r7, #4]
 8017c50:	481e      	ldr	r0, [pc, #120]	@ (8017ccc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6b8>)
 8017c52:	781b      	ldrb	r3, [r3, #0]
 8017c54:	2b00      	cmp	r3, #0
 8017c56:	bf18      	it	ne
 8017c58:	2000      	movne	r0, #0
 8017c5a:	e569      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017c5c:	20000000 	.word	0x20000000
 8017c60:	08016efd 	.word	0x08016efd
 8017c64:	200001fc 	.word	0x200001fc
 8017c68:	08016f11 	.word	0x08016f11
 8017c6c:	20000204 	.word	0x20000204
 8017c70:	08016f15 	.word	0x08016f15
 8017c74:	200001ec 	.word	0x200001ec
 8017c78:	08016f09 	.word	0x08016f09
 8017c7c:	20000224 	.word	0x20000224
 8017c80:	08016f0d 	.word	0x08016f0d
 8017c84:	20000218 	.word	0x20000218
 8017c88:	08016f21 	.word	0x08016f21
 8017c8c:	200001e0 	.word	0x200001e0
 8017c90:	08016f25 	.word	0x08016f25
 8017c94:	200001d4 	.word	0x200001d4
 8017c98:	08016f19 	.word	0x08016f19
 8017c9c:	2000020c 	.word	0x2000020c
 8017ca0:	08016f1d 	.word	0x08016f1d
 8017ca4:	200001f8 	.word	0x200001f8
 8017ca8:	20000220 	.word	0x20000220
 8017cac:	200001f4 	.word	0x200001f4
 8017cb0:	08027b20 	.word	0x08027b20
 8017cb4:	08028fac 	.word	0x08028fac
 8017cb8:	08027928 	.word	0x08027928
 8017cbc:	2000021c 	.word	0x2000021c
 8017cc0:	200001f0 	.word	0x200001f0
 8017cc4:	08027a8c 	.word	0x08027a8c
 8017cc8:	08027ad4 	.word	0x08027ad4
 8017ccc:	20000228 	.word	0x20000228
 8017cd0:	687b      	ldr	r3, [r7, #4]
 8017cd2:	781b      	ldrb	r3, [r3, #0]
 8017cd4:	2b01      	cmp	r3, #1
 8017cd6:	d060      	beq.n	8017d9a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x786>
 8017cd8:	d35d      	bcc.n	8017d96 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x782>
 8017cda:	2b02      	cmp	r3, #2
 8017cdc:	f47f ad27 	bne.w	801772e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8017ce0:	4b2f      	ldr	r3, [pc, #188]	@ (8017da0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78c>)
 8017ce2:	4a30      	ldr	r2, [pc, #192]	@ (8017da4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x790>)
 8017ce4:	f241 21b4 	movw	r1, #4788	@ 0x12b4
 8017ce8:	482f      	ldr	r0, [pc, #188]	@ (8017da8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x794>)
 8017cea:	f00d f823 	bl	8024d34 <__assert_func>
 8017cee:	687b      	ldr	r3, [r7, #4]
 8017cf0:	781b      	ldrb	r3, [r3, #0]
 8017cf2:	2b01      	cmp	r3, #1
 8017cf4:	d049      	beq.n	8017d8a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x776>
 8017cf6:	d346      	bcc.n	8017d86 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x772>
 8017cf8:	2b02      	cmp	r3, #2
 8017cfa:	f47f ad18 	bne.w	801772e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8017cfe:	4b28      	ldr	r3, [pc, #160]	@ (8017da0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78c>)
 8017d00:	4a28      	ldr	r2, [pc, #160]	@ (8017da4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x790>)
 8017d02:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 8017d06:	4828      	ldr	r0, [pc, #160]	@ (8017da8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x794>)
 8017d08:	f00d f814 	bl	8024d34 <__assert_func>
 8017d0c:	687b      	ldr	r3, [r7, #4]
 8017d0e:	4827      	ldr	r0, [pc, #156]	@ (8017dac <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x798>)
 8017d10:	781b      	ldrb	r3, [r3, #0]
 8017d12:	2b00      	cmp	r3, #0
 8017d14:	bf18      	it	ne
 8017d16:	2000      	movne	r0, #0
 8017d18:	e50a      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017d1a:	687b      	ldr	r3, [r7, #4]
 8017d1c:	781b      	ldrb	r3, [r3, #0]
 8017d1e:	2b01      	cmp	r3, #1
 8017d20:	d02d      	beq.n	8017d7e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76a>
 8017d22:	d318      	bcc.n	8017d56 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x742>
 8017d24:	2b02      	cmp	r3, #2
 8017d26:	f47f ad02 	bne.w	801772e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8017d2a:	4b1d      	ldr	r3, [pc, #116]	@ (8017da0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78c>)
 8017d2c:	4a1d      	ldr	r2, [pc, #116]	@ (8017da4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x790>)
 8017d2e:	f241 3111 	movw	r1, #4881	@ 0x1311
 8017d32:	481d      	ldr	r0, [pc, #116]	@ (8017da8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x794>)
 8017d34:	f00c fffe 	bl	8024d34 <__assert_func>
 8017d38:	687b      	ldr	r3, [r7, #4]
 8017d3a:	781b      	ldrb	r3, [r3, #0]
 8017d3c:	2b01      	cmp	r3, #1
 8017d3e:	d020      	beq.n	8017d82 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76e>
 8017d40:	d30b      	bcc.n	8017d5a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x746>
 8017d42:	2b02      	cmp	r3, #2
 8017d44:	f47f acf3 	bne.w	801772e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8017d48:	4b15      	ldr	r3, [pc, #84]	@ (8017da0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78c>)
 8017d4a:	4a16      	ldr	r2, [pc, #88]	@ (8017da4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x790>)
 8017d4c:	f241 311d 	movw	r1, #4893	@ 0x131d
 8017d50:	4815      	ldr	r0, [pc, #84]	@ (8017da8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x794>)
 8017d52:	f00c ffef 	bl	8024d34 <__assert_func>
 8017d56:	4816      	ldr	r0, [pc, #88]	@ (8017db0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x79c>)
 8017d58:	e4ea      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017d5a:	4816      	ldr	r0, [pc, #88]	@ (8017db4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7a0>)
 8017d5c:	e4e8      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017d5e:	4816      	ldr	r0, [pc, #88]	@ (8017db8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7a4>)
 8017d60:	e4e6      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017d62:	4816      	ldr	r0, [pc, #88]	@ (8017dbc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7a8>)
 8017d64:	e4e4      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017d66:	4816      	ldr	r0, [pc, #88]	@ (8017dc0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7ac>)
 8017d68:	e4e2      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017d6a:	4816      	ldr	r0, [pc, #88]	@ (8017dc4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7b0>)
 8017d6c:	e4e0      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017d6e:	4816      	ldr	r0, [pc, #88]	@ (8017dc8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7b4>)
 8017d70:	e4de      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017d72:	4816      	ldr	r0, [pc, #88]	@ (8017dcc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7b8>)
 8017d74:	e4dc      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017d76:	4816      	ldr	r0, [pc, #88]	@ (8017dd0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7bc>)
 8017d78:	e4da      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017d7a:	4816      	ldr	r0, [pc, #88]	@ (8017dd4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c0>)
 8017d7c:	e4d8      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017d7e:	4816      	ldr	r0, [pc, #88]	@ (8017dd8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c4>)
 8017d80:	e4d6      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017d82:	4816      	ldr	r0, [pc, #88]	@ (8017ddc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c8>)
 8017d84:	e4d4      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017d86:	4809      	ldr	r0, [pc, #36]	@ (8017dac <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x798>)
 8017d88:	e4d2      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017d8a:	4815      	ldr	r0, [pc, #84]	@ (8017de0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7cc>)
 8017d8c:	e4d0      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017d8e:	4815      	ldr	r0, [pc, #84]	@ (8017de4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7d0>)
 8017d90:	e4ce      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017d92:	4815      	ldr	r0, [pc, #84]	@ (8017de8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7d4>)
 8017d94:	e4cc      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017d96:	4815      	ldr	r0, [pc, #84]	@ (8017dec <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7d8>)
 8017d98:	e4ca      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017d9a:	4815      	ldr	r0, [pc, #84]	@ (8017df0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7dc>)
 8017d9c:	e4c8      	b.n	8017730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8017d9e:	bf00      	nop
 8017da0:	08027ad4 	.word	0x08027ad4
 8017da4:	08028fac 	.word	0x08028fac
 8017da8:	08027928 	.word	0x08027928
 8017dac:	20000208 	.word	0x20000208
 8017db0:	20000220 	.word	0x20000220
 8017db4:	200001f4 	.word	0x200001f4
 8017db8:	200001dc 	.word	0x200001dc
 8017dbc:	20000200 	.word	0x20000200
 8017dc0:	20000218 	.word	0x20000218
 8017dc4:	200001ec 	.word	0x200001ec
 8017dc8:	200001f0 	.word	0x200001f0
 8017dcc:	200001d8 	.word	0x200001d8
 8017dd0:	2000021c 	.word	0x2000021c
 8017dd4:	200001fc 	.word	0x200001fc
 8017dd8:	20000214 	.word	0x20000214
 8017ddc:	200001e8 	.word	0x200001e8
 8017de0:	200001e4 	.word	0x200001e4
 8017de4:	20000224 	.word	0x20000224
 8017de8:	20000204 	.word	0x20000204
 8017dec:	20000228 	.word	0x20000228
 8017df0:	20000210 	.word	0x20000210

08017df4 <_ZN8touchgfx8LCDGPU2DD0Ev>:
 8017df4:	b510      	push	{r4, lr}
 8017df6:	4604      	mov	r4, r0
 8017df8:	f640 014c 	movw	r1, #2124	@ 0x84c
 8017dfc:	f00c ff6d 	bl	8024cda <_ZdlPvj>
 8017e00:	4620      	mov	r0, r4
 8017e02:	bd10      	pop	{r4, pc}

08017e04 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017e04:	b510      	push	{r4, lr}
 8017e06:	4604      	mov	r4, r0
 8017e08:	2104      	movs	r1, #4
 8017e0a:	f00c ff66 	bl	8024cda <_ZdlPvj>
 8017e0e:	4620      	mov	r0, r4
 8017e10:	bd10      	pop	{r4, pc}
 8017e12:	bf00      	nop

08017e14 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017e14:	b510      	push	{r4, lr}
 8017e16:	4604      	mov	r4, r0
 8017e18:	2104      	movs	r1, #4
 8017e1a:	f00c ff5e 	bl	8024cda <_ZdlPvj>
 8017e1e:	4620      	mov	r0, r4
 8017e20:	bd10      	pop	{r4, pc}
 8017e22:	bf00      	nop

08017e24 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8017e24:	b510      	push	{r4, lr}
 8017e26:	4604      	mov	r4, r0
 8017e28:	2104      	movs	r1, #4
 8017e2a:	f00c ff56 	bl	8024cda <_ZdlPvj>
 8017e2e:	4620      	mov	r0, r4
 8017e30:	bd10      	pop	{r4, pc}
 8017e32:	bf00      	nop

08017e34 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017e34:	b510      	push	{r4, lr}
 8017e36:	4604      	mov	r4, r0
 8017e38:	2104      	movs	r1, #4
 8017e3a:	f00c ff4e 	bl	8024cda <_ZdlPvj>
 8017e3e:	4620      	mov	r0, r4
 8017e40:	bd10      	pop	{r4, pc}
 8017e42:	bf00      	nop

08017e44 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017e44:	b510      	push	{r4, lr}
 8017e46:	4604      	mov	r4, r0
 8017e48:	2104      	movs	r1, #4
 8017e4a:	f00c ff46 	bl	8024cda <_ZdlPvj>
 8017e4e:	4620      	mov	r0, r4
 8017e50:	bd10      	pop	{r4, pc}
 8017e52:	bf00      	nop

08017e54 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8017e54:	b510      	push	{r4, lr}
 8017e56:	4604      	mov	r4, r0
 8017e58:	2104      	movs	r1, #4
 8017e5a:	f00c ff3e 	bl	8024cda <_ZdlPvj>
 8017e5e:	4620      	mov	r0, r4
 8017e60:	bd10      	pop	{r4, pc}
 8017e62:	bf00      	nop

08017e64 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8017e64:	b510      	push	{r4, lr}
 8017e66:	4604      	mov	r4, r0
 8017e68:	2104      	movs	r1, #4
 8017e6a:	f00c ff36 	bl	8024cda <_ZdlPvj>
 8017e6e:	4620      	mov	r0, r4
 8017e70:	bd10      	pop	{r4, pc}
 8017e72:	bf00      	nop

08017e74 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8017e74:	b510      	push	{r4, lr}
 8017e76:	4604      	mov	r4, r0
 8017e78:	2104      	movs	r1, #4
 8017e7a:	f00c ff2e 	bl	8024cda <_ZdlPvj>
 8017e7e:	4620      	mov	r0, r4
 8017e80:	bd10      	pop	{r4, pc}
 8017e82:	bf00      	nop

08017e84 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017e84:	b510      	push	{r4, lr}
 8017e86:	4604      	mov	r4, r0
 8017e88:	2104      	movs	r1, #4
 8017e8a:	f00c ff26 	bl	8024cda <_ZdlPvj>
 8017e8e:	4620      	mov	r0, r4
 8017e90:	bd10      	pop	{r4, pc}
 8017e92:	bf00      	nop

08017e94 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017e94:	b510      	push	{r4, lr}
 8017e96:	4604      	mov	r4, r0
 8017e98:	2104      	movs	r1, #4
 8017e9a:	f00c ff1e 	bl	8024cda <_ZdlPvj>
 8017e9e:	4620      	mov	r0, r4
 8017ea0:	bd10      	pop	{r4, pc}
 8017ea2:	bf00      	nop

08017ea4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8017ea4:	b510      	push	{r4, lr}
 8017ea6:	4604      	mov	r4, r0
 8017ea8:	2104      	movs	r1, #4
 8017eaa:	f00c ff16 	bl	8024cda <_ZdlPvj>
 8017eae:	4620      	mov	r0, r4
 8017eb0:	bd10      	pop	{r4, pc}
 8017eb2:	bf00      	nop

08017eb4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017eb4:	b510      	push	{r4, lr}
 8017eb6:	4604      	mov	r4, r0
 8017eb8:	2104      	movs	r1, #4
 8017eba:	f00c ff0e 	bl	8024cda <_ZdlPvj>
 8017ebe:	4620      	mov	r0, r4
 8017ec0:	bd10      	pop	{r4, pc}
 8017ec2:	bf00      	nop

08017ec4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017ec4:	b510      	push	{r4, lr}
 8017ec6:	4604      	mov	r4, r0
 8017ec8:	2104      	movs	r1, #4
 8017eca:	f00c ff06 	bl	8024cda <_ZdlPvj>
 8017ece:	4620      	mov	r0, r4
 8017ed0:	bd10      	pop	{r4, pc}
 8017ed2:	bf00      	nop

08017ed4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8017ed4:	b510      	push	{r4, lr}
 8017ed6:	4604      	mov	r4, r0
 8017ed8:	2104      	movs	r1, #4
 8017eda:	f00c fefe 	bl	8024cda <_ZdlPvj>
 8017ede:	4620      	mov	r0, r4
 8017ee0:	bd10      	pop	{r4, pc}
 8017ee2:	bf00      	nop

08017ee4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8017ee4:	b510      	push	{r4, lr}
 8017ee6:	4604      	mov	r4, r0
 8017ee8:	2104      	movs	r1, #4
 8017eea:	f00c fef6 	bl	8024cda <_ZdlPvj>
 8017eee:	4620      	mov	r0, r4
 8017ef0:	bd10      	pop	{r4, pc}
 8017ef2:	bf00      	nop

08017ef4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8017ef4:	b510      	push	{r4, lr}
 8017ef6:	4604      	mov	r4, r0
 8017ef8:	2104      	movs	r1, #4
 8017efa:	f00c feee 	bl	8024cda <_ZdlPvj>
 8017efe:	4620      	mov	r0, r4
 8017f00:	bd10      	pop	{r4, pc}
 8017f02:	bf00      	nop

08017f04 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017f04:	b510      	push	{r4, lr}
 8017f06:	4604      	mov	r4, r0
 8017f08:	2104      	movs	r1, #4
 8017f0a:	f00c fee6 	bl	8024cda <_ZdlPvj>
 8017f0e:	4620      	mov	r0, r4
 8017f10:	bd10      	pop	{r4, pc}
 8017f12:	bf00      	nop

08017f14 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017f14:	b510      	push	{r4, lr}
 8017f16:	4604      	mov	r4, r0
 8017f18:	2104      	movs	r1, #4
 8017f1a:	f00c fede 	bl	8024cda <_ZdlPvj>
 8017f1e:	4620      	mov	r0, r4
 8017f20:	bd10      	pop	{r4, pc}
 8017f22:	bf00      	nop

08017f24 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017f24:	b510      	push	{r4, lr}
 8017f26:	4604      	mov	r4, r0
 8017f28:	2104      	movs	r1, #4
 8017f2a:	f00c fed6 	bl	8024cda <_ZdlPvj>
 8017f2e:	4620      	mov	r0, r4
 8017f30:	bd10      	pop	{r4, pc}
 8017f32:	bf00      	nop

08017f34 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8017f34:	b510      	push	{r4, lr}
 8017f36:	4604      	mov	r4, r0
 8017f38:	2104      	movs	r1, #4
 8017f3a:	f00c fece 	bl	8024cda <_ZdlPvj>
 8017f3e:	4620      	mov	r0, r4
 8017f40:	bd10      	pop	{r4, pc}
 8017f42:	bf00      	nop

08017f44 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8017f44:	b510      	push	{r4, lr}
 8017f46:	4604      	mov	r4, r0
 8017f48:	2104      	movs	r1, #4
 8017f4a:	f00c fec6 	bl	8024cda <_ZdlPvj>
 8017f4e:	4620      	mov	r0, r4
 8017f50:	bd10      	pop	{r4, pc}
 8017f52:	bf00      	nop

08017f54 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8017f54:	b510      	push	{r4, lr}
 8017f56:	4604      	mov	r4, r0
 8017f58:	2104      	movs	r1, #4
 8017f5a:	f00c febe 	bl	8024cda <_ZdlPvj>
 8017f5e:	4620      	mov	r0, r4
 8017f60:	bd10      	pop	{r4, pc}
 8017f62:	bf00      	nop

08017f64 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6>:
 8017f64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017f68:	461c      	mov	r4, r3
 8017f6a:	4617      	mov	r7, r2
 8017f6c:	b086      	sub	sp, #24
 8017f6e:	4606      	mov	r6, r0
 8017f70:	4688      	mov	r8, r1
 8017f72:	6818      	ldr	r0, [r3, #0]
 8017f74:	6859      	ldr	r1, [r3, #4]
 8017f76:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017f78:	ad02      	add	r5, sp, #8
 8017f7a:	c503      	stmia	r5!, {r0, r1}
 8017f7c:	6818      	ldr	r0, [r3, #0]
 8017f7e:	6859      	ldr	r1, [r3, #4]
 8017f80:	ad04      	add	r5, sp, #16
 8017f82:	c503      	stmia	r5!, {r0, r1}
 8017f84:	a802      	add	r0, sp, #8
 8017f86:	f89d a03c 	ldrb.w	sl, [sp, #60]	@ 0x3c
 8017f8a:	f7f7 fa29 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017f8e:	4621      	mov	r1, r4
 8017f90:	a804      	add	r0, sp, #16
 8017f92:	f7f7 fa4d 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017f96:	2f01      	cmp	r7, #1
 8017f98:	d05c      	beq.n	8018054 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0xf0>
 8017f9a:	d357      	bcc.n	801804c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0xe8>
 8017f9c:	2f02      	cmp	r7, #2
 8017f9e:	d163      	bne.n	8018068 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x104>
 8017fa0:	f04f 0910 	mov.w	r9, #16
 8017fa4:	2504      	movs	r5, #4
 8017fa6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017faa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017fae:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8017fb2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017fb6:	fb14 2403 	smlabb	r4, r4, r3, r2
 8017fba:	4f2e      	ldr	r7, [pc, #184]	@ (8018074 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x110>)
 8017fbc:	440a      	add	r2, r1
 8017fbe:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8017fc2:	6838      	ldr	r0, [r7, #0]
 8017fc4:	440b      	add	r3, r1
 8017fc6:	fb05 8404 	mla	r4, r5, r4, r8
 8017fca:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017fce:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017fd2:	2800      	cmp	r0, #0
 8017fd4:	d042      	beq.n	801805c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0xf8>
 8017fd6:	f7fd f945 	bl	8015264 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8017fda:	6833      	ldr	r3, [r6, #0]
 8017fdc:	4630      	mov	r0, r6
 8017fde:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8017fe0:	4798      	blx	r3
 8017fe2:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8017fe6:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8017fea:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8017fee:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 8017ff2:	f7fa fcfb 	bl	80129ec <nema_set_clip>
 8017ff6:	2200      	movs	r2, #0
 8017ff8:	2600      	movs	r6, #0
 8017ffa:	4611      	mov	r1, r2
 8017ffc:	4653      	mov	r3, sl
 8017ffe:	4610      	mov	r0, r2
 8018000:	f7fa fd28 	bl	8012a54 <nema_rgba>
 8018004:	f7fd f828 	bl	8015058 <nema_set_const_color>
 8018008:	f04f 33ff 	mov.w	r3, #4294967295
 801800c:	2201      	movs	r2, #1
 801800e:	2100      	movs	r1, #0
 8018010:	4819      	ldr	r0, [pc, #100]	@ (8018078 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x114>)
 8018012:	f7fc fc5b 	bl	80148cc <nema_set_blend>
 8018016:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801801a:	f9bd 2016 	ldrsh.w	r2, [sp, #22]
 801801e:	fb05 f503 	mul.w	r5, r5, r3
 8018022:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 8018026:	464b      	mov	r3, r9
 8018028:	4620      	mov	r0, r4
 801802a:	e9cd 5600 	strd	r5, r6, [sp]
 801802e:	f7fa fd19 	bl	8012a64 <nema_bind_src_tex>
 8018032:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 8018036:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801803a:	f7fa fe9f 	bl	8012d7c <nema_blit>
 801803e:	6838      	ldr	r0, [r7, #0]
 8018040:	b160      	cbz	r0, 801805c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0xf8>
 8018042:	f7fd f92f 	bl	80152a4 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8018046:	b006      	add	sp, #24
 8018048:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801804c:	f04f 0904 	mov.w	r9, #4
 8018050:	2502      	movs	r5, #2
 8018052:	e7a8      	b.n	8017fa6 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x42>
 8018054:	f04f 0939 	mov.w	r9, #57	@ 0x39
 8018058:	2503      	movs	r5, #3
 801805a:	e7a4      	b.n	8017fa6 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x42>
 801805c:	4b07      	ldr	r3, [pc, #28]	@ (801807c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x118>)
 801805e:	4a08      	ldr	r2, [pc, #32]	@ (8018080 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x11c>)
 8018060:	217c      	movs	r1, #124	@ 0x7c
 8018062:	4808      	ldr	r0, [pc, #32]	@ (8018084 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x120>)
 8018064:	f00c fe66 	bl	8024d34 <__assert_func>
 8018068:	4b07      	ldr	r3, [pc, #28]	@ (8018088 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x124>)
 801806a:	4a08      	ldr	r2, [pc, #32]	@ (801808c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x128>)
 801806c:	21c9      	movs	r1, #201	@ 0xc9
 801806e:	4808      	ldr	r0, [pc, #32]	@ (8018090 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x12c>)
 8018070:	f00c fe60 	bl	8024d34 <__assert_func>
 8018074:	2004c150 	.word	0x2004c150
 8018078:	08000504 	.word	0x08000504
 801807c:	08027884 	.word	0x08027884
 8018080:	08028130 	.word	0x08028130
 8018084:	080278ac 	.word	0x080278ac
 8018088:	08027d70 	.word	0x08027d70
 801808c:	080294d4 	.word	0x080294d4
 8018090:	08027928 	.word	0x08027928

08018094 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.19>:
 8018094:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018096:	680c      	ldr	r4, [r1, #0]
 8018098:	7805      	ldrb	r5, [r0, #0]
 801809a:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 801809e:	7847      	ldrb	r7, [r0, #1]
 80180a0:	7883      	ldrb	r3, [r0, #2]
 80180a2:	d02e      	beq.n	8018102 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.19+0x6e>
 80180a4:	fb02 f60c 	mul.w	r6, r2, ip
 80180a8:	fb12 f303 	smulbb	r3, r2, r3
 80180ac:	1c70      	adds	r0, r6, #1
 80180ae:	fb15 f502 	smulbb	r5, r5, r2
 80180b2:	eb00 2026 	add.w	r0, r0, r6, asr #8
 80180b6:	1200      	asrs	r0, r0, #8
 80180b8:	fb12 f707 	smulbb	r7, r2, r7
 80180bc:	ebac 0600 	sub.w	r6, ip, r0
 80180c0:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 80180c4:	fb06 330e 	mla	r3, r6, lr, r3
 80180c8:	fa5f fe84 	uxtb.w	lr, r4
 80180cc:	fb06 550e 	mla	r5, r6, lr, r5
 80180d0:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80180d4:	fb06 7404 	mla	r4, r6, r4, r7
 80180d8:	4462      	add	r2, ip
 80180da:	1a12      	subs	r2, r2, r0
 80180dc:	b2d0      	uxtb	r0, r2
 80180de:	fbb3 f2f0 	udiv	r2, r3, r0
 80180e2:	fbb5 f5f0 	udiv	r5, r5, r0
 80180e6:	fbb4 f3f0 	udiv	r3, r4, r0
 80180ea:	0412      	lsls	r2, r2, #16
 80180ec:	b2ec      	uxtb	r4, r5
 80180ee:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 80180f2:	ea44 6000 	orr.w	r0, r4, r0, lsl #24
 80180f6:	021b      	lsls	r3, r3, #8
 80180f8:	4302      	orrs	r2, r0
 80180fa:	b29b      	uxth	r3, r3
 80180fc:	431a      	orrs	r2, r3
 80180fe:	600a      	str	r2, [r1, #0]
 8018100:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018102:	041b      	lsls	r3, r3, #16
 8018104:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 8018108:	432a      	orrs	r2, r5
 801810a:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
 801810e:	600a      	str	r2, [r1, #0]
 8018110:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018112:	bf00      	nop

08018114 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb>:
 8018114:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018118:	4c1e      	ldr	r4, [pc, #120]	@ (8018194 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x80>)
 801811a:	6806      	ldr	r6, [r0, #0]
 801811c:	6824      	ldr	r4, [r4, #0]
 801811e:	4605      	mov	r5, r0
 8018120:	f894 0058 	ldrb.w	r0, [r4, #88]	@ 0x58
 8018124:	b087      	sub	sp, #28
 8018126:	6937      	ldr	r7, [r6, #16]
 8018128:	4690      	mov	r8, r2
 801812a:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 801812e:	f89d 903c 	ldrb.w	r9, [sp, #60]	@ 0x3c
 8018132:	b170      	cbz	r0, 8018152 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x3e>
 8018134:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8018136:	b160      	cbz	r0, 8018152 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x3e>
 8018138:	6804      	ldr	r4, [r0, #0]
 801813a:	4a17      	ldr	r2, [pc, #92]	@ (8018198 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x84>)
 801813c:	6ae4      	ldr	r4, [r4, #44]	@ 0x2c
 801813e:	4294      	cmp	r4, r2
 8018140:	d10d      	bne.n	801815e <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x4a>
 8018142:	4c16      	ldr	r4, [pc, #88]	@ (801819c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x88>)
 8018144:	7a02      	ldrb	r2, [r0, #8]
 8018146:	42a7      	cmp	r7, r4
 8018148:	d112      	bne.n	8018170 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x5c>
 801814a:	b9d6      	cbnz	r6, 8018182 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x6e>
 801814c:	b007      	add	sp, #28
 801814e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018152:	68a0      	ldr	r0, [r4, #8]
 8018154:	4a10      	ldr	r2, [pc, #64]	@ (8018198 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x84>)
 8018156:	6804      	ldr	r4, [r0, #0]
 8018158:	6ae4      	ldr	r4, [r4, #44]	@ 0x2c
 801815a:	4294      	cmp	r4, r2
 801815c:	d0f1      	beq.n	8018142 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x2e>
 801815e:	e9cd 1304 	strd	r1, r3, [sp, #16]
 8018162:	47a0      	blx	r4
 8018164:	e9dd 1304 	ldrd	r1, r3, [sp, #16]
 8018168:	4c0c      	ldr	r4, [pc, #48]	@ (801819c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x88>)
 801816a:	4602      	mov	r2, r0
 801816c:	42a7      	cmp	r7, r4
 801816e:	d0ec      	beq.n	801814a <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x36>
 8018170:	9300      	str	r3, [sp, #0]
 8018172:	e9cd 6901 	strd	r6, r9, [sp, #4]
 8018176:	4643      	mov	r3, r8
 8018178:	4628      	mov	r0, r5
 801817a:	47b8      	blx	r7
 801817c:	b007      	add	sp, #28
 801817e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018182:	e9cd 360e 	strd	r3, r6, [sp, #56]	@ 0x38
 8018186:	4628      	mov	r0, r5
 8018188:	4643      	mov	r3, r8
 801818a:	b007      	add	sp, #28
 801818c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018190:	f7ff bee8 	b.w	8017f64 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6>
 8018194:	2004bf98 	.word	0x2004bf98
 8018198:	08015349 	.word	0x08015349
 801819c:	080181a1 	.word	0x080181a1

080181a0 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80181a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80181a4:	b087      	sub	sp, #28
 80181a6:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 80181aa:	b915      	cbnz	r5, 80181b2 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x12>
 80181ac:	b007      	add	sp, #28
 80181ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80181b2:	461c      	mov	r4, r3
 80181b4:	4617      	mov	r7, r2
 80181b6:	4688      	mov	r8, r1
 80181b8:	4606      	mov	r6, r0
 80181ba:	6859      	ldr	r1, [r3, #4]
 80181bc:	6818      	ldr	r0, [r3, #0]
 80181be:	ab02      	add	r3, sp, #8
 80181c0:	c303      	stmia	r3!, {r0, r1}
 80181c2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80181c4:	6818      	ldr	r0, [r3, #0]
 80181c6:	6859      	ldr	r1, [r3, #4]
 80181c8:	ab04      	add	r3, sp, #16
 80181ca:	c303      	stmia	r3!, {r0, r1}
 80181cc:	a802      	add	r0, sp, #8
 80181ce:	f7f7 f907 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80181d2:	4621      	mov	r1, r4
 80181d4:	a804      	add	r0, sp, #16
 80181d6:	f7f7 f92b 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80181da:	2f01      	cmp	r7, #1
 80181dc:	d05c      	beq.n	8018298 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0xf8>
 80181de:	d357      	bcc.n	8018290 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0xf0>
 80181e0:	2f02      	cmp	r7, #2
 80181e2:	d163      	bne.n	80182ac <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x10c>
 80181e4:	f04f 0910 	mov.w	r9, #16
 80181e8:	2404      	movs	r4, #4
 80181ea:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80181ee:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80181f2:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80181f6:	f8bd 0008 	ldrh.w	r0, [sp, #8]
 80181fa:	fb11 2103 	smlabb	r1, r1, r3, r2
 80181fe:	4f2e      	ldr	r7, [pc, #184]	@ (80182b8 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x118>)
 8018200:	fb04 8801 	mla	r8, r4, r1, r8
 8018204:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8018208:	4402      	add	r2, r0
 801820a:	6838      	ldr	r0, [r7, #0]
 801820c:	440b      	add	r3, r1
 801820e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018212:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018216:	2800      	cmp	r0, #0
 8018218:	d042      	beq.n	80182a0 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x100>
 801821a:	f7fd f823 	bl	8015264 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 801821e:	6833      	ldr	r3, [r6, #0]
 8018220:	4630      	mov	r0, r6
 8018222:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8018224:	4798      	blx	r3
 8018226:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801822a:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 801822e:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8018232:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 8018236:	f7fa fbd9 	bl	80129ec <nema_set_clip>
 801823a:	2200      	movs	r2, #0
 801823c:	462b      	mov	r3, r5
 801823e:	2500      	movs	r5, #0
 8018240:	4611      	mov	r1, r2
 8018242:	4610      	mov	r0, r2
 8018244:	f7fa fc06 	bl	8012a54 <nema_rgba>
 8018248:	f7fc ff06 	bl	8015058 <nema_set_const_color>
 801824c:	f04f 33ff 	mov.w	r3, #4294967295
 8018250:	2201      	movs	r2, #1
 8018252:	2100      	movs	r1, #0
 8018254:	4819      	ldr	r0, [pc, #100]	@ (80182bc <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x11c>)
 8018256:	f7fc fb39 	bl	80148cc <nema_set_blend>
 801825a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801825e:	f9bd 2016 	ldrsh.w	r2, [sp, #22]
 8018262:	fb04 f403 	mul.w	r4, r4, r3
 8018266:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 801826a:	464b      	mov	r3, r9
 801826c:	4640      	mov	r0, r8
 801826e:	e9cd 4500 	strd	r4, r5, [sp]
 8018272:	f7fa fbf7 	bl	8012a64 <nema_bind_src_tex>
 8018276:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 801827a:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801827e:	f7fa fd7d 	bl	8012d7c <nema_blit>
 8018282:	6838      	ldr	r0, [r7, #0]
 8018284:	b160      	cbz	r0, 80182a0 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x100>
 8018286:	f7fd f80d 	bl	80152a4 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 801828a:	b007      	add	sp, #28
 801828c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018290:	f04f 0904 	mov.w	r9, #4
 8018294:	2402      	movs	r4, #2
 8018296:	e7a8      	b.n	80181ea <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x4a>
 8018298:	f04f 0939 	mov.w	r9, #57	@ 0x39
 801829c:	2403      	movs	r4, #3
 801829e:	e7a4      	b.n	80181ea <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x4a>
 80182a0:	4b07      	ldr	r3, [pc, #28]	@ (80182c0 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x120>)
 80182a2:	4a08      	ldr	r2, [pc, #32]	@ (80182c4 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x124>)
 80182a4:	217c      	movs	r1, #124	@ 0x7c
 80182a6:	4808      	ldr	r0, [pc, #32]	@ (80182c8 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x128>)
 80182a8:	f00c fd44 	bl	8024d34 <__assert_func>
 80182ac:	4b07      	ldr	r3, [pc, #28]	@ (80182cc <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x12c>)
 80182ae:	4a08      	ldr	r2, [pc, #32]	@ (80182d0 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x130>)
 80182b0:	21c9      	movs	r1, #201	@ 0xc9
 80182b2:	4808      	ldr	r0, [pc, #32]	@ (80182d4 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x134>)
 80182b4:	f00c fd3e 	bl	8024d34 <__assert_func>
 80182b8:	2004c150 	.word	0x2004c150
 80182bc:	08000504 	.word	0x08000504
 80182c0:	08027884 	.word	0x08027884
 80182c4:	08028130 	.word	0x08028130
 80182c8:	080278ac 	.word	0x080278ac
 80182cc:	08027d70 	.word	0x08027d70
 80182d0:	080294d4 	.word	0x080294d4
 80182d4:	08027928 	.word	0x08027928

080182d8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 80182d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80182dc:	4682      	mov	sl, r0
 80182de:	4851      	ldr	r0, [pc, #324]	@ (8018424 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x14c>)
 80182e0:	b08f      	sub	sp, #60	@ 0x3c
 80182e2:	6800      	ldr	r0, [r0, #0]
 80182e4:	9104      	str	r1, [sp, #16]
 80182e6:	f890 1048 	ldrb.w	r1, [r0, #72]	@ 0x48
 80182ea:	f9bd 0064 	ldrsh.w	r0, [sp, #100]	@ 0x64
 80182ee:	2902      	cmp	r1, #2
 80182f0:	9003      	str	r0, [sp, #12]
 80182f2:	f9bd 0068 	ldrsh.w	r0, [sp, #104]	@ 0x68
 80182f6:	9006      	str	r0, [sp, #24]
 80182f8:	f000 81cd 	beq.w	8018696 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3be>
 80182fc:	9918      	ldr	r1, [sp, #96]	@ 0x60
 80182fe:	2900      	cmp	r1, #0
 8018300:	f000 81c3 	beq.w	801868a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3b2>
 8018304:	f9b3 5000 	ldrsh.w	r5, [r3]
 8018308:	8899      	ldrh	r1, [r3, #4]
 801830a:	b2ae      	uxth	r6, r5
 801830c:	4431      	add	r1, r6
 801830e:	b289      	uxth	r1, r1
 8018310:	fa0f fc81 	sxth.w	ip, r1
 8018314:	4565      	cmp	r5, ip
 8018316:	f9b3 4002 	ldrsh.w	r4, [r3, #2]
 801831a:	da28      	bge.n	801836e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x96>
 801831c:	9803      	ldr	r0, [sp, #12]
 801831e:	1830      	adds	r0, r6, r0
 8018320:	b280      	uxth	r0, r0
 8018322:	9005      	str	r0, [sp, #20]
 8018324:	f9bd e014 	ldrsh.w	lr, [sp, #20]
 8018328:	4575      	cmp	r5, lr
 801832a:	da20      	bge.n	801836e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x96>
 801832c:	f8b3 8006 	ldrh.w	r8, [r3, #6]
 8018330:	b2a7      	uxth	r7, r4
 8018332:	4638      	mov	r0, r7
 8018334:	4447      	add	r7, r8
 8018336:	b2bf      	uxth	r7, r7
 8018338:	fa0f f987 	sxth.w	r9, r7
 801833c:	454c      	cmp	r4, r9
 801833e:	da16      	bge.n	801836e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x96>
 8018340:	4680      	mov	r8, r0
 8018342:	9007      	str	r0, [sp, #28]
 8018344:	9806      	ldr	r0, [sp, #24]
 8018346:	4480      	add	r8, r0
 8018348:	fa1f f888 	uxth.w	r8, r8
 801834c:	fa0f fb88 	sxth.w	fp, r8
 8018350:	455c      	cmp	r4, fp
 8018352:	da0c      	bge.n	801836e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x96>
 8018354:	9805      	ldr	r0, [sp, #20]
 8018356:	45d9      	cmp	r9, fp
 8018358:	bfc8      	it	gt
 801835a:	4647      	movgt	r7, r8
 801835c:	45f4      	cmp	ip, lr
 801835e:	bfc8      	it	gt
 8018360:	4601      	movgt	r1, r0
 8018362:	9807      	ldr	r0, [sp, #28]
 8018364:	1b89      	subs	r1, r1, r6
 8018366:	1a3f      	subs	r7, r7, r0
 8018368:	b209      	sxth	r1, r1
 801836a:	b23f      	sxth	r7, r7
 801836c:	e005      	b.n	801837a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xa2>
 801836e:	2700      	movs	r7, #0
 8018370:	463c      	mov	r4, r7
 8018372:	4639      	mov	r1, r7
 8018374:	463e      	mov	r6, r7
 8018376:	463d      	mov	r5, r7
 8018378:	9707      	str	r7, [sp, #28]
 801837a:	f9b2 b000 	ldrsh.w	fp, [r2]
 801837e:	8890      	ldrh	r0, [r2, #4]
 8018380:	4458      	add	r0, fp
 8018382:	b280      	uxth	r0, r0
 8018384:	fa0f fc80 	sxth.w	ip, r0
 8018388:	45ac      	cmp	ip, r5
 801838a:	dd51      	ble.n	8018430 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x158>
 801838c:	4431      	add	r1, r6
 801838e:	b289      	uxth	r1, r1
 8018390:	fa0f fe81 	sxth.w	lr, r1
 8018394:	45f3      	cmp	fp, lr
 8018396:	da4b      	bge.n	8018430 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x158>
 8018398:	f9b2 8002 	ldrsh.w	r8, [r2, #2]
 801839c:	88d6      	ldrh	r6, [r2, #6]
 801839e:	4446      	add	r6, r8
 80183a0:	b2b6      	uxth	r6, r6
 80183a2:	fa0f f986 	sxth.w	r9, r6
 80183a6:	454c      	cmp	r4, r9
 80183a8:	da42      	bge.n	8018430 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x158>
 80183aa:	9a07      	ldr	r2, [sp, #28]
 80183ac:	443a      	add	r2, r7
 80183ae:	b297      	uxth	r7, r2
 80183b0:	b23a      	sxth	r2, r7
 80183b2:	4590      	cmp	r8, r2
 80183b4:	9205      	str	r2, [sp, #20]
 80183b6:	da3b      	bge.n	8018430 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x158>
 80183b8:	45ab      	cmp	fp, r5
 80183ba:	bfb8      	it	lt
 80183bc:	46ab      	movlt	fp, r5
 80183be:	4544      	cmp	r4, r8
 80183c0:	bfb8      	it	lt
 80183c2:	4644      	movlt	r4, r8
 80183c4:	45f4      	cmp	ip, lr
 80183c6:	bfc8      	it	gt
 80183c8:	4608      	movgt	r0, r1
 80183ca:	9905      	ldr	r1, [sp, #20]
 80183cc:	465a      	mov	r2, fp
 80183ce:	4589      	cmp	r9, r1
 80183d0:	bfc8      	it	gt
 80183d2:	463e      	movgt	r6, r7
 80183d4:	f8df c054 	ldr.w	ip, [pc, #84]	@ 801842c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x154>
 80183d8:	4f13      	ldr	r7, [pc, #76]	@ (8018428 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x150>)
 80183da:	fa1f f58b 	uxth.w	r5, fp
 80183de:	1b36      	subs	r6, r6, r4
 80183e0:	1b41      	subs	r1, r0, r5
 80183e2:	f8bc c000 	ldrh.w	ip, [ip]
 80183e6:	883f      	ldrh	r7, [r7, #0]
 80183e8:	fa0f fb86 	sxth.w	fp, r6
 80183ec:	fa0f f981 	sxth.w	r9, r1
 80183f0:	2a00      	cmp	r2, #0
 80183f2:	f8ad b026 	strh.w	fp, [sp, #38]	@ 0x26
 80183f6:	f8ad 2020 	strh.w	r2, [sp, #32]
 80183fa:	f8ad 4022 	strh.w	r4, [sp, #34]	@ 0x22
 80183fe:	f8ad 9024 	strh.w	r9, [sp, #36]	@ 0x24
 8018402:	fa0f f68c 	sxth.w	r6, ip
 8018406:	b239      	sxth	r1, r7
 8018408:	f280 812b 	bge.w	8018662 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x38a>
 801840c:	f04f 0e00 	mov.w	lr, #0
 8018410:	fa0f f980 	sxth.w	r9, r0
 8018414:	4675      	mov	r5, lr
 8018416:	4672      	mov	r2, lr
 8018418:	4648      	mov	r0, r9
 801841a:	f8ad 9024 	strh.w	r9, [sp, #36]	@ 0x24
 801841e:	f8ad e020 	strh.w	lr, [sp, #32]
 8018422:	e015      	b.n	8018450 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x178>
 8018424:	2004bf98 	.word	0x2004bf98
 8018428:	2004bf8e 	.word	0x2004bf8e
 801842c:	2004bf8c 	.word	0x2004bf8c
 8018430:	2200      	movs	r2, #0
 8018432:	48a3      	ldr	r0, [pc, #652]	@ (80186c0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3e8>)
 8018434:	4615      	mov	r5, r2
 8018436:	f8b0 c000 	ldrh.w	ip, [r0]
 801843a:	4693      	mov	fp, r2
 801843c:	4614      	mov	r4, r2
 801843e:	4610      	mov	r0, r2
 8018440:	4691      	mov	r9, r2
 8018442:	49a0      	ldr	r1, [pc, #640]	@ (80186c4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3ec>)
 8018444:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8018448:	880f      	ldrh	r7, [r1, #0]
 801844a:	fa0f f68c 	sxth.w	r6, ip
 801844e:	b239      	sxth	r1, r7
 8018450:	1ab2      	subs	r2, r6, r2
 8018452:	4282      	cmp	r2, r0
 8018454:	da05      	bge.n	8018462 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x18a>
 8018456:	ebac 0c05 	sub.w	ip, ip, r5
 801845a:	fa0f f98c 	sxth.w	r9, ip
 801845e:	f8ad 9024 	strh.w	r9, [sp, #36]	@ 0x24
 8018462:	2c00      	cmp	r4, #0
 8018464:	f2c0 80e8 	blt.w	8018638 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x360>
 8018468:	4622      	mov	r2, r4
 801846a:	1a89      	subs	r1, r1, r2
 801846c:	458b      	cmp	fp, r1
 801846e:	dd04      	ble.n	801847a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a2>
 8018470:	1b3f      	subs	r7, r7, r4
 8018472:	fa0f fb87 	sxth.w	fp, r7
 8018476:	f8ad b026 	strh.w	fp, [sp, #38]	@ 0x26
 801847a:	f1b9 0f00 	cmp.w	r9, #0
 801847e:	f340 80d2 	ble.w	8018626 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x34e>
 8018482:	f1bb 0f00 	cmp.w	fp, #0
 8018486:	f340 80ce 	ble.w	8018626 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x34e>
 801848a:	2200      	movs	r2, #0
 801848c:	8819      	ldrh	r1, [r3, #0]
 801848e:	f8b3 8002 	ldrh.w	r8, [r3, #2]
 8018492:	9b03      	ldr	r3, [sp, #12]
 8018494:	1a6d      	subs	r5, r5, r1
 8018496:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801849a:	eba4 0408 	sub.w	r4, r4, r8
 801849e:	9b06      	ldr	r3, [sp, #24]
 80184a0:	a90c      	add	r1, sp, #48	@ 0x30
 80184a2:	a80a      	add	r0, sp, #40	@ 0x28
 80184a4:	b22d      	sxth	r5, r5
 80184a6:	b224      	sxth	r4, r4
 80184a8:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80184ac:	920c      	str	r2, [sp, #48]	@ 0x30
 80184ae:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 80184b2:	f8ad b02e 	strh.w	fp, [sp, #46]	@ 0x2e
 80184b6:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 80184ba:	f8ad 402a 	strh.w	r4, [sp, #42]	@ 0x2a
 80184be:	f7f6 ffb7 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80184c2:	a808      	add	r0, sp, #32
 80184c4:	f7f6 ff8c 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80184c8:	a80c      	add	r0, sp, #48	@ 0x30
 80184ca:	f7f6 ff89 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80184ce:	4b7e      	ldr	r3, [pc, #504]	@ (80186c8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3f0>)
 80184d0:	681b      	ldr	r3, [r3, #0]
 80184d2:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80184d6:	2a00      	cmp	r2, #0
 80184d8:	f040 80ba 	bne.w	8018650 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x378>
 80184dc:	6898      	ldr	r0, [r3, #8]
 80184de:	6803      	ldr	r3, [r0, #0]
 80184e0:	4a7a      	ldr	r2, [pc, #488]	@ (80186cc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3f4>)
 80184e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80184e4:	4293      	cmp	r3, r2
 80184e6:	f040 80c4 	bne.w	8018672 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x39a>
 80184ea:	7a00      	ldrb	r0, [r0, #8]
 80184ec:	2801      	cmp	r0, #1
 80184ee:	f000 80ba 	beq.w	8018666 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x38e>
 80184f2:	f0c0 80b2 	bcc.w	801865a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x382>
 80184f6:	2802      	cmp	r0, #2
 80184f8:	f040 80da 	bne.w	80186b0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3d8>
 80184fc:	2310      	movs	r3, #16
 80184fe:	2604      	movs	r6, #4
 8018500:	9305      	str	r3, [sp, #20]
 8018502:	9b04      	ldr	r3, [sp, #16]
 8018504:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	@ 0x34
 8018508:	681b      	ldr	r3, [r3, #0]
 801850a:	fb06 f101 	mul.w	r1, r6, r1
 801850e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018510:	4a6f      	ldr	r2, [pc, #444]	@ (80186d0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3f8>)
 8018512:	9103      	str	r1, [sp, #12]
 8018514:	4293      	cmp	r3, r2
 8018516:	f040 80ae 	bne.w	8018676 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x39e>
 801851a:	4b6e      	ldr	r3, [pc, #440]	@ (80186d4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3fc>)
 801851c:	881f      	ldrh	r7, [r3, #0]
 801851e:	2f00      	cmp	r7, #0
 8018520:	f000 80bf 	beq.w	80186a2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3ca>
 8018524:	9b04      	ldr	r3, [sp, #16]
 8018526:	7a1b      	ldrb	r3, [r3, #8]
 8018528:	2b02      	cmp	r3, #2
 801852a:	f000 80a0 	beq.w	801866e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x396>
 801852e:	2b01      	cmp	r3, #1
 8018530:	bf14      	ite	ne
 8018532:	2302      	movne	r3, #2
 8018534:	2303      	moveq	r3, #3
 8018536:	fb17 f703 	smulbb	r7, r7, r3
 801853a:	b2bf      	uxth	r7, r7
 801853c:	4a62      	ldr	r2, [pc, #392]	@ (80186c8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3f0>)
 801853e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8018542:	6810      	ldr	r0, [r2, #0]
 8018544:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 8018548:	9a03      	ldr	r2, [sp, #12]
 801854a:	fb02 3808 	mla	r8, r2, r8, r3
 801854e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8018550:	6803      	ldr	r3, [r0, #0]
 8018552:	4442      	add	r2, r8
 8018554:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018556:	9204      	str	r2, [sp, #16]
 8018558:	4798      	blx	r3
 801855a:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	@ 0x22
 801855e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8018562:	fb07 f202 	mul.w	r2, r7, r2
 8018566:	fb06 2303 	mla	r3, r6, r3, r2
 801856a:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 8018704 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x42c>
 801856e:	18c3      	adds	r3, r0, r3
 8018570:	f8d8 2000 	ldr.w	r2, [r8]
 8018574:	9306      	str	r3, [sp, #24]
 8018576:	2a00      	cmp	r2, #0
 8018578:	f000 8081 	beq.w	801867e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3a6>
 801857c:	2600      	movs	r6, #0
 801857e:	4610      	mov	r0, r2
 8018580:	f7fc fe70 	bl	8015264 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8018584:	9b03      	ldr	r3, [sp, #12]
 8018586:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801858a:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 801858e:	9300      	str	r3, [sp, #0]
 8018590:	e9dd 0304 	ldrd	r0, r3, [sp, #16]
 8018594:	f7fa faea 	bl	8012b6c <nema_bind_dst_tex>
 8018598:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801859c:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80185a0:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 80185a4:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 80185a8:	f7fa fa20 	bl	80129ec <nema_set_clip>
 80185ac:	f04f 33ff 	mov.w	r3, #4294967295
 80185b0:	2201      	movs	r2, #1
 80185b2:	4631      	mov	r1, r6
 80185b4:	f240 5004 	movw	r0, #1284	@ 0x504
 80185b8:	f7fc f988 	bl	80148cc <nema_set_blend>
 80185bc:	e9dd 3005 	ldrd	r3, r0, [sp, #20]
 80185c0:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	@ 0x26
 80185c4:	f9bd 1024 	ldrsh.w	r1, [sp, #36]	@ 0x24
 80185c8:	9700      	str	r7, [sp, #0]
 80185ca:	9601      	str	r6, [sp, #4]
 80185cc:	f7fa fa4a 	bl	8012a64 <nema_bind_src_tex>
 80185d0:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 80185d4:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 80185d8:	f7fa fbd0 	bl	8012d7c <nema_blit>
 80185dc:	f8d8 0000 	ldr.w	r0, [r8]
 80185e0:	2800      	cmp	r0, #0
 80185e2:	d04c      	beq.n	801867e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3a6>
 80185e4:	f7fc fe5e 	bl	80152a4 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 80185e8:	f8d8 0000 	ldr.w	r0, [r8]
 80185ec:	2800      	cmp	r0, #0
 80185ee:	d046      	beq.n	801867e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3a6>
 80185f0:	6803      	ldr	r3, [r0, #0]
 80185f2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80185f4:	4798      	blx	r3
 80185f6:	f8d8 0000 	ldr.w	r0, [r8]
 80185fa:	2800      	cmp	r0, #0
 80185fc:	d03f      	beq.n	801867e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3a6>
 80185fe:	6803      	ldr	r3, [r0, #0]
 8018600:	4637      	mov	r7, r6
 8018602:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018604:	4798      	blx	r3
 8018606:	4650      	mov	r0, sl
 8018608:	f365 060f 	bfi	r6, r5, #0, #16
 801860c:	f369 070f 	bfi	r7, r9, #0, #16
 8018610:	f364 461f 	bfi	r6, r4, #16, #16
 8018614:	f36b 471f 	bfi	r7, fp, #16, #16
 8018618:	f8ca 6000 	str.w	r6, [sl]
 801861c:	f8ca 7004 	str.w	r7, [sl, #4]
 8018620:	b00f      	add	sp, #60	@ 0x3c
 8018622:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018626:	2300      	movs	r3, #0
 8018628:	4650      	mov	r0, sl
 801862a:	f8ca 3000 	str.w	r3, [sl]
 801862e:	f8ca 3004 	str.w	r3, [sl, #4]
 8018632:	b00f      	add	sp, #60	@ 0x3c
 8018634:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018638:	2000      	movs	r0, #0
 801863a:	eb0b 0604 	add.w	r6, fp, r4
 801863e:	fa0f fb86 	sxth.w	fp, r6
 8018642:	4604      	mov	r4, r0
 8018644:	4602      	mov	r2, r0
 8018646:	f8ad b026 	strh.w	fp, [sp, #38]	@ 0x26
 801864a:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 801864e:	e70c      	b.n	801846a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x192>
 8018650:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8018652:	2800      	cmp	r0, #0
 8018654:	f47f af43 	bne.w	80184de <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x206>
 8018658:	e740      	b.n	80184dc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x204>
 801865a:	2304      	movs	r3, #4
 801865c:	2602      	movs	r6, #2
 801865e:	9305      	str	r3, [sp, #20]
 8018660:	e74f      	b.n	8018502 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x22a>
 8018662:	4648      	mov	r0, r9
 8018664:	e6f4      	b.n	8018450 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x178>
 8018666:	2339      	movs	r3, #57	@ 0x39
 8018668:	2603      	movs	r6, #3
 801866a:	9305      	str	r3, [sp, #20]
 801866c:	e749      	b.n	8018502 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x22a>
 801866e:	2304      	movs	r3, #4
 8018670:	e761      	b.n	8018536 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x25e>
 8018672:	4798      	blx	r3
 8018674:	e73a      	b.n	80184ec <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>
 8018676:	9804      	ldr	r0, [sp, #16]
 8018678:	4798      	blx	r3
 801867a:	4607      	mov	r7, r0
 801867c:	e75e      	b.n	801853c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x264>
 801867e:	4b16      	ldr	r3, [pc, #88]	@ (80186d8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x400>)
 8018680:	4a16      	ldr	r2, [pc, #88]	@ (80186dc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x404>)
 8018682:	217c      	movs	r1, #124	@ 0x7c
 8018684:	4816      	ldr	r0, [pc, #88]	@ (80186e0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x408>)
 8018686:	f00c fb55 	bl	8024d34 <__assert_func>
 801868a:	4b16      	ldr	r3, [pc, #88]	@ (80186e4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x40c>)
 801868c:	4a16      	ldr	r2, [pc, #88]	@ (80186e8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x410>)
 801868e:	21f9      	movs	r1, #249	@ 0xf9
 8018690:	4816      	ldr	r0, [pc, #88]	@ (80186ec <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x414>)
 8018692:	f00c fb4f 	bl	8024d34 <__assert_func>
 8018696:	4b16      	ldr	r3, [pc, #88]	@ (80186f0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x418>)
 8018698:	4a13      	ldr	r2, [pc, #76]	@ (80186e8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x410>)
 801869a:	21f8      	movs	r1, #248	@ 0xf8
 801869c:	4813      	ldr	r0, [pc, #76]	@ (80186ec <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x414>)
 801869e:	f00c fb49 	bl	8024d34 <__assert_func>
 80186a2:	4b14      	ldr	r3, [pc, #80]	@ (80186f4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x41c>)
 80186a4:	4a14      	ldr	r2, [pc, #80]	@ (80186f8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x420>)
 80186a6:	f240 110f 	movw	r1, #271	@ 0x10f
 80186aa:	4814      	ldr	r0, [pc, #80]	@ (80186fc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x424>)
 80186ac:	f00c fb42 	bl	8024d34 <__assert_func>
 80186b0:	4b13      	ldr	r3, [pc, #76]	@ (8018700 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x428>)
 80186b2:	4a0d      	ldr	r2, [pc, #52]	@ (80186e8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x410>)
 80186b4:	f44f 7191 	mov.w	r1, #290	@ 0x122
 80186b8:	480c      	ldr	r0, [pc, #48]	@ (80186ec <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x414>)
 80186ba:	f00c fb3b 	bl	8024d34 <__assert_func>
 80186be:	bf00      	nop
 80186c0:	2004bf8c 	.word	0x2004bf8c
 80186c4:	2004bf8e 	.word	0x2004bf8e
 80186c8:	2004bf98 	.word	0x2004bf98
 80186cc:	08015349 	.word	0x08015349
 80186d0:	08016f29 	.word	0x08016f29
 80186d4:	2004bf92 	.word	0x2004bf92
 80186d8:	08027884 	.word	0x08027884
 80186dc:	08028130 	.word	0x08028130
 80186e0:	080278ac 	.word	0x080278ac
 80186e4:	08027c20 	.word	0x08027c20
 80186e8:	08029208 	.word	0x08029208
 80186ec:	08027928 	.word	0x08027928
 80186f0:	08027b6c 	.word	0x08027b6c
 80186f4:	08027ea0 	.word	0x08027ea0
 80186f8:	08029664 	.word	0x08029664
 80186fc:	08027ee4 	.word	0x08027ee4
 8018700:	08027c70 	.word	0x08027c70
 8018704:	2004c150 	.word	0x2004c150

08018708 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8018708:	e92d 42f0 	stmdb	sp!, {r4, r5, r6, r7, r9, lr}
 801870c:	2700      	movs	r7, #0
 801870e:	4a2b      	ldr	r2, [pc, #172]	@ (80187bc <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xb4>)
 8018710:	4b2b      	ldr	r3, [pc, #172]	@ (80187c0 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xb8>)
 8018712:	4d2c      	ldr	r5, [pc, #176]	@ (80187c4 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xbc>)
 8018714:	8812      	ldrh	r2, [r2, #0]
 8018716:	881b      	ldrh	r3, [r3, #0]
 8018718:	b088      	sub	sp, #32
 801871a:	4604      	mov	r4, r0
 801871c:	6828      	ldr	r0, [r5, #0]
 801871e:	f8ad 201c 	strh.w	r2, [sp, #28]
 8018722:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018726:	9706      	str	r7, [sp, #24]
 8018728:	6803      	ldr	r3, [r0, #0]
 801872a:	4689      	mov	r9, r1
 801872c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801872e:	4798      	blx	r3
 8018730:	6823      	ldr	r3, [r4, #0]
 8018732:	4a25      	ldr	r2, [pc, #148]	@ (80187c8 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc0>)
 8018734:	68de      	ldr	r6, [r3, #12]
 8018736:	4601      	mov	r1, r0
 8018738:	4296      	cmp	r6, r2
 801873a:	d134      	bne.n	80187a6 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x9e>
 801873c:	682a      	ldr	r2, [r5, #0]
 801873e:	691d      	ldr	r5, [r3, #16]
 8018740:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 8018744:	b9a3      	cbnz	r3, 8018770 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x68>
 8018746:	6890      	ldr	r0, [r2, #8]
 8018748:	4a20      	ldr	r2, [pc, #128]	@ (80187cc <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc4>)
 801874a:	6803      	ldr	r3, [r0, #0]
 801874c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801874e:	4293      	cmp	r3, r2
 8018750:	d116      	bne.n	8018780 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x78>
 8018752:	4b1f      	ldr	r3, [pc, #124]	@ (80187d0 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc8>)
 8018754:	7a02      	ldrb	r2, [r0, #8]
 8018756:	429d      	cmp	r5, r3
 8018758:	d119      	bne.n	801878e <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x86>
 801875a:	23ff      	movs	r3, #255	@ 0xff
 801875c:	f8cd 9000 	str.w	r9, [sp]
 8018760:	9301      	str	r3, [sp, #4]
 8018762:	4620      	mov	r0, r4
 8018764:	ab06      	add	r3, sp, #24
 8018766:	f7ff fbfd 	bl	8017f64 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6>
 801876a:	b008      	add	sp, #32
 801876c:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 8018770:	6cd0      	ldr	r0, [r2, #76]	@ 0x4c
 8018772:	2800      	cmp	r0, #0
 8018774:	d0e7      	beq.n	8018746 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x3e>
 8018776:	6803      	ldr	r3, [r0, #0]
 8018778:	4a14      	ldr	r2, [pc, #80]	@ (80187cc <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc4>)
 801877a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801877c:	4293      	cmp	r3, r2
 801877e:	d0e8      	beq.n	8018752 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x4a>
 8018780:	9105      	str	r1, [sp, #20]
 8018782:	4798      	blx	r3
 8018784:	4b12      	ldr	r3, [pc, #72]	@ (80187d0 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc8>)
 8018786:	4602      	mov	r2, r0
 8018788:	429d      	cmp	r5, r3
 801878a:	9905      	ldr	r1, [sp, #20]
 801878c:	d0e5      	beq.n	801875a <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x52>
 801878e:	2600      	movs	r6, #0
 8018790:	23ff      	movs	r3, #255	@ 0xff
 8018792:	f8cd 9000 	str.w	r9, [sp]
 8018796:	e9cd 3601 	strd	r3, r6, [sp, #4]
 801879a:	4620      	mov	r0, r4
 801879c:	ab06      	add	r3, sp, #24
 801879e:	47a8      	blx	r5
 80187a0:	b008      	add	sp, #32
 80187a2:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 80187a6:	22ff      	movs	r2, #255	@ 0xff
 80187a8:	9701      	str	r7, [sp, #4]
 80187aa:	9200      	str	r2, [sp, #0]
 80187ac:	464b      	mov	r3, r9
 80187ae:	4620      	mov	r0, r4
 80187b0:	aa06      	add	r2, sp, #24
 80187b2:	47b0      	blx	r6
 80187b4:	b008      	add	sp, #32
 80187b6:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 80187ba:	bf00      	nop
 80187bc:	2004bf92 	.word	0x2004bf92
 80187c0:	2004bf94 	.word	0x2004bf94
 80187c4:	2004bf98 	.word	0x2004bf98
 80187c8:	08018115 	.word	0x08018115
 80187cc:	08015349 	.word	0x08015349
 80187d0:	080181a1 	.word	0x080181a1

080187d4 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80187d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80187d8:	b085      	sub	sp, #20
 80187da:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 80187de:	e9dd 950e 	ldrd	r9, r5, [sp, #56]	@ 0x38
 80187e2:	f8bd 8040 	ldrh.w	r8, [sp, #64]	@ 0x40
 80187e6:	f8bd a048 	ldrh.w	sl, [sp, #72]	@ 0x48
 80187ea:	2e00      	cmp	r6, #0
 80187ec:	d05b      	beq.n	80188a6 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd2>
 80187ee:	f9b5 e004 	ldrsh.w	lr, [r5, #4]
 80187f2:	f1be 0f00 	cmp.w	lr, #0
 80187f6:	dd56      	ble.n	80188a6 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd2>
 80187f8:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 80187fc:	f1be 0f00 	cmp.w	lr, #0
 8018800:	dd51      	ble.n	80188a6 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd2>
 8018802:	f3c8 0b87 	ubfx	fp, r8, #2, #8
 8018806:	f1bb 0f0b 	cmp.w	fp, #11
 801880a:	f000 815f 	beq.w	8018acc <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2f8>
 801880e:	f1bb 0f0d 	cmp.w	fp, #13
 8018812:	4684      	mov	ip, r0
 8018814:	4614      	mov	r4, r2
 8018816:	461f      	mov	r7, r3
 8018818:	d03c      	beq.n	8018894 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xc0>
 801881a:	f8df a35c 	ldr.w	sl, [pc, #860]	@ 8018b78 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a4>
 801881e:	f8da 0000 	ldr.w	r0, [sl]
 8018822:	2800      	cmp	r0, #0
 8018824:	f000 8187 	beq.w	8018b36 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x362>
 8018828:	f8cd c00c 	str.w	ip, [sp, #12]
 801882c:	f7fc fd1a 	bl	8015264 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8018830:	9b03      	ldr	r3, [sp, #12]
 8018832:	681a      	ldr	r2, [r3, #0]
 8018834:	4618      	mov	r0, r3
 8018836:	6d53      	ldr	r3, [r2, #84]	@ 0x54
 8018838:	4798      	blx	r3
 801883a:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 801883e:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8018842:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8018846:	f9b5 0000 	ldrsh.w	r0, [r5]
 801884a:	f7fa f8cf 	bl	80129ec <nema_set_clip>
 801884e:	2200      	movs	r2, #0
 8018850:	4633      	mov	r3, r6
 8018852:	4611      	mov	r1, r2
 8018854:	4610      	mov	r0, r2
 8018856:	f7fa f8fd 	bl	8012a54 <nema_rgba>
 801885a:	f7fc fbfd 	bl	8015058 <nema_set_const_color>
 801885e:	f04f 33ff 	mov.w	r3, #4294967295
 8018862:	2201      	movs	r2, #1
 8018864:	2100      	movs	r1, #0
 8018866:	48ba      	ldr	r0, [pc, #744]	@ (8018b50 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x37c>)
 8018868:	f7fc f830 	bl	80148cc <nema_set_blend>
 801886c:	f1bb 0f0d 	cmp.w	fp, #13
 8018870:	f200 8167 	bhi.w	8018b42 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8018874:	e8df f01b 	tbh	[pc, fp, lsl #1]
 8018878:	00c100cd 	.word	0x00c100cd
 801887c:	016500d6 	.word	0x016500d6
 8018880:	01650165 	.word	0x01650165
 8018884:	01650165 	.word	0x01650165
 8018888:	01650165 	.word	0x01650165
 801888c:	01650165 	.word	0x01650165
 8018890:	001a00ac 	.word	0x001a00ac
 8018894:	685b      	ldr	r3, [r3, #4]
 8018896:	b133      	cbz	r3, 80188a6 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd2>
 8018898:	781b      	ldrb	r3, [r3, #0]
 801889a:	f1a3 0216 	sub.w	r2, r3, #22
 801889e:	2a01      	cmp	r2, #1
 80188a0:	d9bb      	bls.n	801881a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x46>
 80188a2:	2b12      	cmp	r3, #18
 80188a4:	d0b9      	beq.n	801881a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x46>
 80188a6:	b005      	add	sp, #20
 80188a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80188ac:	f04f 36ff 	mov.w	r6, #4294967295
 80188b0:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 80188b4:	687b      	ldr	r3, [r7, #4]
 80188b6:	6838      	ldr	r0, [r7, #0]
 80188b8:	781b      	ldrb	r3, [r3, #0]
 80188ba:	f008 0501 	and.w	r5, r8, #1
 80188be:	e9cd 6500 	strd	r6, r5, [sp]
 80188c2:	f7fa f8cf 	bl	8012a64 <nema_bind_src_tex>
 80188c6:	2001      	movs	r0, #1
 80188c8:	f7fa ff48 	bl	801375c <nema_enable_tiling>
 80188cc:	f9b9 3000 	ldrsh.w	r3, [r9]
 80188d0:	edd4 7a00 	vldr	s15, [r4]
 80188d4:	ee02 3a10 	vmov	s4, r3
 80188d8:	f9b9 3002 	ldrsh.w	r3, [r9, #2]
 80188dc:	eeb8 2ac2 	vcvt.f32.s32	s4, s4
 80188e0:	ee02 3a90 	vmov	s5, r3
 80188e4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80188e8:	eddf 6a9a 	vldr	s13, [pc, #616]	@ 8018b54 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 80188ec:	eef8 2ae2 	vcvt.f32.s32	s5, s5
 80188f0:	edd4 7a01 	vldr	s15, [r4, #4]
 80188f4:	eeb0 0a42 	vmov.f32	s0, s4
 80188f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80188fc:	eea7 0a26 	vfma.f32	s0, s14, s13
 8018900:	eef0 0a62 	vmov.f32	s1, s5
 8018904:	ed94 7a03 	vldr	s14, [r4, #12]
 8018908:	4b93      	ldr	r3, [pc, #588]	@ (8018b58 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x384>)
 801890a:	eee7 0aa6 	vfma.f32	s1, s15, s13
 801890e:	781b      	ldrb	r3, [r3, #0]
 8018910:	edd4 7a04 	vldr	s15, [r4, #16]
 8018914:	2b01      	cmp	r3, #1
 8018916:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801891a:	f000 808c 	beq.w	8018a36 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x262>
 801891e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018922:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018926:	f240 80ea 	bls.w	8018afe <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32a>
 801892a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801892e:	bf94      	ite	ls
 8018930:	2001      	movls	r0, #1
 8018932:	2002      	movhi	r0, #2
 8018934:	edd4 7a05 	vldr	s15, [r4, #20]
 8018938:	ed94 6a08 	vldr	s12, [r4, #32]
 801893c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8018940:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8018944:	edd4 7a06 	vldr	s15, [r4, #24]
 8018948:	eddf 6a82 	vldr	s13, [pc, #520]	@ 8018b54 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 801894c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018950:	eeb0 1a42 	vmov.f32	s2, s4
 8018954:	eef0 1a62 	vmov.f32	s3, s5
 8018958:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801895c:	eee7 1aa6 	vfma.f32	s3, s15, s13
 8018960:	eea7 1a26 	vfma.f32	s2, s14, s13
 8018964:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 8018968:	f240 80c1 	bls.w	8018aee <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x31a>
 801896c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018970:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018974:	bf94      	ite	ls
 8018976:	2101      	movls	r1, #1
 8018978:	2102      	movhi	r1, #2
 801897a:	edd4 7a0a 	vldr	s15, [r4, #40]	@ 0x28
 801897e:	ed94 6a0d 	vldr	s12, [r4, #52]	@ 0x34
 8018982:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8018986:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801898a:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 801898e:	eddf 6a71 	vldr	s13, [pc, #452]	@ 8018b54 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 8018992:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018996:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801899a:	eee7 2aa6 	vfma.f32	s5, s15, s13
 801899e:	eea7 2a26 	vfma.f32	s4, s14, s13
 80189a2:	edd4 7a0e 	vldr	s15, [r4, #56]	@ 0x38
 80189a6:	f240 809a 	bls.w	8018ade <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30a>
 80189aa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80189ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80189b2:	bf94      	ite	ls
 80189b4:	2201      	movls	r2, #1
 80189b6:	2202      	movhi	r2, #2
 80189b8:	f7fa fad6 	bl	8012f68 <nema_blit_tri_fit>
 80189bc:	f8da 0000 	ldr.w	r0, [sl]
 80189c0:	2800      	cmp	r0, #0
 80189c2:	f000 80b8 	beq.w	8018b36 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x362>
 80189c6:	b005      	add	sp, #20
 80189c8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80189cc:	f7fc bc6a 	b.w	80152a4 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 80189d0:	4a62      	ldr	r2, [pc, #392]	@ (8018b5c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x388>)
 80189d2:	23ff      	movs	r3, #255	@ 0xff
 80189d4:	6810      	ldr	r0, [r2, #0]
 80189d6:	f008 0501 	and.w	r5, r8, #1
 80189da:	b2c2      	uxtb	r2, r0
 80189dc:	f3c0 2107 	ubfx	r1, r0, #8, #8
 80189e0:	f3c0 4007 	ubfx	r0, r0, #16, #8
 80189e4:	f7fa f836 	bl	8012a54 <nema_rgba>
 80189e8:	f7f9 fff4 	bl	80129d4 <nema_set_tex_color>
 80189ec:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 80189f0:	6838      	ldr	r0, [r7, #0]
 80189f2:	2329      	movs	r3, #41	@ 0x29
 80189f4:	f04f 36ff 	mov.w	r6, #4294967295
 80189f8:	e761      	b.n	80188be <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xea>
 80189fa:	2339      	movs	r3, #57	@ 0x39
 80189fc:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8018a00:	f04f 0c03 	mov.w	ip, #3
 8018a04:	6838      	ldr	r0, [r7, #0]
 8018a06:	f008 0501 	and.w	r5, r8, #1
 8018a0a:	693e      	ldr	r6, [r7, #16]
 8018a0c:	fb06 f60c 	mul.w	r6, r6, ip
 8018a10:	e755      	b.n	80188be <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xea>
 8018a12:	f008 0501 	and.w	r5, r8, #1
 8018a16:	6838      	ldr	r0, [r7, #0]
 8018a18:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8018a1c:	2304      	movs	r3, #4
 8018a1e:	f04f 0c02 	mov.w	ip, #2
 8018a22:	e7f2      	b.n	8018a0a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x236>
 8018a24:	2310      	movs	r3, #16
 8018a26:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8018a2a:	f04f 0c04 	mov.w	ip, #4
 8018a2e:	6838      	ldr	r0, [r7, #0]
 8018a30:	f008 0501 	and.w	r5, r8, #1
 8018a34:	e7e9      	b.n	8018a0a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x236>
 8018a36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018a3a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018a3e:	d974      	bls.n	8018b2a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x356>
 8018a40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018a44:	bf94      	ite	ls
 8018a46:	2002      	movls	r0, #2
 8018a48:	2003      	movhi	r0, #3
 8018a4a:	edd4 7a05 	vldr	s15, [r4, #20]
 8018a4e:	ed94 6a08 	vldr	s12, [r4, #32]
 8018a52:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8018a56:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8018a5a:	edd4 7a06 	vldr	s15, [r4, #24]
 8018a5e:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 8018b54 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 8018a62:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018a66:	eeb0 1a42 	vmov.f32	s2, s4
 8018a6a:	eef0 1a62 	vmov.f32	s3, s5
 8018a6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018a72:	eee7 1aa6 	vfma.f32	s3, s15, s13
 8018a76:	eea7 1a26 	vfma.f32	s2, s14, s13
 8018a7a:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 8018a7e:	d94c      	bls.n	8018b1a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x346>
 8018a80:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018a84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018a88:	bf94      	ite	ls
 8018a8a:	2102      	movls	r1, #2
 8018a8c:	2103      	movhi	r1, #3
 8018a8e:	edd4 7a0a 	vldr	s15, [r4, #40]	@ 0x28
 8018a92:	ed94 6a0d 	vldr	s12, [r4, #52]	@ 0x34
 8018a96:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8018a9a:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8018a9e:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8018aa2:	eddf 6a2c 	vldr	s13, [pc, #176]	@ 8018b54 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 8018aa6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018aaa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018aae:	eee7 2aa6 	vfma.f32	s5, s15, s13
 8018ab2:	eea7 2a26 	vfma.f32	s4, s14, s13
 8018ab6:	edd4 7a0e 	vldr	s15, [r4, #56]	@ 0x38
 8018aba:	d926      	bls.n	8018b0a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8018abc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018ac0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ac4:	bf94      	ite	ls
 8018ac6:	2202      	movls	r2, #2
 8018ac8:	2203      	movhi	r2, #3
 8018aca:	e775      	b.n	80189b8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1e4>
 8018acc:	e9cd 6a11 	strd	r6, sl, [sp, #68]	@ 0x44
 8018ad0:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
 8018ad4:	b005      	add	sp, #20
 8018ad6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ada:	f7f5 bf31 	b.w	800e940 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>
 8018ade:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018ae2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ae6:	bf94      	ite	ls
 8018ae8:	2200      	movls	r2, #0
 8018aea:	2203      	movhi	r2, #3
 8018aec:	e764      	b.n	80189b8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1e4>
 8018aee:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018af2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018af6:	bf94      	ite	ls
 8018af8:	2100      	movls	r1, #0
 8018afa:	2103      	movhi	r1, #3
 8018afc:	e73d      	b.n	801897a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a6>
 8018afe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b02:	bf94      	ite	ls
 8018b04:	2000      	movls	r0, #0
 8018b06:	2003      	movhi	r0, #3
 8018b08:	e714      	b.n	8018934 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x160>
 8018b0a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018b0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b12:	bf94      	ite	ls
 8018b14:	2201      	movls	r2, #1
 8018b16:	2200      	movhi	r2, #0
 8018b18:	e74e      	b.n	80189b8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1e4>
 8018b1a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018b1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b22:	bf94      	ite	ls
 8018b24:	2101      	movls	r1, #1
 8018b26:	2100      	movhi	r1, #0
 8018b28:	e7b1      	b.n	8018a8e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2ba>
 8018b2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b2e:	bf94      	ite	ls
 8018b30:	2001      	movls	r0, #1
 8018b32:	2000      	movhi	r0, #0
 8018b34:	e789      	b.n	8018a4a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x276>
 8018b36:	4b0a      	ldr	r3, [pc, #40]	@ (8018b60 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x38c>)
 8018b38:	4a0a      	ldr	r2, [pc, #40]	@ (8018b64 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x390>)
 8018b3a:	217c      	movs	r1, #124	@ 0x7c
 8018b3c:	480a      	ldr	r0, [pc, #40]	@ (8018b68 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x394>)
 8018b3e:	f00c f8f9 	bl	8024d34 <__assert_func>
 8018b42:	4b0a      	ldr	r3, [pc, #40]	@ (8018b6c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x398>)
 8018b44:	4a0a      	ldr	r2, [pc, #40]	@ (8018b70 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x39c>)
 8018b46:	f240 21e2 	movw	r1, #738	@ 0x2e2
 8018b4a:	480a      	ldr	r0, [pc, #40]	@ (8018b74 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a0>)
 8018b4c:	f00c f8f2 	bl	8024d34 <__assert_func>
 8018b50:	08000504 	.word	0x08000504
 8018b54:	3d800000 	.word	0x3d800000
 8018b58:	2004bf90 	.word	0x2004bf90
 8018b5c:	2004bfa0 	.word	0x2004bfa0
 8018b60:	08027884 	.word	0x08027884
 8018b64:	08028130 	.word	0x08028130
 8018b68:	080278ac 	.word	0x080278ac
 8018b6c:	0802794c 	.word	0x0802794c
 8018b70:	080284d4 	.word	0x080284d4
 8018b74:	08027928 	.word	0x08027928
 8018b78:	2004c150 	.word	0x2004c150

08018b7c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8018b7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b80:	b09b      	sub	sp, #108	@ 0x6c
 8018b82:	f89d 609c 	ldrb.w	r6, [sp, #156]	@ 0x9c
 8018b86:	e9dd 8524 	ldrd	r8, r5, [sp, #144]	@ 0x90
 8018b8a:	f8bd 7098 	ldrh.w	r7, [sp, #152]	@ 0x98
 8018b8e:	f8bd a0a0 	ldrh.w	sl, [sp, #160]	@ 0xa0
 8018b92:	2e00      	cmp	r6, #0
 8018b94:	d066      	beq.n	8018c64 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xe8>
 8018b96:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8018b9a:	f1b9 0f00 	cmp.w	r9, #0
 8018b9e:	dd61      	ble.n	8018c64 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xe8>
 8018ba0:	f9b5 9006 	ldrsh.w	r9, [r5, #6]
 8018ba4:	f1b9 0f00 	cmp.w	r9, #0
 8018ba8:	dd5c      	ble.n	8018c64 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xe8>
 8018baa:	f3c7 0987 	ubfx	r9, r7, #2, #8
 8018bae:	f1b9 0f0b 	cmp.w	r9, #11
 8018bb2:	d05a      	beq.n	8018c6a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xee>
 8018bb4:	469c      	mov	ip, r3
 8018bb6:	685b      	ldr	r3, [r3, #4]
 8018bb8:	4686      	mov	lr, r0
 8018bba:	e9dc ba02 	ldrd	fp, sl, [ip, #8]
 8018bbe:	9305      	str	r3, [sp, #20]
 8018bc0:	4bae      	ldr	r3, [pc, #696]	@ (8018e7c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x300>)
 8018bc2:	4614      	mov	r4, r2
 8018bc4:	781b      	ldrb	r3, [r3, #0]
 8018bc6:	2b01      	cmp	r3, #1
 8018bc8:	d002      	beq.n	8018bd0 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x54>
 8018bca:	465b      	mov	r3, fp
 8018bcc:	46d3      	mov	fp, sl
 8018bce:	469a      	mov	sl, r3
 8018bd0:	f1b9 0f0d 	cmp.w	r9, #13
 8018bd4:	d03d      	beq.n	8018c52 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd6>
 8018bd6:	4aaa      	ldr	r2, [pc, #680]	@ (8018e80 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x304>)
 8018bd8:	6810      	ldr	r0, [r2, #0]
 8018bda:	2800      	cmp	r0, #0
 8018bdc:	f000 81f7 	beq.w	8018fce <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x452>
 8018be0:	f8dc 3000 	ldr.w	r3, [ip]
 8018be4:	f8cd e010 	str.w	lr, [sp, #16]
 8018be8:	9303      	str	r3, [sp, #12]
 8018bea:	f7fc fb3b 	bl	8015264 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8018bee:	9b04      	ldr	r3, [sp, #16]
 8018bf0:	681a      	ldr	r2, [r3, #0]
 8018bf2:	4618      	mov	r0, r3
 8018bf4:	6d53      	ldr	r3, [r2, #84]	@ 0x54
 8018bf6:	4798      	blx	r3
 8018bf8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8018bfc:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8018c00:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8018c04:	f9b5 0000 	ldrsh.w	r0, [r5]
 8018c08:	f7f9 fef0 	bl	80129ec <nema_set_clip>
 8018c0c:	2200      	movs	r2, #0
 8018c0e:	4633      	mov	r3, r6
 8018c10:	4611      	mov	r1, r2
 8018c12:	4610      	mov	r0, r2
 8018c14:	f7f9 ff1e 	bl	8012a54 <nema_rgba>
 8018c18:	f7fc fa1e 	bl	8015058 <nema_set_const_color>
 8018c1c:	f04f 33ff 	mov.w	r3, #4294967295
 8018c20:	2201      	movs	r2, #1
 8018c22:	2100      	movs	r1, #0
 8018c24:	4897      	ldr	r0, [pc, #604]	@ (8018e84 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x308>)
 8018c26:	f7fb fe51 	bl	80148cc <nema_set_blend>
 8018c2a:	f1b9 0f0d 	cmp.w	r9, #13
 8018c2e:	f200 81d4 	bhi.w	8018fda <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x45e>
 8018c32:	e8df f019 	tbh	[pc, r9, lsl #1]
 8018c36:	0022      	.short	0x0022
 8018c38:	011f0121 	.word	0x011f0121
 8018c3c:	01d201d2 	.word	0x01d201d2
 8018c40:	01d201d2 	.word	0x01d201d2
 8018c44:	01d201d2 	.word	0x01d201d2
 8018c48:	01d201d2 	.word	0x01d201d2
 8018c4c:	011101d2 	.word	0x011101d2
 8018c50:	010e      	.short	0x010e
 8018c52:	9b05      	ldr	r3, [sp, #20]
 8018c54:	b133      	cbz	r3, 8018c64 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xe8>
 8018c56:	781b      	ldrb	r3, [r3, #0]
 8018c58:	f1a3 0216 	sub.w	r2, r3, #22
 8018c5c:	2a01      	cmp	r2, #1
 8018c5e:	d9ba      	bls.n	8018bd6 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5a>
 8018c60:	2b12      	cmp	r3, #18
 8018c62:	d0b8      	beq.n	8018bd6 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5a>
 8018c64:	b01b      	add	sp, #108	@ 0x6c
 8018c66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c6a:	e9cd 6a27 	strd	r6, sl, [sp, #156]	@ 0x9c
 8018c6e:	9726      	str	r7, [sp, #152]	@ 0x98
 8018c70:	b01b      	add	sp, #108	@ 0x6c
 8018c72:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c76:	f7f5 bd23 	b.w	800e6c0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>
 8018c7a:	2304      	movs	r3, #4
 8018c7c:	f04f 35ff 	mov.w	r5, #4294967295
 8018c80:	f007 0701 	and.w	r7, r7, #1
 8018c84:	465a      	mov	r2, fp
 8018c86:	4651      	mov	r1, sl
 8018c88:	9803      	ldr	r0, [sp, #12]
 8018c8a:	9701      	str	r7, [sp, #4]
 8018c8c:	9500      	str	r5, [sp, #0]
 8018c8e:	f7f9 fee9 	bl	8012a64 <nema_bind_src_tex>
 8018c92:	2001      	movs	r0, #1
 8018c94:	f7fa fd62 	bl	801375c <nema_enable_tiling>
 8018c98:	2301      	movs	r3, #1
 8018c9a:	461a      	mov	r2, r3
 8018c9c:	4619      	mov	r1, r3
 8018c9e:	4618      	mov	r0, r3
 8018ca0:	f7fa fd84 	bl	80137ac <nema_enable_aa>
 8018ca4:	edd4 7a03 	vldr	s15, [r4, #12]
 8018ca8:	4b74      	ldr	r3, [pc, #464]	@ (8018e7c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x300>)
 8018caa:	4606      	mov	r6, r0
 8018cac:	781b      	ldrb	r3, [r3, #0]
 8018cae:	ed94 7a04 	vldr	s14, [r4, #16]
 8018cb2:	2b01      	cmp	r3, #1
 8018cb4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018cb8:	f000 80ea 	beq.w	8018e90 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x314>
 8018cbc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018cc0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8018cc4:	f240 8158 	bls.w	8018f78 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3fc>
 8018cc8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ccc:	bf94      	ite	ls
 8018cce:	2501      	movls	r5, #1
 8018cd0:	2502      	movhi	r5, #2
 8018cd2:	ed94 7a08 	vldr	s14, [r4, #32]
 8018cd6:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8018cda:	4627      	mov	r7, r4
 8018cdc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ce0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8018ce2:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8018ce6:	f10d 0c68 	add.w	ip, sp, #104	@ 0x68
 8018cea:	eb0c 0585 	add.w	r5, ip, r5, lsl #2
 8018cee:	f1a5 0550 	sub.w	r5, r5, #80	@ 0x50
 8018cf2:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8018cf4:	683b      	ldr	r3, [r7, #0]
 8018cf6:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 8018cfa:	602b      	str	r3, [r5, #0]
 8018cfc:	f240 8134 	bls.w	8018f68 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ec>
 8018d00:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018d04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018d08:	bf94      	ite	ls
 8018d0a:	2501      	movls	r5, #1
 8018d0c:	2502      	movhi	r5, #2
 8018d0e:	ed94 7a0d 	vldr	s14, [r4, #52]	@ 0x34
 8018d12:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8018d16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018d1a:	ab1a      	add	r3, sp, #104	@ 0x68
 8018d1c:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8018d20:	eb03 0585 	add.w	r5, r3, r5, lsl #2
 8018d24:	f1a5 0550 	sub.w	r5, r5, #80	@ 0x50
 8018d28:	f104 0714 	add.w	r7, r4, #20
 8018d2c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8018d2e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8018d30:	683b      	ldr	r3, [r7, #0]
 8018d32:	edd4 7a0e 	vldr	s15, [r4, #56]	@ 0x38
 8018d36:	602b      	str	r3, [r5, #0]
 8018d38:	f240 810e 	bls.w	8018f58 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3dc>
 8018d3c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018d40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018d44:	bf94      	ite	ls
 8018d46:	2501      	movls	r5, #1
 8018d48:	2502      	movhi	r5, #2
 8018d4a:	ed94 7a12 	vldr	s14, [r4, #72]	@ 0x48
 8018d4e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8018d52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018d56:	ab1a      	add	r3, sp, #104	@ 0x68
 8018d58:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8018d5c:	eb03 0585 	add.w	r5, r3, r5, lsl #2
 8018d60:	f1a5 0550 	sub.w	r5, r5, #80	@ 0x50
 8018d64:	f104 0728 	add.w	r7, r4, #40	@ 0x28
 8018d68:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8018d6a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8018d6c:	683b      	ldr	r3, [r7, #0]
 8018d6e:	edd4 7a13 	vldr	s15, [r4, #76]	@ 0x4c
 8018d72:	602b      	str	r3, [r5, #0]
 8018d74:	f240 8106 	bls.w	8018f84 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x408>
 8018d78:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018d7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018d80:	f200 80e8 	bhi.w	8018f54 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3d8>
 8018d84:	2501      	movs	r5, #1
 8018d86:	ab1a      	add	r3, sp, #104	@ 0x68
 8018d88:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8018d8c:	eb03 0585 	add.w	r5, r3, r5, lsl #2
 8018d90:	3d50      	subs	r5, #80	@ 0x50
 8018d92:	343c      	adds	r4, #60	@ 0x3c
 8018d94:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8018d96:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8018d98:	6823      	ldr	r3, [r4, #0]
 8018d9a:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 8018d9e:	602b      	str	r3, [r5, #0]
 8018da0:	ed9d 7a15 	vldr	s14, [sp, #84]	@ 0x54
 8018da4:	eeb8 4ac7 	vcvt.f32.s32	s8, s14
 8018da8:	ed9d 7a11 	vldr	s14, [sp, #68]	@ 0x44
 8018dac:	eef8 4ac7 	vcvt.f32.s32	s9, s14
 8018db0:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 8018db4:	ee00 2a90 	vmov	s1, r2
 8018db8:	eeb8 5ac7 	vcvt.f32.s32	s10, s14
 8018dbc:	ed9d 7a0c 	vldr	s14, [sp, #48]	@ 0x30
 8018dc0:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8018dc4:	eddd 7a16 	vldr	s15, [sp, #88]	@ 0x58
 8018dc8:	eef8 5ac7 	vcvt.f32.s32	s11, s14
 8018dcc:	ed9d 7a07 	vldr	s14, [sp, #28]
 8018dd0:	f9b8 3000 	ldrsh.w	r3, [r8]
 8018dd4:	eef8 3ae7 	vcvt.f32.s32	s7, s15
 8018dd8:	ee00 3a10 	vmov	s0, r3
 8018ddc:	eddf 7a2a 	vldr	s15, [pc, #168]	@ 8018e88 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8018de0:	eeb8 6ac7 	vcvt.f32.s32	s12, s14
 8018de4:	eeb0 3a60 	vmov.f32	s6, s1
 8018de8:	ed9d 7a0b 	vldr	s14, [sp, #44]	@ 0x2c
 8018dec:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8018df0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8018df4:	eea3 3aa7 	vfma.f32	s6, s7, s15
 8018df8:	ed9d 7a06 	vldr	s14, [sp, #24]
 8018dfc:	eef0 3a43 	vmov.f32	s7, s6
 8018e00:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018e04:	eeb0 3a40 	vmov.f32	s6, s0
 8018e08:	eef0 2a60 	vmov.f32	s5, s1
 8018e0c:	eeb0 2a40 	vmov.f32	s4, s0
 8018e10:	eef0 1a60 	vmov.f32	s3, s1
 8018e14:	eeb0 1a40 	vmov.f32	s2, s0
 8018e18:	eea4 3a27 	vfma.f32	s6, s8, s15
 8018e1c:	eee4 2aa7 	vfma.f32	s5, s9, s15
 8018e20:	eea5 2a27 	vfma.f32	s4, s10, s15
 8018e24:	eee5 1aa7 	vfma.f32	s3, s11, s15
 8018e28:	eee6 0a27 	vfma.f32	s1, s12, s15
 8018e2c:	eea6 1aa7 	vfma.f32	s2, s13, s15
 8018e30:	eea7 0a27 	vfma.f32	s0, s14, s15
 8018e34:	f7fa f91c 	bl	8013070 <nema_blit_quad_fit>
 8018e38:	4b11      	ldr	r3, [pc, #68]	@ (8018e80 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x304>)
 8018e3a:	6818      	ldr	r0, [r3, #0]
 8018e3c:	2800      	cmp	r0, #0
 8018e3e:	f000 80c6 	beq.w	8018fce <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x452>
 8018e42:	f7fc fa2f 	bl	80152a4 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8018e46:	4630      	mov	r0, r6
 8018e48:	b01b      	add	sp, #108	@ 0x6c
 8018e4a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e4e:	f7fa bccf 	b.w	80137f0 <nema_enable_aa_flags>
 8018e52:	9b05      	ldr	r3, [sp, #20]
 8018e54:	781b      	ldrb	r3, [r3, #0]
 8018e56:	e711      	b.n	8018c7c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8018e58:	4a0c      	ldr	r2, [pc, #48]	@ (8018e8c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>)
 8018e5a:	23ff      	movs	r3, #255	@ 0xff
 8018e5c:	6810      	ldr	r0, [r2, #0]
 8018e5e:	b2c2      	uxtb	r2, r0
 8018e60:	f3c0 2107 	ubfx	r1, r0, #8, #8
 8018e64:	f3c0 4007 	ubfx	r0, r0, #16, #8
 8018e68:	f7f9 fdf4 	bl	8012a54 <nema_rgba>
 8018e6c:	f7f9 fdb2 	bl	80129d4 <nema_set_tex_color>
 8018e70:	2329      	movs	r3, #41	@ 0x29
 8018e72:	e703      	b.n	8018c7c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8018e74:	2310      	movs	r3, #16
 8018e76:	e701      	b.n	8018c7c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8018e78:	2339      	movs	r3, #57	@ 0x39
 8018e7a:	e6ff      	b.n	8018c7c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8018e7c:	2004bf90 	.word	0x2004bf90
 8018e80:	2004c150 	.word	0x2004c150
 8018e84:	08000504 	.word	0x08000504
 8018e88:	3d800000 	.word	0x3d800000
 8018e8c:	2004bfa0 	.word	0x2004bfa0
 8018e90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018e94:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8018e98:	f240 8093 	bls.w	8018fc2 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x446>
 8018e9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ea0:	bf94      	ite	ls
 8018ea2:	2502      	movls	r5, #2
 8018ea4:	2503      	movhi	r5, #3
 8018ea6:	edd4 7a08 	vldr	s15, [r4, #32]
 8018eaa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018eae:	4627      	mov	r7, r4
 8018eb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018eb4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8018eb6:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8018eba:	f10d 0c68 	add.w	ip, sp, #104	@ 0x68
 8018ebe:	eb0c 0585 	add.w	r5, ip, r5, lsl #2
 8018ec2:	f1a5 0550 	sub.w	r5, r5, #80	@ 0x50
 8018ec6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8018ec8:	683b      	ldr	r3, [r7, #0]
 8018eca:	ed94 7a09 	vldr	s14, [r4, #36]	@ 0x24
 8018ece:	602b      	str	r3, [r5, #0]
 8018ed0:	d96f      	bls.n	8018fb2 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x436>
 8018ed2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8018ed6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018eda:	bf94      	ite	ls
 8018edc:	2502      	movls	r5, #2
 8018ede:	2503      	movhi	r5, #3
 8018ee0:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 8018ee4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018ee8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018eec:	ab1a      	add	r3, sp, #104	@ 0x68
 8018eee:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8018ef2:	eb03 0585 	add.w	r5, r3, r5, lsl #2
 8018ef6:	f1a5 0550 	sub.w	r5, r5, #80	@ 0x50
 8018efa:	f104 0714 	add.w	r7, r4, #20
 8018efe:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8018f00:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8018f02:	683b      	ldr	r3, [r7, #0]
 8018f04:	ed94 7a0e 	vldr	s14, [r4, #56]	@ 0x38
 8018f08:	602b      	str	r3, [r5, #0]
 8018f0a:	d94a      	bls.n	8018fa2 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x426>
 8018f0c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8018f10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018f14:	bf94      	ite	ls
 8018f16:	2502      	movls	r5, #2
 8018f18:	2503      	movhi	r5, #3
 8018f1a:	edd4 7a12 	vldr	s15, [r4, #72]	@ 0x48
 8018f1e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018f22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018f26:	ab1a      	add	r3, sp, #104	@ 0x68
 8018f28:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8018f2c:	eb03 0585 	add.w	r5, r3, r5, lsl #2
 8018f30:	f1a5 0550 	sub.w	r5, r5, #80	@ 0x50
 8018f34:	f104 0728 	add.w	r7, r4, #40	@ 0x28
 8018f38:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8018f3a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8018f3c:	683b      	ldr	r3, [r7, #0]
 8018f3e:	ed94 7a13 	vldr	s14, [r4, #76]	@ 0x4c
 8018f42:	602b      	str	r3, [r5, #0]
 8018f44:	d925      	bls.n	8018f92 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x416>
 8018f46:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8018f4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018f4e:	d901      	bls.n	8018f54 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3d8>
 8018f50:	2503      	movs	r5, #3
 8018f52:	e718      	b.n	8018d86 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x20a>
 8018f54:	2502      	movs	r5, #2
 8018f56:	e716      	b.n	8018d86 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x20a>
 8018f58:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018f5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018f60:	bf94      	ite	ls
 8018f62:	2500      	movls	r5, #0
 8018f64:	2503      	movhi	r5, #3
 8018f66:	e6f0      	b.n	8018d4a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1ce>
 8018f68:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018f6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018f70:	bf94      	ite	ls
 8018f72:	2500      	movls	r5, #0
 8018f74:	2503      	movhi	r5, #3
 8018f76:	e6ca      	b.n	8018d0e <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x192>
 8018f78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018f7c:	bf94      	ite	ls
 8018f7e:	2500      	movls	r5, #0
 8018f80:	2503      	movhi	r5, #3
 8018f82:	e6a6      	b.n	8018cd2 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x156>
 8018f84:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018f88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018f8c:	d8e0      	bhi.n	8018f50 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3d4>
 8018f8e:	2500      	movs	r5, #0
 8018f90:	e6f9      	b.n	8018d86 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x20a>
 8018f92:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8018f96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018f9a:	bf94      	ite	ls
 8018f9c:	2501      	movls	r5, #1
 8018f9e:	2500      	movhi	r5, #0
 8018fa0:	e6f1      	b.n	8018d86 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x20a>
 8018fa2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8018fa6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018faa:	bf94      	ite	ls
 8018fac:	2501      	movls	r5, #1
 8018fae:	2500      	movhi	r5, #0
 8018fb0:	e7b3      	b.n	8018f1a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x39e>
 8018fb2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8018fb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018fba:	bf94      	ite	ls
 8018fbc:	2501      	movls	r5, #1
 8018fbe:	2500      	movhi	r5, #0
 8018fc0:	e78e      	b.n	8018ee0 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>
 8018fc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018fc6:	bf94      	ite	ls
 8018fc8:	2501      	movls	r5, #1
 8018fca:	2500      	movhi	r5, #0
 8018fcc:	e76b      	b.n	8018ea6 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32a>
 8018fce:	4b06      	ldr	r3, [pc, #24]	@ (8018fe8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x46c>)
 8018fd0:	4a06      	ldr	r2, [pc, #24]	@ (8018fec <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>)
 8018fd2:	217c      	movs	r1, #124	@ 0x7c
 8018fd4:	4806      	ldr	r0, [pc, #24]	@ (8018ff0 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x474>)
 8018fd6:	f00b fead 	bl	8024d34 <__assert_func>
 8018fda:	4b06      	ldr	r3, [pc, #24]	@ (8018ff4 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x478>)
 8018fdc:	4a06      	ldr	r2, [pc, #24]	@ (8018ff8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x47c>)
 8018fde:	f44f 7157 	mov.w	r1, #860	@ 0x35c
 8018fe2:	4806      	ldr	r0, [pc, #24]	@ (8018ffc <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x480>)
 8018fe4:	f00b fea6 	bl	8024d34 <__assert_func>
 8018fe8:	08027884 	.word	0x08027884
 8018fec:	08028130 	.word	0x08028130
 8018ff0:	080278ac 	.word	0x080278ac
 8018ff4:	0802794c 	.word	0x0802794c
 8018ff8:	080282e8 	.word	0x080282e8
 8018ffc:	08027928 	.word	0x08027928

08019000 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8019000:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019004:	4604      	mov	r4, r0
 8019006:	4865      	ldr	r0, [pc, #404]	@ (801919c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x19c>)
 8019008:	460f      	mov	r7, r1
 801900a:	6800      	ldr	r0, [r0, #0]
 801900c:	b093      	sub	sp, #76	@ 0x4c
 801900e:	f890 1048 	ldrb.w	r1, [r0, #72]	@ 0x48
 8019012:	2902      	cmp	r1, #2
 8019014:	f000 81f2 	beq.w	80193fc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3fc>
 8019018:	f10d 0948 	add.w	r9, sp, #72	@ 0x48
 801901c:	f829 3d1c 	strh.w	r3, [r9, #-28]!
 8019020:	4648      	mov	r0, r9
 8019022:	4615      	mov	r5, r2
 8019024:	f7f9 f926 	bl	8012274 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8019028:	6823      	ldr	r3, [r4, #0]
 801902a:	4a5d      	ldr	r2, [pc, #372]	@ (80191a0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1a0>)
 801902c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801902e:	4680      	mov	r8, r0
 8019030:	4293      	cmp	r3, r2
 8019032:	f040 81b5 	bne.w	80193a0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3a0>
 8019036:	7a20      	ldrb	r0, [r4, #8]
 8019038:	4580      	cmp	r8, r0
 801903a:	f040 81d9 	bne.w	80193f0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3f0>
 801903e:	4648      	mov	r0, r9
 8019040:	f7f9 f894 	bl	801216c <_ZNK8touchgfx6Bitmap7getDataEv>
 8019044:	4683      	mov	fp, r0
 8019046:	2800      	cmp	r0, #0
 8019048:	f000 81cc 	beq.w	80193e4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3e4>
 801904c:	6823      	ldr	r3, [r4, #0]
 801904e:	4648      	mov	r0, r9
 8019050:	f8d3 8018 	ldr.w	r8, [r3, #24]
 8019054:	f7f8 ffd6 	bl	8012004 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8019058:	9005      	str	r0, [sp, #20]
 801905a:	4648      	mov	r0, r9
 801905c:	f7f9 f806 	bl	801206c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8019060:	4b50      	ldr	r3, [pc, #320]	@ (80191a4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1a4>)
 8019062:	9006      	str	r0, [sp, #24]
 8019064:	4598      	cmp	r8, r3
 8019066:	f040 818e 	bne.w	8019386 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x386>
 801906a:	4b4c      	ldr	r3, [pc, #304]	@ (801919c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x19c>)
 801906c:	681b      	ldr	r3, [r3, #0]
 801906e:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 8019072:	2b02      	cmp	r3, #2
 8019074:	f000 81c8 	beq.w	8019408 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x408>
 8019078:	f9b5 8000 	ldrsh.w	r8, [r5]
 801907c:	88ab      	ldrh	r3, [r5, #4]
 801907e:	fa1f fe88 	uxth.w	lr, r8
 8019082:	4473      	add	r3, lr
 8019084:	b29b      	uxth	r3, r3
 8019086:	b218      	sxth	r0, r3
 8019088:	4580      	cmp	r8, r0
 801908a:	f9b5 a002 	ldrsh.w	sl, [r5, #2]
 801908e:	da2a      	bge.n	80190e6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xe6>
 8019090:	9a05      	ldr	r2, [sp, #20]
 8019092:	eb0e 0102 	add.w	r1, lr, r2
 8019096:	b28a      	uxth	r2, r1
 8019098:	9207      	str	r2, [sp, #28]
 801909a:	f9bd c01c 	ldrsh.w	ip, [sp, #28]
 801909e:	45e0      	cmp	r8, ip
 80190a0:	da21      	bge.n	80190e6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xe6>
 80190a2:	88ea      	ldrh	r2, [r5, #6]
 80190a4:	fa1f f68a 	uxth.w	r6, sl
 80190a8:	4432      	add	r2, r6
 80190aa:	b292      	uxth	r2, r2
 80190ac:	b211      	sxth	r1, r2
 80190ae:	458a      	cmp	sl, r1
 80190b0:	9108      	str	r1, [sp, #32]
 80190b2:	da18      	bge.n	80190e6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xe6>
 80190b4:	9906      	ldr	r1, [sp, #24]
 80190b6:	eb06 0901 	add.w	r9, r6, r1
 80190ba:	fa1f f989 	uxth.w	r9, r9
 80190be:	fa0f f189 	sxth.w	r1, r9
 80190c2:	458a      	cmp	sl, r1
 80190c4:	9109      	str	r1, [sp, #36]	@ 0x24
 80190c6:	da0e      	bge.n	80190e6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xe6>
 80190c8:	9907      	ldr	r1, [sp, #28]
 80190ca:	4560      	cmp	r0, ip
 80190cc:	bfc8      	it	gt
 80190ce:	460b      	movgt	r3, r1
 80190d0:	e9dd 1008 	ldrd	r1, r0, [sp, #32]
 80190d4:	4281      	cmp	r1, r0
 80190d6:	bfc8      	it	gt
 80190d8:	464a      	movgt	r2, r9
 80190da:	eba3 030e 	sub.w	r3, r3, lr
 80190de:	1b92      	subs	r2, r2, r6
 80190e0:	b21b      	sxth	r3, r3
 80190e2:	b212      	sxth	r2, r2
 80190e4:	e005      	b.n	80190f2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xf2>
 80190e6:	2200      	movs	r2, #0
 80190e8:	4616      	mov	r6, r2
 80190ea:	4692      	mov	sl, r2
 80190ec:	4613      	mov	r3, r2
 80190ee:	4696      	mov	lr, r2
 80190f0:	4690      	mov	r8, r2
 80190f2:	f9b7 0000 	ldrsh.w	r0, [r7]
 80190f6:	88b9      	ldrh	r1, [r7, #4]
 80190f8:	4401      	add	r1, r0
 80190fa:	b289      	uxth	r1, r1
 80190fc:	fa0f f981 	sxth.w	r9, r1
 8019100:	45c8      	cmp	r8, r9
 8019102:	da55      	bge.n	80191b0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b0>
 8019104:	449e      	add	lr, r3
 8019106:	fa1f fe8e 	uxth.w	lr, lr
 801910a:	fa0f f38e 	sxth.w	r3, lr
 801910e:	4298      	cmp	r0, r3
 8019110:	9307      	str	r3, [sp, #28]
 8019112:	da4d      	bge.n	80191b0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b0>
 8019114:	f9b7 c002 	ldrsh.w	ip, [r7, #2]
 8019118:	88fb      	ldrh	r3, [r7, #6]
 801911a:	4463      	add	r3, ip
 801911c:	b29b      	uxth	r3, r3
 801911e:	b21f      	sxth	r7, r3
 8019120:	45ba      	cmp	sl, r7
 8019122:	da45      	bge.n	80191b0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b0>
 8019124:	4416      	add	r6, r2
 8019126:	b2b2      	uxth	r2, r6
 8019128:	b216      	sxth	r6, r2
 801912a:	45b4      	cmp	ip, r6
 801912c:	9608      	str	r6, [sp, #32]
 801912e:	da3f      	bge.n	80191b0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b0>
 8019130:	4540      	cmp	r0, r8
 8019132:	9e07      	ldr	r6, [sp, #28]
 8019134:	bfb8      	it	lt
 8019136:	4640      	movlt	r0, r8
 8019138:	45d4      	cmp	ip, sl
 801913a:	bfb8      	it	lt
 801913c:	46d4      	movlt	ip, sl
 801913e:	45b1      	cmp	r9, r6
 8019140:	bfc8      	it	gt
 8019142:	4671      	movgt	r1, lr
 8019144:	9e08      	ldr	r6, [sp, #32]
 8019146:	f8df 8060 	ldr.w	r8, [pc, #96]	@ 80191a8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1a8>
 801914a:	42b7      	cmp	r7, r6
 801914c:	bfc8      	it	gt
 801914e:	4613      	movgt	r3, r2
 8019150:	f8df e058 	ldr.w	lr, [pc, #88]	@ 80191ac <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1ac>
 8019154:	b282      	uxth	r2, r0
 8019156:	eba3 030c 	sub.w	r3, r3, ip
 801915a:	1a8f      	subs	r7, r1, r2
 801915c:	f8b8 a000 	ldrh.w	sl, [r8]
 8019160:	f8be 9000 	ldrh.w	r9, [lr]
 8019164:	b21b      	sxth	r3, r3
 8019166:	b23f      	sxth	r7, r7
 8019168:	2800      	cmp	r0, #0
 801916a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801916e:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8019172:	f8ad c032 	strh.w	ip, [sp, #50]	@ 0x32
 8019176:	f8ad 7034 	strh.w	r7, [sp, #52]	@ 0x34
 801917a:	fa0f f88a 	sxth.w	r8, sl
 801917e:	fa0f fe89 	sxth.w	lr, r9
 8019182:	f280 8115 	bge.w	80193b0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3b0>
 8019186:	2200      	movs	r2, #0
 8019188:	f04f 0600 	mov.w	r6, #0
 801918c:	b20f      	sxth	r7, r1
 801918e:	4610      	mov	r0, r2
 8019190:	4639      	mov	r1, r7
 8019192:	f8ad 7034 	strh.w	r7, [sp, #52]	@ 0x34
 8019196:	f8ad 6030 	strh.w	r6, [sp, #48]	@ 0x30
 801919a:	e01b      	b.n	80191d4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1d4>
 801919c:	2004bf98 	.word	0x2004bf98
 80191a0:	08015349 	.word	0x08015349
 80191a4:	080182d9 	.word	0x080182d9
 80191a8:	2004bf8c 	.word	0x2004bf8c
 80191ac:	2004bf8e 	.word	0x2004bf8e
 80191b0:	2300      	movs	r3, #0
 80191b2:	489f      	ldr	r0, [pc, #636]	@ (8019430 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x430>)
 80191b4:	499f      	ldr	r1, [pc, #636]	@ (8019434 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x434>)
 80191b6:	f8b0 a000 	ldrh.w	sl, [r0]
 80191ba:	f8b1 9000 	ldrh.w	r9, [r1]
 80191be:	461a      	mov	r2, r3
 80191c0:	469c      	mov	ip, r3
 80191c2:	4618      	mov	r0, r3
 80191c4:	4619      	mov	r1, r3
 80191c6:	461f      	mov	r7, r3
 80191c8:	e9cd 330c 	strd	r3, r3, [sp, #48]	@ 0x30
 80191cc:	fa0f f88a 	sxth.w	r8, sl
 80191d0:	fa0f fe89 	sxth.w	lr, r9
 80191d4:	eba8 0000 	sub.w	r0, r8, r0
 80191d8:	4288      	cmp	r0, r1
 80191da:	da04      	bge.n	80191e6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1e6>
 80191dc:	ebaa 0702 	sub.w	r7, sl, r2
 80191e0:	b23f      	sxth	r7, r7
 80191e2:	f8ad 7034 	strh.w	r7, [sp, #52]	@ 0x34
 80191e6:	f1bc 0f00 	cmp.w	ip, #0
 80191ea:	f2c0 80c2 	blt.w	8019372 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x372>
 80191ee:	4661      	mov	r1, ip
 80191f0:	ebae 0e01 	sub.w	lr, lr, r1
 80191f4:	4573      	cmp	r3, lr
 80191f6:	dd04      	ble.n	8019202 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x202>
 80191f8:	eba9 030c 	sub.w	r3, r9, ip
 80191fc:	b21b      	sxth	r3, r3
 80191fe:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8019202:	2f00      	cmp	r7, #0
 8019204:	f340 80b1 	ble.w	801936a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x36a>
 8019208:	2b00      	cmp	r3, #0
 801920a:	f340 80ae 	ble.w	801936a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x36a>
 801920e:	f04f 0e00 	mov.w	lr, #0
 8019212:	f8ad 303e 	strh.w	r3, [sp, #62]	@ 0x3e
 8019216:	9b05      	ldr	r3, [sp, #20]
 8019218:	8868      	ldrh	r0, [r5, #2]
 801921a:	8829      	ldrh	r1, [r5, #0]
 801921c:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8019220:	9b06      	ldr	r3, [sp, #24]
 8019222:	1a52      	subs	r2, r2, r1
 8019224:	ebac 0c00 	sub.w	ip, ip, r0
 8019228:	a910      	add	r1, sp, #64	@ 0x40
 801922a:	a80e      	add	r0, sp, #56	@ 0x38
 801922c:	f8ad 3046 	strh.w	r3, [sp, #70]	@ 0x46
 8019230:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8019234:	f8ad c03a 	strh.w	ip, [sp, #58]	@ 0x3a
 8019238:	f8cd e040 	str.w	lr, [sp, #64]	@ 0x40
 801923c:	f8ad 703c 	strh.w	r7, [sp, #60]	@ 0x3c
 8019240:	f7f6 f8f6 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019244:	a80c      	add	r0, sp, #48	@ 0x30
 8019246:	f7f6 f8cb 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801924a:	a810      	add	r0, sp, #64	@ 0x40
 801924c:	f7f6 f8c8 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019250:	4b79      	ldr	r3, [pc, #484]	@ (8019438 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x438>)
 8019252:	681b      	ldr	r3, [r3, #0]
 8019254:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8019258:	2a00      	cmp	r2, #0
 801925a:	f040 80a4 	bne.w	80193a6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3a6>
 801925e:	6898      	ldr	r0, [r3, #8]
 8019260:	6803      	ldr	r3, [r0, #0]
 8019262:	4a76      	ldr	r2, [pc, #472]	@ (801943c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x43c>)
 8019264:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019266:	4293      	cmp	r3, r2
 8019268:	f040 80b0 	bne.w	80193cc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3cc>
 801926c:	7a00      	ldrb	r0, [r0, #8]
 801926e:	2801      	cmp	r0, #1
 8019270:	f000 80a5 	beq.w	80193be <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3be>
 8019274:	f0c0 809e 	bcc.w	80193b4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3b4>
 8019278:	2802      	cmp	r0, #2
 801927a:	f040 80d2 	bne.w	8019422 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x422>
 801927e:	f04f 0810 	mov.w	r8, #16
 8019282:	f04f 0a04 	mov.w	sl, #4
 8019286:	6823      	ldr	r3, [r4, #0]
 8019288:	4a6d      	ldr	r2, [pc, #436]	@ (8019440 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x440>)
 801928a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801928c:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	@ 0x44
 8019290:	4293      	cmp	r3, r2
 8019292:	fb0a f707 	mul.w	r7, sl, r7
 8019296:	f040 809b 	bne.w	80193d0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d0>
 801929a:	4b6a      	ldr	r3, [pc, #424]	@ (8019444 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x444>)
 801929c:	881b      	ldrh	r3, [r3, #0]
 801929e:	2b00      	cmp	r3, #0
 80192a0:	f000 80b8 	beq.w	8019414 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x414>
 80192a4:	7a22      	ldrb	r2, [r4, #8]
 80192a6:	2a02      	cmp	r2, #2
 80192a8:	f000 808e 	beq.w	80193c8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3c8>
 80192ac:	2a01      	cmp	r2, #1
 80192ae:	bf14      	ite	ne
 80192b0:	2402      	movne	r4, #2
 80192b2:	2403      	moveq	r4, #3
 80192b4:	fb13 f404 	smulbb	r4, r3, r4
 80192b8:	b2a4      	uxth	r4, r4
 80192ba:	4a5f      	ldr	r2, [pc, #380]	@ (8019438 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x438>)
 80192bc:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 80192c0:	f9bd 903a 	ldrsh.w	r9, [sp, #58]	@ 0x3a
 80192c4:	6810      	ldr	r0, [r2, #0]
 80192c6:	fb07 3909 	mla	r9, r7, r9, r3
 80192ca:	6803      	ldr	r3, [r0, #0]
 80192cc:	4e5e      	ldr	r6, [pc, #376]	@ (8019448 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x448>)
 80192ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80192d0:	4798      	blx	r3
 80192d2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80192d6:	f9bd 5030 	ldrsh.w	r5, [sp, #48]	@ 0x30
 80192da:	fb04 f303 	mul.w	r3, r4, r3
 80192de:	fb0a 3505 	mla	r5, sl, r5, r3
 80192e2:	4405      	add	r5, r0
 80192e4:	6830      	ldr	r0, [r6, #0]
 80192e6:	44d9      	add	r9, fp
 80192e8:	2800      	cmp	r0, #0
 80192ea:	d075      	beq.n	80193d8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d8>
 80192ec:	f7fb ffba 	bl	8015264 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 80192f0:	9700      	str	r7, [sp, #0]
 80192f2:	2700      	movs	r7, #0
 80192f4:	f9bd 203e 	ldrsh.w	r2, [sp, #62]	@ 0x3e
 80192f8:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 80192fc:	4648      	mov	r0, r9
 80192fe:	4643      	mov	r3, r8
 8019300:	f7f9 fc34 	bl	8012b6c <nema_bind_dst_tex>
 8019304:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 8019308:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801930c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8019310:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8019314:	f7f9 fb6a 	bl	80129ec <nema_set_clip>
 8019318:	f04f 33ff 	mov.w	r3, #4294967295
 801931c:	2201      	movs	r2, #1
 801931e:	2100      	movs	r1, #0
 8019320:	f240 5004 	movw	r0, #1284	@ 0x504
 8019324:	f7fb fad2 	bl	80148cc <nema_set_blend>
 8019328:	f9bd 2036 	ldrsh.w	r2, [sp, #54]	@ 0x36
 801932c:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	@ 0x34
 8019330:	4643      	mov	r3, r8
 8019332:	4628      	mov	r0, r5
 8019334:	9400      	str	r4, [sp, #0]
 8019336:	9701      	str	r7, [sp, #4]
 8019338:	f7f9 fb94 	bl	8012a64 <nema_bind_src_tex>
 801933c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8019340:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8019344:	f7f9 fd1a 	bl	8012d7c <nema_blit>
 8019348:	6830      	ldr	r0, [r6, #0]
 801934a:	2800      	cmp	r0, #0
 801934c:	d044      	beq.n	80193d8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d8>
 801934e:	f7fb ffa9 	bl	80152a4 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8019352:	6830      	ldr	r0, [r6, #0]
 8019354:	2800      	cmp	r0, #0
 8019356:	d03f      	beq.n	80193d8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d8>
 8019358:	6803      	ldr	r3, [r0, #0]
 801935a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801935c:	4798      	blx	r3
 801935e:	6830      	ldr	r0, [r6, #0]
 8019360:	2800      	cmp	r0, #0
 8019362:	d039      	beq.n	80193d8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d8>
 8019364:	6803      	ldr	r3, [r0, #0]
 8019366:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019368:	4798      	blx	r3
 801936a:	4658      	mov	r0, fp
 801936c:	b013      	add	sp, #76	@ 0x4c
 801936e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019372:	2000      	movs	r0, #0
 8019374:	4463      	add	r3, ip
 8019376:	b21b      	sxth	r3, r3
 8019378:	4684      	mov	ip, r0
 801937a:	4601      	mov	r1, r0
 801937c:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8019380:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
 8019384:	e734      	b.n	80191f0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1f0>
 8019386:	9b05      	ldr	r3, [sp, #20]
 8019388:	9002      	str	r0, [sp, #8]
 801938a:	e9cd b300 	strd	fp, r3, [sp]
 801938e:	a810      	add	r0, sp, #64	@ 0x40
 8019390:	462b      	mov	r3, r5
 8019392:	463a      	mov	r2, r7
 8019394:	4621      	mov	r1, r4
 8019396:	47c0      	blx	r8
 8019398:	4658      	mov	r0, fp
 801939a:	b013      	add	sp, #76	@ 0x4c
 801939c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80193a0:	4620      	mov	r0, r4
 80193a2:	4798      	blx	r3
 80193a4:	e648      	b.n	8019038 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x38>
 80193a6:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80193a8:	2800      	cmp	r0, #0
 80193aa:	f47f af59 	bne.w	8019260 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x260>
 80193ae:	e756      	b.n	801925e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x25e>
 80193b0:	4639      	mov	r1, r7
 80193b2:	e70f      	b.n	80191d4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1d4>
 80193b4:	f04f 0804 	mov.w	r8, #4
 80193b8:	f04f 0a02 	mov.w	sl, #2
 80193bc:	e763      	b.n	8019286 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x286>
 80193be:	f04f 0839 	mov.w	r8, #57	@ 0x39
 80193c2:	f04f 0a03 	mov.w	sl, #3
 80193c6:	e75e      	b.n	8019286 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x286>
 80193c8:	2404      	movs	r4, #4
 80193ca:	e773      	b.n	80192b4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x2b4>
 80193cc:	4798      	blx	r3
 80193ce:	e74e      	b.n	801926e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26e>
 80193d0:	4620      	mov	r0, r4
 80193d2:	4798      	blx	r3
 80193d4:	4604      	mov	r4, r0
 80193d6:	e770      	b.n	80192ba <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x2ba>
 80193d8:	4b1c      	ldr	r3, [pc, #112]	@ (801944c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x44c>)
 80193da:	4a1d      	ldr	r2, [pc, #116]	@ (8019450 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x450>)
 80193dc:	217c      	movs	r1, #124	@ 0x7c
 80193de:	481d      	ldr	r0, [pc, #116]	@ (8019454 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x454>)
 80193e0:	f00b fca8 	bl	8024d34 <__assert_func>
 80193e4:	4b1c      	ldr	r3, [pc, #112]	@ (8019458 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x458>)
 80193e6:	4a1d      	ldr	r2, [pc, #116]	@ (801945c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x45c>)
 80193e8:	21f1      	movs	r1, #241	@ 0xf1
 80193ea:	481d      	ldr	r0, [pc, #116]	@ (8019460 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 80193ec:	f00b fca2 	bl	8024d34 <__assert_func>
 80193f0:	4b1c      	ldr	r3, [pc, #112]	@ (8019464 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x464>)
 80193f2:	4a1a      	ldr	r2, [pc, #104]	@ (801945c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x45c>)
 80193f4:	21ef      	movs	r1, #239	@ 0xef
 80193f6:	481a      	ldr	r0, [pc, #104]	@ (8019460 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 80193f8:	f00b fc9c 	bl	8024d34 <__assert_func>
 80193fc:	4b1a      	ldr	r3, [pc, #104]	@ (8019468 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x468>)
 80193fe:	4a17      	ldr	r2, [pc, #92]	@ (801945c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x45c>)
 8019400:	21ed      	movs	r1, #237	@ 0xed
 8019402:	4817      	ldr	r0, [pc, #92]	@ (8019460 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 8019404:	f00b fc96 	bl	8024d34 <__assert_func>
 8019408:	4b17      	ldr	r3, [pc, #92]	@ (8019468 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x468>)
 801940a:	4a18      	ldr	r2, [pc, #96]	@ (801946c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x46c>)
 801940c:	21f8      	movs	r1, #248	@ 0xf8
 801940e:	4814      	ldr	r0, [pc, #80]	@ (8019460 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 8019410:	f00b fc90 	bl	8024d34 <__assert_func>
 8019414:	4b16      	ldr	r3, [pc, #88]	@ (8019470 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x470>)
 8019416:	4a17      	ldr	r2, [pc, #92]	@ (8019474 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x474>)
 8019418:	f240 110f 	movw	r1, #271	@ 0x10f
 801941c:	4816      	ldr	r0, [pc, #88]	@ (8019478 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x478>)
 801941e:	f00b fc89 	bl	8024d34 <__assert_func>
 8019422:	4b16      	ldr	r3, [pc, #88]	@ (801947c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x47c>)
 8019424:	4a11      	ldr	r2, [pc, #68]	@ (801946c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x46c>)
 8019426:	f44f 7191 	mov.w	r1, #290	@ 0x122
 801942a:	480d      	ldr	r0, [pc, #52]	@ (8019460 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 801942c:	f00b fc82 	bl	8024d34 <__assert_func>
 8019430:	2004bf8c 	.word	0x2004bf8c
 8019434:	2004bf8e 	.word	0x2004bf8e
 8019438:	2004bf98 	.word	0x2004bf98
 801943c:	08015349 	.word	0x08015349
 8019440:	08016f29 	.word	0x08016f29
 8019444:	2004bf92 	.word	0x2004bf92
 8019448:	2004c150 	.word	0x2004c150
 801944c:	08027884 	.word	0x08027884
 8019450:	08028130 	.word	0x08028130
 8019454:	080278ac 	.word	0x080278ac
 8019458:	08027d1c 	.word	0x08027d1c
 801945c:	0802929c 	.word	0x0802929c
 8019460:	08027928 	.word	0x08027928
 8019464:	08027cc4 	.word	0x08027cc4
 8019468:	08027b6c 	.word	0x08027b6c
 801946c:	08029208 	.word	0x08029208
 8019470:	08027ea0 	.word	0x08027ea0
 8019474:	08029664 	.word	0x08029664
 8019478:	08027ee4 	.word	0x08027ee4
 801947c:	08027c70 	.word	0x08027c70

08019480 <_ZN8touchgfx8LCDGPU2DC1Ev>:
 8019480:	b410      	push	{r4}
 8019482:	2400      	movs	r4, #0
 8019484:	220d      	movs	r2, #13
 8019486:	4903      	ldr	r1, [pc, #12]	@ (8019494 <_ZN8touchgfx8LCDGPU2DC1Ev+0x14>)
 8019488:	7202      	strb	r2, [r0, #8]
 801948a:	e9c0 1400 	strd	r1, r4, [r0]
 801948e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019492:	4770      	bx	lr
 8019494:	080280d8 	.word	0x080280d8

08019498 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE>:
 8019498:	2902      	cmp	r1, #2
 801949a:	d906      	bls.n	80194aa <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE+0x12>
 801949c:	b508      	push	{r3, lr}
 801949e:	4a04      	ldr	r2, [pc, #16]	@ (80194b0 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE+0x18>)
 80194a0:	4b04      	ldr	r3, [pc, #16]	@ (80194b4 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE+0x1c>)
 80194a2:	212b      	movs	r1, #43	@ 0x2b
 80194a4:	4804      	ldr	r0, [pc, #16]	@ (80194b8 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE+0x20>)
 80194a6:	f00b fc45 	bl	8024d34 <__assert_func>
 80194aa:	7201      	strb	r1, [r0, #8]
 80194ac:	4770      	bx	lr
 80194ae:	bf00      	nop
 80194b0:	08028448 	.word	0x08028448
 80194b4:	080277bc 	.word	0x080277bc
 80194b8:	08027928 	.word	0x08027928

080194bc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 80194bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80194c0:	b093      	sub	sp, #76	@ 0x4c
 80194c2:	4691      	mov	r9, r2
 80194c4:	468a      	mov	sl, r1
 80194c6:	8812      	ldrh	r2, [r2, #0]
 80194c8:	f89d 1074 	ldrb.w	r1, [sp, #116]	@ 0x74
 80194cc:	461c      	mov	r4, r3
 80194ce:	910a      	str	r1, [sp, #40]	@ 0x28
 80194d0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80194d2:	2a00      	cmp	r2, #0
 80194d4:	f040 8109 	bne.w	80196ea <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x22e>
 80194d8:	6820      	ldr	r0, [r4, #0]
 80194da:	6861      	ldr	r1, [r4, #4]
 80194dc:	aa0e      	add	r2, sp, #56	@ 0x38
 80194de:	c203      	stmia	r2!, {r0, r1}
 80194e0:	6818      	ldr	r0, [r3, #0]
 80194e2:	6859      	ldr	r1, [r3, #4]
 80194e4:	aa10      	add	r2, sp, #64	@ 0x40
 80194e6:	c203      	stmia	r2!, {r0, r1}
 80194e8:	a80e      	add	r0, sp, #56	@ 0x38
 80194ea:	f7f5 ff79 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80194ee:	4621      	mov	r1, r4
 80194f0:	a810      	add	r0, sp, #64	@ 0x40
 80194f2:	f7f5 ff9d 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80194f6:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	@ 0x40
 80194fa:	f9bd 5042 	ldrsh.w	r5, [sp, #66]	@ 0x42
 80194fe:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8019502:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8019506:	487c      	ldr	r0, [pc, #496]	@ (80196f8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8019508:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 801950c:	4422      	add	r2, r4
 801950e:	442b      	add	r3, r5
 8019510:	6800      	ldr	r0, [r0, #0]
 8019512:	fb11 4105 	smlabb	r1, r1, r5, r4
 8019516:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801951a:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 801951e:	6802      	ldr	r2, [r0, #0]
 8019520:	4d76      	ldr	r5, [pc, #472]	@ (80196fc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8019522:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8019526:	448a      	add	sl, r1
 8019528:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 801952c:	42ab      	cmp	r3, r5
 801952e:	910b      	str	r1, [sp, #44]	@ 0x2c
 8019530:	f9bd 4046 	ldrsh.w	r4, [sp, #70]	@ 0x46
 8019534:	f040 80a6 	bne.w	8019684 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1c8>
 8019538:	6841      	ldr	r1, [r0, #4]
 801953a:	4d71      	ldr	r5, [pc, #452]	@ (8019700 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x244>)
 801953c:	680b      	ldr	r3, [r1, #0]
 801953e:	699b      	ldr	r3, [r3, #24]
 8019540:	42ab      	cmp	r3, r5
 8019542:	f040 80c4 	bne.w	80196ce <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x212>
 8019546:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8019548:	4798      	blx	r3
 801954a:	4b6e      	ldr	r3, [pc, #440]	@ (8019704 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 801954c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8019550:	881b      	ldrh	r3, [r3, #0]
 8019552:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8019556:	fb03 f404 	mul.w	r4, r3, r4
 801955a:	fb03 1202 	mla	r2, r3, r2, r1
 801955e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8019562:	eb00 0244 	add.w	r2, r0, r4, lsl #1
 8019566:	4290      	cmp	r0, r2
 8019568:	920c      	str	r2, [sp, #48]	@ 0x30
 801956a:	f080 8083 	bcs.w	8019674 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1b8>
 801956e:	f04f 0b04 	mov.w	fp, #4
 8019572:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019574:	0052      	lsls	r2, r2, #1
 8019576:	920d      	str	r2, [sp, #52]	@ 0x34
 8019578:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801957a:	eb00 0802 	add.w	r8, r0, r2
 801957e:	4580      	cmp	r8, r0
 8019580:	d96d      	bls.n	801965e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a2>
 8019582:	4684      	mov	ip, r0
 8019584:	f10a 3eff 	add.w	lr, sl, #4294967295
 8019588:	e03e      	b.n	8019608 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x14c>
 801958a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801958c:	f3c5 4707 	ubfx	r7, r5, #16, #8
 8019590:	fb02 f303 	mul.w	r3, r2, r3
 8019594:	1c59      	adds	r1, r3, #1
 8019596:	eb01 2323 	add.w	r3, r1, r3, asr #8
 801959a:	121b      	asrs	r3, r3, #8
 801959c:	43da      	mvns	r2, r3
 801959e:	b299      	uxth	r1, r3
 80195a0:	b2f6      	uxtb	r6, r6
 80195a2:	b2eb      	uxtb	r3, r5
 80195a4:	fb17 f701 	smulbb	r7, r7, r1
 80195a8:	f8bc 5000 	ldrh.w	r5, [ip]
 80195ac:	fb13 f301 	smulbb	r3, r3, r1
 80195b0:	fb16 f601 	smulbb	r6, r6, r1
 80195b4:	122c      	asrs	r4, r5, #8
 80195b6:	10e9      	asrs	r1, r5, #3
 80195b8:	00ed      	lsls	r5, r5, #3
 80195ba:	b2d2      	uxtb	r2, r2
 80195bc:	b2ed      	uxtb	r5, r5
 80195be:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80195c2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80195c6:	fb04 7402 	mla	r4, r4, r2, r7
 80195ca:	fb01 6102 	mla	r1, r1, r2, r6
 80195ce:	fb05 3202 	mla	r2, r5, r2, r3
 80195d2:	b2a4      	uxth	r4, r4
 80195d4:	b292      	uxth	r2, r2
 80195d6:	b289      	uxth	r1, r1
 80195d8:	1c55      	adds	r5, r2, #1
 80195da:	1c67      	adds	r7, r4, #1
 80195dc:	1c4b      	adds	r3, r1, #1
 80195de:	eb05 2512 	add.w	r5, r5, r2, lsr #8
 80195e2:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 80195e6:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80195ea:	f404 4278 	and.w	r2, r4, #63488	@ 0xf800
 80195ee:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80195f2:	095b      	lsrs	r3, r3, #5
 80195f4:	432a      	orrs	r2, r5
 80195f6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80195fa:	431a      	orrs	r2, r3
 80195fc:	f8ac 2000 	strh.w	r2, [ip]
 8019600:	f10c 0c02 	add.w	ip, ip, #2
 8019604:	45e0      	cmp	r8, ip
 8019606:	d91f      	bls.n	8019648 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x18c>
 8019608:	f81e 3f01 	ldrb.w	r3, [lr, #1]!
 801960c:	fb1b b303 	smlabb	r3, fp, r3, fp
 8019610:	f859 5003 	ldr.w	r5, [r9, r3]
 8019614:	0e2b      	lsrs	r3, r5, #24
 8019616:	d0f3      	beq.n	8019600 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x144>
 8019618:	2bff      	cmp	r3, #255	@ 0xff
 801961a:	ea4f 2615 	mov.w	r6, r5, lsr #8
 801961e:	d1b4      	bne.n	801958a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xce>
 8019620:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019622:	2aff      	cmp	r2, #255	@ 0xff
 8019624:	d1b1      	bne.n	801958a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xce>
 8019626:	096b      	lsrs	r3, r5, #5
 8019628:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801962c:	f026 0607 	bic.w	r6, r6, #7
 8019630:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019634:	431e      	orrs	r6, r3
 8019636:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801963a:	4335      	orrs	r5, r6
 801963c:	f8ac 5000 	strh.w	r5, [ip]
 8019640:	f10c 0c02 	add.w	ip, ip, #2
 8019644:	45e0      	cmp	r8, ip
 8019646:	d8df      	bhi.n	8019608 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x14c>
 8019648:	43c3      	mvns	r3, r0
 801964a:	4498      	add	r8, r3
 801964c:	4b2d      	ldr	r3, [pc, #180]	@ (8019704 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 801964e:	ea4f 0858 	mov.w	r8, r8, lsr #1
 8019652:	f108 0801 	add.w	r8, r8, #1
 8019656:	881b      	ldrh	r3, [r3, #0]
 8019658:	eb00 0048 	add.w	r0, r0, r8, lsl #1
 801965c:	44c2      	add	sl, r8
 801965e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019660:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8019664:	1b19      	subs	r1, r3, r4
 8019666:	1b12      	subs	r2, r2, r4
 8019668:	4492      	add	sl, r2
 801966a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801966c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8019670:	4282      	cmp	r2, r0
 8019672:	d881      	bhi.n	8019578 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xbc>
 8019674:	4b20      	ldr	r3, [pc, #128]	@ (80196f8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8019676:	6818      	ldr	r0, [r3, #0]
 8019678:	6803      	ldr	r3, [r0, #0]
 801967a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801967c:	4798      	blx	r3
 801967e:	b013      	add	sp, #76	@ 0x4c
 8019680:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019684:	4798      	blx	r3
 8019686:	4603      	mov	r3, r0
 8019688:	2b01      	cmp	r3, #1
 801968a:	d124      	bne.n	80196d6 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x21a>
 801968c:	4a1e      	ldr	r2, [pc, #120]	@ (8019708 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 801968e:	6810      	ldr	r0, [r2, #0]
 8019690:	b328      	cbz	r0, 80196de <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x222>
 8019692:	2700      	movs	r7, #0
 8019694:	260b      	movs	r6, #11
 8019696:	4a1b      	ldr	r2, [pc, #108]	@ (8019704 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 8019698:	b2a1      	uxth	r1, r4
 801969a:	8814      	ldrh	r4, [r2, #0]
 801969c:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 80196a0:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 80196a4:	e9cd 2101 	strd	r2, r1, [sp, #4]
 80196a8:	9406      	str	r4, [sp, #24]
 80196aa:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80196ac:	f8bd 4042 	ldrh.w	r4, [sp, #66]	@ 0x42
 80196b0:	9305      	str	r3, [sp, #20]
 80196b2:	9204      	str	r2, [sp, #16]
 80196b4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 80196b8:	464a      	mov	r2, r9
 80196ba:	4651      	mov	r1, sl
 80196bc:	e9cd 6707 	strd	r6, r7, [sp, #28]
 80196c0:	9503      	str	r5, [sp, #12]
 80196c2:	9400      	str	r4, [sp, #0]
 80196c4:	f7fb fdf6 	bl	80152b4 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80196c8:	b013      	add	sp, #76	@ 0x4c
 80196ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80196ce:	4608      	mov	r0, r1
 80196d0:	4798      	blx	r3
 80196d2:	4603      	mov	r3, r0
 80196d4:	e7d8      	b.n	8019688 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1cc>
 80196d6:	4b08      	ldr	r3, [pc, #32]	@ (80196f8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 80196d8:	6818      	ldr	r0, [r3, #0]
 80196da:	6802      	ldr	r2, [r0, #0]
 80196dc:	e733      	b.n	8019546 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 80196de:	4b0b      	ldr	r3, [pc, #44]	@ (801970c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x250>)
 80196e0:	4a0b      	ldr	r2, [pc, #44]	@ (8019710 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x254>)
 80196e2:	217c      	movs	r1, #124	@ 0x7c
 80196e4:	480b      	ldr	r0, [pc, #44]	@ (8019714 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 80196e6:	f00b fb25 	bl	8024d34 <__assert_func>
 80196ea:	4b0b      	ldr	r3, [pc, #44]	@ (8019718 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 80196ec:	4a0b      	ldr	r2, [pc, #44]	@ (801971c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x260>)
 80196ee:	f240 413a 	movw	r1, #1082	@ 0x43a
 80196f2:	480b      	ldr	r0, [pc, #44]	@ (8019720 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x264>)
 80196f4:	f00b fb1e 	bl	8024d34 <__assert_func>
 80196f8:	2004bf98 	.word	0x2004bf98
 80196fc:	08001829 	.word	0x08001829
 8019700:	0800e31d 	.word	0x0800e31d
 8019704:	2004bf92 	.word	0x2004bf92
 8019708:	2004c150 	.word	0x2004c150
 801970c:	08027884 	.word	0x08027884
 8019710:	08028130 	.word	0x08028130
 8019714:	080278ac 	.word	0x080278ac
 8019718:	080279dc 	.word	0x080279dc
 801971c:	08028760 	.word	0x08028760
 8019720:	08027928 	.word	0x08027928

08019724 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih>:
 8019724:	b4f0      	push	{r4, r5, r6, r7}
 8019726:	7a05      	ldrb	r5, [r0, #8]
 8019728:	f89d 6010 	ldrb.w	r6, [sp, #16]
 801972c:	3d01      	subs	r5, #1
 801972e:	2eff      	cmp	r6, #255	@ 0xff
 8019730:	fa5f fc81 	uxtb.w	ip, r1
 8019734:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8019738:	b2ed      	uxtb	r5, r5
 801973a:	ea4f 4111 	mov.w	r1, r1, lsr #16
 801973e:	d041      	beq.n	80197c4 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xa0>
 8019740:	fb16 f603 	smulbb	r6, r6, r3
 8019744:	b2b6      	uxth	r6, r6
 8019746:	1c74      	adds	r4, r6, #1
 8019748:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801974c:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8019750:	43e6      	mvns	r6, r4
 8019752:	b2a4      	uxth	r4, r4
 8019754:	fb1c fc04 	smulbb	ip, ip, r4
 8019758:	b2ff      	uxtb	r7, r7
 801975a:	fb17 f704 	smulbb	r7, r7, r4
 801975e:	00d0      	lsls	r0, r2, #3
 8019760:	b2c0      	uxtb	r0, r0
 8019762:	10d3      	asrs	r3, r2, #3
 8019764:	b2f6      	uxtb	r6, r6
 8019766:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801976a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801976e:	fb00 c006 	mla	r0, r0, r6, ip
 8019772:	ea43 1393 	orr.w	r3, r3, r3, lsr #6
 8019776:	fb03 7306 	mla	r3, r3, r6, r7
 801977a:	b280      	uxth	r0, r0
 801977c:	b29b      	uxth	r3, r3
 801977e:	1c47      	adds	r7, r0, #1
 8019780:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8019784:	f103 0c01 	add.w	ip, r3, #1
 8019788:	2d01      	cmp	r5, #1
 801978a:	f3c0 2707 	ubfx	r7, r0, #8, #8
 801978e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8019792:	d926      	bls.n	80197e2 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xbe>
 8019794:	b2c9      	uxtb	r1, r1
 8019796:	fb11 f404 	smulbb	r4, r1, r4
 801979a:	1212      	asrs	r2, r2, #8
 801979c:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80197a0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80197a4:	fb02 4206 	mla	r2, r2, r6, r4
 80197a8:	b292      	uxth	r2, r2
 80197aa:	1c50      	adds	r0, r2, #1
 80197ac:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80197b0:	095b      	lsrs	r3, r3, #5
 80197b2:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80197b6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80197ba:	ea40 00d7 	orr.w	r0, r0, r7, lsr #3
 80197be:	4318      	orrs	r0, r3
 80197c0:	bcf0      	pop	{r4, r5, r6, r7}
 80197c2:	4770      	bx	lr
 80197c4:	2bff      	cmp	r3, #255	@ 0xff
 80197c6:	d1bb      	bne.n	8019740 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0x1c>
 80197c8:	2d01      	cmp	r5, #1
 80197ca:	d910      	bls.n	80197ee <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xca>
 80197cc:	4a0a      	ldr	r2, [pc, #40]	@ (80197f8 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xd4>)
 80197ce:	00f8      	lsls	r0, r7, #3
 80197d0:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 80197d4:	f400 67fc 	and.w	r7, r0, #2016	@ 0x7e0
 80197d8:	ea41 00dc 	orr.w	r0, r1, ip, lsr #3
 80197dc:	4338      	orrs	r0, r7
 80197de:	b280      	uxth	r0, r0
 80197e0:	e7ee      	b.n	80197c0 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0x9c>
 80197e2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80197e6:	ea43 0007 	orr.w	r0, r3, r7
 80197ea:	bcf0      	pop	{r4, r5, r6, r7}
 80197ec:	4770      	bx	lr
 80197ee:	ea4c 2007 	orr.w	r0, ip, r7, lsl #8
 80197f2:	b280      	uxth	r0, r0
 80197f4:	e7e4      	b.n	80197c0 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0x9c>
 80197f6:	bf00      	nop
 80197f8:	fffff800 	.word	0xfffff800

080197fc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 80197fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019800:	b093      	sub	sp, #76	@ 0x4c
 8019802:	4614      	mov	r4, r2
 8019804:	460d      	mov	r5, r1
 8019806:	7812      	ldrb	r2, [r2, #0]
 8019808:	f89d 1074 	ldrb.w	r1, [sp, #116]	@ 0x74
 801980c:	461e      	mov	r6, r3
 801980e:	9002      	str	r0, [sp, #8]
 8019810:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019812:	9109      	str	r1, [sp, #36]	@ 0x24
 8019814:	2a00      	cmp	r2, #0
 8019816:	f040 81c9 	bne.w	8019bac <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3b0>
 801981a:	6830      	ldr	r0, [r6, #0]
 801981c:	6871      	ldr	r1, [r6, #4]
 801981e:	aa0e      	add	r2, sp, #56	@ 0x38
 8019820:	c203      	stmia	r2!, {r0, r1}
 8019822:	6818      	ldr	r0, [r3, #0]
 8019824:	6859      	ldr	r1, [r3, #4]
 8019826:	aa10      	add	r2, sp, #64	@ 0x40
 8019828:	c203      	stmia	r2!, {r0, r1}
 801982a:	a80e      	add	r0, sp, #56	@ 0x38
 801982c:	f7f5 fdd8 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019830:	4631      	mov	r1, r6
 8019832:	a810      	add	r0, sp, #64	@ 0x40
 8019834:	f7f5 fdfc 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019838:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 801983c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8019840:	f003 0201 	and.w	r2, r3, #1
 8019844:	4617      	mov	r7, r2
 8019846:	920a      	str	r2, [sp, #40]	@ 0x28
 8019848:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801984c:	f8bd 003a 	ldrh.w	r0, [sp, #58]	@ 0x3a
 8019850:	443b      	add	r3, r7
 8019852:	fb02 1303 	mla	r3, r2, r3, r1
 8019856:	f8bd 6038 	ldrh.w	r6, [sp, #56]	@ 0x38
 801985a:	4402      	add	r2, r0
 801985c:	48d0      	ldr	r0, [pc, #832]	@ (8019ba0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a4>)
 801985e:	440e      	add	r6, r1
 8019860:	6800      	ldr	r0, [r0, #0]
 8019862:	f8ad 6040 	strh.w	r6, [sp, #64]	@ 0x40
 8019866:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 801986a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801986e:	eb05 0363 	add.w	r3, r5, r3, asr #1
 8019872:	6802      	ldr	r2, [r0, #0]
 8019874:	f9bd 6044 	ldrsh.w	r6, [sp, #68]	@ 0x44
 8019878:	9304      	str	r3, [sp, #16]
 801987a:	f001 0301 	and.w	r3, r1, #1
 801987e:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8019880:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019882:	9608      	str	r6, [sp, #32]
 8019884:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8019888:	4790      	blx	r2
 801988a:	4ac6      	ldr	r2, [pc, #792]	@ (8019ba4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a8>)
 801988c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8019890:	8812      	ldrh	r2, [r2, #0]
 8019892:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8019896:	fb05 f502 	mul.w	r5, r5, r2
 801989a:	fb02 1303 	mla	r3, r2, r3, r1
 801989e:	eb00 0843 	add.w	r8, r0, r3, lsl #1
 80198a2:	eb08 0345 	add.w	r3, r8, r5, lsl #1
 80198a6:	4598      	cmp	r8, r3
 80198a8:	930c      	str	r3, [sp, #48]	@ 0x30
 80198aa:	f104 0404 	add.w	r4, r4, #4
 80198ae:	f080 8144 	bcs.w	8019b3a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x33e>
 80198b2:	1e73      	subs	r3, r6, #1
 80198b4:	930d      	str	r3, [sp, #52]	@ 0x34
 80198b6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80198b8:	2b00      	cmp	r3, #0
 80198ba:	f000 8164 	beq.w	8019b86 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x38a>
 80198be:	9a04      	ldr	r2, [sp, #16]
 80198c0:	7813      	ldrb	r3, [r2, #0]
 80198c2:	3201      	adds	r2, #1
 80198c4:	f003 030f 	and.w	r3, r3, #15
 80198c8:	f854 1023 	ldr.w	r1, [r4, r3, lsl #2]
 80198cc:	9203      	str	r2, [sp, #12]
 80198ce:	0e0b      	lsrs	r3, r1, #24
 80198d0:	d008      	beq.n	80198e4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xe8>
 80198d2:	f8b8 2000 	ldrh.w	r2, [r8]
 80198d6:	9802      	ldr	r0, [sp, #8]
 80198d8:	9300      	str	r3, [sp, #0]
 80198da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80198dc:	f7ff ff22 	bl	8019724 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih>
 80198e0:	f8a8 0000 	strh.w	r0, [r8]
 80198e4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80198e6:	f108 0802 	add.w	r8, r8, #2
 80198ea:	2b01      	cmp	r3, #1
 80198ec:	f340 80fd 	ble.w	8019aea <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ee>
 80198f0:	3b02      	subs	r3, #2
 80198f2:	9a03      	ldr	r2, [sp, #12]
 80198f4:	9306      	str	r3, [sp, #24]
 80198f6:	085b      	lsrs	r3, r3, #1
 80198f8:	9305      	str	r3, [sp, #20]
 80198fa:	eb02 0e03 	add.w	lr, r2, r3
 80198fe:	f108 0704 	add.w	r7, r8, #4
 8019902:	f102 3cff 	add.w	ip, r2, #4294967295
 8019906:	f8cd 801c 	str.w	r8, [sp, #28]
 801990a:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 801990e:	e0b2      	b.n	8019a76 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x27a>
 8019910:	fb05 f50a 	mul.w	r5, r5, sl
 8019914:	1c6a      	adds	r2, r5, #1
 8019916:	eb02 2525 	add.w	r5, r2, r5, asr #8
 801991a:	122d      	asrs	r5, r5, #8
 801991c:	43ee      	mvns	r6, r5
 801991e:	b2ad      	uxth	r5, r5
 8019920:	fa5f fb8b 	uxtb.w	fp, fp
 8019924:	fb13 f305 	smulbb	r3, r3, r5
 8019928:	fb1b fb05 	smulbb	fp, fp, r5
 801992c:	ea4f 00c8 	mov.w	r0, r8, lsl #3
 8019930:	b2c0      	uxtb	r0, r0
 8019932:	ea4f 02e8 	mov.w	r2, r8, asr #3
 8019936:	b2f6      	uxtb	r6, r6
 8019938:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801993c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8019940:	fb00 3306 	mla	r3, r0, r6, r3
 8019944:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8019948:	fb02 bb06 	mla	fp, r2, r6, fp
 801994c:	b29b      	uxth	r3, r3
 801994e:	fa1f fb8b 	uxth.w	fp, fp
 8019952:	1c58      	adds	r0, r3, #1
 8019954:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8019958:	f10b 0201 	add.w	r2, fp, #1
 801995c:	f1b9 0f01 	cmp.w	r9, #1
 8019960:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019964:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8019968:	f240 8108 	bls.w	8019b7c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x380>
 801996c:	b2c9      	uxtb	r1, r1
 801996e:	fb11 f505 	smulbb	r5, r1, r5
 8019972:	ea4f 2828 	mov.w	r8, r8, asr #8
 8019976:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801997a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801997e:	fb08 5806 	mla	r8, r8, r6, r5
 8019982:	fa1f f888 	uxth.w	r8, r8
 8019986:	f108 0101 	add.w	r1, r8, #1
 801998a:	eb01 2118 	add.w	r1, r1, r8, lsr #8
 801998e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019992:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8019996:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801999a:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 801999e:	ea43 030b 	orr.w	r3, r3, fp
 80199a2:	f827 3c04 	strh.w	r3, [r7, #-4]
 80199a6:	f89c 2000 	ldrb.w	r2, [ip]
 80199aa:	f002 020f 	and.w	r2, r2, #15
 80199ae:	f854 3022 	ldr.w	r3, [r4, r2, lsl #2]
 80199b2:	0e1d      	lsrs	r5, r3, #24
 80199b4:	d05b      	beq.n	8019a6e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x272>
 80199b6:	9a02      	ldr	r2, [sp, #8]
 80199b8:	2dff      	cmp	r5, #255	@ 0xff
 80199ba:	f892 9008 	ldrb.w	r9, [r2, #8]
 80199be:	ea4f 4113 	mov.w	r1, r3, lsr #16
 80199c2:	f109 39ff 	add.w	r9, r9, #4294967295
 80199c6:	ea4f 2b13 	mov.w	fp, r3, lsr #8
 80199ca:	f837 8c02 	ldrh.w	r8, [r7, #-2]
 80199ce:	fa5f f989 	uxtb.w	r9, r9
 80199d2:	b2db      	uxtb	r3, r3
 80199d4:	f000 80b9 	beq.w	8019b4a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x34e>
 80199d8:	fb05 f50a 	mul.w	r5, r5, sl
 80199dc:	1c6a      	adds	r2, r5, #1
 80199de:	eb02 2525 	add.w	r5, r2, r5, asr #8
 80199e2:	122d      	asrs	r5, r5, #8
 80199e4:	43ee      	mvns	r6, r5
 80199e6:	b2ad      	uxth	r5, r5
 80199e8:	fa5f fb8b 	uxtb.w	fp, fp
 80199ec:	fb13 f305 	smulbb	r3, r3, r5
 80199f0:	fb1b fb05 	smulbb	fp, fp, r5
 80199f4:	ea4f 00c8 	mov.w	r0, r8, lsl #3
 80199f8:	b2c0      	uxtb	r0, r0
 80199fa:	ea4f 02e8 	mov.w	r2, r8, asr #3
 80199fe:	b2f6      	uxtb	r6, r6
 8019a00:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8019a04:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8019a08:	fb00 3306 	mla	r3, r0, r6, r3
 8019a0c:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8019a10:	fb02 bb06 	mla	fp, r2, r6, fp
 8019a14:	b29b      	uxth	r3, r3
 8019a16:	fa1f fb8b 	uxth.w	fp, fp
 8019a1a:	1c58      	adds	r0, r3, #1
 8019a1c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8019a20:	f10b 0201 	add.w	r2, fp, #1
 8019a24:	f1b9 0f01 	cmp.w	r9, #1
 8019a28:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019a2c:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8019a30:	f240 809f 	bls.w	8019b72 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x376>
 8019a34:	b2c9      	uxtb	r1, r1
 8019a36:	fb11 f505 	smulbb	r5, r1, r5
 8019a3a:	ea4f 2828 	mov.w	r8, r8, asr #8
 8019a3e:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8019a42:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8019a46:	fb08 5806 	mla	r8, r8, r6, r5
 8019a4a:	fa1f f888 	uxth.w	r8, r8
 8019a4e:	f108 0101 	add.w	r1, r8, #1
 8019a52:	eb01 2118 	add.w	r1, r1, r8, lsr #8
 8019a56:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019a5a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8019a5e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8019a62:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8019a66:	ea43 030b 	orr.w	r3, r3, fp
 8019a6a:	f827 3c02 	strh.w	r3, [r7, #-2]
 8019a6e:	45e6      	cmp	lr, ip
 8019a70:	f107 0704 	add.w	r7, r7, #4
 8019a74:	d02b      	beq.n	8019ace <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2d2>
 8019a76:	f81c 2f01 	ldrb.w	r2, [ip, #1]!
 8019a7a:	0913      	lsrs	r3, r2, #4
 8019a7c:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8019a80:	0e1d      	lsrs	r5, r3, #24
 8019a82:	d092      	beq.n	80199aa <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1ae>
 8019a84:	9a02      	ldr	r2, [sp, #8]
 8019a86:	2dff      	cmp	r5, #255	@ 0xff
 8019a88:	f892 9008 	ldrb.w	r9, [r2, #8]
 8019a8c:	ea4f 4113 	mov.w	r1, r3, lsr #16
 8019a90:	f109 39ff 	add.w	r9, r9, #4294967295
 8019a94:	ea4f 2b13 	mov.w	fp, r3, lsr #8
 8019a98:	f837 8c04 	ldrh.w	r8, [r7, #-4]
 8019a9c:	fa5f f989 	uxtb.w	r9, r9
 8019aa0:	b2db      	uxtb	r3, r3
 8019aa2:	f47f af35 	bne.w	8019910 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x114>
 8019aa6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8019aaa:	f47f af31 	bne.w	8019910 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x114>
 8019aae:	f1b9 0f01 	cmp.w	r9, #1
 8019ab2:	d970      	bls.n	8019b96 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x39a>
 8019ab4:	4a3c      	ldr	r2, [pc, #240]	@ (8019ba8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3ac>)
 8019ab6:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8019aba:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8019abe:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8019ac2:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8019ac6:	ea43 030b 	orr.w	r3, r3, fp
 8019aca:	b29b      	uxth	r3, r3
 8019acc:	e769      	b.n	80199a2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a6>
 8019ace:	9b05      	ldr	r3, [sp, #20]
 8019ad0:	9903      	ldr	r1, [sp, #12]
 8019ad2:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8019ad6:	1c5a      	adds	r2, r3, #1
 8019ad8:	4411      	add	r1, r2
 8019ada:	eb08 0882 	add.w	r8, r8, r2, lsl #2
 8019ade:	9a06      	ldr	r2, [sp, #24]
 8019ae0:	ebc3 73c3 	rsb	r3, r3, r3, lsl #31
 8019ae4:	9103      	str	r1, [sp, #12]
 8019ae6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019aea:	2b01      	cmp	r3, #1
 8019aec:	d111      	bne.n	8019b12 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x316>
 8019aee:	9b03      	ldr	r3, [sp, #12]
 8019af0:	781b      	ldrb	r3, [r3, #0]
 8019af2:	091b      	lsrs	r3, r3, #4
 8019af4:	f854 1023 	ldr.w	r1, [r4, r3, lsl #2]
 8019af8:	0e0b      	lsrs	r3, r1, #24
 8019afa:	d008      	beq.n	8019b0e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x312>
 8019afc:	f8b8 2000 	ldrh.w	r2, [r8]
 8019b00:	9802      	ldr	r0, [sp, #8]
 8019b02:	9300      	str	r3, [sp, #0]
 8019b04:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019b06:	f7ff fe0d 	bl	8019724 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih>
 8019b0a:	f8a8 0000 	strh.w	r0, [r8]
 8019b0e:	f108 0802 	add.w	r8, r8, #2
 8019b12:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8019b14:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8019b18:	4a22      	ldr	r2, [pc, #136]	@ (8019ba4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a8>)
 8019b1a:	440b      	add	r3, r1
 8019b1c:	8812      	ldrh	r2, [r2, #0]
 8019b1e:	9908      	ldr	r1, [sp, #32]
 8019b20:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8019b24:	1a52      	subs	r2, r2, r1
 8019b26:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8019b2a:	9a04      	ldr	r2, [sp, #16]
 8019b2c:	eb02 0363 	add.w	r3, r2, r3, asr #1
 8019b30:	9304      	str	r3, [sp, #16]
 8019b32:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019b34:	4543      	cmp	r3, r8
 8019b36:	f63f aebe 	bhi.w	80198b6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xba>
 8019b3a:	4b19      	ldr	r3, [pc, #100]	@ (8019ba0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a4>)
 8019b3c:	6818      	ldr	r0, [r3, #0]
 8019b3e:	6803      	ldr	r3, [r0, #0]
 8019b40:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019b42:	4798      	blx	r3
 8019b44:	b013      	add	sp, #76	@ 0x4c
 8019b46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019b4a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8019b4e:	f47f af43 	bne.w	80199d8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1dc>
 8019b52:	f1b9 0f01 	cmp.w	r9, #1
 8019b56:	d91a      	bls.n	8019b8e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x392>
 8019b58:	4a13      	ldr	r2, [pc, #76]	@ (8019ba8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3ac>)
 8019b5a:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8019b5e:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8019b62:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8019b66:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8019b6a:	ea43 030b 	orr.w	r3, r3, fp
 8019b6e:	b29b      	uxth	r3, r3
 8019b70:	e77b      	b.n	8019a6a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x26e>
 8019b72:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 8019b76:	ea4b 0303 	orr.w	r3, fp, r3
 8019b7a:	e776      	b.n	8019a6a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x26e>
 8019b7c:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 8019b80:	ea4b 0303 	orr.w	r3, fp, r3
 8019b84:	e70d      	b.n	80199a2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a6>
 8019b86:	9b04      	ldr	r3, [sp, #16]
 8019b88:	9303      	str	r3, [sp, #12]
 8019b8a:	9b08      	ldr	r3, [sp, #32]
 8019b8c:	e6ad      	b.n	80198ea <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xee>
 8019b8e:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 8019b92:	b29b      	uxth	r3, r3
 8019b94:	e769      	b.n	8019a6a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x26e>
 8019b96:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 8019b9a:	b29b      	uxth	r3, r3
 8019b9c:	e701      	b.n	80199a2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a6>
 8019b9e:	bf00      	nop
 8019ba0:	2004bf98 	.word	0x2004bf98
 8019ba4:	2004bf92 	.word	0x2004bf92
 8019ba8:	fffff800 	.word	0xfffff800
 8019bac:	4b03      	ldr	r3, [pc, #12]	@ (8019bbc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c0>)
 8019bae:	4a04      	ldr	r2, [pc, #16]	@ (8019bc0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c4>)
 8019bb0:	f240 41ad 	movw	r1, #1197	@ 0x4ad
 8019bb4:	4803      	ldr	r0, [pc, #12]	@ (8019bc4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c8>)
 8019bb6:	f00b f8bd 	bl	8024d34 <__assert_func>
 8019bba:	bf00      	nop
 8019bbc:	08027a5c 	.word	0x08027a5c
 8019bc0:	08028c4c 	.word	0x08028c4c
 8019bc4:	08027928 	.word	0x08027928

08019bc8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8019bc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019bcc:	b08f      	sub	sp, #60	@ 0x3c
 8019bce:	9206      	str	r2, [sp, #24]
 8019bd0:	461c      	mov	r4, r3
 8019bd2:	7812      	ldrb	r2, [r2, #0]
 8019bd4:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 8019bd8:	e9cd 1000 	strd	r1, r0, [sp]
 8019bdc:	9305      	str	r3, [sp, #20]
 8019bde:	2a00      	cmp	r2, #0
 8019be0:	f040 81ad 	bne.w	8019f3e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x376>
 8019be4:	b913      	cbnz	r3, 8019bec <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x24>
 8019be6:	b00f      	add	sp, #60	@ 0x3c
 8019be8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019bec:	6820      	ldr	r0, [r4, #0]
 8019bee:	6861      	ldr	r1, [r4, #4]
 8019bf0:	ab0a      	add	r3, sp, #40	@ 0x28
 8019bf2:	c303      	stmia	r3!, {r0, r1}
 8019bf4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8019bf6:	6818      	ldr	r0, [r3, #0]
 8019bf8:	6859      	ldr	r1, [r3, #4]
 8019bfa:	ab0c      	add	r3, sp, #48	@ 0x30
 8019bfc:	c303      	stmia	r3!, {r0, r1}
 8019bfe:	a80a      	add	r0, sp, #40	@ 0x28
 8019c00:	f7f5 fbee 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019c04:	4621      	mov	r1, r4
 8019c06:	a80c      	add	r0, sp, #48	@ 0x30
 8019c08:	f7f5 fc12 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019c0c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8019c10:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8019c14:	dd71      	ble.n	8019cfa <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x132>
 8019c16:	2201      	movs	r2, #1
 8019c18:	b299      	uxth	r1, r3
 8019c1a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8019c1e:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8019c22:	fb93 f6f2 	sdiv	r6, r3, r2
 8019c26:	b2b5      	uxth	r5, r6
 8019c28:	fb02 3415 	mls	r4, r2, r5, r3
 8019c2c:	fb14 0101 	smlabb	r1, r4, r1, r0
 8019c30:	f9bd 402e 	ldrsh.w	r4, [sp, #46]	@ 0x2e
 8019c34:	fa1f fb81 	uxth.w	fp, r1
 8019c38:	4414      	add	r4, r2
 8019c3a:	3c01      	subs	r4, #1
 8019c3c:	fb94 f4f2 	sdiv	r4, r4, r2
 8019c40:	b135      	cbz	r5, 8019c50 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x88>
 8019c42:	9a06      	ldr	r2, [sp, #24]
 8019c44:	9900      	ldr	r1, [sp, #0]
 8019c46:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
 8019c4a:	ba12      	rev	r2, r2
 8019c4c:	4411      	add	r1, r2
 8019c4e:	9100      	str	r1, [sp, #0]
 8019c50:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8019c54:	f8bd 102a 	ldrh.w	r1, [sp, #42]	@ 0x2a
 8019c58:	4402      	add	r2, r0
 8019c5a:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8019c5e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 8019c62:	440b      	add	r3, r1
 8019c64:	4616      	mov	r6, r2
 8019c66:	49b9      	ldr	r1, [pc, #740]	@ (8019f4c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x384>)
 8019c68:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8019c6c:	6808      	ldr	r0, [r1, #0]
 8019c6e:	9209      	str	r2, [sp, #36]	@ 0x24
 8019c70:	6803      	ldr	r3, [r0, #0]
 8019c72:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8019c76:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8019c78:	4798      	blx	r3
 8019c7a:	f1bb 0f00 	cmp.w	fp, #0
 8019c7e:	bf0c      	ite	eq
 8019c80:	4633      	moveq	r3, r6
 8019c82:	2300      	movne	r3, #0
 8019c84:	49b2      	ldr	r1, [pc, #712]	@ (8019f50 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x388>)
 8019c86:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8019c8a:	8809      	ldrh	r1, [r1, #0]
 8019c8c:	f9bd 6030 	ldrsh.w	r6, [sp, #48]	@ 0x30
 8019c90:	fb01 f505 	mul.w	r5, r1, r5
 8019c94:	fb01 6202 	mla	r2, r1, r2, r6
 8019c98:	b2a4      	uxth	r4, r4
 8019c9a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8019c9e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8019ca2:	00a4      	lsls	r4, r4, #2
 8019ca4:	1d21      	adds	r1, r4, #4
 8019ca6:	4290      	cmp	r0, r2
 8019ca8:	9202      	str	r2, [sp, #8]
 8019caa:	9108      	str	r1, [sp, #32]
 8019cac:	fa1f fa83 	uxth.w	sl, r3
 8019cb0:	d21b      	bcs.n	8019cea <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x122>
 8019cb2:	2300      	movs	r3, #0
 8019cb4:	465e      	mov	r6, fp
 8019cb6:	461d      	mov	r5, r3
 8019cb8:	9303      	str	r3, [sp, #12]
 8019cba:	b965      	cbnz	r5, 8019cd6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 8019cbc:	9900      	ldr	r1, [sp, #0]
 8019cbe:	780b      	ldrb	r3, [r1, #0]
 8019cc0:	099d      	lsrs	r5, r3, #6
 8019cc2:	1e6a      	subs	r2, r5, #1
 8019cc4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8019cc8:	2a02      	cmp	r2, #2
 8019cca:	9303      	str	r3, [sp, #12]
 8019ccc:	f200 80ce 	bhi.w	8019e6c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2a4>
 8019cd0:	3101      	adds	r1, #1
 8019cd2:	9100      	str	r1, [sp, #0]
 8019cd4:	b2ad      	uxth	r5, r5
 8019cd6:	b1b6      	cbz	r6, 8019d06 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x13e>
 8019cd8:	42b5      	cmp	r5, r6
 8019cda:	f080 80c1 	bcs.w	8019e60 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8019cde:	1b75      	subs	r5, r6, r5
 8019ce0:	b2ae      	uxth	r6, r5
 8019ce2:	2500      	movs	r5, #0
 8019ce4:	9b02      	ldr	r3, [sp, #8]
 8019ce6:	4283      	cmp	r3, r0
 8019ce8:	d8e7      	bhi.n	8019cba <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xf2>
 8019cea:	4b98      	ldr	r3, [pc, #608]	@ (8019f4c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x384>)
 8019cec:	6818      	ldr	r0, [r3, #0]
 8019cee:	6803      	ldr	r3, [r0, #0]
 8019cf0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019cf2:	4798      	blx	r3
 8019cf4:	b00f      	add	sp, #60	@ 0x3c
 8019cf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019cfa:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8019cfe:	b299      	uxth	r1, r3
 8019d00:	fb94 f2f1 	sdiv	r2, r4, r1
 8019d04:	e789      	b.n	8019c1a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x52>
 8019d06:	2304      	movs	r3, #4
 8019d08:	4619      	mov	r1, r3
 8019d0a:	9a08      	ldr	r2, [sp, #32]
 8019d0c:	9b03      	ldr	r3, [sp, #12]
 8019d0e:	4555      	cmp	r5, sl
 8019d10:	fb11 2303 	smlabb	r3, r1, r3, r2
 8019d14:	9a06      	ldr	r2, [sp, #24]
 8019d16:	58d1      	ldr	r1, [r2, r3]
 8019d18:	ea4f 6211 	mov.w	r2, r1, lsr #24
 8019d1c:	f0c0 8099 	bcc.w	8019e52 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x28a>
 8019d20:	eba5 030a 	sub.w	r3, r5, sl
 8019d24:	b29b      	uxth	r3, r3
 8019d26:	9304      	str	r3, [sp, #16]
 8019d28:	4653      	mov	r3, sl
 8019d2a:	9607      	str	r6, [sp, #28]
 8019d2c:	2a00      	cmp	r2, #0
 8019d2e:	f000 808d 	beq.w	8019e4c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x284>
 8019d32:	2aff      	cmp	r2, #255	@ 0xff
 8019d34:	ea4f 4b11 	mov.w	fp, r1, lsr #16
 8019d38:	ea4f 2911 	mov.w	r9, r1, lsr #8
 8019d3c:	fa5f f881 	uxtb.w	r8, r1
 8019d40:	d103      	bne.n	8019d4a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x182>
 8019d42:	9905      	ldr	r1, [sp, #20]
 8019d44:	29ff      	cmp	r1, #255	@ 0xff
 8019d46:	f000 8096 	beq.w	8019e76 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ae>
 8019d4a:	9905      	ldr	r1, [sp, #20]
 8019d4c:	fa5f fb8b 	uxtb.w	fp, fp
 8019d50:	fb01 f202 	mul.w	r2, r1, r2
 8019d54:	1c51      	adds	r1, r2, #1
 8019d56:	eb01 2222 	add.w	r2, r1, r2, asr #8
 8019d5a:	1212      	asrs	r2, r2, #8
 8019d5c:	ea6f 0c02 	mvn.w	ip, r2
 8019d60:	fa5f f989 	uxtb.w	r9, r9
 8019d64:	fa5f fc8c 	uxtb.w	ip, ip
 8019d68:	2b00      	cmp	r3, #0
 8019d6a:	d04d      	beq.n	8019e08 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 8019d6c:	b292      	uxth	r2, r2
 8019d6e:	fb1b fb02 	smulbb	fp, fp, r2
 8019d72:	fb19 f902 	smulbb	r9, r9, r2
 8019d76:	fb18 f802 	smulbb	r8, r8, r2
 8019d7a:	f103 3eff 	add.w	lr, r3, #4294967295
 8019d7e:	fa1f fe8e 	uxth.w	lr, lr
 8019d82:	f10e 0e01 	add.w	lr, lr, #1
 8019d86:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
 8019d8a:	fa1f fb8b 	uxth.w	fp, fp
 8019d8e:	fa1f f989 	uxth.w	r9, r9
 8019d92:	fa1f f888 	uxth.w	r8, r8
 8019d96:	fa1f fc8c 	uxth.w	ip, ip
 8019d9a:	f830 1b02 	ldrh.w	r1, [r0], #2
 8019d9e:	9b01      	ldr	r3, [sp, #4]
 8019da0:	00ca      	lsls	r2, r1, #3
 8019da2:	7a1f      	ldrb	r7, [r3, #8]
 8019da4:	b2d2      	uxtb	r2, r2
 8019da6:	10cb      	asrs	r3, r1, #3
 8019da8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8019dac:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8019db0:	fb02 820c 	mla	r2, r2, ip, r8
 8019db4:	ea43 1393 	orr.w	r3, r3, r3, lsr #6
 8019db8:	fb03 930c 	mla	r3, r3, ip, r9
 8019dbc:	b292      	uxth	r2, r2
 8019dbe:	1c54      	adds	r4, r2, #1
 8019dc0:	b29b      	uxth	r3, r3
 8019dc2:	3f01      	subs	r7, #1
 8019dc4:	eb04 2212 	add.w	r2, r4, r2, lsr #8
 8019dc8:	2f01      	cmp	r7, #1
 8019dca:	f103 0401 	add.w	r4, r3, #1
 8019dce:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8019dd2:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8019dd6:	d92d      	bls.n	8019e34 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x26c>
 8019dd8:	1209      	asrs	r1, r1, #8
 8019dda:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8019dde:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8019de2:	fb01 b10c 	mla	r1, r1, ip, fp
 8019de6:	b289      	uxth	r1, r1
 8019de8:	1c4c      	adds	r4, r1, #1
 8019dea:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 8019dee:	095b      	lsrs	r3, r3, #5
 8019df0:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8019df4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019df8:	ea41 02d2 	orr.w	r2, r1, r2, lsr #3
 8019dfc:	431a      	orrs	r2, r3
 8019dfe:	4586      	cmp	lr, r0
 8019e00:	f820 2c02 	strh.w	r2, [r0, #-2]
 8019e04:	d1c9      	bne.n	8019d9a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 8019e06:	4670      	mov	r0, lr
 8019e08:	4555      	cmp	r5, sl
 8019e0a:	d31b      	bcc.n	8019e44 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x27c>
 8019e0c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8019e0e:	f8bd 602c 	ldrh.w	r6, [sp, #44]	@ 0x2c
 8019e12:	4b4f      	ldr	r3, [pc, #316]	@ (8019f50 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x388>)
 8019e14:	fa1f fa82 	uxth.w	sl, r2
 8019e18:	eba6 060a 	sub.w	r6, r6, sl
 8019e1c:	881b      	ldrh	r3, [r3, #0]
 8019e1e:	b2b6      	uxth	r6, r6
 8019e20:	2e00      	cmp	r6, #0
 8019e22:	eba3 0302 	sub.w	r3, r3, r2
 8019e26:	9d04      	ldr	r5, [sp, #16]
 8019e28:	bf18      	it	ne
 8019e2a:	f04f 0a00 	movne.w	sl, #0
 8019e2e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019e32:	e757      	b.n	8019ce4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x11c>
 8019e34:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8019e38:	431a      	orrs	r2, r3
 8019e3a:	4586      	cmp	lr, r0
 8019e3c:	f820 2c02 	strh.w	r2, [r0, #-2]
 8019e40:	d1ab      	bne.n	8019d9a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 8019e42:	e7e0      	b.n	8019e06 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x23e>
 8019e44:	9d04      	ldr	r5, [sp, #16]
 8019e46:	f8dd a01c 	ldr.w	sl, [sp, #28]
 8019e4a:	e74b      	b.n	8019ce4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x11c>
 8019e4c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019e50:	e7da      	b.n	8019e08 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 8019e52:	ebaa 0405 	sub.w	r4, sl, r5
 8019e56:	b2a4      	uxth	r4, r4
 8019e58:	462b      	mov	r3, r5
 8019e5a:	9604      	str	r6, [sp, #16]
 8019e5c:	9407      	str	r4, [sp, #28]
 8019e5e:	e765      	b.n	8019d2c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x164>
 8019e60:	1bad      	subs	r5, r5, r6
 8019e62:	b2ad      	uxth	r5, r5
 8019e64:	f8bd a024 	ldrh.w	sl, [sp, #36]	@ 0x24
 8019e68:	2600      	movs	r6, #0
 8019e6a:	e73b      	b.n	8019ce4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x11c>
 8019e6c:	460b      	mov	r3, r1
 8019e6e:	3302      	adds	r3, #2
 8019e70:	784d      	ldrb	r5, [r1, #1]
 8019e72:	9300      	str	r3, [sp, #0]
 8019e74:	e72f      	b.n	8019cd6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 8019e76:	9a01      	ldr	r2, [sp, #4]
 8019e78:	7a12      	ldrb	r2, [r2, #8]
 8019e7a:	3a01      	subs	r2, #1
 8019e7c:	2a01      	cmp	r2, #1
 8019e7e:	d954      	bls.n	8019f2a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x362>
 8019e80:	4a34      	ldr	r2, [pc, #208]	@ (8019f54 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x38c>)
 8019e82:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019e86:	ea02 2b0b 	and.w	fp, r2, fp, lsl #8
 8019e8a:	ea4b 08d8 	orr.w	r8, fp, r8, lsr #3
 8019e8e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8019e92:	ea48 0809 	orr.w	r8, r8, r9
 8019e96:	fa1f fe88 	uxth.w	lr, r8
 8019e9a:	2b00      	cmp	r3, #0
 8019e9c:	d0b4      	beq.n	8019e08 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 8019e9e:	1e5a      	subs	r2, r3, #1
 8019ea0:	fa1f fb82 	uxth.w	fp, r2
 8019ea4:	f1bb 0f04 	cmp.w	fp, #4
 8019ea8:	f3c0 0140 	ubfx	r1, r0, #1, #1
 8019eac:	d945      	bls.n	8019f3a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x372>
 8019eae:	2900      	cmp	r1, #0
 8019eb0:	d040      	beq.n	8019f34 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x36c>
 8019eb2:	46d8      	mov	r8, fp
 8019eb4:	f8a0 e000 	strh.w	lr, [r0]
 8019eb8:	f100 0902 	add.w	r9, r0, #2
 8019ebc:	2700      	movs	r7, #0
 8019ebe:	1a5b      	subs	r3, r3, r1
 8019ec0:	463a      	mov	r2, r7
 8019ec2:	fa1f fc83 	uxth.w	ip, r3
 8019ec6:	f36e 070f 	bfi	r7, lr, #0, #16
 8019eca:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8019ece:	ea4f 035c 	mov.w	r3, ip, lsr #1
 8019ed2:	f36e 471f 	bfi	r7, lr, #16, #16
 8019ed6:	3201      	adds	r2, #1
 8019ed8:	b294      	uxth	r4, r2
 8019eda:	42a3      	cmp	r3, r4
 8019edc:	f841 7b04 	str.w	r7, [r1], #4
 8019ee0:	d8f9      	bhi.n	8019ed6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x30e>
 8019ee2:	f02c 0201 	bic.w	r2, ip, #1
 8019ee6:	b292      	uxth	r2, r2
 8019ee8:	eba8 0302 	sub.w	r3, r8, r2
 8019eec:	4562      	cmp	r2, ip
 8019eee:	b29b      	uxth	r3, r3
 8019ef0:	eb09 0142 	add.w	r1, r9, r2, lsl #1
 8019ef4:	d014      	beq.n	8019f20 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 8019ef6:	1e5a      	subs	r2, r3, #1
 8019ef8:	b292      	uxth	r2, r2
 8019efa:	f8a1 e000 	strh.w	lr, [r1]
 8019efe:	b17a      	cbz	r2, 8019f20 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 8019f00:	1e9a      	subs	r2, r3, #2
 8019f02:	b292      	uxth	r2, r2
 8019f04:	f8a1 e002 	strh.w	lr, [r1, #2]
 8019f08:	b152      	cbz	r2, 8019f20 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 8019f0a:	1eda      	subs	r2, r3, #3
 8019f0c:	b292      	uxth	r2, r2
 8019f0e:	f8a1 e004 	strh.w	lr, [r1, #4]
 8019f12:	b12a      	cbz	r2, 8019f20 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 8019f14:	2b04      	cmp	r3, #4
 8019f16:	f8a1 e006 	strh.w	lr, [r1, #6]
 8019f1a:	d001      	beq.n	8019f20 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 8019f1c:	f8a1 e008 	strh.w	lr, [r1, #8]
 8019f20:	f10b 0b01 	add.w	fp, fp, #1
 8019f24:	eb00 004b 	add.w	r0, r0, fp, lsl #1
 8019f28:	e76e      	b.n	8019e08 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 8019f2a:	ea48 2809 	orr.w	r8, r8, r9, lsl #8
 8019f2e:	fa1f fe88 	uxth.w	lr, r8
 8019f32:	e7b2      	b.n	8019e9a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2d2>
 8019f34:	4681      	mov	r9, r0
 8019f36:	4698      	mov	r8, r3
 8019f38:	e7c0      	b.n	8019ebc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2f4>
 8019f3a:	4601      	mov	r1, r0
 8019f3c:	e7dc      	b.n	8019ef8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x330>
 8019f3e:	4b06      	ldr	r3, [pc, #24]	@ (8019f58 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x390>)
 8019f40:	4a06      	ldr	r2, [pc, #24]	@ (8019f5c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x394>)
 8019f42:	f44f 61a1 	mov.w	r1, #1288	@ 0x508
 8019f46:	4806      	ldr	r0, [pc, #24]	@ (8019f60 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x398>)
 8019f48:	f00a fef4 	bl	8024d34 <__assert_func>
 8019f4c:	2004bf98 	.word	0x2004bf98
 8019f50:	2004bf92 	.word	0x2004bf92
 8019f54:	fffff800 	.word	0xfffff800
 8019f58:	08027a5c 	.word	0x08027a5c
 8019f5c:	08029058 	.word	0x08029058
 8019f60:	08027928 	.word	0x08027928

08019f64 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8019f64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f68:	b09f      	sub	sp, #124	@ 0x7c
 8019f6a:	9201      	str	r2, [sp, #4]
 8019f6c:	461c      	mov	r4, r3
 8019f6e:	7812      	ldrb	r2, [r2, #0]
 8019f70:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8019f74:	9116      	str	r1, [sp, #88]	@ 0x58
 8019f76:	9305      	str	r3, [sp, #20]
 8019f78:	2a00      	cmp	r2, #0
 8019f7a:	f040 823c 	bne.w	801a3f6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x492>
 8019f7e:	b913      	cbnz	r3, 8019f86 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x22>
 8019f80:	b01f      	add	sp, #124	@ 0x7c
 8019f82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019f86:	6861      	ldr	r1, [r4, #4]
 8019f88:	4683      	mov	fp, r0
 8019f8a:	6820      	ldr	r0, [r4, #0]
 8019f8c:	ab1a      	add	r3, sp, #104	@ 0x68
 8019f8e:	c303      	stmia	r3!, {r0, r1}
 8019f90:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8019f92:	6818      	ldr	r0, [r3, #0]
 8019f94:	6859      	ldr	r1, [r3, #4]
 8019f96:	ab1c      	add	r3, sp, #112	@ 0x70
 8019f98:	c303      	stmia	r3!, {r0, r1}
 8019f9a:	a81a      	add	r0, sp, #104	@ 0x68
 8019f9c:	f7f5 fa20 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019fa0:	4621      	mov	r1, r4
 8019fa2:	a81c      	add	r0, sp, #112	@ 0x70
 8019fa4:	f7f5 fa44 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019fa8:	f9bd 106c 	ldrsh.w	r1, [sp, #108]	@ 0x6c
 8019fac:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8019fb0:	f340 8152 	ble.w	801a258 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2f4>
 8019fb4:	2301      	movs	r3, #1
 8019fb6:	b289      	uxth	r1, r1
 8019fb8:	9318      	str	r3, [sp, #96]	@ 0x60
 8019fba:	f9bd 0072 	ldrsh.w	r0, [sp, #114]	@ 0x72
 8019fbe:	f9bd 206e 	ldrsh.w	r2, [sp, #110]	@ 0x6e
 8019fc2:	fb90 f4f3 	sdiv	r4, r0, r3
 8019fc6:	441a      	add	r2, r3
 8019fc8:	3a01      	subs	r2, #1
 8019fca:	fb92 f2f3 	sdiv	r2, r2, r3
 8019fce:	b2a4      	uxth	r4, r4
 8019fd0:	fb03 0314 	mls	r3, r3, r4, r0
 8019fd4:	9417      	str	r4, [sp, #92]	@ 0x5c
 8019fd6:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 8019fda:	f8bd 6068 	ldrh.w	r6, [sp, #104]	@ 0x68
 8019fde:	fb13 4101 	smlabb	r1, r3, r1, r4
 8019fe2:	f8bd 506a 	ldrh.w	r5, [sp, #106]	@ 0x6a
 8019fe6:	4bbb      	ldr	r3, [pc, #748]	@ (801a2d4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x370>)
 8019fe8:	4434      	add	r4, r6
 8019fea:	4405      	add	r5, r0
 8019fec:	6818      	ldr	r0, [r3, #0]
 8019fee:	f8ad 4070 	strh.w	r4, [sp, #112]	@ 0x70
 8019ff2:	f8ad 5072 	strh.w	r5, [sp, #114]	@ 0x72
 8019ff6:	f9bd 6074 	ldrsh.w	r6, [sp, #116]	@ 0x74
 8019ffa:	6803      	ldr	r3, [r0, #0]
 8019ffc:	3201      	adds	r2, #1
 8019ffe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801a000:	960b      	str	r6, [sp, #44]	@ 0x2c
 801a002:	fa1f fa81 	uxth.w	sl, r1
 801a006:	b294      	uxth	r4, r2
 801a008:	f9bd 5076 	ldrsh.w	r5, [sp, #118]	@ 0x76
 801a00c:	4798      	blx	r3
 801a00e:	2300      	movs	r3, #0
 801a010:	f1ba 0f00 	cmp.w	sl, #0
 801a014:	bf0c      	ite	eq
 801a016:	4632      	moveq	r2, r6
 801a018:	2200      	movne	r2, #0
 801a01a:	49af      	ldr	r1, [pc, #700]	@ (801a2d8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x374>)
 801a01c:	9315      	str	r3, [sp, #84]	@ 0x54
 801a01e:	8809      	ldrh	r1, [r1, #0]
 801a020:	f9bd 3072 	ldrsh.w	r3, [sp, #114]	@ 0x72
 801a024:	f9bd 6070 	ldrsh.w	r6, [sp, #112]	@ 0x70
 801a028:	fb01 f505 	mul.w	r5, r1, r5
 801a02c:	fb01 6303 	mla	r3, r1, r3, r6
 801a030:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a034:	9300      	str	r3, [sp, #0]
 801a036:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801a03a:	9307      	str	r3, [sp, #28]
 801a03c:	b293      	uxth	r3, r2
 801a03e:	9302      	str	r3, [sp, #8]
 801a040:	f10b 030a 	add.w	r3, fp, #10
 801a044:	9319      	str	r3, [sp, #100]	@ 0x64
 801a046:	465b      	mov	r3, fp
 801a048:	46d3      	mov	fp, sl
 801a04a:	469a      	mov	sl, r3
 801a04c:	00a4      	lsls	r4, r4, #2
 801a04e:	1d21      	adds	r1, r4, #4
 801a050:	9113      	str	r1, [sp, #76]	@ 0x4c
 801a052:	9b07      	ldr	r3, [sp, #28]
 801a054:	9a00      	ldr	r2, [sp, #0]
 801a056:	4293      	cmp	r3, r2
 801a058:	f240 8134 	bls.w	801a2c4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x360>
 801a05c:	2601      	movs	r6, #1
 801a05e:	2700      	movs	r7, #0
 801a060:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801a062:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801a064:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801a068:	fa11 f482 	uxtah	r4, r1, r2
 801a06c:	00a4      	lsls	r4, r4, #2
 801a06e:	9a01      	ldr	r2, [sp, #4]
 801a070:	3404      	adds	r4, #4
 801a072:	1911      	adds	r1, r2, r4
 801a074:	788a      	ldrb	r2, [r1, #2]
 801a076:	784d      	ldrb	r5, [r1, #1]
 801a078:	0212      	lsls	r2, r2, #8
 801a07a:	78c9      	ldrb	r1, [r1, #3]
 801a07c:	ea42 4005 	orr.w	r0, r2, r5, lsl #16
 801a080:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801a082:	4308      	orrs	r0, r1
 801a084:	4629      	mov	r1, r5
 801a086:	fbbb f3f3 	udiv	r3, fp, r3
 801a08a:	46bc      	mov	ip, r7
 801a08c:	46b1      	mov	r9, r6
 801a08e:	4401      	add	r1, r0
 801a090:	784a      	ldrb	r2, [r1, #1]
 801a092:	5c28      	ldrb	r0, [r5, r0]
 801a094:	0212      	lsls	r2, r2, #8
 801a096:	9d01      	ldr	r5, [sp, #4]
 801a098:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801a09c:	4302      	orrs	r2, r0
 801a09e:	9818      	ldr	r0, [sp, #96]	@ 0x60
 801a0a0:	5d2c      	ldrb	r4, [r5, r4]
 801a0a2:	f88a 2009 	strb.w	r2, [sl, #9]
 801a0a6:	b292      	uxth	r2, r2
 801a0a8:	1ac3      	subs	r3, r0, r3
 801a0aa:	9209      	str	r2, [sp, #36]	@ 0x24
 801a0ac:	198a      	adds	r2, r1, r6
 801a0ae:	9203      	str	r2, [sp, #12]
 801a0b0:	b29b      	uxth	r3, r3
 801a0b2:	19a2      	adds	r2, r4, r6
 801a0b4:	9712      	str	r7, [sp, #72]	@ 0x48
 801a0b6:	960a      	str	r6, [sp, #40]	@ 0x28
 801a0b8:	940e      	str	r4, [sp, #56]	@ 0x38
 801a0ba:	9206      	str	r2, [sp, #24]
 801a0bc:	9314      	str	r3, [sp, #80]	@ 0x50
 801a0be:	9604      	str	r6, [sp, #16]
 801a0c0:	f1bb 0f00 	cmp.w	fp, #0
 801a0c4:	d037      	beq.n	801a136 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 801a0c6:	45d9      	cmp	r9, fp
 801a0c8:	f080 80ce 	bcs.w	801a268 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x304>
 801a0cc:	ebab 0b09 	sub.w	fp, fp, r9
 801a0d0:	fa1f fb8b 	uxth.w	fp, fp
 801a0d4:	9b07      	ldr	r3, [sp, #28]
 801a0d6:	9a00      	ldr	r2, [sp, #0]
 801a0d8:	4293      	cmp	r3, r2
 801a0da:	f240 80f3 	bls.w	801a2c4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x360>
 801a0de:	9803      	ldr	r0, [sp, #12]
 801a0e0:	9c04      	ldr	r4, [sp, #16]
 801a0e2:	7842      	ldrb	r2, [r0, #1]
 801a0e4:	f1c4 0107 	rsb	r1, r4, #7
 801a0e8:	7803      	ldrb	r3, [r0, #0]
 801a0ea:	408a      	lsls	r2, r1
 801a0ec:	0052      	lsls	r2, r2, #1
 801a0ee:	4123      	asrs	r3, r4
 801a0f0:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801a0f4:	1c61      	adds	r1, r4, #1
 801a0f6:	b2db      	uxtb	r3, r3
 801a0f8:	4313      	orrs	r3, r2
 801a0fa:	b2ca      	uxtb	r2, r1
 801a0fc:	4611      	mov	r1, r2
 801a0fe:	2908      	cmp	r1, #8
 801a100:	9204      	str	r2, [sp, #16]
 801a102:	b29a      	uxth	r2, r3
 801a104:	f000 811a 	beq.w	801a33c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3d8>
 801a108:	3001      	adds	r0, #1
 801a10a:	9003      	str	r0, [sp, #12]
 801a10c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801a10e:	4291      	cmp	r1, r2
 801a110:	f0c0 80e6 	bcc.w	801a2e0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x37c>
 801a114:	f04f 0901 	mov.w	r9, #1
 801a118:	b2db      	uxtb	r3, r3
 801a11a:	f88a 3009 	strb.w	r3, [sl, #9]
 801a11e:	9906      	ldr	r1, [sp, #24]
 801a120:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801a124:	f0c0 8132 	bcc.w	801a38c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x428>
 801a128:	e9cd 2909 	strd	r2, r9, [sp, #36]	@ 0x24
 801a12c:	f04f 0c00 	mov.w	ip, #0
 801a130:	f1bb 0f00 	cmp.w	fp, #0
 801a134:	d1c7      	bne.n	801a0c6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x162>
 801a136:	9b02      	ldr	r3, [sp, #8]
 801a138:	4599      	cmp	r9, r3
 801a13a:	461a      	mov	r2, r3
 801a13c:	f0c0 80f0 	bcc.w	801a320 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3bc>
 801a140:	eba9 0303 	sub.w	r3, r9, r3
 801a144:	b29b      	uxth	r3, r3
 801a146:	930c      	str	r3, [sp, #48]	@ 0x30
 801a148:	2a00      	cmp	r2, #0
 801a14a:	f000 80fd 	beq.w	801a348 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3e4>
 801a14e:	4613      	mov	r3, r2
 801a150:	f8cd b044 	str.w	fp, [sp, #68]	@ 0x44
 801a154:	9208      	str	r2, [sp, #32]
 801a156:	4463      	add	r3, ip
 801a158:	b29b      	uxth	r3, r3
 801a15a:	f8cd 903c 	str.w	r9, [sp, #60]	@ 0x3c
 801a15e:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
 801a162:	f8dd e000 	ldr.w	lr, [sp]
 801a166:	930d      	str	r3, [sp, #52]	@ 0x34
 801a168:	f8dd 904c 	ldr.w	r9, [sp, #76]	@ 0x4c
 801a16c:	469b      	mov	fp, r3
 801a16e:	e048      	b.n	801a202 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x29e>
 801a170:	9905      	ldr	r1, [sp, #20]
 801a172:	f8be 5000 	ldrh.w	r5, [lr]
 801a176:	fb01 f202 	mul.w	r2, r1, r2
 801a17a:	1c50      	adds	r0, r2, #1
 801a17c:	eb00 2022 	add.w	r0, r0, r2, asr #8
 801a180:	1200      	asrs	r0, r0, #8
 801a182:	43c4      	mvns	r4, r0
 801a184:	b280      	uxth	r0, r0
 801a186:	b2ff      	uxtb	r7, r7
 801a188:	fb13 f300 	smulbb	r3, r3, r0
 801a18c:	fb17 f700 	smulbb	r7, r7, r0
 801a190:	00e9      	lsls	r1, r5, #3
 801a192:	b2c9      	uxtb	r1, r1
 801a194:	10ea      	asrs	r2, r5, #3
 801a196:	b2e4      	uxtb	r4, r4
 801a198:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801a19c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801a1a0:	fb01 3304 	mla	r3, r1, r4, r3
 801a1a4:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801a1a8:	fb02 7704 	mla	r7, r2, r4, r7
 801a1ac:	b29b      	uxth	r3, r3
 801a1ae:	b2bf      	uxth	r7, r7
 801a1b0:	1c59      	adds	r1, r3, #1
 801a1b2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a1b6:	1c7a      	adds	r2, r7, #1
 801a1b8:	2e01      	cmp	r6, #1
 801a1ba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a1be:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a1c2:	d966      	bls.n	801a292 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x32e>
 801a1c4:	fa5f f888 	uxtb.w	r8, r8
 801a1c8:	fb18 f800 	smulbb	r8, r8, r0
 801a1cc:	122d      	asrs	r5, r5, #8
 801a1ce:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801a1d2:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801a1d6:	fb05 8804 	mla	r8, r5, r4, r8
 801a1da:	fa1f f888 	uxth.w	r8, r8
 801a1de:	f108 0101 	add.w	r1, r8, #1
 801a1e2:	eb01 2118 	add.w	r1, r1, r8, lsr #8
 801a1e6:	097f      	lsrs	r7, r7, #5
 801a1e8:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801a1ec:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801a1f0:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 801a1f4:	433b      	orrs	r3, r7
 801a1f6:	f8ae 3000 	strh.w	r3, [lr]
 801a1fa:	45dc      	cmp	ip, fp
 801a1fc:	f10e 0e02 	add.w	lr, lr, #2
 801a200:	d04b      	beq.n	801a29a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x336>
 801a202:	2204      	movs	r2, #4
 801a204:	eb0a 030c 	add.w	r3, sl, ip
 801a208:	7a5b      	ldrb	r3, [r3, #9]
 801a20a:	f10c 0c01 	add.w	ip, ip, #1
 801a20e:	fb12 9303 	smlabb	r3, r2, r3, r9
 801a212:	9a01      	ldr	r2, [sp, #4]
 801a214:	fa1f fc8c 	uxth.w	ip, ip
 801a218:	58d3      	ldr	r3, [r2, r3]
 801a21a:	0e1a      	lsrs	r2, r3, #24
 801a21c:	d0ed      	beq.n	801a1fa <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x296>
 801a21e:	f89a 6008 	ldrb.w	r6, [sl, #8]
 801a222:	2aff      	cmp	r2, #255	@ 0xff
 801a224:	f106 36ff 	add.w	r6, r6, #4294967295
 801a228:	ea4f 4813 	mov.w	r8, r3, lsr #16
 801a22c:	ea4f 2713 	mov.w	r7, r3, lsr #8
 801a230:	b2f6      	uxtb	r6, r6
 801a232:	b2db      	uxtb	r3, r3
 801a234:	d19c      	bne.n	801a170 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 801a236:	9905      	ldr	r1, [sp, #20]
 801a238:	29ff      	cmp	r1, #255	@ 0xff
 801a23a:	d199      	bne.n	801a170 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 801a23c:	2e01      	cmp	r6, #1
 801a23e:	f240 80c4 	bls.w	801a3ca <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x466>
 801a242:	4a26      	ldr	r2, [pc, #152]	@ (801a2dc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x378>)
 801a244:	00ff      	lsls	r7, r7, #3
 801a246:	ea02 2808 	and.w	r8, r2, r8, lsl #8
 801a24a:	ea48 03d3 	orr.w	r3, r8, r3, lsr #3
 801a24e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801a252:	433b      	orrs	r3, r7
 801a254:	b29b      	uxth	r3, r3
 801a256:	e7ce      	b.n	801a1f6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x292>
 801a258:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801a25c:	b289      	uxth	r1, r1
 801a25e:	fb93 f3f1 	sdiv	r3, r3, r1
 801a262:	b29a      	uxth	r2, r3
 801a264:	9218      	str	r2, [sp, #96]	@ 0x60
 801a266:	e6a8      	b.n	8019fba <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x56>
 801a268:	eba9 090b 	sub.w	r9, r9, fp
 801a26c:	44dc      	add	ip, fp
 801a26e:	f04f 0b00 	mov.w	fp, #0
 801a272:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801a276:	fa1f f989 	uxth.w	r9, r9
 801a27a:	fa1f fc8c 	uxth.w	ip, ip
 801a27e:	9302      	str	r3, [sp, #8]
 801a280:	9b07      	ldr	r3, [sp, #28]
 801a282:	9a00      	ldr	r2, [sp, #0]
 801a284:	4293      	cmp	r3, r2
 801a286:	d91d      	bls.n	801a2c4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x360>
 801a288:	f1b9 0f00 	cmp.w	r9, #0
 801a28c:	f47f af18 	bne.w	801a0c0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x15c>
 801a290:	e725      	b.n	801a0de <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x17a>
 801a292:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801a296:	433b      	orrs	r3, r7
 801a298:	e7ad      	b.n	801a1f6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x292>
 801a29a:	9b08      	ldr	r3, [sp, #32]
 801a29c:	9a00      	ldr	r2, [sp, #0]
 801a29e:	3b01      	subs	r3, #1
 801a2a0:	b29b      	uxth	r3, r3
 801a2a2:	3301      	adds	r3, #1
 801a2a4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a2a8:	9300      	str	r3, [sp, #0]
 801a2aa:	9b02      	ldr	r3, [sp, #8]
 801a2ac:	e9dd 9b0f 	ldrd	r9, fp, [sp, #60]	@ 0x3c
 801a2b0:	4599      	cmp	r9, r3
 801a2b2:	d24b      	bcs.n	801a34c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3e8>
 801a2b4:	e9dd 9c0c 	ldrd	r9, ip, [sp, #48]	@ 0x30
 801a2b8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a2ba:	9a00      	ldr	r2, [sp, #0]
 801a2bc:	9302      	str	r3, [sp, #8]
 801a2be:	9b07      	ldr	r3, [sp, #28]
 801a2c0:	4293      	cmp	r3, r2
 801a2c2:	d8e1      	bhi.n	801a288 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x324>
 801a2c4:	4b03      	ldr	r3, [pc, #12]	@ (801a2d4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x370>)
 801a2c6:	6818      	ldr	r0, [r3, #0]
 801a2c8:	6803      	ldr	r3, [r0, #0]
 801a2ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a2cc:	4798      	blx	r3
 801a2ce:	b01f      	add	sp, #124	@ 0x7c
 801a2d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a2d4:	2004bf98 	.word	0x2004bf98
 801a2d8:	2004bf92 	.word	0x2004bf92
 801a2dc:	fffff800 	.word	0xfffff800
 801a2e0:	9b06      	ldr	r3, [sp, #24]
 801a2e2:	429a      	cmp	r2, r3
 801a2e4:	d355      	bcc.n	801a392 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x42e>
 801a2e6:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801a2e8:	f89a 1009 	ldrb.w	r1, [sl, #9]
 801a2ec:	eb0a 0300 	add.w	r3, sl, r0
 801a2f0:	7259      	strb	r1, [r3, #9]
 801a2f2:	f89a 3009 	ldrb.w	r3, [sl, #9]
 801a2f6:	1c41      	adds	r1, r0, #1
 801a2f8:	fa1f f981 	uxth.w	r9, r1
 801a2fc:	9c06      	ldr	r4, [sp, #24]
 801a2fe:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801a300:	eb0a 0084 	add.w	r0, sl, r4, lsl #2
 801a304:	3401      	adds	r4, #1
 801a306:	f880 304a 	strb.w	r3, [r0, #74]	@ 0x4a
 801a30a:	b2a3      	uxth	r3, r4
 801a30c:	f8a0 504c 	strh.w	r5, [r0, #76]	@ 0x4c
 801a310:	f880 104b 	strb.w	r1, [r0, #75]	@ 0x4b
 801a314:	9306      	str	r3, [sp, #24]
 801a316:	e9cd 2909 	strd	r2, r9, [sp, #36]	@ 0x24
 801a31a:	f04f 0c00 	mov.w	ip, #0
 801a31e:	e6cf      	b.n	801a0c0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x15c>
 801a320:	eba3 0309 	sub.w	r3, r3, r9
 801a324:	b29b      	uxth	r3, r3
 801a326:	9311      	str	r3, [sp, #68]	@ 0x44
 801a328:	f1b9 0f00 	cmp.w	r9, #0
 801a32c:	f43f aed2 	beq.w	801a0d4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x170>
 801a330:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 801a334:	f8cd 9020 	str.w	r9, [sp, #32]
 801a338:	464b      	mov	r3, r9
 801a33a:	e70c      	b.n	801a156 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f2>
 801a33c:	2100      	movs	r1, #0
 801a33e:	9104      	str	r1, [sp, #16]
 801a340:	9903      	ldr	r1, [sp, #12]
 801a342:	3102      	adds	r1, #2
 801a344:	9103      	str	r1, [sp, #12]
 801a346:	e6e1      	b.n	801a10c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 801a348:	f8cd c034 	str.w	ip, [sp, #52]	@ 0x34
 801a34c:	4b2d      	ldr	r3, [pc, #180]	@ (801a404 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x4a0>)
 801a34e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801a350:	881b      	ldrh	r3, [r3, #0]
 801a352:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801a354:	1a5b      	subs	r3, r3, r1
 801a356:	9900      	ldr	r1, [sp, #0]
 801a358:	3201      	adds	r2, #1
 801a35a:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801a35e:	9300      	str	r3, [sp, #0]
 801a360:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801a362:	9212      	str	r2, [sp, #72]	@ 0x48
 801a364:	429a      	cmp	r2, r3
 801a366:	d034      	beq.n	801a3d2 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x46e>
 801a368:	e9dd 9c0c 	ldrd	r9, ip, [sp, #48]	@ 0x30
 801a36c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801a370:	f8bd b06c 	ldrh.w	fp, [sp, #108]	@ 0x6c
 801a374:	ebab 0b03 	sub.w	fp, fp, r3
 801a378:	fa1f fb8b 	uxth.w	fp, fp
 801a37c:	f1bb 0f00 	cmp.w	fp, #0
 801a380:	bf14      	ite	ne
 801a382:	2300      	movne	r3, #0
 801a384:	f04f 0b00 	moveq.w	fp, #0
 801a388:	9302      	str	r3, [sp, #8]
 801a38a:	e779      	b.n	801a280 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x31c>
 801a38c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801a38e:	3101      	adds	r1, #1
 801a390:	e7b4      	b.n	801a2fc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x398>
 801a392:	eb0a 0382 	add.w	r3, sl, r2, lsl #2
 801a396:	f893 904b 	ldrb.w	r9, [r3, #75]	@ 0x4b
 801a39a:	4613      	mov	r3, r2
 801a39c:	f1b9 0f01 	cmp.w	r9, #1
 801a3a0:	d90d      	bls.n	801a3be <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x45a>
 801a3a2:	f109 0109 	add.w	r1, r9, #9
 801a3a6:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 801a3a8:	4451      	add	r1, sl
 801a3aa:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801a3ae:	f893 004a 	ldrb.w	r0, [r3, #74]	@ 0x4a
 801a3b2:	f801 0d01 	strb.w	r0, [r1, #-1]!
 801a3b6:	428c      	cmp	r4, r1
 801a3b8:	f8b3 304c 	ldrh.w	r3, [r3, #76]	@ 0x4c
 801a3bc:	d1f5      	bne.n	801a3aa <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x446>
 801a3be:	b2db      	uxtb	r3, r3
 801a3c0:	f88a 3009 	strb.w	r3, [sl, #9]
 801a3c4:	fa1f f989 	uxth.w	r9, r9
 801a3c8:	e6a9      	b.n	801a11e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 801a3ca:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
 801a3ce:	b29b      	uxth	r3, r3
 801a3d0:	e711      	b.n	801a1f6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x292>
 801a3d2:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801a3d6:	f8bd 2068 	ldrh.w	r2, [sp, #104]	@ 0x68
 801a3da:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801a3dc:	1a9b      	subs	r3, r3, r2
 801a3de:	fa1f fb83 	uxth.w	fp, r3
 801a3e2:	f1bb 0f00 	cmp.w	fp, #0
 801a3e6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a3e8:	bf18      	it	ne
 801a3ea:	2300      	movne	r3, #0
 801a3ec:	3101      	adds	r1, #1
 801a3ee:	b29b      	uxth	r3, r3
 801a3f0:	9115      	str	r1, [sp, #84]	@ 0x54
 801a3f2:	9302      	str	r3, [sp, #8]
 801a3f4:	e62d      	b.n	801a052 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xee>
 801a3f6:	4b04      	ldr	r3, [pc, #16]	@ (801a408 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x4a4>)
 801a3f8:	4a04      	ldr	r2, [pc, #16]	@ (801a40c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x4a8>)
 801a3fa:	f240 51a4 	movw	r1, #1444	@ 0x5a4
 801a3fe:	4804      	ldr	r0, [pc, #16]	@ (801a410 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x4ac>)
 801a400:	f00a fc98 	bl	8024d34 <__assert_func>
 801a404:	2004bf92 	.word	0x2004bf92
 801a408:	08027a5c 	.word	0x08027a5c
 801a40c:	08029324 	.word	0x08029324
 801a410:	08027928 	.word	0x08027928

0801a414 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 801a414:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a418:	4691      	mov	r9, r2
 801a41a:	8812      	ldrh	r2, [r2, #0]
 801a41c:	b093      	sub	sp, #76	@ 0x4c
 801a41e:	2a01      	cmp	r2, #1
 801a420:	f89d 4074 	ldrb.w	r4, [sp, #116]	@ 0x74
 801a424:	f040 8129 	bne.w	801a67a <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x266>
 801a428:	b914      	cbnz	r4, 801a430 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1c>
 801a42a:	b013      	add	sp, #76	@ 0x4c
 801a42c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a430:	461d      	mov	r5, r3
 801a432:	468a      	mov	sl, r1
 801a434:	6818      	ldr	r0, [r3, #0]
 801a436:	6859      	ldr	r1, [r3, #4]
 801a438:	ab0e      	add	r3, sp, #56	@ 0x38
 801a43a:	c303      	stmia	r3!, {r0, r1}
 801a43c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a43e:	6818      	ldr	r0, [r3, #0]
 801a440:	6859      	ldr	r1, [r3, #4]
 801a442:	ab10      	add	r3, sp, #64	@ 0x40
 801a444:	c303      	stmia	r3!, {r0, r1}
 801a446:	a80e      	add	r0, sp, #56	@ 0x38
 801a448:	f7f4 ffca 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a44c:	4629      	mov	r1, r5
 801a44e:	a810      	add	r0, sp, #64	@ 0x40
 801a450:	f7f4 ffee 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a454:	f9bd 5040 	ldrsh.w	r5, [sp, #64]	@ 0x40
 801a458:	f9bd 6042 	ldrsh.w	r6, [sp, #66]	@ 0x42
 801a45c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 801a460:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 801a464:	488b      	ldr	r0, [pc, #556]	@ (801a694 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x280>)
 801a466:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 801a46a:	442a      	add	r2, r5
 801a46c:	4433      	add	r3, r6
 801a46e:	6800      	ldr	r0, [r0, #0]
 801a470:	fb11 5106 	smlabb	r1, r1, r6, r5
 801a474:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801a478:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 801a47c:	6802      	ldr	r2, [r0, #0]
 801a47e:	4e86      	ldr	r6, [pc, #536]	@ (801a698 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x284>)
 801a480:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 801a484:	448a      	add	sl, r1
 801a486:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 801a48a:	42b3      	cmp	r3, r6
 801a48c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801a48e:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801a492:	f040 80c8 	bne.w	801a626 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x212>
 801a496:	6841      	ldr	r1, [r0, #4]
 801a498:	4e80      	ldr	r6, [pc, #512]	@ (801a69c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x288>)
 801a49a:	680b      	ldr	r3, [r1, #0]
 801a49c:	699b      	ldr	r3, [r3, #24]
 801a49e:	42b3      	cmp	r3, r6
 801a4a0:	f040 80e4 	bne.w	801a66c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x258>
 801a4a4:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 801a4a6:	4798      	blx	r3
 801a4a8:	4b7d      	ldr	r3, [pc, #500]	@ (801a6a0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 801a4aa:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801a4ae:	881b      	ldrh	r3, [r3, #0]
 801a4b0:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 801a4b4:	2cff      	cmp	r4, #255	@ 0xff
 801a4b6:	fb03 1202 	mla	r2, r3, r2, r1
 801a4ba:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a4be:	d06f      	beq.n	801a5a0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x18c>
 801a4c0:	43e2      	mvns	r2, r4
 801a4c2:	fb05 f503 	mul.w	r5, r5, r3
 801a4c6:	eb00 0145 	add.w	r1, r0, r5, lsl #1
 801a4ca:	4288      	cmp	r0, r1
 801a4cc:	910c      	str	r1, [sp, #48]	@ 0x30
 801a4ce:	b2d2      	uxtb	r2, r2
 801a4d0:	d25e      	bcs.n	801a590 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x17c>
 801a4d2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801a4d4:	fa1f f884 	uxth.w	r8, r4
 801a4d8:	0049      	lsls	r1, r1, #1
 801a4da:	b292      	uxth	r2, r2
 801a4dc:	910d      	str	r1, [sp, #52]	@ 0x34
 801a4de:	990d      	ldr	r1, [sp, #52]	@ 0x34
 801a4e0:	eb00 0b01 	add.w	fp, r0, r1
 801a4e4:	4583      	cmp	fp, r0
 801a4e6:	d948      	bls.n	801a57a <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x166>
 801a4e8:	4684      	mov	ip, r0
 801a4ea:	f10a 3eff 	add.w	lr, sl, #4294967295
 801a4ee:	2103      	movs	r1, #3
 801a4f0:	2404      	movs	r4, #4
 801a4f2:	f81e 6f01 	ldrb.w	r6, [lr, #1]!
 801a4f6:	f8bc 3000 	ldrh.w	r3, [ip]
 801a4fa:	fb11 4606 	smlabb	r6, r1, r6, r4
 801a4fe:	eb09 0106 	add.w	r1, r9, r6
 801a502:	788d      	ldrb	r5, [r1, #2]
 801a504:	784f      	ldrb	r7, [r1, #1]
 801a506:	00dc      	lsls	r4, r3, #3
 801a508:	b2e4      	uxtb	r4, r4
 801a50a:	fb14 f402 	smulbb	r4, r4, r2
 801a50e:	fb15 f508 	smulbb	r5, r5, r8
 801a512:	fb17 f708 	smulbb	r7, r7, r8
 801a516:	f819 6006 	ldrb.w	r6, [r9, r6]
 801a51a:	1219      	asrs	r1, r3, #8
 801a51c:	10db      	asrs	r3, r3, #3
 801a51e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801a522:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801a526:	fb06 4608 	mla	r6, r6, r8, r4
 801a52a:	fb01 5102 	mla	r1, r1, r2, r5
 801a52e:	fb03 7302 	mla	r3, r3, r2, r7
 801a532:	b2b6      	uxth	r6, r6
 801a534:	b29b      	uxth	r3, r3
 801a536:	b28d      	uxth	r5, r1
 801a538:	1c5c      	adds	r4, r3, #1
 801a53a:	1c69      	adds	r1, r5, #1
 801a53c:	1c77      	adds	r7, r6, #1
 801a53e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801a542:	eb04 2413 	add.w	r4, r4, r3, lsr #8
 801a546:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801a54a:	f401 4378 	and.w	r3, r1, #63488	@ 0xf800
 801a54e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a552:	0961      	lsrs	r1, r4, #5
 801a554:	4333      	orrs	r3, r6
 801a556:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a55a:	430b      	orrs	r3, r1
 801a55c:	f82c 3b02 	strh.w	r3, [ip], #2
 801a560:	45e3      	cmp	fp, ip
 801a562:	d8c4      	bhi.n	801a4ee <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xda>
 801a564:	43c3      	mvns	r3, r0
 801a566:	449b      	add	fp, r3
 801a568:	4b4d      	ldr	r3, [pc, #308]	@ (801a6a0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 801a56a:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
 801a56e:	f10b 0b01 	add.w	fp, fp, #1
 801a572:	881b      	ldrh	r3, [r3, #0]
 801a574:	eb00 004b 	add.w	r0, r0, fp, lsl #1
 801a578:	44da      	add	sl, fp
 801a57a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801a57c:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 801a580:	1b5c      	subs	r4, r3, r5
 801a582:	1b49      	subs	r1, r1, r5
 801a584:	448a      	add	sl, r1
 801a586:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801a588:	eb00 0044 	add.w	r0, r0, r4, lsl #1
 801a58c:	4281      	cmp	r1, r0
 801a58e:	d8a6      	bhi.n	801a4de <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xca>
 801a590:	4b40      	ldr	r3, [pc, #256]	@ (801a694 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x280>)
 801a592:	6818      	ldr	r0, [r3, #0]
 801a594:	6803      	ldr	r3, [r0, #0]
 801a596:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a598:	4798      	blx	r3
 801a59a:	b013      	add	sp, #76	@ 0x4c
 801a59c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a5a0:	fb05 f503 	mul.w	r5, r5, r3
 801a5a4:	eb00 0e45 	add.w	lr, r0, r5, lsl #1
 801a5a8:	4570      	cmp	r0, lr
 801a5aa:	d2f1      	bcs.n	801a590 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x17c>
 801a5ac:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a5ae:	f04f 0c03 	mov.w	ip, #3
 801a5b2:	2704      	movs	r7, #4
 801a5b4:	4693      	mov	fp, r2
 801a5b6:	0051      	lsls	r1, r2, #1
 801a5b8:	4e3a      	ldr	r6, [pc, #232]	@ (801a6a4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x290>)
 801a5ba:	910b      	str	r1, [sp, #44]	@ 0x2c
 801a5bc:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a5be:	eb00 0802 	add.w	r8, r0, r2
 801a5c2:	4580      	cmp	r8, r0
 801a5c4:	d923      	bls.n	801a60e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1fa>
 801a5c6:	4604      	mov	r4, r0
 801a5c8:	f10a 35ff 	add.w	r5, sl, #4294967295
 801a5cc:	f815 2f01 	ldrb.w	r2, [r5, #1]!
 801a5d0:	fb1c 7202 	smlabb	r2, ip, r2, r7
 801a5d4:	eb09 0302 	add.w	r3, r9, r2
 801a5d8:	7859      	ldrb	r1, [r3, #1]
 801a5da:	789b      	ldrb	r3, [r3, #2]
 801a5dc:	00c9      	lsls	r1, r1, #3
 801a5de:	f819 2002 	ldrb.w	r2, [r9, r2]
 801a5e2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a5e6:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 801a5ea:	430b      	orrs	r3, r1
 801a5ec:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 801a5f0:	f824 3b02 	strh.w	r3, [r4], #2
 801a5f4:	45a0      	cmp	r8, r4
 801a5f6:	d8e9      	bhi.n	801a5cc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1b8>
 801a5f8:	43c3      	mvns	r3, r0
 801a5fa:	4498      	add	r8, r3
 801a5fc:	4b28      	ldr	r3, [pc, #160]	@ (801a6a0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 801a5fe:	ea4f 0858 	mov.w	r8, r8, lsr #1
 801a602:	f108 0801 	add.w	r8, r8, #1
 801a606:	881b      	ldrh	r3, [r3, #0]
 801a608:	eb00 0048 	add.w	r0, r0, r8, lsl #1
 801a60c:	44c2      	add	sl, r8
 801a60e:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801a612:	eba3 010b 	sub.w	r1, r3, fp
 801a616:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801a61a:	eba2 020b 	sub.w	r2, r2, fp
 801a61e:	4586      	cmp	lr, r0
 801a620:	4492      	add	sl, r2
 801a622:	d8cb      	bhi.n	801a5bc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 801a624:	e7b4      	b.n	801a590 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x17c>
 801a626:	4798      	blx	r3
 801a628:	2801      	cmp	r0, #1
 801a62a:	d122      	bne.n	801a672 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x25e>
 801a62c:	4b1e      	ldr	r3, [pc, #120]	@ (801a6a8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x294>)
 801a62e:	6818      	ldr	r0, [r3, #0]
 801a630:	b350      	cbz	r0, 801a688 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x274>
 801a632:	2600      	movs	r6, #0
 801a634:	270b      	movs	r7, #11
 801a636:	4b1a      	ldr	r3, [pc, #104]	@ (801a6a0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 801a638:	b2aa      	uxth	r2, r5
 801a63a:	881d      	ldrh	r5, [r3, #0]
 801a63c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801a640:	9404      	str	r4, [sp, #16]
 801a642:	9506      	str	r5, [sp, #24]
 801a644:	f8bd 4042 	ldrh.w	r4, [sp, #66]	@ 0x42
 801a648:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 801a64c:	e9cd 3201 	strd	r3, r2, [sp, #4]
 801a650:	4651      	mov	r1, sl
 801a652:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801a656:	464a      	mov	r2, r9
 801a658:	9608      	str	r6, [sp, #32]
 801a65a:	9605      	str	r6, [sp, #20]
 801a65c:	9707      	str	r7, [sp, #28]
 801a65e:	9503      	str	r5, [sp, #12]
 801a660:	9400      	str	r4, [sp, #0]
 801a662:	f7fa fe27 	bl	80152b4 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 801a666:	b013      	add	sp, #76	@ 0x4c
 801a668:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a66c:	4608      	mov	r0, r1
 801a66e:	4798      	blx	r3
 801a670:	e7da      	b.n	801a628 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x214>
 801a672:	4b08      	ldr	r3, [pc, #32]	@ (801a694 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x280>)
 801a674:	6818      	ldr	r0, [r3, #0]
 801a676:	6802      	ldr	r2, [r0, #0]
 801a678:	e714      	b.n	801a4a4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x90>
 801a67a:	4b0c      	ldr	r3, [pc, #48]	@ (801a6ac <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x298>)
 801a67c:	4a0c      	ldr	r2, [pc, #48]	@ (801a6b0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x29c>)
 801a67e:	f240 618a 	movw	r1, #1674	@ 0x68a
 801a682:	480c      	ldr	r0, [pc, #48]	@ (801a6b4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2a0>)
 801a684:	f00a fb56 	bl	8024d34 <__assert_func>
 801a688:	4b0b      	ldr	r3, [pc, #44]	@ (801a6b8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2a4>)
 801a68a:	4a0c      	ldr	r2, [pc, #48]	@ (801a6bc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2a8>)
 801a68c:	217c      	movs	r1, #124	@ 0x7c
 801a68e:	480c      	ldr	r0, [pc, #48]	@ (801a6c0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ac>)
 801a690:	f00a fb50 	bl	8024d34 <__assert_func>
 801a694:	2004bf98 	.word	0x2004bf98
 801a698:	08001829 	.word	0x08001829
 801a69c:	0800e31d 	.word	0x0800e31d
 801a6a0:	2004bf92 	.word	0x2004bf92
 801a6a4:	fffff800 	.word	0xfffff800
 801a6a8:	2004c150 	.word	0x2004c150
 801a6ac:	0802798c 	.word	0x0802798c
 801a6b0:	080285c8 	.word	0x080285c8
 801a6b4:	08027928 	.word	0x08027928
 801a6b8:	08027884 	.word	0x08027884
 801a6bc:	08028130 	.word	0x08028130
 801a6c0:	080278ac 	.word	0x080278ac

0801a6c4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 801a6c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a6c8:	4693      	mov	fp, r2
 801a6ca:	7812      	ldrb	r2, [r2, #0]
 801a6cc:	b08d      	sub	sp, #52	@ 0x34
 801a6ce:	2a01      	cmp	r2, #1
 801a6d0:	f89d 705c 	ldrb.w	r7, [sp, #92]	@ 0x5c
 801a6d4:	f040 8252 	bne.w	801ab7c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4b8>
 801a6d8:	b917      	cbnz	r7, 801a6e0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1c>
 801a6da:	b00d      	add	sp, #52	@ 0x34
 801a6dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a6e0:	461e      	mov	r6, r3
 801a6e2:	6818      	ldr	r0, [r3, #0]
 801a6e4:	460c      	mov	r4, r1
 801a6e6:	6859      	ldr	r1, [r3, #4]
 801a6e8:	ab08      	add	r3, sp, #32
 801a6ea:	c303      	stmia	r3!, {r0, r1}
 801a6ec:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801a6ee:	f10b 0b04 	add.w	fp, fp, #4
 801a6f2:	6818      	ldr	r0, [r3, #0]
 801a6f4:	6859      	ldr	r1, [r3, #4]
 801a6f6:	ab0a      	add	r3, sp, #40	@ 0x28
 801a6f8:	c303      	stmia	r3!, {r0, r1}
 801a6fa:	a808      	add	r0, sp, #32
 801a6fc:	f7f4 fe70 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a700:	4631      	mov	r1, r6
 801a702:	a80a      	add	r0, sp, #40	@ 0x28
 801a704:	f7f4 fe94 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a708:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801a70c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801a710:	f003 0201 	and.w	r2, r3, #1
 801a714:	4615      	mov	r5, r2
 801a716:	9204      	str	r2, [sp, #16]
 801a718:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801a71c:	f8bd 0022 	ldrh.w	r0, [sp, #34]	@ 0x22
 801a720:	442b      	add	r3, r5
 801a722:	fb02 1303 	mla	r3, r2, r3, r1
 801a726:	f8bd 6020 	ldrh.w	r6, [sp, #32]
 801a72a:	4402      	add	r2, r0
 801a72c:	48b9      	ldr	r0, [pc, #740]	@ (801aa14 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x350>)
 801a72e:	440e      	add	r6, r1
 801a730:	6800      	ldr	r0, [r0, #0]
 801a732:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801a736:	f8ad 6028 	strh.w	r6, [sp, #40]	@ 0x28
 801a73a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801a73e:	eb04 0363 	add.w	r3, r4, r3, asr #1
 801a742:	6802      	ldr	r2, [r0, #0]
 801a744:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	@ 0x2c
 801a748:	9301      	str	r3, [sp, #4]
 801a74a:	f001 0301 	and.w	r3, r1, #1
 801a74e:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 801a750:	9303      	str	r3, [sp, #12]
 801a752:	9502      	str	r5, [sp, #8]
 801a754:	f9bd 402e 	ldrsh.w	r4, [sp, #46]	@ 0x2e
 801a758:	4790      	blx	r2
 801a75a:	4baf      	ldr	r3, [pc, #700]	@ (801aa18 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x354>)
 801a75c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801a760:	881b      	ldrh	r3, [r3, #0]
 801a762:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801a766:	2fff      	cmp	r7, #255	@ 0xff
 801a768:	fb03 1202 	mla	r2, r3, r2, r1
 801a76c:	eb00 0a42 	add.w	sl, r0, r2, lsl #1
 801a770:	f000 8154 	beq.w	801aa1c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 801a774:	ea6f 0c07 	mvn.w	ip, r7
 801a778:	fb03 f404 	mul.w	r4, r3, r4
 801a77c:	eb0a 0344 	add.w	r3, sl, r4, lsl #1
 801a780:	459a      	cmp	sl, r3
 801a782:	9306      	str	r3, [sp, #24]
 801a784:	fa5f fc8c 	uxtb.w	ip, ip
 801a788:	f080 80b6 	bcs.w	801a8f8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x234>
 801a78c:	1e6b      	subs	r3, r5, #1
 801a78e:	b2bf      	uxth	r7, r7
 801a790:	fa1f fc8c 	uxth.w	ip, ip
 801a794:	9307      	str	r3, [sp, #28]
 801a796:	9b03      	ldr	r3, [sp, #12]
 801a798:	2b00      	cmp	r3, #0
 801a79a:	f040 80fc 	bne.w	801a996 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2d2>
 801a79e:	9b01      	ldr	r3, [sp, #4]
 801a7a0:	f8dd 9008 	ldr.w	r9, [sp, #8]
 801a7a4:	9300      	str	r3, [sp, #0]
 801a7a6:	f1b9 0f01 	cmp.w	r9, #1
 801a7aa:	f340 808e 	ble.w	801a8ca <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x206>
 801a7ae:	f1a9 0302 	sub.w	r3, r9, #2
 801a7b2:	ea4f 0953 	mov.w	r9, r3, lsr #1
 801a7b6:	9305      	str	r3, [sp, #20]
 801a7b8:	9b00      	ldr	r3, [sp, #0]
 801a7ba:	f10a 0808 	add.w	r8, sl, #8
 801a7be:	eb08 0889 	add.w	r8, r8, r9, lsl #2
 801a7c2:	f10a 0604 	add.w	r6, sl, #4
 801a7c6:	f103 3eff 	add.w	lr, r3, #4294967295
 801a7ca:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
 801a7ce:	f836 3c04 	ldrh.w	r3, [r6, #-4]
 801a7d2:	0909      	lsrs	r1, r1, #4
 801a7d4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801a7d8:	eb0b 0001 	add.w	r0, fp, r1
 801a7dc:	7882      	ldrb	r2, [r0, #2]
 801a7de:	7844      	ldrb	r4, [r0, #1]
 801a7e0:	00dd      	lsls	r5, r3, #3
 801a7e2:	b2ed      	uxtb	r5, r5
 801a7e4:	fb12 f207 	smulbb	r2, r2, r7
 801a7e8:	fb15 f50c 	smulbb	r5, r5, ip
 801a7ec:	fb14 f407 	smulbb	r4, r4, r7
 801a7f0:	f81b 1001 	ldrb.w	r1, [fp, r1]
 801a7f4:	1218      	asrs	r0, r3, #8
 801a7f6:	10db      	asrs	r3, r3, #3
 801a7f8:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801a7fc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801a800:	fb00 200c 	mla	r0, r0, ip, r2
 801a804:	fb01 5507 	mla	r5, r1, r7, r5
 801a808:	fb03 440c 	mla	r4, r3, ip, r4
 801a80c:	b281      	uxth	r1, r0
 801a80e:	b2ad      	uxth	r5, r5
 801a810:	b2a4      	uxth	r4, r4
 801a812:	1c68      	adds	r0, r5, #1
 801a814:	1c4b      	adds	r3, r1, #1
 801a816:	1c62      	adds	r2, r4, #1
 801a818:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801a81c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801a820:	eb00 2115 	add.w	r1, r0, r5, lsr #8
 801a824:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801a828:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801a82c:	0952      	lsrs	r2, r2, #5
 801a82e:	430b      	orrs	r3, r1
 801a830:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a834:	4313      	orrs	r3, r2
 801a836:	f826 3c04 	strh.w	r3, [r6, #-4]
 801a83a:	f89e 1000 	ldrb.w	r1, [lr]
 801a83e:	f836 3c02 	ldrh.w	r3, [r6, #-2]
 801a842:	f001 010f 	and.w	r1, r1, #15
 801a846:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801a84a:	eb0b 0001 	add.w	r0, fp, r1
 801a84e:	7882      	ldrb	r2, [r0, #2]
 801a850:	00dd      	lsls	r5, r3, #3
 801a852:	7840      	ldrb	r0, [r0, #1]
 801a854:	b2ed      	uxtb	r5, r5
 801a856:	fb12 f207 	smulbb	r2, r2, r7
 801a85a:	fb10 f007 	smulbb	r0, r0, r7
 801a85e:	fb15 f50c 	smulbb	r5, r5, ip
 801a862:	f81b 1001 	ldrb.w	r1, [fp, r1]
 801a866:	121c      	asrs	r4, r3, #8
 801a868:	10db      	asrs	r3, r3, #3
 801a86a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801a86e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801a872:	fb04 240c 	mla	r4, r4, ip, r2
 801a876:	fb01 5507 	mla	r5, r1, r7, r5
 801a87a:	fb03 020c 	mla	r2, r3, ip, r0
 801a87e:	b2a1      	uxth	r1, r4
 801a880:	b2ad      	uxth	r5, r5
 801a882:	b290      	uxth	r0, r2
 801a884:	1c4b      	adds	r3, r1, #1
 801a886:	1c6c      	adds	r4, r5, #1
 801a888:	1c42      	adds	r2, r0, #1
 801a88a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801a88e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801a892:	eb04 2115 	add.w	r1, r4, r5, lsr #8
 801a896:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801a89a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801a89e:	0952      	lsrs	r2, r2, #5
 801a8a0:	430b      	orrs	r3, r1
 801a8a2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a8a6:	4313      	orrs	r3, r2
 801a8a8:	f826 3c02 	strh.w	r3, [r6, #-2]
 801a8ac:	3604      	adds	r6, #4
 801a8ae:	45b0      	cmp	r8, r6
 801a8b0:	d18b      	bne.n	801a7ca <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x106>
 801a8b2:	9a00      	ldr	r2, [sp, #0]
 801a8b4:	f109 0301 	add.w	r3, r9, #1
 801a8b8:	441a      	add	r2, r3
 801a8ba:	eb0a 0a83 	add.w	sl, sl, r3, lsl #2
 801a8be:	9b05      	ldr	r3, [sp, #20]
 801a8c0:	ebc9 79c9 	rsb	r9, r9, r9, lsl #31
 801a8c4:	9200      	str	r2, [sp, #0]
 801a8c6:	eb03 0949 	add.w	r9, r3, r9, lsl #1
 801a8ca:	f1b9 0f01 	cmp.w	r9, #1
 801a8ce:	d01b      	beq.n	801a908 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x244>
 801a8d0:	9904      	ldr	r1, [sp, #16]
 801a8d2:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801a8d6:	4a50      	ldr	r2, [pc, #320]	@ (801aa18 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x354>)
 801a8d8:	440b      	add	r3, r1
 801a8da:	8812      	ldrh	r2, [r2, #0]
 801a8dc:	9902      	ldr	r1, [sp, #8]
 801a8de:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801a8e2:	1a52      	subs	r2, r2, r1
 801a8e4:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 801a8e8:	9a01      	ldr	r2, [sp, #4]
 801a8ea:	eb02 0363 	add.w	r3, r2, r3, asr #1
 801a8ee:	9301      	str	r3, [sp, #4]
 801a8f0:	9b06      	ldr	r3, [sp, #24]
 801a8f2:	4553      	cmp	r3, sl
 801a8f4:	f63f af4f 	bhi.w	801a796 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xd2>
 801a8f8:	4b46      	ldr	r3, [pc, #280]	@ (801aa14 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x350>)
 801a8fa:	6818      	ldr	r0, [r3, #0]
 801a8fc:	6803      	ldr	r3, [r0, #0]
 801a8fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a900:	4798      	blx	r3
 801a902:	b00d      	add	sp, #52	@ 0x34
 801a904:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a908:	9b00      	ldr	r3, [sp, #0]
 801a90a:	781e      	ldrb	r6, [r3, #0]
 801a90c:	f8ba 3000 	ldrh.w	r3, [sl]
 801a910:	0936      	lsrs	r6, r6, #4
 801a912:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a916:	eb0b 0006 	add.w	r0, fp, r6
 801a91a:	7881      	ldrb	r1, [r0, #2]
 801a91c:	7845      	ldrb	r5, [r0, #1]
 801a91e:	00dc      	lsls	r4, r3, #3
 801a920:	b2e4      	uxtb	r4, r4
 801a922:	fb14 f40c 	smulbb	r4, r4, ip
 801a926:	fb11 f107 	smulbb	r1, r1, r7
 801a92a:	fb15 f507 	smulbb	r5, r5, r7
 801a92e:	f81b 0006 	ldrb.w	r0, [fp, r6]
 801a932:	121a      	asrs	r2, r3, #8
 801a934:	10db      	asrs	r3, r3, #3
 801a936:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801a93a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801a93e:	fb00 4007 	mla	r0, r0, r7, r4
 801a942:	fb02 120c 	mla	r2, r2, ip, r1
 801a946:	fb03 530c 	mla	r3, r3, ip, r5
 801a94a:	b291      	uxth	r1, r2
 801a94c:	b29b      	uxth	r3, r3
 801a94e:	b280      	uxth	r0, r0
 801a950:	1c4a      	adds	r2, r1, #1
 801a952:	1c5d      	adds	r5, r3, #1
 801a954:	1c44      	adds	r4, r0, #1
 801a956:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801a95a:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 801a95e:	eb05 2113 	add.w	r1, r5, r3, lsr #8
 801a962:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801a966:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 801a96a:	094a      	lsrs	r2, r1, #5
 801a96c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a970:	4303      	orrs	r3, r0
 801a972:	4313      	orrs	r3, r2
 801a974:	f8aa 3000 	strh.w	r3, [sl]
 801a978:	4b27      	ldr	r3, [pc, #156]	@ (801aa18 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x354>)
 801a97a:	9902      	ldr	r1, [sp, #8]
 801a97c:	881a      	ldrh	r2, [r3, #0]
 801a97e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801a982:	1a52      	subs	r2, r2, r1
 801a984:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 801a988:	9a04      	ldr	r2, [sp, #16]
 801a98a:	f10a 0a02 	add.w	sl, sl, #2
 801a98e:	4413      	add	r3, r2
 801a990:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801a994:	e7a8      	b.n	801a8e8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x224>
 801a996:	9b01      	ldr	r3, [sp, #4]
 801a998:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801a99c:	781e      	ldrb	r6, [r3, #0]
 801a99e:	f8ba 3000 	ldrh.w	r3, [sl]
 801a9a2:	f006 060f 	and.w	r6, r6, #15
 801a9a6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a9aa:	eb0b 0006 	add.w	r0, fp, r6
 801a9ae:	7881      	ldrb	r1, [r0, #2]
 801a9b0:	7845      	ldrb	r5, [r0, #1]
 801a9b2:	00dc      	lsls	r4, r3, #3
 801a9b4:	b2e4      	uxtb	r4, r4
 801a9b6:	fb14 f40c 	smulbb	r4, r4, ip
 801a9ba:	fb11 f107 	smulbb	r1, r1, r7
 801a9be:	fb15 f507 	smulbb	r5, r5, r7
 801a9c2:	f81b 0006 	ldrb.w	r0, [fp, r6]
 801a9c6:	121a      	asrs	r2, r3, #8
 801a9c8:	10db      	asrs	r3, r3, #3
 801a9ca:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801a9ce:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801a9d2:	fb00 4007 	mla	r0, r0, r7, r4
 801a9d6:	fb02 120c 	mla	r2, r2, ip, r1
 801a9da:	fb03 530c 	mla	r3, r3, ip, r5
 801a9de:	b291      	uxth	r1, r2
 801a9e0:	b29b      	uxth	r3, r3
 801a9e2:	b280      	uxth	r0, r0
 801a9e4:	1c4a      	adds	r2, r1, #1
 801a9e6:	1c5d      	adds	r5, r3, #1
 801a9e8:	1c44      	adds	r4, r0, #1
 801a9ea:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801a9ee:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 801a9f2:	eb05 2113 	add.w	r1, r5, r3, lsr #8
 801a9f6:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801a9fa:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 801a9fe:	094a      	lsrs	r2, r1, #5
 801aa00:	4303      	orrs	r3, r0
 801aa02:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801aa06:	4313      	orrs	r3, r2
 801aa08:	f82a 3b02 	strh.w	r3, [sl], #2
 801aa0c:	9b01      	ldr	r3, [sp, #4]
 801aa0e:	3301      	adds	r3, #1
 801aa10:	9300      	str	r3, [sp, #0]
 801aa12:	e6c8      	b.n	801a7a6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xe2>
 801aa14:	2004bf98 	.word	0x2004bf98
 801aa18:	2004bf92 	.word	0x2004bf92
 801aa1c:	fb03 f304 	mul.w	r3, r3, r4
 801aa20:	eb0a 0843 	add.w	r8, sl, r3, lsl #1
 801aa24:	45c2      	cmp	sl, r8
 801aa26:	f4bf af67 	bcs.w	801a8f8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x234>
 801aa2a:	9b02      	ldr	r3, [sp, #8]
 801aa2c:	4f57      	ldr	r7, [pc, #348]	@ (801ab8c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4c8>)
 801aa2e:	3b01      	subs	r3, #1
 801aa30:	f8dd 9004 	ldr.w	r9, [sp, #4]
 801aa34:	9300      	str	r3, [sp, #0]
 801aa36:	9b03      	ldr	r3, [sp, #12]
 801aa38:	2b00      	cmp	r3, #0
 801aa3a:	f000 808a 	beq.w	801ab52 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x48e>
 801aa3e:	f899 2000 	ldrb.w	r2, [r9]
 801aa42:	9e00      	ldr	r6, [sp, #0]
 801aa44:	f002 020f 	and.w	r2, r2, #15
 801aa48:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801aa4c:	eb0b 0302 	add.w	r3, fp, r2
 801aa50:	7859      	ldrb	r1, [r3, #1]
 801aa52:	789b      	ldrb	r3, [r3, #2]
 801aa54:	00c9      	lsls	r1, r1, #3
 801aa56:	f81b 0002 	ldrb.w	r0, [fp, r2]
 801aa5a:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 801aa5e:	f401 62fc 	and.w	r2, r1, #2016	@ 0x7e0
 801aa62:	4313      	orrs	r3, r2
 801aa64:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
 801aa68:	f109 0e01 	add.w	lr, r9, #1
 801aa6c:	f82a 3b02 	strh.w	r3, [sl], #2
 801aa70:	2e01      	cmp	r6, #1
 801aa72:	dd40      	ble.n	801aaf6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x432>
 801aa74:	3e02      	subs	r6, #2
 801aa76:	ea4f 0c56 	mov.w	ip, r6, lsr #1
 801aa7a:	f10a 0508 	add.w	r5, sl, #8
 801aa7e:	eb05 058c 	add.w	r5, r5, ip, lsl #2
 801aa82:	f10a 0004 	add.w	r0, sl, #4
 801aa86:	f10e 34ff 	add.w	r4, lr, #4294967295
 801aa8a:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 801aa8e:	3004      	adds	r0, #4
 801aa90:	0912      	lsrs	r2, r2, #4
 801aa92:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801aa96:	eb0b 0302 	add.w	r3, fp, r2
 801aa9a:	7859      	ldrb	r1, [r3, #1]
 801aa9c:	789b      	ldrb	r3, [r3, #2]
 801aa9e:	00c9      	lsls	r1, r1, #3
 801aaa0:	f81b 2002 	ldrb.w	r2, [fp, r2]
 801aaa4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801aaa8:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 801aaac:	430b      	orrs	r3, r1
 801aaae:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 801aab2:	f820 3c08 	strh.w	r3, [r0, #-8]
 801aab6:	7822      	ldrb	r2, [r4, #0]
 801aab8:	f002 020f 	and.w	r2, r2, #15
 801aabc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801aac0:	eb0b 0302 	add.w	r3, fp, r2
 801aac4:	7859      	ldrb	r1, [r3, #1]
 801aac6:	789b      	ldrb	r3, [r3, #2]
 801aac8:	00c9      	lsls	r1, r1, #3
 801aaca:	f81b 2002 	ldrb.w	r2, [fp, r2]
 801aace:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801aad2:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 801aad6:	430b      	orrs	r3, r1
 801aad8:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 801aadc:	f820 3c06 	strh.w	r3, [r0, #-6]
 801aae0:	4285      	cmp	r5, r0
 801aae2:	d1d2      	bne.n	801aa8a <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c6>
 801aae4:	f10c 0301 	add.w	r3, ip, #1
 801aae8:	ebcc 7ccc 	rsb	ip, ip, ip, lsl #31
 801aaec:	449e      	add	lr, r3
 801aaee:	eb0a 0a83 	add.w	sl, sl, r3, lsl #2
 801aaf2:	eb06 064c 	add.w	r6, r6, ip, lsl #1
 801aaf6:	2e01      	cmp	r6, #1
 801aaf8:	d12e      	bne.n	801ab58 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x494>
 801aafa:	f89e 2000 	ldrb.w	r2, [lr]
 801aafe:	0912      	lsrs	r2, r2, #4
 801ab00:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ab04:	eb0b 0302 	add.w	r3, fp, r2
 801ab08:	7859      	ldrb	r1, [r3, #1]
 801ab0a:	789b      	ldrb	r3, [r3, #2]
 801ab0c:	00c9      	lsls	r1, r1, #3
 801ab0e:	f81b 0002 	ldrb.w	r0, [fp, r2]
 801ab12:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 801ab16:	f401 62fc 	and.w	r2, r1, #2016	@ 0x7e0
 801ab1a:	4313      	orrs	r3, r2
 801ab1c:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
 801ab20:	f8aa 3000 	strh.w	r3, [sl]
 801ab24:	4b1a      	ldr	r3, [pc, #104]	@ (801ab90 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4cc>)
 801ab26:	9902      	ldr	r1, [sp, #8]
 801ab28:	881a      	ldrh	r2, [r3, #0]
 801ab2a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801ab2e:	1a52      	subs	r2, r2, r1
 801ab30:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 801ab34:	9a04      	ldr	r2, [sp, #16]
 801ab36:	f10a 0a02 	add.w	sl, sl, #2
 801ab3a:	4413      	add	r3, r2
 801ab3c:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801ab40:	45d0      	cmp	r8, sl
 801ab42:	eb09 0963 	add.w	r9, r9, r3, asr #1
 801ab46:	f67f aed7 	bls.w	801a8f8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x234>
 801ab4a:	9b03      	ldr	r3, [sp, #12]
 801ab4c:	2b00      	cmp	r3, #0
 801ab4e:	f47f af76 	bne.w	801aa3e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x37a>
 801ab52:	46ce      	mov	lr, r9
 801ab54:	9e02      	ldr	r6, [sp, #8]
 801ab56:	e78b      	b.n	801aa70 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3ac>
 801ab58:	9904      	ldr	r1, [sp, #16]
 801ab5a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801ab5e:	4a0c      	ldr	r2, [pc, #48]	@ (801ab90 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4cc>)
 801ab60:	440b      	add	r3, r1
 801ab62:	8812      	ldrh	r2, [r2, #0]
 801ab64:	9902      	ldr	r1, [sp, #8]
 801ab66:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801ab6a:	1a52      	subs	r2, r2, r1
 801ab6c:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 801ab70:	45d0      	cmp	r8, sl
 801ab72:	eb09 0963 	add.w	r9, r9, r3, asr #1
 801ab76:	f63f af5e 	bhi.w	801aa36 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x372>
 801ab7a:	e6bd      	b.n	801a8f8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x234>
 801ab7c:	4b05      	ldr	r3, [pc, #20]	@ (801ab94 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4d0>)
 801ab7e:	4a06      	ldr	r2, [pc, #24]	@ (801ab98 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4d4>)
 801ab80:	f240 61f9 	movw	r1, #1785	@ 0x6f9
 801ab84:	4805      	ldr	r0, [pc, #20]	@ (801ab9c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4d8>)
 801ab86:	f00a f8d5 	bl	8024d34 <__assert_func>
 801ab8a:	bf00      	nop
 801ab8c:	fffff800 	.word	0xfffff800
 801ab90:	2004bf92 	.word	0x2004bf92
 801ab94:	08027a2c 	.word	0x08027a2c
 801ab98:	08028904 	.word	0x08028904
 801ab9c:	08027928 	.word	0x08027928

0801aba0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 801aba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aba4:	b08f      	sub	sp, #60	@ 0x3c
 801aba6:	7814      	ldrb	r4, [r2, #0]
 801aba8:	461d      	mov	r5, r3
 801abaa:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 801abae:	2c01      	cmp	r4, #1
 801abb0:	9206      	str	r2, [sp, #24]
 801abb2:	9101      	str	r1, [sp, #4]
 801abb4:	9304      	str	r3, [sp, #16]
 801abb6:	f040 8142 	bne.w	801ae3e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x29e>
 801abba:	b913      	cbnz	r3, 801abc2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x22>
 801abbc:	b00f      	add	sp, #60	@ 0x3c
 801abbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801abc2:	6828      	ldr	r0, [r5, #0]
 801abc4:	6869      	ldr	r1, [r5, #4]
 801abc6:	ab0a      	add	r3, sp, #40	@ 0x28
 801abc8:	c303      	stmia	r3!, {r0, r1}
 801abca:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801abcc:	6818      	ldr	r0, [r3, #0]
 801abce:	6859      	ldr	r1, [r3, #4]
 801abd0:	ab0c      	add	r3, sp, #48	@ 0x30
 801abd2:	c303      	stmia	r3!, {r0, r1}
 801abd4:	a80a      	add	r0, sp, #40	@ 0x28
 801abd6:	f7f4 fc03 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801abda:	4629      	mov	r1, r5
 801abdc:	a80c      	add	r0, sp, #48	@ 0x30
 801abde:	f7f4 fc27 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801abe2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801abe6:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801abea:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801abee:	bfdd      	ittte	le
 801abf0:	f44f 6480 	movle.w	r4, #1024	@ 0x400
 801abf4:	b29a      	uxthle	r2, r3
 801abf6:	fb94 f4f2 	sdivle	r4, r4, r2
 801abfa:	b29a      	uxthgt	r2, r3
 801abfc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801ac00:	fb93 f0f4 	sdiv	r0, r3, r4
 801ac04:	b285      	uxth	r5, r0
 801ac06:	fb04 3c15 	mls	ip, r4, r5, r3
 801ac0a:	fb1c 1c02 	smlabb	ip, ip, r2, r1
 801ac0e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801ac12:	fa1f fb8c 	uxth.w	fp, ip
 801ac16:	4422      	add	r2, r4
 801ac18:	3a01      	subs	r2, #1
 801ac1a:	fb92 f4f4 	sdiv	r4, r2, r4
 801ac1e:	2d00      	cmp	r5, #0
 801ac20:	f040 8105 	bne.w	801ae2e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28e>
 801ac24:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801ac28:	f8bd 0028 	ldrh.w	r0, [sp, #40]	@ 0x28
 801ac2c:	4413      	add	r3, r2
 801ac2e:	4a87      	ldr	r2, [pc, #540]	@ (801ae4c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ac>)
 801ac30:	4401      	add	r1, r0
 801ac32:	6810      	ldr	r0, [r2, #0]
 801ac34:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 801ac38:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 801ac3c:	4616      	mov	r6, r2
 801ac3e:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801ac42:	6803      	ldr	r3, [r0, #0]
 801ac44:	9209      	str	r2, [sp, #36]	@ 0x24
 801ac46:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801ac48:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 801ac4c:	4798      	blx	r3
 801ac4e:	9f04      	ldr	r7, [sp, #16]
 801ac50:	f1bb 0f00 	cmp.w	fp, #0
 801ac54:	bf0c      	ite	eq
 801ac56:	4633      	moveq	r3, r6
 801ac58:	2300      	movne	r3, #0
 801ac5a:	ea6f 0807 	mvn.w	r8, r7
 801ac5e:	497c      	ldr	r1, [pc, #496]	@ (801ae50 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2b0>)
 801ac60:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801ac64:	8809      	ldrh	r1, [r1, #0]
 801ac66:	f9bd 6030 	ldrsh.w	r6, [sp, #48]	@ 0x30
 801ac6a:	fb01 f505 	mul.w	r5, r1, r5
 801ac6e:	fb01 6202 	mla	r2, r1, r2, r6
 801ac72:	b2a4      	uxth	r4, r4
 801ac74:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ac78:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801ac7c:	00a4      	lsls	r4, r4, #2
 801ac7e:	1d21      	adds	r1, r4, #4
 801ac80:	4290      	cmp	r0, r2
 801ac82:	9202      	str	r2, [sp, #8]
 801ac84:	9108      	str	r1, [sp, #32]
 801ac86:	fa1f fa83 	uxth.w	sl, r3
 801ac8a:	fa5f f888 	uxtb.w	r8, r8
 801ac8e:	d228      	bcs.n	801ace2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x142>
 801ac90:	2300      	movs	r3, #0
 801ac92:	469c      	mov	ip, r3
 801ac94:	9303      	str	r3, [sp, #12]
 801ac96:	fa1f f888 	uxth.w	r8, r8
 801ac9a:	fa1f f987 	uxth.w	r9, r7
 801ac9e:	f1bc 0f00 	cmp.w	ip, #0
 801aca2:	d10f      	bne.n	801acc4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x124>
 801aca4:	9901      	ldr	r1, [sp, #4]
 801aca6:	780a      	ldrb	r2, [r1, #0]
 801aca8:	ea4f 1c92 	mov.w	ip, r2, lsr #6
 801acac:	f10c 33ff 	add.w	r3, ip, #4294967295
 801acb0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801acb4:	2b02      	cmp	r3, #2
 801acb6:	9203      	str	r2, [sp, #12]
 801acb8:	f200 80b3 	bhi.w	801ae22 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x282>
 801acbc:	3101      	adds	r1, #1
 801acbe:	9101      	str	r1, [sp, #4]
 801acc0:	fa1f fc8c 	uxth.w	ip, ip
 801acc4:	f1bb 0f00 	cmp.w	fp, #0
 801acc8:	d013      	beq.n	801acf2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x152>
 801acca:	45dc      	cmp	ip, fp
 801accc:	f080 80a0 	bcs.w	801ae10 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x270>
 801acd0:	ebab 0c0c 	sub.w	ip, fp, ip
 801acd4:	fa1f fb8c 	uxth.w	fp, ip
 801acd8:	f04f 0c00 	mov.w	ip, #0
 801acdc:	9b02      	ldr	r3, [sp, #8]
 801acde:	4283      	cmp	r3, r0
 801ace0:	d8dd      	bhi.n	801ac9e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xfe>
 801ace2:	4b5a      	ldr	r3, [pc, #360]	@ (801ae4c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ac>)
 801ace4:	6818      	ldr	r0, [r3, #0]
 801ace6:	6803      	ldr	r3, [r0, #0]
 801ace8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801acea:	4798      	blx	r3
 801acec:	b00f      	add	sp, #60	@ 0x3c
 801acee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801acf2:	2303      	movs	r3, #3
 801acf4:	4619      	mov	r1, r3
 801acf6:	9a08      	ldr	r2, [sp, #32]
 801acf8:	9b03      	ldr	r3, [sp, #12]
 801acfa:	45d4      	cmp	ip, sl
 801acfc:	fb11 2703 	smlabb	r7, r1, r3, r2
 801ad00:	9b06      	ldr	r3, [sp, #24]
 801ad02:	441f      	add	r7, r3
 801ad04:	d362      	bcc.n	801adcc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x22c>
 801ad06:	ebac 030a 	sub.w	r3, ip, sl
 801ad0a:	b29b      	uxth	r3, r3
 801ad0c:	9305      	str	r3, [sp, #20]
 801ad0e:	9b04      	ldr	r3, [sp, #16]
 801ad10:	4654      	mov	r4, sl
 801ad12:	2bff      	cmp	r3, #255	@ 0xff
 801ad14:	f8cd b01c 	str.w	fp, [sp, #28]
 801ad18:	d062      	beq.n	801ade0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 801ad1a:	2c00      	cmp	r4, #0
 801ad1c:	d038      	beq.n	801ad90 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f0>
 801ad1e:	f104 3eff 	add.w	lr, r4, #4294967295
 801ad22:	fa1f fe8e 	uxth.w	lr, lr
 801ad26:	f10e 0e01 	add.w	lr, lr, #1
 801ad2a:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
 801ad2e:	8802      	ldrh	r2, [r0, #0]
 801ad30:	78bd      	ldrb	r5, [r7, #2]
 801ad32:	00d4      	lsls	r4, r2, #3
 801ad34:	7879      	ldrb	r1, [r7, #1]
 801ad36:	b2e4      	uxtb	r4, r4
 801ad38:	fb14 f408 	smulbb	r4, r4, r8
 801ad3c:	fb15 f509 	smulbb	r5, r5, r9
 801ad40:	fb11 f109 	smulbb	r1, r1, r9
 801ad44:	783e      	ldrb	r6, [r7, #0]
 801ad46:	1213      	asrs	r3, r2, #8
 801ad48:	10d2      	asrs	r2, r2, #3
 801ad4a:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801ad4e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801ad52:	fb06 4409 	mla	r4, r6, r9, r4
 801ad56:	fb03 5308 	mla	r3, r3, r8, r5
 801ad5a:	fb02 1208 	mla	r2, r2, r8, r1
 801ad5e:	b2a4      	uxth	r4, r4
 801ad60:	b291      	uxth	r1, r2
 801ad62:	b29d      	uxth	r5, r3
 801ad64:	1c62      	adds	r2, r4, #1
 801ad66:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801ad6a:	1c6b      	adds	r3, r5, #1
 801ad6c:	1c4a      	adds	r2, r1, #1
 801ad6e:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801ad72:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801ad76:	f3c4 21c4 	ubfx	r1, r4, #11, #5
 801ad7a:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801ad7e:	0952      	lsrs	r2, r2, #5
 801ad80:	430b      	orrs	r3, r1
 801ad82:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ad86:	4313      	orrs	r3, r2
 801ad88:	f820 3b02 	strh.w	r3, [r0], #2
 801ad8c:	4570      	cmp	r0, lr
 801ad8e:	d1ce      	bne.n	801ad2e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x18e>
 801ad90:	45d4      	cmp	ip, sl
 801ad92:	d316      	bcc.n	801adc2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x222>
 801ad94:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801ad96:	f8bd b02c 	ldrh.w	fp, [sp, #44]	@ 0x2c
 801ad9a:	4b2d      	ldr	r3, [pc, #180]	@ (801ae50 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2b0>)
 801ad9c:	fa1f fa82 	uxth.w	sl, r2
 801ada0:	ebab 0b0a 	sub.w	fp, fp, sl
 801ada4:	881b      	ldrh	r3, [r3, #0]
 801ada6:	fa1f fb8b 	uxth.w	fp, fp
 801adaa:	f1bb 0f00 	cmp.w	fp, #0
 801adae:	eba3 0302 	sub.w	r3, r3, r2
 801adb2:	f8dd c014 	ldr.w	ip, [sp, #20]
 801adb6:	bf18      	it	ne
 801adb8:	f04f 0a00 	movne.w	sl, #0
 801adbc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801adc0:	e78c      	b.n	801acdc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 801adc2:	f8dd c014 	ldr.w	ip, [sp, #20]
 801adc6:	f8dd a01c 	ldr.w	sl, [sp, #28]
 801adca:	e787      	b.n	801acdc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 801adcc:	ebaa 020c 	sub.w	r2, sl, ip
 801add0:	b293      	uxth	r3, r2
 801add2:	9307      	str	r3, [sp, #28]
 801add4:	9b04      	ldr	r3, [sp, #16]
 801add6:	4664      	mov	r4, ip
 801add8:	2bff      	cmp	r3, #255	@ 0xff
 801adda:	f8cd b014 	str.w	fp, [sp, #20]
 801adde:	d19c      	bne.n	801ad1a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x17a>
 801ade0:	2c00      	cmp	r4, #0
 801ade2:	d0d5      	beq.n	801ad90 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f0>
 801ade4:	3c01      	subs	r4, #1
 801ade6:	b2a4      	uxth	r4, r4
 801ade8:	3401      	adds	r4, #1
 801adea:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801adee:	787a      	ldrb	r2, [r7, #1]
 801adf0:	78bb      	ldrb	r3, [r7, #2]
 801adf2:	4918      	ldr	r1, [pc, #96]	@ (801ae54 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2b4>)
 801adf4:	00d2      	lsls	r2, r2, #3
 801adf6:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801adfa:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801adfe:	7839      	ldrb	r1, [r7, #0]
 801ae00:	4313      	orrs	r3, r2
 801ae02:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801ae06:	f820 3b02 	strh.w	r3, [r0], #2
 801ae0a:	42a0      	cmp	r0, r4
 801ae0c:	d1ef      	bne.n	801adee <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x24e>
 801ae0e:	e7bf      	b.n	801ad90 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f0>
 801ae10:	ebac 0c0b 	sub.w	ip, ip, fp
 801ae14:	fa1f fc8c 	uxth.w	ip, ip
 801ae18:	f8bd a024 	ldrh.w	sl, [sp, #36]	@ 0x24
 801ae1c:	f04f 0b00 	mov.w	fp, #0
 801ae20:	e75c      	b.n	801acdc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 801ae22:	460b      	mov	r3, r1
 801ae24:	3302      	adds	r3, #2
 801ae26:	f891 c001 	ldrb.w	ip, [r1, #1]
 801ae2a:	9301      	str	r3, [sp, #4]
 801ae2c:	e74a      	b.n	801acc4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x124>
 801ae2e:	9a06      	ldr	r2, [sp, #24]
 801ae30:	9801      	ldr	r0, [sp, #4]
 801ae32:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
 801ae36:	ba12      	rev	r2, r2
 801ae38:	4410      	add	r0, r2
 801ae3a:	9001      	str	r0, [sp, #4]
 801ae3c:	e6f2      	b.n	801ac24 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x84>
 801ae3e:	4b06      	ldr	r3, [pc, #24]	@ (801ae58 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2b8>)
 801ae40:	4a06      	ldr	r2, [pc, #24]	@ (801ae5c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2bc>)
 801ae42:	f240 7173 	movw	r1, #1907	@ 0x773
 801ae46:	4806      	ldr	r0, [pc, #24]	@ (801ae60 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2c0>)
 801ae48:	f009 ff74 	bl	8024d34 <__assert_func>
 801ae4c:	2004bf98 	.word	0x2004bf98
 801ae50:	2004bf92 	.word	0x2004bf92
 801ae54:	fffff800 	.word	0xfffff800
 801ae58:	08027a2c 	.word	0x08027a2c
 801ae5c:	08028aa8 	.word	0x08028aa8
 801ae60:	08027928 	.word	0x08027928

0801ae64 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 801ae64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ae68:	b09d      	sub	sp, #116	@ 0x74
 801ae6a:	7814      	ldrb	r4, [r2, #0]
 801ae6c:	461d      	mov	r5, r3
 801ae6e:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801ae72:	2c01      	cmp	r4, #1
 801ae74:	9211      	str	r2, [sp, #68]	@ 0x44
 801ae76:	9113      	str	r1, [sp, #76]	@ 0x4c
 801ae78:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ae7a:	f040 820a 	bne.w	801b292 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x42e>
 801ae7e:	b913      	cbnz	r3, 801ae86 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x22>
 801ae80:	b01d      	add	sp, #116	@ 0x74
 801ae82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ae86:	6869      	ldr	r1, [r5, #4]
 801ae88:	4683      	mov	fp, r0
 801ae8a:	6828      	ldr	r0, [r5, #0]
 801ae8c:	ab18      	add	r3, sp, #96	@ 0x60
 801ae8e:	c303      	stmia	r3!, {r0, r1}
 801ae90:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801ae92:	6818      	ldr	r0, [r3, #0]
 801ae94:	6859      	ldr	r1, [r3, #4]
 801ae96:	ab1a      	add	r3, sp, #104	@ 0x68
 801ae98:	c303      	stmia	r3!, {r0, r1}
 801ae9a:	a818      	add	r0, sp, #96	@ 0x60
 801ae9c:	f7f4 faa0 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801aea0:	4629      	mov	r1, r5
 801aea2:	a81a      	add	r0, sp, #104	@ 0x68
 801aea4:	f7f4 fac4 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801aea8:	f9bd 6064 	ldrsh.w	r6, [sp, #100]	@ 0x64
 801aeac:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801aeb0:	f340 814b 	ble.w	801b14a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2e6>
 801aeb4:	b2b0      	uxth	r0, r6
 801aeb6:	9416      	str	r4, [sp, #88]	@ 0x58
 801aeb8:	f9bd 306a 	ldrsh.w	r3, [sp, #106]	@ 0x6a
 801aebc:	f9bd 2066 	ldrsh.w	r2, [sp, #102]	@ 0x66
 801aec0:	fb93 f1f4 	sdiv	r1, r3, r4
 801aec4:	4422      	add	r2, r4
 801aec6:	3a01      	subs	r2, #1
 801aec8:	fb92 f2f4 	sdiv	r2, r2, r4
 801aecc:	b289      	uxth	r1, r1
 801aece:	fb04 3411 	mls	r4, r4, r1, r3
 801aed2:	9114      	str	r1, [sp, #80]	@ 0x50
 801aed4:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 801aed8:	f8bd 7060 	ldrh.w	r7, [sp, #96]	@ 0x60
 801aedc:	fb14 1600 	smlabb	r6, r4, r0, r1
 801aee0:	f8bd 5062 	ldrh.w	r5, [sp, #98]	@ 0x62
 801aee4:	48a4      	ldr	r0, [pc, #656]	@ (801b178 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x314>)
 801aee6:	4439      	add	r1, r7
 801aee8:	442b      	add	r3, r5
 801aeea:	6800      	ldr	r0, [r0, #0]
 801aeec:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 801aef0:	f8ad 306a 	strh.w	r3, [sp, #106]	@ 0x6a
 801aef4:	f9bd 706c 	ldrsh.w	r7, [sp, #108]	@ 0x6c
 801aef8:	6803      	ldr	r3, [r0, #0]
 801aefa:	b2b5      	uxth	r5, r6
 801aefc:	3201      	adds	r2, #1
 801aefe:	9501      	str	r5, [sp, #4]
 801af00:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801af02:	970b      	str	r7, [sp, #44]	@ 0x2c
 801af04:	b294      	uxth	r4, r2
 801af06:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801af0a:	4798      	blx	r3
 801af0c:	2100      	movs	r1, #0
 801af0e:	2d00      	cmp	r5, #0
 801af10:	4d9a      	ldr	r5, [pc, #616]	@ (801b17c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x318>)
 801af12:	bf08      	it	eq
 801af14:	463a      	moveq	r2, r7
 801af16:	882d      	ldrh	r5, [r5, #0]
 801af18:	9112      	str	r1, [sp, #72]	@ 0x48
 801af1a:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 801af1e:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 801af22:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801af24:	fb05 7101 	mla	r1, r5, r1, r7
 801af28:	ea6f 0c03 	mvn.w	ip, r3
 801af2c:	fb05 f306 	mul.w	r3, r5, r6
 801af30:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801af34:	9100      	str	r1, [sp, #0]
 801af36:	eb01 0143 	add.w	r1, r1, r3, lsl #1
 801af3a:	f10b 030a 	add.w	r3, fp, #10
 801af3e:	9317      	str	r3, [sp, #92]	@ 0x5c
 801af40:	465b      	mov	r3, fp
 801af42:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801af44:	bf18      	it	ne
 801af46:	2200      	movne	r2, #0
 801af48:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 801af4c:	f104 0904 	add.w	r9, r4, #4
 801af50:	46cb      	mov	fp, r9
 801af52:	4699      	mov	r9, r3
 801af54:	460b      	mov	r3, r1
 801af56:	b292      	uxth	r2, r2
 801af58:	9202      	str	r2, [sp, #8]
 801af5a:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801af5e:	fa5f f28c 	uxtb.w	r2, ip
 801af62:	9107      	str	r1, [sp, #28]
 801af64:	9215      	str	r2, [sp, #84]	@ 0x54
 801af66:	9a00      	ldr	r2, [sp, #0]
 801af68:	4293      	cmp	r3, r2
 801af6a:	f240 80fd 	bls.w	801b168 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x304>
 801af6e:	9a01      	ldr	r2, [sp, #4]
 801af70:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 801af74:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801af76:	fbb2 f3f3 	udiv	r3, r2, r3
 801af7a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801af7c:	2701      	movs	r7, #1
 801af7e:	fa11 f482 	uxtah	r4, r1, r2
 801af82:	00a4      	lsls	r4, r4, #2
 801af84:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801af86:	3404      	adds	r4, #4
 801af88:	1911      	adds	r1, r2, r4
 801af8a:	788a      	ldrb	r2, [r1, #2]
 801af8c:	784d      	ldrb	r5, [r1, #1]
 801af8e:	0212      	lsls	r2, r2, #8
 801af90:	78c9      	ldrb	r1, [r1, #3]
 801af92:	ea42 4005 	orr.w	r0, r2, r5, lsl #16
 801af96:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801af98:	4308      	orrs	r0, r1
 801af9a:	4629      	mov	r1, r5
 801af9c:	2600      	movs	r6, #0
 801af9e:	4401      	add	r1, r0
 801afa0:	784a      	ldrb	r2, [r1, #1]
 801afa2:	5c28      	ldrb	r0, [r5, r0]
 801afa4:	0212      	lsls	r2, r2, #8
 801afa6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801afa8:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801afac:	4302      	orrs	r2, r0
 801afae:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801afb0:	5d2c      	ldrb	r4, [r5, r4]
 801afb2:	f889 2009 	strb.w	r2, [r9, #9]
 801afb6:	b292      	uxth	r2, r2
 801afb8:	1ac3      	subs	r3, r0, r3
 801afba:	9209      	str	r2, [sp, #36]	@ 0x24
 801afbc:	19ca      	adds	r2, r1, r7
 801afbe:	9205      	str	r2, [sp, #20]
 801afc0:	b29b      	uxth	r3, r3
 801afc2:	19e2      	adds	r2, r4, r7
 801afc4:	f8bd e054 	ldrh.w	lr, [sp, #84]	@ 0x54
 801afc8:	960e      	str	r6, [sp, #56]	@ 0x38
 801afca:	970a      	str	r7, [sp, #40]	@ 0x28
 801afcc:	940d      	str	r4, [sp, #52]	@ 0x34
 801afce:	9206      	str	r2, [sp, #24]
 801afd0:	9310      	str	r3, [sp, #64]	@ 0x40
 801afd2:	9704      	str	r7, [sp, #16]
 801afd4:	9b01      	ldr	r3, [sp, #4]
 801afd6:	2b00      	cmp	r3, #0
 801afd8:	d034      	beq.n	801b044 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1e0>
 801afda:	42bb      	cmp	r3, r7
 801afdc:	f240 811a 	bls.w	801b214 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3b0>
 801afe0:	1bdf      	subs	r7, r3, r7
 801afe2:	b2bb      	uxth	r3, r7
 801afe4:	9301      	str	r3, [sp, #4]
 801afe6:	9a00      	ldr	r2, [sp, #0]
 801afe8:	9b07      	ldr	r3, [sp, #28]
 801afea:	4293      	cmp	r3, r2
 801afec:	f240 80bc 	bls.w	801b168 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x304>
 801aff0:	9805      	ldr	r0, [sp, #20]
 801aff2:	9c04      	ldr	r4, [sp, #16]
 801aff4:	7842      	ldrb	r2, [r0, #1]
 801aff6:	f1c4 0107 	rsb	r1, r4, #7
 801affa:	7803      	ldrb	r3, [r0, #0]
 801affc:	408a      	lsls	r2, r1
 801affe:	0052      	lsls	r2, r2, #1
 801b000:	4123      	asrs	r3, r4
 801b002:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801b006:	1c61      	adds	r1, r4, #1
 801b008:	b2db      	uxtb	r3, r3
 801b00a:	4313      	orrs	r3, r2
 801b00c:	b2ca      	uxtb	r2, r1
 801b00e:	4611      	mov	r1, r2
 801b010:	2908      	cmp	r1, #8
 801b012:	9204      	str	r2, [sp, #16]
 801b014:	b29a      	uxth	r2, r3
 801b016:	f000 8107 	beq.w	801b228 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c4>
 801b01a:	3001      	adds	r0, #1
 801b01c:	9005      	str	r0, [sp, #20]
 801b01e:	990d      	ldr	r1, [sp, #52]	@ 0x34
 801b020:	4291      	cmp	r1, r2
 801b022:	f0c0 80d9 	bcc.w	801b1d8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x374>
 801b026:	2701      	movs	r7, #1
 801b028:	b2db      	uxtb	r3, r3
 801b02a:	f889 3009 	strb.w	r3, [r9, #9]
 801b02e:	9906      	ldr	r1, [sp, #24]
 801b030:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801b034:	f0c0 80fe 	bcc.w	801b234 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3d0>
 801b038:	9b01      	ldr	r3, [sp, #4]
 801b03a:	e9cd 2709 	strd	r2, r7, [sp, #36]	@ 0x24
 801b03e:	2600      	movs	r6, #0
 801b040:	2b00      	cmp	r3, #0
 801b042:	d1ca      	bne.n	801afda <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x176>
 801b044:	9b02      	ldr	r3, [sp, #8]
 801b046:	429f      	cmp	r7, r3
 801b048:	461a      	mov	r2, r3
 801b04a:	f0c0 8099 	bcc.w	801b180 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x31c>
 801b04e:	1afb      	subs	r3, r7, r3
 801b050:	b29b      	uxth	r3, r3
 801b052:	9308      	str	r3, [sp, #32]
 801b054:	9b01      	ldr	r3, [sp, #4]
 801b056:	9203      	str	r2, [sp, #12]
 801b058:	930c      	str	r3, [sp, #48]	@ 0x30
 801b05a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b05c:	2bff      	cmp	r3, #255	@ 0xff
 801b05e:	9b03      	ldr	r3, [sp, #12]
 801b060:	f000 809a 	beq.w	801b198 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x334>
 801b064:	2b00      	cmp	r3, #0
 801b066:	d049      	beq.n	801b0fc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x298>
 801b068:	eb06 0803 	add.w	r8, r6, r3
 801b06c:	f8dd c000 	ldr.w	ip, [sp]
 801b070:	fa1f f888 	uxth.w	r8, r8
 801b074:	eb09 0306 	add.w	r3, r9, r6
 801b078:	7a5c      	ldrb	r4, [r3, #9]
 801b07a:	f8bc 3000 	ldrh.w	r3, [ip]
 801b07e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801b082:	eb0b 0204 	add.w	r2, fp, r4
 801b086:	7890      	ldrb	r0, [r2, #2]
 801b088:	7855      	ldrb	r5, [r2, #1]
 801b08a:	00d9      	lsls	r1, r3, #3
 801b08c:	b2c9      	uxtb	r1, r1
 801b08e:	fb11 f10e 	smulbb	r1, r1, lr
 801b092:	fb10 f00a 	smulbb	r0, r0, sl
 801b096:	fb15 f50a 	smulbb	r5, r5, sl
 801b09a:	f81b 4004 	ldrb.w	r4, [fp, r4]
 801b09e:	121a      	asrs	r2, r3, #8
 801b0a0:	10db      	asrs	r3, r3, #3
 801b0a2:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801b0a6:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801b0aa:	fb04 140a 	mla	r4, r4, sl, r1
 801b0ae:	fb02 020e 	mla	r2, r2, lr, r0
 801b0b2:	fb03 530e 	mla	r3, r3, lr, r5
 801b0b6:	b2a4      	uxth	r4, r4
 801b0b8:	b29b      	uxth	r3, r3
 801b0ba:	b290      	uxth	r0, r2
 801b0bc:	1c59      	adds	r1, r3, #1
 801b0be:	1c42      	adds	r2, r0, #1
 801b0c0:	1c65      	adds	r5, r4, #1
 801b0c2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b0c6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b0ca:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 801b0ce:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 801b0d2:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801b0d6:	094a      	lsrs	r2, r1, #5
 801b0d8:	3601      	adds	r6, #1
 801b0da:	4323      	orrs	r3, r4
 801b0dc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b0e0:	b2b6      	uxth	r6, r6
 801b0e2:	4313      	orrs	r3, r2
 801b0e4:	4546      	cmp	r6, r8
 801b0e6:	f82c 3b02 	strh.w	r3, [ip], #2
 801b0ea:	d1c3      	bne.n	801b074 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x210>
 801b0ec:	9b03      	ldr	r3, [sp, #12]
 801b0ee:	9a00      	ldr	r2, [sp, #0]
 801b0f0:	3b01      	subs	r3, #1
 801b0f2:	b29b      	uxth	r3, r3
 801b0f4:	3301      	adds	r3, #1
 801b0f6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b0fa:	9300      	str	r3, [sp, #0]
 801b0fc:	9b02      	ldr	r3, [sp, #8]
 801b0fe:	429f      	cmp	r7, r3
 801b100:	d32b      	bcc.n	801b15a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2f6>
 801b102:	4b1e      	ldr	r3, [pc, #120]	@ (801b17c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x318>)
 801b104:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801b106:	881b      	ldrh	r3, [r3, #0]
 801b108:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801b10a:	1a5b      	subs	r3, r3, r1
 801b10c:	9900      	ldr	r1, [sp, #0]
 801b10e:	3201      	adds	r2, #1
 801b110:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801b114:	9300      	str	r3, [sp, #0]
 801b116:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b118:	920e      	str	r2, [sp, #56]	@ 0x38
 801b11a:	429a      	cmp	r2, r3
 801b11c:	f000 80a7 	beq.w	801b26e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x40a>
 801b120:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801b124:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 801b128:	9f08      	ldr	r7, [sp, #32]
 801b12a:	1a9b      	subs	r3, r3, r2
 801b12c:	b29b      	uxth	r3, r3
 801b12e:	2b00      	cmp	r3, #0
 801b130:	bf14      	ite	ne
 801b132:	2200      	movne	r2, #0
 801b134:	2300      	moveq	r3, #0
 801b136:	9202      	str	r2, [sp, #8]
 801b138:	9301      	str	r3, [sp, #4]
 801b13a:	9b07      	ldr	r3, [sp, #28]
 801b13c:	9a00      	ldr	r2, [sp, #0]
 801b13e:	4293      	cmp	r3, r2
 801b140:	d912      	bls.n	801b168 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x304>
 801b142:	2f00      	cmp	r7, #0
 801b144:	f47f af46 	bne.w	801afd4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x170>
 801b148:	e752      	b.n	801aff0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x18c>
 801b14a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 801b14e:	b2b0      	uxth	r0, r6
 801b150:	fb94 f4f0 	sdiv	r4, r4, r0
 801b154:	b2a3      	uxth	r3, r4
 801b156:	9316      	str	r3, [sp, #88]	@ 0x58
 801b158:	e6ae      	b.n	801aeb8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x54>
 801b15a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b15c:	9a00      	ldr	r2, [sp, #0]
 801b15e:	9302      	str	r3, [sp, #8]
 801b160:	9b07      	ldr	r3, [sp, #28]
 801b162:	9f08      	ldr	r7, [sp, #32]
 801b164:	4293      	cmp	r3, r2
 801b166:	d8ec      	bhi.n	801b142 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2de>
 801b168:	4b03      	ldr	r3, [pc, #12]	@ (801b178 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x314>)
 801b16a:	6818      	ldr	r0, [r3, #0]
 801b16c:	6803      	ldr	r3, [r0, #0]
 801b16e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b170:	4798      	blx	r3
 801b172:	b01d      	add	sp, #116	@ 0x74
 801b174:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b178:	2004bf98 	.word	0x2004bf98
 801b17c:	2004bf92 	.word	0x2004bf92
 801b180:	9b01      	ldr	r3, [sp, #4]
 801b182:	9703      	str	r7, [sp, #12]
 801b184:	9308      	str	r3, [sp, #32]
 801b186:	9b02      	ldr	r3, [sp, #8]
 801b188:	1bdb      	subs	r3, r3, r7
 801b18a:	b29b      	uxth	r3, r3
 801b18c:	930c      	str	r3, [sp, #48]	@ 0x30
 801b18e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b190:	2bff      	cmp	r3, #255	@ 0xff
 801b192:	9b03      	ldr	r3, [sp, #12]
 801b194:	f47f af66 	bne.w	801b064 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x200>
 801b198:	2b00      	cmp	r3, #0
 801b19a:	d0af      	beq.n	801b0fc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x298>
 801b19c:	18f4      	adds	r4, r6, r3
 801b19e:	9800      	ldr	r0, [sp, #0]
 801b1a0:	b2a4      	uxth	r4, r4
 801b1a2:	eb09 0306 	add.w	r3, r9, r6
 801b1a6:	7a59      	ldrb	r1, [r3, #9]
 801b1a8:	4d3d      	ldr	r5, [pc, #244]	@ (801b2a0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x43c>)
 801b1aa:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801b1ae:	eb0b 0301 	add.w	r3, fp, r1
 801b1b2:	785a      	ldrb	r2, [r3, #1]
 801b1b4:	789b      	ldrb	r3, [r3, #2]
 801b1b6:	00d2      	lsls	r2, r2, #3
 801b1b8:	f81b 1001 	ldrb.w	r1, [fp, r1]
 801b1bc:	3601      	adds	r6, #1
 801b1be:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b1c2:	ea05 2303 	and.w	r3, r5, r3, lsl #8
 801b1c6:	4313      	orrs	r3, r2
 801b1c8:	b2b6      	uxth	r6, r6
 801b1ca:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801b1ce:	42a6      	cmp	r6, r4
 801b1d0:	f820 3b02 	strh.w	r3, [r0], #2
 801b1d4:	d1e5      	bne.n	801b1a2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x33e>
 801b1d6:	e789      	b.n	801b0ec <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x288>
 801b1d8:	9b06      	ldr	r3, [sp, #24]
 801b1da:	429a      	cmp	r2, r3
 801b1dc:	d32d      	bcc.n	801b23a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3d6>
 801b1de:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801b1e0:	f899 1009 	ldrb.w	r1, [r9, #9]
 801b1e4:	eb09 0300 	add.w	r3, r9, r0
 801b1e8:	7259      	strb	r1, [r3, #9]
 801b1ea:	f899 3009 	ldrb.w	r3, [r9, #9]
 801b1ee:	1c41      	adds	r1, r0, #1
 801b1f0:	b28f      	uxth	r7, r1
 801b1f2:	9c06      	ldr	r4, [sp, #24]
 801b1f4:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801b1f6:	eb09 0084 	add.w	r0, r9, r4, lsl #2
 801b1fa:	3401      	adds	r4, #1
 801b1fc:	f880 304a 	strb.w	r3, [r0, #74]	@ 0x4a
 801b200:	b2a3      	uxth	r3, r4
 801b202:	f8a0 504c 	strh.w	r5, [r0, #76]	@ 0x4c
 801b206:	f880 104b 	strb.w	r1, [r0, #75]	@ 0x4b
 801b20a:	9306      	str	r3, [sp, #24]
 801b20c:	e9cd 2709 	strd	r2, r7, [sp, #36]	@ 0x24
 801b210:	2600      	movs	r6, #0
 801b212:	e6df      	b.n	801afd4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x170>
 801b214:	1aff      	subs	r7, r7, r3
 801b216:	441e      	add	r6, r3
 801b218:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801b21c:	b2bf      	uxth	r7, r7
 801b21e:	9302      	str	r3, [sp, #8]
 801b220:	2300      	movs	r3, #0
 801b222:	b2b6      	uxth	r6, r6
 801b224:	9301      	str	r3, [sp, #4]
 801b226:	e788      	b.n	801b13a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2d6>
 801b228:	2100      	movs	r1, #0
 801b22a:	9104      	str	r1, [sp, #16]
 801b22c:	9905      	ldr	r1, [sp, #20]
 801b22e:	3102      	adds	r1, #2
 801b230:	9105      	str	r1, [sp, #20]
 801b232:	e6f4      	b.n	801b01e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 801b234:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801b236:	3101      	adds	r1, #1
 801b238:	e7db      	b.n	801b1f2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x38e>
 801b23a:	eb09 0382 	add.w	r3, r9, r2, lsl #2
 801b23e:	f893 704b 	ldrb.w	r7, [r3, #75]	@ 0x4b
 801b242:	4613      	mov	r3, r2
 801b244:	2f01      	cmp	r7, #1
 801b246:	d90d      	bls.n	801b264 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x400>
 801b248:	f107 0109 	add.w	r1, r7, #9
 801b24c:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801b24e:	4449      	add	r1, r9
 801b250:	eb09 0383 	add.w	r3, r9, r3, lsl #2
 801b254:	f893 004a 	ldrb.w	r0, [r3, #74]	@ 0x4a
 801b258:	f801 0d01 	strb.w	r0, [r1, #-1]!
 801b25c:	428c      	cmp	r4, r1
 801b25e:	f8b3 304c 	ldrh.w	r3, [r3, #76]	@ 0x4c
 801b262:	d1f5      	bne.n	801b250 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3ec>
 801b264:	b2db      	uxtb	r3, r3
 801b266:	f889 3009 	strb.w	r3, [r9, #9]
 801b26a:	b2bf      	uxth	r7, r7
 801b26c:	e6df      	b.n	801b02e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1ca>
 801b26e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801b272:	f8bd 2060 	ldrh.w	r2, [sp, #96]	@ 0x60
 801b276:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801b278:	1a9b      	subs	r3, r3, r2
 801b27a:	b29b      	uxth	r3, r3
 801b27c:	2b00      	cmp	r3, #0
 801b27e:	9301      	str	r3, [sp, #4]
 801b280:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b282:	bf18      	it	ne
 801b284:	2300      	movne	r3, #0
 801b286:	3101      	adds	r1, #1
 801b288:	b29b      	uxth	r3, r3
 801b28a:	9302      	str	r3, [sp, #8]
 801b28c:	9112      	str	r1, [sp, #72]	@ 0x48
 801b28e:	9b07      	ldr	r3, [sp, #28]
 801b290:	e669      	b.n	801af66 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x102>
 801b292:	4b04      	ldr	r3, [pc, #16]	@ (801b2a4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x440>)
 801b294:	4a04      	ldr	r2, [pc, #16]	@ (801b2a8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x444>)
 801b296:	f640 0118 	movw	r1, #2072	@ 0x818
 801b29a:	4804      	ldr	r0, [pc, #16]	@ (801b2ac <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x448>)
 801b29c:	f009 fd4a 	bl	8024d34 <__assert_func>
 801b2a0:	fffff800 	.word	0xfffff800
 801b2a4:	08027a2c 	.word	0x08027a2c
 801b2a8:	08028dfc 	.word	0x08028dfc
 801b2ac:	08027928 	.word	0x08027928

0801b2b0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 801b2b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b2b4:	4690      	mov	r8, r2
 801b2b6:	8812      	ldrh	r2, [r2, #0]
 801b2b8:	b093      	sub	sp, #76	@ 0x4c
 801b2ba:	461c      	mov	r4, r3
 801b2bc:	f89d a074 	ldrb.w	sl, [sp, #116]	@ 0x74
 801b2c0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b2c2:	2a00      	cmp	r2, #0
 801b2c4:	f040 80fb 	bne.w	801b4be <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 801b2c8:	4689      	mov	r9, r1
 801b2ca:	6820      	ldr	r0, [r4, #0]
 801b2cc:	6861      	ldr	r1, [r4, #4]
 801b2ce:	aa0e      	add	r2, sp, #56	@ 0x38
 801b2d0:	c203      	stmia	r2!, {r0, r1}
 801b2d2:	6818      	ldr	r0, [r3, #0]
 801b2d4:	6859      	ldr	r1, [r3, #4]
 801b2d6:	aa10      	add	r2, sp, #64	@ 0x40
 801b2d8:	c203      	stmia	r2!, {r0, r1}
 801b2da:	a80e      	add	r0, sp, #56	@ 0x38
 801b2dc:	f7f4 f880 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b2e0:	4621      	mov	r1, r4
 801b2e2:	a810      	add	r0, sp, #64	@ 0x40
 801b2e4:	f7f4 f8a4 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b2e8:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	@ 0x40
 801b2ec:	f9bd 5042 	ldrsh.w	r5, [sp, #66]	@ 0x42
 801b2f0:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 801b2f4:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 801b2f8:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 801b2fc:	4873      	ldr	r0, [pc, #460]	@ (801b4cc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>)
 801b2fe:	fb11 4105 	smlabb	r1, r1, r5, r4
 801b302:	4422      	add	r2, r4
 801b304:	442b      	add	r3, r5
 801b306:	6800      	ldr	r0, [r0, #0]
 801b308:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801b30c:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 801b310:	6802      	ldr	r2, [r0, #0]
 801b312:	4489      	add	r9, r1
 801b314:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 801b318:	4c6d      	ldr	r4, [pc, #436]	@ (801b4d0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x220>)
 801b31a:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 801b31e:	910a      	str	r1, [sp, #40]	@ 0x28
 801b320:	f9bd 1046 	ldrsh.w	r1, [sp, #70]	@ 0x46
 801b324:	42a3      	cmp	r3, r4
 801b326:	910c      	str	r1, [sp, #48]	@ 0x30
 801b328:	f040 8096 	bne.w	801b458 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 801b32c:	6841      	ldr	r1, [r0, #4]
 801b32e:	4c69      	ldr	r4, [pc, #420]	@ (801b4d4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x224>)
 801b330:	680b      	ldr	r3, [r1, #0]
 801b332:	699b      	ldr	r3, [r3, #24]
 801b334:	42a3      	cmp	r3, r4
 801b336:	f040 80b4 	bne.w	801b4a2 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1f2>
 801b33a:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 801b33c:	4798      	blx	r3
 801b33e:	4b66      	ldr	r3, [pc, #408]	@ (801b4d8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x228>)
 801b340:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 801b344:	881b      	ldrh	r3, [r3, #0]
 801b346:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801b34a:	fb01 2303 	mla	r3, r1, r3, r2
 801b34e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801b352:	4418      	add	r0, r3
 801b354:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b356:	2b00      	cmp	r3, #0
 801b358:	dd76      	ble.n	801b448 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x198>
 801b35a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b35c:	2b00      	cmp	r3, #0
 801b35e:	dd73      	ble.n	801b448 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x198>
 801b360:	2200      	movs	r2, #0
 801b362:	2104      	movs	r1, #4
 801b364:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801b368:	920b      	str	r2, [sp, #44]	@ 0x2c
 801b36a:	930d      	str	r3, [sp, #52]	@ 0x34
 801b36c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b36e:	464e      	mov	r6, r9
 801b370:	1cc5      	adds	r5, r0, #3
 801b372:	eb09 0c03 	add.w	ip, r9, r3
 801b376:	e039      	b.n	801b3ec <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 801b378:	fb0a f303 	mul.w	r3, sl, r3
 801b37c:	1c5a      	adds	r2, r3, #1
 801b37e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801b382:	121b      	asrs	r3, r3, #8
 801b384:	43df      	mvns	r7, r3
 801b386:	b29b      	uxth	r3, r3
 801b388:	fb1e f203 	smulbb	r2, lr, r3
 801b38c:	f815 ec03 	ldrb.w	lr, [r5, #-3]
 801b390:	b2ff      	uxtb	r7, r7
 801b392:	fb0e 2e07 	mla	lr, lr, r7, r2
 801b396:	fa1f fe8e 	uxth.w	lr, lr
 801b39a:	f815 2c02 	ldrb.w	r2, [r5, #-2]
 801b39e:	f10e 0b01 	add.w	fp, lr, #1
 801b3a2:	eb0b 2e1e 	add.w	lr, fp, lr, lsr #8
 801b3a6:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 801b3aa:	fb12 fb07 	smulbb	fp, r2, r7
 801b3ae:	f805 ec03 	strb.w	lr, [r5, #-3]
 801b3b2:	7862      	ldrb	r2, [r4, #1]
 801b3b4:	f815 ec01 	ldrb.w	lr, [r5, #-1]
 801b3b8:	fb02 b203 	mla	r2, r2, r3, fp
 801b3bc:	b292      	uxth	r2, r2
 801b3be:	f102 0b01 	add.w	fp, r2, #1
 801b3c2:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801b3c6:	1212      	asrs	r2, r2, #8
 801b3c8:	fb1e f707 	smulbb	r7, lr, r7
 801b3cc:	f805 2c02 	strb.w	r2, [r5, #-2]
 801b3d0:	78a2      	ldrb	r2, [r4, #2]
 801b3d2:	fb02 7303 	mla	r3, r2, r3, r7
 801b3d6:	b29b      	uxth	r3, r3
 801b3d8:	1c5a      	adds	r2, r3, #1
 801b3da:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801b3de:	121b      	asrs	r3, r3, #8
 801b3e0:	f805 3c01 	strb.w	r3, [r5, #-1]
 801b3e4:	45b4      	cmp	ip, r6
 801b3e6:	f105 0503 	add.w	r5, r5, #3
 801b3ea:	d01b      	beq.n	801b424 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x174>
 801b3ec:	f816 2b01 	ldrb.w	r2, [r6], #1
 801b3f0:	fb11 1202 	smlabb	r2, r1, r2, r1
 801b3f4:	eb08 0402 	add.w	r4, r8, r2
 801b3f8:	78e3      	ldrb	r3, [r4, #3]
 801b3fa:	2b00      	cmp	r3, #0
 801b3fc:	d0f2      	beq.n	801b3e4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x134>
 801b3fe:	2bff      	cmp	r3, #255	@ 0xff
 801b400:	f818 e002 	ldrb.w	lr, [r8, r2]
 801b404:	d1b8      	bne.n	801b378 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xc8>
 801b406:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801b40a:	d1b5      	bne.n	801b378 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xc8>
 801b40c:	f805 ec03 	strb.w	lr, [r5, #-3]
 801b410:	7863      	ldrb	r3, [r4, #1]
 801b412:	45b4      	cmp	ip, r6
 801b414:	f805 3c02 	strb.w	r3, [r5, #-2]
 801b418:	78a3      	ldrb	r3, [r4, #2]
 801b41a:	f105 0503 	add.w	r5, r5, #3
 801b41e:	f805 3c04 	strb.w	r3, [r5, #-4]
 801b422:	d1e3      	bne.n	801b3ec <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 801b424:	4b2c      	ldr	r3, [pc, #176]	@ (801b4d8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x228>)
 801b426:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801b428:	881b      	ldrh	r3, [r3, #0]
 801b42a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801b42c:	1a9b      	subs	r3, r3, r2
 801b42e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801b432:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b434:	442b      	add	r3, r5
 801b436:	4418      	add	r0, r3
 801b438:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b43a:	3401      	adds	r4, #1
 801b43c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801b440:	42a3      	cmp	r3, r4
 801b442:	940b      	str	r4, [sp, #44]	@ 0x2c
 801b444:	4491      	add	r9, r2
 801b446:	d191      	bne.n	801b36c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xbc>
 801b448:	4b20      	ldr	r3, [pc, #128]	@ (801b4cc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>)
 801b44a:	6818      	ldr	r0, [r3, #0]
 801b44c:	6803      	ldr	r3, [r0, #0]
 801b44e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b450:	4798      	blx	r3
 801b452:	b013      	add	sp, #76	@ 0x4c
 801b454:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b458:	4798      	blx	r3
 801b45a:	4602      	mov	r2, r0
 801b45c:	2a01      	cmp	r2, #1
 801b45e:	d124      	bne.n	801b4aa <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1fa>
 801b460:	4b1e      	ldr	r3, [pc, #120]	@ (801b4dc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x22c>)
 801b462:	6818      	ldr	r0, [r3, #0]
 801b464:	b328      	cbz	r0, 801b4b2 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x202>
 801b466:	260b      	movs	r6, #11
 801b468:	4b1b      	ldr	r3, [pc, #108]	@ (801b4d8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x228>)
 801b46a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801b46e:	881f      	ldrh	r7, [r3, #0]
 801b470:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 801b474:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801b478:	f8bd 4042 	ldrh.w	r4, [sp, #66]	@ 0x42
 801b47c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801b480:	9208      	str	r2, [sp, #32]
 801b482:	9205      	str	r2, [sp, #20]
 801b484:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801b488:	f8cd a010 	str.w	sl, [sp, #16]
 801b48c:	4642      	mov	r2, r8
 801b48e:	4649      	mov	r1, r9
 801b490:	e9cd 7606 	strd	r7, r6, [sp, #24]
 801b494:	9503      	str	r5, [sp, #12]
 801b496:	9400      	str	r4, [sp, #0]
 801b498:	f7f9 ff0c 	bl	80152b4 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 801b49c:	b013      	add	sp, #76	@ 0x4c
 801b49e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b4a2:	4608      	mov	r0, r1
 801b4a4:	4798      	blx	r3
 801b4a6:	4602      	mov	r2, r0
 801b4a8:	e7d8      	b.n	801b45c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1ac>
 801b4aa:	4b08      	ldr	r3, [pc, #32]	@ (801b4cc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>)
 801b4ac:	6818      	ldr	r0, [r3, #0]
 801b4ae:	6802      	ldr	r2, [r0, #0]
 801b4b0:	e743      	b.n	801b33a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 801b4b2:	4b0b      	ldr	r3, [pc, #44]	@ (801b4e0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x230>)
 801b4b4:	4a0b      	ldr	r2, [pc, #44]	@ (801b4e4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 801b4b6:	217c      	movs	r1, #124	@ 0x7c
 801b4b8:	480b      	ldr	r0, [pc, #44]	@ (801b4e8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x238>)
 801b4ba:	f009 fc3b 	bl	8024d34 <__assert_func>
 801b4be:	4b0b      	ldr	r3, [pc, #44]	@ (801b4ec <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 801b4c0:	4a0b      	ldr	r2, [pc, #44]	@ (801b4f0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 801b4c2:	f640 1106 	movw	r1, #2310	@ 0x906
 801b4c6:	480b      	ldr	r0, [pc, #44]	@ (801b4f4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x244>)
 801b4c8:	f009 fc34 	bl	8024d34 <__assert_func>
 801b4cc:	2004bf98 	.word	0x2004bf98
 801b4d0:	08001829 	.word	0x08001829
 801b4d4:	0800e31d 	.word	0x0800e31d
 801b4d8:	2004bf92 	.word	0x2004bf92
 801b4dc:	2004c150 	.word	0x2004c150
 801b4e0:	08027884 	.word	0x08027884
 801b4e4:	08028130 	.word	0x08028130
 801b4e8:	080278ac 	.word	0x080278ac
 801b4ec:	080279dc 	.word	0x080279dc
 801b4f0:	080287ec 	.word	0x080287ec
 801b4f4:	08027928 	.word	0x08027928

0801b4f8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 801b4f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b4fc:	4614      	mov	r4, r2
 801b4fe:	7812      	ldrb	r2, [r2, #0]
 801b500:	b08d      	sub	sp, #52	@ 0x34
 801b502:	461e      	mov	r6, r3
 801b504:	f89d 805c 	ldrb.w	r8, [sp, #92]	@ 0x5c
 801b508:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801b50a:	2a00      	cmp	r2, #0
 801b50c:	f040 81e0 	bne.w	801b8d0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3d8>
 801b510:	6830      	ldr	r0, [r6, #0]
 801b512:	460d      	mov	r5, r1
 801b514:	6871      	ldr	r1, [r6, #4]
 801b516:	aa08      	add	r2, sp, #32
 801b518:	c203      	stmia	r2!, {r0, r1}
 801b51a:	6818      	ldr	r0, [r3, #0]
 801b51c:	6859      	ldr	r1, [r3, #4]
 801b51e:	aa0a      	add	r2, sp, #40	@ 0x28
 801b520:	c203      	stmia	r2!, {r0, r1}
 801b522:	a808      	add	r0, sp, #32
 801b524:	f7f3 ff5c 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b528:	4631      	mov	r1, r6
 801b52a:	a80a      	add	r0, sp, #40	@ 0x28
 801b52c:	f7f3 ff80 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b530:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801b534:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801b538:	f003 0201 	and.w	r2, r3, #1
 801b53c:	4617      	mov	r7, r2
 801b53e:	9204      	str	r2, [sp, #16]
 801b540:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801b544:	f8bd 0022 	ldrh.w	r0, [sp, #34]	@ 0x22
 801b548:	443b      	add	r3, r7
 801b54a:	fb02 1303 	mla	r3, r2, r3, r1
 801b54e:	f8bd 6020 	ldrh.w	r6, [sp, #32]
 801b552:	4402      	add	r2, r0
 801b554:	48d6      	ldr	r0, [pc, #856]	@ (801b8b0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3b8>)
 801b556:	440e      	add	r6, r1
 801b558:	6800      	ldr	r0, [r0, #0]
 801b55a:	f8ad 6028 	strh.w	r6, [sp, #40]	@ 0x28
 801b55e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801b562:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801b566:	eb05 0363 	add.w	r3, r5, r3, asr #1
 801b56a:	6802      	ldr	r2, [r0, #0]
 801b56c:	f9bd 702c 	ldrsh.w	r7, [sp, #44]	@ 0x2c
 801b570:	9301      	str	r3, [sp, #4]
 801b572:	f001 0301 	and.w	r3, r1, #1
 801b576:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 801b578:	9305      	str	r3, [sp, #20]
 801b57a:	9703      	str	r7, [sp, #12]
 801b57c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801b580:	4790      	blx	r2
 801b582:	4acc      	ldr	r2, [pc, #816]	@ (801b8b4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3bc>)
 801b584:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 801b588:	8811      	ldrh	r1, [r2, #0]
 801b58a:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 801b58e:	fb05 f201 	mul.w	r2, r5, r1
 801b592:	fb01 6303 	mla	r3, r1, r3, r6
 801b596:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801b59a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b59e:	4418      	add	r0, r3
 801b5a0:	1883      	adds	r3, r0, r2
 801b5a2:	4298      	cmp	r0, r3
 801b5a4:	9306      	str	r3, [sp, #24]
 801b5a6:	f104 0204 	add.w	r2, r4, #4
 801b5aa:	f080 80f1 	bcs.w	801b790 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>
 801b5ae:	1e7b      	subs	r3, r7, #1
 801b5b0:	4647      	mov	r7, r8
 801b5b2:	9307      	str	r3, [sp, #28]
 801b5b4:	9b05      	ldr	r3, [sp, #20]
 801b5b6:	2b00      	cmp	r3, #0
 801b5b8:	f000 8106 	beq.w	801b7c8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2d0>
 801b5bc:	9901      	ldr	r1, [sp, #4]
 801b5be:	780b      	ldrb	r3, [r1, #0]
 801b5c0:	1c4d      	adds	r5, r1, #1
 801b5c2:	f003 030f 	and.w	r3, r3, #15
 801b5c6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801b5ca:	0e19      	lsrs	r1, r3, #24
 801b5cc:	f040 8136 	bne.w	801b83c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x344>
 801b5d0:	f8dd c01c 	ldr.w	ip, [sp, #28]
 801b5d4:	3003      	adds	r0, #3
 801b5d6:	f1bc 0f01 	cmp.w	ip, #1
 801b5da:	f340 80ba 	ble.w	801b752 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x25a>
 801b5de:	f1ac 0302 	sub.w	r3, ip, #2
 801b5e2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801b5e6:	f10c 0e01 	add.w	lr, ip, #1
 801b5ea:	9302      	str	r3, [sp, #8]
 801b5ec:	eb05 060e 	add.w	r6, r5, lr
 801b5f0:	1d84      	adds	r4, r0, #6
 801b5f2:	e00b      	b.n	801b60c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 801b5f4:	f003 030f 	and.w	r3, r3, #15
 801b5f8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801b5fc:	3501      	adds	r5, #1
 801b5fe:	0e19      	lsrs	r1, r3, #24
 801b600:	d155      	bne.n	801b6ae <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1b6>
 801b602:	42b5      	cmp	r5, r6
 801b604:	f104 0406 	add.w	r4, r4, #6
 801b608:	f000 809a 	beq.w	801b740 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x248>
 801b60c:	782b      	ldrb	r3, [r5, #0]
 801b60e:	0919      	lsrs	r1, r3, #4
 801b610:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 801b614:	ea5f 6811 	movs.w	r8, r1, lsr #24
 801b618:	d0ec      	beq.n	801b5f4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xfc>
 801b61a:	f3c1 2a07 	ubfx	sl, r1, #8, #8
 801b61e:	f3c1 4907 	ubfx	r9, r1, #16, #8
 801b622:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801b626:	fa5f f38a 	uxtb.w	r3, sl
 801b62a:	b2c9      	uxtb	r1, r1
 801b62c:	fa5f fb89 	uxtb.w	fp, r9
 801b630:	f000 80bf 	beq.w	801b7b2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2ba>
 801b634:	fb08 f807 	mul.w	r8, r8, r7
 801b638:	f108 0901 	add.w	r9, r8, #1
 801b63c:	eb09 2828 	add.w	r8, r9, r8, asr #8
 801b640:	ea4f 2828 	mov.w	r8, r8, asr #8
 801b644:	ea6f 0908 	mvn.w	r9, r8
 801b648:	fa1f f888 	uxth.w	r8, r8
 801b64c:	fb11 f108 	smulbb	r1, r1, r8
 801b650:	fb13 f308 	smulbb	r3, r3, r8
 801b654:	fb1b f808 	smulbb	r8, fp, r8
 801b658:	f814 bc06 	ldrb.w	fp, [r4, #-6]
 801b65c:	fa5f f989 	uxtb.w	r9, r9
 801b660:	f814 ac05 	ldrb.w	sl, [r4, #-5]
 801b664:	fb0b 1109 	mla	r1, fp, r9, r1
 801b668:	f814 bc04 	ldrb.w	fp, [r4, #-4]
 801b66c:	fb0a 3309 	mla	r3, sl, r9, r3
 801b670:	fb0b 8809 	mla	r8, fp, r9, r8
 801b674:	b289      	uxth	r1, r1
 801b676:	fa1f fa83 	uxth.w	sl, r3
 801b67a:	fa1f f888 	uxth.w	r8, r8
 801b67e:	f101 0b01 	add.w	fp, r1, #1
 801b682:	f10a 0301 	add.w	r3, sl, #1
 801b686:	f108 0901 	add.w	r9, r8, #1
 801b68a:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 801b68e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801b692:	eb09 2818 	add.w	r8, r9, r8, lsr #8
 801b696:	121b      	asrs	r3, r3, #8
 801b698:	1209      	asrs	r1, r1, #8
 801b69a:	ea4f 2828 	mov.w	r8, r8, asr #8
 801b69e:	f804 1c06 	strb.w	r1, [r4, #-6]
 801b6a2:	f804 3c05 	strb.w	r3, [r4, #-5]
 801b6a6:	f804 8c04 	strb.w	r8, [r4, #-4]
 801b6aa:	782b      	ldrb	r3, [r5, #0]
 801b6ac:	e7a2      	b.n	801b5f4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xfc>
 801b6ae:	f3c3 2a07 	ubfx	sl, r3, #8, #8
 801b6b2:	f3c3 4907 	ubfx	r9, r3, #16, #8
 801b6b6:	29ff      	cmp	r1, #255	@ 0xff
 801b6b8:	fa5f f88a 	uxtb.w	r8, sl
 801b6bc:	b2db      	uxtb	r3, r3
 801b6be:	fa5f fb89 	uxtb.w	fp, r9
 801b6c2:	d06d      	beq.n	801b7a0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2a8>
 801b6c4:	fb01 f107 	mul.w	r1, r1, r7
 801b6c8:	f101 0901 	add.w	r9, r1, #1
 801b6cc:	eb09 2121 	add.w	r1, r9, r1, asr #8
 801b6d0:	1209      	asrs	r1, r1, #8
 801b6d2:	ea6f 0901 	mvn.w	r9, r1
 801b6d6:	b289      	uxth	r1, r1
 801b6d8:	fb13 f301 	smulbb	r3, r3, r1
 801b6dc:	fb18 f801 	smulbb	r8, r8, r1
 801b6e0:	fb1b f101 	smulbb	r1, fp, r1
 801b6e4:	f814 bc03 	ldrb.w	fp, [r4, #-3]
 801b6e8:	fa5f f989 	uxtb.w	r9, r9
 801b6ec:	f814 ac02 	ldrb.w	sl, [r4, #-2]
 801b6f0:	fb0b 3309 	mla	r3, fp, r9, r3
 801b6f4:	f814 bc01 	ldrb.w	fp, [r4, #-1]
 801b6f8:	fb0a 8809 	mla	r8, sl, r9, r8
 801b6fc:	fb0b 1109 	mla	r1, fp, r9, r1
 801b700:	fa1f fa88 	uxth.w	sl, r8
 801b704:	fa1f fb83 	uxth.w	fp, r3
 801b708:	b289      	uxth	r1, r1
 801b70a:	f10b 0801 	add.w	r8, fp, #1
 801b70e:	f10a 0301 	add.w	r3, sl, #1
 801b712:	f101 0901 	add.w	r9, r1, #1
 801b716:	eb08 2b1b 	add.w	fp, r8, fp, lsr #8
 801b71a:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801b71e:	eb09 2111 	add.w	r1, r9, r1, lsr #8
 801b722:	ea4f 2b2b 	mov.w	fp, fp, asr #8
 801b726:	121b      	asrs	r3, r3, #8
 801b728:	1209      	asrs	r1, r1, #8
 801b72a:	42b5      	cmp	r5, r6
 801b72c:	f804 bc03 	strb.w	fp, [r4, #-3]
 801b730:	f804 3c02 	strb.w	r3, [r4, #-2]
 801b734:	f804 1c01 	strb.w	r1, [r4, #-1]
 801b738:	f104 0406 	add.w	r4, r4, #6
 801b73c:	f47f af66 	bne.w	801b60c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 801b740:	9b02      	ldr	r3, [sp, #8]
 801b742:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801b746:	ebcc 7ccc 	rsb	ip, ip, ip, lsl #31
 801b74a:	eb00 004e 	add.w	r0, r0, lr, lsl #1
 801b74e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801b752:	f1bc 0f01 	cmp.w	ip, #1
 801b756:	d106      	bne.n	801b766 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x26e>
 801b758:	782b      	ldrb	r3, [r5, #0]
 801b75a:	091b      	lsrs	r3, r3, #4
 801b75c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801b760:	0e19      	lsrs	r1, r3, #24
 801b762:	d135      	bne.n	801b7d0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2d8>
 801b764:	3003      	adds	r0, #3
 801b766:	4b53      	ldr	r3, [pc, #332]	@ (801b8b4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3bc>)
 801b768:	9c03      	ldr	r4, [sp, #12]
 801b76a:	8819      	ldrh	r1, [r3, #0]
 801b76c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801b770:	1b09      	subs	r1, r1, r4
 801b772:	9c04      	ldr	r4, [sp, #16]
 801b774:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801b778:	4408      	add	r0, r1
 801b77a:	4423      	add	r3, r4
 801b77c:	9901      	ldr	r1, [sp, #4]
 801b77e:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801b782:	eb01 0363 	add.w	r3, r1, r3, asr #1
 801b786:	9301      	str	r3, [sp, #4]
 801b788:	9b06      	ldr	r3, [sp, #24]
 801b78a:	4283      	cmp	r3, r0
 801b78c:	f63f af12 	bhi.w	801b5b4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xbc>
 801b790:	4b47      	ldr	r3, [pc, #284]	@ (801b8b0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3b8>)
 801b792:	6818      	ldr	r0, [r3, #0]
 801b794:	6803      	ldr	r3, [r0, #0]
 801b796:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b798:	4798      	blx	r3
 801b79a:	b00d      	add	sp, #52	@ 0x34
 801b79c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b7a0:	2fff      	cmp	r7, #255	@ 0xff
 801b7a2:	d18f      	bne.n	801b6c4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1cc>
 801b7a4:	f804 3c03 	strb.w	r3, [r4, #-3]
 801b7a8:	f804 ac02 	strb.w	sl, [r4, #-2]
 801b7ac:	f804 9c01 	strb.w	r9, [r4, #-1]
 801b7b0:	e727      	b.n	801b602 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x10a>
 801b7b2:	2fff      	cmp	r7, #255	@ 0xff
 801b7b4:	f47f af3e 	bne.w	801b634 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 801b7b8:	f804 1c06 	strb.w	r1, [r4, #-6]
 801b7bc:	f804 ac05 	strb.w	sl, [r4, #-5]
 801b7c0:	f804 9c04 	strb.w	r9, [r4, #-4]
 801b7c4:	782b      	ldrb	r3, [r5, #0]
 801b7c6:	e715      	b.n	801b5f4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xfc>
 801b7c8:	9d01      	ldr	r5, [sp, #4]
 801b7ca:	f8dd c00c 	ldr.w	ip, [sp, #12]
 801b7ce:	e702      	b.n	801b5d6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xde>
 801b7d0:	f3c3 2507 	ubfx	r5, r3, #8, #8
 801b7d4:	f3c3 4407 	ubfx	r4, r3, #16, #8
 801b7d8:	29ff      	cmp	r1, #255	@ 0xff
 801b7da:	fa5f fc85 	uxtb.w	ip, r5
 801b7de:	b2db      	uxtb	r3, r3
 801b7e0:	b2e6      	uxtb	r6, r4
 801b7e2:	d069      	beq.n	801b8b8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 801b7e4:	fb01 f107 	mul.w	r1, r1, r7
 801b7e8:	1c4c      	adds	r4, r1, #1
 801b7ea:	eb04 2121 	add.w	r1, r4, r1, asr #8
 801b7ee:	120c      	asrs	r4, r1, #8
 801b7f0:	43e1      	mvns	r1, r4
 801b7f2:	b2a4      	uxth	r4, r4
 801b7f4:	fb13 f304 	smulbb	r3, r3, r4
 801b7f8:	fb1c fc04 	smulbb	ip, ip, r4
 801b7fc:	fb16 f404 	smulbb	r4, r6, r4
 801b800:	7806      	ldrb	r6, [r0, #0]
 801b802:	b2c9      	uxtb	r1, r1
 801b804:	fb06 3301 	mla	r3, r6, r1, r3
 801b808:	7845      	ldrb	r5, [r0, #1]
 801b80a:	7886      	ldrb	r6, [r0, #2]
 801b80c:	fb05 c501 	mla	r5, r5, r1, ip
 801b810:	fb06 4401 	mla	r4, r6, r1, r4
 801b814:	b29b      	uxth	r3, r3
 801b816:	b2ad      	uxth	r5, r5
 801b818:	b2a4      	uxth	r4, r4
 801b81a:	1c5e      	adds	r6, r3, #1
 801b81c:	f105 0c01 	add.w	ip, r5, #1
 801b820:	1c61      	adds	r1, r4, #1
 801b822:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 801b826:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801b82a:	eb01 2114 	add.w	r1, r1, r4, lsr #8
 801b82e:	121b      	asrs	r3, r3, #8
 801b830:	122d      	asrs	r5, r5, #8
 801b832:	1209      	asrs	r1, r1, #8
 801b834:	7003      	strb	r3, [r0, #0]
 801b836:	7045      	strb	r5, [r0, #1]
 801b838:	7081      	strb	r1, [r0, #2]
 801b83a:	e793      	b.n	801b764 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x26c>
 801b83c:	f3c3 2607 	ubfx	r6, r3, #8, #8
 801b840:	f3c3 4407 	ubfx	r4, r3, #16, #8
 801b844:	29ff      	cmp	r1, #255	@ 0xff
 801b846:	fa5f fe86 	uxtb.w	lr, r6
 801b84a:	b2db      	uxtb	r3, r3
 801b84c:	fa5f fc84 	uxtb.w	ip, r4
 801b850:	d038      	beq.n	801b8c4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3cc>
 801b852:	fb01 f107 	mul.w	r1, r1, r7
 801b856:	1c4c      	adds	r4, r1, #1
 801b858:	eb04 2421 	add.w	r4, r4, r1, asr #8
 801b85c:	1224      	asrs	r4, r4, #8
 801b85e:	43e1      	mvns	r1, r4
 801b860:	b2a4      	uxth	r4, r4
 801b862:	fb13 f304 	smulbb	r3, r3, r4
 801b866:	fb1e fe04 	smulbb	lr, lr, r4
 801b86a:	fb1c f404 	smulbb	r4, ip, r4
 801b86e:	f890 c000 	ldrb.w	ip, [r0]
 801b872:	b2c9      	uxtb	r1, r1
 801b874:	fb0c 3301 	mla	r3, ip, r1, r3
 801b878:	7846      	ldrb	r6, [r0, #1]
 801b87a:	f890 c002 	ldrb.w	ip, [r0, #2]
 801b87e:	fb06 e601 	mla	r6, r6, r1, lr
 801b882:	fb0c 4401 	mla	r4, ip, r1, r4
 801b886:	b29b      	uxth	r3, r3
 801b888:	b2b6      	uxth	r6, r6
 801b88a:	b2a4      	uxth	r4, r4
 801b88c:	f103 0c01 	add.w	ip, r3, #1
 801b890:	f106 0e01 	add.w	lr, r6, #1
 801b894:	1c61      	adds	r1, r4, #1
 801b896:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b89a:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801b89e:	eb01 2114 	add.w	r1, r1, r4, lsr #8
 801b8a2:	121b      	asrs	r3, r3, #8
 801b8a4:	1236      	asrs	r6, r6, #8
 801b8a6:	1209      	asrs	r1, r1, #8
 801b8a8:	7003      	strb	r3, [r0, #0]
 801b8aa:	7046      	strb	r6, [r0, #1]
 801b8ac:	7081      	strb	r1, [r0, #2]
 801b8ae:	e68f      	b.n	801b5d0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xd8>
 801b8b0:	2004bf98 	.word	0x2004bf98
 801b8b4:	2004bf92 	.word	0x2004bf92
 801b8b8:	2fff      	cmp	r7, #255	@ 0xff
 801b8ba:	d193      	bne.n	801b7e4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2ec>
 801b8bc:	7003      	strb	r3, [r0, #0]
 801b8be:	7045      	strb	r5, [r0, #1]
 801b8c0:	7084      	strb	r4, [r0, #2]
 801b8c2:	e74f      	b.n	801b764 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x26c>
 801b8c4:	2fff      	cmp	r7, #255	@ 0xff
 801b8c6:	d1c4      	bne.n	801b852 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x35a>
 801b8c8:	7003      	strb	r3, [r0, #0]
 801b8ca:	7046      	strb	r6, [r0, #1]
 801b8cc:	7084      	strb	r4, [r0, #2]
 801b8ce:	e67f      	b.n	801b5d0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xd8>
 801b8d0:	4b03      	ldr	r3, [pc, #12]	@ (801b8e0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3e8>)
 801b8d2:	4a04      	ldr	r2, [pc, #16]	@ (801b8e4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3ec>)
 801b8d4:	f640 1166 	movw	r1, #2406	@ 0x966
 801b8d8:	4803      	ldr	r0, [pc, #12]	@ (801b8e8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3f0>)
 801b8da:	f009 fa2b 	bl	8024d34 <__assert_func>
 801b8de:	bf00      	nop
 801b8e0:	08027a5c 	.word	0x08027a5c
 801b8e4:	08028cdc 	.word	0x08028cdc
 801b8e8:	08027928 	.word	0x08027928

0801b8ec <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 801b8ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b8f0:	b091      	sub	sp, #68	@ 0x44
 801b8f2:	9208      	str	r2, [sp, #32]
 801b8f4:	9100      	str	r1, [sp, #0]
 801b8f6:	7812      	ldrb	r2, [r2, #0]
 801b8f8:	f89d 106c 	ldrb.w	r1, [sp, #108]	@ 0x6c
 801b8fc:	461c      	mov	r4, r3
 801b8fe:	9106      	str	r1, [sp, #24]
 801b900:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801b902:	2a00      	cmp	r2, #0
 801b904:	f040 8211 	bne.w	801bd2a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x43e>
 801b908:	6820      	ldr	r0, [r4, #0]
 801b90a:	6861      	ldr	r1, [r4, #4]
 801b90c:	aa0c      	add	r2, sp, #48	@ 0x30
 801b90e:	c203      	stmia	r2!, {r0, r1}
 801b910:	6818      	ldr	r0, [r3, #0]
 801b912:	6859      	ldr	r1, [r3, #4]
 801b914:	aa0e      	add	r2, sp, #56	@ 0x38
 801b916:	c203      	stmia	r2!, {r0, r1}
 801b918:	a80c      	add	r0, sp, #48	@ 0x30
 801b91a:	f7f3 fd61 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b91e:	4621      	mov	r1, r4
 801b920:	a80e      	add	r0, sp, #56	@ 0x38
 801b922:	f7f3 fd85 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b926:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801b92a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801b92e:	f340 815b 	ble.w	801bbe8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2fc>
 801b932:	2201      	movs	r2, #1
 801b934:	b299      	uxth	r1, r3
 801b936:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801b93a:	f8bd 0038 	ldrh.w	r0, [sp, #56]	@ 0x38
 801b93e:	fb93 f5f2 	sdiv	r5, r3, r2
 801b942:	b2ae      	uxth	r6, r5
 801b944:	fb02 3416 	mls	r4, r2, r6, r3
 801b948:	fb14 0101 	smlabb	r1, r4, r1, r0
 801b94c:	f9bd 4036 	ldrsh.w	r4, [sp, #54]	@ 0x36
 801b950:	fa1f f881 	uxth.w	r8, r1
 801b954:	4414      	add	r4, r2
 801b956:	3c01      	subs	r4, #1
 801b958:	fb94 f4f2 	sdiv	r4, r4, r2
 801b95c:	b136      	cbz	r6, 801b96c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x80>
 801b95e:	9a08      	ldr	r2, [sp, #32]
 801b960:	9900      	ldr	r1, [sp, #0]
 801b962:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 801b966:	ba12      	rev	r2, r2
 801b968:	4411      	add	r1, r2
 801b96a:	9100      	str	r1, [sp, #0]
 801b96c:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 801b970:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 801b974:	4402      	add	r2, r0
 801b976:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801b97a:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801b97e:	440b      	add	r3, r1
 801b980:	4616      	mov	r6, r2
 801b982:	499c      	ldr	r1, [pc, #624]	@ (801bbf4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 801b984:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 801b988:	6808      	ldr	r0, [r1, #0]
 801b98a:	9205      	str	r2, [sp, #20]
 801b98c:	6803      	ldr	r3, [r0, #0]
 801b98e:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 801b992:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b994:	4798      	blx	r3
 801b996:	f1b8 0f00 	cmp.w	r8, #0
 801b99a:	bf0c      	ite	eq
 801b99c:	4633      	moveq	r3, r6
 801b99e:	2300      	movne	r3, #0
 801b9a0:	4995      	ldr	r1, [pc, #596]	@ (801bbf8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>)
 801b9a2:	f9bd 203a 	ldrsh.w	r2, [sp, #58]	@ 0x3a
 801b9a6:	8809      	ldrh	r1, [r1, #0]
 801b9a8:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801b9ac:	fb05 f501 	mul.w	r5, r5, r1
 801b9b0:	fb01 6202 	mla	r2, r1, r2, r6
 801b9b4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b9b8:	4410      	add	r0, r2
 801b9ba:	b2a4      	uxth	r4, r4
 801b9bc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801b9c0:	1942      	adds	r2, r0, r5
 801b9c2:	00a4      	lsls	r4, r4, #2
 801b9c4:	1d21      	adds	r1, r4, #4
 801b9c6:	4290      	cmp	r0, r2
 801b9c8:	9201      	str	r2, [sp, #4]
 801b9ca:	9109      	str	r1, [sp, #36]	@ 0x24
 801b9cc:	b29f      	uxth	r7, r3
 801b9ce:	d21a      	bcs.n	801ba06 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x11a>
 801b9d0:	2300      	movs	r3, #0
 801b9d2:	4641      	mov	r1, r8
 801b9d4:	9302      	str	r3, [sp, #8]
 801b9d6:	b963      	cbnz	r3, 801b9f2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x106>
 801b9d8:	9d00      	ldr	r5, [sp, #0]
 801b9da:	782a      	ldrb	r2, [r5, #0]
 801b9dc:	0993      	lsrs	r3, r2, #6
 801b9de:	1e5c      	subs	r4, r3, #1
 801b9e0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801b9e4:	2c02      	cmp	r4, #2
 801b9e6:	9202      	str	r2, [sp, #8]
 801b9e8:	f200 8099 	bhi.w	801bb1e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x232>
 801b9ec:	3501      	adds	r5, #1
 801b9ee:	9500      	str	r5, [sp, #0]
 801b9f0:	b29b      	uxth	r3, r3
 801b9f2:	b181      	cbz	r1, 801ba16 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x12a>
 801b9f4:	428b      	cmp	r3, r1
 801b9f6:	f080 808c 	bcs.w	801bb12 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x226>
 801b9fa:	1acb      	subs	r3, r1, r3
 801b9fc:	b299      	uxth	r1, r3
 801b9fe:	2300      	movs	r3, #0
 801ba00:	9a01      	ldr	r2, [sp, #4]
 801ba02:	4290      	cmp	r0, r2
 801ba04:	d3e7      	bcc.n	801b9d6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xea>
 801ba06:	4b7b      	ldr	r3, [pc, #492]	@ (801bbf4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 801ba08:	6818      	ldr	r0, [r3, #0]
 801ba0a:	6803      	ldr	r3, [r0, #0]
 801ba0c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ba0e:	4798      	blx	r3
 801ba10:	b011      	add	sp, #68	@ 0x44
 801ba12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ba16:	2204      	movs	r2, #4
 801ba18:	4615      	mov	r5, r2
 801ba1a:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801ba1c:	9a02      	ldr	r2, [sp, #8]
 801ba1e:	42bb      	cmp	r3, r7
 801ba20:	fb15 4202 	smlabb	r2, r5, r2, r4
 801ba24:	9c08      	ldr	r4, [sp, #32]
 801ba26:	58a5      	ldr	r5, [r4, r2]
 801ba28:	ea4f 6815 	mov.w	r8, r5, lsr #24
 801ba2c:	f0c0 808d 	bcc.w	801bb4a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x25e>
 801ba30:	1bda      	subs	r2, r3, r7
 801ba32:	b292      	uxth	r2, r2
 801ba34:	9203      	str	r2, [sp, #12]
 801ba36:	2f00      	cmp	r7, #0
 801ba38:	d076      	beq.n	801bb28 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x23c>
 801ba3a:	9704      	str	r7, [sp, #16]
 801ba3c:	9107      	str	r1, [sp, #28]
 801ba3e:	9a06      	ldr	r2, [sp, #24]
 801ba40:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801ba44:	fb02 f408 	mul.w	r4, r2, r8
 801ba48:	1c62      	adds	r2, r4, #1
 801ba4a:	eb02 2224 	add.w	r2, r2, r4, asr #8
 801ba4e:	1212      	asrs	r2, r2, #8
 801ba50:	43d4      	mvns	r4, r2
 801ba52:	f3c5 2b07 	ubfx	fp, r5, #8, #8
 801ba56:	b292      	uxth	r2, r2
 801ba58:	b2ed      	uxtb	r5, r5
 801ba5a:	fa5f f98b 	uxtb.w	r9, fp
 801ba5e:	fa5f fa86 	uxtb.w	sl, r6
 801ba62:	fb15 fc02 	smulbb	ip, r5, r2
 801ba66:	fb19 fe02 	smulbb	lr, r9, r2
 801ba6a:	fb1a f202 	smulbb	r2, sl, r2
 801ba6e:	f88d 602b 	strb.w	r6, [sp, #43]	@ 0x2b
 801ba72:	b2e4      	uxtb	r4, r4
 801ba74:	fa1f fc8c 	uxth.w	ip, ip
 801ba78:	fa1f fe8e 	uxth.w	lr, lr
 801ba7c:	b292      	uxth	r2, r2
 801ba7e:	f1b8 0f00 	cmp.w	r8, #0
 801ba82:	d06b      	beq.n	801bb5c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x270>
 801ba84:	9e06      	ldr	r6, [sp, #24]
 801ba86:	2eff      	cmp	r6, #255	@ 0xff
 801ba88:	d070      	beq.n	801bb6c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x280>
 801ba8a:	9d04      	ldr	r5, [sp, #16]
 801ba8c:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801ba90:	f105 36ff 	add.w	r6, r5, #4294967295
 801ba94:	b2b5      	uxth	r5, r6
 801ba96:	9504      	str	r5, [sp, #16]
 801ba98:	f000 810e 	beq.w	801bcb8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3cc>
 801ba9c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801baa0:	f100 0a06 	add.w	sl, r0, #6
 801baa4:	44aa      	add	sl, r5
 801baa6:	f100 0903 	add.w	r9, r0, #3
 801baaa:	f819 8c03 	ldrb.w	r8, [r9, #-3]
 801baae:	f819 6c02 	ldrb.w	r6, [r9, #-2]
 801bab2:	f819 5c01 	ldrb.w	r5, [r9, #-1]
 801bab6:	fb08 c804 	mla	r8, r8, r4, ip
 801baba:	fb06 e604 	mla	r6, r6, r4, lr
 801babe:	fb05 2504 	mla	r5, r5, r4, r2
 801bac2:	fa1f f888 	uxth.w	r8, r8
 801bac6:	b2b6      	uxth	r6, r6
 801bac8:	f108 0b01 	add.w	fp, r8, #1
 801bacc:	b2ad      	uxth	r5, r5
 801bace:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 801bad2:	f106 0b01 	add.w	fp, r6, #1
 801bad6:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 801bada:	f105 0b01 	add.w	fp, r5, #1
 801bade:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801bae2:	ea4f 2828 	mov.w	r8, r8, asr #8
 801bae6:	1236      	asrs	r6, r6, #8
 801bae8:	122d      	asrs	r5, r5, #8
 801baea:	f809 8c03 	strb.w	r8, [r9, #-3]
 801baee:	f809 6c02 	strb.w	r6, [r9, #-2]
 801baf2:	f809 5c01 	strb.w	r5, [r9, #-1]
 801baf6:	f109 0903 	add.w	r9, r9, #3
 801bafa:	45ca      	cmp	sl, r9
 801bafc:	d1d5      	bne.n	801baaa <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1be>
 801bafe:	9e04      	ldr	r6, [sp, #16]
 801bb00:	3601      	adds	r6, #1
 801bb02:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801bb06:	4430      	add	r0, r6
 801bb08:	42bb      	cmp	r3, r7
 801bb0a:	d20d      	bcs.n	801bb28 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x23c>
 801bb0c:	9b03      	ldr	r3, [sp, #12]
 801bb0e:	9f07      	ldr	r7, [sp, #28]
 801bb10:	e776      	b.n	801ba00 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 801bb12:	1a5b      	subs	r3, r3, r1
 801bb14:	b29b      	uxth	r3, r3
 801bb16:	f8bd 7014 	ldrh.w	r7, [sp, #20]
 801bb1a:	2100      	movs	r1, #0
 801bb1c:	e770      	b.n	801ba00 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 801bb1e:	462a      	mov	r2, r5
 801bb20:	3202      	adds	r2, #2
 801bb22:	786b      	ldrb	r3, [r5, #1]
 801bb24:	9200      	str	r2, [sp, #0]
 801bb26:	e764      	b.n	801b9f2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x106>
 801bb28:	9c05      	ldr	r4, [sp, #20]
 801bb2a:	4b33      	ldr	r3, [pc, #204]	@ (801bbf8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>)
 801bb2c:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801bb30:	b2a7      	uxth	r7, r4
 801bb32:	881a      	ldrh	r2, [r3, #0]
 801bb34:	1bc9      	subs	r1, r1, r7
 801bb36:	b289      	uxth	r1, r1
 801bb38:	1b12      	subs	r2, r2, r4
 801bb3a:	2900      	cmp	r1, #0
 801bb3c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801bb40:	9b03      	ldr	r3, [sp, #12]
 801bb42:	bf18      	it	ne
 801bb44:	2700      	movne	r7, #0
 801bb46:	4410      	add	r0, r2
 801bb48:	e75a      	b.n	801ba00 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 801bb4a:	1afa      	subs	r2, r7, r3
 801bb4c:	b292      	uxth	r2, r2
 801bb4e:	9207      	str	r2, [sp, #28]
 801bb50:	2b00      	cmp	r3, #0
 801bb52:	f000 80f1 	beq.w	801bd38 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x44c>
 801bb56:	e9cd 1303 	strd	r1, r3, [sp, #12]
 801bb5a:	e770      	b.n	801ba3e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x152>
 801bb5c:	9a04      	ldr	r2, [sp, #16]
 801bb5e:	3a01      	subs	r2, #1
 801bb60:	b292      	uxth	r2, r2
 801bb62:	3201      	adds	r2, #1
 801bb64:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801bb68:	4410      	add	r0, r2
 801bb6a:	e7cd      	b.n	801bb08 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 801bb6c:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801bb70:	d044      	beq.n	801bbfc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x310>
 801bb72:	9d04      	ldr	r5, [sp, #16]
 801bb74:	f100 0a06 	add.w	sl, r0, #6
 801bb78:	1e6e      	subs	r6, r5, #1
 801bb7a:	b2b5      	uxth	r5, r6
 801bb7c:	9504      	str	r5, [sp, #16]
 801bb7e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801bb82:	44aa      	add	sl, r5
 801bb84:	f100 0903 	add.w	r9, r0, #3
 801bb88:	f819 8c03 	ldrb.w	r8, [r9, #-3]
 801bb8c:	f819 6c02 	ldrb.w	r6, [r9, #-2]
 801bb90:	f819 5c01 	ldrb.w	r5, [r9, #-1]
 801bb94:	fb08 c804 	mla	r8, r8, r4, ip
 801bb98:	fb06 e604 	mla	r6, r6, r4, lr
 801bb9c:	fb05 2504 	mla	r5, r5, r4, r2
 801bba0:	fa1f f888 	uxth.w	r8, r8
 801bba4:	b2b6      	uxth	r6, r6
 801bba6:	f108 0b01 	add.w	fp, r8, #1
 801bbaa:	b2ad      	uxth	r5, r5
 801bbac:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 801bbb0:	f106 0b01 	add.w	fp, r6, #1
 801bbb4:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 801bbb8:	f105 0b01 	add.w	fp, r5, #1
 801bbbc:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801bbc0:	ea4f 2828 	mov.w	r8, r8, asr #8
 801bbc4:	1236      	asrs	r6, r6, #8
 801bbc6:	122d      	asrs	r5, r5, #8
 801bbc8:	f809 8c03 	strb.w	r8, [r9, #-3]
 801bbcc:	f809 6c02 	strb.w	r6, [r9, #-2]
 801bbd0:	f809 5c01 	strb.w	r5, [r9, #-1]
 801bbd4:	f109 0903 	add.w	r9, r9, #3
 801bbd8:	45ca      	cmp	sl, r9
 801bbda:	d1d5      	bne.n	801bb88 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x29c>
 801bbdc:	9a04      	ldr	r2, [sp, #16]
 801bbde:	3201      	adds	r2, #1
 801bbe0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801bbe4:	4410      	add	r0, r2
 801bbe6:	e78f      	b.n	801bb08 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 801bbe8:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 801bbec:	b299      	uxth	r1, r3
 801bbee:	fb94 f2f1 	sdiv	r2, r4, r1
 801bbf2:	e6a0      	b.n	801b936 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x4a>
 801bbf4:	2004bf98 	.word	0x2004bf98
 801bbf8:	2004bf92 	.word	0x2004bf92
 801bbfc:	9e04      	ldr	r6, [sp, #16]
 801bbfe:	1e72      	subs	r2, r6, #1
 801bc00:	b292      	uxth	r2, r2
 801bc02:	2a02      	cmp	r2, #2
 801bc04:	920b      	str	r2, [sp, #44]	@ 0x2c
 801bc06:	f240 808d 	bls.w	801bd24 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x438>
 801bc0a:	f04f 0800 	mov.w	r8, #0
 801bc0e:	46c6      	mov	lr, r8
 801bc10:	46c4      	mov	ip, r8
 801bc12:	4602      	mov	r2, r0
 801bc14:	4644      	mov	r4, r8
 801bc16:	f369 0e07 	bfi	lr, r9, #0, #8
 801bc1a:	f36a 0807 	bfi	r8, sl, #0, #8
 801bc1e:	f365 0c07 	bfi	ip, r5, #0, #8
 801bc22:	f36a 2e0f 	bfi	lr, sl, #8, #8
 801bc26:	f365 280f 	bfi	r8, r5, #8, #8
 801bc2a:	f369 2c0f 	bfi	ip, r9, #8, #8
 801bc2e:	f36a 4c17 	bfi	ip, sl, #16, #8
 801bc32:	f369 4817 	bfi	r8, r9, #16, #8
 801bc36:	f365 4e17 	bfi	lr, r5, #16, #8
 801bc3a:	f36a 681f 	bfi	r8, sl, #24, #8
 801bc3e:	9004      	str	r0, [sp, #16]
 801bc40:	f369 6e1f 	bfi	lr, r9, #24, #8
 801bc44:	f365 6c1f 	bfi	ip, r5, #24, #8
 801bc48:	f3c6 0a8f 	ubfx	sl, r6, #2, #16
 801bc4c:	3401      	adds	r4, #1
 801bc4e:	fa1f f984 	uxth.w	r9, r4
 801bc52:	45d1      	cmp	r9, sl
 801bc54:	f8c2 c000 	str.w	ip, [r2]
 801bc58:	f8c2 e004 	str.w	lr, [r2, #4]
 801bc5c:	f8c2 8008 	str.w	r8, [r2, #8]
 801bc60:	f102 020c 	add.w	r2, r2, #12
 801bc64:	d3f2      	bcc.n	801bc4c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x360>
 801bc66:	f026 0403 	bic.w	r4, r6, #3
 801bc6a:	b2a4      	uxth	r4, r4
 801bc6c:	eb04 0e44 	add.w	lr, r4, r4, lsl #1
 801bc70:	eba6 0c04 	sub.w	ip, r6, r4
 801bc74:	42a6      	cmp	r6, r4
 801bc76:	9604      	str	r6, [sp, #16]
 801bc78:	eb0e 0200 	add.w	r2, lr, r0
 801bc7c:	fa1f fc8c 	uxth.w	ip, ip
 801bc80:	d014      	beq.n	801bcac <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 801bc82:	f10c 34ff 	add.w	r4, ip, #4294967295
 801bc86:	f89d 602b 	ldrb.w	r6, [sp, #43]	@ 0x2b
 801bc8a:	b2a4      	uxth	r4, r4
 801bc8c:	7015      	strb	r5, [r2, #0]
 801bc8e:	f882 b001 	strb.w	fp, [r2, #1]
 801bc92:	7096      	strb	r6, [r2, #2]
 801bc94:	b154      	cbz	r4, 801bcac <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 801bc96:	f1bc 0f02 	cmp.w	ip, #2
 801bc9a:	70d5      	strb	r5, [r2, #3]
 801bc9c:	f882 b004 	strb.w	fp, [r2, #4]
 801bca0:	7156      	strb	r6, [r2, #5]
 801bca2:	d003      	beq.n	801bcac <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 801bca4:	7195      	strb	r5, [r2, #6]
 801bca6:	f882 b007 	strb.w	fp, [r2, #7]
 801bcaa:	7216      	strb	r6, [r2, #8]
 801bcac:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801bcae:	3201      	adds	r2, #1
 801bcb0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801bcb4:	4410      	add	r0, r2
 801bcb6:	e727      	b.n	801bb08 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 801bcb8:	eb05 0a45 	add.w	sl, r5, r5, lsl #1
 801bcbc:	1d85      	adds	r5, r0, #6
 801bcbe:	44aa      	add	sl, r5
 801bcc0:	f100 0903 	add.w	r9, r0, #3
 801bcc4:	f819 8c03 	ldrb.w	r8, [r9, #-3]
 801bcc8:	f819 6c02 	ldrb.w	r6, [r9, #-2]
 801bccc:	f819 5c01 	ldrb.w	r5, [r9, #-1]
 801bcd0:	fb08 c804 	mla	r8, r8, r4, ip
 801bcd4:	fb06 e604 	mla	r6, r6, r4, lr
 801bcd8:	fb05 2504 	mla	r5, r5, r4, r2
 801bcdc:	fa1f f888 	uxth.w	r8, r8
 801bce0:	b2b6      	uxth	r6, r6
 801bce2:	f108 0b01 	add.w	fp, r8, #1
 801bce6:	b2ad      	uxth	r5, r5
 801bce8:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 801bcec:	f106 0b01 	add.w	fp, r6, #1
 801bcf0:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 801bcf4:	f105 0b01 	add.w	fp, r5, #1
 801bcf8:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801bcfc:	ea4f 2828 	mov.w	r8, r8, asr #8
 801bd00:	1236      	asrs	r6, r6, #8
 801bd02:	122d      	asrs	r5, r5, #8
 801bd04:	f809 8c03 	strb.w	r8, [r9, #-3]
 801bd08:	f809 6c02 	strb.w	r6, [r9, #-2]
 801bd0c:	f809 5c01 	strb.w	r5, [r9, #-1]
 801bd10:	f109 0903 	add.w	r9, r9, #3
 801bd14:	45d1      	cmp	r9, sl
 801bd16:	d1d5      	bne.n	801bcc4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3d8>
 801bd18:	9a04      	ldr	r2, [sp, #16]
 801bd1a:	3201      	adds	r2, #1
 801bd1c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801bd20:	4410      	add	r0, r2
 801bd22:	e6f1      	b.n	801bb08 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 801bd24:	46b4      	mov	ip, r6
 801bd26:	4602      	mov	r2, r0
 801bd28:	e7ab      	b.n	801bc82 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x396>
 801bd2a:	4b05      	ldr	r3, [pc, #20]	@ (801bd40 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x454>)
 801bd2c:	4a05      	ldr	r2, [pc, #20]	@ (801bd44 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x458>)
 801bd2e:	f640 11c9 	movw	r1, #2505	@ 0x9c9
 801bd32:	4805      	ldr	r0, [pc, #20]	@ (801bd48 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x45c>)
 801bd34:	f008 fffe 	bl	8024d34 <__assert_func>
 801bd38:	9f07      	ldr	r7, [sp, #28]
 801bd3a:	4619      	mov	r1, r3
 801bd3c:	e660      	b.n	801ba00 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 801bd3e:	bf00      	nop
 801bd40:	08027a5c 	.word	0x08027a5c
 801bd44:	080290e8 	.word	0x080290e8
 801bd48:	08027928 	.word	0x08027928

0801bd4c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 801bd4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd50:	b09d      	sub	sp, #116	@ 0x74
 801bd52:	920e      	str	r2, [sp, #56]	@ 0x38
 801bd54:	461c      	mov	r4, r3
 801bd56:	7812      	ldrb	r2, [r2, #0]
 801bd58:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801bd5c:	9114      	str	r1, [sp, #80]	@ 0x50
 801bd5e:	9304      	str	r3, [sp, #16]
 801bd60:	2a00      	cmp	r2, #0
 801bd62:	f040 8207 	bne.w	801c174 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x428>
 801bd66:	b913      	cbnz	r3, 801bd6e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x22>
 801bd68:	b01d      	add	sp, #116	@ 0x74
 801bd6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd6e:	6861      	ldr	r1, [r4, #4]
 801bd70:	4681      	mov	r9, r0
 801bd72:	6820      	ldr	r0, [r4, #0]
 801bd74:	ab18      	add	r3, sp, #96	@ 0x60
 801bd76:	c303      	stmia	r3!, {r0, r1}
 801bd78:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801bd7a:	6818      	ldr	r0, [r3, #0]
 801bd7c:	6859      	ldr	r1, [r3, #4]
 801bd7e:	ab1a      	add	r3, sp, #104	@ 0x68
 801bd80:	c303      	stmia	r3!, {r0, r1}
 801bd82:	a818      	add	r0, sp, #96	@ 0x60
 801bd84:	f7f3 fb2c 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bd88:	4621      	mov	r1, r4
 801bd8a:	a81a      	add	r0, sp, #104	@ 0x68
 801bd8c:	f7f3 fb50 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bd90:	f9bd 1064 	ldrsh.w	r1, [sp, #100]	@ 0x64
 801bd94:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 801bd98:	f340 8151 	ble.w	801c03e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2f2>
 801bd9c:	2301      	movs	r3, #1
 801bd9e:	b289      	uxth	r1, r1
 801bda0:	9316      	str	r3, [sp, #88]	@ 0x58
 801bda2:	f9bd 006a 	ldrsh.w	r0, [sp, #106]	@ 0x6a
 801bda6:	f9bd 2066 	ldrsh.w	r2, [sp, #102]	@ 0x66
 801bdaa:	fb90 f4f3 	sdiv	r4, r0, r3
 801bdae:	441a      	add	r2, r3
 801bdb0:	3a01      	subs	r2, #1
 801bdb2:	fb92 f2f3 	sdiv	r2, r2, r3
 801bdb6:	b2a4      	uxth	r4, r4
 801bdb8:	fb03 0314 	mls	r3, r3, r4, r0
 801bdbc:	9415      	str	r4, [sp, #84]	@ 0x54
 801bdbe:	f8bd 4068 	ldrh.w	r4, [sp, #104]	@ 0x68
 801bdc2:	f8bd 6060 	ldrh.w	r6, [sp, #96]	@ 0x60
 801bdc6:	fb13 4101 	smlabb	r1, r3, r1, r4
 801bdca:	f8bd 5062 	ldrh.w	r5, [sp, #98]	@ 0x62
 801bdce:	4bba      	ldr	r3, [pc, #744]	@ (801c0b8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x36c>)
 801bdd0:	4434      	add	r4, r6
 801bdd2:	4405      	add	r5, r0
 801bdd4:	6818      	ldr	r0, [r3, #0]
 801bdd6:	f8ad 4068 	strh.w	r4, [sp, #104]	@ 0x68
 801bdda:	f8ad 506a 	strh.w	r5, [sp, #106]	@ 0x6a
 801bdde:	f9bd 606c 	ldrsh.w	r6, [sp, #108]	@ 0x6c
 801bde2:	6803      	ldr	r3, [r0, #0]
 801bde4:	3201      	adds	r2, #1
 801bde6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801bde8:	9609      	str	r6, [sp, #36]	@ 0x24
 801bdea:	fa1f f881 	uxth.w	r8, r1
 801bdee:	b294      	uxth	r4, r2
 801bdf0:	f9bd 506e 	ldrsh.w	r5, [sp, #110]	@ 0x6e
 801bdf4:	4798      	blx	r3
 801bdf6:	2200      	movs	r2, #0
 801bdf8:	f1b8 0f00 	cmp.w	r8, #0
 801bdfc:	bf0c      	ite	eq
 801bdfe:	4633      	moveq	r3, r6
 801be00:	2300      	movne	r3, #0
 801be02:	49ae      	ldr	r1, [pc, #696]	@ (801c0bc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x370>)
 801be04:	9213      	str	r2, [sp, #76]	@ 0x4c
 801be06:	8809      	ldrh	r1, [r1, #0]
 801be08:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 801be0c:	f9bd 6068 	ldrsh.w	r6, [sp, #104]	@ 0x68
 801be10:	fb01 f505 	mul.w	r5, r1, r5
 801be14:	fb01 6202 	mla	r2, r1, r2, r6
 801be18:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801be1c:	1882      	adds	r2, r0, r2
 801be1e:	b29b      	uxth	r3, r3
 801be20:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801be24:	9200      	str	r2, [sp, #0]
 801be26:	9302      	str	r3, [sp, #8]
 801be28:	442a      	add	r2, r5
 801be2a:	f109 030a 	add.w	r3, r9, #10
 801be2e:	9317      	str	r3, [sp, #92]	@ 0x5c
 801be30:	4647      	mov	r7, r8
 801be32:	4613      	mov	r3, r2
 801be34:	00a4      	lsls	r4, r4, #2
 801be36:	1d21      	adds	r1, r4, #4
 801be38:	9111      	str	r1, [sp, #68]	@ 0x44
 801be3a:	9206      	str	r2, [sp, #24]
 801be3c:	9a00      	ldr	r2, [sp, #0]
 801be3e:	4293      	cmp	r3, r2
 801be40:	f240 80f5 	bls.w	801c02e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 801be44:	2301      	movs	r3, #1
 801be46:	2600      	movs	r6, #0
 801be48:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801be4a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801be4c:	9307      	str	r3, [sp, #28]
 801be4e:	fa10 f282 	uxtah	r2, r0, r2
 801be52:	0092      	lsls	r2, r2, #2
 801be54:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801be56:	3204      	adds	r2, #4
 801be58:	4410      	add	r0, r2
 801be5a:	7883      	ldrb	r3, [r0, #2]
 801be5c:	7845      	ldrb	r5, [r0, #1]
 801be5e:	021b      	lsls	r3, r3, #8
 801be60:	78c0      	ldrb	r0, [r0, #3]
 801be62:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 801be66:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801be68:	4304      	orrs	r4, r0
 801be6a:	1928      	adds	r0, r5, r4
 801be6c:	7843      	ldrb	r3, [r0, #1]
 801be6e:	3001      	adds	r0, #1
 801be70:	9610      	str	r6, [sp, #64]	@ 0x40
 801be72:	9003      	str	r0, [sp, #12]
 801be74:	4630      	mov	r0, r6
 801be76:	2601      	movs	r6, #1
 801be78:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 801be7c:	46b0      	mov	r8, r6
 801be7e:	fbb7 f1f1 	udiv	r1, r7, r1
 801be82:	5d2c      	ldrb	r4, [r5, r4]
 801be84:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801be86:	021b      	lsls	r3, r3, #8
 801be88:	5caa      	ldrb	r2, [r5, r2]
 801be8a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801be8c:	f403 73ff 	and.w	r3, r3, #510	@ 0x1fe
 801be90:	431c      	orrs	r4, r3
 801be92:	920b      	str	r2, [sp, #44]	@ 0x2c
 801be94:	1a69      	subs	r1, r5, r1
 801be96:	3201      	adds	r2, #1
 801be98:	f889 4009 	strb.w	r4, [r9, #9]
 801be9c:	9205      	str	r2, [sp, #20]
 801be9e:	b2a4      	uxth	r4, r4
 801bea0:	b28a      	uxth	r2, r1
 801bea2:	9408      	str	r4, [sp, #32]
 801bea4:	9212      	str	r2, [sp, #72]	@ 0x48
 801bea6:	2f00      	cmp	r7, #0
 801bea8:	d034      	beq.n	801bf14 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1c8>
 801beaa:	42be      	cmp	r6, r7
 801beac:	f080 80cf 	bcs.w	801c04e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x302>
 801beb0:	1bbf      	subs	r7, r7, r6
 801beb2:	b2bf      	uxth	r7, r7
 801beb4:	9b06      	ldr	r3, [sp, #24]
 801beb6:	9a00      	ldr	r2, [sp, #0]
 801beb8:	4293      	cmp	r3, r2
 801beba:	f240 80b8 	bls.w	801c02e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 801bebe:	9803      	ldr	r0, [sp, #12]
 801bec0:	f1c8 0107 	rsb	r1, r8, #7
 801bec4:	7842      	ldrb	r2, [r0, #1]
 801bec6:	7803      	ldrb	r3, [r0, #0]
 801bec8:	408a      	lsls	r2, r1
 801beca:	fa43 f308 	asr.w	r3, r3, r8
 801bece:	0052      	lsls	r2, r2, #1
 801bed0:	f108 0801 	add.w	r8, r8, #1
 801bed4:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801bed8:	b2db      	uxtb	r3, r3
 801beda:	fa5f f888 	uxtb.w	r8, r8
 801bede:	4313      	orrs	r3, r2
 801bee0:	f1b8 0f08 	cmp.w	r8, #8
 801bee4:	b29a      	uxth	r2, r3
 801bee6:	f000 80e0 	beq.w	801c0aa <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x35e>
 801beea:	3001      	adds	r0, #1
 801beec:	9003      	str	r0, [sp, #12]
 801beee:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801bef0:	4291      	cmp	r1, r2
 801bef2:	f0c0 80bc 	bcc.w	801c06e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x322>
 801bef6:	9905      	ldr	r1, [sp, #20]
 801bef8:	b2db      	uxtb	r3, r3
 801befa:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801befe:	f889 3009 	strb.w	r3, [r9, #9]
 801bf02:	f04f 0601 	mov.w	r6, #1
 801bf06:	f0c0 8121 	bcc.w	801c14c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x400>
 801bf0a:	e9cd 6207 	strd	r6, r2, [sp, #28]
 801bf0e:	2000      	movs	r0, #0
 801bf10:	2f00      	cmp	r7, #0
 801bf12:	d1ca      	bne.n	801beaa <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x15e>
 801bf14:	9b02      	ldr	r3, [sp, #8]
 801bf16:	429e      	cmp	r6, r3
 801bf18:	461a      	mov	r2, r3
 801bf1a:	f0c0 80f0 	bcc.w	801c0fe <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3b2>
 801bf1e:	1af3      	subs	r3, r6, r3
 801bf20:	b29b      	uxth	r3, r3
 801bf22:	930a      	str	r3, [sp, #40]	@ 0x28
 801bf24:	2a00      	cmp	r2, #0
 801bf26:	f000 80cb 	beq.w	801c0c0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x374>
 801bf2a:	4694      	mov	ip, r2
 801bf2c:	970f      	str	r7, [sp, #60]	@ 0x3c
 801bf2e:	9b00      	ldr	r3, [sp, #0]
 801bf30:	eb00 0e0c 	add.w	lr, r0, ip
 801bf34:	960c      	str	r6, [sp, #48]	@ 0x30
 801bf36:	970d      	str	r7, [sp, #52]	@ 0x34
 801bf38:	fa1f fe8e 	uxth.w	lr, lr
 801bf3c:	1cdd      	adds	r5, r3, #3
 801bf3e:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 801bf40:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801bf42:	e037      	b.n	801bfb4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x268>
 801bf44:	9a04      	ldr	r2, [sp, #16]
 801bf46:	9b01      	ldr	r3, [sp, #4]
 801bf48:	fb02 f101 	mul.w	r1, r2, r1
 801bf4c:	1c4a      	adds	r2, r1, #1
 801bf4e:	eb02 2121 	add.w	r1, r2, r1, asr #8
 801bf52:	1209      	asrs	r1, r1, #8
 801bf54:	43ca      	mvns	r2, r1
 801bf56:	b289      	uxth	r1, r1
 801bf58:	fb13 f301 	smulbb	r3, r3, r1
 801bf5c:	fb1b fb01 	smulbb	fp, fp, r1
 801bf60:	fb1a f101 	smulbb	r1, sl, r1
 801bf64:	f815 ac03 	ldrb.w	sl, [r5, #-3]
 801bf68:	b2d2      	uxtb	r2, r2
 801bf6a:	fb0a 3302 	mla	r3, sl, r2, r3
 801bf6e:	f815 4c02 	ldrb.w	r4, [r5, #-2]
 801bf72:	f815 ac01 	ldrb.w	sl, [r5, #-1]
 801bf76:	fb04 b402 	mla	r4, r4, r2, fp
 801bf7a:	fb0a 1102 	mla	r1, sl, r2, r1
 801bf7e:	b29b      	uxth	r3, r3
 801bf80:	b2a4      	uxth	r4, r4
 801bf82:	b289      	uxth	r1, r1
 801bf84:	f103 0a01 	add.w	sl, r3, #1
 801bf88:	f104 0b01 	add.w	fp, r4, #1
 801bf8c:	1c4a      	adds	r2, r1, #1
 801bf8e:	eb0a 2313 	add.w	r3, sl, r3, lsr #8
 801bf92:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 801bf96:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bf9a:	121b      	asrs	r3, r3, #8
 801bf9c:	1224      	asrs	r4, r4, #8
 801bf9e:	1209      	asrs	r1, r1, #8
 801bfa0:	f805 3c03 	strb.w	r3, [r5, #-3]
 801bfa4:	f805 4c02 	strb.w	r4, [r5, #-2]
 801bfa8:	f805 1c01 	strb.w	r1, [r5, #-1]
 801bfac:	4570      	cmp	r0, lr
 801bfae:	f105 0503 	add.w	r5, r5, #3
 801bfb2:	d024      	beq.n	801bffe <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2b2>
 801bfb4:	2204      	movs	r2, #4
 801bfb6:	eb09 0300 	add.w	r3, r9, r0
 801bfba:	7a5b      	ldrb	r3, [r3, #9]
 801bfbc:	3001      	adds	r0, #1
 801bfbe:	fb12 6303 	smlabb	r3, r2, r3, r6
 801bfc2:	58fb      	ldr	r3, [r7, r3]
 801bfc4:	b280      	uxth	r0, r0
 801bfc6:	0e19      	lsrs	r1, r3, #24
 801bfc8:	d0f0      	beq.n	801bfac <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x260>
 801bfca:	f3c3 2407 	ubfx	r4, r3, #8, #8
 801bfce:	f3c3 4207 	ubfx	r2, r3, #16, #8
 801bfd2:	29ff      	cmp	r1, #255	@ 0xff
 801bfd4:	b2db      	uxtb	r3, r3
 801bfd6:	fa5f fb84 	uxtb.w	fp, r4
 801bfda:	9301      	str	r3, [sp, #4]
 801bfdc:	fa5f fa82 	uxtb.w	sl, r2
 801bfe0:	d1b0      	bne.n	801bf44 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1f8>
 801bfe2:	9b04      	ldr	r3, [sp, #16]
 801bfe4:	2bff      	cmp	r3, #255	@ 0xff
 801bfe6:	d1ad      	bne.n	801bf44 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1f8>
 801bfe8:	9b01      	ldr	r3, [sp, #4]
 801bfea:	4570      	cmp	r0, lr
 801bfec:	f805 3c03 	strb.w	r3, [r5, #-3]
 801bff0:	f805 4c02 	strb.w	r4, [r5, #-2]
 801bff4:	f805 2c01 	strb.w	r2, [r5, #-1]
 801bff8:	f105 0503 	add.w	r5, r5, #3
 801bffc:	d1da      	bne.n	801bfb4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x268>
 801bffe:	e9dd 670c 	ldrd	r6, r7, [sp, #48]	@ 0x30
 801c002:	f10c 3cff 	add.w	ip, ip, #4294967295
 801c006:	fa1f fc8c 	uxth.w	ip, ip
 801c00a:	9b00      	ldr	r3, [sp, #0]
 801c00c:	f10c 0c01 	add.w	ip, ip, #1
 801c010:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801c014:	4463      	add	r3, ip
 801c016:	9300      	str	r3, [sp, #0]
 801c018:	9b02      	ldr	r3, [sp, #8]
 801c01a:	429e      	cmp	r6, r3
 801c01c:	d251      	bcs.n	801c0c2 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x376>
 801c01e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801c020:	9a00      	ldr	r2, [sp, #0]
 801c022:	9302      	str	r3, [sp, #8]
 801c024:	9b06      	ldr	r3, [sp, #24]
 801c026:	4670      	mov	r0, lr
 801c028:	4293      	cmp	r3, r2
 801c02a:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 801c02c:	d81b      	bhi.n	801c066 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x31a>
 801c02e:	4b22      	ldr	r3, [pc, #136]	@ (801c0b8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x36c>)
 801c030:	6818      	ldr	r0, [r3, #0]
 801c032:	6803      	ldr	r3, [r0, #0]
 801c034:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c036:	4798      	blx	r3
 801c038:	b01d      	add	sp, #116	@ 0x74
 801c03a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c03e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801c042:	b289      	uxth	r1, r1
 801c044:	fb93 f3f1 	sdiv	r3, r3, r1
 801c048:	b29a      	uxth	r2, r3
 801c04a:	9216      	str	r2, [sp, #88]	@ 0x58
 801c04c:	e6a9      	b.n	801bda2 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x56>
 801c04e:	1bf6      	subs	r6, r6, r7
 801c050:	4438      	add	r0, r7
 801c052:	2700      	movs	r7, #0
 801c054:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 801c058:	b2b6      	uxth	r6, r6
 801c05a:	b280      	uxth	r0, r0
 801c05c:	9302      	str	r3, [sp, #8]
 801c05e:	9b06      	ldr	r3, [sp, #24]
 801c060:	9a00      	ldr	r2, [sp, #0]
 801c062:	4293      	cmp	r3, r2
 801c064:	d9e3      	bls.n	801c02e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 801c066:	2e00      	cmp	r6, #0
 801c068:	f47f af1d 	bne.w	801bea6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x15a>
 801c06c:	e727      	b.n	801bebe <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x172>
 801c06e:	9b05      	ldr	r3, [sp, #20]
 801c070:	429a      	cmp	r2, r3
 801c072:	d34d      	bcc.n	801c110 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c4>
 801c074:	9807      	ldr	r0, [sp, #28]
 801c076:	f899 1009 	ldrb.w	r1, [r9, #9]
 801c07a:	eb09 0300 	add.w	r3, r9, r0
 801c07e:	7259      	strb	r1, [r3, #9]
 801c080:	f899 3009 	ldrb.w	r3, [r9, #9]
 801c084:	1c41      	adds	r1, r0, #1
 801c086:	b28e      	uxth	r6, r1
 801c088:	9c05      	ldr	r4, [sp, #20]
 801c08a:	9d08      	ldr	r5, [sp, #32]
 801c08c:	eb09 0084 	add.w	r0, r9, r4, lsl #2
 801c090:	3401      	adds	r4, #1
 801c092:	f880 304a 	strb.w	r3, [r0, #74]	@ 0x4a
 801c096:	b2a3      	uxth	r3, r4
 801c098:	f8a0 504c 	strh.w	r5, [r0, #76]	@ 0x4c
 801c09c:	f880 104b 	strb.w	r1, [r0, #75]	@ 0x4b
 801c0a0:	9305      	str	r3, [sp, #20]
 801c0a2:	e9cd 6207 	strd	r6, r2, [sp, #28]
 801c0a6:	2000      	movs	r0, #0
 801c0a8:	e6fd      	b.n	801bea6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x15a>
 801c0aa:	4601      	mov	r1, r0
 801c0ac:	3102      	adds	r1, #2
 801c0ae:	f04f 0800 	mov.w	r8, #0
 801c0b2:	9103      	str	r1, [sp, #12]
 801c0b4:	e71b      	b.n	801beee <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1a2>
 801c0b6:	bf00      	nop
 801c0b8:	2004bf98 	.word	0x2004bf98
 801c0bc:	2004bf92 	.word	0x2004bf92
 801c0c0:	4686      	mov	lr, r0
 801c0c2:	4b30      	ldr	r3, [pc, #192]	@ (801c184 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x438>)
 801c0c4:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801c0c6:	881b      	ldrh	r3, [r3, #0]
 801c0c8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801c0ca:	1a5b      	subs	r3, r3, r1
 801c0cc:	9900      	ldr	r1, [sp, #0]
 801c0ce:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801c0d2:	4419      	add	r1, r3
 801c0d4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801c0d6:	3201      	adds	r2, #1
 801c0d8:	429a      	cmp	r2, r3
 801c0da:	9210      	str	r2, [sp, #64]	@ 0x40
 801c0dc:	9100      	str	r1, [sp, #0]
 801c0de:	d038      	beq.n	801c152 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x406>
 801c0e0:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 801c0e4:	f8bd 7064 	ldrh.w	r7, [sp, #100]	@ 0x64
 801c0e8:	4670      	mov	r0, lr
 801c0ea:	1aff      	subs	r7, r7, r3
 801c0ec:	b2bf      	uxth	r7, r7
 801c0ee:	2f00      	cmp	r7, #0
 801c0f0:	bf18      	it	ne
 801c0f2:	2300      	movne	r3, #0
 801c0f4:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 801c0f6:	9302      	str	r3, [sp, #8]
 801c0f8:	bf08      	it	eq
 801c0fa:	2700      	moveq	r7, #0
 801c0fc:	e7af      	b.n	801c05e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x312>
 801c0fe:	1b9b      	subs	r3, r3, r6
 801c100:	b29b      	uxth	r3, r3
 801c102:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c104:	2e00      	cmp	r6, #0
 801c106:	f43f aed5 	beq.w	801beb4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x168>
 801c10a:	970a      	str	r7, [sp, #40]	@ 0x28
 801c10c:	46b4      	mov	ip, r6
 801c10e:	e70e      	b.n	801bf2e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e2>
 801c110:	eb09 0382 	add.w	r3, r9, r2, lsl #2
 801c114:	f893 604b 	ldrb.w	r6, [r3, #75]	@ 0x4b
 801c118:	4613      	mov	r3, r2
 801c11a:	2e01      	cmp	r6, #1
 801c11c:	d90d      	bls.n	801c13a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3ee>
 801c11e:	f106 0109 	add.w	r1, r6, #9
 801c122:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801c124:	4449      	add	r1, r9
 801c126:	eb09 0383 	add.w	r3, r9, r3, lsl #2
 801c12a:	f893 004a 	ldrb.w	r0, [r3, #74]	@ 0x4a
 801c12e:	f801 0d01 	strb.w	r0, [r1, #-1]!
 801c132:	428c      	cmp	r4, r1
 801c134:	f8b3 304c 	ldrh.w	r3, [r3, #76]	@ 0x4c
 801c138:	d1f5      	bne.n	801c126 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3da>
 801c13a:	9905      	ldr	r1, [sp, #20]
 801c13c:	b2db      	uxtb	r3, r3
 801c13e:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801c142:	f889 3009 	strb.w	r3, [r9, #9]
 801c146:	b2b6      	uxth	r6, r6
 801c148:	f4bf aedf 	bcs.w	801bf0a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1be>
 801c14c:	9907      	ldr	r1, [sp, #28]
 801c14e:	3101      	adds	r1, #1
 801c150:	e79a      	b.n	801c088 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x33c>
 801c152:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 801c156:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 801c15a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801c15c:	1aff      	subs	r7, r7, r3
 801c15e:	b2bf      	uxth	r7, r7
 801c160:	2f00      	cmp	r7, #0
 801c162:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c164:	bf18      	it	ne
 801c166:	2300      	movne	r3, #0
 801c168:	3201      	adds	r2, #1
 801c16a:	b29b      	uxth	r3, r3
 801c16c:	9302      	str	r3, [sp, #8]
 801c16e:	9213      	str	r2, [sp, #76]	@ 0x4c
 801c170:	9b06      	ldr	r3, [sp, #24]
 801c172:	e663      	b.n	801be3c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xf0>
 801c174:	4b04      	ldr	r3, [pc, #16]	@ (801c188 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x43c>)
 801c176:	4a05      	ldr	r2, [pc, #20]	@ (801c18c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x440>)
 801c178:	f640 215f 	movw	r1, #2655	@ 0xa5f
 801c17c:	4804      	ldr	r0, [pc, #16]	@ (801c190 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x444>)
 801c17e:	f008 fdd9 	bl	8024d34 <__assert_func>
 801c182:	bf00      	nop
 801c184:	2004bf92 	.word	0x2004bf92
 801c188:	08027a5c 	.word	0x08027a5c
 801c18c:	080293b4 	.word	0x080293b4
 801c190:	08027928 	.word	0x08027928

0801c194 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 801c194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c198:	4617      	mov	r7, r2
 801c19a:	b095      	sub	sp, #84	@ 0x54
 801c19c:	8812      	ldrh	r2, [r2, #0]
 801c19e:	4688      	mov	r8, r1
 801c1a0:	f89d 107c 	ldrb.w	r1, [sp, #124]	@ 0x7c
 801c1a4:	2a01      	cmp	r2, #1
 801c1a6:	461c      	mov	r4, r3
 801c1a8:	910d      	str	r1, [sp, #52]	@ 0x34
 801c1aa:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801c1ac:	f040 8105 	bne.w	801c3ba <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x226>
 801c1b0:	6820      	ldr	r0, [r4, #0]
 801c1b2:	6861      	ldr	r1, [r4, #4]
 801c1b4:	aa10      	add	r2, sp, #64	@ 0x40
 801c1b6:	c203      	stmia	r2!, {r0, r1}
 801c1b8:	6818      	ldr	r0, [r3, #0]
 801c1ba:	6859      	ldr	r1, [r3, #4]
 801c1bc:	aa12      	add	r2, sp, #72	@ 0x48
 801c1be:	c203      	stmia	r2!, {r0, r1}
 801c1c0:	a810      	add	r0, sp, #64	@ 0x40
 801c1c2:	f7f3 f90d 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c1c6:	4621      	mov	r1, r4
 801c1c8:	a812      	add	r0, sp, #72	@ 0x48
 801c1ca:	f7f3 f931 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c1ce:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 801c1d2:	f9bd 504a 	ldrsh.w	r5, [sp, #74]	@ 0x4a
 801c1d6:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 801c1da:	f8bd 3042 	ldrh.w	r3, [sp, #66]	@ 0x42
 801c1de:	487a      	ldr	r0, [pc, #488]	@ (801c3c8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 801c1e0:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 801c1e4:	4422      	add	r2, r4
 801c1e6:	442b      	add	r3, r5
 801c1e8:	6800      	ldr	r0, [r0, #0]
 801c1ea:	fb11 4105 	smlabb	r1, r1, r5, r4
 801c1ee:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 801c1f2:	f8ad 2048 	strh.w	r2, [sp, #72]	@ 0x48
 801c1f6:	6802      	ldr	r2, [r0, #0]
 801c1f8:	4c74      	ldr	r4, [pc, #464]	@ (801c3cc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x238>)
 801c1fa:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 801c1fe:	4488      	add	r8, r1
 801c200:	f9bd 104e 	ldrsh.w	r1, [sp, #78]	@ 0x4e
 801c204:	42a3      	cmp	r3, r4
 801c206:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	@ 0x4c
 801c20a:	910c      	str	r1, [sp, #48]	@ 0x30
 801c20c:	f040 809f 	bne.w	801c34e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 801c210:	6841      	ldr	r1, [r0, #4]
 801c212:	4c6f      	ldr	r4, [pc, #444]	@ (801c3d0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 801c214:	680b      	ldr	r3, [r1, #0]
 801c216:	699b      	ldr	r3, [r3, #24]
 801c218:	42a3      	cmp	r3, r4
 801c21a:	f040 80c0 	bne.w	801c39e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20a>
 801c21e:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 801c220:	4798      	blx	r3
 801c222:	4a6c      	ldr	r2, [pc, #432]	@ (801c3d4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 801c224:	f9bd 304a 	ldrsh.w	r3, [sp, #74]	@ 0x4a
 801c228:	8814      	ldrh	r4, [r2, #0]
 801c22a:	f9bd 2048 	ldrsh.w	r2, [sp, #72]	@ 0x48
 801c22e:	fb04 2303 	mla	r3, r4, r3, r2
 801c232:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801c236:	4418      	add	r0, r3
 801c238:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c23a:	2b00      	cmp	r3, #0
 801c23c:	dd67      	ble.n	801c30e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x17a>
 801c23e:	2300      	movs	r3, #0
 801c240:	f04f 0903 	mov.w	r9, #3
 801c244:	2104      	movs	r1, #4
 801c246:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801c248:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c24a:	eb0a 034a 	add.w	r3, sl, sl, lsl #1
 801c24e:	930e      	str	r3, [sp, #56]	@ 0x38
 801c250:	f1c5 02ff 	rsb	r2, r5, #255	@ 0xff
 801c254:	444b      	add	r3, r9
 801c256:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c258:	b292      	uxth	r2, r2
 801c25a:	fa1f fc85 	uxth.w	ip, r5
 801c25e:	f8cd a028 	str.w	sl, [sp, #40]	@ 0x28
 801c262:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c264:	2b00      	cmp	r3, #0
 801c266:	dd43      	ble.n	801c2f0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x15c>
 801c268:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c26a:	2bff      	cmp	r3, #255	@ 0xff
 801c26c:	d057      	beq.n	801c31e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x18a>
 801c26e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801c270:	1cc5      	adds	r5, r0, #3
 801c272:	f108 3eff 	add.w	lr, r8, #4294967295
 801c276:	eb00 0a03 	add.w	sl, r0, r3
 801c27a:	f81e 3f01 	ldrb.w	r3, [lr, #1]!
 801c27e:	f815 6c03 	ldrb.w	r6, [r5, #-3]
 801c282:	fb19 1303 	smlabb	r3, r9, r3, r1
 801c286:	fb16 f402 	smulbb	r4, r6, r2
 801c28a:	5cfe      	ldrb	r6, [r7, r3]
 801c28c:	443b      	add	r3, r7
 801c28e:	fb06 460c 	mla	r6, r6, ip, r4
 801c292:	b2b6      	uxth	r6, r6
 801c294:	f815 4c02 	ldrb.w	r4, [r5, #-2]
 801c298:	f106 0b01 	add.w	fp, r6, #1
 801c29c:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 801c2a0:	1236      	asrs	r6, r6, #8
 801c2a2:	fb14 fb02 	smulbb	fp, r4, r2
 801c2a6:	f805 6c03 	strb.w	r6, [r5, #-3]
 801c2aa:	785c      	ldrb	r4, [r3, #1]
 801c2ac:	f815 6c01 	ldrb.w	r6, [r5, #-1]
 801c2b0:	fb04 b40c 	mla	r4, r4, ip, fp
 801c2b4:	b2a4      	uxth	r4, r4
 801c2b6:	f104 0b01 	add.w	fp, r4, #1
 801c2ba:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 801c2be:	1224      	asrs	r4, r4, #8
 801c2c0:	fb16 f602 	smulbb	r6, r6, r2
 801c2c4:	f805 4c02 	strb.w	r4, [r5, #-2]
 801c2c8:	789b      	ldrb	r3, [r3, #2]
 801c2ca:	3503      	adds	r5, #3
 801c2cc:	fb03 630c 	mla	r3, r3, ip, r6
 801c2d0:	b29b      	uxth	r3, r3
 801c2d2:	1c5c      	adds	r4, r3, #1
 801c2d4:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 801c2d8:	121b      	asrs	r3, r3, #8
 801c2da:	f805 3c04 	strb.w	r3, [r5, #-4]
 801c2de:	45aa      	cmp	sl, r5
 801c2e0:	d1cb      	bne.n	801c27a <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xe6>
 801c2e2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c2e4:	4418      	add	r0, r3
 801c2e6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c2e8:	4498      	add	r8, r3
 801c2ea:	4b3a      	ldr	r3, [pc, #232]	@ (801c3d4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 801c2ec:	881c      	ldrh	r4, [r3, #0]
 801c2ee:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c2f0:	f9bd 5044 	ldrsh.w	r5, [sp, #68]	@ 0x44
 801c2f4:	eba4 0e03 	sub.w	lr, r4, r3
 801c2f8:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 801c2fa:	1aed      	subs	r5, r5, r3
 801c2fc:	eb0e 034e 	add.w	r3, lr, lr, lsl #1
 801c300:	4418      	add	r0, r3
 801c302:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c304:	3601      	adds	r6, #1
 801c306:	42b3      	cmp	r3, r6
 801c308:	960b      	str	r6, [sp, #44]	@ 0x2c
 801c30a:	44a8      	add	r8, r5
 801c30c:	d1a9      	bne.n	801c262 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xce>
 801c30e:	4b2e      	ldr	r3, [pc, #184]	@ (801c3c8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 801c310:	6818      	ldr	r0, [r3, #0]
 801c312:	6803      	ldr	r3, [r0, #0]
 801c314:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c316:	4798      	blx	r3
 801c318:	b015      	add	sp, #84	@ 0x54
 801c31a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c31e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801c320:	1cc4      	adds	r4, r0, #3
 801c322:	f108 35ff 	add.w	r5, r8, #4294967295
 801c326:	eb00 0e03 	add.w	lr, r0, r3
 801c32a:	f815 3f01 	ldrb.w	r3, [r5, #1]!
 801c32e:	3403      	adds	r4, #3
 801c330:	fb19 1303 	smlabb	r3, r9, r3, r1
 801c334:	5cfe      	ldrb	r6, [r7, r3]
 801c336:	443b      	add	r3, r7
 801c338:	f804 6c06 	strb.w	r6, [r4, #-6]
 801c33c:	785e      	ldrb	r6, [r3, #1]
 801c33e:	f804 6c05 	strb.w	r6, [r4, #-5]
 801c342:	789b      	ldrb	r3, [r3, #2]
 801c344:	f804 3c04 	strb.w	r3, [r4, #-4]
 801c348:	45a6      	cmp	lr, r4
 801c34a:	d1ee      	bne.n	801c32a <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x196>
 801c34c:	e7c9      	b.n	801c2e2 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x14e>
 801c34e:	4798      	blx	r3
 801c350:	4603      	mov	r3, r0
 801c352:	2b01      	cmp	r3, #1
 801c354:	d127      	bne.n	801c3a6 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x212>
 801c356:	4a20      	ldr	r2, [pc, #128]	@ (801c3d8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x244>)
 801c358:	6810      	ldr	r0, [r2, #0]
 801c35a:	b340      	cbz	r0, 801c3ae <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x21a>
 801c35c:	f04f 0c0b 	mov.w	ip, #11
 801c360:	2600      	movs	r6, #0
 801c362:	4a1c      	ldr	r2, [pc, #112]	@ (801c3d4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 801c364:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801c368:	8814      	ldrh	r4, [r2, #0]
 801c36a:	fa1f f28a 	uxth.w	r2, sl
 801c36e:	e9cd 2101 	strd	r2, r1, [sp, #4]
 801c372:	f8bd 5044 	ldrh.w	r5, [sp, #68]	@ 0x44
 801c376:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801c378:	9406      	str	r4, [sp, #24]
 801c37a:	f8bd 404a 	ldrh.w	r4, [sp, #74]	@ 0x4a
 801c37e:	9308      	str	r3, [sp, #32]
 801c380:	9204      	str	r2, [sp, #16]
 801c382:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801c386:	463a      	mov	r2, r7
 801c388:	4641      	mov	r1, r8
 801c38a:	f8cd c01c 	str.w	ip, [sp, #28]
 801c38e:	9605      	str	r6, [sp, #20]
 801c390:	9503      	str	r5, [sp, #12]
 801c392:	9400      	str	r4, [sp, #0]
 801c394:	f7f8 ff8e 	bl	80152b4 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 801c398:	b015      	add	sp, #84	@ 0x54
 801c39a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c39e:	4608      	mov	r0, r1
 801c3a0:	4798      	blx	r3
 801c3a2:	4603      	mov	r3, r0
 801c3a4:	e7d5      	b.n	801c352 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1be>
 801c3a6:	4b08      	ldr	r3, [pc, #32]	@ (801c3c8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 801c3a8:	6818      	ldr	r0, [r3, #0]
 801c3aa:	6802      	ldr	r2, [r0, #0]
 801c3ac:	e737      	b.n	801c21e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 801c3ae:	4b0b      	ldr	r3, [pc, #44]	@ (801c3dc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 801c3b0:	4a0b      	ldr	r2, [pc, #44]	@ (801c3e0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 801c3b2:	217c      	movs	r1, #124	@ 0x7c
 801c3b4:	480b      	ldr	r0, [pc, #44]	@ (801c3e4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x250>)
 801c3b6:	f008 fcbd 	bl	8024d34 <__assert_func>
 801c3ba:	4b0b      	ldr	r3, [pc, #44]	@ (801c3e8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x254>)
 801c3bc:	4a0b      	ldr	r2, [pc, #44]	@ (801c3ec <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 801c3be:	f640 3142 	movw	r1, #2882	@ 0xb42
 801c3c2:	480b      	ldr	r0, [pc, #44]	@ (801c3f0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 801c3c4:	f008 fcb6 	bl	8024d34 <__assert_func>
 801c3c8:	2004bf98 	.word	0x2004bf98
 801c3cc:	08001829 	.word	0x08001829
 801c3d0:	0800e31d 	.word	0x0800e31d
 801c3d4:	2004bf92 	.word	0x2004bf92
 801c3d8:	2004c150 	.word	0x2004c150
 801c3dc:	08027884 	.word	0x08027884
 801c3e0:	08028130 	.word	0x08028130
 801c3e4:	080278ac 	.word	0x080278ac
 801c3e8:	0802798c 	.word	0x0802798c
 801c3ec:	08028650 	.word	0x08028650
 801c3f0:	08027928 	.word	0x08027928

0801c3f4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 801c3f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c3f8:	4615      	mov	r5, r2
 801c3fa:	7812      	ldrb	r2, [r2, #0]
 801c3fc:	b08b      	sub	sp, #44	@ 0x2c
 801c3fe:	2a01      	cmp	r2, #1
 801c400:	461f      	mov	r7, r3
 801c402:	f89d 6054 	ldrb.w	r6, [sp, #84]	@ 0x54
 801c406:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801c408:	f040 8213 	bne.w	801c832 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x43e>
 801c40c:	6838      	ldr	r0, [r7, #0]
 801c40e:	468a      	mov	sl, r1
 801c410:	6879      	ldr	r1, [r7, #4]
 801c412:	aa06      	add	r2, sp, #24
 801c414:	c203      	stmia	r2!, {r0, r1}
 801c416:	6818      	ldr	r0, [r3, #0]
 801c418:	6859      	ldr	r1, [r3, #4]
 801c41a:	aa08      	add	r2, sp, #32
 801c41c:	c203      	stmia	r2!, {r0, r1}
 801c41e:	a806      	add	r0, sp, #24
 801c420:	f7f2 ffde 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c424:	4639      	mov	r1, r7
 801c426:	a808      	add	r0, sp, #32
 801c428:	f7f3 f802 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c42c:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c430:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801c434:	f003 0201 	and.w	r2, r3, #1
 801c438:	4614      	mov	r4, r2
 801c43a:	9202      	str	r2, [sp, #8]
 801c43c:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	@ 0x22
 801c440:	4423      	add	r3, r4
 801c442:	fb02 1303 	mla	r3, r2, r3, r1
 801c446:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 801c44a:	f8bd 7018 	ldrh.w	r7, [sp, #24]
 801c44e:	4402      	add	r2, r0
 801c450:	48a9      	ldr	r0, [pc, #676]	@ (801c6f8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x304>)
 801c452:	440f      	add	r7, r1
 801c454:	6800      	ldr	r0, [r0, #0]
 801c456:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801c45a:	f8ad 7020 	strh.w	r7, [sp, #32]
 801c45e:	f8ad 2022 	strh.w	r2, [sp, #34]	@ 0x22
 801c462:	eb0a 0a63 	add.w	sl, sl, r3, asr #1
 801c466:	f001 0301 	and.w	r3, r1, #1
 801c46a:	6802      	ldr	r2, [r0, #0]
 801c46c:	9301      	str	r3, [sp, #4]
 801c46e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801c472:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 801c474:	9300      	str	r3, [sp, #0]
 801c476:	f9bd 4026 	ldrsh.w	r4, [sp, #38]	@ 0x26
 801c47a:	4790      	blx	r2
 801c47c:	4a9f      	ldr	r2, [pc, #636]	@ (801c6fc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 801c47e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 801c482:	8811      	ldrh	r1, [r2, #0]
 801c484:	f9bd 7020 	ldrsh.w	r7, [sp, #32]
 801c488:	2eff      	cmp	r6, #255	@ 0xff
 801c48a:	fb01 7303 	mla	r3, r1, r3, r7
 801c48e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801c492:	f105 0204 	add.w	r2, r5, #4
 801c496:	4418      	add	r0, r3
 801c498:	f000 8132 	beq.w	801c700 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 801c49c:	fb04 f401 	mul.w	r4, r4, r1
 801c4a0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801c4a4:	1901      	adds	r1, r0, r4
 801c4a6:	4288      	cmp	r0, r1
 801c4a8:	9104      	str	r1, [sp, #16]
 801c4aa:	f080 80aa 	bcs.w	801c602 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 801c4ae:	9b00      	ldr	r3, [sp, #0]
 801c4b0:	f1c6 07ff 	rsb	r7, r6, #255	@ 0xff
 801c4b4:	3b01      	subs	r3, #1
 801c4b6:	b2bf      	uxth	r7, r7
 801c4b8:	b2b6      	uxth	r6, r6
 801c4ba:	9305      	str	r3, [sp, #20]
 801c4bc:	9b01      	ldr	r3, [sp, #4]
 801c4be:	2b00      	cmp	r3, #0
 801c4c0:	f040 80e8 	bne.w	801c694 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2a0>
 801c4c4:	46d1      	mov	r9, sl
 801c4c6:	f8dd 8000 	ldr.w	r8, [sp]
 801c4ca:	f1b8 0f01 	cmp.w	r8, #1
 801c4ce:	f340 8082 	ble.w	801c5d6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e2>
 801c4d2:	f1a8 0302 	sub.w	r3, r8, #2
 801c4d6:	ea4f 0853 	mov.w	r8, r3, lsr #1
 801c4da:	9303      	str	r3, [sp, #12]
 801c4dc:	f100 0e0c 	add.w	lr, r0, #12
 801c4e0:	eb08 0348 	add.w	r3, r8, r8, lsl #1
 801c4e4:	eb0e 0e43 	add.w	lr, lr, r3, lsl #1
 801c4e8:	1d84      	adds	r4, r0, #6
 801c4ea:	f109 3cff 	add.w	ip, r9, #4294967295
 801c4ee:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
 801c4f2:	f814 5c06 	ldrb.w	r5, [r4, #-6]
 801c4f6:	091b      	lsrs	r3, r3, #4
 801c4f8:	fb15 f507 	smulbb	r5, r5, r7
 801c4fc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801c500:	5cd1      	ldrb	r1, [r2, r3]
 801c502:	4413      	add	r3, r2
 801c504:	fb01 5506 	mla	r5, r1, r6, r5
 801c508:	b2ad      	uxth	r5, r5
 801c50a:	f814 1c05 	ldrb.w	r1, [r4, #-5]
 801c50e:	f105 0b01 	add.w	fp, r5, #1
 801c512:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801c516:	122d      	asrs	r5, r5, #8
 801c518:	fb11 fb07 	smulbb	fp, r1, r7
 801c51c:	f804 5c06 	strb.w	r5, [r4, #-6]
 801c520:	7859      	ldrb	r1, [r3, #1]
 801c522:	f814 5c04 	ldrb.w	r5, [r4, #-4]
 801c526:	fb01 b106 	mla	r1, r1, r6, fp
 801c52a:	b289      	uxth	r1, r1
 801c52c:	f101 0b01 	add.w	fp, r1, #1
 801c530:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 801c534:	1209      	asrs	r1, r1, #8
 801c536:	fb15 f507 	smulbb	r5, r5, r7
 801c53a:	f804 1c05 	strb.w	r1, [r4, #-5]
 801c53e:	789b      	ldrb	r3, [r3, #2]
 801c540:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801c544:	fb03 5306 	mla	r3, r3, r6, r5
 801c548:	b29b      	uxth	r3, r3
 801c54a:	1c5d      	adds	r5, r3, #1
 801c54c:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 801c550:	121b      	asrs	r3, r3, #8
 801c552:	f804 3c04 	strb.w	r3, [r4, #-4]
 801c556:	f89c 3000 	ldrb.w	r3, [ip]
 801c55a:	fb11 f107 	smulbb	r1, r1, r7
 801c55e:	f003 030f 	and.w	r3, r3, #15
 801c562:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801c566:	5cd5      	ldrb	r5, [r2, r3]
 801c568:	4413      	add	r3, r2
 801c56a:	fb05 1106 	mla	r1, r5, r6, r1
 801c56e:	b28d      	uxth	r5, r1
 801c570:	f105 0b01 	add.w	fp, r5, #1
 801c574:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801c578:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801c57c:	122d      	asrs	r5, r5, #8
 801c57e:	fb11 fb07 	smulbb	fp, r1, r7
 801c582:	f804 5c03 	strb.w	r5, [r4, #-3]
 801c586:	7859      	ldrb	r1, [r3, #1]
 801c588:	f814 5c01 	ldrb.w	r5, [r4, #-1]
 801c58c:	fb01 b106 	mla	r1, r1, r6, fp
 801c590:	b289      	uxth	r1, r1
 801c592:	f101 0b01 	add.w	fp, r1, #1
 801c596:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 801c59a:	1209      	asrs	r1, r1, #8
 801c59c:	fb15 f507 	smulbb	r5, r5, r7
 801c5a0:	f804 1c02 	strb.w	r1, [r4, #-2]
 801c5a4:	789b      	ldrb	r3, [r3, #2]
 801c5a6:	3406      	adds	r4, #6
 801c5a8:	fb03 5306 	mla	r3, r3, r6, r5
 801c5ac:	b29b      	uxth	r3, r3
 801c5ae:	1c59      	adds	r1, r3, #1
 801c5b0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801c5b4:	121b      	asrs	r3, r3, #8
 801c5b6:	f804 3c07 	strb.w	r3, [r4, #-7]
 801c5ba:	45a6      	cmp	lr, r4
 801c5bc:	d197      	bne.n	801c4ee <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xfa>
 801c5be:	f108 0301 	add.w	r3, r8, #1
 801c5c2:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 801c5c6:	4499      	add	r9, r3
 801c5c8:	9b03      	ldr	r3, [sp, #12]
 801c5ca:	ebc8 78c8 	rsb	r8, r8, r8, lsl #31
 801c5ce:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c5d2:	eb03 0848 	add.w	r8, r3, r8, lsl #1
 801c5d6:	f1b8 0f01 	cmp.w	r8, #1
 801c5da:	d01a      	beq.n	801c612 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x21e>
 801c5dc:	4b47      	ldr	r3, [pc, #284]	@ (801c6fc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 801c5de:	9c00      	ldr	r4, [sp, #0]
 801c5e0:	8819      	ldrh	r1, [r3, #0]
 801c5e2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c5e6:	1b09      	subs	r1, r1, r4
 801c5e8:	9c02      	ldr	r4, [sp, #8]
 801c5ea:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801c5ee:	4423      	add	r3, r4
 801c5f0:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801c5f4:	eb0a 0a63 	add.w	sl, sl, r3, asr #1
 801c5f8:	9b04      	ldr	r3, [sp, #16]
 801c5fa:	4408      	add	r0, r1
 801c5fc:	4283      	cmp	r3, r0
 801c5fe:	f63f af5d 	bhi.w	801c4bc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xc8>
 801c602:	4b3d      	ldr	r3, [pc, #244]	@ (801c6f8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x304>)
 801c604:	6818      	ldr	r0, [r3, #0]
 801c606:	6803      	ldr	r3, [r0, #0]
 801c608:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c60a:	4798      	blx	r3
 801c60c:	b00b      	add	sp, #44	@ 0x2c
 801c60e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c612:	f899 3000 	ldrb.w	r3, [r9]
 801c616:	7801      	ldrb	r1, [r0, #0]
 801c618:	091b      	lsrs	r3, r3, #4
 801c61a:	fb11 f407 	smulbb	r4, r1, r7
 801c61e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801c622:	5cd1      	ldrb	r1, [r2, r3]
 801c624:	4413      	add	r3, r2
 801c626:	fb01 4106 	mla	r1, r1, r6, r4
 801c62a:	b289      	uxth	r1, r1
 801c62c:	7844      	ldrb	r4, [r0, #1]
 801c62e:	1c4d      	adds	r5, r1, #1
 801c630:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 801c634:	1209      	asrs	r1, r1, #8
 801c636:	fb14 f507 	smulbb	r5, r4, r7
 801c63a:	7001      	strb	r1, [r0, #0]
 801c63c:	785c      	ldrb	r4, [r3, #1]
 801c63e:	7881      	ldrb	r1, [r0, #2]
 801c640:	fb04 5406 	mla	r4, r4, r6, r5
 801c644:	b2a4      	uxth	r4, r4
 801c646:	1c65      	adds	r5, r4, #1
 801c648:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 801c64c:	1224      	asrs	r4, r4, #8
 801c64e:	fb11 f507 	smulbb	r5, r1, r7
 801c652:	7044      	strb	r4, [r0, #1]
 801c654:	7899      	ldrb	r1, [r3, #2]
 801c656:	4b29      	ldr	r3, [pc, #164]	@ (801c6fc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 801c658:	fb01 5106 	mla	r1, r1, r6, r5
 801c65c:	b289      	uxth	r1, r1
 801c65e:	1c4c      	adds	r4, r1, #1
 801c660:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 801c664:	881b      	ldrh	r3, [r3, #0]
 801c666:	9c00      	ldr	r4, [sp, #0]
 801c668:	1209      	asrs	r1, r1, #8
 801c66a:	1b1b      	subs	r3, r3, r4
 801c66c:	7081      	strb	r1, [r0, #2]
 801c66e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801c672:	3303      	adds	r3, #3
 801c674:	f9bd 101c 	ldrsh.w	r1, [sp, #28]
 801c678:	9c02      	ldr	r4, [sp, #8]
 801c67a:	4418      	add	r0, r3
 801c67c:	9b04      	ldr	r3, [sp, #16]
 801c67e:	4421      	add	r1, r4
 801c680:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 801c684:	4283      	cmp	r3, r0
 801c686:	eb0a 0a61 	add.w	sl, sl, r1, asr #1
 801c68a:	d9ba      	bls.n	801c602 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 801c68c:	9b01      	ldr	r3, [sp, #4]
 801c68e:	2b00      	cmp	r3, #0
 801c690:	f43f af18 	beq.w	801c4c4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xd0>
 801c694:	f89a 3000 	ldrb.w	r3, [sl]
 801c698:	7804      	ldrb	r4, [r0, #0]
 801c69a:	f003 030f 	and.w	r3, r3, #15
 801c69e:	fb14 f107 	smulbb	r1, r4, r7
 801c6a2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801c6a6:	5cd4      	ldrb	r4, [r2, r3]
 801c6a8:	4413      	add	r3, r2
 801c6aa:	fb04 1406 	mla	r4, r4, r6, r1
 801c6ae:	b2a4      	uxth	r4, r4
 801c6b0:	7841      	ldrb	r1, [r0, #1]
 801c6b2:	1c65      	adds	r5, r4, #1
 801c6b4:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 801c6b8:	1224      	asrs	r4, r4, #8
 801c6ba:	fb11 fc07 	smulbb	ip, r1, r7
 801c6be:	7004      	strb	r4, [r0, #0]
 801c6c0:	7859      	ldrb	r1, [r3, #1]
 801c6c2:	7885      	ldrb	r5, [r0, #2]
 801c6c4:	fb01 c106 	mla	r1, r1, r6, ip
 801c6c8:	b289      	uxth	r1, r1
 801c6ca:	1c4c      	adds	r4, r1, #1
 801c6cc:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 801c6d0:	1209      	asrs	r1, r1, #8
 801c6d2:	fb15 f407 	smulbb	r4, r5, r7
 801c6d6:	7041      	strb	r1, [r0, #1]
 801c6d8:	789b      	ldrb	r3, [r3, #2]
 801c6da:	f10a 0901 	add.w	r9, sl, #1
 801c6de:	fb03 4306 	mla	r3, r3, r6, r4
 801c6e2:	b29b      	uxth	r3, r3
 801c6e4:	1c59      	adds	r1, r3, #1
 801c6e6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801c6ea:	121b      	asrs	r3, r3, #8
 801c6ec:	7083      	strb	r3, [r0, #2]
 801c6ee:	f8dd 8014 	ldr.w	r8, [sp, #20]
 801c6f2:	3003      	adds	r0, #3
 801c6f4:	e6e9      	b.n	801c4ca <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xd6>
 801c6f6:	bf00      	nop
 801c6f8:	2004bf98 	.word	0x2004bf98
 801c6fc:	2004bf92 	.word	0x2004bf92
 801c700:	fb04 f101 	mul.w	r1, r4, r1
 801c704:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801c708:	eb00 0e01 	add.w	lr, r0, r1
 801c70c:	4570      	cmp	r0, lr
 801c70e:	f4bf af78 	bcs.w	801c602 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 801c712:	9b00      	ldr	r3, [sp, #0]
 801c714:	4698      	mov	r8, r3
 801c716:	f103 39ff 	add.w	r9, r3, #4294967295
 801c71a:	9b01      	ldr	r3, [sp, #4]
 801c71c:	2b00      	cmp	r3, #0
 801c71e:	d072      	beq.n	801c806 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x412>
 801c720:	464e      	mov	r6, r9
 801c722:	f89a 3000 	ldrb.w	r3, [sl]
 801c726:	f10a 0c01 	add.w	ip, sl, #1
 801c72a:	f003 030f 	and.w	r3, r3, #15
 801c72e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801c732:	5cd1      	ldrb	r1, [r2, r3]
 801c734:	4413      	add	r3, r2
 801c736:	7001      	strb	r1, [r0, #0]
 801c738:	7859      	ldrb	r1, [r3, #1]
 801c73a:	3003      	adds	r0, #3
 801c73c:	f800 1c02 	strb.w	r1, [r0, #-2]
 801c740:	789b      	ldrb	r3, [r3, #2]
 801c742:	f800 3c01 	strb.w	r3, [r0, #-1]
 801c746:	2e01      	cmp	r6, #1
 801c748:	dd39      	ble.n	801c7be <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3ca>
 801c74a:	3e02      	subs	r6, #2
 801c74c:	0877      	lsrs	r7, r6, #1
 801c74e:	eb07 0347 	add.w	r3, r7, r7, lsl #1
 801c752:	f100 050c 	add.w	r5, r0, #12
 801c756:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801c75a:	1d81      	adds	r1, r0, #6
 801c75c:	f10c 34ff 	add.w	r4, ip, #4294967295
 801c760:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 801c764:	3106      	adds	r1, #6
 801c766:	091b      	lsrs	r3, r3, #4
 801c768:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801c76c:	f812 b003 	ldrb.w	fp, [r2, r3]
 801c770:	4413      	add	r3, r2
 801c772:	f801 bc0c 	strb.w	fp, [r1, #-12]
 801c776:	f893 b001 	ldrb.w	fp, [r3, #1]
 801c77a:	f801 bc0b 	strb.w	fp, [r1, #-11]
 801c77e:	789b      	ldrb	r3, [r3, #2]
 801c780:	f801 3c0a 	strb.w	r3, [r1, #-10]
 801c784:	7823      	ldrb	r3, [r4, #0]
 801c786:	f003 030f 	and.w	r3, r3, #15
 801c78a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801c78e:	f812 b003 	ldrb.w	fp, [r2, r3]
 801c792:	4413      	add	r3, r2
 801c794:	f801 bc09 	strb.w	fp, [r1, #-9]
 801c798:	f893 b001 	ldrb.w	fp, [r3, #1]
 801c79c:	f801 bc08 	strb.w	fp, [r1, #-8]
 801c7a0:	789b      	ldrb	r3, [r3, #2]
 801c7a2:	f801 3c07 	strb.w	r3, [r1, #-7]
 801c7a6:	428d      	cmp	r5, r1
 801c7a8:	d1da      	bne.n	801c760 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x36c>
 801c7aa:	1c7b      	adds	r3, r7, #1
 801c7ac:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 801c7b0:	ebc7 77c7 	rsb	r7, r7, r7, lsl #31
 801c7b4:	449c      	add	ip, r3
 801c7b6:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c7ba:	eb06 0647 	add.w	r6, r6, r7, lsl #1
 801c7be:	2e01      	cmp	r6, #1
 801c7c0:	d124      	bne.n	801c80c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x418>
 801c7c2:	f89c 3000 	ldrb.w	r3, [ip]
 801c7c6:	9c02      	ldr	r4, [sp, #8]
 801c7c8:	091b      	lsrs	r3, r3, #4
 801c7ca:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801c7ce:	5cd1      	ldrb	r1, [r2, r3]
 801c7d0:	4413      	add	r3, r2
 801c7d2:	7001      	strb	r1, [r0, #0]
 801c7d4:	7859      	ldrb	r1, [r3, #1]
 801c7d6:	7041      	strb	r1, [r0, #1]
 801c7d8:	7899      	ldrb	r1, [r3, #2]
 801c7da:	4b19      	ldr	r3, [pc, #100]	@ (801c840 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x44c>)
 801c7dc:	7081      	strb	r1, [r0, #2]
 801c7de:	881b      	ldrh	r3, [r3, #0]
 801c7e0:	f9bd 101c 	ldrsh.w	r1, [sp, #28]
 801c7e4:	eba3 0308 	sub.w	r3, r3, r8
 801c7e8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801c7ec:	3303      	adds	r3, #3
 801c7ee:	4421      	add	r1, r4
 801c7f0:	4418      	add	r0, r3
 801c7f2:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 801c7f6:	4586      	cmp	lr, r0
 801c7f8:	eb0a 0a61 	add.w	sl, sl, r1, asr #1
 801c7fc:	f67f af01 	bls.w	801c602 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 801c800:	9b01      	ldr	r3, [sp, #4]
 801c802:	2b00      	cmp	r3, #0
 801c804:	d18c      	bne.n	801c720 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x32c>
 801c806:	46d4      	mov	ip, sl
 801c808:	4646      	mov	r6, r8
 801c80a:	e79c      	b.n	801c746 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x352>
 801c80c:	4b0c      	ldr	r3, [pc, #48]	@ (801c840 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x44c>)
 801c80e:	9c02      	ldr	r4, [sp, #8]
 801c810:	8819      	ldrh	r1, [r3, #0]
 801c812:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c816:	eba1 0108 	sub.w	r1, r1, r8
 801c81a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801c81e:	4423      	add	r3, r4
 801c820:	4408      	add	r0, r1
 801c822:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801c826:	4586      	cmp	lr, r0
 801c828:	eb0a 0a63 	add.w	sl, sl, r3, asr #1
 801c82c:	f63f af75 	bhi.w	801c71a <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x326>
 801c830:	e6e7      	b.n	801c602 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 801c832:	4b04      	ldr	r3, [pc, #16]	@ (801c844 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x450>)
 801c834:	4a04      	ldr	r2, [pc, #16]	@ (801c848 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x454>)
 801c836:	f640 318b 	movw	r1, #2955	@ 0xb8b
 801c83a:	4804      	ldr	r0, [pc, #16]	@ (801c84c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x458>)
 801c83c:	f008 fa7a 	bl	8024d34 <__assert_func>
 801c840:	2004bf92 	.word	0x2004bf92
 801c844:	08027a2c 	.word	0x08027a2c
 801c848:	08028990 	.word	0x08028990
 801c84c:	08027928 	.word	0x08027928

0801c850 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 801c850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c854:	b08d      	sub	sp, #52	@ 0x34
 801c856:	7814      	ldrb	r4, [r2, #0]
 801c858:	461d      	mov	r5, r3
 801c85a:	f89d 305c 	ldrb.w	r3, [sp, #92]	@ 0x5c
 801c85e:	2c01      	cmp	r4, #1
 801c860:	9204      	str	r2, [sp, #16]
 801c862:	9302      	str	r3, [sp, #8]
 801c864:	f040 8133 	bne.w	801cace <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x27e>
 801c868:	b913      	cbnz	r3, 801c870 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20>
 801c86a:	b00d      	add	sp, #52	@ 0x34
 801c86c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c870:	6828      	ldr	r0, [r5, #0]
 801c872:	4689      	mov	r9, r1
 801c874:	6869      	ldr	r1, [r5, #4]
 801c876:	ab08      	add	r3, sp, #32
 801c878:	c303      	stmia	r3!, {r0, r1}
 801c87a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c87c:	6818      	ldr	r0, [r3, #0]
 801c87e:	6859      	ldr	r1, [r3, #4]
 801c880:	ab0a      	add	r3, sp, #40	@ 0x28
 801c882:	c303      	stmia	r3!, {r0, r1}
 801c884:	a808      	add	r0, sp, #32
 801c886:	f7f2 fdab 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c88a:	4629      	mov	r1, r5
 801c88c:	a80a      	add	r0, sp, #40	@ 0x28
 801c88e:	f7f2 fdcf 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c892:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801c896:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 801c89a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801c89e:	bfdd      	ittte	le
 801c8a0:	f44f 6480 	movle.w	r4, #1024	@ 0x400
 801c8a4:	b29a      	uxthle	r2, r3
 801c8a6:	fb94 f4f2 	sdivle	r4, r4, r2
 801c8aa:	b29a      	uxthgt	r2, r3
 801c8ac:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 801c8b0:	fb93 f0f4 	sdiv	r0, r3, r4
 801c8b4:	b286      	uxth	r6, r0
 801c8b6:	fb04 3816 	mls	r8, r4, r6, r3
 801c8ba:	fb18 1802 	smlabb	r8, r8, r2, r1
 801c8be:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	@ 0x26
 801c8c2:	fa1f f888 	uxth.w	r8, r8
 801c8c6:	4422      	add	r2, r4
 801c8c8:	3a01      	subs	r2, #1
 801c8ca:	fb92 f4f4 	sdiv	r4, r2, r4
 801c8ce:	2e00      	cmp	r6, #0
 801c8d0:	f040 80f7 	bne.w	801cac2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x272>
 801c8d4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 801c8d8:	f8bd 0020 	ldrh.w	r0, [sp, #32]
 801c8dc:	4413      	add	r3, r2
 801c8de:	4a7f      	ldr	r2, [pc, #508]	@ (801cadc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 801c8e0:	4401      	add	r1, r0
 801c8e2:	6810      	ldr	r0, [r2, #0]
 801c8e4:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801c8e8:	f8ad 1028 	strh.w	r1, [sp, #40]	@ 0x28
 801c8ec:	4616      	mov	r6, r2
 801c8ee:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801c8f2:	6803      	ldr	r3, [r0, #0]
 801c8f4:	9207      	str	r2, [sp, #28]
 801c8f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c8f8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801c8fc:	4798      	blx	r3
 801c8fe:	f1b8 0f00 	cmp.w	r8, #0
 801c902:	bf0c      	ite	eq
 801c904:	4633      	moveq	r3, r6
 801c906:	2300      	movne	r3, #0
 801c908:	4975      	ldr	r1, [pc, #468]	@ (801cae0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x290>)
 801c90a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801c90e:	8809      	ldrh	r1, [r1, #0]
 801c910:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 801c914:	fb01 f505 	mul.w	r5, r1, r5
 801c918:	fb01 6202 	mla	r2, r1, r2, r6
 801c91c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c920:	4410      	add	r0, r2
 801c922:	b2a4      	uxth	r4, r4
 801c924:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c928:	1942      	adds	r2, r0, r5
 801c92a:	00a4      	lsls	r4, r4, #2
 801c92c:	1d21      	adds	r1, r4, #4
 801c92e:	4290      	cmp	r0, r2
 801c930:	9200      	str	r2, [sp, #0]
 801c932:	9106      	str	r1, [sp, #24]
 801c934:	fa1f fa83 	uxth.w	sl, r3
 801c938:	d225      	bcs.n	801c986 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x136>
 801c93a:	2500      	movs	r5, #0
 801c93c:	4686      	mov	lr, r0
 801c93e:	4640      	mov	r0, r8
 801c940:	9b02      	ldr	r3, [sp, #8]
 801c942:	9501      	str	r5, [sp, #4]
 801c944:	f1c3 07ff 	rsb	r7, r3, #255	@ 0xff
 801c948:	b2bf      	uxth	r7, r7
 801c94a:	fa1f fc83 	uxth.w	ip, r3
 801c94e:	b985      	cbnz	r5, 801c972 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x122>
 801c950:	f899 2000 	ldrb.w	r2, [r9]
 801c954:	0995      	lsrs	r5, r2, #6
 801c956:	1e6b      	subs	r3, r5, #1
 801c958:	2b02      	cmp	r3, #2
 801c95a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801c95e:	bf88      	it	hi
 801c960:	f899 5001 	ldrbhi.w	r5, [r9, #1]
 801c964:	9201      	str	r2, [sp, #4]
 801c966:	bf9a      	itte	ls
 801c968:	f109 0901 	addls.w	r9, r9, #1
 801c96c:	b2ad      	uxthls	r5, r5
 801c96e:	f109 0902 	addhi.w	r9, r9, #2
 801c972:	b180      	cbz	r0, 801c996 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x146>
 801c974:	4285      	cmp	r5, r0
 801c976:	f080 809e 	bcs.w	801cab6 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x266>
 801c97a:	1b40      	subs	r0, r0, r5
 801c97c:	2500      	movs	r5, #0
 801c97e:	b280      	uxth	r0, r0
 801c980:	9b00      	ldr	r3, [sp, #0]
 801c982:	4573      	cmp	r3, lr
 801c984:	d8e3      	bhi.n	801c94e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xfe>
 801c986:	4b55      	ldr	r3, [pc, #340]	@ (801cadc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 801c988:	6818      	ldr	r0, [r3, #0]
 801c98a:	6803      	ldr	r3, [r0, #0]
 801c98c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c98e:	4798      	blx	r3
 801c990:	b00d      	add	sp, #52	@ 0x34
 801c992:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c996:	2303      	movs	r3, #3
 801c998:	4619      	mov	r1, r3
 801c99a:	9a06      	ldr	r2, [sp, #24]
 801c99c:	9b01      	ldr	r3, [sp, #4]
 801c99e:	4555      	cmp	r5, sl
 801c9a0:	fb11 2403 	smlabb	r4, r1, r3, r2
 801c9a4:	9b04      	ldr	r3, [sp, #16]
 801c9a6:	441c      	add	r4, r3
 801c9a8:	d360      	bcc.n	801ca6c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 801c9aa:	eba5 030a 	sub.w	r3, r5, sl
 801c9ae:	b29b      	uxth	r3, r3
 801c9b0:	9303      	str	r3, [sp, #12]
 801c9b2:	9b02      	ldr	r3, [sp, #8]
 801c9b4:	4656      	mov	r6, sl
 801c9b6:	2bff      	cmp	r3, #255	@ 0xff
 801c9b8:	9005      	str	r0, [sp, #20]
 801c9ba:	d060      	beq.n	801ca7e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x22e>
 801c9bc:	2e00      	cmp	r6, #0
 801c9be:	d03b      	beq.n	801ca38 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e8>
 801c9c0:	3e01      	subs	r6, #1
 801c9c2:	b2b6      	uxth	r6, r6
 801c9c4:	eb06 0346 	add.w	r3, r6, r6, lsl #1
 801c9c8:	f10e 0806 	add.w	r8, lr, #6
 801c9cc:	4498      	add	r8, r3
 801c9ce:	f10e 0103 	add.w	r1, lr, #3
 801c9d2:	f811 2c03 	ldrb.w	r2, [r1, #-3]
 801c9d6:	7823      	ldrb	r3, [r4, #0]
 801c9d8:	fb12 f207 	smulbb	r2, r2, r7
 801c9dc:	fb03 230c 	mla	r3, r3, ip, r2
 801c9e0:	b29b      	uxth	r3, r3
 801c9e2:	f811 2c02 	ldrb.w	r2, [r1, #-2]
 801c9e6:	f103 0b01 	add.w	fp, r3, #1
 801c9ea:	eb0b 2313 	add.w	r3, fp, r3, lsr #8
 801c9ee:	121b      	asrs	r3, r3, #8
 801c9f0:	fb12 fb07 	smulbb	fp, r2, r7
 801c9f4:	f801 3c03 	strb.w	r3, [r1, #-3]
 801c9f8:	7862      	ldrb	r2, [r4, #1]
 801c9fa:	f811 3c01 	ldrb.w	r3, [r1, #-1]
 801c9fe:	fb02 b20c 	mla	r2, r2, ip, fp
 801ca02:	b292      	uxth	r2, r2
 801ca04:	f102 0b01 	add.w	fp, r2, #1
 801ca08:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801ca0c:	1212      	asrs	r2, r2, #8
 801ca0e:	fb13 fb07 	smulbb	fp, r3, r7
 801ca12:	f801 2c02 	strb.w	r2, [r1, #-2]
 801ca16:	78a3      	ldrb	r3, [r4, #2]
 801ca18:	3103      	adds	r1, #3
 801ca1a:	fb03 b30c 	mla	r3, r3, ip, fp
 801ca1e:	b29b      	uxth	r3, r3
 801ca20:	1c5a      	adds	r2, r3, #1
 801ca22:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801ca26:	121b      	asrs	r3, r3, #8
 801ca28:	f801 3c04 	strb.w	r3, [r1, #-4]
 801ca2c:	4541      	cmp	r1, r8
 801ca2e:	d1d0      	bne.n	801c9d2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x182>
 801ca30:	3601      	adds	r6, #1
 801ca32:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801ca36:	44b6      	add	lr, r6
 801ca38:	4555      	cmp	r5, sl
 801ca3a:	d313      	bcc.n	801ca64 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x214>
 801ca3c:	9a07      	ldr	r2, [sp, #28]
 801ca3e:	4b28      	ldr	r3, [pc, #160]	@ (801cae0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x290>)
 801ca40:	f8bd 0024 	ldrh.w	r0, [sp, #36]	@ 0x24
 801ca44:	fa1f fa82 	uxth.w	sl, r2
 801ca48:	881b      	ldrh	r3, [r3, #0]
 801ca4a:	eba0 000a 	sub.w	r0, r0, sl
 801ca4e:	b280      	uxth	r0, r0
 801ca50:	1a9b      	subs	r3, r3, r2
 801ca52:	2800      	cmp	r0, #0
 801ca54:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801ca58:	9d03      	ldr	r5, [sp, #12]
 801ca5a:	bf18      	it	ne
 801ca5c:	f04f 0a00 	movne.w	sl, #0
 801ca60:	449e      	add	lr, r3
 801ca62:	e78d      	b.n	801c980 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x130>
 801ca64:	9d03      	ldr	r5, [sp, #12]
 801ca66:	f8dd a014 	ldr.w	sl, [sp, #20]
 801ca6a:	e789      	b.n	801c980 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x130>
 801ca6c:	ebaa 0305 	sub.w	r3, sl, r5
 801ca70:	b29b      	uxth	r3, r3
 801ca72:	9305      	str	r3, [sp, #20]
 801ca74:	9b02      	ldr	r3, [sp, #8]
 801ca76:	462e      	mov	r6, r5
 801ca78:	2bff      	cmp	r3, #255	@ 0xff
 801ca7a:	9003      	str	r0, [sp, #12]
 801ca7c:	d19e      	bne.n	801c9bc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x16c>
 801ca7e:	2e00      	cmp	r6, #0
 801ca80:	d0da      	beq.n	801ca38 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e8>
 801ca82:	3e01      	subs	r6, #1
 801ca84:	b2b2      	uxth	r2, r6
 801ca86:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801ca8a:	f10e 0606 	add.w	r6, lr, #6
 801ca8e:	441e      	add	r6, r3
 801ca90:	f10e 0303 	add.w	r3, lr, #3
 801ca94:	7821      	ldrb	r1, [r4, #0]
 801ca96:	3303      	adds	r3, #3
 801ca98:	f803 1c06 	strb.w	r1, [r3, #-6]
 801ca9c:	7861      	ldrb	r1, [r4, #1]
 801ca9e:	f803 1c05 	strb.w	r1, [r3, #-5]
 801caa2:	78a1      	ldrb	r1, [r4, #2]
 801caa4:	f803 1c04 	strb.w	r1, [r3, #-4]
 801caa8:	429e      	cmp	r6, r3
 801caaa:	d1f3      	bne.n	801ca94 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x244>
 801caac:	3201      	adds	r2, #1
 801caae:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801cab2:	4496      	add	lr, r2
 801cab4:	e7c0      	b.n	801ca38 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e8>
 801cab6:	1a2d      	subs	r5, r5, r0
 801cab8:	b2ad      	uxth	r5, r5
 801caba:	f8bd a01c 	ldrh.w	sl, [sp, #28]
 801cabe:	2000      	movs	r0, #0
 801cac0:	e75e      	b.n	801c980 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x130>
 801cac2:	9a04      	ldr	r2, [sp, #16]
 801cac4:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 801cac8:	ba12      	rev	r2, r2
 801caca:	4491      	add	r9, r2
 801cacc:	e702      	b.n	801c8d4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x84>
 801cace:	4b05      	ldr	r3, [pc, #20]	@ (801cae4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x294>)
 801cad0:	4a05      	ldr	r2, [pc, #20]	@ (801cae8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>)
 801cad2:	f640 4111 	movw	r1, #3089	@ 0xc11
 801cad6:	4805      	ldr	r0, [pc, #20]	@ (801caec <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x29c>)
 801cad8:	f008 f92c 	bl	8024d34 <__assert_func>
 801cadc:	2004bf98 	.word	0x2004bf98
 801cae0:	2004bf92 	.word	0x2004bf92
 801cae4:	08027a2c 	.word	0x08027a2c
 801cae8:	08028b34 	.word	0x08028b34
 801caec:	08027928 	.word	0x08027928

0801caf0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 801caf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801caf4:	b09b      	sub	sp, #108	@ 0x6c
 801caf6:	7814      	ldrb	r4, [r2, #0]
 801caf8:	461d      	mov	r5, r3
 801cafa:	f89d 3094 	ldrb.w	r3, [sp, #148]	@ 0x94
 801cafe:	2c01      	cmp	r4, #1
 801cb00:	9210      	str	r2, [sp, #64]	@ 0x40
 801cb02:	9112      	str	r1, [sp, #72]	@ 0x48
 801cb04:	930d      	str	r3, [sp, #52]	@ 0x34
 801cb06:	f040 820f 	bne.w	801cf28 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x438>
 801cb0a:	b913      	cbnz	r3, 801cb12 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x22>
 801cb0c:	b01b      	add	sp, #108	@ 0x6c
 801cb0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cb12:	6869      	ldr	r1, [r5, #4]
 801cb14:	4681      	mov	r9, r0
 801cb16:	6828      	ldr	r0, [r5, #0]
 801cb18:	ab16      	add	r3, sp, #88	@ 0x58
 801cb1a:	c303      	stmia	r3!, {r0, r1}
 801cb1c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cb1e:	6818      	ldr	r0, [r3, #0]
 801cb20:	6859      	ldr	r1, [r3, #4]
 801cb22:	ab18      	add	r3, sp, #96	@ 0x60
 801cb24:	c303      	stmia	r3!, {r0, r1}
 801cb26:	a816      	add	r0, sp, #88	@ 0x58
 801cb28:	f7f2 fc5a 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cb2c:	4629      	mov	r1, r5
 801cb2e:	a818      	add	r0, sp, #96	@ 0x60
 801cb30:	f7f2 fc7e 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cb34:	f9bd a05c 	ldrsh.w	sl, [sp, #92]	@ 0x5c
 801cb38:	f5ba 6f80 	cmp.w	sl, #1024	@ 0x400
 801cb3c:	f340 814e 	ble.w	801cddc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2ec>
 801cb40:	fa1f f08a 	uxth.w	r0, sl
 801cb44:	9414      	str	r4, [sp, #80]	@ 0x50
 801cb46:	f9bd 3062 	ldrsh.w	r3, [sp, #98]	@ 0x62
 801cb4a:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 801cb4e:	fb93 f1f4 	sdiv	r1, r3, r4
 801cb52:	4422      	add	r2, r4
 801cb54:	3a01      	subs	r2, #1
 801cb56:	fb92 f2f4 	sdiv	r2, r2, r4
 801cb5a:	b289      	uxth	r1, r1
 801cb5c:	fb04 3411 	mls	r4, r4, r1, r3
 801cb60:	9113      	str	r1, [sp, #76]	@ 0x4c
 801cb62:	f8bd 1060 	ldrh.w	r1, [sp, #96]	@ 0x60
 801cb66:	f8bd 6058 	ldrh.w	r6, [sp, #88]	@ 0x58
 801cb6a:	fb14 1a00 	smlabb	sl, r4, r0, r1
 801cb6e:	f8bd 505a 	ldrh.w	r5, [sp, #90]	@ 0x5a
 801cb72:	48bc      	ldr	r0, [pc, #752]	@ (801ce64 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x374>)
 801cb74:	4431      	add	r1, r6
 801cb76:	442b      	add	r3, r5
 801cb78:	6800      	ldr	r0, [r0, #0]
 801cb7a:	f8ad 1060 	strh.w	r1, [sp, #96]	@ 0x60
 801cb7e:	f8ad 3062 	strh.w	r3, [sp, #98]	@ 0x62
 801cb82:	f9bd 7064 	ldrsh.w	r7, [sp, #100]	@ 0x64
 801cb86:	6803      	ldr	r3, [r0, #0]
 801cb88:	3201      	adds	r2, #1
 801cb8a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801cb8c:	970a      	str	r7, [sp, #40]	@ 0x28
 801cb8e:	b294      	uxth	r4, r2
 801cb90:	f9bd 5066 	ldrsh.w	r5, [sp, #102]	@ 0x66
 801cb94:	4798      	blx	r3
 801cb96:	2200      	movs	r2, #0
 801cb98:	fa1f f68a 	uxth.w	r6, sl
 801cb9c:	2e00      	cmp	r6, #0
 801cb9e:	bf0c      	ite	eq
 801cba0:	463b      	moveq	r3, r7
 801cba2:	2300      	movne	r3, #0
 801cba4:	49b0      	ldr	r1, [pc, #704]	@ (801ce68 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x378>)
 801cba6:	9602      	str	r6, [sp, #8]
 801cba8:	8809      	ldrh	r1, [r1, #0]
 801cbaa:	9211      	str	r2, [sp, #68]	@ 0x44
 801cbac:	f9bd 6060 	ldrsh.w	r6, [sp, #96]	@ 0x60
 801cbb0:	f9bd 2062 	ldrsh.w	r2, [sp, #98]	@ 0x62
 801cbb4:	fb01 f505 	mul.w	r5, r1, r5
 801cbb8:	fb01 6202 	mla	r2, r1, r2, r6
 801cbbc:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801cbbe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801cbc2:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801cbc6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801cbca:	1881      	adds	r1, r0, r2
 801cbcc:	9101      	str	r1, [sp, #4]
 801cbce:	fa1f fe83 	uxth.w	lr, r3
 801cbd2:	4429      	add	r1, r5
 801cbd4:	f109 030a 	add.w	r3, r9, #10
 801cbd8:	9315      	str	r3, [sp, #84]	@ 0x54
 801cbda:	460b      	mov	r3, r1
 801cbdc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801cbde:	464f      	mov	r7, r9
 801cbe0:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 801cbe4:	f8dd 9008 	ldr.w	r9, [sp, #8]
 801cbe8:	f104 0c04 	add.w	ip, r4, #4
 801cbec:	9106      	str	r1, [sp, #24]
 801cbee:	fa1f f882 	uxth.w	r8, r2
 801cbf2:	9a01      	ldr	r2, [sp, #4]
 801cbf4:	4293      	cmp	r3, r2
 801cbf6:	f240 8101 	bls.w	801cdfc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 801cbfa:	2200      	movs	r2, #0
 801cbfc:	2601      	movs	r6, #1
 801cbfe:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801cc00:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801cc02:	920c      	str	r2, [sp, #48]	@ 0x30
 801cc04:	fa10 f481 	uxtah	r4, r0, r1
 801cc08:	00a4      	lsls	r4, r4, #2
 801cc0a:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801cc0c:	3404      	adds	r4, #4
 801cc0e:	4421      	add	r1, r4
 801cc10:	788a      	ldrb	r2, [r1, #2]
 801cc12:	784d      	ldrb	r5, [r1, #1]
 801cc14:	0212      	lsls	r2, r2, #8
 801cc16:	78c9      	ldrb	r1, [r1, #3]
 801cc18:	ea42 4005 	orr.w	r0, r2, r5, lsl #16
 801cc1c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801cc1e:	4308      	orrs	r0, r1
 801cc20:	f8bd 305c 	ldrh.w	r3, [sp, #92]	@ 0x5c
 801cc24:	1829      	adds	r1, r5, r0
 801cc26:	5c28      	ldrb	r0, [r5, r0]
 801cc28:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801cc2a:	fbb9 f3f3 	udiv	r3, r9, r3
 801cc2e:	5d2c      	ldrb	r4, [r5, r4]
 801cc30:	784a      	ldrb	r2, [r1, #1]
 801cc32:	4431      	add	r1, r6
 801cc34:	940e      	str	r4, [sp, #56]	@ 0x38
 801cc36:	9104      	str	r1, [sp, #16]
 801cc38:	f04f 0a00 	mov.w	sl, #0
 801cc3c:	19a1      	adds	r1, r4, r6
 801cc3e:	4634      	mov	r4, r6
 801cc40:	0212      	lsls	r2, r2, #8
 801cc42:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801cc46:	4302      	orrs	r2, r0
 801cc48:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801cc4a:	f8bd 5034 	ldrh.w	r5, [sp, #52]	@ 0x34
 801cc4e:	1ac3      	subs	r3, r0, r3
 801cc50:	b29b      	uxth	r3, r3
 801cc52:	b290      	uxth	r0, r2
 801cc54:	9609      	str	r6, [sp, #36]	@ 0x24
 801cc56:	727a      	strb	r2, [r7, #9]
 801cc58:	9008      	str	r0, [sp, #32]
 801cc5a:	9105      	str	r1, [sp, #20]
 801cc5c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801cc5e:	9603      	str	r6, [sp, #12]
 801cc60:	f1b9 0f00 	cmp.w	r9, #0
 801cc64:	d035      	beq.n	801ccd2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e2>
 801cc66:	45a1      	cmp	r9, r4
 801cc68:	f240 8100 	bls.w	801ce6c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x37c>
 801cc6c:	9b06      	ldr	r3, [sp, #24]
 801cc6e:	9a01      	ldr	r2, [sp, #4]
 801cc70:	eba9 0904 	sub.w	r9, r9, r4
 801cc74:	4293      	cmp	r3, r2
 801cc76:	fa1f f989 	uxth.w	r9, r9
 801cc7a:	f240 80bf 	bls.w	801cdfc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 801cc7e:	9804      	ldr	r0, [sp, #16]
 801cc80:	9c03      	ldr	r4, [sp, #12]
 801cc82:	7842      	ldrb	r2, [r0, #1]
 801cc84:	f1c4 0107 	rsb	r1, r4, #7
 801cc88:	7803      	ldrb	r3, [r0, #0]
 801cc8a:	408a      	lsls	r2, r1
 801cc8c:	0052      	lsls	r2, r2, #1
 801cc8e:	4123      	asrs	r3, r4
 801cc90:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801cc94:	1c61      	adds	r1, r4, #1
 801cc96:	b2db      	uxtb	r3, r3
 801cc98:	4313      	orrs	r3, r2
 801cc9a:	b2ca      	uxtb	r2, r1
 801cc9c:	4611      	mov	r1, r2
 801cc9e:	2908      	cmp	r1, #8
 801cca0:	9203      	str	r2, [sp, #12]
 801cca2:	b29a      	uxth	r2, r3
 801cca4:	f000 810b 	beq.w	801cebe <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3ce>
 801cca8:	3001      	adds	r0, #1
 801ccaa:	9004      	str	r0, [sp, #16]
 801ccac:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801ccae:	4291      	cmp	r1, r2
 801ccb0:	f0c0 80e7 	bcc.w	801ce82 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x392>
 801ccb4:	2401      	movs	r4, #1
 801ccb6:	b2db      	uxtb	r3, r3
 801ccb8:	727b      	strb	r3, [r7, #9]
 801ccba:	9905      	ldr	r1, [sp, #20]
 801ccbc:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801ccc0:	f0c0 8103 	bcc.w	801ceca <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3da>
 801ccc4:	e9cd 2408 	strd	r2, r4, [sp, #32]
 801ccc8:	f04f 0a00 	mov.w	sl, #0
 801cccc:	f1b9 0f00 	cmp.w	r9, #0
 801ccd0:	d1c9      	bne.n	801cc66 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x176>
 801ccd2:	4574      	cmp	r4, lr
 801ccd4:	f0c0 809a 	bcc.w	801ce0c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x31c>
 801ccd8:	eba4 030e 	sub.w	r3, r4, lr
 801ccdc:	b29b      	uxth	r3, r3
 801ccde:	9307      	str	r3, [sp, #28]
 801cce0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801cce2:	f8cd e008 	str.w	lr, [sp, #8]
 801cce6:	2bff      	cmp	r3, #255	@ 0xff
 801cce8:	f8cd 902c 	str.w	r9, [sp, #44]	@ 0x2c
 801ccec:	9b02      	ldr	r3, [sp, #8]
 801ccee:	f000 8099 	beq.w	801ce24 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x334>
 801ccf2:	2b00      	cmp	r3, #0
 801ccf4:	d048      	beq.n	801cd88 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>
 801ccf6:	eb0a 0603 	add.w	r6, sl, r3
 801ccfa:	9b01      	ldr	r3, [sp, #4]
 801ccfc:	b2b6      	uxth	r6, r6
 801ccfe:	1cd8      	adds	r0, r3, #3
 801cd00:	f810 1c03 	ldrb.w	r1, [r0, #-3]
 801cd04:	eb07 030a 	add.w	r3, r7, sl
 801cd08:	7a5b      	ldrb	r3, [r3, #9]
 801cd0a:	fb11 f208 	smulbb	r2, r1, r8
 801cd0e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801cd12:	f81c 1003 	ldrb.w	r1, [ip, r3]
 801cd16:	4463      	add	r3, ip
 801cd18:	fb01 2105 	mla	r1, r1, r5, r2
 801cd1c:	b289      	uxth	r1, r1
 801cd1e:	f810 2c02 	ldrb.w	r2, [r0, #-2]
 801cd22:	f101 0b01 	add.w	fp, r1, #1
 801cd26:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 801cd2a:	1209      	asrs	r1, r1, #8
 801cd2c:	fb12 fb08 	smulbb	fp, r2, r8
 801cd30:	f800 1c03 	strb.w	r1, [r0, #-3]
 801cd34:	785a      	ldrb	r2, [r3, #1]
 801cd36:	f810 1c01 	ldrb.w	r1, [r0, #-1]
 801cd3a:	fb02 b205 	mla	r2, r2, r5, fp
 801cd3e:	b292      	uxth	r2, r2
 801cd40:	f102 0b01 	add.w	fp, r2, #1
 801cd44:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801cd48:	1212      	asrs	r2, r2, #8
 801cd4a:	fb11 f108 	smulbb	r1, r1, r8
 801cd4e:	f800 2c02 	strb.w	r2, [r0, #-2]
 801cd52:	789b      	ldrb	r3, [r3, #2]
 801cd54:	f10a 0a01 	add.w	sl, sl, #1
 801cd58:	fb03 1305 	mla	r3, r3, r5, r1
 801cd5c:	b29b      	uxth	r3, r3
 801cd5e:	1c5a      	adds	r2, r3, #1
 801cd60:	fa1f fa8a 	uxth.w	sl, sl
 801cd64:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801cd68:	121b      	asrs	r3, r3, #8
 801cd6a:	45b2      	cmp	sl, r6
 801cd6c:	f800 3c01 	strb.w	r3, [r0, #-1]
 801cd70:	f100 0003 	add.w	r0, r0, #3
 801cd74:	d1c4      	bne.n	801cd00 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x210>
 801cd76:	9b02      	ldr	r3, [sp, #8]
 801cd78:	9a01      	ldr	r2, [sp, #4]
 801cd7a:	3b01      	subs	r3, #1
 801cd7c:	b29b      	uxth	r3, r3
 801cd7e:	3301      	adds	r3, #1
 801cd80:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801cd84:	441a      	add	r2, r3
 801cd86:	9201      	str	r2, [sp, #4]
 801cd88:	4574      	cmp	r4, lr
 801cd8a:	d330      	bcc.n	801cdee <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 801cd8c:	4b36      	ldr	r3, [pc, #216]	@ (801ce68 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x378>)
 801cd8e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801cd90:	881b      	ldrh	r3, [r3, #0]
 801cd92:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801cd94:	1a5b      	subs	r3, r3, r1
 801cd96:	9901      	ldr	r1, [sp, #4]
 801cd98:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801cd9c:	4419      	add	r1, r3
 801cd9e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801cda0:	3201      	adds	r2, #1
 801cda2:	429a      	cmp	r2, r3
 801cda4:	920c      	str	r2, [sp, #48]	@ 0x30
 801cda6:	9101      	str	r1, [sp, #4]
 801cda8:	f000 80ab 	beq.w	801cf02 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x412>
 801cdac:	f8bd e028 	ldrh.w	lr, [sp, #40]	@ 0x28
 801cdb0:	f8bd 905c 	ldrh.w	r9, [sp, #92]	@ 0x5c
 801cdb4:	9c07      	ldr	r4, [sp, #28]
 801cdb6:	eba9 090e 	sub.w	r9, r9, lr
 801cdba:	fa1f f989 	uxth.w	r9, r9
 801cdbe:	f1b9 0f00 	cmp.w	r9, #0
 801cdc2:	bf14      	ite	ne
 801cdc4:	f04f 0e00 	movne.w	lr, #0
 801cdc8:	f04f 0900 	moveq.w	r9, #0
 801cdcc:	9b06      	ldr	r3, [sp, #24]
 801cdce:	9a01      	ldr	r2, [sp, #4]
 801cdd0:	4293      	cmp	r3, r2
 801cdd2:	d913      	bls.n	801cdfc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 801cdd4:	2c00      	cmp	r4, #0
 801cdd6:	f47f af43 	bne.w	801cc60 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x170>
 801cdda:	e750      	b.n	801cc7e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x18e>
 801cddc:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 801cde0:	fa1f f08a 	uxth.w	r0, sl
 801cde4:	fb94 f4f0 	sdiv	r4, r4, r0
 801cde8:	b2a3      	uxth	r3, r4
 801cdea:	9314      	str	r3, [sp, #80]	@ 0x50
 801cdec:	e6ab      	b.n	801cb46 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x56>
 801cdee:	9b06      	ldr	r3, [sp, #24]
 801cdf0:	9a01      	ldr	r2, [sp, #4]
 801cdf2:	9c07      	ldr	r4, [sp, #28]
 801cdf4:	4293      	cmp	r3, r2
 801cdf6:	f8dd e02c 	ldr.w	lr, [sp, #44]	@ 0x2c
 801cdfa:	d8eb      	bhi.n	801cdd4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e4>
 801cdfc:	4b19      	ldr	r3, [pc, #100]	@ (801ce64 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x374>)
 801cdfe:	6818      	ldr	r0, [r3, #0]
 801ce00:	6803      	ldr	r3, [r0, #0]
 801ce02:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ce04:	4798      	blx	r3
 801ce06:	b01b      	add	sp, #108	@ 0x6c
 801ce08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ce0c:	ebae 0304 	sub.w	r3, lr, r4
 801ce10:	b29b      	uxth	r3, r3
 801ce12:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ce14:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ce16:	9402      	str	r4, [sp, #8]
 801ce18:	2bff      	cmp	r3, #255	@ 0xff
 801ce1a:	f8cd 901c 	str.w	r9, [sp, #28]
 801ce1e:	9b02      	ldr	r3, [sp, #8]
 801ce20:	f47f af67 	bne.w	801ccf2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x202>
 801ce24:	2b00      	cmp	r3, #0
 801ce26:	d0af      	beq.n	801cd88 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>
 801ce28:	eb0a 0003 	add.w	r0, sl, r3
 801ce2c:	9b01      	ldr	r3, [sp, #4]
 801ce2e:	b280      	uxth	r0, r0
 801ce30:	1cda      	adds	r2, r3, #3
 801ce32:	eb07 030a 	add.w	r3, r7, sl
 801ce36:	7a5b      	ldrb	r3, [r3, #9]
 801ce38:	f10a 0a01 	add.w	sl, sl, #1
 801ce3c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801ce40:	f81c 1003 	ldrb.w	r1, [ip, r3]
 801ce44:	4463      	add	r3, ip
 801ce46:	f802 1c03 	strb.w	r1, [r2, #-3]
 801ce4a:	7859      	ldrb	r1, [r3, #1]
 801ce4c:	fa1f fa8a 	uxth.w	sl, sl
 801ce50:	f802 1c02 	strb.w	r1, [r2, #-2]
 801ce54:	789b      	ldrb	r3, [r3, #2]
 801ce56:	4582      	cmp	sl, r0
 801ce58:	f802 3c01 	strb.w	r3, [r2, #-1]
 801ce5c:	f102 0203 	add.w	r2, r2, #3
 801ce60:	d1e7      	bne.n	801ce32 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x342>
 801ce62:	e788      	b.n	801cd76 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x286>
 801ce64:	2004bf98 	.word	0x2004bf98
 801ce68:	2004bf92 	.word	0x2004bf92
 801ce6c:	eba4 0409 	sub.w	r4, r4, r9
 801ce70:	44ca      	add	sl, r9
 801ce72:	b2a4      	uxth	r4, r4
 801ce74:	fa1f fa8a 	uxth.w	sl, sl
 801ce78:	f8bd e028 	ldrh.w	lr, [sp, #40]	@ 0x28
 801ce7c:	f04f 0900 	mov.w	r9, #0
 801ce80:	e7a4      	b.n	801cdcc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2dc>
 801ce82:	9b05      	ldr	r3, [sp, #20]
 801ce84:	429a      	cmp	r2, r3
 801ce86:	d323      	bcc.n	801ced0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3e0>
 801ce88:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801ce8a:	7a79      	ldrb	r1, [r7, #9]
 801ce8c:	183b      	adds	r3, r7, r0
 801ce8e:	7259      	strb	r1, [r3, #9]
 801ce90:	7a7b      	ldrb	r3, [r7, #9]
 801ce92:	1c41      	adds	r1, r0, #1
 801ce94:	b28c      	uxth	r4, r1
 801ce96:	9e05      	ldr	r6, [sp, #20]
 801ce98:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 801ce9c:	f106 0a01 	add.w	sl, r6, #1
 801cea0:	9e08      	ldr	r6, [sp, #32]
 801cea2:	f880 304a 	strb.w	r3, [r0, #74]	@ 0x4a
 801cea6:	fa1f f38a 	uxth.w	r3, sl
 801ceaa:	f8a0 604c 	strh.w	r6, [r0, #76]	@ 0x4c
 801ceae:	f880 104b 	strb.w	r1, [r0, #75]	@ 0x4b
 801ceb2:	9305      	str	r3, [sp, #20]
 801ceb4:	e9cd 2408 	strd	r2, r4, [sp, #32]
 801ceb8:	f04f 0a00 	mov.w	sl, #0
 801cebc:	e6d0      	b.n	801cc60 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x170>
 801cebe:	2100      	movs	r1, #0
 801cec0:	9103      	str	r1, [sp, #12]
 801cec2:	9904      	ldr	r1, [sp, #16]
 801cec4:	3102      	adds	r1, #2
 801cec6:	9104      	str	r1, [sp, #16]
 801cec8:	e6f0      	b.n	801ccac <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1bc>
 801ceca:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801cecc:	3101      	adds	r1, #1
 801cece:	e7e2      	b.n	801ce96 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3a6>
 801ced0:	eb07 0382 	add.w	r3, r7, r2, lsl #2
 801ced4:	f893 404b 	ldrb.w	r4, [r3, #75]	@ 0x4b
 801ced8:	4613      	mov	r3, r2
 801ceda:	2c01      	cmp	r4, #1
 801cedc:	d90d      	bls.n	801cefa <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x40a>
 801cede:	f104 0109 	add.w	r1, r4, #9
 801cee2:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801cee4:	4439      	add	r1, r7
 801cee6:	eb07 0383 	add.w	r3, r7, r3, lsl #2
 801ceea:	f893 004a 	ldrb.w	r0, [r3, #74]	@ 0x4a
 801ceee:	f801 0d01 	strb.w	r0, [r1, #-1]!
 801cef2:	428e      	cmp	r6, r1
 801cef4:	f8b3 304c 	ldrh.w	r3, [r3, #76]	@ 0x4c
 801cef8:	d1f5      	bne.n	801cee6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3f6>
 801cefa:	b2db      	uxtb	r3, r3
 801cefc:	727b      	strb	r3, [r7, #9]
 801cefe:	b2a4      	uxth	r4, r4
 801cf00:	e6db      	b.n	801ccba <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1ca>
 801cf02:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 801cf06:	f8bd 2058 	ldrh.w	r2, [sp, #88]	@ 0x58
 801cf0a:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801cf0c:	1a9b      	subs	r3, r3, r2
 801cf0e:	fa1f f983 	uxth.w	r9, r3
 801cf12:	f1b9 0f00 	cmp.w	r9, #0
 801cf16:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801cf18:	bf18      	it	ne
 801cf1a:	2300      	movne	r3, #0
 801cf1c:	3101      	adds	r1, #1
 801cf1e:	fa1f fe83 	uxth.w	lr, r3
 801cf22:	9111      	str	r1, [sp, #68]	@ 0x44
 801cf24:	9b06      	ldr	r3, [sp, #24]
 801cf26:	e664      	b.n	801cbf2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x102>
 801cf28:	4b03      	ldr	r3, [pc, #12]	@ (801cf38 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x448>)
 801cf2a:	4a04      	ldr	r2, [pc, #16]	@ (801cf3c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x44c>)
 801cf2c:	f640 41a7 	movw	r1, #3239	@ 0xca7
 801cf30:	4803      	ldr	r0, [pc, #12]	@ (801cf40 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x450>)
 801cf32:	f007 feff 	bl	8024d34 <__assert_func>
 801cf36:	bf00      	nop
 801cf38:	08027a2c 	.word	0x08027a2c
 801cf3c:	08028e8c 	.word	0x08028e8c
 801cf40:	08027928 	.word	0x08027928

0801cf44 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 801cf44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf48:	4690      	mov	r8, r2
 801cf4a:	8812      	ldrh	r2, [r2, #0]
 801cf4c:	b095      	sub	sp, #84	@ 0x54
 801cf4e:	2a01      	cmp	r2, #1
 801cf50:	461c      	mov	r4, r3
 801cf52:	f89d 907c 	ldrb.w	r9, [sp, #124]	@ 0x7c
 801cf56:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801cf58:	f040 8107 	bne.w	801d16a <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x226>
 801cf5c:	468a      	mov	sl, r1
 801cf5e:	6820      	ldr	r0, [r4, #0]
 801cf60:	6861      	ldr	r1, [r4, #4]
 801cf62:	aa10      	add	r2, sp, #64	@ 0x40
 801cf64:	c203      	stmia	r2!, {r0, r1}
 801cf66:	6818      	ldr	r0, [r3, #0]
 801cf68:	6859      	ldr	r1, [r3, #4]
 801cf6a:	aa12      	add	r2, sp, #72	@ 0x48
 801cf6c:	c203      	stmia	r2!, {r0, r1}
 801cf6e:	a810      	add	r0, sp, #64	@ 0x40
 801cf70:	f7f2 fa36 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cf74:	4621      	mov	r1, r4
 801cf76:	a812      	add	r0, sp, #72	@ 0x48
 801cf78:	f7f2 fa5a 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cf7c:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 801cf80:	f9bd 504a 	ldrsh.w	r5, [sp, #74]	@ 0x4a
 801cf84:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 801cf88:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 801cf8c:	f8bd 3042 	ldrh.w	r3, [sp, #66]	@ 0x42
 801cf90:	4879      	ldr	r0, [pc, #484]	@ (801d178 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 801cf92:	fb11 4105 	smlabb	r1, r1, r5, r4
 801cf96:	4422      	add	r2, r4
 801cf98:	442b      	add	r3, r5
 801cf9a:	6800      	ldr	r0, [r0, #0]
 801cf9c:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 801cfa0:	f8ad 2048 	strh.w	r2, [sp, #72]	@ 0x48
 801cfa4:	6802      	ldr	r2, [r0, #0]
 801cfa6:	448a      	add	sl, r1
 801cfa8:	f9bd 104c 	ldrsh.w	r1, [sp, #76]	@ 0x4c
 801cfac:	4c73      	ldr	r4, [pc, #460]	@ (801d17c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x238>)
 801cfae:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 801cfb2:	910c      	str	r1, [sp, #48]	@ 0x30
 801cfb4:	f9bd 104e 	ldrsh.w	r1, [sp, #78]	@ 0x4e
 801cfb8:	42a3      	cmp	r3, r4
 801cfba:	910e      	str	r1, [sp, #56]	@ 0x38
 801cfbc:	f040 80a2 	bne.w	801d104 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c0>
 801cfc0:	6841      	ldr	r1, [r0, #4]
 801cfc2:	4c6f      	ldr	r4, [pc, #444]	@ (801d180 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 801cfc4:	680b      	ldr	r3, [r1, #0]
 801cfc6:	699b      	ldr	r3, [r3, #24]
 801cfc8:	42a3      	cmp	r3, r4
 801cfca:	f040 80c1 	bne.w	801d150 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 801cfce:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 801cfd0:	4798      	blx	r3
 801cfd2:	4b6c      	ldr	r3, [pc, #432]	@ (801d184 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 801cfd4:	f9bd 104a 	ldrsh.w	r1, [sp, #74]	@ 0x4a
 801cfd8:	881b      	ldrh	r3, [r3, #0]
 801cfda:	f9bd 2048 	ldrsh.w	r2, [sp, #72]	@ 0x48
 801cfde:	fb01 2303 	mla	r3, r1, r3, r2
 801cfe2:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 801cfe6:	930b      	str	r3, [sp, #44]	@ 0x2c
 801cfe8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801cfea:	2b00      	cmp	r3, #0
 801cfec:	f340 8082 	ble.w	801d0f4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b0>
 801cff0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801cff2:	2b00      	cmp	r3, #0
 801cff4:	dd7e      	ble.n	801d0f4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b0>
 801cff6:	2200      	movs	r2, #0
 801cff8:	f04f 0e03 	mov.w	lr, #3
 801cffc:	f04f 0c04 	mov.w	ip, #4
 801d000:	f1c9 07ff 	rsb	r7, r9, #255	@ 0xff
 801d004:	009b      	lsls	r3, r3, #2
 801d006:	920d      	str	r2, [sp, #52]	@ 0x34
 801d008:	b2bf      	uxth	r7, r7
 801d00a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d00c:	fa1f f289 	uxth.w	r2, r9
 801d010:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d012:	4655      	mov	r5, sl
 801d014:	1d18      	adds	r0, r3, #4
 801d016:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d018:	eb0a 0603 	add.w	r6, sl, r3
 801d01c:	e03e      	b.n	801d09c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x158>
 801d01e:	f810 3c04 	ldrb.w	r3, [r0, #-4]
 801d022:	f810 4c03 	ldrb.w	r4, [r0, #-3]
 801d026:	fb13 f307 	smulbb	r3, r3, r7
 801d02a:	fb0b 3302 	mla	r3, fp, r2, r3
 801d02e:	b29b      	uxth	r3, r3
 801d030:	f103 0b01 	add.w	fp, r3, #1
 801d034:	eb0b 2313 	add.w	r3, fp, r3, lsr #8
 801d038:	121b      	asrs	r3, r3, #8
 801d03a:	fb14 f407 	smulbb	r4, r4, r7
 801d03e:	f800 3c04 	strb.w	r3, [r0, #-4]
 801d042:	784b      	ldrb	r3, [r1, #1]
 801d044:	f810 bc02 	ldrb.w	fp, [r0, #-2]
 801d048:	fb03 4302 	mla	r3, r3, r2, r4
 801d04c:	b29b      	uxth	r3, r3
 801d04e:	1c5c      	adds	r4, r3, #1
 801d050:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 801d054:	121b      	asrs	r3, r3, #8
 801d056:	fb1b fb07 	smulbb	fp, fp, r7
 801d05a:	f800 3c03 	strb.w	r3, [r0, #-3]
 801d05e:	788c      	ldrb	r4, [r1, #2]
 801d060:	f810 3c01 	ldrb.w	r3, [r0, #-1]
 801d064:	fb04 b402 	mla	r4, r4, r2, fp
 801d068:	b2a4      	uxth	r4, r4
 801d06a:	f104 0b01 	add.w	fp, r4, #1
 801d06e:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 801d072:	1224      	asrs	r4, r4, #8
 801d074:	fb13 fb07 	smulbb	fp, r3, r7
 801d078:	f800 4c02 	strb.w	r4, [r0, #-2]
 801d07c:	78cb      	ldrb	r3, [r1, #3]
 801d07e:	42ae      	cmp	r6, r5
 801d080:	fb03 b302 	mla	r3, r3, r2, fp
 801d084:	b29b      	uxth	r3, r3
 801d086:	f103 0101 	add.w	r1, r3, #1
 801d08a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d08e:	ea4f 2323 	mov.w	r3, r3, asr #8
 801d092:	f800 3c01 	strb.w	r3, [r0, #-1]
 801d096:	f100 0004 	add.w	r0, r0, #4
 801d09a:	d018      	beq.n	801d0ce <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x18a>
 801d09c:	f815 3b01 	ldrb.w	r3, [r5], #1
 801d0a0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d0a4:	fb1e c303 	smlabb	r3, lr, r3, ip
 801d0a8:	eb08 0103 	add.w	r1, r8, r3
 801d0ac:	f818 b003 	ldrb.w	fp, [r8, r3]
 801d0b0:	d1b5      	bne.n	801d01e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xda>
 801d0b2:	f800 bc04 	strb.w	fp, [r0, #-4]
 801d0b6:	784b      	ldrb	r3, [r1, #1]
 801d0b8:	42ae      	cmp	r6, r5
 801d0ba:	f800 3c03 	strb.w	r3, [r0, #-3]
 801d0be:	788b      	ldrb	r3, [r1, #2]
 801d0c0:	f100 0004 	add.w	r0, r0, #4
 801d0c4:	f800 9c05 	strb.w	r9, [r0, #-5]
 801d0c8:	f800 3c06 	strb.w	r3, [r0, #-6]
 801d0cc:	d1e6      	bne.n	801d09c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x158>
 801d0ce:	4b2d      	ldr	r3, [pc, #180]	@ (801d184 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 801d0d0:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801d0d2:	881b      	ldrh	r3, [r3, #0]
 801d0d4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801d0d6:	1a1b      	subs	r3, r3, r0
 801d0d8:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 801d0dc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d0de:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801d0e0:	441c      	add	r4, r3
 801d0e2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d0e4:	3001      	adds	r0, #1
 801d0e6:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 801d0ea:	4283      	cmp	r3, r0
 801d0ec:	900d      	str	r0, [sp, #52]	@ 0x34
 801d0ee:	940b      	str	r4, [sp, #44]	@ 0x2c
 801d0f0:	448a      	add	sl, r1
 801d0f2:	d18d      	bne.n	801d010 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xcc>
 801d0f4:	4b20      	ldr	r3, [pc, #128]	@ (801d178 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 801d0f6:	6818      	ldr	r0, [r3, #0]
 801d0f8:	6803      	ldr	r3, [r0, #0]
 801d0fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d0fc:	4798      	blx	r3
 801d0fe:	b015      	add	sp, #84	@ 0x54
 801d100:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d104:	4798      	blx	r3
 801d106:	2801      	cmp	r0, #1
 801d108:	d125      	bne.n	801d156 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x212>
 801d10a:	4b1f      	ldr	r3, [pc, #124]	@ (801d188 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>)
 801d10c:	6818      	ldr	r0, [r3, #0]
 801d10e:	b330      	cbz	r0, 801d15e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x21a>
 801d110:	2502      	movs	r5, #2
 801d112:	240b      	movs	r4, #11
 801d114:	2600      	movs	r6, #0
 801d116:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801d11a:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 801d11e:	9302      	str	r3, [sp, #8]
 801d120:	4b18      	ldr	r3, [pc, #96]	@ (801d184 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 801d122:	9201      	str	r2, [sp, #4]
 801d124:	881b      	ldrh	r3, [r3, #0]
 801d126:	9508      	str	r5, [sp, #32]
 801d128:	9407      	str	r4, [sp, #28]
 801d12a:	f8bd 5044 	ldrh.w	r5, [sp, #68]	@ 0x44
 801d12e:	f8bd 404a 	ldrh.w	r4, [sp, #74]	@ 0x4a
 801d132:	9306      	str	r3, [sp, #24]
 801d134:	f8cd 9010 	str.w	r9, [sp, #16]
 801d138:	4642      	mov	r2, r8
 801d13a:	4651      	mov	r1, sl
 801d13c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801d140:	9605      	str	r6, [sp, #20]
 801d142:	9503      	str	r5, [sp, #12]
 801d144:	9400      	str	r4, [sp, #0]
 801d146:	f7f8 f8b5 	bl	80152b4 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 801d14a:	b015      	add	sp, #84	@ 0x54
 801d14c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d150:	4608      	mov	r0, r1
 801d152:	4798      	blx	r3
 801d154:	e7d7      	b.n	801d106 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c2>
 801d156:	4b08      	ldr	r3, [pc, #32]	@ (801d178 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 801d158:	6818      	ldr	r0, [r3, #0]
 801d15a:	6802      	ldr	r2, [r0, #0]
 801d15c:	e737      	b.n	801cfce <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 801d15e:	4b0b      	ldr	r3, [pc, #44]	@ (801d18c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 801d160:	4a0b      	ldr	r2, [pc, #44]	@ (801d190 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 801d162:	217c      	movs	r1, #124	@ 0x7c
 801d164:	480b      	ldr	r0, [pc, #44]	@ (801d194 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x250>)
 801d166:	f007 fde5 	bl	8024d34 <__assert_func>
 801d16a:	4b0b      	ldr	r3, [pc, #44]	@ (801d198 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x254>)
 801d16c:	4a0b      	ldr	r2, [pc, #44]	@ (801d19c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 801d16e:	f640 5184 	movw	r1, #3460	@ 0xd84
 801d172:	480b      	ldr	r0, [pc, #44]	@ (801d1a0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 801d174:	f007 fdde 	bl	8024d34 <__assert_func>
 801d178:	2004bf98 	.word	0x2004bf98
 801d17c:	08001829 	.word	0x08001829
 801d180:	0800e31d 	.word	0x0800e31d
 801d184:	2004bf92 	.word	0x2004bf92
 801d188:	2004c150 	.word	0x2004c150
 801d18c:	08027884 	.word	0x08027884
 801d190:	08028130 	.word	0x08028130
 801d194:	080278ac 	.word	0x080278ac
 801d198:	0802798c 	.word	0x0802798c
 801d19c:	080286d8 	.word	0x080286d8
 801d1a0:	08027928 	.word	0x08027928

0801d1a4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 801d1a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d1a8:	4617      	mov	r7, r2
 801d1aa:	7812      	ldrb	r2, [r2, #0]
 801d1ac:	b08f      	sub	sp, #60	@ 0x3c
 801d1ae:	2a01      	cmp	r2, #1
 801d1b0:	461e      	mov	r6, r3
 801d1b2:	f89d 8064 	ldrb.w	r8, [sp, #100]	@ 0x64
 801d1b6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801d1b8:	f040 8203 	bne.w	801d5c2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x41e>
 801d1bc:	6830      	ldr	r0, [r6, #0]
 801d1be:	460d      	mov	r5, r1
 801d1c0:	6871      	ldr	r1, [r6, #4]
 801d1c2:	aa0a      	add	r2, sp, #40	@ 0x28
 801d1c4:	c203      	stmia	r2!, {r0, r1}
 801d1c6:	6818      	ldr	r0, [r3, #0]
 801d1c8:	6859      	ldr	r1, [r3, #4]
 801d1ca:	aa0c      	add	r2, sp, #48	@ 0x30
 801d1cc:	c203      	stmia	r2!, {r0, r1}
 801d1ce:	a80a      	add	r0, sp, #40	@ 0x28
 801d1d0:	f7f2 f906 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d1d4:	4631      	mov	r1, r6
 801d1d6:	a80c      	add	r0, sp, #48	@ 0x30
 801d1d8:	f7f2 f92a 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d1dc:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801d1e0:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 801d1e4:	f003 0201 	and.w	r2, r3, #1
 801d1e8:	4614      	mov	r4, r2
 801d1ea:	9206      	str	r2, [sp, #24]
 801d1ec:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801d1f0:	4423      	add	r3, r4
 801d1f2:	fb02 1303 	mla	r3, r2, r3, r1
 801d1f6:	f8bd 002a 	ldrh.w	r0, [sp, #42]	@ 0x2a
 801d1fa:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 801d1fe:	4402      	add	r2, r0
 801d200:	489d      	ldr	r0, [pc, #628]	@ (801d478 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d4>)
 801d202:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801d206:	440e      	add	r6, r1
 801d208:	eb05 0363 	add.w	r3, r5, r3, asr #1
 801d20c:	6800      	ldr	r0, [r0, #0]
 801d20e:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801d212:	f8ad 6030 	strh.w	r6, [sp, #48]	@ 0x30
 801d216:	9302      	str	r3, [sp, #8]
 801d218:	f001 0301 	and.w	r3, r1, #1
 801d21c:	6802      	ldr	r2, [r0, #0]
 801d21e:	9305      	str	r3, [sp, #20]
 801d220:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801d224:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 801d226:	9303      	str	r3, [sp, #12]
 801d228:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 801d22c:	4790      	blx	r2
 801d22e:	4a93      	ldr	r2, [pc, #588]	@ (801d47c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d8>)
 801d230:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801d234:	8812      	ldrh	r2, [r2, #0]
 801d236:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 801d23a:	fb05 f502 	mul.w	r5, r5, r2
 801d23e:	fb02 1303 	mla	r3, r2, r3, r1
 801d242:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 801d246:	461a      	mov	r2, r3
 801d248:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d24c:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 801d250:	f107 0704 	add.w	r7, r7, #4
 801d254:	9304      	str	r3, [sp, #16]
 801d256:	f000 8113 	beq.w	801d480 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2dc>
 801d25a:	4614      	mov	r4, r2
 801d25c:	9a04      	ldr	r2, [sp, #16]
 801d25e:	4294      	cmp	r4, r2
 801d260:	f080 80c2 	bcs.w	801d3e8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>
 801d264:	ea4f 6308 	mov.w	r3, r8, lsl #24
 801d268:	9300      	str	r3, [sp, #0]
 801d26a:	9b03      	ldr	r3, [sp, #12]
 801d26c:	3b01      	subs	r3, #1
 801d26e:	9309      	str	r3, [sp, #36]	@ 0x24
 801d270:	9b05      	ldr	r3, [sp, #20]
 801d272:	2b00      	cmp	r3, #0
 801d274:	f040 80ef 	bne.w	801d456 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b2>
 801d278:	9b02      	ldr	r3, [sp, #8]
 801d27a:	9301      	str	r3, [sp, #4]
 801d27c:	9b03      	ldr	r3, [sp, #12]
 801d27e:	2b01      	cmp	r3, #1
 801d280:	f340 809c 	ble.w	801d3bc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x218>
 801d284:	3b02      	subs	r3, #2
 801d286:	9308      	str	r3, [sp, #32]
 801d288:	f104 0e10 	add.w	lr, r4, #16
 801d28c:	085b      	lsrs	r3, r3, #1
 801d28e:	9307      	str	r3, [sp, #28]
 801d290:	eb0e 0ec3 	add.w	lr, lr, r3, lsl #3
 801d294:	9b01      	ldr	r3, [sp, #4]
 801d296:	f104 0608 	add.w	r6, r4, #8
 801d29a:	f103 3cff 	add.w	ip, r3, #4294967295
 801d29e:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
 801d2a2:	f856 1c08 	ldr.w	r1, [r6, #-8]
 801d2a6:	091b      	lsrs	r3, r3, #4
 801d2a8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801d2ac:	18f8      	adds	r0, r7, r3
 801d2ae:	5cfa      	ldrb	r2, [r7, r3]
 801d2b0:	f890 9001 	ldrb.w	r9, [r0, #1]
 801d2b4:	7883      	ldrb	r3, [r0, #2]
 801d2b6:	0e08      	lsrs	r0, r1, #24
 801d2b8:	f000 80ae 	beq.w	801d418 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x274>
 801d2bc:	fb08 f500 	mul.w	r5, r8, r0
 801d2c0:	fb18 fb03 	smulbb	fp, r8, r3
 801d2c4:	1c6b      	adds	r3, r5, #1
 801d2c6:	eb03 2525 	add.w	r5, r3, r5, asr #8
 801d2ca:	fb18 f202 	smulbb	r2, r8, r2
 801d2ce:	122d      	asrs	r5, r5, #8
 801d2d0:	fb18 f909 	smulbb	r9, r8, r9
 801d2d4:	eba0 0a05 	sub.w	sl, r0, r5
 801d2d8:	f3c1 4307 	ubfx	r3, r1, #16, #8
 801d2dc:	fb0a b303 	mla	r3, sl, r3, fp
 801d2e0:	fa5f fb81 	uxtb.w	fp, r1
 801d2e4:	fb0a 220b 	mla	r2, sl, fp, r2
 801d2e8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801d2ec:	4440      	add	r0, r8
 801d2ee:	fb0a 9101 	mla	r1, sl, r1, r9
 801d2f2:	1b40      	subs	r0, r0, r5
 801d2f4:	b2c0      	uxtb	r0, r0
 801d2f6:	fbb3 f3f0 	udiv	r3, r3, r0
 801d2fa:	fbb2 f2f0 	udiv	r2, r2, r0
 801d2fe:	fbb1 f1f0 	udiv	r1, r1, r0
 801d302:	041b      	lsls	r3, r3, #16
 801d304:	b2d2      	uxtb	r2, r2
 801d306:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 801d30a:	ea42 6000 	orr.w	r0, r2, r0, lsl #24
 801d30e:	0209      	lsls	r1, r1, #8
 801d310:	4303      	orrs	r3, r0
 801d312:	b289      	uxth	r1, r1
 801d314:	430b      	orrs	r3, r1
 801d316:	f846 3c08 	str.w	r3, [r6, #-8]
 801d31a:	f89c 2000 	ldrb.w	r2, [ip]
 801d31e:	f856 3c04 	ldr.w	r3, [r6, #-4]
 801d322:	f002 020f 	and.w	r2, r2, #15
 801d326:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d32a:	0e18      	lsrs	r0, r3, #24
 801d32c:	eb07 0102 	add.w	r1, r7, r2
 801d330:	d062      	beq.n	801d3f8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x254>
 801d332:	fb08 f500 	mul.w	r5, r8, r0
 801d336:	f105 0901 	add.w	r9, r5, #1
 801d33a:	eb09 2925 	add.w	r9, r9, r5, asr #8
 801d33e:	ea4f 2929 	mov.w	r9, r9, asr #8
 801d342:	eba0 0b09 	sub.w	fp, r0, r9
 801d346:	788d      	ldrb	r5, [r1, #2]
 801d348:	f891 a001 	ldrb.w	sl, [r1, #1]
 801d34c:	b2d9      	uxtb	r1, r3
 801d34e:	fb0b f101 	mul.w	r1, fp, r1
 801d352:	fb15 f508 	smulbb	r5, r5, r8
 801d356:	5cba      	ldrb	r2, [r7, r2]
 801d358:	fb1a fa08 	smulbb	sl, sl, r8
 801d35c:	fb02 1108 	mla	r1, r2, r8, r1
 801d360:	f3c3 4207 	ubfx	r2, r3, #16, #8
 801d364:	fb0b 5502 	mla	r5, fp, r2, r5
 801d368:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801d36c:	4440      	add	r0, r8
 801d36e:	fb0b a202 	mla	r2, fp, r2, sl
 801d372:	eba0 0009 	sub.w	r0, r0, r9
 801d376:	b2c0      	uxtb	r0, r0
 801d378:	fbb1 f3f0 	udiv	r3, r1, r0
 801d37c:	fbb5 f5f0 	udiv	r5, r5, r0
 801d380:	fbb2 f2f0 	udiv	r2, r2, r0
 801d384:	b2db      	uxtb	r3, r3
 801d386:	042d      	lsls	r5, r5, #16
 801d388:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 801d38c:	f405 057f 	and.w	r5, r5, #16711680	@ 0xff0000
 801d390:	0212      	lsls	r2, r2, #8
 801d392:	432b      	orrs	r3, r5
 801d394:	b292      	uxth	r2, r2
 801d396:	4313      	orrs	r3, r2
 801d398:	f846 3c04 	str.w	r3, [r6, #-4]
 801d39c:	3608      	adds	r6, #8
 801d39e:	4576      	cmp	r6, lr
 801d3a0:	f47f af7d 	bne.w	801d29e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xfa>
 801d3a4:	9b07      	ldr	r3, [sp, #28]
 801d3a6:	9901      	ldr	r1, [sp, #4]
 801d3a8:	1c5a      	adds	r2, r3, #1
 801d3aa:	4411      	add	r1, r2
 801d3ac:	eb04 04c2 	add.w	r4, r4, r2, lsl #3
 801d3b0:	9a08      	ldr	r2, [sp, #32]
 801d3b2:	ebc3 73c3 	rsb	r3, r3, r3, lsl #31
 801d3b6:	9101      	str	r1, [sp, #4]
 801d3b8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d3bc:	2b01      	cmp	r3, #1
 801d3be:	d032      	beq.n	801d426 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x282>
 801d3c0:	9906      	ldr	r1, [sp, #24]
 801d3c2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801d3c6:	4a2d      	ldr	r2, [pc, #180]	@ (801d47c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d8>)
 801d3c8:	440b      	add	r3, r1
 801d3ca:	8812      	ldrh	r2, [r2, #0]
 801d3cc:	9903      	ldr	r1, [sp, #12]
 801d3ce:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801d3d2:	1a52      	subs	r2, r2, r1
 801d3d4:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801d3d8:	9a02      	ldr	r2, [sp, #8]
 801d3da:	eb02 0363 	add.w	r3, r2, r3, asr #1
 801d3de:	9302      	str	r3, [sp, #8]
 801d3e0:	9b04      	ldr	r3, [sp, #16]
 801d3e2:	42a3      	cmp	r3, r4
 801d3e4:	f63f af44 	bhi.w	801d270 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xcc>
 801d3e8:	4b23      	ldr	r3, [pc, #140]	@ (801d478 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d4>)
 801d3ea:	6818      	ldr	r0, [r3, #0]
 801d3ec:	6803      	ldr	r3, [r0, #0]
 801d3ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d3f0:	4798      	blx	r3
 801d3f2:	b00f      	add	sp, #60	@ 0x3c
 801d3f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d3f8:	5cbb      	ldrb	r3, [r7, r2]
 801d3fa:	9a00      	ldr	r2, [sp, #0]
 801d3fc:	7888      	ldrb	r0, [r1, #2]
 801d3fe:	4313      	orrs	r3, r2
 801d400:	784a      	ldrb	r2, [r1, #1]
 801d402:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 801d406:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801d40a:	f846 3c04 	str.w	r3, [r6, #-4]
 801d40e:	3608      	adds	r6, #8
 801d410:	45b6      	cmp	lr, r6
 801d412:	f47f af44 	bne.w	801d29e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xfa>
 801d416:	e7c5      	b.n	801d3a4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x200>
 801d418:	9900      	ldr	r1, [sp, #0]
 801d41a:	430a      	orrs	r2, r1
 801d41c:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 801d420:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
 801d424:	e777      	b.n	801d316 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x172>
 801d426:	9b01      	ldr	r3, [sp, #4]
 801d428:	4621      	mov	r1, r4
 801d42a:	7818      	ldrb	r0, [r3, #0]
 801d42c:	4642      	mov	r2, r8
 801d42e:	0900      	lsrs	r0, r0, #4
 801d430:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d434:	4438      	add	r0, r7
 801d436:	f7fa fe2d 	bl	8018094 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.19>
 801d43a:	4b10      	ldr	r3, [pc, #64]	@ (801d47c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d8>)
 801d43c:	9903      	ldr	r1, [sp, #12]
 801d43e:	881a      	ldrh	r2, [r3, #0]
 801d440:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801d444:	1a52      	subs	r2, r2, r1
 801d446:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801d44a:	9a06      	ldr	r2, [sp, #24]
 801d44c:	3404      	adds	r4, #4
 801d44e:	4413      	add	r3, r2
 801d450:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801d454:	e7c0      	b.n	801d3d8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>
 801d456:	9d02      	ldr	r5, [sp, #8]
 801d458:	4621      	mov	r1, r4
 801d45a:	7828      	ldrb	r0, [r5, #0]
 801d45c:	4642      	mov	r2, r8
 801d45e:	f000 000f 	and.w	r0, r0, #15
 801d462:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d466:	4438      	add	r0, r7
 801d468:	f7fa fe14 	bl	8018094 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.19>
 801d46c:	1c6b      	adds	r3, r5, #1
 801d46e:	9301      	str	r3, [sp, #4]
 801d470:	3404      	adds	r4, #4
 801d472:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d474:	e703      	b.n	801d27e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xda>
 801d476:	bf00      	nop
 801d478:	2004bf98 	.word	0x2004bf98
 801d47c:	2004bf92 	.word	0x2004bf92
 801d480:	4615      	mov	r5, r2
 801d482:	9a04      	ldr	r2, [sp, #16]
 801d484:	4295      	cmp	r5, r2
 801d486:	d2af      	bcs.n	801d3e8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>
 801d488:	9b03      	ldr	r3, [sp, #12]
 801d48a:	f8dd 9008 	ldr.w	r9, [sp, #8]
 801d48e:	469a      	mov	sl, r3
 801d490:	f103 38ff 	add.w	r8, r3, #4294967295
 801d494:	9b05      	ldr	r3, [sp, #20]
 801d496:	2b00      	cmp	r3, #0
 801d498:	d07d      	beq.n	801d596 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3f2>
 801d49a:	4646      	mov	r6, r8
 801d49c:	f899 3000 	ldrb.w	r3, [r9]
 801d4a0:	f109 0e01 	add.w	lr, r9, #1
 801d4a4:	f003 030f 	and.w	r3, r3, #15
 801d4a8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801d4ac:	18fa      	adds	r2, r7, r3
 801d4ae:	5cfb      	ldrb	r3, [r7, r3]
 801d4b0:	7891      	ldrb	r1, [r2, #2]
 801d4b2:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 801d4b6:	7852      	ldrb	r2, [r2, #1]
 801d4b8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801d4bc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801d4c0:	f845 3b04 	str.w	r3, [r5], #4
 801d4c4:	2e01      	cmp	r6, #1
 801d4c6:	dd3e      	ble.n	801d546 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3a2>
 801d4c8:	3e02      	subs	r6, #2
 801d4ca:	ea4f 0c56 	mov.w	ip, r6, lsr #1
 801d4ce:	f105 0410 	add.w	r4, r5, #16
 801d4d2:	eb04 04cc 	add.w	r4, r4, ip, lsl #3
 801d4d6:	f105 0108 	add.w	r1, r5, #8
 801d4da:	f10e 30ff 	add.w	r0, lr, #4294967295
 801d4de:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 801d4e2:	3108      	adds	r1, #8
 801d4e4:	091b      	lsrs	r3, r3, #4
 801d4e6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801d4ea:	5cfa      	ldrb	r2, [r7, r3]
 801d4ec:	eb07 0b03 	add.w	fp, r7, r3
 801d4f0:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801d4f4:	f042 427f 	orr.w	r2, r2, #4278190080	@ 0xff000000
 801d4f8:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d4fc:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 801d500:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 801d504:	f841 3c10 	str.w	r3, [r1, #-16]
 801d508:	7803      	ldrb	r3, [r0, #0]
 801d50a:	f003 030f 	and.w	r3, r3, #15
 801d50e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801d512:	5cfa      	ldrb	r2, [r7, r3]
 801d514:	eb07 0b03 	add.w	fp, r7, r3
 801d518:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801d51c:	f042 427f 	orr.w	r2, r2, #4278190080	@ 0xff000000
 801d520:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d524:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 801d528:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 801d52c:	f841 3c0c 	str.w	r3, [r1, #-12]
 801d530:	428c      	cmp	r4, r1
 801d532:	d1d4      	bne.n	801d4de <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x33a>
 801d534:	f10c 0301 	add.w	r3, ip, #1
 801d538:	ebcc 7ccc 	rsb	ip, ip, ip, lsl #31
 801d53c:	449e      	add	lr, r3
 801d53e:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
 801d542:	eb06 064c 	add.w	r6, r6, ip, lsl #1
 801d546:	2e01      	cmp	r6, #1
 801d548:	d128      	bne.n	801d59c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3f8>
 801d54a:	f89e 3000 	ldrb.w	r3, [lr]
 801d54e:	091b      	lsrs	r3, r3, #4
 801d550:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801d554:	18fa      	adds	r2, r7, r3
 801d556:	5cfb      	ldrb	r3, [r7, r3]
 801d558:	7891      	ldrb	r1, [r2, #2]
 801d55a:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 801d55e:	7852      	ldrb	r2, [r2, #1]
 801d560:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801d564:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801d568:	602b      	str	r3, [r5, #0]
 801d56a:	4b19      	ldr	r3, [pc, #100]	@ (801d5d0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x42c>)
 801d56c:	881a      	ldrh	r2, [r3, #0]
 801d56e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801d572:	eba2 020a 	sub.w	r2, r2, sl
 801d576:	eb05 0582 	add.w	r5, r5, r2, lsl #2
 801d57a:	9a06      	ldr	r2, [sp, #24]
 801d57c:	3504      	adds	r5, #4
 801d57e:	4413      	add	r3, r2
 801d580:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801d584:	eb09 0963 	add.w	r9, r9, r3, asr #1
 801d588:	9b04      	ldr	r3, [sp, #16]
 801d58a:	42ab      	cmp	r3, r5
 801d58c:	f67f af2c 	bls.w	801d3e8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>
 801d590:	9b05      	ldr	r3, [sp, #20]
 801d592:	2b00      	cmp	r3, #0
 801d594:	d181      	bne.n	801d49a <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f6>
 801d596:	46ce      	mov	lr, r9
 801d598:	4656      	mov	r6, sl
 801d59a:	e793      	b.n	801d4c4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x320>
 801d59c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801d5a0:	4a0b      	ldr	r2, [pc, #44]	@ (801d5d0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x42c>)
 801d5a2:	9906      	ldr	r1, [sp, #24]
 801d5a4:	8812      	ldrh	r2, [r2, #0]
 801d5a6:	440b      	add	r3, r1
 801d5a8:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801d5ac:	eba2 020a 	sub.w	r2, r2, sl
 801d5b0:	eb09 0963 	add.w	r9, r9, r3, asr #1
 801d5b4:	9b04      	ldr	r3, [sp, #16]
 801d5b6:	eb05 0582 	add.w	r5, r5, r2, lsl #2
 801d5ba:	42ab      	cmp	r3, r5
 801d5bc:	f63f af6a 	bhi.w	801d494 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f0>
 801d5c0:	e712      	b.n	801d3e8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>
 801d5c2:	4b04      	ldr	r3, [pc, #16]	@ (801d5d4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x430>)
 801d5c4:	4a04      	ldr	r2, [pc, #16]	@ (801d5d8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x434>)
 801d5c6:	f640 51dd 	movw	r1, #3549	@ 0xddd
 801d5ca:	4804      	ldr	r0, [pc, #16]	@ (801d5dc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x438>)
 801d5cc:	f007 fbb2 	bl	8024d34 <__assert_func>
 801d5d0:	2004bf92 	.word	0x2004bf92
 801d5d4:	08027a2c 	.word	0x08027a2c
 801d5d8:	08028a1c 	.word	0x08028a1c
 801d5dc:	08027928 	.word	0x08027928

0801d5e0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 801d5e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d5e4:	7814      	ldrb	r4, [r2, #0]
 801d5e6:	b091      	sub	sp, #68	@ 0x44
 801d5e8:	2c01      	cmp	r4, #1
 801d5ea:	461d      	mov	r5, r3
 801d5ec:	9208      	str	r2, [sp, #32]
 801d5ee:	9102      	str	r1, [sp, #8]
 801d5f0:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801d5f2:	f89d a06c 	ldrb.w	sl, [sp, #108]	@ 0x6c
 801d5f6:	f040 814b 	bne.w	801d890 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b0>
 801d5fa:	6828      	ldr	r0, [r5, #0]
 801d5fc:	6869      	ldr	r1, [r5, #4]
 801d5fe:	aa0c      	add	r2, sp, #48	@ 0x30
 801d600:	c203      	stmia	r2!, {r0, r1}
 801d602:	6818      	ldr	r0, [r3, #0]
 801d604:	6859      	ldr	r1, [r3, #4]
 801d606:	aa0e      	add	r2, sp, #56	@ 0x38
 801d608:	c203      	stmia	r2!, {r0, r1}
 801d60a:	a80c      	add	r0, sp, #48	@ 0x30
 801d60c:	f7f1 fee8 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d610:	4629      	mov	r1, r5
 801d612:	a80e      	add	r0, sp, #56	@ 0x38
 801d614:	f7f1 ff0c 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d618:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 801d61c:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801d620:	f340 8130 	ble.w	801d884 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a4>
 801d624:	4623      	mov	r3, r4
 801d626:	b291      	uxth	r1, r2
 801d628:	f9bd 203a 	ldrsh.w	r2, [sp, #58]	@ 0x3a
 801d62c:	f8bd 0038 	ldrh.w	r0, [sp, #56]	@ 0x38
 801d630:	fb92 f5f3 	sdiv	r5, r2, r3
 801d634:	b2ae      	uxth	r6, r5
 801d636:	fb03 2416 	mls	r4, r3, r6, r2
 801d63a:	fb14 0101 	smlabb	r1, r4, r1, r0
 801d63e:	f9bd 4036 	ldrsh.w	r4, [sp, #54]	@ 0x36
 801d642:	b289      	uxth	r1, r1
 801d644:	441c      	add	r4, r3
 801d646:	3c01      	subs	r4, #1
 801d648:	9100      	str	r1, [sp, #0]
 801d64a:	fb94 f4f3 	sdiv	r4, r4, r3
 801d64e:	b136      	cbz	r6, 801d65e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x7e>
 801d650:	9b08      	ldr	r3, [sp, #32]
 801d652:	9902      	ldr	r1, [sp, #8]
 801d654:	f853 3026 	ldr.w	r3, [r3, r6, lsl #2]
 801d658:	ba1b      	rev	r3, r3
 801d65a:	4419      	add	r1, r3
 801d65c:	9102      	str	r1, [sp, #8]
 801d65e:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 801d662:	f8bd 3030 	ldrh.w	r3, [sp, #48]	@ 0x30
 801d666:	440a      	add	r2, r1
 801d668:	498d      	ldr	r1, [pc, #564]	@ (801d8a0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c0>)
 801d66a:	4403      	add	r3, r0
 801d66c:	6808      	ldr	r0, [r1, #0]
 801d66e:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 801d672:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 801d676:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801d67a:	6803      	ldr	r3, [r0, #0]
 801d67c:	960a      	str	r6, [sp, #40]	@ 0x28
 801d67e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d680:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 801d684:	4798      	blx	r3
 801d686:	9b00      	ldr	r3, [sp, #0]
 801d688:	4986      	ldr	r1, [pc, #536]	@ (801d8a4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c4>)
 801d68a:	2b00      	cmp	r3, #0
 801d68c:	bf0c      	ite	eq
 801d68e:	4633      	moveq	r3, r6
 801d690:	2300      	movne	r3, #0
 801d692:	8809      	ldrh	r1, [r1, #0]
 801d694:	f9bd 203a 	ldrsh.w	r2, [sp, #58]	@ 0x3a
 801d698:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801d69c:	fb05 f501 	mul.w	r5, r5, r1
 801d6a0:	fb01 6202 	mla	r2, r1, r2, r6
 801d6a4:	b2a4      	uxth	r4, r4
 801d6a6:	eb00 0882 	add.w	r8, r0, r2, lsl #2
 801d6aa:	eb08 0285 	add.w	r2, r8, r5, lsl #2
 801d6ae:	00a4      	lsls	r4, r4, #2
 801d6b0:	1d21      	adds	r1, r4, #4
 801d6b2:	4590      	cmp	r8, r2
 801d6b4:	9203      	str	r2, [sp, #12]
 801d6b6:	9109      	str	r1, [sp, #36]	@ 0x24
 801d6b8:	fa1f f983 	uxth.w	r9, r3
 801d6bc:	d227      	bcs.n	801d70e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x12e>
 801d6be:	2300      	movs	r3, #0
 801d6c0:	469b      	mov	fp, r3
 801d6c2:	ea4f 620a 	mov.w	r2, sl, lsl #24
 801d6c6:	9304      	str	r3, [sp, #16]
 801d6c8:	9205      	str	r2, [sp, #20]
 801d6ca:	f1bb 0f00 	cmp.w	fp, #0
 801d6ce:	d10f      	bne.n	801d6f0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x110>
 801d6d0:	9902      	ldr	r1, [sp, #8]
 801d6d2:	780b      	ldrb	r3, [r1, #0]
 801d6d4:	ea4f 1b93 	mov.w	fp, r3, lsr #6
 801d6d8:	f10b 32ff 	add.w	r2, fp, #4294967295
 801d6dc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801d6e0:	2a02      	cmp	r2, #2
 801d6e2:	9304      	str	r3, [sp, #16]
 801d6e4:	f200 80c8 	bhi.w	801d878 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x298>
 801d6e8:	3101      	adds	r1, #1
 801d6ea:	9102      	str	r1, [sp, #8]
 801d6ec:	fa1f fb8b 	uxth.w	fp, fp
 801d6f0:	9b00      	ldr	r3, [sp, #0]
 801d6f2:	b1a3      	cbz	r3, 801d71e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x13e>
 801d6f4:	459b      	cmp	fp, r3
 801d6f6:	f080 80b6 	bcs.w	801d866 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x286>
 801d6fa:	eba3 0b0b 	sub.w	fp, r3, fp
 801d6fe:	fa1f f38b 	uxth.w	r3, fp
 801d702:	f04f 0b00 	mov.w	fp, #0
 801d706:	9300      	str	r3, [sp, #0]
 801d708:	9b03      	ldr	r3, [sp, #12]
 801d70a:	4543      	cmp	r3, r8
 801d70c:	d8dd      	bhi.n	801d6ca <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xea>
 801d70e:	4b64      	ldr	r3, [pc, #400]	@ (801d8a0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c0>)
 801d710:	6818      	ldr	r0, [r3, #0]
 801d712:	6803      	ldr	r3, [r0, #0]
 801d714:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d716:	4798      	blx	r3
 801d718:	b011      	add	sp, #68	@ 0x44
 801d71a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d71e:	2303      	movs	r3, #3
 801d720:	4619      	mov	r1, r3
 801d722:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801d724:	9b04      	ldr	r3, [sp, #16]
 801d726:	45cb      	cmp	fp, r9
 801d728:	fb11 2c03 	smlabb	ip, r1, r3, r2
 801d72c:	9b08      	ldr	r3, [sp, #32]
 801d72e:	449c      	add	ip, r3
 801d730:	d377      	bcc.n	801d822 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x242>
 801d732:	ebab 0309 	sub.w	r3, fp, r9
 801d736:	9a00      	ldr	r2, [sp, #0]
 801d738:	b29b      	uxth	r3, r3
 801d73a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801d73e:	9306      	str	r3, [sp, #24]
 801d740:	9207      	str	r2, [sp, #28]
 801d742:	464b      	mov	r3, r9
 801d744:	d077      	beq.n	801d836 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x256>
 801d746:	b303      	cbz	r3, 801d78a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1aa>
 801d748:	3b01      	subs	r3, #1
 801d74a:	b29b      	uxth	r3, r3
 801d74c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d74e:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 801d752:	9301      	str	r3, [sp, #4]
 801d754:	f1a8 0e04 	sub.w	lr, r8, #4
 801d758:	f85e 3f04 	ldr.w	r3, [lr, #4]!
 801d75c:	f89c 4000 	ldrb.w	r4, [ip]
 801d760:	0e18      	lsrs	r0, r3, #24
 801d762:	f89c 6001 	ldrb.w	r6, [ip, #1]
 801d766:	f89c 1002 	ldrb.w	r1, [ip, #2]
 801d76a:	d126      	bne.n	801d7ba <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1da>
 801d76c:	9b05      	ldr	r3, [sp, #20]
 801d76e:	431c      	orrs	r4, r3
 801d770:	9b01      	ldr	r3, [sp, #4]
 801d772:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 801d776:	ea44 2606 	orr.w	r6, r4, r6, lsl #8
 801d77a:	459e      	cmp	lr, r3
 801d77c:	f8ce 6000 	str.w	r6, [lr]
 801d780:	d1ea      	bne.n	801d758 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x178>
 801d782:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d784:	3301      	adds	r3, #1
 801d786:	eb08 0883 	add.w	r8, r8, r3, lsl #2
 801d78a:	45cb      	cmp	fp, r9
 801d78c:	d346      	bcc.n	801d81c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x23c>
 801d78e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801d790:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 801d794:	4b43      	ldr	r3, [pc, #268]	@ (801d8a4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c4>)
 801d796:	fa1f f981 	uxth.w	r9, r1
 801d79a:	eba2 0209 	sub.w	r2, r2, r9
 801d79e:	881b      	ldrh	r3, [r3, #0]
 801d7a0:	b292      	uxth	r2, r2
 801d7a2:	2a00      	cmp	r2, #0
 801d7a4:	eba3 0301 	sub.w	r3, r3, r1
 801d7a8:	f8dd b018 	ldr.w	fp, [sp, #24]
 801d7ac:	bf18      	it	ne
 801d7ae:	f04f 0900 	movne.w	r9, #0
 801d7b2:	9200      	str	r2, [sp, #0]
 801d7b4:	eb08 0883 	add.w	r8, r8, r3, lsl #2
 801d7b8:	e7a6      	b.n	801d708 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x128>
 801d7ba:	fb0a f200 	mul.w	r2, sl, r0
 801d7be:	fb1a f101 	smulbb	r1, sl, r1
 801d7c2:	1c55      	adds	r5, r2, #1
 801d7c4:	eb05 2522 	add.w	r5, r5, r2, asr #8
 801d7c8:	fb1a f404 	smulbb	r4, sl, r4
 801d7cc:	122d      	asrs	r5, r5, #8
 801d7ce:	fb1a f606 	smulbb	r6, sl, r6
 801d7d2:	1b47      	subs	r7, r0, r5
 801d7d4:	f3c3 4207 	ubfx	r2, r3, #16, #8
 801d7d8:	fb07 1102 	mla	r1, r7, r2, r1
 801d7dc:	b2da      	uxtb	r2, r3
 801d7de:	fb07 4402 	mla	r4, r7, r2, r4
 801d7e2:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801d7e6:	4450      	add	r0, sl
 801d7e8:	fb07 6202 	mla	r2, r7, r2, r6
 801d7ec:	1b45      	subs	r5, r0, r5
 801d7ee:	b2ed      	uxtb	r5, r5
 801d7f0:	fbb1 f3f5 	udiv	r3, r1, r5
 801d7f4:	fbb4 f4f5 	udiv	r4, r4, r5
 801d7f8:	fbb2 f2f5 	udiv	r2, r2, r5
 801d7fc:	041b      	lsls	r3, r3, #16
 801d7fe:	b2e4      	uxtb	r4, r4
 801d800:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 801d804:	ea44 6505 	orr.w	r5, r4, r5, lsl #24
 801d808:	0212      	lsls	r2, r2, #8
 801d80a:	432b      	orrs	r3, r5
 801d80c:	b292      	uxth	r2, r2
 801d80e:	4313      	orrs	r3, r2
 801d810:	f8ce 3000 	str.w	r3, [lr]
 801d814:	9b01      	ldr	r3, [sp, #4]
 801d816:	459e      	cmp	lr, r3
 801d818:	d19e      	bne.n	801d758 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x178>
 801d81a:	e7b2      	b.n	801d782 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1a2>
 801d81c:	e9dd b906 	ldrd	fp, r9, [sp, #24]
 801d820:	e772      	b.n	801d708 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x128>
 801d822:	9a00      	ldr	r2, [sp, #0]
 801d824:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801d828:	9206      	str	r2, [sp, #24]
 801d82a:	eba9 020b 	sub.w	r2, r9, fp
 801d82e:	b292      	uxth	r2, r2
 801d830:	465b      	mov	r3, fp
 801d832:	9207      	str	r2, [sp, #28]
 801d834:	d187      	bne.n	801d746 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x166>
 801d836:	2b00      	cmp	r3, #0
 801d838:	d0a7      	beq.n	801d78a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1aa>
 801d83a:	1e58      	subs	r0, r3, #1
 801d83c:	b280      	uxth	r0, r0
 801d83e:	3001      	adds	r0, #1
 801d840:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 801d844:	f89c 3000 	ldrb.w	r3, [ip]
 801d848:	f89c 1002 	ldrb.w	r1, [ip, #2]
 801d84c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801d850:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 801d854:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801d858:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801d85c:	f848 3b04 	str.w	r3, [r8], #4
 801d860:	4540      	cmp	r0, r8
 801d862:	d1ef      	bne.n	801d844 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x264>
 801d864:	e791      	b.n	801d78a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1aa>
 801d866:	ebab 0b03 	sub.w	fp, fp, r3
 801d86a:	2300      	movs	r3, #0
 801d86c:	fa1f fb8b 	uxth.w	fp, fp
 801d870:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 801d874:	9300      	str	r3, [sp, #0]
 801d876:	e747      	b.n	801d708 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x128>
 801d878:	460b      	mov	r3, r1
 801d87a:	3302      	adds	r3, #2
 801d87c:	f891 b001 	ldrb.w	fp, [r1, #1]
 801d880:	9302      	str	r3, [sp, #8]
 801d882:	e735      	b.n	801d6f0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x110>
 801d884:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 801d888:	b291      	uxth	r1, r2
 801d88a:	fb94 f3f1 	sdiv	r3, r4, r1
 801d88e:	e6cb      	b.n	801d628 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x48>
 801d890:	4b05      	ldr	r3, [pc, #20]	@ (801d8a8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c8>)
 801d892:	4a06      	ldr	r2, [pc, #24]	@ (801d8ac <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2cc>)
 801d894:	f640 6154 	movw	r1, #3668	@ 0xe54
 801d898:	4805      	ldr	r0, [pc, #20]	@ (801d8b0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d0>)
 801d89a:	f007 fa4b 	bl	8024d34 <__assert_func>
 801d89e:	bf00      	nop
 801d8a0:	2004bf98 	.word	0x2004bf98
 801d8a4:	2004bf92 	.word	0x2004bf92
 801d8a8:	08027a2c 	.word	0x08027a2c
 801d8ac:	08028bc0 	.word	0x08028bc0
 801d8b0:	08027928 	.word	0x08027928

0801d8b4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 801d8b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d8b8:	7814      	ldrb	r4, [r2, #0]
 801d8ba:	b09f      	sub	sp, #124	@ 0x7c
 801d8bc:	2c01      	cmp	r4, #1
 801d8be:	461d      	mov	r5, r3
 801d8c0:	9214      	str	r2, [sp, #80]	@ 0x50
 801d8c2:	9117      	str	r1, [sp, #92]	@ 0x5c
 801d8c4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d8c6:	f89d a0a4 	ldrb.w	sl, [sp, #164]	@ 0xa4
 801d8ca:	f040 8232 	bne.w	801dd32 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x47e>
 801d8ce:	6869      	ldr	r1, [r5, #4]
 801d8d0:	4683      	mov	fp, r0
 801d8d2:	6828      	ldr	r0, [r5, #0]
 801d8d4:	aa1a      	add	r2, sp, #104	@ 0x68
 801d8d6:	c203      	stmia	r2!, {r0, r1}
 801d8d8:	6818      	ldr	r0, [r3, #0]
 801d8da:	6859      	ldr	r1, [r3, #4]
 801d8dc:	aa1c      	add	r2, sp, #112	@ 0x70
 801d8de:	c203      	stmia	r2!, {r0, r1}
 801d8e0:	a81a      	add	r0, sp, #104	@ 0x68
 801d8e2:	f7f1 fd7d 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d8e6:	4629      	mov	r1, r5
 801d8e8:	a81c      	add	r0, sp, #112	@ 0x70
 801d8ea:	f7f1 fda1 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d8ee:	f9bd 206c 	ldrsh.w	r2, [sp, #108]	@ 0x6c
 801d8f2:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801d8f6:	f340 8214 	ble.w	801dd22 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x46e>
 801d8fa:	4623      	mov	r3, r4
 801d8fc:	b292      	uxth	r2, r2
 801d8fe:	9418      	str	r4, [sp, #96]	@ 0x60
 801d900:	f9bd 0072 	ldrsh.w	r0, [sp, #114]	@ 0x72
 801d904:	f9bd 106e 	ldrsh.w	r1, [sp, #110]	@ 0x6e
 801d908:	fb90 f4f3 	sdiv	r4, r0, r3
 801d90c:	4419      	add	r1, r3
 801d90e:	3901      	subs	r1, #1
 801d910:	fb91 f1f3 	sdiv	r1, r1, r3
 801d914:	b2a4      	uxth	r4, r4
 801d916:	fb03 0314 	mls	r3, r3, r4, r0
 801d91a:	9416      	str	r4, [sp, #88]	@ 0x58
 801d91c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 801d920:	f8bd 6068 	ldrh.w	r6, [sp, #104]	@ 0x68
 801d924:	fb13 4202 	smlabb	r2, r3, r2, r4
 801d928:	f8bd 506a 	ldrh.w	r5, [sp, #106]	@ 0x6a
 801d92c:	4bae      	ldr	r3, [pc, #696]	@ (801dbe8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x334>)
 801d92e:	4434      	add	r4, r6
 801d930:	4405      	add	r5, r0
 801d932:	6818      	ldr	r0, [r3, #0]
 801d934:	f8ad 4070 	strh.w	r4, [sp, #112]	@ 0x70
 801d938:	f8ad 5072 	strh.w	r5, [sp, #114]	@ 0x72
 801d93c:	f9bd 7074 	ldrsh.w	r7, [sp, #116]	@ 0x74
 801d940:	6803      	ldr	r3, [r0, #0]
 801d942:	b296      	uxth	r6, r2
 801d944:	3101      	adds	r1, #1
 801d946:	9602      	str	r6, [sp, #8]
 801d948:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d94a:	970d      	str	r7, [sp, #52]	@ 0x34
 801d94c:	b28c      	uxth	r4, r1
 801d94e:	f9bd 5076 	ldrsh.w	r5, [sp, #118]	@ 0x76
 801d952:	4798      	blx	r3
 801d954:	2300      	movs	r3, #0
 801d956:	2e00      	cmp	r6, #0
 801d958:	bf0c      	ite	eq
 801d95a:	463a      	moveq	r2, r7
 801d95c:	2200      	movne	r2, #0
 801d95e:	49a3      	ldr	r1, [pc, #652]	@ (801dbec <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x338>)
 801d960:	9315      	str	r3, [sp, #84]	@ 0x54
 801d962:	8809      	ldrh	r1, [r1, #0]
 801d964:	f9bd 3072 	ldrsh.w	r3, [sp, #114]	@ 0x72
 801d968:	f9bd 6070 	ldrsh.w	r6, [sp, #112]	@ 0x70
 801d96c:	fb05 f501 	mul.w	r5, r5, r1
 801d970:	fb01 6303 	mla	r3, r1, r3, r6
 801d974:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 801d978:	9301      	str	r3, [sp, #4]
 801d97a:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 801d97e:	9308      	str	r3, [sp, #32]
 801d980:	b293      	uxth	r3, r2
 801d982:	9303      	str	r3, [sp, #12]
 801d984:	ea4f 630a 	mov.w	r3, sl, lsl #24
 801d988:	930a      	str	r3, [sp, #40]	@ 0x28
 801d98a:	f10b 030a 	add.w	r3, fp, #10
 801d98e:	9319      	str	r3, [sp, #100]	@ 0x64
 801d990:	4653      	mov	r3, sl
 801d992:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801d994:	46da      	mov	sl, fp
 801d996:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801d99a:	f104 0904 	add.w	r9, r4, #4
 801d99e:	46cb      	mov	fp, r9
 801d9a0:	4699      	mov	r9, r3
 801d9a2:	9b01      	ldr	r3, [sp, #4]
 801d9a4:	9a08      	ldr	r2, [sp, #32]
 801d9a6:	4293      	cmp	r3, r2
 801d9a8:	f080 8116 	bcs.w	801dbd8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x324>
 801d9ac:	2601      	movs	r6, #1
 801d9ae:	2700      	movs	r7, #0
 801d9b0:	9b02      	ldr	r3, [sp, #8]
 801d9b2:	f8bd 106c 	ldrh.w	r1, [sp, #108]	@ 0x6c
 801d9b6:	46bc      	mov	ip, r7
 801d9b8:	fbb3 f1f1 	udiv	r1, r3, r1
 801d9bc:	e9dd 3215 	ldrd	r3, r2, [sp, #84]	@ 0x54
 801d9c0:	fa12 f283 	uxtah	r2, r2, r3
 801d9c4:	0092      	lsls	r2, r2, #2
 801d9c6:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801d9c8:	3204      	adds	r2, #4
 801d9ca:	1898      	adds	r0, r3, r2
 801d9cc:	7883      	ldrb	r3, [r0, #2]
 801d9ce:	7845      	ldrb	r5, [r0, #1]
 801d9d0:	021b      	lsls	r3, r3, #8
 801d9d2:	78c0      	ldrb	r0, [r0, #3]
 801d9d4:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 801d9d8:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
 801d9da:	4304      	orrs	r4, r0
 801d9dc:	4628      	mov	r0, r5
 801d9de:	46b0      	mov	r8, r6
 801d9e0:	4420      	add	r0, r4
 801d9e2:	7843      	ldrb	r3, [r0, #1]
 801d9e4:	5d2c      	ldrb	r4, [r5, r4]
 801d9e6:	021b      	lsls	r3, r3, #8
 801d9e8:	f403 73ff 	and.w	r3, r3, #510	@ 0x1fe
 801d9ec:	431c      	orrs	r4, r3
 801d9ee:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801d9f0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801d9f2:	5caa      	ldrb	r2, [r5, r2]
 801d9f4:	1a59      	subs	r1, r3, r1
 801d9f6:	b2a3      	uxth	r3, r4
 801d9f8:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d9fa:	1983      	adds	r3, r0, r6
 801d9fc:	9306      	str	r3, [sp, #24]
 801d9fe:	1993      	adds	r3, r2, r6
 801da00:	9307      	str	r3, [sp, #28]
 801da02:	b28b      	uxth	r3, r1
 801da04:	9710      	str	r7, [sp, #64]	@ 0x40
 801da06:	960c      	str	r6, [sp, #48]	@ 0x30
 801da08:	920f      	str	r2, [sp, #60]	@ 0x3c
 801da0a:	f88a 4009 	strb.w	r4, [sl, #9]
 801da0e:	9313      	str	r3, [sp, #76]	@ 0x4c
 801da10:	9605      	str	r6, [sp, #20]
 801da12:	9b02      	ldr	r3, [sp, #8]
 801da14:	2b00      	cmp	r3, #0
 801da16:	d038      	beq.n	801da8a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d6>
 801da18:	4598      	cmp	r8, r3
 801da1a:	f080 813f 	bcs.w	801dc9c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3e8>
 801da1e:	eba3 0808 	sub.w	r8, r3, r8
 801da22:	fa1f f388 	uxth.w	r3, r8
 801da26:	9302      	str	r3, [sp, #8]
 801da28:	9a08      	ldr	r2, [sp, #32]
 801da2a:	9b01      	ldr	r3, [sp, #4]
 801da2c:	4293      	cmp	r3, r2
 801da2e:	f080 80d3 	bcs.w	801dbd8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x324>
 801da32:	9806      	ldr	r0, [sp, #24]
 801da34:	9c05      	ldr	r4, [sp, #20]
 801da36:	7842      	ldrb	r2, [r0, #1]
 801da38:	f1c4 0107 	rsb	r1, r4, #7
 801da3c:	7803      	ldrb	r3, [r0, #0]
 801da3e:	408a      	lsls	r2, r1
 801da40:	0052      	lsls	r2, r2, #1
 801da42:	4123      	asrs	r3, r4
 801da44:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801da48:	1c61      	adds	r1, r4, #1
 801da4a:	b2db      	uxtb	r3, r3
 801da4c:	4313      	orrs	r3, r2
 801da4e:	b2ca      	uxtb	r2, r1
 801da50:	4611      	mov	r1, r2
 801da52:	2908      	cmp	r1, #8
 801da54:	9205      	str	r2, [sp, #20]
 801da56:	b29a      	uxth	r2, r3
 801da58:	f000 812d 	beq.w	801dcb6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x402>
 801da5c:	3001      	adds	r0, #1
 801da5e:	9006      	str	r0, [sp, #24]
 801da60:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801da62:	4291      	cmp	r1, r2
 801da64:	f0c0 80fa 	bcc.w	801dc5c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3a8>
 801da68:	f04f 0801 	mov.w	r8, #1
 801da6c:	b2db      	uxtb	r3, r3
 801da6e:	f88a 3009 	strb.w	r3, [sl, #9]
 801da72:	9907      	ldr	r1, [sp, #28]
 801da74:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801da78:	f0c0 8123 	bcc.w	801dcc2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x40e>
 801da7c:	9b02      	ldr	r3, [sp, #8]
 801da7e:	e9cd 280b 	strd	r2, r8, [sp, #44]	@ 0x2c
 801da82:	f04f 0c00 	mov.w	ip, #0
 801da86:	2b00      	cmp	r3, #0
 801da88:	d1c6      	bne.n	801da18 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x164>
 801da8a:	9b03      	ldr	r3, [sp, #12]
 801da8c:	4598      	cmp	r8, r3
 801da8e:	461a      	mov	r2, r3
 801da90:	f0c0 80ae 	bcc.w	801dbf0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x33c>
 801da94:	eba8 0303 	sub.w	r3, r8, r3
 801da98:	b29b      	uxth	r3, r3
 801da9a:	9309      	str	r3, [sp, #36]	@ 0x24
 801da9c:	9b02      	ldr	r3, [sp, #8]
 801da9e:	9204      	str	r2, [sp, #16]
 801daa0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801daa4:	930e      	str	r3, [sp, #56]	@ 0x38
 801daa6:	9b04      	ldr	r3, [sp, #16]
 801daa8:	f000 80b0 	beq.w	801dc0c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x358>
 801daac:	b393      	cbz	r3, 801db14 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>
 801daae:	4463      	add	r3, ip
 801dab0:	b29b      	uxth	r3, r3
 801dab2:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 801dab6:	4698      	mov	r8, r3
 801dab8:	9a01      	ldr	r2, [sp, #4]
 801daba:	9311      	str	r3, [sp, #68]	@ 0x44
 801dabc:	f1a2 0e04 	sub.w	lr, r2, #4
 801dac0:	eb0a 030c 	add.w	r3, sl, ip
 801dac4:	7a5a      	ldrb	r2, [r3, #9]
 801dac6:	f85e 3f04 	ldr.w	r3, [lr, #4]!
 801daca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801dace:	eb0b 0102 	add.w	r1, fp, r2
 801dad2:	f10c 0c01 	add.w	ip, ip, #1
 801dad6:	f81b 0002 	ldrb.w	r0, [fp, r2]
 801dada:	784d      	ldrb	r5, [r1, #1]
 801dadc:	788a      	ldrb	r2, [r1, #2]
 801dade:	0e19      	lsrs	r1, r3, #24
 801dae0:	fa1f fc8c 	uxth.w	ip, ip
 801dae4:	d13f      	bne.n	801db66 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b2>
 801dae6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801dae8:	45c4      	cmp	ip, r8
 801daea:	ea40 0003 	orr.w	r0, r0, r3
 801daee:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 801daf2:	ea40 2505 	orr.w	r5, r0, r5, lsl #8
 801daf6:	f8ce 5000 	str.w	r5, [lr]
 801dafa:	d1e1      	bne.n	801dac0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 801dafc:	9b04      	ldr	r3, [sp, #16]
 801dafe:	9a01      	ldr	r2, [sp, #4]
 801db00:	3b01      	subs	r3, #1
 801db02:	b29b      	uxth	r3, r3
 801db04:	3301      	adds	r3, #1
 801db06:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801db0a:	f8dd 8048 	ldr.w	r8, [sp, #72]	@ 0x48
 801db0e:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 801db12:	9301      	str	r3, [sp, #4]
 801db14:	9b03      	ldr	r3, [sp, #12]
 801db16:	4598      	cmp	r8, r3
 801db18:	d356      	bcc.n	801dbc8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x314>
 801db1a:	4b34      	ldr	r3, [pc, #208]	@ (801dbec <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x338>)
 801db1c:	990d      	ldr	r1, [sp, #52]	@ 0x34
 801db1e:	881b      	ldrh	r3, [r3, #0]
 801db20:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801db22:	1a5b      	subs	r3, r3, r1
 801db24:	9901      	ldr	r1, [sp, #4]
 801db26:	3201      	adds	r2, #1
 801db28:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801db2c:	9301      	str	r3, [sp, #4]
 801db2e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801db30:	9210      	str	r2, [sp, #64]	@ 0x40
 801db32:	4293      	cmp	r3, r2
 801db34:	f000 80e4 	beq.w	801dd00 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x44c>
 801db38:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 801db3c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801db40:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 801db44:	1a9b      	subs	r3, r3, r2
 801db46:	b29b      	uxth	r3, r3
 801db48:	2b00      	cmp	r3, #0
 801db4a:	bf14      	ite	ne
 801db4c:	2200      	movne	r2, #0
 801db4e:	2300      	moveq	r3, #0
 801db50:	9203      	str	r2, [sp, #12]
 801db52:	9302      	str	r3, [sp, #8]
 801db54:	9b01      	ldr	r3, [sp, #4]
 801db56:	9a08      	ldr	r2, [sp, #32]
 801db58:	4293      	cmp	r3, r2
 801db5a:	d23d      	bcs.n	801dbd8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x324>
 801db5c:	f1b8 0f00 	cmp.w	r8, #0
 801db60:	f47f af57 	bne.w	801da12 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x15e>
 801db64:	e765      	b.n	801da32 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x17e>
 801db66:	fb09 f601 	mul.w	r6, r9, r1
 801db6a:	fb19 f702 	smulbb	r7, r9, r2
 801db6e:	1c74      	adds	r4, r6, #1
 801db70:	eb04 2426 	add.w	r4, r4, r6, asr #8
 801db74:	fb19 f000 	smulbb	r0, r9, r0
 801db78:	1224      	asrs	r4, r4, #8
 801db7a:	fb19 f505 	smulbb	r5, r9, r5
 801db7e:	1b0e      	subs	r6, r1, r4
 801db80:	f3c3 4207 	ubfx	r2, r3, #16, #8
 801db84:	fb06 7202 	mla	r2, r6, r2, r7
 801db88:	b2df      	uxtb	r7, r3
 801db8a:	fb06 0007 	mla	r0, r6, r7, r0
 801db8e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801db92:	fb06 5503 	mla	r5, r6, r3, r5
 801db96:	4449      	add	r1, r9
 801db98:	1b09      	subs	r1, r1, r4
 801db9a:	b2c9      	uxtb	r1, r1
 801db9c:	fbb2 f2f1 	udiv	r2, r2, r1
 801dba0:	fbb0 f0f1 	udiv	r0, r0, r1
 801dba4:	fbb5 f5f1 	udiv	r5, r5, r1
 801dba8:	0413      	lsls	r3, r2, #16
 801dbaa:	b2c0      	uxtb	r0, r0
 801dbac:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 801dbb0:	ea40 6101 	orr.w	r1, r0, r1, lsl #24
 801dbb4:	022d      	lsls	r5, r5, #8
 801dbb6:	430b      	orrs	r3, r1
 801dbb8:	b2ad      	uxth	r5, r5
 801dbba:	432b      	orrs	r3, r5
 801dbbc:	45c4      	cmp	ip, r8
 801dbbe:	f8ce 3000 	str.w	r3, [lr]
 801dbc2:	f47f af7d 	bne.w	801dac0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 801dbc6:	e799      	b.n	801dafc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x248>
 801dbc8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801dbca:	9a08      	ldr	r2, [sp, #32]
 801dbcc:	9303      	str	r3, [sp, #12]
 801dbce:	9b01      	ldr	r3, [sp, #4]
 801dbd0:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 801dbd4:	4293      	cmp	r3, r2
 801dbd6:	d3c1      	bcc.n	801db5c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a8>
 801dbd8:	4b03      	ldr	r3, [pc, #12]	@ (801dbe8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x334>)
 801dbda:	6818      	ldr	r0, [r3, #0]
 801dbdc:	6803      	ldr	r3, [r0, #0]
 801dbde:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801dbe0:	4798      	blx	r3
 801dbe2:	b01f      	add	sp, #124	@ 0x7c
 801dbe4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dbe8:	2004bf98 	.word	0x2004bf98
 801dbec:	2004bf92 	.word	0x2004bf92
 801dbf0:	9b02      	ldr	r3, [sp, #8]
 801dbf2:	f8cd 8010 	str.w	r8, [sp, #16]
 801dbf6:	9309      	str	r3, [sp, #36]	@ 0x24
 801dbf8:	9b03      	ldr	r3, [sp, #12]
 801dbfa:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801dbfe:	eba3 0308 	sub.w	r3, r3, r8
 801dc02:	b29b      	uxth	r3, r3
 801dc04:	930e      	str	r3, [sp, #56]	@ 0x38
 801dc06:	9b04      	ldr	r3, [sp, #16]
 801dc08:	f47f af50 	bne.w	801daac <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1f8>
 801dc0c:	2b00      	cmp	r3, #0
 801dc0e:	d081      	beq.n	801db14 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>
 801dc10:	eb0c 0003 	add.w	r0, ip, r3
 801dc14:	9901      	ldr	r1, [sp, #4]
 801dc16:	b280      	uxth	r0, r0
 801dc18:	eb0a 030c 	add.w	r3, sl, ip
 801dc1c:	7a5b      	ldrb	r3, [r3, #9]
 801dc1e:	f10c 0c01 	add.w	ip, ip, #1
 801dc22:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801dc26:	eb0b 0203 	add.w	r2, fp, r3
 801dc2a:	f81b 3003 	ldrb.w	r3, [fp, r3]
 801dc2e:	7894      	ldrb	r4, [r2, #2]
 801dc30:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 801dc34:	7852      	ldrb	r2, [r2, #1]
 801dc36:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 801dc3a:	fa1f fc8c 	uxth.w	ip, ip
 801dc3e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801dc42:	4584      	cmp	ip, r0
 801dc44:	f841 3b04 	str.w	r3, [r1], #4
 801dc48:	d1e6      	bne.n	801dc18 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x364>
 801dc4a:	9b04      	ldr	r3, [sp, #16]
 801dc4c:	9a01      	ldr	r2, [sp, #4]
 801dc4e:	3b01      	subs	r3, #1
 801dc50:	b29b      	uxth	r3, r3
 801dc52:	3301      	adds	r3, #1
 801dc54:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801dc58:	9301      	str	r3, [sp, #4]
 801dc5a:	e75b      	b.n	801db14 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>
 801dc5c:	9b07      	ldr	r3, [sp, #28]
 801dc5e:	4293      	cmp	r3, r2
 801dc60:	d832      	bhi.n	801dcc8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x414>
 801dc62:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801dc64:	f89a 1009 	ldrb.w	r1, [sl, #9]
 801dc68:	eb0a 0300 	add.w	r3, sl, r0
 801dc6c:	7259      	strb	r1, [r3, #9]
 801dc6e:	f89a 3009 	ldrb.w	r3, [sl, #9]
 801dc72:	1c41      	adds	r1, r0, #1
 801dc74:	fa1f f881 	uxth.w	r8, r1
 801dc78:	9c07      	ldr	r4, [sp, #28]
 801dc7a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801dc7c:	eb0a 0084 	add.w	r0, sl, r4, lsl #2
 801dc80:	3401      	adds	r4, #1
 801dc82:	f880 304a 	strb.w	r3, [r0, #74]	@ 0x4a
 801dc86:	b2a3      	uxth	r3, r4
 801dc88:	f8a0 504c 	strh.w	r5, [r0, #76]	@ 0x4c
 801dc8c:	f880 104b 	strb.w	r1, [r0, #75]	@ 0x4b
 801dc90:	9307      	str	r3, [sp, #28]
 801dc92:	e9cd 280b 	strd	r2, r8, [sp, #44]	@ 0x2c
 801dc96:	f04f 0c00 	mov.w	ip, #0
 801dc9a:	e6ba      	b.n	801da12 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x15e>
 801dc9c:	eba8 0803 	sub.w	r8, r8, r3
 801dca0:	449c      	add	ip, r3
 801dca2:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 801dca6:	fa1f f888 	uxth.w	r8, r8
 801dcaa:	9303      	str	r3, [sp, #12]
 801dcac:	2300      	movs	r3, #0
 801dcae:	fa1f fc8c 	uxth.w	ip, ip
 801dcb2:	9302      	str	r3, [sp, #8]
 801dcb4:	e74e      	b.n	801db54 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a0>
 801dcb6:	2100      	movs	r1, #0
 801dcb8:	9105      	str	r1, [sp, #20]
 801dcba:	9906      	ldr	r1, [sp, #24]
 801dcbc:	3102      	adds	r1, #2
 801dcbe:	9106      	str	r1, [sp, #24]
 801dcc0:	e6ce      	b.n	801da60 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ac>
 801dcc2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801dcc4:	3101      	adds	r1, #1
 801dcc6:	e7d7      	b.n	801dc78 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3c4>
 801dcc8:	eb0a 0382 	add.w	r3, sl, r2, lsl #2
 801dccc:	f893 804b 	ldrb.w	r8, [r3, #75]	@ 0x4b
 801dcd0:	4613      	mov	r3, r2
 801dcd2:	f1b8 0f01 	cmp.w	r8, #1
 801dcd6:	d90d      	bls.n	801dcf4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x440>
 801dcd8:	f108 0109 	add.w	r1, r8, #9
 801dcdc:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 801dcde:	4451      	add	r1, sl
 801dce0:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801dce4:	f893 004a 	ldrb.w	r0, [r3, #74]	@ 0x4a
 801dce8:	f801 0d01 	strb.w	r0, [r1, #-1]!
 801dcec:	428c      	cmp	r4, r1
 801dcee:	f8b3 304c 	ldrh.w	r3, [r3, #76]	@ 0x4c
 801dcf2:	d1f5      	bne.n	801dce0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x42c>
 801dcf4:	b2db      	uxtb	r3, r3
 801dcf6:	f88a 3009 	strb.w	r3, [sl, #9]
 801dcfa:	fa1f f888 	uxth.w	r8, r8
 801dcfe:	e6b8      	b.n	801da72 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1be>
 801dd00:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801dd04:	f8bd 2068 	ldrh.w	r2, [sp, #104]	@ 0x68
 801dd08:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801dd0a:	1a9b      	subs	r3, r3, r2
 801dd0c:	b29b      	uxth	r3, r3
 801dd0e:	2b00      	cmp	r3, #0
 801dd10:	9302      	str	r3, [sp, #8]
 801dd12:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801dd14:	bf18      	it	ne
 801dd16:	2300      	movne	r3, #0
 801dd18:	3101      	adds	r1, #1
 801dd1a:	b29b      	uxth	r3, r3
 801dd1c:	9115      	str	r1, [sp, #84]	@ 0x54
 801dd1e:	9303      	str	r3, [sp, #12]
 801dd20:	e63f      	b.n	801d9a2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xee>
 801dd22:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801dd26:	b292      	uxth	r2, r2
 801dd28:	fb93 f3f2 	sdiv	r3, r3, r2
 801dd2c:	b299      	uxth	r1, r3
 801dd2e:	9118      	str	r1, [sp, #96]	@ 0x60
 801dd30:	e5e6      	b.n	801d900 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x4c>
 801dd32:	4b03      	ldr	r3, [pc, #12]	@ (801dd40 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x48c>)
 801dd34:	4a03      	ldr	r2, [pc, #12]	@ (801dd44 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x490>)
 801dd36:	f640 61f3 	movw	r1, #3827	@ 0xef3
 801dd3a:	4803      	ldr	r0, [pc, #12]	@ (801dd48 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x494>)
 801dd3c:	f006 fffa 	bl	8024d34 <__assert_func>
 801dd40:	08027a2c 	.word	0x08027a2c
 801dd44:	08028f1c 	.word	0x08028f1c
 801dd48:	08027928 	.word	0x08027928

0801dd4c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 801dd4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd50:	4617      	mov	r7, r2
 801dd52:	8812      	ldrh	r2, [r2, #0]
 801dd54:	b095      	sub	sp, #84	@ 0x54
 801dd56:	461c      	mov	r4, r3
 801dd58:	f89d 907c 	ldrb.w	r9, [sp, #124]	@ 0x7c
 801dd5c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801dd5e:	2a00      	cmp	r2, #0
 801dd60:	f040 8112 	bne.w	801df88 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x23c>
 801dd64:	4688      	mov	r8, r1
 801dd66:	6820      	ldr	r0, [r4, #0]
 801dd68:	6861      	ldr	r1, [r4, #4]
 801dd6a:	aa10      	add	r2, sp, #64	@ 0x40
 801dd6c:	c203      	stmia	r2!, {r0, r1}
 801dd6e:	6818      	ldr	r0, [r3, #0]
 801dd70:	6859      	ldr	r1, [r3, #4]
 801dd72:	aa12      	add	r2, sp, #72	@ 0x48
 801dd74:	c203      	stmia	r2!, {r0, r1}
 801dd76:	a810      	add	r0, sp, #64	@ 0x40
 801dd78:	f7f1 fb32 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dd7c:	4621      	mov	r1, r4
 801dd7e:	a812      	add	r0, sp, #72	@ 0x48
 801dd80:	f7f1 fb56 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dd84:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 801dd88:	f9bd 504a 	ldrsh.w	r5, [sp, #74]	@ 0x4a
 801dd8c:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 801dd90:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 801dd94:	f8bd 3042 	ldrh.w	r3, [sp, #66]	@ 0x42
 801dd98:	487f      	ldr	r0, [pc, #508]	@ (801df98 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 801dd9a:	fb11 4105 	smlabb	r1, r1, r5, r4
 801dd9e:	4422      	add	r2, r4
 801dda0:	442b      	add	r3, r5
 801dda2:	6800      	ldr	r0, [r0, #0]
 801dda4:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 801dda8:	f8ad 2048 	strh.w	r2, [sp, #72]	@ 0x48
 801ddac:	6802      	ldr	r2, [r0, #0]
 801ddae:	4488      	add	r8, r1
 801ddb0:	f9bd 104c 	ldrsh.w	r1, [sp, #76]	@ 0x4c
 801ddb4:	4c79      	ldr	r4, [pc, #484]	@ (801df9c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x250>)
 801ddb6:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 801ddba:	910c      	str	r1, [sp, #48]	@ 0x30
 801ddbc:	f9bd 104e 	ldrsh.w	r1, [sp, #78]	@ 0x4e
 801ddc0:	42a3      	cmp	r3, r4
 801ddc2:	910e      	str	r1, [sp, #56]	@ 0x38
 801ddc4:	f040 80ab 	bne.w	801df1e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 801ddc8:	6841      	ldr	r1, [r0, #4]
 801ddca:	4c75      	ldr	r4, [pc, #468]	@ (801dfa0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x254>)
 801ddcc:	680b      	ldr	r3, [r1, #0]
 801ddce:	699b      	ldr	r3, [r3, #24]
 801ddd0:	42a3      	cmp	r3, r4
 801ddd2:	f040 80cb 	bne.w	801df6c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x220>
 801ddd6:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 801ddd8:	4798      	blx	r3
 801ddda:	4b72      	ldr	r3, [pc, #456]	@ (801dfa4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 801dddc:	f9bd 104a 	ldrsh.w	r1, [sp, #74]	@ 0x4a
 801dde0:	881b      	ldrh	r3, [r3, #0]
 801dde2:	f9bd 2048 	ldrsh.w	r2, [sp, #72]	@ 0x48
 801dde6:	fb01 2303 	mla	r3, r1, r3, r2
 801ddea:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 801ddee:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ddf0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ddf2:	2b00      	cmp	r3, #0
 801ddf4:	f340 808b 	ble.w	801df0e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c2>
 801ddf8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ddfa:	2b00      	cmp	r3, #0
 801ddfc:	f340 8087 	ble.w	801df0e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c2>
 801de00:	2200      	movs	r2, #0
 801de02:	f04f 0c04 	mov.w	ip, #4
 801de06:	009b      	lsls	r3, r3, #2
 801de08:	920d      	str	r2, [sp, #52]	@ 0x34
 801de0a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801de0c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801de0e:	4645      	mov	r5, r8
 801de10:	1d1c      	adds	r4, r3, #4
 801de12:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801de14:	eb08 0e03 	add.w	lr, r8, r3
 801de18:	e048      	b.n	801deac <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x160>
 801de1a:	fb09 f303 	mul.w	r3, r9, r3
 801de1e:	1c5a      	adds	r2, r3, #1
 801de20:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801de24:	121b      	asrs	r3, r3, #8
 801de26:	b2d8      	uxtb	r0, r3
 801de28:	43c1      	mvns	r1, r0
 801de2a:	b29b      	uxth	r3, r3
 801de2c:	fb1a f203 	smulbb	r2, sl, r3
 801de30:	f814 ac04 	ldrb.w	sl, [r4, #-4]
 801de34:	b2c9      	uxtb	r1, r1
 801de36:	fb0a 2a01 	mla	sl, sl, r1, r2
 801de3a:	fa1f fa8a 	uxth.w	sl, sl
 801de3e:	f814 2c03 	ldrb.w	r2, [r4, #-3]
 801de42:	f10a 0b01 	add.w	fp, sl, #1
 801de46:	eb0b 2a1a 	add.w	sl, fp, sl, lsr #8
 801de4a:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 801de4e:	fb12 fb01 	smulbb	fp, r2, r1
 801de52:	f804 ac04 	strb.w	sl, [r4, #-4]
 801de56:	7872      	ldrb	r2, [r6, #1]
 801de58:	f814 ac02 	ldrb.w	sl, [r4, #-2]
 801de5c:	fb02 b203 	mla	r2, r2, r3, fp
 801de60:	b292      	uxth	r2, r2
 801de62:	f102 0b01 	add.w	fp, r2, #1
 801de66:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801de6a:	fb1a fa01 	smulbb	sl, sl, r1
 801de6e:	1212      	asrs	r2, r2, #8
 801de70:	f804 2c03 	strb.w	r2, [r4, #-3]
 801de74:	78b1      	ldrb	r1, [r6, #2]
 801de76:	f814 2c01 	ldrb.w	r2, [r4, #-1]
 801de7a:	fb01 a103 	mla	r1, r1, r3, sl
 801de7e:	fb12 f303 	smulbb	r3, r2, r3
 801de82:	b289      	uxth	r1, r1
 801de84:	b29b      	uxth	r3, r3
 801de86:	f101 0a01 	add.w	sl, r1, #1
 801de8a:	1c5e      	adds	r6, r3, #1
 801de8c:	eb0a 2111 	add.w	r1, sl, r1, lsr #8
 801de90:	4402      	add	r2, r0
 801de92:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 801de96:	1209      	asrs	r1, r1, #8
 801de98:	eba2 2313 	sub.w	r3, r2, r3, lsr #8
 801de9c:	f804 1c02 	strb.w	r1, [r4, #-2]
 801dea0:	f804 3c01 	strb.w	r3, [r4, #-1]
 801dea4:	45ae      	cmp	lr, r5
 801dea6:	f104 0404 	add.w	r4, r4, #4
 801deaa:	d01c      	beq.n	801dee6 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x19a>
 801deac:	f815 2b01 	ldrb.w	r2, [r5], #1
 801deb0:	fb1c c202 	smlabb	r2, ip, r2, ip
 801deb4:	18be      	adds	r6, r7, r2
 801deb6:	78f3      	ldrb	r3, [r6, #3]
 801deb8:	2b00      	cmp	r3, #0
 801deba:	d0f3      	beq.n	801dea4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x158>
 801debc:	2bff      	cmp	r3, #255	@ 0xff
 801debe:	f817 a002 	ldrb.w	sl, [r7, r2]
 801dec2:	d1aa      	bne.n	801de1a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xce>
 801dec4:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801dec8:	d1a7      	bne.n	801de1a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xce>
 801deca:	f804 ac04 	strb.w	sl, [r4, #-4]
 801dece:	7873      	ldrb	r3, [r6, #1]
 801ded0:	45ae      	cmp	lr, r5
 801ded2:	f804 3c03 	strb.w	r3, [r4, #-3]
 801ded6:	78b3      	ldrb	r3, [r6, #2]
 801ded8:	f104 0404 	add.w	r4, r4, #4
 801dedc:	f804 9c05 	strb.w	r9, [r4, #-5]
 801dee0:	f804 3c06 	strb.w	r3, [r4, #-6]
 801dee4:	d1e2      	bne.n	801deac <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x160>
 801dee6:	4b2f      	ldr	r3, [pc, #188]	@ (801dfa4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 801dee8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801deea:	881b      	ldrh	r3, [r3, #0]
 801deec:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801deee:	1a5b      	subs	r3, r3, r1
 801def0:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 801def4:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801def6:	990d      	ldr	r1, [sp, #52]	@ 0x34
 801def8:	4418      	add	r0, r3
 801defa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801defc:	3101      	adds	r1, #1
 801defe:	f9bd 2044 	ldrsh.w	r2, [sp, #68]	@ 0x44
 801df02:	428b      	cmp	r3, r1
 801df04:	910d      	str	r1, [sp, #52]	@ 0x34
 801df06:	900b      	str	r0, [sp, #44]	@ 0x2c
 801df08:	4490      	add	r8, r2
 801df0a:	f47f af7f 	bne.w	801de0c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xc0>
 801df0e:	4b22      	ldr	r3, [pc, #136]	@ (801df98 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 801df10:	6818      	ldr	r0, [r3, #0]
 801df12:	6803      	ldr	r3, [r0, #0]
 801df14:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801df16:	4798      	blx	r3
 801df18:	b015      	add	sp, #84	@ 0x54
 801df1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801df1e:	4798      	blx	r3
 801df20:	4603      	mov	r3, r0
 801df22:	2b01      	cmp	r3, #1
 801df24:	d126      	bne.n	801df74 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x228>
 801df26:	4a20      	ldr	r2, [pc, #128]	@ (801dfa8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 801df28:	6810      	ldr	r0, [r2, #0]
 801df2a:	b338      	cbz	r0, 801df7c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x230>
 801df2c:	f04f 0c02 	mov.w	ip, #2
 801df30:	260b      	movs	r6, #11
 801df32:	4a1c      	ldr	r2, [pc, #112]	@ (801dfa4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 801df34:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 801df38:	8814      	ldrh	r4, [r2, #0]
 801df3a:	f8bd 5044 	ldrh.w	r5, [sp, #68]	@ 0x44
 801df3e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 801df42:	9406      	str	r4, [sp, #24]
 801df44:	f8bd 404a 	ldrh.w	r4, [sp, #74]	@ 0x4a
 801df48:	e9cd 2101 	strd	r2, r1, [sp, #4]
 801df4c:	9305      	str	r3, [sp, #20]
 801df4e:	f8cd 9010 	str.w	r9, [sp, #16]
 801df52:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801df56:	463a      	mov	r2, r7
 801df58:	4641      	mov	r1, r8
 801df5a:	e9cd 6c07 	strd	r6, ip, [sp, #28]
 801df5e:	9503      	str	r5, [sp, #12]
 801df60:	9400      	str	r4, [sp, #0]
 801df62:	f7f7 f9a7 	bl	80152b4 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 801df66:	b015      	add	sp, #84	@ 0x54
 801df68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801df6c:	4608      	mov	r0, r1
 801df6e:	4798      	blx	r3
 801df70:	4603      	mov	r3, r0
 801df72:	e7d6      	b.n	801df22 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d6>
 801df74:	4b08      	ldr	r3, [pc, #32]	@ (801df98 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 801df76:	6818      	ldr	r0, [r3, #0]
 801df78:	6802      	ldr	r2, [r0, #0]
 801df7a:	e72c      	b.n	801ddd6 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 801df7c:	4b0b      	ldr	r3, [pc, #44]	@ (801dfac <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>)
 801df7e:	4a0c      	ldr	r2, [pc, #48]	@ (801dfb0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x264>)
 801df80:	217c      	movs	r1, #124	@ 0x7c
 801df82:	480c      	ldr	r0, [pc, #48]	@ (801dfb4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x268>)
 801df84:	f006 fed6 	bl	8024d34 <__assert_func>
 801df88:	4b0b      	ldr	r3, [pc, #44]	@ (801dfb8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x26c>)
 801df8a:	4a0c      	ldr	r2, [pc, #48]	@ (801dfbc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x270>)
 801df8c:	f640 71db 	movw	r1, #4059	@ 0xfdb
 801df90:	480b      	ldr	r0, [pc, #44]	@ (801dfc0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x274>)
 801df92:	f006 fecf 	bl	8024d34 <__assert_func>
 801df96:	bf00      	nop
 801df98:	2004bf98 	.word	0x2004bf98
 801df9c:	08001829 	.word	0x08001829
 801dfa0:	0800e31d 	.word	0x0800e31d
 801dfa4:	2004bf92 	.word	0x2004bf92
 801dfa8:	2004c150 	.word	0x2004c150
 801dfac:	08027884 	.word	0x08027884
 801dfb0:	08028130 	.word	0x08028130
 801dfb4:	080278ac 	.word	0x080278ac
 801dfb8:	080279dc 	.word	0x080279dc
 801dfbc:	08028878 	.word	0x08028878
 801dfc0:	08027928 	.word	0x08027928

0801dfc4 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh>:
 801dfc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801dfc8:	f89d 0018 	ldrb.w	r0, [sp, #24]
 801dfcc:	fb03 f300 	mul.w	r3, r3, r0
 801dfd0:	1c58      	adds	r0, r3, #1
 801dfd2:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801dfd6:	121b      	asrs	r3, r3, #8
 801dfd8:	2bff      	cmp	r3, #255	@ 0xff
 801dfda:	d039      	beq.n	801e050 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh+0x8c>
 801dfdc:	6810      	ldr	r0, [r2, #0]
 801dfde:	0e07      	lsrs	r7, r0, #24
 801dfe0:	d036      	beq.n	801e050 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh+0x8c>
 801dfe2:	b2dc      	uxtb	r4, r3
 801dfe4:	2b00      	cmp	r3, #0
 801dfe6:	d03d      	beq.n	801e064 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh+0xa0>
 801dfe8:	fb04 f507 	mul.w	r5, r4, r7
 801dfec:	1c6e      	adds	r6, r5, #1
 801dfee:	eb06 2625 	add.w	r6, r6, r5, asr #8
 801dff2:	1236      	asrs	r6, r6, #8
 801dff4:	f891 8002 	ldrb.w	r8, [r1, #2]
 801dff8:	eba7 0e06 	sub.w	lr, r7, r6
 801dffc:	b2c5      	uxtb	r5, r0
 801dffe:	f891 c001 	ldrb.w	ip, [r1, #1]
 801e002:	fb0e f505 	mul.w	r5, lr, r5
 801e006:	fb03 f808 	mul.w	r8, r3, r8
 801e00a:	7809      	ldrb	r1, [r1, #0]
 801e00c:	fb03 fc0c 	mul.w	ip, r3, ip
 801e010:	fb03 5501 	mla	r5, r3, r1, r5
 801e014:	f3c0 4107 	ubfx	r1, r0, #16, #8
 801e018:	f3c0 2307 	ubfx	r3, r0, #8, #8
 801e01c:	fb0e 8101 	mla	r1, lr, r1, r8
 801e020:	19e0      	adds	r0, r4, r7
 801e022:	fb0e c303 	mla	r3, lr, r3, ip
 801e026:	1b80      	subs	r0, r0, r6
 801e028:	b2c0      	uxtb	r0, r0
 801e02a:	fbb1 f1f0 	udiv	r1, r1, r0
 801e02e:	fbb5 f4f0 	udiv	r4, r5, r0
 801e032:	fbb3 f3f0 	udiv	r3, r3, r0
 801e036:	0409      	lsls	r1, r1, #16
 801e038:	b2e4      	uxtb	r4, r4
 801e03a:	f401 017f 	and.w	r1, r1, #16711680	@ 0xff0000
 801e03e:	ea44 6000 	orr.w	r0, r4, r0, lsl #24
 801e042:	021b      	lsls	r3, r3, #8
 801e044:	4301      	orrs	r1, r0
 801e046:	b29b      	uxth	r3, r3
 801e048:	430b      	orrs	r3, r1
 801e04a:	6013      	str	r3, [r2, #0]
 801e04c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801e050:	7848      	ldrb	r0, [r1, #1]
 801e052:	788d      	ldrb	r5, [r1, #2]
 801e054:	780c      	ldrb	r4, [r1, #0]
 801e056:	0200      	lsls	r0, r0, #8
 801e058:	ea40 4105 	orr.w	r1, r0, r5, lsl #16
 801e05c:	4321      	orrs	r1, r4
 801e05e:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 801e062:	6013      	str	r3, [r2, #0]
 801e064:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801e068 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 801e068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e06c:	4692      	mov	sl, r2
 801e06e:	7812      	ldrb	r2, [r2, #0]
 801e070:	b095      	sub	sp, #84	@ 0x54
 801e072:	460d      	mov	r5, r1
 801e074:	461e      	mov	r6, r3
 801e076:	900d      	str	r0, [sp, #52]	@ 0x34
 801e078:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801e07a:	f89d 107c 	ldrb.w	r1, [sp, #124]	@ 0x7c
 801e07e:	2a00      	cmp	r2, #0
 801e080:	f040 816b 	bne.w	801e35a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f2>
 801e084:	6830      	ldr	r0, [r6, #0]
 801e086:	460f      	mov	r7, r1
 801e088:	6871      	ldr	r1, [r6, #4]
 801e08a:	aa10      	add	r2, sp, #64	@ 0x40
 801e08c:	c203      	stmia	r2!, {r0, r1}
 801e08e:	6818      	ldr	r0, [r3, #0]
 801e090:	6859      	ldr	r1, [r3, #4]
 801e092:	aa12      	add	r2, sp, #72	@ 0x48
 801e094:	c203      	stmia	r2!, {r0, r1}
 801e096:	a810      	add	r0, sp, #64	@ 0x40
 801e098:	f7f1 f9a2 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e09c:	4631      	mov	r1, r6
 801e09e:	a812      	add	r0, sp, #72	@ 0x48
 801e0a0:	f7f1 f9c6 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e0a4:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 801e0a8:	f9bd 1048 	ldrsh.w	r1, [sp, #72]	@ 0x48
 801e0ac:	f003 0201 	and.w	r2, r3, #1
 801e0b0:	4614      	mov	r4, r2
 801e0b2:	9208      	str	r2, [sp, #32]
 801e0b4:	f9bd 204a 	ldrsh.w	r2, [sp, #74]	@ 0x4a
 801e0b8:	f8bd 0042 	ldrh.w	r0, [sp, #66]	@ 0x42
 801e0bc:	4423      	add	r3, r4
 801e0be:	fb02 1303 	mla	r3, r2, r3, r1
 801e0c2:	f8bd 6040 	ldrh.w	r6, [sp, #64]	@ 0x40
 801e0c6:	4402      	add	r2, r0
 801e0c8:	48a7      	ldr	r0, [pc, #668]	@ (801e368 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x300>)
 801e0ca:	440e      	add	r6, r1
 801e0cc:	6800      	ldr	r0, [r0, #0]
 801e0ce:	f8ad 6048 	strh.w	r6, [sp, #72]	@ 0x48
 801e0d2:	f8ad 204a 	strh.w	r2, [sp, #74]	@ 0x4a
 801e0d6:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801e0da:	eb05 0363 	add.w	r3, r5, r3, asr #1
 801e0de:	6802      	ldr	r2, [r0, #0]
 801e0e0:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 801e0e4:	9302      	str	r3, [sp, #8]
 801e0e6:	f001 0301 	and.w	r3, r1, #1
 801e0ea:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 801e0ec:	9309      	str	r3, [sp, #36]	@ 0x24
 801e0ee:	9607      	str	r6, [sp, #28]
 801e0f0:	f9bd 404e 	ldrsh.w	r4, [sp, #78]	@ 0x4e
 801e0f4:	4790      	blx	r2
 801e0f6:	4a9d      	ldr	r2, [pc, #628]	@ (801e36c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x304>)
 801e0f8:	f9bd 304a 	ldrsh.w	r3, [sp, #74]	@ 0x4a
 801e0fc:	8812      	ldrh	r2, [r2, #0]
 801e0fe:	f9bd 1048 	ldrsh.w	r1, [sp, #72]	@ 0x48
 801e102:	fb04 f402 	mul.w	r4, r4, r2
 801e106:	fb02 1303 	mla	r3, r2, r3, r1
 801e10a:	eb00 0583 	add.w	r5, r0, r3, lsl #2
 801e10e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 801e112:	429d      	cmp	r5, r3
 801e114:	930a      	str	r3, [sp, #40]	@ 0x28
 801e116:	f10a 0a04 	add.w	sl, sl, #4
 801e11a:	f080 80f4 	bcs.w	801e306 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x29e>
 801e11e:	46bb      	mov	fp, r7
 801e120:	1e73      	subs	r3, r6, #1
 801e122:	930c      	str	r3, [sp, #48]	@ 0x30
 801e124:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e126:	2b00      	cmp	r3, #0
 801e128:	f000 8104 	beq.w	801e334 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2cc>
 801e12c:	9a02      	ldr	r2, [sp, #8]
 801e12e:	7813      	ldrb	r3, [r2, #0]
 801e130:	1c54      	adds	r4, r2, #1
 801e132:	f003 030f 	and.w	r3, r3, #15
 801e136:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 801e13a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e13c:	0e1b      	lsrs	r3, r3, #24
 801e13e:	f040 8104 	bne.w	801e34a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 801e142:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e144:	3504      	adds	r5, #4
 801e146:	2b01      	cmp	r3, #1
 801e148:	f340 80bf 	ble.w	801e2ca <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x262>
 801e14c:	3b02      	subs	r3, #2
 801e14e:	ea4f 0e53 	mov.w	lr, r3, lsr #1
 801e152:	9304      	str	r3, [sp, #16]
 801e154:	f10e 0301 	add.w	r3, lr, #1
 801e158:	e9cd 5e05 	strd	r5, lr, [sp, #20]
 801e15c:	9303      	str	r3, [sp, #12]
 801e15e:	18e7      	adds	r7, r4, r3
 801e160:	f105 0808 	add.w	r8, r5, #8
 801e164:	46de      	mov	lr, fp
 801e166:	e00b      	b.n	801e180 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x118>
 801e168:	f005 050f 	and.w	r5, r5, #15
 801e16c:	f85a 3025 	ldr.w	r3, [sl, r5, lsl #2]
 801e170:	3401      	adds	r4, #1
 801e172:	0e1a      	lsrs	r2, r3, #24
 801e174:	d153      	bne.n	801e21e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b6>
 801e176:	42bc      	cmp	r4, r7
 801e178:	f108 0808 	add.w	r8, r8, #8
 801e17c:	f000 8099 	beq.w	801e2b2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24a>
 801e180:	7825      	ldrb	r5, [r4, #0]
 801e182:	092b      	lsrs	r3, r5, #4
 801e184:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 801e188:	0e1a      	lsrs	r2, r3, #24
 801e18a:	d0ed      	beq.n	801e168 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x100>
 801e18c:	fb0e f202 	mul.w	r2, lr, r2
 801e190:	1c51      	adds	r1, r2, #1
 801e192:	eb01 2222 	add.w	r2, r1, r2, asr #8
 801e196:	1212      	asrs	r2, r2, #8
 801e198:	2aff      	cmp	r2, #255	@ 0xff
 801e19a:	f000 80bc 	beq.w	801e316 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ae>
 801e19e:	f858 1c08 	ldr.w	r1, [r8, #-8]
 801e1a2:	0e0e      	lsrs	r6, r1, #24
 801e1a4:	f000 80b7 	beq.w	801e316 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ae>
 801e1a8:	b2d0      	uxtb	r0, r2
 801e1aa:	2a00      	cmp	r2, #0
 801e1ac:	d0dc      	beq.n	801e168 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x100>
 801e1ae:	fb00 fc06 	mul.w	ip, r0, r6
 801e1b2:	f10c 0501 	add.w	r5, ip, #1
 801e1b6:	eb05 252c 	add.w	r5, r5, ip, asr #8
 801e1ba:	122d      	asrs	r5, r5, #8
 801e1bc:	950b      	str	r5, [sp, #44]	@ 0x2c
 801e1be:	fa5f fb81 	uxtb.w	fp, r1
 801e1c2:	1b75      	subs	r5, r6, r5
 801e1c4:	f3c3 4907 	ubfx	r9, r3, #16, #8
 801e1c8:	fb05 fb0b 	mul.w	fp, r5, fp
 801e1cc:	f3c3 2c07 	ubfx	ip, r3, #8, #8
 801e1d0:	fb02 f909 	mul.w	r9, r2, r9
 801e1d4:	fb02 fc0c 	mul.w	ip, r2, ip
 801e1d8:	b2db      	uxtb	r3, r3
 801e1da:	fb02 b303 	mla	r3, r2, r3, fp
 801e1de:	f3c1 4207 	ubfx	r2, r1, #16, #8
 801e1e2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e1e6:	fb05 9902 	mla	r9, r5, r2, r9
 801e1ea:	fb05 c101 	mla	r1, r5, r1, ip
 801e1ee:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801e1f0:	4430      	add	r0, r6
 801e1f2:	1b45      	subs	r5, r0, r5
 801e1f4:	b2ed      	uxtb	r5, r5
 801e1f6:	fbb9 f2f5 	udiv	r2, r9, r5
 801e1fa:	fbb3 f3f5 	udiv	r3, r3, r5
 801e1fe:	fbb1 f1f5 	udiv	r1, r1, r5
 801e202:	0412      	lsls	r2, r2, #16
 801e204:	b2db      	uxtb	r3, r3
 801e206:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 801e20a:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 801e20e:	0209      	lsls	r1, r1, #8
 801e210:	4313      	orrs	r3, r2
 801e212:	b289      	uxth	r1, r1
 801e214:	430b      	orrs	r3, r1
 801e216:	f848 3c08 	str.w	r3, [r8, #-8]
 801e21a:	7825      	ldrb	r5, [r4, #0]
 801e21c:	e7a4      	b.n	801e168 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x100>
 801e21e:	fb0e f202 	mul.w	r2, lr, r2
 801e222:	1c51      	adds	r1, r2, #1
 801e224:	eb01 2222 	add.w	r2, r1, r2, asr #8
 801e228:	1212      	asrs	r2, r2, #8
 801e22a:	2aff      	cmp	r2, #255	@ 0xff
 801e22c:	d07b      	beq.n	801e326 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2be>
 801e22e:	f858 1c04 	ldr.w	r1, [r8, #-4]
 801e232:	0e0e      	lsrs	r6, r1, #24
 801e234:	d077      	beq.n	801e326 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2be>
 801e236:	b2d0      	uxtb	r0, r2
 801e238:	2a00      	cmp	r2, #0
 801e23a:	d09c      	beq.n	801e176 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 801e23c:	fb00 fc06 	mul.w	ip, r0, r6
 801e240:	f10c 0501 	add.w	r5, ip, #1
 801e244:	eb05 252c 	add.w	r5, r5, ip, asr #8
 801e248:	122d      	asrs	r5, r5, #8
 801e24a:	950b      	str	r5, [sp, #44]	@ 0x2c
 801e24c:	fa5f fb81 	uxtb.w	fp, r1
 801e250:	1b75      	subs	r5, r6, r5
 801e252:	f3c3 4907 	ubfx	r9, r3, #16, #8
 801e256:	fb05 fb0b 	mul.w	fp, r5, fp
 801e25a:	f3c3 2c07 	ubfx	ip, r3, #8, #8
 801e25e:	fb02 f909 	mul.w	r9, r2, r9
 801e262:	fb02 fc0c 	mul.w	ip, r2, ip
 801e266:	b2db      	uxtb	r3, r3
 801e268:	fb02 b303 	mla	r3, r2, r3, fp
 801e26c:	f3c1 4207 	ubfx	r2, r1, #16, #8
 801e270:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e274:	fb05 9902 	mla	r9, r5, r2, r9
 801e278:	fb05 c101 	mla	r1, r5, r1, ip
 801e27c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801e27e:	4430      	add	r0, r6
 801e280:	1b45      	subs	r5, r0, r5
 801e282:	b2ed      	uxtb	r5, r5
 801e284:	fbb9 f2f5 	udiv	r2, r9, r5
 801e288:	fbb3 f3f5 	udiv	r3, r3, r5
 801e28c:	fbb1 f1f5 	udiv	r1, r1, r5
 801e290:	0412      	lsls	r2, r2, #16
 801e292:	b2db      	uxtb	r3, r3
 801e294:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 801e298:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 801e29c:	0209      	lsls	r1, r1, #8
 801e29e:	4313      	orrs	r3, r2
 801e2a0:	b289      	uxth	r1, r1
 801e2a2:	430b      	orrs	r3, r1
 801e2a4:	42bc      	cmp	r4, r7
 801e2a6:	f848 3c04 	str.w	r3, [r8, #-4]
 801e2aa:	f108 0808 	add.w	r8, r8, #8
 801e2ae:	f47f af67 	bne.w	801e180 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x118>
 801e2b2:	46f3      	mov	fp, lr
 801e2b4:	f8dd e018 	ldr.w	lr, [sp, #24]
 801e2b8:	9a04      	ldr	r2, [sp, #16]
 801e2ba:	ebce 73ce 	rsb	r3, lr, lr, lsl #31
 801e2be:	9d05      	ldr	r5, [sp, #20]
 801e2c0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e2c4:	9a03      	ldr	r2, [sp, #12]
 801e2c6:	eb05 05c2 	add.w	r5, r5, r2, lsl #3
 801e2ca:	2b01      	cmp	r3, #1
 801e2cc:	d107      	bne.n	801e2de <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x276>
 801e2ce:	7823      	ldrb	r3, [r4, #0]
 801e2d0:	091b      	lsrs	r3, r3, #4
 801e2d2:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 801e2d6:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e2d8:	0e1b      	lsrs	r3, r3, #24
 801e2da:	d12e      	bne.n	801e33a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d2>
 801e2dc:	3504      	adds	r5, #4
 801e2de:	9908      	ldr	r1, [sp, #32]
 801e2e0:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 801e2e4:	4a21      	ldr	r2, [pc, #132]	@ (801e36c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x304>)
 801e2e6:	440b      	add	r3, r1
 801e2e8:	8812      	ldrh	r2, [r2, #0]
 801e2ea:	9907      	ldr	r1, [sp, #28]
 801e2ec:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801e2f0:	1a52      	subs	r2, r2, r1
 801e2f2:	eb05 0582 	add.w	r5, r5, r2, lsl #2
 801e2f6:	9a02      	ldr	r2, [sp, #8]
 801e2f8:	eb02 0363 	add.w	r3, r2, r3, asr #1
 801e2fc:	9302      	str	r3, [sp, #8]
 801e2fe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e300:	42ab      	cmp	r3, r5
 801e302:	f63f af0f 	bhi.w	801e124 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xbc>
 801e306:	4b18      	ldr	r3, [pc, #96]	@ (801e368 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x300>)
 801e308:	6818      	ldr	r0, [r3, #0]
 801e30a:	6803      	ldr	r3, [r0, #0]
 801e30c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e30e:	4798      	blx	r3
 801e310:	b015      	add	sp, #84	@ 0x54
 801e312:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e316:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 801e31a:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 801e31e:	f848 2c08 	str.w	r2, [r8, #-8]
 801e322:	7825      	ldrb	r5, [r4, #0]
 801e324:	e720      	b.n	801e168 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x100>
 801e326:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 801e32a:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 801e32e:	f848 2c04 	str.w	r2, [r8, #-4]
 801e332:	e720      	b.n	801e176 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 801e334:	9c02      	ldr	r4, [sp, #8]
 801e336:	9b07      	ldr	r3, [sp, #28]
 801e338:	e705      	b.n	801e146 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xde>
 801e33a:	9300      	str	r3, [sp, #0]
 801e33c:	462a      	mov	r2, r5
 801e33e:	465b      	mov	r3, fp
 801e340:	a90f      	add	r1, sp, #60	@ 0x3c
 801e342:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801e344:	f7ff fe3e 	bl	801dfc4 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh>
 801e348:	e7c8      	b.n	801e2dc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x274>
 801e34a:	9300      	str	r3, [sp, #0]
 801e34c:	462a      	mov	r2, r5
 801e34e:	465b      	mov	r3, fp
 801e350:	a90f      	add	r1, sp, #60	@ 0x3c
 801e352:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801e354:	f7ff fe36 	bl	801dfc4 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh>
 801e358:	e6f3      	b.n	801e142 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xda>
 801e35a:	4b05      	ldr	r3, [pc, #20]	@ (801e370 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 801e35c:	4a05      	ldr	r2, [pc, #20]	@ (801e374 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x30c>)
 801e35e:	f241 013d 	movw	r1, #4157	@ 0x103d
 801e362:	4805      	ldr	r0, [pc, #20]	@ (801e378 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x310>)
 801e364:	f006 fce6 	bl	8024d34 <__assert_func>
 801e368:	2004bf98 	.word	0x2004bf98
 801e36c:	2004bf92 	.word	0x2004bf92
 801e370:	08027a5c 	.word	0x08027a5c
 801e374:	08028d6c 	.word	0x08028d6c
 801e378:	08027928 	.word	0x08027928

0801e37c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 801e37c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e380:	b093      	sub	sp, #76	@ 0x4c
 801e382:	9206      	str	r2, [sp, #24]
 801e384:	468b      	mov	fp, r1
 801e386:	7812      	ldrb	r2, [r2, #0]
 801e388:	f89d 1074 	ldrb.w	r1, [sp, #116]	@ 0x74
 801e38c:	461c      	mov	r4, r3
 801e38e:	9108      	str	r1, [sp, #32]
 801e390:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e392:	2a00      	cmp	r2, #0
 801e394:	f040 815f 	bne.w	801e656 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2da>
 801e398:	6820      	ldr	r0, [r4, #0]
 801e39a:	6861      	ldr	r1, [r4, #4]
 801e39c:	aa0e      	add	r2, sp, #56	@ 0x38
 801e39e:	c203      	stmia	r2!, {r0, r1}
 801e3a0:	6818      	ldr	r0, [r3, #0]
 801e3a2:	6859      	ldr	r1, [r3, #4]
 801e3a4:	aa10      	add	r2, sp, #64	@ 0x40
 801e3a6:	c203      	stmia	r2!, {r0, r1}
 801e3a8:	a80e      	add	r0, sp, #56	@ 0x38
 801e3aa:	f7f1 f819 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e3ae:	4621      	mov	r1, r4
 801e3b0:	a810      	add	r0, sp, #64	@ 0x40
 801e3b2:	f7f1 f83d 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e3b6:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 801e3ba:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801e3be:	f340 8137 	ble.w	801e630 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b4>
 801e3c2:	2201      	movs	r2, #1
 801e3c4:	b299      	uxth	r1, r3
 801e3c6:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801e3ca:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 801e3ce:	fb93 f5f2 	sdiv	r5, r3, r2
 801e3d2:	b2ae      	uxth	r6, r5
 801e3d4:	fb02 3416 	mls	r4, r2, r6, r3
 801e3d8:	fb14 0101 	smlabb	r1, r4, r1, r0
 801e3dc:	f9bd 403e 	ldrsh.w	r4, [sp, #62]	@ 0x3e
 801e3e0:	fa1f fa81 	uxth.w	sl, r1
 801e3e4:	4414      	add	r4, r2
 801e3e6:	3c01      	subs	r4, #1
 801e3e8:	fb94 f4f2 	sdiv	r4, r4, r2
 801e3ec:	b126      	cbz	r6, 801e3f8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x7c>
 801e3ee:	9a06      	ldr	r2, [sp, #24]
 801e3f0:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 801e3f4:	ba12      	rev	r2, r2
 801e3f6:	4493      	add	fp, r2
 801e3f8:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 801e3fc:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 801e400:	4402      	add	r2, r0
 801e402:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 801e406:	f9bd 2044 	ldrsh.w	r2, [sp, #68]	@ 0x44
 801e40a:	440b      	add	r3, r1
 801e40c:	4616      	mov	r6, r2
 801e40e:	4995      	ldr	r1, [pc, #596]	@ (801e664 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2e8>)
 801e410:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801e414:	6808      	ldr	r0, [r1, #0]
 801e416:	9203      	str	r2, [sp, #12]
 801e418:	6803      	ldr	r3, [r0, #0]
 801e41a:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801e41e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801e420:	4798      	blx	r3
 801e422:	f1ba 0f00 	cmp.w	sl, #0
 801e426:	bf0c      	ite	eq
 801e428:	4633      	moveq	r3, r6
 801e42a:	2300      	movne	r3, #0
 801e42c:	498e      	ldr	r1, [pc, #568]	@ (801e668 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ec>)
 801e42e:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801e432:	8809      	ldrh	r1, [r1, #0]
 801e434:	f9bd 6040 	ldrsh.w	r6, [sp, #64]	@ 0x40
 801e438:	fb05 f501 	mul.w	r5, r5, r1
 801e43c:	fb01 6202 	mla	r2, r1, r2, r6
 801e440:	b2a4      	uxth	r4, r4
 801e442:	eb00 0882 	add.w	r8, r0, r2, lsl #2
 801e446:	00a2      	lsls	r2, r4, #2
 801e448:	eb08 0485 	add.w	r4, r8, r5, lsl #2
 801e44c:	3204      	adds	r2, #4
 801e44e:	45a0      	cmp	r8, r4
 801e450:	9207      	str	r2, [sp, #28]
 801e452:	fa1f f983 	uxth.w	r9, r3
 801e456:	d21e      	bcs.n	801e496 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x11a>
 801e458:	2300      	movs	r3, #0
 801e45a:	4648      	mov	r0, r9
 801e45c:	9301      	str	r3, [sp, #4]
 801e45e:	461d      	mov	r5, r3
 801e460:	4653      	mov	r3, sl
 801e462:	b985      	cbnz	r5, 801e486 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x10a>
 801e464:	f89b 2000 	ldrb.w	r2, [fp]
 801e468:	0995      	lsrs	r5, r2, #6
 801e46a:	1e69      	subs	r1, r5, #1
 801e46c:	2902      	cmp	r1, #2
 801e46e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801e472:	bf88      	it	hi
 801e474:	f89b 5001 	ldrbhi.w	r5, [fp, #1]
 801e478:	9201      	str	r2, [sp, #4]
 801e47a:	bf9a      	itte	ls
 801e47c:	f10b 0b01 	addls.w	fp, fp, #1
 801e480:	b2ad      	uxthls	r5, r5
 801e482:	f10b 0b02 	addhi.w	fp, fp, #2
 801e486:	b173      	cbz	r3, 801e4a6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x12a>
 801e488:	429d      	cmp	r5, r3
 801e48a:	d259      	bcs.n	801e540 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c4>
 801e48c:	1b5b      	subs	r3, r3, r5
 801e48e:	2500      	movs	r5, #0
 801e490:	b29b      	uxth	r3, r3
 801e492:	45a0      	cmp	r8, r4
 801e494:	d3e5      	bcc.n	801e462 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xe6>
 801e496:	4b73      	ldr	r3, [pc, #460]	@ (801e664 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2e8>)
 801e498:	6818      	ldr	r0, [r3, #0]
 801e49a:	6803      	ldr	r3, [r0, #0]
 801e49c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e49e:	4798      	blx	r3
 801e4a0:	b013      	add	sp, #76	@ 0x4c
 801e4a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e4a6:	2204      	movs	r2, #4
 801e4a8:	4616      	mov	r6, r2
 801e4aa:	9907      	ldr	r1, [sp, #28]
 801e4ac:	9a01      	ldr	r2, [sp, #4]
 801e4ae:	4285      	cmp	r5, r0
 801e4b0:	fb16 1202 	smlabb	r2, r6, r2, r1
 801e4b4:	9906      	ldr	r1, [sp, #24]
 801e4b6:	588e      	ldr	r6, [r1, r2]
 801e4b8:	ea4f 6c16 	mov.w	ip, r6, lsr #24
 801e4bc:	d357      	bcc.n	801e56e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1f2>
 801e4be:	1a2a      	subs	r2, r5, r0
 801e4c0:	b292      	uxth	r2, r2
 801e4c2:	9202      	str	r2, [sp, #8]
 801e4c4:	2800      	cmp	r0, #0
 801e4c6:	d041      	beq.n	801e54c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d0>
 801e4c8:	e9cd 0304 	strd	r0, r3, [sp, #16]
 801e4cc:	9a08      	ldr	r2, [sp, #32]
 801e4ce:	f3c6 2907 	ubfx	r9, r6, #8, #8
 801e4d2:	fb02 f20c 	mul.w	r2, r2, ip
 801e4d6:	f102 0a01 	add.w	sl, r2, #1
 801e4da:	eb0a 2222 	add.w	r2, sl, r2, asr #8
 801e4de:	1212      	asrs	r2, r2, #8
 801e4e0:	b2d1      	uxtb	r1, r2
 801e4e2:	910a      	str	r1, [sp, #40]	@ 0x28
 801e4e4:	b291      	uxth	r1, r2
 801e4e6:	9109      	str	r1, [sp, #36]	@ 0x24
 801e4e8:	fb02 f109 	mul.w	r1, r2, r9
 801e4ec:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801e4f0:	ea4f 2709 	mov.w	r7, r9, lsl #8
 801e4f4:	b2f6      	uxtb	r6, r6
 801e4f6:	ea47 470e 	orr.w	r7, r7, lr, lsl #16
 801e4fa:	4337      	orrs	r7, r6
 801e4fc:	910b      	str	r1, [sp, #44]	@ 0x2c
 801e4fe:	fb06 f602 	mul.w	r6, r6, r2
 801e502:	fb02 fe0e 	mul.w	lr, r2, lr
 801e506:	ea47 6702 	orr.w	r7, r7, r2, lsl #24
 801e50a:	f1bc 0f00 	cmp.w	ip, #0
 801e50e:	d036      	beq.n	801e57e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x202>
 801e510:	2a00      	cmp	r2, #0
 801e512:	d13b      	bne.n	801e58c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x210>
 801e514:	9a04      	ldr	r2, [sp, #16]
 801e516:	1e51      	subs	r1, r2, #1
 801e518:	b289      	uxth	r1, r1
 801e51a:	eb08 0c81 	add.w	ip, r8, r1, lsl #2
 801e51e:	f1a8 0204 	sub.w	r2, r8, #4
 801e522:	f852 6f04 	ldr.w	r6, [r2, #4]!
 801e526:	0e36      	lsrs	r6, r6, #24
 801e528:	bf08      	it	eq
 801e52a:	6017      	streq	r7, [r2, #0]
 801e52c:	4594      	cmp	ip, r2
 801e52e:	d1f8      	bne.n	801e522 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1a6>
 801e530:	3101      	adds	r1, #1
 801e532:	eb08 0881 	add.w	r8, r8, r1, lsl #2
 801e536:	4285      	cmp	r5, r0
 801e538:	d208      	bcs.n	801e54c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d0>
 801e53a:	9d02      	ldr	r5, [sp, #8]
 801e53c:	9805      	ldr	r0, [sp, #20]
 801e53e:	e7a8      	b.n	801e492 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x116>
 801e540:	1aed      	subs	r5, r5, r3
 801e542:	b2ad      	uxth	r5, r5
 801e544:	f8bd 000c 	ldrh.w	r0, [sp, #12]
 801e548:	2300      	movs	r3, #0
 801e54a:	e7a2      	b.n	801e492 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x116>
 801e54c:	9903      	ldr	r1, [sp, #12]
 801e54e:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 801e552:	4a45      	ldr	r2, [pc, #276]	@ (801e668 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ec>)
 801e554:	b288      	uxth	r0, r1
 801e556:	1a1b      	subs	r3, r3, r0
 801e558:	8812      	ldrh	r2, [r2, #0]
 801e55a:	b29b      	uxth	r3, r3
 801e55c:	2b00      	cmp	r3, #0
 801e55e:	eba2 0201 	sub.w	r2, r2, r1
 801e562:	9d02      	ldr	r5, [sp, #8]
 801e564:	bf18      	it	ne
 801e566:	2000      	movne	r0, #0
 801e568:	eb08 0882 	add.w	r8, r8, r2, lsl #2
 801e56c:	e791      	b.n	801e492 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x116>
 801e56e:	1b42      	subs	r2, r0, r5
 801e570:	b292      	uxth	r2, r2
 801e572:	9205      	str	r2, [sp, #20]
 801e574:	2d00      	cmp	r5, #0
 801e576:	d06b      	beq.n	801e650 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d4>
 801e578:	9504      	str	r5, [sp, #16]
 801e57a:	9302      	str	r3, [sp, #8]
 801e57c:	e7a6      	b.n	801e4cc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x150>
 801e57e:	9a04      	ldr	r2, [sp, #16]
 801e580:	3a01      	subs	r2, #1
 801e582:	b292      	uxth	r2, r2
 801e584:	3201      	adds	r2, #1
 801e586:	eb08 0882 	add.w	r8, r8, r2, lsl #2
 801e58a:	e7d4      	b.n	801e536 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 801e58c:	2aff      	cmp	r2, #255	@ 0xff
 801e58e:	9a04      	ldr	r2, [sp, #16]
 801e590:	d054      	beq.n	801e63c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c0>
 801e592:	f102 3aff 	add.w	sl, r2, #4294967295
 801e596:	fa1f fa8a 	uxth.w	sl, sl
 801e59a:	e9cd 6e0c 	strd	r6, lr, [sp, #48]	@ 0x30
 801e59e:	f10a 0a01 	add.w	sl, sl, #1
 801e5a2:	eb08 0a8a 	add.w	sl, r8, sl, lsl #2
 801e5a6:	9304      	str	r3, [sp, #16]
 801e5a8:	f8d8 2000 	ldr.w	r2, [r8]
 801e5ac:	0e11      	lsrs	r1, r2, #24
 801e5ae:	d038      	beq.n	801e622 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a6>
 801e5b0:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 801e5b2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e5b4:	fb11 f606 	smulbb	r6, r1, r6
 801e5b8:	b2b6      	uxth	r6, r6
 801e5ba:	f106 0e01 	add.w	lr, r6, #1
 801e5be:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801e5c2:	ea4f 2e26 	mov.w	lr, r6, asr #8
 801e5c6:	eba1 090e 	sub.w	r9, r1, lr
 801e5ca:	b2d6      	uxtb	r6, r2
 801e5cc:	fb09 3606 	mla	r6, r9, r6, r3
 801e5d0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e5d2:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801e5d6:	fb09 3c0c 	mla	ip, r9, ip, r3
 801e5da:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e5dc:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801e5e0:	4419      	add	r1, r3
 801e5e2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801e5e4:	eba1 010e 	sub.w	r1, r1, lr
 801e5e8:	fb09 3202 	mla	r2, r9, r2, r3
 801e5ec:	b2c9      	uxtb	r1, r1
 801e5ee:	fbb6 f6f1 	udiv	r6, r6, r1
 801e5f2:	fbbc fcf1 	udiv	ip, ip, r1
 801e5f6:	fbb2 f9f1 	udiv	r9, r2, r1
 801e5fa:	b2f6      	uxtb	r6, r6
 801e5fc:	ea4f 4c0c 	mov.w	ip, ip, lsl #16
 801e600:	ea46 6601 	orr.w	r6, r6, r1, lsl #24
 801e604:	f40c 027f 	and.w	r2, ip, #16711680	@ 0xff0000
 801e608:	ea4f 2109 	mov.w	r1, r9, lsl #8
 801e60c:	4332      	orrs	r2, r6
 801e60e:	b289      	uxth	r1, r1
 801e610:	430a      	orrs	r2, r1
 801e612:	f8c8 2000 	str.w	r2, [r8]
 801e616:	f108 0804 	add.w	r8, r8, #4
 801e61a:	45d0      	cmp	r8, sl
 801e61c:	d1c4      	bne.n	801e5a8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x22c>
 801e61e:	9b04      	ldr	r3, [sp, #16]
 801e620:	e789      	b.n	801e536 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 801e622:	f8c8 7000 	str.w	r7, [r8]
 801e626:	f108 0804 	add.w	r8, r8, #4
 801e62a:	45d0      	cmp	r8, sl
 801e62c:	d1bc      	bne.n	801e5a8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x22c>
 801e62e:	e7f6      	b.n	801e61e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a2>
 801e630:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 801e634:	b299      	uxth	r1, r3
 801e636:	fb94 f2f1 	sdiv	r2, r4, r1
 801e63a:	e6c4      	b.n	801e3c6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x4a>
 801e63c:	3a01      	subs	r2, #1
 801e63e:	b292      	uxth	r2, r2
 801e640:	3201      	adds	r2, #1
 801e642:	eb08 0282 	add.w	r2, r8, r2, lsl #2
 801e646:	f848 7b04 	str.w	r7, [r8], #4
 801e64a:	4590      	cmp	r8, r2
 801e64c:	d1fb      	bne.n	801e646 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ca>
 801e64e:	e772      	b.n	801e536 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 801e650:	9805      	ldr	r0, [sp, #20]
 801e652:	462b      	mov	r3, r5
 801e654:	e71d      	b.n	801e492 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x116>
 801e656:	4b05      	ldr	r3, [pc, #20]	@ (801e66c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f0>)
 801e658:	4a05      	ldr	r2, [pc, #20]	@ (801e670 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f4>)
 801e65a:	f241 019c 	movw	r1, #4252	@ 0x109c
 801e65e:	4805      	ldr	r0, [pc, #20]	@ (801e674 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f8>)
 801e660:	f006 fb68 	bl	8024d34 <__assert_func>
 801e664:	2004bf98 	.word	0x2004bf98
 801e668:	2004bf92 	.word	0x2004bf92
 801e66c:	08027a5c 	.word	0x08027a5c
 801e670:	08029178 	.word	0x08029178
 801e674:	08027928 	.word	0x08027928

0801e678 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 801e678:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e67c:	b0a1      	sub	sp, #132	@ 0x84
 801e67e:	9210      	str	r2, [sp, #64]	@ 0x40
 801e680:	9119      	str	r1, [sp, #100]	@ 0x64
 801e682:	7812      	ldrb	r2, [r2, #0]
 801e684:	f89d 10ac 	ldrb.w	r1, [sp, #172]	@ 0xac
 801e688:	461c      	mov	r4, r3
 801e68a:	9104      	str	r1, [sp, #16]
 801e68c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e68e:	2a00      	cmp	r2, #0
 801e690:	f040 8215 	bne.w	801eabe <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x446>
 801e694:	6861      	ldr	r1, [r4, #4]
 801e696:	4683      	mov	fp, r0
 801e698:	6820      	ldr	r0, [r4, #0]
 801e69a:	aa1c      	add	r2, sp, #112	@ 0x70
 801e69c:	c203      	stmia	r2!, {r0, r1}
 801e69e:	6818      	ldr	r0, [r3, #0]
 801e6a0:	6859      	ldr	r1, [r3, #4]
 801e6a2:	aa1e      	add	r2, sp, #120	@ 0x78
 801e6a4:	c203      	stmia	r2!, {r0, r1}
 801e6a6:	a81c      	add	r0, sp, #112	@ 0x70
 801e6a8:	f7f0 fe9a 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e6ac:	4621      	mov	r1, r4
 801e6ae:	a81e      	add	r0, sp, #120	@ 0x78
 801e6b0:	f7f0 febe 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e6b4:	f9bd 1074 	ldrsh.w	r1, [sp, #116]	@ 0x74
 801e6b8:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 801e6bc:	f340 81f7 	ble.w	801eaae <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x436>
 801e6c0:	2301      	movs	r3, #1
 801e6c2:	b289      	uxth	r1, r1
 801e6c4:	931a      	str	r3, [sp, #104]	@ 0x68
 801e6c6:	f9bd 007a 	ldrsh.w	r0, [sp, #122]	@ 0x7a
 801e6ca:	f9bd 2076 	ldrsh.w	r2, [sp, #118]	@ 0x76
 801e6ce:	fb90 f4f3 	sdiv	r4, r0, r3
 801e6d2:	441a      	add	r2, r3
 801e6d4:	3a01      	subs	r2, #1
 801e6d6:	fb92 f2f3 	sdiv	r2, r2, r3
 801e6da:	b2a4      	uxth	r4, r4
 801e6dc:	fb03 0314 	mls	r3, r3, r4, r0
 801e6e0:	9418      	str	r4, [sp, #96]	@ 0x60
 801e6e2:	f8bd 4078 	ldrh.w	r4, [sp, #120]	@ 0x78
 801e6e6:	f8bd 6070 	ldrh.w	r6, [sp, #112]	@ 0x70
 801e6ea:	fb13 4101 	smlabb	r1, r3, r1, r4
 801e6ee:	f8bd 5072 	ldrh.w	r5, [sp, #114]	@ 0x72
 801e6f2:	4bc6      	ldr	r3, [pc, #792]	@ (801ea0c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x394>)
 801e6f4:	4434      	add	r4, r6
 801e6f6:	4405      	add	r5, r0
 801e6f8:	6818      	ldr	r0, [r3, #0]
 801e6fa:	f8ad 4078 	strh.w	r4, [sp, #120]	@ 0x78
 801e6fe:	f8ad 507a 	strh.w	r5, [sp, #122]	@ 0x7a
 801e702:	f9bd 607c 	ldrsh.w	r6, [sp, #124]	@ 0x7c
 801e706:	6803      	ldr	r3, [r0, #0]
 801e708:	3201      	adds	r2, #1
 801e70a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801e70c:	9608      	str	r6, [sp, #32]
 801e70e:	fa1f f881 	uxth.w	r8, r1
 801e712:	b294      	uxth	r4, r2
 801e714:	f9bd 507e 	ldrsh.w	r5, [sp, #126]	@ 0x7e
 801e718:	4798      	blx	r3
 801e71a:	2300      	movs	r3, #0
 801e71c:	49bc      	ldr	r1, [pc, #752]	@ (801ea10 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x398>)
 801e71e:	f1b8 0f00 	cmp.w	r8, #0
 801e722:	bf08      	it	eq
 801e724:	4632      	moveq	r2, r6
 801e726:	8809      	ldrh	r1, [r1, #0]
 801e728:	f9bd 6078 	ldrsh.w	r6, [sp, #120]	@ 0x78
 801e72c:	9317      	str	r3, [sp, #92]	@ 0x5c
 801e72e:	f9bd 307a 	ldrsh.w	r3, [sp, #122]	@ 0x7a
 801e732:	fb05 f501 	mul.w	r5, r5, r1
 801e736:	fb01 6303 	mla	r3, r1, r3, r6
 801e73a:	ea4f 0484 	mov.w	r4, r4, lsl #2
 801e73e:	eb00 0683 	add.w	r6, r0, r3, lsl #2
 801e742:	f104 0304 	add.w	r3, r4, #4
 801e746:	9315      	str	r3, [sp, #84]	@ 0x54
 801e748:	eb06 0385 	add.w	r3, r6, r5, lsl #2
 801e74c:	bf18      	it	ne
 801e74e:	2200      	movne	r2, #0
 801e750:	9303      	str	r3, [sp, #12]
 801e752:	f10b 030a 	add.w	r3, fp, #10
 801e756:	931b      	str	r3, [sp, #108]	@ 0x6c
 801e758:	465b      	mov	r3, fp
 801e75a:	fa1f f982 	uxth.w	r9, r2
 801e75e:	46cb      	mov	fp, r9
 801e760:	46b4      	mov	ip, r6
 801e762:	4647      	mov	r7, r8
 801e764:	4699      	mov	r9, r3
 801e766:	9b03      	ldr	r3, [sp, #12]
 801e768:	459c      	cmp	ip, r3
 801e76a:	f080 8104 	bcs.w	801e976 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 801e76e:	e9dd 2017 	ldrd	r2, r0, [sp, #92]	@ 0x5c
 801e772:	2301      	movs	r3, #1
 801e774:	f8bd 1074 	ldrh.w	r1, [sp, #116]	@ 0x74
 801e778:	2500      	movs	r5, #0
 801e77a:	fbb7 f1f1 	udiv	r1, r7, r1
 801e77e:	f04f 0a01 	mov.w	sl, #1
 801e782:	fa10 f282 	uxtah	r2, r0, r2
 801e786:	0092      	lsls	r2, r2, #2
 801e788:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801e78a:	3204      	adds	r2, #4
 801e78c:	4410      	add	r0, r2
 801e78e:	9305      	str	r3, [sp, #20]
 801e790:	7883      	ldrb	r3, [r0, #2]
 801e792:	7844      	ldrb	r4, [r0, #1]
 801e794:	021b      	lsls	r3, r3, #8
 801e796:	78c0      	ldrb	r0, [r0, #3]
 801e798:	9e19      	ldr	r6, [sp, #100]	@ 0x64
 801e79a:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 801e79e:	4304      	orrs	r4, r0
 801e7a0:	1930      	adds	r0, r6, r4
 801e7a2:	7843      	ldrb	r3, [r0, #1]
 801e7a4:	5d34      	ldrb	r4, [r6, r4]
 801e7a6:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 801e7a8:	021b      	lsls	r3, r3, #8
 801e7aa:	5cb2      	ldrb	r2, [r6, r2]
 801e7ac:	9e1a      	ldr	r6, [sp, #104]	@ 0x68
 801e7ae:	f403 73ff 	and.w	r3, r3, #510	@ 0x1fe
 801e7b2:	1a71      	subs	r1, r6, r1
 801e7b4:	431c      	orrs	r4, r3
 801e7b6:	920a      	str	r2, [sp, #40]	@ 0x28
 801e7b8:	3201      	adds	r2, #1
 801e7ba:	f889 4009 	strb.w	r4, [r9, #9]
 801e7be:	9512      	str	r5, [sp, #72]	@ 0x48
 801e7c0:	9202      	str	r2, [sp, #8]
 801e7c2:	4666      	mov	r6, ip
 801e7c4:	b28a      	uxth	r2, r1
 801e7c6:	46d6      	mov	lr, sl
 801e7c8:	4629      	mov	r1, r5
 801e7ca:	464d      	mov	r5, r9
 801e7cc:	46d9      	mov	r9, fp
 801e7ce:	b2a4      	uxth	r4, r4
 801e7d0:	3001      	adds	r0, #1
 801e7d2:	9407      	str	r4, [sp, #28]
 801e7d4:	9001      	str	r0, [sp, #4]
 801e7d6:	9216      	str	r2, [sp, #88]	@ 0x58
 801e7d8:	2f00      	cmp	r7, #0
 801e7da:	d034      	beq.n	801e846 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ce>
 801e7dc:	45ba      	cmp	sl, r7
 801e7de:	f080 80d2 	bcs.w	801e986 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x30e>
 801e7e2:	9b03      	ldr	r3, [sp, #12]
 801e7e4:	eba7 070a 	sub.w	r7, r7, sl
 801e7e8:	429e      	cmp	r6, r3
 801e7ea:	b2bf      	uxth	r7, r7
 801e7ec:	f080 80c3 	bcs.w	801e976 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 801e7f0:	9801      	ldr	r0, [sp, #4]
 801e7f2:	f1ce 0107 	rsb	r1, lr, #7
 801e7f6:	7842      	ldrb	r2, [r0, #1]
 801e7f8:	7803      	ldrb	r3, [r0, #0]
 801e7fa:	408a      	lsls	r2, r1
 801e7fc:	fa43 f30e 	asr.w	r3, r3, lr
 801e800:	0052      	lsls	r2, r2, #1
 801e802:	f10e 0101 	add.w	r1, lr, #1
 801e806:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801e80a:	b2db      	uxtb	r3, r3
 801e80c:	fa5f fe81 	uxtb.w	lr, r1
 801e810:	4313      	orrs	r3, r2
 801e812:	f1be 0f08 	cmp.w	lr, #8
 801e816:	b29a      	uxth	r2, r3
 801e818:	f000 80f1 	beq.w	801e9fe <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x386>
 801e81c:	3001      	adds	r0, #1
 801e81e:	9001      	str	r0, [sp, #4]
 801e820:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801e822:	4291      	cmp	r1, r2
 801e824:	f0c0 80c0 	bcc.w	801e9a8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x330>
 801e828:	f04f 0a01 	mov.w	sl, #1
 801e82c:	b2db      	uxtb	r3, r3
 801e82e:	726b      	strb	r3, [r5, #9]
 801e830:	9902      	ldr	r1, [sp, #8]
 801e832:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801e836:	f0c0 810a 	bcc.w	801ea4e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3d6>
 801e83a:	9207      	str	r2, [sp, #28]
 801e83c:	f8cd a014 	str.w	sl, [sp, #20]
 801e840:	2100      	movs	r1, #0
 801e842:	2f00      	cmp	r7, #0
 801e844:	d1ca      	bne.n	801e7dc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x164>
 801e846:	45ca      	cmp	sl, r9
 801e848:	f0c0 80cd 	bcc.w	801e9e6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x36e>
 801e84c:	ebaa 0309 	sub.w	r3, sl, r9
 801e850:	b29b      	uxth	r3, r3
 801e852:	9309      	str	r3, [sp, #36]	@ 0x24
 801e854:	f1b9 0f00 	cmp.w	r9, #0
 801e858:	f000 80dc 	beq.w	801ea14 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x39c>
 801e85c:	464b      	mov	r3, r9
 801e85e:	f8cd 9018 	str.w	r9, [sp, #24]
 801e862:	9711      	str	r7, [sp, #68]	@ 0x44
 801e864:	18cb      	adds	r3, r1, r3
 801e866:	e9cd ea0d 	strd	lr, sl, [sp, #52]	@ 0x34
 801e86a:	46b3      	mov	fp, r6
 801e86c:	fa1f fc83 	uxth.w	ip, r3
 801e870:	e9cd 690b 	strd	r6, r9, [sp, #44]	@ 0x2c
 801e874:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 801e878:	970f      	str	r7, [sp, #60]	@ 0x3c
 801e87a:	f8dd 8040 	ldr.w	r8, [sp, #64]	@ 0x40
 801e87e:	e045      	b.n	801e90c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x294>
 801e880:	f8db 0000 	ldr.w	r0, [fp]
 801e884:	0e07      	lsrs	r7, r0, #24
 801e886:	d055      	beq.n	801e934 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2bc>
 801e888:	b2d4      	uxtb	r4, r2
 801e88a:	2a00      	cmp	r2, #0
 801e88c:	d03a      	beq.n	801e904 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x28c>
 801e88e:	fb04 fe07 	mul.w	lr, r4, r7
 801e892:	f10e 0601 	add.w	r6, lr, #1
 801e896:	eb06 262e 	add.w	r6, r6, lr, asr #8
 801e89a:	1236      	asrs	r6, r6, #8
 801e89c:	fa5f fe80 	uxtb.w	lr, r0
 801e8a0:	9614      	str	r6, [sp, #80]	@ 0x50
 801e8a2:	1bbe      	subs	r6, r7, r6
 801e8a4:	9413      	str	r4, [sp, #76]	@ 0x4c
 801e8a6:	f3c3 4907 	ubfx	r9, r3, #16, #8
 801e8aa:	fb06 f40e 	mul.w	r4, r6, lr
 801e8ae:	fb02 f909 	mul.w	r9, r2, r9
 801e8b2:	f3c3 2e07 	ubfx	lr, r3, #8, #8
 801e8b6:	fb02 fe0e 	mul.w	lr, r2, lr
 801e8ba:	b2db      	uxtb	r3, r3
 801e8bc:	fb02 4303 	mla	r3, r2, r3, r4
 801e8c0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801e8c4:	fb06 9902 	mla	r9, r6, r2, r9
 801e8c8:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801e8cc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801e8ce:	fb06 e000 	mla	r0, r6, r0, lr
 801e8d2:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 801e8d4:	443a      	add	r2, r7
 801e8d6:	1b94      	subs	r4, r2, r6
 801e8d8:	b2e4      	uxtb	r4, r4
 801e8da:	fbb9 f9f4 	udiv	r9, r9, r4
 801e8de:	fbb3 f3f4 	udiv	r3, r3, r4
 801e8e2:	fbb0 f0f4 	udiv	r0, r0, r4
 801e8e6:	ea4f 4909 	mov.w	r9, r9, lsl #16
 801e8ea:	b2db      	uxtb	r3, r3
 801e8ec:	f409 097f 	and.w	r9, r9, #16711680	@ 0xff0000
 801e8f0:	ea43 6304 	orr.w	r3, r3, r4, lsl #24
 801e8f4:	0200      	lsls	r0, r0, #8
 801e8f6:	ea43 0909 	orr.w	r9, r3, r9
 801e8fa:	b280      	uxth	r0, r0
 801e8fc:	ea49 0000 	orr.w	r0, r9, r0
 801e900:	f8cb 0000 	str.w	r0, [fp]
 801e904:	4561      	cmp	r1, ip
 801e906:	f10b 0b04 	add.w	fp, fp, #4
 801e90a:	d01d      	beq.n	801e948 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d0>
 801e90c:	2204      	movs	r2, #4
 801e90e:	186b      	adds	r3, r5, r1
 801e910:	7a5b      	ldrb	r3, [r3, #9]
 801e912:	3101      	adds	r1, #1
 801e914:	fb12 a303 	smlabb	r3, r2, r3, sl
 801e918:	f858 3003 	ldr.w	r3, [r8, r3]
 801e91c:	b289      	uxth	r1, r1
 801e91e:	0e1a      	lsrs	r2, r3, #24
 801e920:	d0f0      	beq.n	801e904 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x28c>
 801e922:	9804      	ldr	r0, [sp, #16]
 801e924:	fb00 f202 	mul.w	r2, r0, r2
 801e928:	1c50      	adds	r0, r2, #1
 801e92a:	eb00 2222 	add.w	r2, r0, r2, asr #8
 801e92e:	1212      	asrs	r2, r2, #8
 801e930:	2aff      	cmp	r2, #255	@ 0xff
 801e932:	d1a5      	bne.n	801e880 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x208>
 801e934:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 801e938:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 801e93c:	4561      	cmp	r1, ip
 801e93e:	f8cb 2000 	str.w	r2, [fp]
 801e942:	f10b 0b04 	add.w	fp, fp, #4
 801e946:	d1e1      	bne.n	801e90c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x294>
 801e948:	e9dd 690b 	ldrd	r6, r9, [sp, #44]	@ 0x2c
 801e94c:	e9dd ea0d 	ldrd	lr, sl, [sp, #52]	@ 0x34
 801e950:	9b06      	ldr	r3, [sp, #24]
 801e952:	45ca      	cmp	sl, r9
 801e954:	f103 33ff 	add.w	r3, r3, #4294967295
 801e958:	b29b      	uxth	r3, r3
 801e95a:	f103 0301 	add.w	r3, r3, #1
 801e95e:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801e960:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 801e964:	d257      	bcs.n	801ea16 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x39e>
 801e966:	9b03      	ldr	r3, [sp, #12]
 801e968:	4661      	mov	r1, ip
 801e96a:	429e      	cmp	r6, r3
 801e96c:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 801e970:	f8dd 9044 	ldr.w	r9, [sp, #68]	@ 0x44
 801e974:	d313      	bcc.n	801e99e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x326>
 801e976:	4b25      	ldr	r3, [pc, #148]	@ (801ea0c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x394>)
 801e978:	6818      	ldr	r0, [r3, #0]
 801e97a:	6803      	ldr	r3, [r0, #0]
 801e97c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e97e:	4798      	blx	r3
 801e980:	b021      	add	sp, #132	@ 0x84
 801e982:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e986:	ebaa 0a07 	sub.w	sl, sl, r7
 801e98a:	4439      	add	r1, r7
 801e98c:	2700      	movs	r7, #0
 801e98e:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 801e992:	fa1f fa8a 	uxth.w	sl, sl
 801e996:	b289      	uxth	r1, r1
 801e998:	9b03      	ldr	r3, [sp, #12]
 801e99a:	429e      	cmp	r6, r3
 801e99c:	d2eb      	bcs.n	801e976 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 801e99e:	f1ba 0f00 	cmp.w	sl, #0
 801e9a2:	f47f af19 	bne.w	801e7d8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x160>
 801e9a6:	e723      	b.n	801e7f0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x178>
 801e9a8:	9b02      	ldr	r3, [sp, #8]
 801e9aa:	4293      	cmp	r3, r2
 801e9ac:	d852      	bhi.n	801ea54 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3dc>
 801e9ae:	9805      	ldr	r0, [sp, #20]
 801e9b0:	7a69      	ldrb	r1, [r5, #9]
 801e9b2:	182b      	adds	r3, r5, r0
 801e9b4:	7259      	strb	r1, [r3, #9]
 801e9b6:	7a6b      	ldrb	r3, [r5, #9]
 801e9b8:	1c41      	adds	r1, r0, #1
 801e9ba:	fa1f fa81 	uxth.w	sl, r1
 801e9be:	9c02      	ldr	r4, [sp, #8]
 801e9c0:	f8cd a014 	str.w	sl, [sp, #20]
 801e9c4:	eb05 0084 	add.w	r0, r5, r4, lsl #2
 801e9c8:	f104 0c01 	add.w	ip, r4, #1
 801e9cc:	9c07      	ldr	r4, [sp, #28]
 801e9ce:	f880 304a 	strb.w	r3, [r0, #74]	@ 0x4a
 801e9d2:	fa1f f38c 	uxth.w	r3, ip
 801e9d6:	f880 104b 	strb.w	r1, [r0, #75]	@ 0x4b
 801e9da:	f8a0 404c 	strh.w	r4, [r0, #76]	@ 0x4c
 801e9de:	9302      	str	r3, [sp, #8]
 801e9e0:	9207      	str	r2, [sp, #28]
 801e9e2:	2100      	movs	r1, #0
 801e9e4:	e6f8      	b.n	801e7d8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x160>
 801e9e6:	eba9 030a 	sub.w	r3, r9, sl
 801e9ea:	b29b      	uxth	r3, r3
 801e9ec:	9311      	str	r3, [sp, #68]	@ 0x44
 801e9ee:	f1ba 0f00 	cmp.w	sl, #0
 801e9f2:	d06b      	beq.n	801eacc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x454>
 801e9f4:	f8cd a018 	str.w	sl, [sp, #24]
 801e9f8:	9709      	str	r7, [sp, #36]	@ 0x24
 801e9fa:	4653      	mov	r3, sl
 801e9fc:	e732      	b.n	801e864 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ec>
 801e9fe:	4601      	mov	r1, r0
 801ea00:	3102      	adds	r1, #2
 801ea02:	f04f 0e00 	mov.w	lr, #0
 801ea06:	9101      	str	r1, [sp, #4]
 801ea08:	e70a      	b.n	801e820 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 801ea0a:	bf00      	nop
 801ea0c:	2004bf98 	.word	0x2004bf98
 801ea10:	2004bf92 	.word	0x2004bf92
 801ea14:	468c      	mov	ip, r1
 801ea16:	4b31      	ldr	r3, [pc, #196]	@ (801eadc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x464>)
 801ea18:	9908      	ldr	r1, [sp, #32]
 801ea1a:	881b      	ldrh	r3, [r3, #0]
 801ea1c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801ea1e:	1a5b      	subs	r3, r3, r1
 801ea20:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 801ea24:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801ea26:	3201      	adds	r2, #1
 801ea28:	4293      	cmp	r3, r2
 801ea2a:	9212      	str	r2, [sp, #72]	@ 0x48
 801ea2c:	d02d      	beq.n	801ea8a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x412>
 801ea2e:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 801ea32:	f8bd 7074 	ldrh.w	r7, [sp, #116]	@ 0x74
 801ea36:	4661      	mov	r1, ip
 801ea38:	eba7 0709 	sub.w	r7, r7, r9
 801ea3c:	b2bf      	uxth	r7, r7
 801ea3e:	2f00      	cmp	r7, #0
 801ea40:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 801ea44:	bf14      	ite	ne
 801ea46:	f04f 0900 	movne.w	r9, #0
 801ea4a:	2700      	moveq	r7, #0
 801ea4c:	e7a4      	b.n	801e998 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x320>
 801ea4e:	9905      	ldr	r1, [sp, #20]
 801ea50:	3101      	adds	r1, #1
 801ea52:	e7b4      	b.n	801e9be <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x346>
 801ea54:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 801ea58:	f893 a04b 	ldrb.w	sl, [r3, #75]	@ 0x4b
 801ea5c:	4613      	mov	r3, r2
 801ea5e:	f1ba 0f01 	cmp.w	sl, #1
 801ea62:	d90d      	bls.n	801ea80 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x408>
 801ea64:	f10a 0109 	add.w	r1, sl, #9
 801ea68:	9c1b      	ldr	r4, [sp, #108]	@ 0x6c
 801ea6a:	4429      	add	r1, r5
 801ea6c:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 801ea70:	f893 004a 	ldrb.w	r0, [r3, #74]	@ 0x4a
 801ea74:	f801 0d01 	strb.w	r0, [r1, #-1]!
 801ea78:	428c      	cmp	r4, r1
 801ea7a:	f8b3 304c 	ldrh.w	r3, [r3, #76]	@ 0x4c
 801ea7e:	d1f5      	bne.n	801ea6c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3f4>
 801ea80:	b2db      	uxtb	r3, r3
 801ea82:	726b      	strb	r3, [r5, #9]
 801ea84:	fa1f fa8a 	uxth.w	sl, sl
 801ea88:	e6d2      	b.n	801e830 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b8>
 801ea8a:	f8bd 3078 	ldrh.w	r3, [sp, #120]	@ 0x78
 801ea8e:	f8bd 2070 	ldrh.w	r2, [sp, #112]	@ 0x70
 801ea92:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801ea94:	1a9b      	subs	r3, r3, r2
 801ea96:	b29f      	uxth	r7, r3
 801ea98:	2f00      	cmp	r7, #0
 801ea9a:	9b08      	ldr	r3, [sp, #32]
 801ea9c:	bf18      	it	ne
 801ea9e:	2300      	movne	r3, #0
 801eaa0:	3101      	adds	r1, #1
 801eaa2:	46b4      	mov	ip, r6
 801eaa4:	46a9      	mov	r9, r5
 801eaa6:	9117      	str	r1, [sp, #92]	@ 0x5c
 801eaa8:	fa1f fb83 	uxth.w	fp, r3
 801eaac:	e65b      	b.n	801e766 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xee>
 801eaae:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801eab2:	b289      	uxth	r1, r1
 801eab4:	fb93 f3f1 	sdiv	r3, r3, r1
 801eab8:	b29a      	uxth	r2, r3
 801eaba:	921a      	str	r2, [sp, #104]	@ 0x68
 801eabc:	e603      	b.n	801e6c6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x4e>
 801eabe:	4b08      	ldr	r3, [pc, #32]	@ (801eae0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x468>)
 801eac0:	4a08      	ldr	r2, [pc, #32]	@ (801eae4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x46c>)
 801eac2:	f241 1132 	movw	r1, #4402	@ 0x1132
 801eac6:	4808      	ldr	r0, [pc, #32]	@ (801eae8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x470>)
 801eac8:	f006 f934 	bl	8024d34 <__assert_func>
 801eacc:	9b03      	ldr	r3, [sp, #12]
 801eace:	429e      	cmp	r6, r3
 801ead0:	f4bf af51 	bcs.w	801e976 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 801ead4:	f8dd 9044 	ldr.w	r9, [sp, #68]	@ 0x44
 801ead8:	e68a      	b.n	801e7f0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x178>
 801eada:	bf00      	nop
 801eadc:	2004bf92 	.word	0x2004bf92
 801eae0:	08027a5c 	.word	0x08027a5c
 801eae4:	08029444 	.word	0x08029444
 801eae8:	08027928 	.word	0x08027928

0801eaec <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801eaec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801eaf0:	7814      	ldrb	r4, [r2, #0]
 801eaf2:	7855      	ldrb	r5, [r2, #1]
 801eaf4:	2c01      	cmp	r4, #1
 801eaf6:	9e06      	ldr	r6, [sp, #24]
 801eaf8:	f89d 701c 	ldrb.w	r7, [sp, #28]
 801eafc:	d013      	beq.n	801eb26 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x3a>
 801eafe:	d304      	bcc.n	801eb0a <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1e>
 801eb00:	2c02      	cmp	r4, #2
 801eb02:	f000 80ca 	beq.w	801ec9a <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1ae>
 801eb06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801eb0a:	7a04      	ldrb	r4, [r0, #8]
 801eb0c:	2c01      	cmp	r4, #1
 801eb0e:	d02d      	beq.n	801eb6c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x80>
 801eb10:	d317      	bcc.n	801eb42 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801eb12:	2c02      	cmp	r4, #2
 801eb14:	f040 80cf 	bne.w	801ecb6 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1ca>
 801eb18:	2d03      	cmp	r5, #3
 801eb1a:	f200 80da 	bhi.w	801ecd2 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1e6>
 801eb1e:	e8df f005 	tbb	[pc, r5]
 801eb22:	989e      	.short	0x989e
 801eb24:	8c92      	.short	0x8c92
 801eb26:	7a04      	ldrb	r4, [r0, #8]
 801eb28:	2c01      	cmp	r4, #1
 801eb2a:	d018      	beq.n	801eb5e <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x72>
 801eb2c:	d310      	bcc.n	801eb50 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x64>
 801eb2e:	2c02      	cmp	r4, #2
 801eb30:	f040 80ba 	bne.w	801eca8 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1bc>
 801eb34:	2d03      	cmp	r5, #3
 801eb36:	f200 80c5 	bhi.w	801ecc4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1d8>
 801eb3a:	e8df f005 	tbb	[pc, r5]
 801eb3e:	a2a8      	.short	0xa2a8
 801eb40:	969c      	.short	0x969c
 801eb42:	2d03      	cmp	r5, #3
 801eb44:	f200 80d3 	bhi.w	801ecee <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x202>
 801eb48:	e8df f005 	tbb	[pc, r5]
 801eb4c:	5f656b71 	.word	0x5f656b71
 801eb50:	2d03      	cmp	r5, #3
 801eb52:	f200 80c5 	bhi.w	801ece0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1f4>
 801eb56:	e8df f005 	tbb	[pc, r5]
 801eb5a:	4c52      	.short	0x4c52
 801eb5c:	4046      	.short	0x4046
 801eb5e:	2d03      	cmp	r5, #3
 801eb60:	f200 80d3 	bhi.w	801ed0a <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x21e>
 801eb64:	e8df f005 	tbb	[pc, r5]
 801eb68:	21272d33 	.word	0x21272d33
 801eb6c:	2d03      	cmp	r5, #3
 801eb6e:	f200 80c5 	bhi.w	801ecfc <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x210>
 801eb72:	e8df f005 	tbb	[pc, r5]
 801eb76:	0e14      	.short	0x0e14
 801eb78:	0208      	.short	0x0208
 801eb7a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801eb7e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801eb82:	f7fd b8e3 	b.w	801bd4c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 801eb86:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801eb8a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801eb8e:	f7fc bead 	b.w	801b8ec <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 801eb92:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801eb96:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801eb9a:	f7fc bcad 	b.w	801b4f8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 801eb9e:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801eba2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801eba6:	f7fc bb83 	b.w	801b2b0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 801ebaa:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801ebae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ebb2:	f7fd bf9d 	b.w	801caf0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 801ebb6:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801ebba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ebbe:	f7fd be47 	b.w	801c850 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 801ebc2:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801ebc6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ebca:	f7fd bc13 	b.w	801c3f4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 801ebce:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801ebd2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ebd6:	f7fd badd 	b.w	801c194 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 801ebda:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801ebde:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ebe2:	f7fc b93f 	b.w	801ae64 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 801ebe6:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801ebea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ebee:	f7fb bfd7 	b.w	801aba0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 801ebf2:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801ebf6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ebfa:	f7fb bd63 	b.w	801a6c4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 801ebfe:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801ec02:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ec06:	f7fb bc05 	b.w	801a414 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 801ec0a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801ec0e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ec12:	f7fb b9a7 	b.w	8019f64 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 801ec16:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801ec1a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ec1e:	f7fa bfd3 	b.w	8019bc8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 801ec22:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801ec26:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ec2a:	f7fa bde7 	b.w	80197fc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 801ec2e:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801ec32:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ec36:	f7fa bc41 	b.w	80194bc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 801ec3a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801ec3e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ec42:	f7ff bd19 	b.w	801e678 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 801ec46:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801ec4a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ec4e:	f7ff bb95 	b.w	801e37c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 801ec52:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801ec56:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ec5a:	f7ff ba05 	b.w	801e068 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 801ec5e:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801ec62:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ec66:	f7ff b871 	b.w	801dd4c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 801ec6a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801ec6e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ec72:	f7fe be1f 	b.w	801d8b4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 801ec76:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801ec7a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ec7e:	f7fe bcaf 	b.w	801d5e0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 801ec82:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801ec86:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ec8a:	f7fe ba8b 	b.w	801d1a4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 801ec8e:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801ec92:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ec96:	f7fe b955 	b.w	801cf44 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 801ec9a:	4b1f      	ldr	r3, [pc, #124]	@ (801ed18 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22c>)
 801ec9c:	4a1f      	ldr	r2, [pc, #124]	@ (801ed1c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 801ec9e:	f240 31ab 	movw	r1, #939	@ 0x3ab
 801eca2:	481f      	ldr	r0, [pc, #124]	@ (801ed20 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 801eca4:	f006 f846 	bl	8024d34 <__assert_func>
 801eca8:	4b1e      	ldr	r3, [pc, #120]	@ (801ed24 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x238>)
 801ecaa:	4a1c      	ldr	r2, [pc, #112]	@ (801ed1c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 801ecac:	f240 4131 	movw	r1, #1073	@ 0x431
 801ecb0:	481b      	ldr	r0, [pc, #108]	@ (801ed20 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 801ecb2:	f006 f83f 	bl	8024d34 <__assert_func>
 801ecb6:	4b1b      	ldr	r3, [pc, #108]	@ (801ed24 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x238>)
 801ecb8:	4a18      	ldr	r2, [pc, #96]	@ (801ed1c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 801ecba:	f240 31ed 	movw	r1, #1005	@ 0x3ed
 801ecbe:	4818      	ldr	r0, [pc, #96]	@ (801ed20 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 801ecc0:	f006 f838 	bl	8024d34 <__assert_func>
 801ecc4:	4b18      	ldr	r3, [pc, #96]	@ (801ed28 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x23c>)
 801ecc6:	4a15      	ldr	r2, [pc, #84]	@ (801ed1c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 801ecc8:	f240 412c 	movw	r1, #1068	@ 0x42c
 801eccc:	4814      	ldr	r0, [pc, #80]	@ (801ed20 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 801ecce:	f006 f831 	bl	8024d34 <__assert_func>
 801ecd2:	4b15      	ldr	r3, [pc, #84]	@ (801ed28 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x23c>)
 801ecd4:	4a11      	ldr	r2, [pc, #68]	@ (801ed1c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 801ecd6:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 801ecda:	4811      	ldr	r0, [pc, #68]	@ (801ed20 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 801ecdc:	f006 f82a 	bl	8024d34 <__assert_func>
 801ece0:	4b12      	ldr	r3, [pc, #72]	@ (801ed2c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x240>)
 801ece2:	4a0e      	ldr	r2, [pc, #56]	@ (801ed1c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 801ece4:	f240 4104 	movw	r1, #1028	@ 0x404
 801ece8:	480d      	ldr	r0, [pc, #52]	@ (801ed20 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 801ecea:	f006 f823 	bl	8024d34 <__assert_func>
 801ecee:	4b0f      	ldr	r3, [pc, #60]	@ (801ed2c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x240>)
 801ecf0:	4a0a      	ldr	r2, [pc, #40]	@ (801ed1c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 801ecf2:	f44f 7170 	mov.w	r1, #960	@ 0x3c0
 801ecf6:	480a      	ldr	r0, [pc, #40]	@ (801ed20 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 801ecf8:	f006 f81c 	bl	8024d34 <__assert_func>
 801ecfc:	4b0c      	ldr	r3, [pc, #48]	@ (801ed30 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x244>)
 801ecfe:	4a07      	ldr	r2, [pc, #28]	@ (801ed1c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 801ed00:	f44f 7175 	mov.w	r1, #980	@ 0x3d4
 801ed04:	4806      	ldr	r0, [pc, #24]	@ (801ed20 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 801ed06:	f006 f815 	bl	8024d34 <__assert_func>
 801ed0a:	4b09      	ldr	r3, [pc, #36]	@ (801ed30 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x244>)
 801ed0c:	4a03      	ldr	r2, [pc, #12]	@ (801ed1c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 801ed0e:	f44f 6183 	mov.w	r1, #1048	@ 0x418
 801ed12:	4803      	ldr	r0, [pc, #12]	@ (801ed20 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 801ed14:	f006 f80e 	bl	8024d34 <__assert_func>
 801ed18:	08027620 	.word	0x08027620
 801ed1c:	08028170 	.word	0x08028170
 801ed20:	08027928 	.word	0x08027928
 801ed24:	08027780 	.word	0x08027780
 801ed28:	0802771c 	.word	0x0802771c
 801ed2c:	0802765c 	.word	0x0802765c
 801ed30:	080276bc 	.word	0x080276bc

0801ed34 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801ed34:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ed38:	b089      	sub	sp, #36	@ 0x24
 801ed3a:	f89d 4044 	ldrb.w	r4, [sp, #68]	@ 0x44
 801ed3e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801ed40:	b13c      	cbz	r4, 801ed52 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 801ed42:	f9b5 6004 	ldrsh.w	r6, [r5, #4]
 801ed46:	2e00      	cmp	r6, #0
 801ed48:	dd03      	ble.n	801ed52 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 801ed4a:	f9b5 6006 	ldrsh.w	r6, [r5, #6]
 801ed4e:	2e00      	cmp	r6, #0
 801ed50:	dc02      	bgt.n	801ed58 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x24>
 801ed52:	b009      	add	sp, #36	@ 0x24
 801ed54:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801ed58:	f04f 0800 	mov.w	r8, #0
 801ed5c:	4606      	mov	r6, r0
 801ed5e:	f362 080f 	bfi	r8, r2, #0, #16
 801ed62:	4608      	mov	r0, r1
 801ed64:	460f      	mov	r7, r1
 801ed66:	f363 481f 	bfi	r8, r3, #16, #16
 801ed6a:	f7f3 f94b 	bl	8012004 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801ed6e:	4681      	mov	r9, r0
 801ed70:	4638      	mov	r0, r7
 801ed72:	f7f3 f97b 	bl	801206c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801ed76:	2300      	movs	r3, #0
 801ed78:	f369 030f 	bfi	r3, r9, #0, #16
 801ed7c:	f360 431f 	bfi	r3, r0, #16, #16
 801ed80:	4638      	mov	r0, r7
 801ed82:	e9cd 8302 	strd	r8, r3, [sp, #8]
 801ed86:	f7f3 fa75 	bl	8012274 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801ed8a:	280b      	cmp	r0, #11
 801ed8c:	d024      	beq.n	801edd8 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa4>
 801ed8e:	aa04      	add	r2, sp, #16
 801ed90:	f10d 0808 	add.w	r8, sp, #8
 801ed94:	e898 0003 	ldmia.w	r8, {r0, r1}
 801ed98:	e882 0003 	stmia.w	r2, {r0, r1}
 801ed9c:	6828      	ldr	r0, [r5, #0]
 801ed9e:	6869      	ldr	r1, [r5, #4]
 801eda0:	ab06      	add	r3, sp, #24
 801eda2:	c303      	stmia	r3!, {r0, r1}
 801eda4:	4610      	mov	r0, r2
 801eda6:	f7f0 fb1b 	bl	800f3e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801edaa:	4641      	mov	r1, r8
 801edac:	a806      	add	r0, sp, #24
 801edae:	f7f0 fb3f 	bl	800f430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801edb2:	4638      	mov	r0, r7
 801edb4:	f7f3 f9da 	bl	801216c <_ZNK8touchgfx6Bitmap7getDataEv>
 801edb8:	4680      	mov	r8, r0
 801edba:	4638      	mov	r0, r7
 801edbc:	f7f3 fa5a 	bl	8012274 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801edc0:	280d      	cmp	r0, #13
 801edc2:	f200 8083 	bhi.w	801eecc <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x198>
 801edc6:	e8df f000 	tbb	[pc, r0]
 801edca:	6467      	.short	0x6467
 801edcc:	81818117 	.word	0x81818117
 801edd0:	81818181 	.word	0x81818181
 801edd4:	6a818181 	.word	0x6a818181
 801edd8:	4638      	mov	r0, r7
 801edda:	f7f3 f9c7 	bl	801216c <_ZNK8touchgfx6Bitmap7getDataEv>
 801edde:	4680      	mov	r8, r0
 801ede0:	4638      	mov	r0, r7
 801ede2:	f7f3 f9f3 	bl	80121cc <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801ede6:	4641      	mov	r1, r8
 801ede8:	4602      	mov	r2, r0
 801edea:	e9cd 5400 	strd	r5, r4, [sp]
 801edee:	4630      	mov	r0, r6
 801edf0:	ab02      	add	r3, sp, #8
 801edf2:	f7ff fe7b 	bl	801eaec <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801edf6:	e7ac      	b.n	801ed52 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 801edf8:	f04f 0910 	mov.w	r9, #16
 801edfc:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 801ee00:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 801ee04:	4d37      	ldr	r5, [pc, #220]	@ (801eee4 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b0>)
 801ee06:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 801ee0a:	440a      	add	r2, r1
 801ee0c:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 801ee10:	6828      	ldr	r0, [r5, #0]
 801ee12:	440b      	add	r3, r1
 801ee14:	f8ad 2018 	strh.w	r2, [sp, #24]
 801ee18:	f8ad 301a 	strh.w	r3, [sp, #26]
 801ee1c:	2800      	cmp	r0, #0
 801ee1e:	d05b      	beq.n	801eed8 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1a4>
 801ee20:	f7f6 fa20 	bl	8015264 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 801ee24:	6833      	ldr	r3, [r6, #0]
 801ee26:	4630      	mov	r0, r6
 801ee28:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 801ee2a:	4798      	blx	r3
 801ee2c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801ee30:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 801ee34:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 801ee38:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 801ee3c:	f7f3 fdd6 	bl	80129ec <nema_set_clip>
 801ee40:	2200      	movs	r2, #0
 801ee42:	4623      	mov	r3, r4
 801ee44:	4611      	mov	r1, r2
 801ee46:	4610      	mov	r0, r2
 801ee48:	f7f3 fe04 	bl	8012a54 <nema_rgba>
 801ee4c:	f7f6 f904 	bl	8015058 <nema_set_const_color>
 801ee50:	2cff      	cmp	r4, #255	@ 0xff
 801ee52:	d02a      	beq.n	801eeaa <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x176>
 801ee54:	f04f 33ff 	mov.w	r3, #4294967295
 801ee58:	2201      	movs	r2, #1
 801ee5a:	2100      	movs	r1, #0
 801ee5c:	4822      	ldr	r0, [pc, #136]	@ (801eee8 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b4>)
 801ee5e:	f7f5 fd35 	bl	80148cc <nema_set_blend>
 801ee62:	2100      	movs	r1, #0
 801ee64:	f04f 34ff 	mov.w	r4, #4294967295
 801ee68:	f9bd 2016 	ldrsh.w	r2, [sp, #22]
 801ee6c:	464b      	mov	r3, r9
 801ee6e:	4640      	mov	r0, r8
 801ee70:	9101      	str	r1, [sp, #4]
 801ee72:	9400      	str	r4, [sp, #0]
 801ee74:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 801ee78:	f7f3 fdf4 	bl	8012a64 <nema_bind_src_tex>
 801ee7c:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 801ee80:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801ee84:	f7f3 ff7a 	bl	8012d7c <nema_blit>
 801ee88:	6828      	ldr	r0, [r5, #0]
 801ee8a:	b328      	cbz	r0, 801eed8 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1a4>
 801ee8c:	f7f6 fa0a 	bl	80152a4 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 801ee90:	e75f      	b.n	801ed52 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 801ee92:	f04f 0939 	mov.w	r9, #57	@ 0x39
 801ee96:	e7b1      	b.n	801edfc <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc8>
 801ee98:	f04f 0904 	mov.w	r9, #4
 801ee9c:	e7ae      	b.n	801edfc <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc8>
 801ee9e:	4638      	mov	r0, r7
 801eea0:	f7f3 f994 	bl	80121cc <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801eea4:	f890 9000 	ldrb.w	r9, [r0]
 801eea8:	e7a8      	b.n	801edfc <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc8>
 801eeaa:	4638      	mov	r0, r7
 801eeac:	f7f3 f9e2 	bl	8012274 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801eeb0:	b120      	cbz	r0, 801eebc <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x188>
 801eeb2:	4638      	mov	r0, r7
 801eeb4:	f7f3 f9de 	bl	8012274 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801eeb8:	2801      	cmp	r0, #1
 801eeba:	d1cb      	bne.n	801ee54 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x120>
 801eebc:	2201      	movs	r2, #1
 801eebe:	f04f 33ff 	mov.w	r3, #4294967295
 801eec2:	4610      	mov	r0, r2
 801eec4:	2100      	movs	r1, #0
 801eec6:	f7f5 fd01 	bl	80148cc <nema_set_blend>
 801eeca:	e7ca      	b.n	801ee62 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x12e>
 801eecc:	4b07      	ldr	r3, [pc, #28]	@ (801eeec <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>)
 801eece:	4a08      	ldr	r2, [pc, #32]	@ (801eef0 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1bc>)
 801eed0:	2175      	movs	r1, #117	@ 0x75
 801eed2:	4808      	ldr	r0, [pc, #32]	@ (801eef4 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1c0>)
 801eed4:	f005 ff2e 	bl	8024d34 <__assert_func>
 801eed8:	4b07      	ldr	r3, [pc, #28]	@ (801eef8 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1c4>)
 801eeda:	4a08      	ldr	r2, [pc, #32]	@ (801eefc <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1c8>)
 801eedc:	217c      	movs	r1, #124	@ 0x7c
 801eede:	4808      	ldr	r0, [pc, #32]	@ (801ef00 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1cc>)
 801eee0:	f005 ff28 	bl	8024d34 <__assert_func>
 801eee4:	2004c150 	.word	0x2004c150
 801eee8:	08000504 	.word	0x08000504
 801eeec:	0802794c 	.word	0x0802794c
 801eef0:	08028264 	.word	0x08028264
 801eef4:	08027928 	.word	0x08027928
 801eef8:	08027884 	.word	0x08027884
 801eefc:	08028130 	.word	0x08028130
 801ef00:	080278ac 	.word	0x080278ac

0801ef04 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801ef04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ef08:	b089      	sub	sp, #36	@ 0x24
 801ef0a:	9f15      	ldr	r7, [sp, #84]	@ 0x54
 801ef0c:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 801ef0e:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 801ef12:	9104      	str	r1, [sp, #16]
 801ef14:	8809      	ldrh	r1, [r1, #0]
 801ef16:	fb07 6c04 	mla	ip, r7, r4, r6
 801ef1a:	10c8      	asrs	r0, r1, #3
 801ef1c:	120d      	asrs	r5, r1, #8
 801ef1e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801ef22:	f005 0af8 	and.w	sl, r5, #248	@ 0xf8
 801ef26:	9002      	str	r0, [sp, #8]
 801ef28:	00c9      	lsls	r1, r1, #3
 801ef2a:	0200      	lsls	r0, r0, #8
 801ef2c:	b2c9      	uxtb	r1, r1
 801ef2e:	4690      	mov	r8, r2
 801ef30:	ea40 400a 	orr.w	r0, r0, sl, lsl #16
 801ef34:	469e      	mov	lr, r3
 801ef36:	eb02 030c 	add.w	r3, r2, ip
 801ef3a:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 801ef3e:	4308      	orrs	r0, r1
 801ef40:	2f00      	cmp	r7, #0
 801ef42:	9103      	str	r1, [sp, #12]
 801ef44:	9305      	str	r3, [sp, #20]
 801ef46:	9007      	str	r0, [sp, #28]
 801ef48:	f107 0501 	add.w	r5, r7, #1
 801ef4c:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 801ef50:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 801ef54:	f89d 105c 	ldrb.w	r1, [sp, #92]	@ 0x5c
 801ef58:	9200      	str	r2, [sp, #0]
 801ef5a:	db02      	blt.n	801ef62 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x5e>
 801ef5c:	42be      	cmp	r6, r7
 801ef5e:	f300 80a3 	bgt.w	801f0a8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1a4>
 801ef62:	fa5f fb80 	uxtb.w	fp, r0
 801ef66:	af07      	add	r7, sp, #28
 801ef68:	465a      	mov	r2, fp
 801ef6a:	46b8      	mov	r8, r7
 801ef6c:	2d00      	cmp	r5, #0
 801ef6e:	db01      	blt.n	801ef74 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x70>
 801ef70:	42ae      	cmp	r6, r5
 801ef72:	dc79      	bgt.n	801f068 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x164>
 801ef74:	f10d 0e1c 	add.w	lr, sp, #28
 801ef78:	46f1      	mov	r9, lr
 801ef7a:	b2c0      	uxtb	r0, r0
 801ef7c:	9001      	str	r0, [sp, #4]
 801ef7e:	2b0f      	cmp	r3, #15
 801ef80:	f200 80ce 	bhi.w	801f120 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x21c>
 801ef84:	290f      	cmp	r1, #15
 801ef86:	f200 80cb 	bhi.w	801f120 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x21c>
 801ef8a:	9c00      	ldr	r4, [sp, #0]
 801ef8c:	b29b      	uxth	r3, r3
 801ef8e:	43e4      	mvns	r4, r4
 801ef90:	b289      	uxth	r1, r1
 801ef92:	fb03 f501 	mul.w	r5, r3, r1
 801ef96:	011b      	lsls	r3, r3, #4
 801ef98:	1b5e      	subs	r6, r3, r5
 801ef9a:	b2b6      	uxth	r6, r6
 801ef9c:	f897 c002 	ldrb.w	ip, [r7, #2]
 801efa0:	ebc5 1101 	rsb	r1, r5, r1, lsl #4
 801efa4:	787f      	ldrb	r7, [r7, #1]
 801efa6:	fb06 f202 	mul.w	r2, r6, r2
 801efaa:	b289      	uxth	r1, r1
 801efac:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 801efb0:	fb06 fc0c 	mul.w	ip, r6, ip
 801efb4:	1a5b      	subs	r3, r3, r1
 801efb6:	fb06 f607 	mul.w	r6, r6, r7
 801efba:	b29b      	uxth	r3, r3
 801efbc:	f898 7001 	ldrb.w	r7, [r8, #1]
 801efc0:	fb03 220b 	mla	r2, r3, fp, r2
 801efc4:	f898 b002 	ldrb.w	fp, [r8, #2]
 801efc8:	fb03 6607 	mla	r6, r3, r7, r6
 801efcc:	fb03 cc0b 	mla	ip, r3, fp, ip
 801efd0:	f899 8002 	ldrb.w	r8, [r9, #2]
 801efd4:	f899 7001 	ldrb.w	r7, [r9, #1]
 801efd8:	9b01      	ldr	r3, [sp, #4]
 801efda:	fb01 cc08 	mla	ip, r1, r8, ip
 801efde:	fb01 2203 	mla	r2, r1, r3, r2
 801efe2:	fb01 6607 	mla	r6, r1, r7, r6
 801efe6:	f89e 8002 	ldrb.w	r8, [lr, #2]
 801efea:	f89e 7001 	ldrb.w	r7, [lr, #1]
 801efee:	9b03      	ldr	r3, [sp, #12]
 801eff0:	9902      	ldr	r1, [sp, #8]
 801eff2:	fb05 2200 	mla	r2, r5, r0, r2
 801eff6:	b2e4      	uxtb	r4, r4
 801eff8:	fb05 cc08 	mla	ip, r5, r8, ip
 801effc:	fb05 6607 	mla	r6, r5, r7, r6
 801f000:	fb13 f004 	smulbb	r0, r3, r4
 801f004:	fb1a f304 	smulbb	r3, sl, r4
 801f008:	fb11 f404 	smulbb	r4, r1, r4
 801f00c:	f8bd e000 	ldrh.w	lr, [sp]
 801f010:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f014:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f018:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801f01c:	fb02 020e 	mla	r2, r2, lr, r0
 801f020:	fb0c 330e 	mla	r3, ip, lr, r3
 801f024:	fb06 4e0e 	mla	lr, r6, lr, r4
 801f028:	fa1f fc83 	uxth.w	ip, r3
 801f02c:	b292      	uxth	r2, r2
 801f02e:	fa1f fe8e 	uxth.w	lr, lr
 801f032:	f10c 0301 	add.w	r3, ip, #1
 801f036:	1c50      	adds	r0, r2, #1
 801f038:	f10e 0101 	add.w	r1, lr, #1
 801f03c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801f040:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801f044:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801f048:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f04c:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801f050:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801f054:	4313      	orrs	r3, r2
 801f056:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801f05a:	9a04      	ldr	r2, [sp, #16]
 801f05c:	ea43 030e 	orr.w	r3, r3, lr
 801f060:	8013      	strh	r3, [r2, #0]
 801f062:	b009      	add	sp, #36	@ 0x24
 801f064:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f068:	2900      	cmp	r1, #0
 801f06a:	d036      	beq.n	801f0da <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d6>
 801f06c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f06e:	2d00      	cmp	r5, #0
 801f070:	db45      	blt.n	801f0fe <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1fa>
 801f072:	42ac      	cmp	r4, r5
 801f074:	dd43      	ble.n	801f0fe <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1fa>
 801f076:	9d05      	ldr	r5, [sp, #20]
 801f078:	f815 9004 	ldrb.w	r9, [r5, r4]
 801f07c:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801f080:	44f1      	add	r9, lr
 801f082:	f899 5000 	ldrb.w	r5, [r9]
 801f086:	9501      	str	r5, [sp, #4]
 801f088:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f08a:	3501      	adds	r5, #1
 801f08c:	d433      	bmi.n	801f0f6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1f2>
 801f08e:	42ac      	cmp	r4, r5
 801f090:	dd31      	ble.n	801f0f6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1f2>
 801f092:	2b00      	cmp	r3, #0
 801f094:	d040      	beq.n	801f118 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x214>
 801f096:	9805      	ldr	r0, [sp, #20]
 801f098:	4420      	add	r0, r4
 801f09a:	7840      	ldrb	r0, [r0, #1]
 801f09c:	eb00 0440 	add.w	r4, r0, r0, lsl #1
 801f0a0:	f81e 0004 	ldrb.w	r0, [lr, r4]
 801f0a4:	44a6      	add	lr, r4
 801f0a6:	e76a      	b.n	801ef7e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x7a>
 801f0a8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f0aa:	2a00      	cmp	r2, #0
 801f0ac:	db01      	blt.n	801f0b2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ae>
 801f0ae:	4294      	cmp	r4, r2
 801f0b0:	dc1b      	bgt.n	801f0ea <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1e6>
 801f0b2:	f10d 081c 	add.w	r8, sp, #28
 801f0b6:	3201      	adds	r2, #1
 801f0b8:	f898 b000 	ldrb.w	fp, [r8]
 801f0bc:	d40a      	bmi.n	801f0d4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>
 801f0be:	4294      	cmp	r4, r2
 801f0c0:	dd08      	ble.n	801f0d4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>
 801f0c2:	b1fb      	cbz	r3, 801f104 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x200>
 801f0c4:	9a05      	ldr	r2, [sp, #20]
 801f0c6:	7857      	ldrb	r7, [r2, #1]
 801f0c8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f0cc:	f81e 2007 	ldrb.w	r2, [lr, r7]
 801f0d0:	4477      	add	r7, lr
 801f0d2:	e74b      	b.n	801ef6c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x68>
 801f0d4:	b2c2      	uxtb	r2, r0
 801f0d6:	af07      	add	r7, sp, #28
 801f0d8:	e748      	b.n	801ef6c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x68>
 801f0da:	b2c0      	uxtb	r0, r0
 801f0dc:	2b0f      	cmp	r3, #15
 801f0de:	9001      	str	r0, [sp, #4]
 801f0e0:	d81e      	bhi.n	801f120 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x21c>
 801f0e2:	f10d 0e1c 	add.w	lr, sp, #28
 801f0e6:	46f1      	mov	r9, lr
 801f0e8:	e74f      	b.n	801ef8a <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x86>
 801f0ea:	f818 800c 	ldrb.w	r8, [r8, ip]
 801f0ee:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801f0f2:	44f0      	add	r8, lr
 801f0f4:	e7df      	b.n	801f0b6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1b2>
 801f0f6:	b2c0      	uxtb	r0, r0
 801f0f8:	f10d 0e1c 	add.w	lr, sp, #28
 801f0fc:	e73f      	b.n	801ef7e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x7a>
 801f0fe:	f10d 091c 	add.w	r9, sp, #28
 801f102:	e7be      	b.n	801f082 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x17e>
 801f104:	2d00      	cmp	r5, #0
 801f106:	b2c2      	uxtb	r2, r0
 801f108:	af07      	add	r7, sp, #28
 801f10a:	f6bf af31 	bge.w	801ef70 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6c>
 801f10e:	46be      	mov	lr, r7
 801f110:	46b9      	mov	r9, r7
 801f112:	4610      	mov	r0, r2
 801f114:	9201      	str	r2, [sp, #4]
 801f116:	e735      	b.n	801ef84 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 801f118:	b2c0      	uxtb	r0, r0
 801f11a:	f10d 0e1c 	add.w	lr, sp, #28
 801f11e:	e731      	b.n	801ef84 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 801f120:	4b03      	ldr	r3, [pc, #12]	@ (801f130 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x22c>)
 801f122:	4a04      	ldr	r2, [pc, #16]	@ (801f134 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x230>)
 801f124:	f44f 7170 	mov.w	r1, #960	@ 0x3c0
 801f128:	4803      	ldr	r0, [pc, #12]	@ (801f138 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x234>)
 801f12a:	f005 fe03 	bl	8024d34 <__assert_func>
 801f12e:	bf00      	nop
 801f130:	08027d5c 	.word	0x08027d5c
 801f134:	080283d8 	.word	0x080283d8
 801f138:	08027ee4 	.word	0x08027ee4

0801f13c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f13c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f140:	ed2d 8b08 	vpush	{d8-d11}
 801f144:	b095      	sub	sp, #84	@ 0x54
 801f146:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 801f14a:	e9dd 512b 	ldrd	r5, r1, [sp, #172]	@ 0xac
 801f14e:	e9dd b827 	ldrd	fp, r8, [sp, #156]	@ 0x9c
 801f152:	686c      	ldr	r4, [r5, #4]
 801f154:	461a      	mov	r2, r3
 801f156:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 801f158:	f89d 60bc 	ldrb.w	r6, [sp, #188]	@ 0xbc
 801f15c:	fb04 1303 	mla	r3, r4, r3, r1
 801f160:	682c      	ldr	r4, [r5, #0]
 801f162:	e9cd 0612 	strd	r0, r6, [sp, #72]	@ 0x48
 801f166:	43f0      	mvns	r0, r6
 801f168:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801f16c:	eeb0 aa40 	vmov.f32	s20, s0
 801f170:	eef0 9a60 	vmov.f32	s19, s1
 801f174:	eeb0 9a41 	vmov.f32	s18, s2
 801f178:	eef0 8a62 	vmov.f32	s17, s5
 801f17c:	eeb0 8a43 	vmov.f32	s16, s6
 801f180:	eef0 ba44 	vmov.f32	s23, s8
 801f184:	eeb0 ba64 	vmov.f32	s22, s9
 801f188:	eef0 aa45 	vmov.f32	s21, s10
 801f18c:	469a      	mov	sl, r3
 801f18e:	992e      	ldr	r1, [sp, #184]	@ 0xb8
 801f190:	9d2e      	ldr	r5, [sp, #184]	@ 0xb8
 801f192:	6849      	ldr	r1, [r1, #4]
 801f194:	682d      	ldr	r5, [r5, #0]
 801f196:	3104      	adds	r1, #4
 801f198:	b2c0      	uxtb	r0, r0
 801f19a:	9108      	str	r1, [sp, #32]
 801f19c:	b2b1      	uxth	r1, r6
 801f19e:	950b      	str	r5, [sp, #44]	@ 0x2c
 801f1a0:	900c      	str	r0, [sp, #48]	@ 0x30
 801f1a2:	910d      	str	r1, [sp, #52]	@ 0x34
 801f1a4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f1a6:	2b00      	cmp	r3, #0
 801f1a8:	dc02      	bgt.n	801f1b0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801f1aa:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801f1ac:	2b00      	cmp	r3, #0
 801f1ae:	dd65      	ble.n	801f27c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801f1b0:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801f1b2:	2a00      	cmp	r2, #0
 801f1b4:	e9d3 4e02 	ldrd	r4, lr, [r3, #8]
 801f1b8:	b225      	sxth	r5, r4
 801f1ba:	fa0f f78e 	sxth.w	r7, lr
 801f1be:	f340 8233 	ble.w	801f628 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ec>
 801f1c2:	1e6e      	subs	r6, r5, #1
 801f1c4:	f107 3cff 	add.w	ip, r7, #4294967295
 801f1c8:	f8cd e024 	str.w	lr, [sp, #36]	@ 0x24
 801f1cc:	e9dd e929 	ldrd	lr, r9, [sp, #164]	@ 0xa4
 801f1d0:	ea5f 432b 	movs.w	r3, fp, asr #16
 801f1d4:	ea4f 4128 	mov.w	r1, r8, asr #16
 801f1d8:	d405      	bmi.n	801f1e6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801f1da:	42b3      	cmp	r3, r6
 801f1dc:	da03      	bge.n	801f1e6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801f1de:	2900      	cmp	r1, #0
 801f1e0:	db01      	blt.n	801f1e6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801f1e2:	4561      	cmp	r1, ip
 801f1e4:	db4f      	blt.n	801f286 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801f1e6:	1c58      	adds	r0, r3, #1
 801f1e8:	d406      	bmi.n	801f1f8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbc>
 801f1ea:	42a8      	cmp	r0, r5
 801f1ec:	dc04      	bgt.n	801f1f8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbc>
 801f1ee:	1c48      	adds	r0, r1, #1
 801f1f0:	d402      	bmi.n	801f1f8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbc>
 801f1f2:	42b8      	cmp	r0, r7
 801f1f4:	f340 817e 	ble.w	801f4f4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b8>
 801f1f8:	3a01      	subs	r2, #1
 801f1fa:	44f3      	add	fp, lr
 801f1fc:	44c8      	add	r8, r9
 801f1fe:	f10a 0a02 	add.w	sl, sl, #2
 801f202:	d1e5      	bne.n	801f1d0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f204:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f206:	2b00      	cmp	r3, #0
 801f208:	dd38      	ble.n	801f27c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801f20a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f20e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801f212:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801f216:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801f21a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801f21e:	ee29 6aa7 	vmul.f32	s12, s19, s15
 801f222:	ee69 7a27 	vmul.f32	s15, s18, s15
 801f226:	ee76 6a68 	vsub.f32	s13, s12, s17
 801f22a:	ee37 7ac8 	vsub.f32	s14, s15, s16
 801f22e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f232:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801f236:	ee16 2a90 	vmov	r2, s13
 801f23a:	3b01      	subs	r3, #1
 801f23c:	930e      	str	r3, [sp, #56]	@ 0x38
 801f23e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f240:	fb92 f3f3 	sdiv	r3, r2, r3
 801f244:	ee17 2a10 	vmov	r2, s14
 801f248:	eeb0 7a48 	vmov.f32	s14, s16
 801f24c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801f250:	ee17 8a10 	vmov	r8, s14
 801f254:	eeb0 7a68 	vmov.f32	s14, s17
 801f258:	9329      	str	r3, [sp, #164]	@ 0xa4
 801f25a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f25c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801f260:	fb92 f3f3 	sdiv	r3, r2, r3
 801f264:	932a      	str	r3, [sp, #168]	@ 0xa8
 801f266:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f268:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f26a:	ee17 ba10 	vmov	fp, s14
 801f26e:	eeb0 8a67 	vmov.f32	s16, s15
 801f272:	eef0 8a46 	vmov.f32	s17, s12
 801f276:	bf18      	it	ne
 801f278:	461a      	movne	r2, r3
 801f27a:	e793      	b.n	801f1a4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f27c:	b015      	add	sp, #84	@ 0x54
 801f27e:	ecbd 8b08 	vpop	{d8-d11}
 801f282:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f286:	46d4      	mov	ip, sl
 801f288:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801f28c:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 801f28e:	1e51      	subs	r1, r2, #1
 801f290:	fb00 b301 	mla	r3, r0, r1, fp
 801f294:	141b      	asrs	r3, r3, #16
 801f296:	910a      	str	r1, [sp, #40]	@ 0x28
 801f298:	f100 80cc 	bmi.w	801f434 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 801f29c:	42b3      	cmp	r3, r6
 801f29e:	f280 80c9 	bge.w	801f434 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 801f2a2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f2a4:	fb03 8301 	mla	r3, r3, r1, r8
 801f2a8:	141b      	asrs	r3, r3, #16
 801f2aa:	f100 80c3 	bmi.w	801f434 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 801f2ae:	3f01      	subs	r7, #1
 801f2b0:	42bb      	cmp	r3, r7
 801f2b2:	f280 80bf 	bge.w	801f434 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 801f2b6:	2a00      	cmp	r2, #0
 801f2b8:	dda4      	ble.n	801f204 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 801f2ba:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 801f2be:	e9cd ca09 	strd	ip, sl, [sp, #36]	@ 0x24
 801f2c2:	e08e      	b.n	801f3e2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801f2c4:	f891 c001 	ldrb.w	ip, [r1, #1]
 801f2c8:	194c      	adds	r4, r1, r5
 801f2ca:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801f2ce:	44bc      	add	ip, r7
 801f2d0:	2a00      	cmp	r2, #0
 801f2d2:	f000 80a6 	beq.w	801f422 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801f2d6:	5d48      	ldrb	r0, [r1, r5]
 801f2d8:	7865      	ldrb	r5, [r4, #1]
 801f2da:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f2de:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f2e2:	4438      	add	r0, r7
 801f2e4:	443d      	add	r5, r7
 801f2e6:	b29b      	uxth	r3, r3
 801f2e8:	b292      	uxth	r2, r2
 801f2ea:	fb03 f402 	mul.w	r4, r3, r2
 801f2ee:	011b      	lsls	r3, r3, #4
 801f2f0:	1b19      	subs	r1, r3, r4
 801f2f2:	f89c 9000 	ldrb.w	r9, [ip]
 801f2f6:	f89c e002 	ldrb.w	lr, [ip, #2]
 801f2fa:	b289      	uxth	r1, r1
 801f2fc:	f89c c001 	ldrb.w	ip, [ip, #1]
 801f300:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 801f304:	fb01 f909 	mul.w	r9, r1, r9
 801f308:	b292      	uxth	r2, r2
 801f30a:	fb01 fe0e 	mul.w	lr, r1, lr
 801f30e:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 801f312:	fb01 f10c 	mul.w	r1, r1, ip
 801f316:	f817 a00a 	ldrb.w	sl, [r7, sl]
 801f31a:	1a9b      	subs	r3, r3, r2
 801f31c:	f896 c002 	ldrb.w	ip, [r6, #2]
 801f320:	b29b      	uxth	r3, r3
 801f322:	7876      	ldrb	r6, [r6, #1]
 801f324:	fb03 990a 	mla	r9, r3, sl, r9
 801f328:	fb03 ec0c 	mla	ip, r3, ip, lr
 801f32c:	fb03 1306 	mla	r3, r3, r6, r1
 801f330:	7801      	ldrb	r1, [r0, #0]
 801f332:	f890 e002 	ldrb.w	lr, [r0, #2]
 801f336:	fb02 9901 	mla	r9, r2, r1, r9
 801f33a:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801f33c:	fb02 ce0e 	mla	lr, r2, lr, ip
 801f340:	7829      	ldrb	r1, [r5, #0]
 801f342:	f8b7 c000 	ldrh.w	ip, [r7]
 801f346:	7840      	ldrb	r0, [r0, #1]
 801f348:	78ae      	ldrb	r6, [r5, #2]
 801f34a:	fb02 3200 	mla	r2, r2, r0, r3
 801f34e:	fb04 9901 	mla	r9, r4, r1, r9
 801f352:	7868      	ldrb	r0, [r5, #1]
 801f354:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801f356:	ea4f 252c 	mov.w	r5, ip, asr #8
 801f35a:	fb04 ee06 	mla	lr, r4, r6, lr
 801f35e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801f362:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801f366:	fb15 f501 	smulbb	r5, r5, r1
 801f36a:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801f36e:	b2db      	uxtb	r3, r3
 801f370:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801f374:	fb13 f301 	smulbb	r3, r3, r1
 801f378:	fb1c fc01 	smulbb	ip, ip, r1
 801f37c:	990d      	ldr	r1, [sp, #52]	@ 0x34
 801f37e:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 801f382:	fb04 2200 	mla	r2, r4, r0, r2
 801f386:	fb0e 5501 	mla	r5, lr, r1, r5
 801f38a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801f38e:	b2ad      	uxth	r5, r5
 801f390:	fb02 cc01 	mla	ip, r2, r1, ip
 801f394:	1c6a      	adds	r2, r5, #1
 801f396:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801f39a:	463a      	mov	r2, r7
 801f39c:	f3c9 2907 	ubfx	r9, r9, #8, #8
 801f3a0:	fb09 3301 	mla	r3, r9, r1, r3
 801f3a4:	fa1f f18c 	uxth.w	r1, ip
 801f3a8:	b29b      	uxth	r3, r3
 801f3aa:	1c5c      	adds	r4, r3, #1
 801f3ac:	1c48      	adds	r0, r1, #1
 801f3ae:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 801f3b2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801f3b6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801f3ba:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f3be:	0949      	lsrs	r1, r1, #5
 801f3c0:	432b      	orrs	r3, r5
 801f3c2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f3c6:	430b      	orrs	r3, r1
 801f3c8:	f822 3b02 	strh.w	r3, [r2], #2
 801f3cc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801f3ce:	9209      	str	r2, [sp, #36]	@ 0x24
 801f3d0:	449b      	add	fp, r3
 801f3d2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f3d4:	4498      	add	r8, r3
 801f3d6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f3d8:	429a      	cmp	r2, r3
 801f3da:	d029      	beq.n	801f430 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f3dc:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801f3de:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 801f3e2:	ea4f 432b 	mov.w	r3, fp, asr #16
 801f3e6:	ea4f 4128 	mov.w	r1, r8, asr #16
 801f3ea:	fb05 3101 	mla	r1, r5, r1, r3
 801f3ee:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801f3f0:	9f08      	ldr	r7, [sp, #32]
 801f3f2:	f812 a001 	ldrb.w	sl, [r2, r1]
 801f3f6:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801f3fa:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801f3fe:	4411      	add	r1, r2
 801f400:	eb07 060a 	add.w	r6, r7, sl
 801f404:	f3c8 3203 	ubfx	r2, r8, #12, #4
 801f408:	2b00      	cmp	r3, #0
 801f40a:	f47f af5b 	bne.w	801f2c4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801f40e:	b15a      	cbz	r2, 801f428 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>
 801f410:	5d48      	ldrb	r0, [r1, r5]
 801f412:	9908      	ldr	r1, [sp, #32]
 801f414:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f418:	4635      	mov	r5, r6
 801f41a:	4408      	add	r0, r1
 801f41c:	46b4      	mov	ip, r6
 801f41e:	460f      	mov	r7, r1
 801f420:	e761      	b.n	801f2e6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801f422:	4635      	mov	r5, r6
 801f424:	4630      	mov	r0, r6
 801f426:	e75e      	b.n	801f2e6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801f428:	4635      	mov	r5, r6
 801f42a:	4630      	mov	r0, r6
 801f42c:	46b4      	mov	ip, r6
 801f42e:	e75a      	b.n	801f2e6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801f430:	469a      	mov	sl, r3
 801f432:	e6e7      	b.n	801f204 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 801f434:	2a00      	cmp	r2, #0
 801f436:	f77f aee5 	ble.w	801f204 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 801f43a:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 801f43c:	ea4f 432b 	mov.w	r3, fp, asr #16
 801f440:	ea4f 4128 	mov.w	r1, r8, asr #16
 801f444:	4675      	mov	r5, lr
 801f446:	46d1      	mov	r9, sl
 801f448:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
 801f44c:	f8dd a0b8 	ldr.w	sl, [sp, #184]	@ 0xb8
 801f450:	9609      	str	r6, [sp, #36]	@ 0x24
 801f452:	2b00      	cmp	r3, #0
 801f454:	f3cb 3703 	ubfx	r7, fp, #12, #4
 801f458:	f3c8 3203 	ubfx	r2, r8, #12, #4
 801f45c:	db27      	blt.n	801f4ae <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801f45e:	1e60      	subs	r0, r4, #1
 801f460:	4283      	cmp	r3, r0
 801f462:	da24      	bge.n	801f4ae <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801f464:	2900      	cmp	r1, #0
 801f466:	db22      	blt.n	801f4ae <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801f468:	1e68      	subs	r0, r5, #1
 801f46a:	4281      	cmp	r1, r0
 801f46c:	da1f      	bge.n	801f4ae <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801f46e:	b220      	sxth	r0, r4
 801f470:	fb01 3300 	mla	r3, r1, r0, r3
 801f474:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801f476:	5ccd      	ldrb	r5, [r1, r3]
 801f478:	440b      	add	r3, r1
 801f47a:	9908      	ldr	r1, [sp, #32]
 801f47c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f480:	460e      	mov	r6, r1
 801f482:	eb01 0c05 	add.w	ip, r1, r5
 801f486:	2f00      	cmp	r7, #0
 801f488:	d04b      	beq.n	801f522 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801f48a:	785c      	ldrb	r4, [r3, #1]
 801f48c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801f490:	440c      	add	r4, r1
 801f492:	2a00      	cmp	r2, #0
 801f494:	f000 80c4 	beq.w	801f620 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f498:	1819      	adds	r1, r3, r0
 801f49a:	7849      	ldrb	r1, [r1, #1]
 801f49c:	5c18      	ldrb	r0, [r3, r0]
 801f49e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801f4a2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f4a6:	1873      	adds	r3, r6, r1
 801f4a8:	9311      	str	r3, [sp, #68]	@ 0x44
 801f4aa:	4430      	add	r0, r6
 801f4ac:	e03f      	b.n	801f52e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801f4ae:	1c58      	adds	r0, r3, #1
 801f4b0:	d405      	bmi.n	801f4be <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 801f4b2:	42a0      	cmp	r0, r4
 801f4b4:	dc03      	bgt.n	801f4be <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 801f4b6:	1c48      	adds	r0, r1, #1
 801f4b8:	d401      	bmi.n	801f4be <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 801f4ba:	42a8      	cmp	r0, r5
 801f4bc:	dd20      	ble.n	801f500 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c4>
 801f4be:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801f4c0:	f109 0902 	add.w	r9, r9, #2
 801f4c4:	449b      	add	fp, r3
 801f4c6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f4c8:	4498      	add	r8, r3
 801f4ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f4cc:	2b00      	cmp	r3, #0
 801f4ce:	dd08      	ble.n	801f4e2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f4d0:	e9da 4502 	ldrd	r4, r5, [sl, #8]
 801f4d4:	3b01      	subs	r3, #1
 801f4d6:	9309      	str	r3, [sp, #36]	@ 0x24
 801f4d8:	ea4f 4128 	mov.w	r1, r8, asr #16
 801f4dc:	ea4f 432b 	mov.w	r3, fp, asr #16
 801f4e0:	e7b7      	b.n	801f452 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 801f4e2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f4e4:	f8dd a040 	ldr.w	sl, [sp, #64]	@ 0x40
 801f4e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f4ec:	3301      	adds	r3, #1
 801f4ee:	eb0a 0a43 	add.w	sl, sl, r3, lsl #1
 801f4f2:	e687      	b.n	801f204 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 801f4f4:	3a01      	subs	r2, #1
 801f4f6:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801f4fa:	920a      	str	r2, [sp, #40]	@ 0x28
 801f4fc:	4616      	mov	r6, r2
 801f4fe:	e7a1      	b.n	801f444 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 801f500:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801f502:	b22d      	sxth	r5, r5
 801f504:	b224      	sxth	r4, r4
 801f506:	e9cd 2005 	strd	r2, r0, [sp, #20]
 801f50a:	e9cd 1703 	strd	r1, r7, [sp, #12]
 801f50e:	9302      	str	r3, [sp, #8]
 801f510:	e9cd 4500 	strd	r4, r5, [sp]
 801f514:	9b08      	ldr	r3, [sp, #32]
 801f516:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801f518:	4649      	mov	r1, r9
 801f51a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801f51c:	f7ff fcf2 	bl	801ef04 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801f520:	e7cd      	b.n	801f4be <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 801f522:	2a00      	cmp	r2, #0
 801f524:	d173      	bne.n	801f60e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d2>
 801f526:	4660      	mov	r0, ip
 801f528:	4664      	mov	r4, ip
 801f52a:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 801f52e:	b2bb      	uxth	r3, r7
 801f530:	b292      	uxth	r2, r2
 801f532:	fb03 f702 	mul.w	r7, r3, r2
 801f536:	011b      	lsls	r3, r3, #4
 801f538:	1bd9      	subs	r1, r3, r7
 801f53a:	7826      	ldrb	r6, [r4, #0]
 801f53c:	f894 e002 	ldrb.w	lr, [r4, #2]
 801f540:	7864      	ldrb	r4, [r4, #1]
 801f542:	b289      	uxth	r1, r1
 801f544:	fb01 f606 	mul.w	r6, r1, r6
 801f548:	fb01 fe0e 	mul.w	lr, r1, lr
 801f54c:	ebc7 1202 	rsb	r2, r7, r2, lsl #4
 801f550:	fb01 f104 	mul.w	r1, r1, r4
 801f554:	9c08      	ldr	r4, [sp, #32]
 801f556:	b292      	uxth	r2, r2
 801f558:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 801f55c:	5d65      	ldrb	r5, [r4, r5]
 801f55e:	1a9b      	subs	r3, r3, r2
 801f560:	f89c 4002 	ldrb.w	r4, [ip, #2]
 801f564:	f89c c001 	ldrb.w	ip, [ip, #1]
 801f568:	b29b      	uxth	r3, r3
 801f56a:	fb03 e404 	mla	r4, r3, r4, lr
 801f56e:	fb03 6505 	mla	r5, r3, r5, r6
 801f572:	fb03 130c 	mla	r3, r3, ip, r1
 801f576:	f890 c001 	ldrb.w	ip, [r0, #1]
 801f57a:	7801      	ldrb	r1, [r0, #0]
 801f57c:	f890 e002 	ldrb.w	lr, [r0, #2]
 801f580:	fb02 3c0c 	mla	ip, r2, ip, r3
 801f584:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f586:	fb02 5601 	mla	r6, r2, r1, r5
 801f58a:	fb02 4e0e 	mla	lr, r2, lr, r4
 801f58e:	7899      	ldrb	r1, [r3, #2]
 801f590:	781a      	ldrb	r2, [r3, #0]
 801f592:	785b      	ldrb	r3, [r3, #1]
 801f594:	f8b9 0000 	ldrh.w	r0, [r9]
 801f598:	fb07 c303 	mla	r3, r7, r3, ip
 801f59c:	fb07 6202 	mla	r2, r7, r2, r6
 801f5a0:	00c5      	lsls	r5, r0, #3
 801f5a2:	1204      	asrs	r4, r0, #8
 801f5a4:	fb07 e101 	mla	r1, r7, r1, lr
 801f5a8:	10c0      	asrs	r0, r0, #3
 801f5aa:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801f5ac:	b2ed      	uxtb	r5, r5
 801f5ae:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801f5b2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f5b6:	fb15 f507 	smulbb	r5, r5, r7
 801f5ba:	fb14 f407 	smulbb	r4, r4, r7
 801f5be:	fb10 f007 	smulbb	r0, r0, r7
 801f5c2:	f3c3 2707 	ubfx	r7, r3, #8, #8
 801f5c6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f5c8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801f5cc:	461e      	mov	r6, r3
 801f5ce:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801f5d2:	fb02 5203 	mla	r2, r2, r3, r5
 801f5d6:	fb07 0006 	mla	r0, r7, r6, r0
 801f5da:	fb01 4303 	mla	r3, r1, r3, r4
 801f5de:	b281      	uxth	r1, r0
 801f5e0:	b294      	uxth	r4, r2
 801f5e2:	b29b      	uxth	r3, r3
 801f5e4:	1c4a      	adds	r2, r1, #1
 801f5e6:	1c5d      	adds	r5, r3, #1
 801f5e8:	1c60      	adds	r0, r4, #1
 801f5ea:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801f5ee:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 801f5f2:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 801f5f6:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801f5fa:	f3c0 21c4 	ubfx	r1, r0, #11, #5
 801f5fe:	0952      	lsrs	r2, r2, #5
 801f600:	430b      	orrs	r3, r1
 801f602:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f606:	4313      	orrs	r3, r2
 801f608:	f8a9 3000 	strh.w	r3, [r9]
 801f60c:	e757      	b.n	801f4be <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 801f60e:	5c18      	ldrb	r0, [r3, r0]
 801f610:	9b08      	ldr	r3, [sp, #32]
 801f612:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f616:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 801f61a:	4418      	add	r0, r3
 801f61c:	4664      	mov	r4, ip
 801f61e:	e786      	b.n	801f52e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801f620:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 801f624:	4660      	mov	r0, ip
 801f626:	e782      	b.n	801f52e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801f628:	f43f adec 	beq.w	801f204 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 801f62c:	1e6e      	subs	r6, r5, #1
 801f62e:	46d4      	mov	ip, sl
 801f630:	e62c      	b.n	801f28c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x150>
 801f632:	bf00      	nop

0801f634 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801f634:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f638:	4692      	mov	sl, r2
 801f63a:	b083      	sub	sp, #12
 801f63c:	880a      	ldrh	r2, [r1, #0]
 801f63e:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 801f642:	e9dd 740e 	ldrd	r7, r4, [sp, #56]	@ 0x38
 801f646:	0215      	lsls	r5, r2, #8
 801f648:	0150      	lsls	r0, r2, #5
 801f64a:	fb04 7e0c 	mla	lr, r4, ip, r7
 801f64e:	f400 407c 	and.w	r0, r0, #64512	@ 0xfc00
 801f652:	f405 0578 	and.w	r5, r5, #16252928	@ 0xf80000
 801f656:	00d2      	lsls	r2, r2, #3
 801f658:	4305      	orrs	r5, r0
 801f65a:	b2d2      	uxtb	r2, r2
 801f65c:	4315      	orrs	r5, r2
 801f65e:	2c00      	cmp	r4, #0
 801f660:	9501      	str	r5, [sp, #4]
 801f662:	eb0a 020e 	add.w	r2, sl, lr
 801f666:	f104 0801 	add.w	r8, r4, #1
 801f66a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801f66e:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 801f672:	f89d 0044 	ldrb.w	r0, [sp, #68]	@ 0x44
 801f676:	db01      	blt.n	801f67c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x48>
 801f678:	45a1      	cmp	r9, r4
 801f67a:	dc71      	bgt.n	801f760 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x12c>
 801f67c:	fa5f fa85 	uxtb.w	sl, r5
 801f680:	f10d 0b04 	add.w	fp, sp, #4
 801f684:	4654      	mov	r4, sl
 801f686:	46de      	mov	lr, fp
 801f688:	f1b8 0f00 	cmp.w	r8, #0
 801f68c:	db01      	blt.n	801f692 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5e>
 801f68e:	45c1      	cmp	r9, r8
 801f690:	dc4c      	bgt.n	801f72c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xf8>
 801f692:	fa5f f985 	uxtb.w	r9, r5
 801f696:	ab01      	add	r3, sp, #4
 801f698:	464d      	mov	r5, r9
 801f69a:	4698      	mov	r8, r3
 801f69c:	2e0f      	cmp	r6, #15
 801f69e:	f200 809b 	bhi.w	801f7d8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1a4>
 801f6a2:	280f      	cmp	r0, #15
 801f6a4:	f200 8098 	bhi.w	801f7d8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1a4>
 801f6a8:	b2b2      	uxth	r2, r6
 801f6aa:	b280      	uxth	r0, r0
 801f6ac:	fb02 f700 	mul.w	r7, r2, r0
 801f6b0:	0112      	lsls	r2, r2, #4
 801f6b2:	f89b c002 	ldrb.w	ip, [fp, #2]
 801f6b6:	1bd6      	subs	r6, r2, r7
 801f6b8:	f89b b001 	ldrb.w	fp, [fp, #1]
 801f6bc:	b2b6      	uxth	r6, r6
 801f6be:	ebc7 1000 	rsb	r0, r7, r0, lsl #4
 801f6c2:	fb06 f404 	mul.w	r4, r6, r4
 801f6c6:	fb06 fc0c 	mul.w	ip, r6, ip
 801f6ca:	fb06 f60b 	mul.w	r6, r6, fp
 801f6ce:	b280      	uxth	r0, r0
 801f6d0:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801f6d4:	f89e b002 	ldrb.w	fp, [lr, #2]
 801f6d8:	1a12      	subs	r2, r2, r0
 801f6da:	f89e e001 	ldrb.w	lr, [lr, #1]
 801f6de:	b292      	uxth	r2, r2
 801f6e0:	fb02 440a 	mla	r4, r2, sl, r4
 801f6e4:	fb02 660e 	mla	r6, r2, lr, r6
 801f6e8:	fb02 cc0b 	mla	ip, r2, fp, ip
 801f6ec:	f898 a002 	ldrb.w	sl, [r8, #2]
 801f6f0:	f898 8001 	ldrb.w	r8, [r8, #1]
 801f6f4:	fb00 4909 	mla	r9, r0, r9, r4
 801f6f8:	fb00 cc0a 	mla	ip, r0, sl, ip
 801f6fc:	fb00 6008 	mla	r0, r0, r8, r6
 801f700:	789e      	ldrb	r6, [r3, #2]
 801f702:	785b      	ldrb	r3, [r3, #1]
 801f704:	fb07 9905 	mla	r9, r7, r5, r9
 801f708:	fb07 c506 	mla	r5, r7, r6, ip
 801f70c:	fb07 0703 	mla	r7, r7, r3, r0
 801f710:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801f714:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801f718:	097f      	lsrs	r7, r7, #5
 801f71a:	ea45 0509 	orr.w	r5, r5, r9
 801f71e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801f722:	433d      	orrs	r5, r7
 801f724:	800d      	strh	r5, [r1, #0]
 801f726:	b003      	add	sp, #12
 801f728:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f72c:	b388      	cbz	r0, 801f792 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x15e>
 801f72e:	2f00      	cmp	r7, #0
 801f730:	db40      	blt.n	801f7b4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x180>
 801f732:	45bc      	cmp	ip, r7
 801f734:	dd3e      	ble.n	801f7b4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x180>
 801f736:	f812 800c 	ldrb.w	r8, [r2, ip]
 801f73a:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801f73e:	4498      	add	r8, r3
 801f740:	3701      	adds	r7, #1
 801f742:	f898 9000 	ldrb.w	r9, [r8]
 801f746:	d432      	bmi.n	801f7ae <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x17a>
 801f748:	45bc      	cmp	ip, r7
 801f74a:	dd30      	ble.n	801f7ae <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x17a>
 801f74c:	2e00      	cmp	r6, #0
 801f74e:	d040      	beq.n	801f7d2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x19e>
 801f750:	4494      	add	ip, r2
 801f752:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801f756:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f75a:	5c9d      	ldrb	r5, [r3, r2]
 801f75c:	4413      	add	r3, r2
 801f75e:	e79d      	b.n	801f69c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x68>
 801f760:	2f00      	cmp	r7, #0
 801f762:	db01      	blt.n	801f768 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x134>
 801f764:	45bc      	cmp	ip, r7
 801f766:	dc1c      	bgt.n	801f7a2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16e>
 801f768:	f10d 0e04 	add.w	lr, sp, #4
 801f76c:	1c7c      	adds	r4, r7, #1
 801f76e:	f89e a000 	ldrb.w	sl, [lr]
 801f772:	d40a      	bmi.n	801f78a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x156>
 801f774:	45a4      	cmp	ip, r4
 801f776:	dd08      	ble.n	801f78a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x156>
 801f778:	b1fe      	cbz	r6, 801f7ba <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x186>
 801f77a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f77e:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 801f782:	f813 400b 	ldrb.w	r4, [r3, fp]
 801f786:	449b      	add	fp, r3
 801f788:	e77e      	b.n	801f688 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x54>
 801f78a:	b2ec      	uxtb	r4, r5
 801f78c:	f10d 0b04 	add.w	fp, sp, #4
 801f790:	e77a      	b.n	801f688 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x54>
 801f792:	2e0f      	cmp	r6, #15
 801f794:	fa5f f985 	uxtb.w	r9, r5
 801f798:	d81e      	bhi.n	801f7d8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1a4>
 801f79a:	ab01      	add	r3, sp, #4
 801f79c:	4698      	mov	r8, r3
 801f79e:	464d      	mov	r5, r9
 801f7a0:	e782      	b.n	801f6a8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x74>
 801f7a2:	f81a e00e 	ldrb.w	lr, [sl, lr]
 801f7a6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801f7aa:	449e      	add	lr, r3
 801f7ac:	e7de      	b.n	801f76c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f7ae:	b2ed      	uxtb	r5, r5
 801f7b0:	ab01      	add	r3, sp, #4
 801f7b2:	e773      	b.n	801f69c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x68>
 801f7b4:	f10d 0804 	add.w	r8, sp, #4
 801f7b8:	e7c2      	b.n	801f740 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x10c>
 801f7ba:	f1b8 0f00 	cmp.w	r8, #0
 801f7be:	b2ec      	uxtb	r4, r5
 801f7c0:	f10d 0b04 	add.w	fp, sp, #4
 801f7c4:	f6bf af63 	bge.w	801f68e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 801f7c8:	465b      	mov	r3, fp
 801f7ca:	46d8      	mov	r8, fp
 801f7cc:	4625      	mov	r5, r4
 801f7ce:	46a1      	mov	r9, r4
 801f7d0:	e767      	b.n	801f6a2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801f7d2:	b2ed      	uxtb	r5, r5
 801f7d4:	ab01      	add	r3, sp, #4
 801f7d6:	e764      	b.n	801f6a2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801f7d8:	4b03      	ldr	r3, [pc, #12]	@ (801f7e8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1b4>)
 801f7da:	4a04      	ldr	r2, [pc, #16]	@ (801f7ec <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1b8>)
 801f7dc:	f44f 7170 	mov.w	r1, #960	@ 0x3c0
 801f7e0:	4803      	ldr	r0, [pc, #12]	@ (801f7f0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1bc>)
 801f7e2:	f005 faa7 	bl	8024d34 <__assert_func>
 801f7e6:	bf00      	nop
 801f7e8:	08027d5c 	.word	0x08027d5c
 801f7ec:	080283d8 	.word	0x080283d8
 801f7f0:	08027ee4 	.word	0x08027ee4

0801f7f4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f7f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f7f8:	ed2d 8b0a 	vpush	{d8-d12}
 801f7fc:	eeb0 aa40 	vmov.f32	s20, s0
 801f800:	eef0 9a60 	vmov.f32	s19, s1
 801f804:	eeb0 9a41 	vmov.f32	s18, s2
 801f808:	eef0 8a62 	vmov.f32	s17, s5
 801f80c:	eeb0 8a43 	vmov.f32	s16, s6
 801f810:	eeb0 ca44 	vmov.f32	s24, s8
 801f814:	eef0 ba64 	vmov.f32	s23, s9
 801f818:	eeb0 ba45 	vmov.f32	s22, s10
 801f81c:	eef7 aa00 	vmov.f32	s21, #112	@ 0x3f800000  1.0
 801f820:	b093      	sub	sp, #76	@ 0x4c
 801f822:	e9cd 120a 	strd	r1, r2, [sp, #40]	@ 0x28
 801f826:	e9dd 412b 	ldrd	r4, r1, [sp, #172]	@ 0xac
 801f82a:	e9dd 9827 	ldrd	r9, r8, [sp, #156]	@ 0x9c
 801f82e:	9011      	str	r0, [sp, #68]	@ 0x44
 801f830:	461a      	mov	r2, r3
 801f832:	6860      	ldr	r0, [r4, #4]
 801f834:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 801f836:	f8dd a0a4 	ldr.w	sl, [sp, #164]	@ 0xa4
 801f83a:	fb00 1303 	mla	r3, r0, r3, r1
 801f83e:	992e      	ldr	r1, [sp, #184]	@ 0xb8
 801f840:	6820      	ldr	r0, [r4, #0]
 801f842:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
 801f844:	6849      	ldr	r1, [r1, #4]
 801f846:	6824      	ldr	r4, [r4, #0]
 801f848:	eb00 0b43 	add.w	fp, r0, r3, lsl #1
 801f84c:	1d0b      	adds	r3, r1, #4
 801f84e:	9409      	str	r4, [sp, #36]	@ 0x24
 801f850:	930c      	str	r3, [sp, #48]	@ 0x30
 801f852:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f854:	2b00      	cmp	r3, #0
 801f856:	dc02      	bgt.n	801f85e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801f858:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f85a:	2b00      	cmp	r3, #0
 801f85c:	dd61      	ble.n	801f922 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 801f85e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801f860:	2a00      	cmp	r2, #0
 801f862:	e9d3 4e02 	ldrd	r4, lr, [r3, #8]
 801f866:	b225      	sxth	r5, r4
 801f868:	fa0f f78e 	sxth.w	r7, lr
 801f86c:	f340 81d9 	ble.w	801fc22 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801f870:	f8cd e01c 	str.w	lr, [sp, #28]
 801f874:	f8dd e0a8 	ldr.w	lr, [sp, #168]	@ 0xa8
 801f878:	1e6e      	subs	r6, r5, #1
 801f87a:	f107 3cff 	add.w	ip, r7, #4294967295
 801f87e:	ea5f 4329 	movs.w	r3, r9, asr #16
 801f882:	ea4f 4128 	mov.w	r1, r8, asr #16
 801f886:	d405      	bmi.n	801f894 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801f888:	42b3      	cmp	r3, r6
 801f88a:	da03      	bge.n	801f894 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801f88c:	2900      	cmp	r1, #0
 801f88e:	db01      	blt.n	801f894 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801f890:	4561      	cmp	r1, ip
 801f892:	db4b      	blt.n	801f92c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801f894:	1c58      	adds	r0, r3, #1
 801f896:	d406      	bmi.n	801f8a6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801f898:	42a8      	cmp	r0, r5
 801f89a:	dc04      	bgt.n	801f8a6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801f89c:	1c48      	adds	r0, r1, #1
 801f89e:	d402      	bmi.n	801f8a6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801f8a0:	42b8      	cmp	r0, r7
 801f8a2:	f340 8149 	ble.w	801fb38 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801f8a6:	3a01      	subs	r2, #1
 801f8a8:	44d1      	add	r9, sl
 801f8aa:	44f0      	add	r8, lr
 801f8ac:	f10b 0b02 	add.w	fp, fp, #2
 801f8b0:	d1e5      	bne.n	801f87e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f8b2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f8b4:	2b00      	cmp	r3, #0
 801f8b6:	dd34      	ble.n	801f922 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 801f8b8:	ee3a aa0c 	vadd.f32	s20, s20, s24
 801f8bc:	ee79 9aab 	vadd.f32	s19, s19, s23
 801f8c0:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 801f8c4:	ee39 9a0b 	vadd.f32	s18, s18, s22
 801f8c8:	ee29 6aa7 	vmul.f32	s12, s19, s15
 801f8cc:	ee69 7a27 	vmul.f32	s15, s18, s15
 801f8d0:	ee76 6a68 	vsub.f32	s13, s12, s17
 801f8d4:	ee37 7ac8 	vsub.f32	s14, s15, s16
 801f8d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f8dc:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801f8e0:	ee16 2a90 	vmov	r2, s13
 801f8e4:	3b01      	subs	r3, #1
 801f8e6:	930a      	str	r3, [sp, #40]	@ 0x28
 801f8e8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f8ea:	fb92 faf3 	sdiv	sl, r2, r3
 801f8ee:	ee17 2a10 	vmov	r2, s14
 801f8f2:	eeb0 7a48 	vmov.f32	s14, s16
 801f8f6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801f8fa:	ee17 8a10 	vmov	r8, s14
 801f8fe:	eeb0 7a68 	vmov.f32	s14, s17
 801f902:	fb92 f3f3 	sdiv	r3, r2, r3
 801f906:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801f90a:	932a      	str	r3, [sp, #168]	@ 0xa8
 801f90c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f90e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801f910:	ee17 9a10 	vmov	r9, s14
 801f914:	eeb0 8a67 	vmov.f32	s16, s15
 801f918:	eef0 8a46 	vmov.f32	s17, s12
 801f91c:	bf18      	it	ne
 801f91e:	461a      	movne	r2, r3
 801f920:	e797      	b.n	801f852 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801f922:	b013      	add	sp, #76	@ 0x4c
 801f924:	ecbd 8b0a 	vpop	{d8-d12}
 801f928:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f92c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801f930:	f8cd b01c 	str.w	fp, [sp, #28]
 801f934:	1e51      	subs	r1, r2, #1
 801f936:	fb0a 9301 	mla	r3, sl, r1, r9
 801f93a:	141b      	asrs	r3, r3, #16
 801f93c:	9108      	str	r1, [sp, #32]
 801f93e:	f100 809e 	bmi.w	801fa7e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801f942:	42b3      	cmp	r3, r6
 801f944:	f280 809b 	bge.w	801fa7e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801f948:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f94a:	fb03 8301 	mla	r3, r3, r1, r8
 801f94e:	141b      	asrs	r3, r3, #16
 801f950:	f100 8095 	bmi.w	801fa7e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801f954:	3f01      	subs	r7, #1
 801f956:	42bb      	cmp	r3, r7
 801f958:	f280 8091 	bge.w	801fa7e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801f95c:	2a00      	cmp	r2, #0
 801f95e:	dda8      	ble.n	801f8b2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801f960:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801f964:	f8cd a0a4 	str.w	sl, [sp, #164]	@ 0xa4
 801f968:	f8cd b020 	str.w	fp, [sp, #32]
 801f96c:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 801f970:	e060      	b.n	801fa34 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801f972:	784f      	ldrb	r7, [r1, #1]
 801f974:	194c      	adds	r4, r1, r5
 801f976:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f97a:	4457      	add	r7, sl
 801f97c:	2a00      	cmp	r2, #0
 801f97e:	d075      	beq.n	801fa6c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801f980:	5d48      	ldrb	r0, [r1, r5]
 801f982:	7865      	ldrb	r5, [r4, #1]
 801f984:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f988:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f98c:	4450      	add	r0, sl
 801f98e:	4455      	add	r5, sl
 801f990:	b29b      	uxth	r3, r3
 801f992:	b292      	uxth	r2, r2
 801f994:	fb03 f402 	mul.w	r4, r3, r2
 801f998:	011b      	lsls	r3, r3, #4
 801f99a:	f897 e000 	ldrb.w	lr, [r7]
 801f99e:	f897 c002 	ldrb.w	ip, [r7, #2]
 801f9a2:	1b19      	subs	r1, r3, r4
 801f9a4:	787f      	ldrb	r7, [r7, #1]
 801f9a6:	b289      	uxth	r1, r1
 801f9a8:	fb01 fc0c 	mul.w	ip, r1, ip
 801f9ac:	fb01 fe0e 	mul.w	lr, r1, lr
 801f9b0:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 801f9b4:	fb01 f107 	mul.w	r1, r1, r7
 801f9b8:	b292      	uxth	r2, r2
 801f9ba:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 801f9be:	f81a b00b 	ldrb.w	fp, [sl, fp]
 801f9c2:	78b7      	ldrb	r7, [r6, #2]
 801f9c4:	1a9b      	subs	r3, r3, r2
 801f9c6:	7876      	ldrb	r6, [r6, #1]
 801f9c8:	b29b      	uxth	r3, r3
 801f9ca:	fb03 ee0b 	mla	lr, r3, fp, lr
 801f9ce:	fb03 c707 	mla	r7, r3, r7, ip
 801f9d2:	fb03 1306 	mla	r3, r3, r6, r1
 801f9d6:	f890 b000 	ldrb.w	fp, [r0]
 801f9da:	f890 c002 	ldrb.w	ip, [r0, #2]
 801f9de:	7841      	ldrb	r1, [r0, #1]
 801f9e0:	fb02 ee0b 	mla	lr, r2, fp, lr
 801f9e4:	fb02 3301 	mla	r3, r2, r1, r3
 801f9e8:	fb02 770c 	mla	r7, r2, ip, r7
 801f9ec:	f895 b000 	ldrb.w	fp, [r5]
 801f9f0:	f895 c002 	ldrb.w	ip, [r5, #2]
 801f9f4:	7869      	ldrb	r1, [r5, #1]
 801f9f6:	fb04 ee0b 	mla	lr, r4, fp, lr
 801f9fa:	fb04 3101 	mla	r1, r4, r1, r3
 801f9fe:	fb04 7c0c 	mla	ip, r4, ip, r7
 801fa02:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801fa04:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801fa08:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801fa0c:	0949      	lsrs	r1, r1, #5
 801fa0e:	4491      	add	r9, r2
 801fa10:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801fa12:	9b07      	ldr	r3, [sp, #28]
 801fa14:	ea4c 0e0e 	orr.w	lr, ip, lr
 801fa18:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801fa1c:	ea4e 0e01 	orr.w	lr, lr, r1
 801fa20:	4490      	add	r8, r2
 801fa22:	9a08      	ldr	r2, [sp, #32]
 801fa24:	f823 eb02 	strh.w	lr, [r3], #2
 801fa28:	4293      	cmp	r3, r2
 801fa2a:	9307      	str	r3, [sp, #28]
 801fa2c:	d025      	beq.n	801fa7a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 801fa2e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801fa30:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 801fa34:	ea4f 4329 	mov.w	r3, r9, asr #16
 801fa38:	ea4f 4128 	mov.w	r1, r8, asr #16
 801fa3c:	fb05 3101 	mla	r1, r5, r1, r3
 801fa40:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801fa42:	f3c9 3303 	ubfx	r3, r9, #12, #4
 801fa46:	f812 b001 	ldrb.w	fp, [r2, r1]
 801fa4a:	4411      	add	r1, r2
 801fa4c:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 801fa50:	eb0a 060b 	add.w	r6, sl, fp
 801fa54:	f3c8 3203 	ubfx	r2, r8, #12, #4
 801fa58:	2b00      	cmp	r3, #0
 801fa5a:	d18a      	bne.n	801f972 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801fa5c:	b14a      	cbz	r2, 801fa72 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 801fa5e:	5d48      	ldrb	r0, [r1, r5]
 801fa60:	4637      	mov	r7, r6
 801fa62:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fa66:	4635      	mov	r5, r6
 801fa68:	4450      	add	r0, sl
 801fa6a:	e791      	b.n	801f990 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19c>
 801fa6c:	4635      	mov	r5, r6
 801fa6e:	4630      	mov	r0, r6
 801fa70:	e78e      	b.n	801f990 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19c>
 801fa72:	4635      	mov	r5, r6
 801fa74:	4630      	mov	r0, r6
 801fa76:	4637      	mov	r7, r6
 801fa78:	e78a      	b.n	801f990 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19c>
 801fa7a:	4693      	mov	fp, r2
 801fa7c:	e719      	b.n	801f8b2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801fa7e:	2a00      	cmp	r2, #0
 801fa80:	f77f af17 	ble.w	801f8b2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801fa84:	9e08      	ldr	r6, [sp, #32]
 801fa86:	ea4f 4329 	mov.w	r3, r9, asr #16
 801fa8a:	ea4f 4128 	mov.w	r1, r8, asr #16
 801fa8e:	465f      	mov	r7, fp
 801fa90:	f8cd b01c 	str.w	fp, [sp, #28]
 801fa94:	f8dd b0b8 	ldr.w	fp, [sp, #184]	@ 0xb8
 801fa98:	2b00      	cmp	r3, #0
 801fa9a:	f3c9 3003 	ubfx	r0, r9, #12, #4
 801fa9e:	f3c8 3203 	ubfx	r2, r8, #12, #4
 801faa2:	db2a      	blt.n	801fafa <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801faa4:	1e65      	subs	r5, r4, #1
 801faa6:	42ab      	cmp	r3, r5
 801faa8:	da27      	bge.n	801fafa <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801faaa:	2900      	cmp	r1, #0
 801faac:	db25      	blt.n	801fafa <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801faae:	f10e 35ff 	add.w	r5, lr, #4294967295
 801fab2:	42a9      	cmp	r1, r5
 801fab4:	da21      	bge.n	801fafa <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801fab6:	b224      	sxth	r4, r4
 801fab8:	fb01 3304 	mla	r3, r1, r4, r3
 801fabc:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801fabe:	f811 c003 	ldrb.w	ip, [r1, r3]
 801fac2:	440b      	add	r3, r1
 801fac4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801fac6:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801faca:	eb01 0e0c 	add.w	lr, r1, ip
 801face:	2800      	cmp	r0, #0
 801fad0:	d048      	beq.n	801fb64 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fad2:	785d      	ldrb	r5, [r3, #1]
 801fad4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801fad8:	440d      	add	r5, r1
 801fada:	2a00      	cmp	r2, #0
 801fadc:	f000 809e 	beq.w	801fc1c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x428>
 801fae0:	1919      	adds	r1, r3, r4
 801fae2:	7849      	ldrb	r1, [r1, #1]
 801fae4:	5d1c      	ldrb	r4, [r3, r4]
 801fae6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801fae8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801faec:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801faf0:	1859      	adds	r1, r3, r1
 801faf2:	18e3      	adds	r3, r4, r3
 801faf4:	910f      	str	r1, [sp, #60]	@ 0x3c
 801faf6:	9310      	str	r3, [sp, #64]	@ 0x40
 801faf8:	e039      	b.n	801fb6e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801fafa:	1c5d      	adds	r5, r3, #1
 801fafc:	d405      	bmi.n	801fb0a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 801fafe:	42a5      	cmp	r5, r4
 801fb00:	dc03      	bgt.n	801fb0a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 801fb02:	1c4d      	adds	r5, r1, #1
 801fb04:	d401      	bmi.n	801fb0a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 801fb06:	4575      	cmp	r5, lr
 801fb08:	dd1c      	ble.n	801fb44 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801fb0a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801fb0c:	2e00      	cmp	r6, #0
 801fb0e:	f107 0702 	add.w	r7, r7, #2
 801fb12:	44d1      	add	r9, sl
 801fb14:	4498      	add	r8, r3
 801fb16:	dd07      	ble.n	801fb28 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x334>
 801fb18:	e9db 4e02 	ldrd	r4, lr, [fp, #8]
 801fb1c:	3e01      	subs	r6, #1
 801fb1e:	ea4f 4329 	mov.w	r3, r9, asr #16
 801fb22:	ea4f 4128 	mov.w	r1, r8, asr #16
 801fb26:	e7b7      	b.n	801fa98 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801fb28:	e9dd b307 	ldrd	fp, r3, [sp, #28]
 801fb2c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801fb30:	3301      	adds	r3, #1
 801fb32:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 801fb36:	e6bc      	b.n	801f8b2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801fb38:	3a01      	subs	r2, #1
 801fb3a:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801fb3e:	9208      	str	r2, [sp, #32]
 801fb40:	4616      	mov	r6, r2
 801fb42:	e7a4      	b.n	801fa8e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801fb44:	fa0f f58e 	sxth.w	r5, lr
 801fb48:	b224      	sxth	r4, r4
 801fb4a:	e9cd 0204 	strd	r0, r2, [sp, #16]
 801fb4e:	e9cd 3102 	strd	r3, r1, [sp, #8]
 801fb52:	e9cd 4500 	strd	r4, r5, [sp]
 801fb56:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801fb58:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801fb5a:	4639      	mov	r1, r7
 801fb5c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801fb5e:	f7ff fd69 	bl	801f634 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801fb62:	e7d2      	b.n	801fb0a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 801fb64:	2a00      	cmp	r2, #0
 801fb66:	d14f      	bne.n	801fc08 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x414>
 801fb68:	4675      	mov	r5, lr
 801fb6a:	e9cd ee0f 	strd	lr, lr, [sp, #60]	@ 0x3c
 801fb6e:	b283      	uxth	r3, r0
 801fb70:	b292      	uxth	r2, r2
 801fb72:	fb03 f002 	mul.w	r0, r3, r2
 801fb76:	782c      	ldrb	r4, [r5, #0]
 801fb78:	011b      	lsls	r3, r3, #4
 801fb7a:	940e      	str	r4, [sp, #56]	@ 0x38
 801fb7c:	78ac      	ldrb	r4, [r5, #2]
 801fb7e:	1a19      	subs	r1, r3, r0
 801fb80:	940d      	str	r4, [sp, #52]	@ 0x34
 801fb82:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801fb84:	b289      	uxth	r1, r1
 801fb86:	fb01 f404 	mul.w	r4, r1, r4
 801fb8a:	940e      	str	r4, [sp, #56]	@ 0x38
 801fb8c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801fb8e:	786d      	ldrb	r5, [r5, #1]
 801fb90:	fb01 f404 	mul.w	r4, r1, r4
 801fb94:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 801fb98:	fb01 f105 	mul.w	r1, r1, r5
 801fb9c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801fb9e:	b292      	uxth	r2, r2
 801fba0:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 801fba4:	f815 c00c 	ldrb.w	ip, [r5, ip]
 801fba8:	940d      	str	r4, [sp, #52]	@ 0x34
 801fbaa:	1a9b      	subs	r3, r3, r2
 801fbac:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801fbae:	b29b      	uxth	r3, r3
 801fbb0:	f89e 5002 	ldrb.w	r5, [lr, #2]
 801fbb4:	fb03 4c0c 	mla	ip, r3, ip, r4
 801fbb8:	f89e e001 	ldrb.w	lr, [lr, #1]
 801fbbc:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801fbbe:	fb03 4505 	mla	r5, r3, r5, r4
 801fbc2:	fb03 130e 	mla	r3, r3, lr, r1
 801fbc6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801fbc8:	78a1      	ldrb	r1, [r4, #2]
 801fbca:	f894 e000 	ldrb.w	lr, [r4]
 801fbce:	7864      	ldrb	r4, [r4, #1]
 801fbd0:	fb02 5501 	mla	r5, r2, r1, r5
 801fbd4:	fb02 cc0e 	mla	ip, r2, lr, ip
 801fbd8:	fb02 3104 	mla	r1, r2, r4, r3
 801fbdc:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801fbde:	7822      	ldrb	r2, [r4, #0]
 801fbe0:	78a3      	ldrb	r3, [r4, #2]
 801fbe2:	7864      	ldrb	r4, [r4, #1]
 801fbe4:	fb00 cc02 	mla	ip, r0, r2, ip
 801fbe8:	fb00 5303 	mla	r3, r0, r3, r5
 801fbec:	fb00 1204 	mla	r2, r0, r4, r1
 801fbf0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801fbf4:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801fbf8:	0952      	lsrs	r2, r2, #5
 801fbfa:	ea43 030c 	orr.w	r3, r3, ip
 801fbfe:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801fc02:	4313      	orrs	r3, r2
 801fc04:	803b      	strh	r3, [r7, #0]
 801fc06:	e780      	b.n	801fb0a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 801fc08:	5d1c      	ldrb	r4, [r3, r4]
 801fc0a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801fc0c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801fc10:	18e3      	adds	r3, r4, r3
 801fc12:	f8cd e03c 	str.w	lr, [sp, #60]	@ 0x3c
 801fc16:	9310      	str	r3, [sp, #64]	@ 0x40
 801fc18:	4675      	mov	r5, lr
 801fc1a:	e7a8      	b.n	801fb6e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801fc1c:	e9cd ee0f 	strd	lr, lr, [sp, #60]	@ 0x3c
 801fc20:	e7a5      	b.n	801fb6e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801fc22:	f43f ae46 	beq.w	801f8b2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801fc26:	1e6e      	subs	r6, r5, #1
 801fc28:	f8cd b01c 	str.w	fp, [sp, #28]
 801fc2c:	e682      	b.n	801f934 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801fc2e:	bf00      	nop

0801fc30 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801fc30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fc34:	b08b      	sub	sp, #44	@ 0x2c
 801fc36:	f9bd 7050 	ldrsh.w	r7, [sp, #80]	@ 0x50
 801fc3a:	f8b1 c000 	ldrh.w	ip, [r1]
 801fc3e:	e9dd 6416 	ldrd	r6, r4, [sp, #88]	@ 0x58
 801fc42:	fb04 6507 	mla	r5, r4, r7, r6
 801fc46:	9107      	str	r1, [sp, #28]
 801fc48:	ea4f 01ec 	mov.w	r1, ip, asr #3
 801fc4c:	ea4f 202c 	mov.w	r0, ip, asr #8
 801fc50:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801fc54:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fc58:	469a      	mov	sl, r3
 801fc5a:	f89d 3068 	ldrb.w	r3, [sp, #104]	@ 0x68
 801fc5e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801fc62:	9105      	str	r1, [sp, #20]
 801fc64:	2c00      	cmp	r4, #0
 801fc66:	fa5f f18c 	uxtb.w	r1, ip
 801fc6a:	9004      	str	r0, [sp, #16]
 801fc6c:	9106      	str	r1, [sp, #24]
 801fc6e:	eb02 0e05 	add.w	lr, r2, r5
 801fc72:	f104 0801 	add.w	r8, r4, #1
 801fc76:	f9bd 9054 	ldrsh.w	r9, [sp, #84]	@ 0x54
 801fc7a:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 801fc7e:	f89d 0064 	ldrb.w	r0, [sp, #100]	@ 0x64
 801fc82:	9308      	str	r3, [sp, #32]
 801fc84:	db02      	blt.n	801fc8c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801fc86:	45a1      	cmp	r9, r4
 801fc88:	f300 8119 	bgt.w	801febe <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28e>
 801fc8c:	f04f 0c00 	mov.w	ip, #0
 801fc90:	4665      	mov	r5, ip
 801fc92:	4662      	mov	r2, ip
 801fc94:	4664      	mov	r4, ip
 801fc96:	f1b8 0f00 	cmp.w	r8, #0
 801fc9a:	db02      	blt.n	801fca2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x72>
 801fc9c:	45c1      	cmp	r9, r8
 801fc9e:	f300 8127 	bgt.w	801fef0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c0>
 801fca2:	f04f 0e00 	mov.w	lr, #0
 801fca6:	46f0      	mov	r8, lr
 801fca8:	4676      	mov	r6, lr
 801fcaa:	46f1      	mov	r9, lr
 801fcac:	290f      	cmp	r1, #15
 801fcae:	f200 815e 	bhi.w	801ff6e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x33e>
 801fcb2:	280f      	cmp	r0, #15
 801fcb4:	f200 815b 	bhi.w	801ff6e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x33e>
 801fcb8:	b280      	uxth	r0, r0
 801fcba:	b289      	uxth	r1, r1
 801fcbc:	fb00 fa01 	mul.w	sl, r0, r1
 801fcc0:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 801fcc4:	b280      	uxth	r0, r0
 801fcc6:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801fcca:	fb00 fb08 	mul.w	fp, r0, r8
 801fcce:	fb0a f70e 	mul.w	r7, sl, lr
 801fcd2:	9301      	str	r3, [sp, #4]
 801fcd4:	f009 13ff 	and.w	r3, r9, #16711935	@ 0xff00ff
 801fcd8:	9302      	str	r3, [sp, #8]
 801fcda:	f409 437f 	and.w	r3, r9, #65280	@ 0xff00
 801fcde:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801fce2:	9303      	str	r3, [sp, #12]
 801fce4:	0109      	lsls	r1, r1, #4
 801fce6:	eba1 090a 	sub.w	r9, r1, sl
 801fcea:	fa1f f989 	uxth.w	r9, r9
 801fcee:	fb09 f30c 	mul.w	r3, r9, ip
 801fcf2:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 801fcf6:	1a09      	subs	r1, r1, r0
 801fcf8:	b289      	uxth	r1, r1
 801fcfa:	fb01 3305 	mla	r3, r1, r5, r3
 801fcfe:	445b      	add	r3, fp
 801fd00:	443b      	add	r3, r7
 801fd02:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fd06:	2dff      	cmp	r5, #255	@ 0xff
 801fd08:	9309      	str	r3, [sp, #36]	@ 0x24
 801fd0a:	f004 13ff 	and.w	r3, r4, #16711935	@ 0xff00ff
 801fd0e:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801fd12:	d019      	beq.n	801fd48 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x118>
 801fd14:	fb03 f305 	mul.w	r3, r3, r5
 801fd18:	fb04 f405 	mul.w	r4, r4, r5
 801fd1c:	ea4f 2b13 	mov.w	fp, r3, lsr #8
 801fd20:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801fd24:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801fd28:	f504 7780 	add.w	r7, r4, #256	@ 0x100
 801fd2c:	445b      	add	r3, fp
 801fd2e:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801fd32:	0a1b      	lsrs	r3, r3, #8
 801fd34:	0a24      	lsrs	r4, r4, #8
 801fd36:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801fd3a:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801fd3e:	431c      	orrs	r4, r3
 801fd40:	f004 13ff 	and.w	r3, r4, #16711935	@ 0xff00ff
 801fd44:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801fd48:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801fd4c:	f002 15ff 	and.w	r5, r2, #16711935	@ 0xff00ff
 801fd50:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801fd54:	d018      	beq.n	801fd88 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x158>
 801fd56:	fb05 f50c 	mul.w	r5, r5, ip
 801fd5a:	fb02 f20c 	mul.w	r2, r2, ip
 801fd5e:	0a2f      	lsrs	r7, r5, #8
 801fd60:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801fd64:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801fd68:	f502 7c80 	add.w	ip, r2, #256	@ 0x100
 801fd6c:	443d      	add	r5, r7
 801fd6e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801fd72:	0a2d      	lsrs	r5, r5, #8
 801fd74:	0a12      	lsrs	r2, r2, #8
 801fd76:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801fd7a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801fd7e:	432a      	orrs	r2, r5
 801fd80:	f002 15ff 	and.w	r5, r2, #16711935	@ 0xff00ff
 801fd84:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801fd88:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801fd8c:	d01f      	beq.n	801fdce <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x19e>
 801fd8e:	9f02      	ldr	r7, [sp, #8]
 801fd90:	fb07 fb08 	mul.w	fp, r7, r8
 801fd94:	9f03      	ldr	r7, [sp, #12]
 801fd96:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 801fd9a:	fb07 f808 	mul.w	r8, r7, r8
 801fd9e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801fda2:	f508 7780 	add.w	r7, r8, #256	@ 0x100
 801fda6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801fdaa:	eb07 2718 	add.w	r7, r7, r8, lsr #8
 801fdae:	44dc      	add	ip, fp
 801fdb0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fdb4:	0a3f      	lsrs	r7, r7, #8
 801fdb6:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801fdba:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801fdbe:	ea4c 0807 	orr.w	r8, ip, r7
 801fdc2:	f008 17ff 	and.w	r7, r8, #16711935	@ 0xff00ff
 801fdc6:	9702      	str	r7, [sp, #8]
 801fdc8:	f408 477f 	and.w	r7, r8, #65280	@ 0xff00
 801fdcc:	9703      	str	r7, [sp, #12]
 801fdce:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801fdd2:	d01d      	beq.n	801fe10 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1e0>
 801fdd4:	9f01      	ldr	r7, [sp, #4]
 801fdd6:	fb06 f60e 	mul.w	r6, r6, lr
 801fdda:	fb07 f80e 	mul.w	r8, r7, lr
 801fdde:	ea4f 2c18 	mov.w	ip, r8, lsr #8
 801fde2:	f506 7780 	add.w	r7, r6, #256	@ 0x100
 801fde6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801fdea:	f108 1801 	add.w	r8, r8, #65537	@ 0x10001
 801fdee:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801fdf2:	44e0      	add	r8, ip
 801fdf4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801fdf8:	0a36      	lsrs	r6, r6, #8
 801fdfa:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 801fdfe:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801fe02:	ea48 0606 	orr.w	r6, r8, r6
 801fe06:	f006 17ff 	and.w	r7, r6, #16711935	@ 0xff00ff
 801fe0a:	9701      	str	r7, [sp, #4]
 801fe0c:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801fe10:	f8bd e020 	ldrh.w	lr, [sp, #32]
 801fe14:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801fe16:	fb05 f509 	mul.w	r5, r5, r9
 801fe1a:	fb07 f70e 	mul.w	r7, r7, lr
 801fe1e:	f107 0c01 	add.w	ip, r7, #1
 801fe22:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 801fe26:	ea6f 2c1c 	mvn.w	ip, ip, lsr #8
 801fe2a:	fb02 f209 	mul.w	r2, r2, r9
 801fe2e:	fb03 5501 	mla	r5, r3, r1, r5
 801fe32:	fb04 2201 	mla	r2, r4, r1, r2
 801fe36:	9b02      	ldr	r3, [sp, #8]
 801fe38:	fa5f fc8c 	uxtb.w	ip, ip
 801fe3c:	fb03 5500 	mla	r5, r3, r0, r5
 801fe40:	9b03      	ldr	r3, [sp, #12]
 801fe42:	fb03 2200 	mla	r2, r3, r0, r2
 801fe46:	9b01      	ldr	r3, [sp, #4]
 801fe48:	fb03 550a 	mla	r5, r3, sl, r5
 801fe4c:	fb06 2a0a 	mla	sl, r6, sl, r2
 801fe50:	9a05      	ldr	r2, [sp, #20]
 801fe52:	9b04      	ldr	r3, [sp, #16]
 801fe54:	fb12 f10c 	smulbb	r1, r2, ip
 801fe58:	9a06      	ldr	r2, [sp, #24]
 801fe5a:	0a2e      	lsrs	r6, r5, #8
 801fe5c:	fb13 f30c 	smulbb	r3, r3, ip
 801fe60:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fe64:	fb12 fc0c 	smulbb	ip, r2, ip
 801fe68:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801fe6c:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 801fe70:	ea46 060a 	orr.w	r6, r6, sl
 801fe74:	0c30      	lsrs	r0, r6, #16
 801fe76:	f3c6 2207 	ubfx	r2, r6, #8, #8
 801fe7a:	b2f6      	uxtb	r6, r6
 801fe7c:	fb00 330e 	mla	r3, r0, lr, r3
 801fe80:	fb02 120e 	mla	r2, r2, lr, r1
 801fe84:	fb06 c60e 	mla	r6, r6, lr, ip
 801fe88:	b298      	uxth	r0, r3
 801fe8a:	b291      	uxth	r1, r2
 801fe8c:	b2b6      	uxth	r6, r6
 801fe8e:	1c43      	adds	r3, r0, #1
 801fe90:	f106 0e01 	add.w	lr, r6, #1
 801fe94:	1c4a      	adds	r2, r1, #1
 801fe96:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801fe9a:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801fe9e:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801fea2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801fea6:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801feaa:	0952      	lsrs	r2, r2, #5
 801feac:	4333      	orrs	r3, r6
 801feae:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801feb2:	4313      	orrs	r3, r2
 801feb4:	9a07      	ldr	r2, [sp, #28]
 801feb6:	8013      	strh	r3, [r2, #0]
 801feb8:	b00b      	add	sp, #44	@ 0x2c
 801feba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801febe:	2e00      	cmp	r6, #0
 801fec0:	db01      	blt.n	801fec6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x296>
 801fec2:	42b7      	cmp	r7, r6
 801fec4:	dc3c      	bgt.n	801ff40 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x310>
 801fec6:	2500      	movs	r5, #0
 801fec8:	462c      	mov	r4, r5
 801feca:	1c72      	adds	r2, r6, #1
 801fecc:	d427      	bmi.n	801ff1e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2ee>
 801fece:	4297      	cmp	r7, r2
 801fed0:	dd25      	ble.n	801ff1e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2ee>
 801fed2:	b131      	cbz	r1, 801fee2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2b2>
 801fed4:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801fed8:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 801fedc:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 801fee0:	e6d9      	b.n	801fc96 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 801fee2:	f1b8 0f00 	cmp.w	r8, #0
 801fee6:	db3b      	blt.n	801ff60 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x330>
 801fee8:	45c1      	cmp	r9, r8
 801feea:	dd39      	ble.n	801ff60 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x330>
 801feec:	468c      	mov	ip, r1
 801feee:	460a      	mov	r2, r1
 801fef0:	b1c8      	cbz	r0, 801ff26 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2f6>
 801fef2:	2e00      	cmp	r6, #0
 801fef4:	db2d      	blt.n	801ff52 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x322>
 801fef6:	42b7      	cmp	r7, r6
 801fef8:	dd2b      	ble.n	801ff52 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x322>
 801fefa:	f81e 8007 	ldrb.w	r8, [lr, r7]
 801fefe:	f85a 9028 	ldr.w	r9, [sl, r8, lsl #2]
 801ff02:	ea4f 6819 	mov.w	r8, r9, lsr #24
 801ff06:	3601      	adds	r6, #1
 801ff08:	d41f      	bmi.n	801ff4a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x31a>
 801ff0a:	42b7      	cmp	r7, r6
 801ff0c:	dd1d      	ble.n	801ff4a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x31a>
 801ff0e:	b321      	cbz	r1, 801ff5a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x32a>
 801ff10:	4477      	add	r7, lr
 801ff12:	787e      	ldrb	r6, [r7, #1]
 801ff14:	f85a 6026 	ldr.w	r6, [sl, r6, lsl #2]
 801ff18:	ea4f 6e16 	mov.w	lr, r6, lsr #24
 801ff1c:	e6c6      	b.n	801fcac <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x7c>
 801ff1e:	f04f 0c00 	mov.w	ip, #0
 801ff22:	4662      	mov	r2, ip
 801ff24:	e6b7      	b.n	801fc96 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 801ff26:	290f      	cmp	r1, #15
 801ff28:	d821      	bhi.n	801ff6e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x33e>
 801ff2a:	b289      	uxth	r1, r1
 801ff2c:	4682      	mov	sl, r0
 801ff2e:	4607      	mov	r7, r0
 801ff30:	4683      	mov	fp, r0
 801ff32:	e9cd 0002 	strd	r0, r0, [sp, #8]
 801ff36:	4606      	mov	r6, r0
 801ff38:	9001      	str	r0, [sp, #4]
 801ff3a:	4686      	mov	lr, r0
 801ff3c:	4680      	mov	r8, r0
 801ff3e:	e6d1      	b.n	801fce4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb4>
 801ff40:	5d52      	ldrb	r2, [r2, r5]
 801ff42:	f85a 4022 	ldr.w	r4, [sl, r2, lsl #2]
 801ff46:	0e25      	lsrs	r5, r4, #24
 801ff48:	e7bf      	b.n	801feca <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x29a>
 801ff4a:	f04f 0e00 	mov.w	lr, #0
 801ff4e:	4676      	mov	r6, lr
 801ff50:	e6ac      	b.n	801fcac <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x7c>
 801ff52:	f04f 0800 	mov.w	r8, #0
 801ff56:	46c1      	mov	r9, r8
 801ff58:	e7d5      	b.n	801ff06 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2d6>
 801ff5a:	460e      	mov	r6, r1
 801ff5c:	468e      	mov	lr, r1
 801ff5e:	e6a8      	b.n	801fcb2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801ff60:	460a      	mov	r2, r1
 801ff62:	460e      	mov	r6, r1
 801ff64:	4689      	mov	r9, r1
 801ff66:	468e      	mov	lr, r1
 801ff68:	4688      	mov	r8, r1
 801ff6a:	468c      	mov	ip, r1
 801ff6c:	e6a1      	b.n	801fcb2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801ff6e:	4b03      	ldr	r3, [pc, #12]	@ (801ff7c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x34c>)
 801ff70:	4a03      	ldr	r2, [pc, #12]	@ (801ff80 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x350>)
 801ff72:	f44f 7170 	mov.w	r1, #960	@ 0x3c0
 801ff76:	4803      	ldr	r0, [pc, #12]	@ (801ff84 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x354>)
 801ff78:	f004 fedc 	bl	8024d34 <__assert_func>
 801ff7c:	08027d5c 	.word	0x08027d5c
 801ff80:	080283d8 	.word	0x080283d8
 801ff84:	08027ee4 	.word	0x08027ee4

0801ff88 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ff88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff8c:	ed2d 8b08 	vpush	{d8-d11}
 801ff90:	b0a9      	sub	sp, #164	@ 0xa4
 801ff92:	9c3f      	ldr	r4, [sp, #252]	@ 0xfc
 801ff94:	9022      	str	r0, [sp, #136]	@ 0x88
 801ff96:	9115      	str	r1, [sp, #84]	@ 0x54
 801ff98:	6860      	ldr	r0, [r4, #4]
 801ff9a:	9940      	ldr	r1, [sp, #256]	@ 0x100
 801ff9c:	9219      	str	r2, [sp, #100]	@ 0x64
 801ff9e:	9a41      	ldr	r2, [sp, #260]	@ 0x104
 801ffa0:	e9dd ba3b 	ldrd	fp, sl, [sp, #236]	@ 0xec
 801ffa4:	fb00 1202 	mla	r2, r0, r2, r1
 801ffa8:	6820      	ldr	r0, [r4, #0]
 801ffaa:	46d1      	mov	r9, sl
 801ffac:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801ffb0:	46da      	mov	sl, fp
 801ffb2:	eeb0 aa40 	vmov.f32	s20, s0
 801ffb6:	eef0 9a60 	vmov.f32	s19, s1
 801ffba:	eeb0 9a41 	vmov.f32	s18, s2
 801ffbe:	eef0 8a62 	vmov.f32	s17, s5
 801ffc2:	eeb0 8a43 	vmov.f32	s16, s6
 801ffc6:	eef0 ba44 	vmov.f32	s23, s8
 801ffca:	eeb0 ba64 	vmov.f32	s22, s9
 801ffce:	eef0 aa45 	vmov.f32	s21, s10
 801ffd2:	4693      	mov	fp, r2
 801ffd4:	9942      	ldr	r1, [sp, #264]	@ 0x108
 801ffd6:	9d42      	ldr	r5, [sp, #264]	@ 0x108
 801ffd8:	6849      	ldr	r1, [r1, #4]
 801ffda:	f89d 410c 	ldrb.w	r4, [sp, #268]	@ 0x10c
 801ffde:	3104      	adds	r1, #4
 801ffe0:	682d      	ldr	r5, [r5, #0]
 801ffe2:	910e      	str	r1, [sp, #56]	@ 0x38
 801ffe4:	b2a1      	uxth	r1, r4
 801ffe6:	9423      	str	r4, [sp, #140]	@ 0x8c
 801ffe8:	9511      	str	r5, [sp, #68]	@ 0x44
 801ffea:	9112      	str	r1, [sp, #72]	@ 0x48
 801ffec:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801ffee:	2a00      	cmp	r2, #0
 801fff0:	dc02      	bgt.n	801fff8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801fff2:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801fff4:	2a00      	cmp	r2, #0
 801fff6:	dd65      	ble.n	80200c4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 801fff8:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 801fffa:	2b00      	cmp	r3, #0
 801fffc:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 8020000:	b234      	sxth	r4, r6
 8020002:	fa0f f78c 	sxth.w	r7, ip
 8020006:	f340 8396 	ble.w	8020736 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ae>
 802000a:	1e65      	subs	r5, r4, #1
 802000c:	f107 3eff 	add.w	lr, r7, #4294967295
 8020010:	f8cd c024 	str.w	ip, [sp, #36]	@ 0x24
 8020014:	e9dd c83d 	ldrd	ip, r8, [sp, #244]	@ 0xf4
 8020018:	ea5f 422a 	movs.w	r2, sl, asr #16
 802001c:	ea4f 4129 	mov.w	r1, r9, asr #16
 8020020:	d405      	bmi.n	802002e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8020022:	42aa      	cmp	r2, r5
 8020024:	da03      	bge.n	802002e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8020026:	2900      	cmp	r1, #0
 8020028:	db01      	blt.n	802002e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802002a:	4571      	cmp	r1, lr
 802002c:	db4f      	blt.n	80200ce <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 802002e:	1c50      	adds	r0, r2, #1
 8020030:	d406      	bmi.n	8020040 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8020032:	42a0      	cmp	r0, r4
 8020034:	dc04      	bgt.n	8020040 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8020036:	1c48      	adds	r0, r1, #1
 8020038:	d402      	bmi.n	8020040 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802003a:	42b8      	cmp	r0, r7
 802003c:	f340 834f 	ble.w	80206de <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x756>
 8020040:	3b01      	subs	r3, #1
 8020042:	44e2      	add	sl, ip
 8020044:	44c1      	add	r9, r8
 8020046:	f10b 0b02 	add.w	fp, fp, #2
 802004a:	d1e5      	bne.n	8020018 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802004c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 802004e:	2b00      	cmp	r3, #0
 8020050:	dd38      	ble.n	80200c4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 8020052:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020056:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802005a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802005e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8020062:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8020066:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802006a:	ee69 7a27 	vmul.f32	s15, s18, s15
 802006e:	ee76 6a68 	vsub.f32	s13, s12, s17
 8020072:	ee37 7ac8 	vsub.f32	s14, s15, s16
 8020076:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802007a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802007e:	ee16 2a90 	vmov	r2, s13
 8020082:	3b01      	subs	r3, #1
 8020084:	9315      	str	r3, [sp, #84]	@ 0x54
 8020086:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 8020088:	fb92 f3f3 	sdiv	r3, r2, r3
 802008c:	ee17 2a10 	vmov	r2, s14
 8020090:	eeb0 7a48 	vmov.f32	s14, s16
 8020094:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8020098:	ee17 9a10 	vmov	r9, s14
 802009c:	eeb0 7a68 	vmov.f32	s14, s17
 80200a0:	933d      	str	r3, [sp, #244]	@ 0xf4
 80200a2:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 80200a4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80200a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80200ac:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80200ae:	933e      	str	r3, [sp, #248]	@ 0xf8
 80200b0:	ee17 aa10 	vmov	sl, s14
 80200b4:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 80200b6:	eeb0 8a67 	vmov.f32	s16, s15
 80200ba:	eef0 8a46 	vmov.f32	s17, s12
 80200be:	bf08      	it	eq
 80200c0:	4613      	moveq	r3, r2
 80200c2:	e793      	b.n	801ffec <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80200c4:	b029      	add	sp, #164	@ 0xa4
 80200c6:	ecbd 8b08 	vpop	{d8-d11}
 80200ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80200ce:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 80200d2:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 80200d6:	983d      	ldr	r0, [sp, #244]	@ 0xf4
 80200d8:	1e59      	subs	r1, r3, #1
 80200da:	fb00 a201 	mla	r2, r0, r1, sl
 80200de:	1412      	asrs	r2, r2, #16
 80200e0:	910d      	str	r1, [sp, #52]	@ 0x34
 80200e2:	f100 8161 	bmi.w	80203a8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80200e6:	42aa      	cmp	r2, r5
 80200e8:	f280 815e 	bge.w	80203a8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80200ec:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 80200ee:	fb02 9201 	mla	r2, r2, r1, r9
 80200f2:	1412      	asrs	r2, r2, #16
 80200f4:	f100 8158 	bmi.w	80203a8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80200f8:	3f01      	subs	r7, #1
 80200fa:	42ba      	cmp	r2, r7
 80200fc:	f280 8154 	bge.w	80203a8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8020100:	2b00      	cmp	r3, #0
 8020102:	dda3      	ble.n	802004c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 8020104:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 8020108:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
 802010c:	46d0      	mov	r8, sl
 802010e:	4621      	mov	r1, r4
 8020110:	e129      	b.n	8020366 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 8020112:	f893 c001 	ldrb.w	ip, [r3, #1]
 8020116:	f856 502c 	ldr.w	r5, [r6, ip, lsl #2]
 802011a:	9513      	str	r5, [sp, #76]	@ 0x4c
 802011c:	0e2d      	lsrs	r5, r5, #24
 802011e:	950a      	str	r5, [sp, #40]	@ 0x28
 8020120:	b162      	cbz	r2, 802013c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8020122:	185d      	adds	r5, r3, r1
 8020124:	786d      	ldrb	r5, [r5, #1]
 8020126:	5c5b      	ldrb	r3, [r3, r1]
 8020128:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
 802012c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020130:	9116      	str	r1, [sp, #88]	@ 0x58
 8020132:	9314      	str	r3, [sp, #80]	@ 0x50
 8020134:	0e09      	lsrs	r1, r1, #24
 8020136:	0e1b      	lsrs	r3, r3, #24
 8020138:	910c      	str	r1, [sp, #48]	@ 0x30
 802013a:	930b      	str	r3, [sp, #44]	@ 0x2c
 802013c:	b2a4      	uxth	r4, r4
 802013e:	b292      	uxth	r2, r2
 8020140:	fb04 f502 	mul.w	r5, r4, r2
 8020144:	0124      	lsls	r4, r4, #4
 8020146:	1b66      	subs	r6, r4, r5
 8020148:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802014a:	b2b6      	uxth	r6, r6
 802014c:	fb06 f103 	mul.w	r1, r6, r3
 8020150:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 8020154:	b292      	uxth	r2, r2
 8020156:	f5c4 7380 	rsb	r3, r4, #256	@ 0x100
 802015a:	1a9b      	subs	r3, r3, r2
 802015c:	b29b      	uxth	r3, r3
 802015e:	fb03 1100 	mla	r1, r3, r0, r1
 8020162:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020164:	fb02 1104 	mla	r1, r2, r4, r1
 8020168:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802016a:	fb05 1104 	mla	r1, r5, r4, r1
 802016e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020172:	2900      	cmp	r1, #0
 8020174:	f000 80ea 	beq.w	802034c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c4>
 8020178:	f007 14ff 	and.w	r4, r7, #16711935	@ 0xff00ff
 802017c:	28ff      	cmp	r0, #255	@ 0xff
 802017e:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8020182:	940f      	str	r4, [sp, #60]	@ 0x3c
 8020184:	970d      	str	r7, [sp, #52]	@ 0x34
 8020186:	d01c      	beq.n	80201c2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8020188:	fb04 f400 	mul.w	r4, r4, r0
 802018c:	4627      	mov	r7, r4
 802018e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8020190:	fb04 fe00 	mul.w	lr, r4, r0
 8020194:	0a3c      	lsrs	r4, r7, #8
 8020196:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802019a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802019e:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 80201a2:	4427      	add	r7, r4
 80201a4:	eb00 201e 	add.w	r0, r0, lr, lsr #8
 80201a8:	0a3f      	lsrs	r7, r7, #8
 80201aa:	0a00      	lsrs	r0, r0, #8
 80201ac:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 80201b0:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 80201b4:	4307      	orrs	r7, r0
 80201b6:	f007 10ff 	and.w	r0, r7, #16711935	@ 0xff00ff
 80201ba:	900f      	str	r0, [sp, #60]	@ 0x3c
 80201bc:	f407 407f 	and.w	r0, r7, #65280	@ 0xff00
 80201c0:	900d      	str	r0, [sp, #52]	@ 0x34
 80201c2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80201c4:	f000 1cff 	and.w	ip, r0, #16711935	@ 0xff00ff
 80201c8:	f400 4e7f 	and.w	lr, r0, #65280	@ 0xff00
 80201cc:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80201ce:	28ff      	cmp	r0, #255	@ 0xff
 80201d0:	d01c      	beq.n	802020c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 80201d2:	fb0c fc00 	mul.w	ip, ip, r0
 80201d6:	fb0e fe00 	mul.w	lr, lr, r0
 80201da:	ea4f 241c 	mov.w	r4, ip, lsr #8
 80201de:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 80201e2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80201e6:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 80201ea:	44a4      	add	ip, r4
 80201ec:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 80201f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80201f4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80201f8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80201fc:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 8020200:	ea4c 0e0e 	orr.w	lr, ip, lr
 8020204:	f00e 1cff 	and.w	ip, lr, #16711935	@ 0xff00ff
 8020208:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802020c:	9814      	ldr	r0, [sp, #80]	@ 0x50
 802020e:	f000 17ff 	and.w	r7, r0, #16711935	@ 0xff00ff
 8020212:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 8020216:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8020218:	28ff      	cmp	r0, #255	@ 0xff
 802021a:	d01a      	beq.n	8020252 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 802021c:	fb07 f700 	mul.w	r7, r7, r0
 8020220:	fb0a fa00 	mul.w	sl, sl, r0
 8020224:	0a3c      	lsrs	r4, r7, #8
 8020226:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802022a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802022e:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 8020232:	4427      	add	r7, r4
 8020234:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8020238:	0a3f      	lsrs	r7, r7, #8
 802023a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802023e:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8020242:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020246:	ea47 0a0a 	orr.w	sl, r7, sl
 802024a:	f00a 17ff 	and.w	r7, sl, #16711935	@ 0xff00ff
 802024e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020252:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8020254:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 8020258:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802025c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802025e:	2cff      	cmp	r4, #255	@ 0xff
 8020260:	d01d      	beq.n	802029e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 8020262:	fb00 f004 	mul.w	r0, r0, r4
 8020266:	fb0b fb04 	mul.w	fp, fp, r4
 802026a:	0a04      	lsrs	r4, r0, #8
 802026c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8020270:	9418      	str	r4, [sp, #96]	@ 0x60
 8020272:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 8020276:	9417      	str	r4, [sp, #92]	@ 0x5c
 8020278:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 802027a:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802027e:	4420      	add	r0, r4
 8020280:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8020282:	0a00      	lsrs	r0, r0, #8
 8020284:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 8020288:	0a24      	lsrs	r4, r4, #8
 802028a:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802028e:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 8020292:	ea40 0b0b 	orr.w	fp, r0, fp
 8020296:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 802029a:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802029e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80202a0:	fb0c fc06 	mul.w	ip, ip, r6
 80202a4:	fb01 f104 	mul.w	r1, r1, r4
 80202a8:	1c4c      	adds	r4, r1, #1
 80202aa:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 80202ae:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80202b2:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80202b4:	fb0e f606 	mul.w	r6, lr, r6
 80202b8:	fb04 cc03 	mla	ip, r4, r3, ip
 80202bc:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80202be:	fb07 cc02 	mla	ip, r7, r2, ip
 80202c2:	fb04 6603 	mla	r6, r4, r3, r6
 80202c6:	fb0a 6602 	mla	r6, sl, r2, r6
 80202ca:	fb00 cc05 	mla	ip, r0, r5, ip
 80202ce:	fb0b 6605 	mla	r6, fp, r5, r6
 80202d2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80202d6:	0a36      	lsrs	r6, r6, #8
 80202d8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80202dc:	f406 437f 	and.w	r3, r6, #65280	@ 0xff00
 80202e0:	ea4c 0303 	orr.w	r3, ip, r3
 80202e4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80202e6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80202e8:	0c1f      	lsrs	r7, r3, #16
 80202ea:	f3c3 2607 	ubfx	r6, r3, #8, #8
 80202ee:	b2db      	uxtb	r3, r3
 80202f0:	8805      	ldrh	r5, [r0, #0]
 80202f2:	fb13 f302 	smulbb	r3, r3, r2
 80202f6:	fb17 f702 	smulbb	r7, r7, r2
 80202fa:	fb16 f602 	smulbb	r6, r6, r2
 80202fe:	1228      	asrs	r0, r5, #8
 8020300:	10ea      	asrs	r2, r5, #3
 8020302:	00ed      	lsls	r5, r5, #3
 8020304:	b2c9      	uxtb	r1, r1
 8020306:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802030a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802030e:	b2ed      	uxtb	r5, r5
 8020310:	fb00 7001 	mla	r0, r0, r1, r7
 8020314:	fb02 6201 	mla	r2, r2, r1, r6
 8020318:	fb05 3101 	mla	r1, r5, r1, r3
 802031c:	b280      	uxth	r0, r0
 802031e:	b292      	uxth	r2, r2
 8020320:	b289      	uxth	r1, r1
 8020322:	1c43      	adds	r3, r0, #1
 8020324:	1c4c      	adds	r4, r1, #1
 8020326:	f102 0c01 	add.w	ip, r2, #1
 802032a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802032e:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 8020332:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8020336:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 802033a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802033e:	0952      	lsrs	r2, r2, #5
 8020340:	4308      	orrs	r0, r1
 8020342:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020346:	4302      	orrs	r2, r0
 8020348:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802034a:	8002      	strh	r2, [r0, #0]
 802034c:	9a3d      	ldr	r2, [sp, #244]	@ 0xf4
 802034e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020350:	4490      	add	r8, r2
 8020352:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 8020354:	3302      	adds	r3, #2
 8020356:	4491      	add	r9, r2
 8020358:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802035a:	9309      	str	r3, [sp, #36]	@ 0x24
 802035c:	4293      	cmp	r3, r2
 802035e:	d021      	beq.n	80203a4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8020360:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 8020362:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020366:	ea4f 4228 	mov.w	r2, r8, asr #16
 802036a:	ea4f 4329 	mov.w	r3, r9, asr #16
 802036e:	fb01 2303 	mla	r3, r1, r3, r2
 8020372:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8020374:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8020376:	5cc2      	ldrb	r2, [r0, r3]
 8020378:	f3c8 3403 	ubfx	r4, r8, #12, #4
 802037c:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 8020380:	4403      	add	r3, r0
 8020382:	f3c9 3203 	ubfx	r2, r9, #12, #4
 8020386:	0e38      	lsrs	r0, r7, #24
 8020388:	2c00      	cmp	r4, #0
 802038a:	f47f aec2 	bne.w	8020112 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 802038e:	2a00      	cmp	r2, #0
 8020390:	f43f aed4 	beq.w	802013c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8020394:	5c5b      	ldrb	r3, [r3, r1]
 8020396:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8020398:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 802039c:	9314      	str	r3, [sp, #80]	@ 0x50
 802039e:	0e1b      	lsrs	r3, r3, #24
 80203a0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80203a2:	e6cb      	b.n	802013c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80203a4:	4693      	mov	fp, r2
 80203a6:	e651      	b.n	802004c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 80203a8:	2b00      	cmp	r3, #0
 80203aa:	f77f ae4f 	ble.w	802004c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 80203ae:	f8dd 8034 	ldr.w	r8, [sp, #52]	@ 0x34
 80203b2:	ea4f 422a 	mov.w	r2, sl, asr #16
 80203b6:	ea4f 4129 	mov.w	r1, r9, asr #16
 80203ba:	2a00      	cmp	r2, #0
 80203bc:	465f      	mov	r7, fp
 80203be:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 80203c2:	9c42      	ldr	r4, [sp, #264]	@ 0x108
 80203c4:	e9dd 5b3d 	ldrd	r5, fp, [sp, #244]	@ 0xf4
 80203c8:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80203cc:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 80203d0:	f2c0 815c 	blt.w	802068c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 80203d4:	1e73      	subs	r3, r6, #1
 80203d6:	429a      	cmp	r2, r3
 80203d8:	f280 8158 	bge.w	802068c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 80203dc:	2900      	cmp	r1, #0
 80203de:	f2c0 8155 	blt.w	802068c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 80203e2:	f10c 33ff 	add.w	r3, ip, #4294967295
 80203e6:	4299      	cmp	r1, r3
 80203e8:	f280 8150 	bge.w	802068c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 80203ec:	b233      	sxth	r3, r6
 80203ee:	fb01 2203 	mla	r2, r1, r3, r2
 80203f2:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80203f4:	930f      	str	r3, [sp, #60]	@ 0x3c
 80203f6:	5c8b      	ldrb	r3, [r1, r2]
 80203f8:	440a      	add	r2, r1
 80203fa:	4616      	mov	r6, r2
 80203fc:	9210      	str	r2, [sp, #64]	@ 0x40
 80203fe:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8020400:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8020404:	0e0b      	lsrs	r3, r1, #24
 8020406:	2800      	cmp	r0, #0
 8020408:	f000 816f 	beq.w	80206ea <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x762>
 802040c:	f896 c001 	ldrb.w	ip, [r6, #1]
 8020410:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8020414:	9224      	str	r2, [sp, #144]	@ 0x90
 8020416:	0e12      	lsrs	r2, r2, #24
 8020418:	921a      	str	r2, [sp, #104]	@ 0x68
 802041a:	f1be 0f00 	cmp.w	lr, #0
 802041e:	f040 8172 	bne.w	8020706 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 8020422:	b280      	uxth	r0, r0
 8020424:	fa1f fc8e 	uxth.w	ip, lr
 8020428:	fb00 f20c 	mul.w	r2, r0, ip
 802042c:	0106      	lsls	r6, r0, #4
 802042e:	1ab0      	subs	r0, r6, r2
 8020430:	b280      	uxth	r0, r0
 8020432:	4686      	mov	lr, r0
 8020434:	900f      	str	r0, [sp, #60]	@ 0x3c
 8020436:	981a      	ldr	r0, [sp, #104]	@ 0x68
 8020438:	ebc2 1c0c 	rsb	ip, r2, ip, lsl #4
 802043c:	fb0e f000 	mul.w	r0, lr, r0
 8020440:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 8020444:	fa1f fe8c 	uxth.w	lr, ip
 8020448:	eba6 060e 	sub.w	r6, r6, lr
 802044c:	b2b6      	uxth	r6, r6
 802044e:	fb06 0003 	mla	r0, r6, r3, r0
 8020452:	9610      	str	r6, [sp, #64]	@ 0x40
 8020454:	9e1b      	ldr	r6, [sp, #108]	@ 0x6c
 8020456:	fb0e 0006 	mla	r0, lr, r6, r0
 802045a:	9e1c      	ldr	r6, [sp, #112]	@ 0x70
 802045c:	fb02 0006 	mla	r0, r2, r6, r0
 8020460:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8020464:	9017      	str	r0, [sp, #92]	@ 0x5c
 8020466:	2800      	cmp	r0, #0
 8020468:	f000 80fa 	beq.w	8020660 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802046c:	f001 10ff 	and.w	r0, r1, #16711935	@ 0xff00ff
 8020470:	2bff      	cmp	r3, #255	@ 0xff
 8020472:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8020476:	9018      	str	r0, [sp, #96]	@ 0x60
 8020478:	911d      	str	r1, [sp, #116]	@ 0x74
 802047a:	d01b      	beq.n	80204b4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52c>
 802047c:	fb01 f103 	mul.w	r1, r1, r3
 8020480:	fb00 f003 	mul.w	r0, r0, r3
 8020484:	460b      	mov	r3, r1
 8020486:	0a01      	lsrs	r1, r0, #8
 8020488:	f100 1601 	add.w	r6, r0, #65537	@ 0x10001
 802048c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8020490:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 8020494:	4431      	add	r1, r6
 8020496:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802049a:	0a09      	lsrs	r1, r1, #8
 802049c:	0a1b      	lsrs	r3, r3, #8
 802049e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80204a2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80204a6:	430b      	orrs	r3, r1
 80204a8:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 80204ac:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80204b0:	9118      	str	r1, [sp, #96]	@ 0x60
 80204b2:	931d      	str	r3, [sp, #116]	@ 0x74
 80204b4:	9924      	ldr	r1, [sp, #144]	@ 0x90
 80204b6:	9e1a      	ldr	r6, [sp, #104]	@ 0x68
 80204b8:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 80204bc:	2eff      	cmp	r6, #255	@ 0xff
 80204be:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80204c2:	931e      	str	r3, [sp, #120]	@ 0x78
 80204c4:	911f      	str	r1, [sp, #124]	@ 0x7c
 80204c6:	d01b      	beq.n	8020500 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x578>
 80204c8:	fb01 f106 	mul.w	r1, r1, r6
 80204cc:	fb03 f306 	mul.w	r3, r3, r6
 80204d0:	460e      	mov	r6, r1
 80204d2:	0a19      	lsrs	r1, r3, #8
 80204d4:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 80204d8:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80204dc:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 80204e0:	4401      	add	r1, r0
 80204e2:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 80204e6:	0a09      	lsrs	r1, r1, #8
 80204e8:	0a1b      	lsrs	r3, r3, #8
 80204ea:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80204ee:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80204f2:	4319      	orrs	r1, r3
 80204f4:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 80204f8:	931e      	str	r3, [sp, #120]	@ 0x78
 80204fa:	f401 437f 	and.w	r3, r1, #65280	@ 0xff00
 80204fe:	931f      	str	r3, [sp, #124]	@ 0x7c
 8020500:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8020502:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 8020506:	f403 4c7f 	and.w	ip, r3, #65280	@ 0xff00
 802050a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802050c:	9120      	str	r1, [sp, #128]	@ 0x80
 802050e:	2bff      	cmp	r3, #255	@ 0xff
 8020510:	d01c      	beq.n	802054c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 8020512:	fb01 f103 	mul.w	r1, r1, r3
 8020516:	4608      	mov	r0, r1
 8020518:	fb0c fc03 	mul.w	ip, ip, r3
 802051c:	0a09      	lsrs	r1, r1, #8
 802051e:	f50c 7380 	add.w	r3, ip, #256	@ 0x100
 8020522:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8020526:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802052a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802052e:	4408      	add	r0, r1
 8020530:	0a00      	lsrs	r0, r0, #8
 8020532:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020536:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802053a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802053e:	ea40 0c0c 	orr.w	ip, r0, ip
 8020542:	f00c 13ff 	and.w	r3, ip, #16711935	@ 0xff00ff
 8020546:	9320      	str	r3, [sp, #128]	@ 0x80
 8020548:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802054c:	9927      	ldr	r1, [sp, #156]	@ 0x9c
 802054e:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 8020552:	f401 467f 	and.w	r6, r1, #65280	@ 0xff00
 8020556:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8020558:	9321      	str	r3, [sp, #132]	@ 0x84
 802055a:	29ff      	cmp	r1, #255	@ 0xff
 802055c:	d019      	beq.n	8020592 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60a>
 802055e:	fb03 f301 	mul.w	r3, r3, r1
 8020562:	fb06 f601 	mul.w	r6, r6, r1
 8020566:	0a19      	lsrs	r1, r3, #8
 8020568:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802056c:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 8020570:	f506 7080 	add.w	r0, r6, #256	@ 0x100
 8020574:	4419      	add	r1, r3
 8020576:	eb00 2616 	add.w	r6, r0, r6, lsr #8
 802057a:	0a09      	lsrs	r1, r1, #8
 802057c:	0a36      	lsrs	r6, r6, #8
 802057e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8020582:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8020586:	430e      	orrs	r6, r1
 8020588:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 802058c:	9321      	str	r3, [sp, #132]	@ 0x84
 802058e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8020592:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8020594:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8020596:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020598:	fb00 f001 	mul.w	r0, r0, r1
 802059c:	4601      	mov	r1, r0
 802059e:	3001      	adds	r0, #1
 80205a0:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80205a4:	ea6f 2011 	mvn.w	r0, r1, lsr #8
 80205a8:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80205aa:	9025      	str	r0, [sp, #148]	@ 0x94
 80205ac:	981e      	ldr	r0, [sp, #120]	@ 0x78
 80205ae:	fb00 f001 	mul.w	r0, r0, r1
 80205b2:	900f      	str	r0, [sp, #60]	@ 0x3c
 80205b4:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80205b6:	fb00 f001 	mul.w	r0, r0, r1
 80205ba:	9017      	str	r0, [sp, #92]	@ 0x5c
 80205bc:	9818      	ldr	r0, [sp, #96]	@ 0x60
 80205be:	4601      	mov	r1, r0
 80205c0:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80205c2:	fb01 0003 	mla	r0, r1, r3, r0
 80205c6:	900f      	str	r0, [sp, #60]	@ 0x3c
 80205c8:	981d      	ldr	r0, [sp, #116]	@ 0x74
 80205ca:	4601      	mov	r1, r0
 80205cc:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 80205ce:	fb01 0103 	mla	r1, r1, r3, r0
 80205d2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80205d4:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80205d6:	fb0c 110e 	mla	r1, ip, lr, r1
 80205da:	fb03 000e 	mla	r0, r3, lr, r0
 80205de:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80205e0:	f89d e094 	ldrb.w	lr, [sp, #148]	@ 0x94
 80205e4:	fb03 0002 	mla	r0, r3, r2, r0
 80205e8:	fb06 1302 	mla	r3, r6, r2, r1
 80205ec:	0a02      	lsrs	r2, r0, #8
 80205ee:	0a1b      	lsrs	r3, r3, #8
 80205f0:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80205f4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80205f8:	4313      	orrs	r3, r2
 80205fa:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80205fc:	ea4f 4c13 	mov.w	ip, r3, lsr #16
 8020600:	f3c3 2607 	ubfx	r6, r3, #8, #8
 8020604:	b2db      	uxtb	r3, r3
 8020606:	8838      	ldrh	r0, [r7, #0]
 8020608:	fb16 f602 	smulbb	r6, r6, r2
 802060c:	fb1c fc02 	smulbb	ip, ip, r2
 8020610:	fb13 f302 	smulbb	r3, r3, r2
 8020614:	1201      	asrs	r1, r0, #8
 8020616:	10c2      	asrs	r2, r0, #3
 8020618:	00c0      	lsls	r0, r0, #3
 802061a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802061e:	b2c0      	uxtb	r0, r0
 8020620:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8020624:	fb01 cc0e 	mla	ip, r1, lr, ip
 8020628:	fb02 620e 	mla	r2, r2, lr, r6
 802062c:	fb00 330e 	mla	r3, r0, lr, r3
 8020630:	b296      	uxth	r6, r2
 8020632:	b29b      	uxth	r3, r3
 8020634:	fa1f fc8c 	uxth.w	ip, ip
 8020638:	1c58      	adds	r0, r3, #1
 802063a:	f10c 0201 	add.w	r2, ip, #1
 802063e:	1c71      	adds	r1, r6, #1
 8020640:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 8020644:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020648:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 802064c:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 8020650:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020654:	094a      	lsrs	r2, r1, #5
 8020656:	4303      	orrs	r3, r0
 8020658:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802065c:	4313      	orrs	r3, r2
 802065e:	803b      	strh	r3, [r7, #0]
 8020660:	f1b8 0f00 	cmp.w	r8, #0
 8020664:	f107 0702 	add.w	r7, r7, #2
 8020668:	44aa      	add	sl, r5
 802066a:	44d9      	add	r9, fp
 802066c:	dd2e      	ble.n	80206cc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 802066e:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 8020672:	ea4f 422a 	mov.w	r2, sl, asr #16
 8020676:	2a00      	cmp	r2, #0
 8020678:	f108 38ff 	add.w	r8, r8, #4294967295
 802067c:	ea4f 4129 	mov.w	r1, r9, asr #16
 8020680:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8020684:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 8020688:	f6bf aea4 	bge.w	80203d4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44c>
 802068c:	1c53      	adds	r3, r2, #1
 802068e:	d4e7      	bmi.n	8020660 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 8020690:	42b3      	cmp	r3, r6
 8020692:	dce5      	bgt.n	8020660 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 8020694:	1c4b      	adds	r3, r1, #1
 8020696:	d4e3      	bmi.n	8020660 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 8020698:	4563      	cmp	r3, ip
 802069a:	dce1      	bgt.n	8020660 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802069c:	fa0f f38c 	sxth.w	r3, ip
 80206a0:	b236      	sxth	r6, r6
 80206a2:	e9cd 6300 	strd	r6, r3, [sp]
 80206a6:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80206a8:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80206ac:	e9cd e305 	strd	lr, r3, [sp, #20]
 80206b0:	9202      	str	r2, [sp, #8]
 80206b2:	4639      	mov	r1, r7
 80206b4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80206b6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80206b8:	9822      	ldr	r0, [sp, #136]	@ 0x88
 80206ba:	f7ff fab9 	bl	801fc30 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80206be:	f1b8 0f00 	cmp.w	r8, #0
 80206c2:	f107 0702 	add.w	r7, r7, #2
 80206c6:	44aa      	add	sl, r5
 80206c8:	44d9      	add	r9, fp
 80206ca:	dcd0      	bgt.n	802066e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e6>
 80206cc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80206ce:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 80206d2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80206d6:	3301      	adds	r3, #1
 80206d8:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 80206dc:	e4b6      	b.n	802004c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 80206de:	3b01      	subs	r3, #1
 80206e0:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 80206e4:	930d      	str	r3, [sp, #52]	@ 0x34
 80206e6:	4698      	mov	r8, r3
 80206e8:	e667      	b.n	80203ba <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x432>
 80206ea:	f1be 0f00 	cmp.w	lr, #0
 80206ee:	f43f ae98 	beq.w	8020422 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80206f2:	4632      	mov	r2, r6
 80206f4:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 80206f6:	5d92      	ldrb	r2, [r2, r6]
 80206f8:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 80206fa:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 80206fe:	9226      	str	r2, [sp, #152]	@ 0x98
 8020700:	0e12      	lsrs	r2, r2, #24
 8020702:	921b      	str	r2, [sp, #108]	@ 0x6c
 8020704:	e68d      	b.n	8020422 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8020706:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8020708:	eb06 0c02 	add.w	ip, r6, r2
 802070c:	4632      	mov	r2, r6
 802070e:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 8020710:	f89c c001 	ldrb.w	ip, [ip, #1]
 8020714:	5d92      	ldrb	r2, [r2, r6]
 8020716:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8020718:	9210      	str	r2, [sp, #64]	@ 0x40
 802071a:	f856 202c 	ldr.w	r2, [r6, ip, lsl #2]
 802071e:	920f      	str	r2, [sp, #60]	@ 0x3c
 8020720:	9227      	str	r2, [sp, #156]	@ 0x9c
 8020722:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8020724:	f856 6022 	ldr.w	r6, [r6, r2, lsl #2]
 8020728:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802072a:	9626      	str	r6, [sp, #152]	@ 0x98
 802072c:	0e12      	lsrs	r2, r2, #24
 802072e:	921c      	str	r2, [sp, #112]	@ 0x70
 8020730:	0e32      	lsrs	r2, r6, #24
 8020732:	921b      	str	r2, [sp, #108]	@ 0x6c
 8020734:	e675      	b.n	8020422 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8020736:	f43f ac89 	beq.w	802004c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802073a:	1e65      	subs	r5, r4, #1
 802073c:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 8020740:	e4c9      	b.n	80200d6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8020742:	bf00      	nop

08020744 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8020744:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020748:	b089      	sub	sp, #36	@ 0x24
 802074a:	f9bd 8048 	ldrsh.w	r8, [sp, #72]	@ 0x48
 802074e:	880f      	ldrh	r7, [r1, #0]
 8020750:	e9dd 5014 	ldrd	r5, r0, [sp, #80]	@ 0x50
 8020754:	fb00 5408 	mla	r4, r0, r8, r5
 8020758:	9106      	str	r1, [sp, #24]
 802075a:	10f9      	asrs	r1, r7, #3
 802075c:	123e      	asrs	r6, r7, #8
 802075e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8020762:	00ff      	lsls	r7, r7, #3
 8020764:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8020768:	9104      	str	r1, [sp, #16]
 802076a:	2800      	cmp	r0, #0
 802076c:	b2f9      	uxtb	r1, r7
 802076e:	9105      	str	r1, [sp, #20]
 8020770:	9603      	str	r6, [sp, #12]
 8020772:	eb02 0704 	add.w	r7, r2, r4
 8020776:	f100 0c01 	add.w	ip, r0, #1
 802077a:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	@ 0x4c
 802077e:	f89d e058 	ldrb.w	lr, [sp, #88]	@ 0x58
 8020782:	f89d 105c 	ldrb.w	r1, [sp, #92]	@ 0x5c
 8020786:	db02      	blt.n	802078e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x4a>
 8020788:	4582      	cmp	sl, r0
 802078a:	f300 8113 	bgt.w	80209b4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 802078e:	2600      	movs	r6, #0
 8020790:	46b1      	mov	r9, r6
 8020792:	4630      	mov	r0, r6
 8020794:	4634      	mov	r4, r6
 8020796:	f1bc 0f00 	cmp.w	ip, #0
 802079a:	db02      	blt.n	80207a2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5e>
 802079c:	45e2      	cmp	sl, ip
 802079e:	f300 8123 	bgt.w	80209e8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a4>
 80207a2:	2700      	movs	r7, #0
 80207a4:	46bc      	mov	ip, r7
 80207a6:	463d      	mov	r5, r7
 80207a8:	9702      	str	r7, [sp, #8]
 80207aa:	f1be 0f0f 	cmp.w	lr, #15
 80207ae:	f200 8160 	bhi.w	8020a72 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x32e>
 80207b2:	290f      	cmp	r1, #15
 80207b4:	f200 815d 	bhi.w	8020a72 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x32e>
 80207b8:	b289      	uxth	r1, r1
 80207ba:	fa1f f38e 	uxth.w	r3, lr
 80207be:	fb01 f803 	mul.w	r8, r1, r3
 80207c2:	f005 12ff 	and.w	r2, r5, #16711935	@ 0xff00ff
 80207c6:	9200      	str	r2, [sp, #0]
 80207c8:	9a02      	ldr	r2, [sp, #8]
 80207ca:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80207ce:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80207d2:	b289      	uxth	r1, r1
 80207d4:	9201      	str	r2, [sp, #4]
 80207d6:	fb01 fa0c 	mul.w	sl, r1, ip
 80207da:	9a02      	ldr	r2, [sp, #8]
 80207dc:	fb08 fb07 	mul.w	fp, r8, r7
 80207e0:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80207e4:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 80207e8:	9202      	str	r2, [sp, #8]
 80207ea:	011b      	lsls	r3, r3, #4
 80207ec:	eba3 0e08 	sub.w	lr, r3, r8
 80207f0:	fa1f fe8e 	uxth.w	lr, lr
 80207f4:	fb0e f206 	mul.w	r2, lr, r6
 80207f8:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 80207fc:	1a5b      	subs	r3, r3, r1
 80207fe:	b29b      	uxth	r3, r3
 8020800:	fb03 2209 	mla	r2, r3, r9, r2
 8020804:	4452      	add	r2, sl
 8020806:	445a      	add	r2, fp
 8020808:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802080c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8020810:	9207      	str	r2, [sp, #28]
 8020812:	f004 12ff 	and.w	r2, r4, #16711935	@ 0xff00ff
 8020816:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802081a:	d019      	beq.n	8020850 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x10c>
 802081c:	fb02 f209 	mul.w	r2, r2, r9
 8020820:	fb04 f409 	mul.w	r4, r4, r9
 8020824:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 8020828:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802082c:	f102 1201 	add.w	r2, r2, #65537	@ 0x10001
 8020830:	f504 7a80 	add.w	sl, r4, #256	@ 0x100
 8020834:	445a      	add	r2, fp
 8020836:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 802083a:	0a12      	lsrs	r2, r2, #8
 802083c:	0a24      	lsrs	r4, r4, #8
 802083e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8020842:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8020846:	4314      	orrs	r4, r2
 8020848:	f004 12ff 	and.w	r2, r4, #16711935	@ 0xff00ff
 802084c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8020850:	2eff      	cmp	r6, #255	@ 0xff
 8020852:	f000 1aff 	and.w	sl, r0, #16711935	@ 0xff00ff
 8020856:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802085a:	d01b      	beq.n	8020894 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x150>
 802085c:	fb0a fa06 	mul.w	sl, sl, r6
 8020860:	fb00 f006 	mul.w	r0, r0, r6
 8020864:	ea4f 2b1a 	mov.w	fp, sl, lsr #8
 8020868:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802086c:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8020870:	f500 7980 	add.w	r9, r0, #256	@ 0x100
 8020874:	44da      	add	sl, fp
 8020876:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 802087a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802087e:	0a00      	lsrs	r0, r0, #8
 8020880:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 8020884:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 8020888:	ea4a 0000 	orr.w	r0, sl, r0
 802088c:	f000 1aff 	and.w	sl, r0, #16711935	@ 0xff00ff
 8020890:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 8020894:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8020898:	d020      	beq.n	80208dc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x198>
 802089a:	9e01      	ldr	r6, [sp, #4]
 802089c:	fb06 fb0c 	mul.w	fp, r6, ip
 80208a0:	9e02      	ldr	r6, [sp, #8]
 80208a2:	ea4f 291b 	mov.w	r9, fp, lsr #8
 80208a6:	fb06 fc0c 	mul.w	ip, r6, ip
 80208aa:	f009 19ff 	and.w	r9, r9, #16711935	@ 0xff00ff
 80208ae:	f50c 7680 	add.w	r6, ip, #256	@ 0x100
 80208b2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80208b6:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 80208ba:	44cb      	add	fp, r9
 80208bc:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 80208c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80208c4:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 80208c8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80208cc:	ea4b 0c0c 	orr.w	ip, fp, ip
 80208d0:	f00c 16ff 	and.w	r6, ip, #16711935	@ 0xff00ff
 80208d4:	9601      	str	r6, [sp, #4]
 80208d6:	f40c 467f 	and.w	r6, ip, #65280	@ 0xff00
 80208da:	9602      	str	r6, [sp, #8]
 80208dc:	2fff      	cmp	r7, #255	@ 0xff
 80208de:	d01d      	beq.n	802091c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1d8>
 80208e0:	9e00      	ldr	r6, [sp, #0]
 80208e2:	fb05 f507 	mul.w	r5, r5, r7
 80208e6:	fb06 fb07 	mul.w	fp, r6, r7
 80208ea:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 80208ee:	f505 7680 	add.w	r6, r5, #256	@ 0x100
 80208f2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80208f6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80208fa:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 80208fe:	44e3      	add	fp, ip
 8020900:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8020904:	0a2d      	lsrs	r5, r5, #8
 8020906:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802090a:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802090e:	ea4b 0505 	orr.w	r5, fp, r5
 8020912:	f005 16ff 	and.w	r6, r5, #16711935	@ 0xff00ff
 8020916:	9600      	str	r6, [sp, #0]
 8020918:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802091c:	9e07      	ldr	r6, [sp, #28]
 802091e:	fb0a fa0e 	mul.w	sl, sl, lr
 8020922:	43f7      	mvns	r7, r6
 8020924:	fb00 f00e 	mul.w	r0, r0, lr
 8020928:	fb02 aa03 	mla	sl, r2, r3, sl
 802092c:	fb04 0003 	mla	r0, r4, r3, r0
 8020930:	9b01      	ldr	r3, [sp, #4]
 8020932:	b2ff      	uxtb	r7, r7
 8020934:	fb03 aa01 	mla	sl, r3, r1, sl
 8020938:	9b02      	ldr	r3, [sp, #8]
 802093a:	fb03 0c01 	mla	ip, r3, r1, r0
 802093e:	9b00      	ldr	r3, [sp, #0]
 8020940:	9803      	ldr	r0, [sp, #12]
 8020942:	fb03 aa08 	mla	sl, r3, r8, sl
 8020946:	9b05      	ldr	r3, [sp, #20]
 8020948:	9904      	ldr	r1, [sp, #16]
 802094a:	fb03 f307 	mul.w	r3, r3, r7
 802094e:	fb00 f007 	mul.w	r0, r0, r7
 8020952:	fb01 f107 	mul.w	r1, r1, r7
 8020956:	461f      	mov	r7, r3
 8020958:	fb05 c808 	mla	r8, r5, r8, ip
 802095c:	ea4f 251a 	mov.w	r5, sl, lsr #8
 8020960:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8020964:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8020968:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802096c:	ea45 0508 	orr.w	r5, r5, r8
 8020970:	f100 0c01 	add.w	ip, r0, #1
 8020974:	1c4e      	adds	r6, r1, #1
 8020976:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 802097a:	0c2c      	lsrs	r4, r5, #16
 802097c:	f3c5 2207 	ubfx	r2, r5, #8, #8
 8020980:	1c78      	adds	r0, r7, #1
 8020982:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 8020986:	4b3e      	ldr	r3, [pc, #248]	@ (8020a80 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x33c>)
 8020988:	eb04 241c 	add.w	r4, r4, ip, lsr #8
 802098c:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8020990:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8020994:	b2ed      	uxtb	r5, r5
 8020996:	ea03 2304 	and.w	r3, r3, r4, lsl #8
 802099a:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 802099e:	00d2      	lsls	r2, r2, #3
 80209a0:	ea43 05d5 	orr.w	r5, r3, r5, lsr #3
 80209a4:	f402 63fc 	and.w	r3, r2, #2016	@ 0x7e0
 80209a8:	431d      	orrs	r5, r3
 80209aa:	9b06      	ldr	r3, [sp, #24]
 80209ac:	801d      	strh	r5, [r3, #0]
 80209ae:	b009      	add	sp, #36	@ 0x24
 80209b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80209b4:	2d00      	cmp	r5, #0
 80209b6:	db01      	blt.n	80209bc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x278>
 80209b8:	45a8      	cmp	r8, r5
 80209ba:	dc41      	bgt.n	8020a40 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2fc>
 80209bc:	f04f 0900 	mov.w	r9, #0
 80209c0:	464c      	mov	r4, r9
 80209c2:	1c6a      	adds	r2, r5, #1
 80209c4:	d42a      	bmi.n	8020a1c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2d8>
 80209c6:	4590      	cmp	r8, r2
 80209c8:	dd28      	ble.n	8020a1c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2d8>
 80209ca:	f1be 0f00 	cmp.w	lr, #0
 80209ce:	d004      	beq.n	80209da <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x296>
 80209d0:	787a      	ldrb	r2, [r7, #1]
 80209d2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80209d6:	0e06      	lsrs	r6, r0, #24
 80209d8:	e6dd      	b.n	8020796 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x52>
 80209da:	f1bc 0f00 	cmp.w	ip, #0
 80209de:	db40      	blt.n	8020a62 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x31e>
 80209e0:	45e2      	cmp	sl, ip
 80209e2:	dd3e      	ble.n	8020a62 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x31e>
 80209e4:	4676      	mov	r6, lr
 80209e6:	4670      	mov	r0, lr
 80209e8:	b1d9      	cbz	r1, 8020a22 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2de>
 80209ea:	2d00      	cmp	r5, #0
 80209ec:	db31      	blt.n	8020a52 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x30e>
 80209ee:	45a8      	cmp	r8, r5
 80209f0:	dd2f      	ble.n	8020a52 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x30e>
 80209f2:	f817 2008 	ldrb.w	r2, [r7, r8]
 80209f6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80209fa:	9202      	str	r2, [sp, #8]
 80209fc:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 8020a00:	3501      	adds	r5, #1
 8020a02:	d423      	bmi.n	8020a4c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x308>
 8020a04:	45a8      	cmp	r8, r5
 8020a06:	dd21      	ble.n	8020a4c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x308>
 8020a08:	f1be 0f00 	cmp.w	lr, #0
 8020a0c:	d026      	beq.n	8020a5c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x318>
 8020a0e:	44b8      	add	r8, r7
 8020a10:	f898 5001 	ldrb.w	r5, [r8, #1]
 8020a14:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
 8020a18:	0e2f      	lsrs	r7, r5, #24
 8020a1a:	e6c6      	b.n	80207aa <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 8020a1c:	2600      	movs	r6, #0
 8020a1e:	4630      	mov	r0, r6
 8020a20:	e6b9      	b.n	8020796 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x52>
 8020a22:	f1be 0f0f 	cmp.w	lr, #15
 8020a26:	d824      	bhi.n	8020a72 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x32e>
 8020a28:	fa1f f38e 	uxth.w	r3, lr
 8020a2c:	4688      	mov	r8, r1
 8020a2e:	468b      	mov	fp, r1
 8020a30:	468a      	mov	sl, r1
 8020a32:	e9cd 1101 	strd	r1, r1, [sp, #4]
 8020a36:	460d      	mov	r5, r1
 8020a38:	9100      	str	r1, [sp, #0]
 8020a3a:	460f      	mov	r7, r1
 8020a3c:	468c      	mov	ip, r1
 8020a3e:	e6d4      	b.n	80207ea <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8020a40:	5d12      	ldrb	r2, [r2, r4]
 8020a42:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8020a46:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8020a4a:	e7ba      	b.n	80209c2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27e>
 8020a4c:	2700      	movs	r7, #0
 8020a4e:	463d      	mov	r5, r7
 8020a50:	e6ab      	b.n	80207aa <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 8020a52:	f04f 0c00 	mov.w	ip, #0
 8020a56:	f8cd c008 	str.w	ip, [sp, #8]
 8020a5a:	e7d1      	b.n	8020a00 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2bc>
 8020a5c:	4675      	mov	r5, lr
 8020a5e:	4677      	mov	r7, lr
 8020a60:	e6a7      	b.n	80207b2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6e>
 8020a62:	4670      	mov	r0, lr
 8020a64:	4675      	mov	r5, lr
 8020a66:	f8cd e008 	str.w	lr, [sp, #8]
 8020a6a:	4677      	mov	r7, lr
 8020a6c:	46f4      	mov	ip, lr
 8020a6e:	4676      	mov	r6, lr
 8020a70:	e69f      	b.n	80207b2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6e>
 8020a72:	4b04      	ldr	r3, [pc, #16]	@ (8020a84 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x340>)
 8020a74:	4a04      	ldr	r2, [pc, #16]	@ (8020a88 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x344>)
 8020a76:	f44f 7170 	mov.w	r1, #960	@ 0x3c0
 8020a7a:	4804      	ldr	r0, [pc, #16]	@ (8020a8c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x348>)
 8020a7c:	f004 f95a 	bl	8024d34 <__assert_func>
 8020a80:	fffff800 	.word	0xfffff800
 8020a84:	08027d5c 	.word	0x08027d5c
 8020a88:	080283d8 	.word	0x080283d8
 8020a8c:	08027ee4 	.word	0x08027ee4

08020a90 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020a90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020a94:	ed2d 8b08 	vpush	{d8-d11}
 8020a98:	b0a3      	sub	sp, #140	@ 0x8c
 8020a9a:	901e      	str	r0, [sp, #120]	@ 0x78
 8020a9c:	9111      	str	r1, [sp, #68]	@ 0x44
 8020a9e:	9215      	str	r2, [sp, #84]	@ 0x54
 8020aa0:	e9dd 4139 	ldrd	r4, r1, [sp, #228]	@ 0xe4
 8020aa4:	9a3b      	ldr	r2, [sp, #236]	@ 0xec
 8020aa6:	6860      	ldr	r0, [r4, #4]
 8020aa8:	e9dd 8b35 	ldrd	r8, fp, [sp, #212]	@ 0xd4
 8020aac:	fb00 1202 	mla	r2, r0, r2, r1
 8020ab0:	6820      	ldr	r0, [r4, #0]
 8020ab2:	46c1      	mov	r9, r8
 8020ab4:	eb00 0a42 	add.w	sl, r0, r2, lsl #1
 8020ab8:	46d8      	mov	r8, fp
 8020aba:	eeb0 aa40 	vmov.f32	s20, s0
 8020abe:	eef0 9a60 	vmov.f32	s19, s1
 8020ac2:	eeb0 9a41 	vmov.f32	s18, s2
 8020ac6:	eef0 8a62 	vmov.f32	s17, s5
 8020aca:	eeb0 8a43 	vmov.f32	s16, s6
 8020ace:	eef0 ba44 	vmov.f32	s23, s8
 8020ad2:	eeb0 ba64 	vmov.f32	s22, s9
 8020ad6:	eef0 aa45 	vmov.f32	s21, s10
 8020ada:	46d3      	mov	fp, sl
 8020adc:	993c      	ldr	r1, [sp, #240]	@ 0xf0
 8020ade:	9c3c      	ldr	r4, [sp, #240]	@ 0xf0
 8020ae0:	6849      	ldr	r1, [r1, #4]
 8020ae2:	6824      	ldr	r4, [r4, #0]
 8020ae4:	1d0a      	adds	r2, r1, #4
 8020ae6:	940e      	str	r4, [sp, #56]	@ 0x38
 8020ae8:	920b      	str	r2, [sp, #44]	@ 0x2c
 8020aea:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8020aec:	2a00      	cmp	r2, #0
 8020aee:	dc02      	bgt.n	8020af6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8020af0:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8020af2:	2a00      	cmp	r2, #0
 8020af4:	dd65      	ble.n	8020bc2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8020af6:	9a3c      	ldr	r2, [sp, #240]	@ 0xf0
 8020af8:	2b00      	cmp	r3, #0
 8020afa:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 8020afe:	b234      	sxth	r4, r6
 8020b00:	fa0f f78c 	sxth.w	r7, ip
 8020b04:	f340 836d 	ble.w	80211e2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x752>
 8020b08:	1e65      	subs	r5, r4, #1
 8020b0a:	f107 3eff 	add.w	lr, r7, #4294967295
 8020b0e:	f8cd c01c 	str.w	ip, [sp, #28]
 8020b12:	e9dd ca37 	ldrd	ip, sl, [sp, #220]	@ 0xdc
 8020b16:	ea5f 4229 	movs.w	r2, r9, asr #16
 8020b1a:	ea4f 4128 	mov.w	r1, r8, asr #16
 8020b1e:	d405      	bmi.n	8020b2c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8020b20:	42aa      	cmp	r2, r5
 8020b22:	da03      	bge.n	8020b2c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8020b24:	2900      	cmp	r1, #0
 8020b26:	db01      	blt.n	8020b2c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8020b28:	4571      	cmp	r1, lr
 8020b2a:	db4f      	blt.n	8020bcc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 8020b2c:	1c50      	adds	r0, r2, #1
 8020b2e:	d406      	bmi.n	8020b3e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8020b30:	42a0      	cmp	r0, r4
 8020b32:	dc04      	bgt.n	8020b3e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8020b34:	1c48      	adds	r0, r1, #1
 8020b36:	d402      	bmi.n	8020b3e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8020b38:	42b8      	cmp	r0, r7
 8020b3a:	f340 832f 	ble.w	802119c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8020b3e:	3b01      	subs	r3, #1
 8020b40:	44e1      	add	r9, ip
 8020b42:	44d0      	add	r8, sl
 8020b44:	f10b 0b02 	add.w	fp, fp, #2
 8020b48:	d1e5      	bne.n	8020b16 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020b4a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8020b4c:	2b00      	cmp	r3, #0
 8020b4e:	dd38      	ble.n	8020bc2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8020b50:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020b54:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8020b58:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8020b5c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8020b60:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8020b64:	ee29 6aa7 	vmul.f32	s12, s19, s15
 8020b68:	ee69 7a27 	vmul.f32	s15, s18, s15
 8020b6c:	ee76 6a68 	vsub.f32	s13, s12, s17
 8020b70:	ee37 7ac8 	vsub.f32	s14, s15, s16
 8020b74:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020b78:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8020b7c:	ee16 2a90 	vmov	r2, s13
 8020b80:	3b01      	subs	r3, #1
 8020b82:	9311      	str	r3, [sp, #68]	@ 0x44
 8020b84:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 8020b86:	fb92 f3f3 	sdiv	r3, r2, r3
 8020b8a:	ee17 2a10 	vmov	r2, s14
 8020b8e:	eeb0 7a48 	vmov.f32	s14, s16
 8020b92:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8020b96:	ee17 8a10 	vmov	r8, s14
 8020b9a:	eeb0 7a68 	vmov.f32	s14, s17
 8020b9e:	9337      	str	r3, [sp, #220]	@ 0xdc
 8020ba0:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 8020ba2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8020ba6:	fb92 f3f3 	sdiv	r3, r2, r3
 8020baa:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8020bac:	9338      	str	r3, [sp, #224]	@ 0xe0
 8020bae:	ee17 9a10 	vmov	r9, s14
 8020bb2:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 8020bb4:	eeb0 8a67 	vmov.f32	s16, s15
 8020bb8:	eef0 8a46 	vmov.f32	s17, s12
 8020bbc:	bf08      	it	eq
 8020bbe:	4613      	moveq	r3, r2
 8020bc0:	e793      	b.n	8020aea <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8020bc2:	b023      	add	sp, #140	@ 0x8c
 8020bc4:	ecbd 8b08 	vpop	{d8-d11}
 8020bc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020bcc:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8020bd0:	f8cd b01c 	str.w	fp, [sp, #28]
 8020bd4:	9837      	ldr	r0, [sp, #220]	@ 0xdc
 8020bd6:	1e59      	subs	r1, r3, #1
 8020bd8:	fb00 9201 	mla	r2, r0, r1, r9
 8020bdc:	1412      	asrs	r2, r2, #16
 8020bde:	910c      	str	r1, [sp, #48]	@ 0x30
 8020be0:	f100 815e 	bmi.w	8020ea0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8020be4:	42aa      	cmp	r2, r5
 8020be6:	f280 815b 	bge.w	8020ea0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8020bea:	9a38      	ldr	r2, [sp, #224]	@ 0xe0
 8020bec:	fb02 8201 	mla	r2, r2, r1, r8
 8020bf0:	1412      	asrs	r2, r2, #16
 8020bf2:	f100 8155 	bmi.w	8020ea0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8020bf6:	3f01      	subs	r7, #1
 8020bf8:	42ba      	cmp	r2, r7
 8020bfa:	f280 8151 	bge.w	8020ea0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8020bfe:	2b00      	cmp	r3, #0
 8020c00:	dda3      	ble.n	8020b4a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 8020c02:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 8020c06:	4621      	mov	r1, r4
 8020c08:	f8cd b034 	str.w	fp, [sp, #52]	@ 0x34
 8020c0c:	f8cd 90d4 	str.w	r9, [sp, #212]	@ 0xd4
 8020c10:	464a      	mov	r2, r9
 8020c12:	464c      	mov	r4, r9
 8020c14:	e122      	b.n	8020e5c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8020c16:	f893 c001 	ldrb.w	ip, [r3, #1]
 8020c1a:	f856 502c 	ldr.w	r5, [r6, ip, lsl #2]
 8020c1e:	950f      	str	r5, [sp, #60]	@ 0x3c
 8020c20:	0e2d      	lsrs	r5, r5, #24
 8020c22:	9508      	str	r5, [sp, #32]
 8020c24:	b162      	cbz	r2, 8020c40 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 8020c26:	185d      	adds	r5, r3, r1
 8020c28:	786d      	ldrb	r5, [r5, #1]
 8020c2a:	5c5b      	ldrb	r3, [r3, r1]
 8020c2c:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
 8020c30:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020c34:	9112      	str	r1, [sp, #72]	@ 0x48
 8020c36:	9310      	str	r3, [sp, #64]	@ 0x40
 8020c38:	0e09      	lsrs	r1, r1, #24
 8020c3a:	0e1b      	lsrs	r3, r3, #24
 8020c3c:	910a      	str	r1, [sp, #40]	@ 0x28
 8020c3e:	9309      	str	r3, [sp, #36]	@ 0x24
 8020c40:	b2a4      	uxth	r4, r4
 8020c42:	b292      	uxth	r2, r2
 8020c44:	fb04 f502 	mul.w	r5, r4, r2
 8020c48:	0124      	lsls	r4, r4, #4
 8020c4a:	1b66      	subs	r6, r4, r5
 8020c4c:	9b08      	ldr	r3, [sp, #32]
 8020c4e:	b2b6      	uxth	r6, r6
 8020c50:	fb06 f103 	mul.w	r1, r6, r3
 8020c54:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 8020c58:	b292      	uxth	r2, r2
 8020c5a:	f5c4 7380 	rsb	r3, r4, #256	@ 0x100
 8020c5e:	1a9b      	subs	r3, r3, r2
 8020c60:	b29b      	uxth	r3, r3
 8020c62:	fb03 1100 	mla	r1, r3, r0, r1
 8020c66:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8020c68:	fb02 1104 	mla	r1, r2, r4, r1
 8020c6c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8020c6e:	fb05 1104 	mla	r1, r5, r4, r1
 8020c72:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020c76:	2900      	cmp	r1, #0
 8020c78:	f000 80df 	beq.w	8020e3a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8020c7c:	f007 14ff 	and.w	r4, r7, #16711935	@ 0xff00ff
 8020c80:	28ff      	cmp	r0, #255	@ 0xff
 8020c82:	940c      	str	r4, [sp, #48]	@ 0x30
 8020c84:	f407 497f 	and.w	r9, r7, #65280	@ 0xff00
 8020c88:	d01a      	beq.n	8020cc0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8020c8a:	fb04 f400 	mul.w	r4, r4, r0
 8020c8e:	4627      	mov	r7, r4
 8020c90:	fb09 fc00 	mul.w	ip, r9, r0
 8020c94:	0a24      	lsrs	r4, r4, #8
 8020c96:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8020c9a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020c9e:	f50c 7080 	add.w	r0, ip, #256	@ 0x100
 8020ca2:	4427      	add	r7, r4
 8020ca4:	eb00 201c 	add.w	r0, r0, ip, lsr #8
 8020ca8:	0a3f      	lsrs	r7, r7, #8
 8020caa:	0a00      	lsrs	r0, r0, #8
 8020cac:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 8020cb0:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8020cb4:	4307      	orrs	r7, r0
 8020cb6:	f007 10ff 	and.w	r0, r7, #16711935	@ 0xff00ff
 8020cba:	900c      	str	r0, [sp, #48]	@ 0x30
 8020cbc:	f407 497f 	and.w	r9, r7, #65280	@ 0xff00
 8020cc0:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8020cc2:	f000 17ff 	and.w	r7, r0, #16711935	@ 0xff00ff
 8020cc6:	f400 4c7f 	and.w	ip, r0, #65280	@ 0xff00
 8020cca:	9808      	ldr	r0, [sp, #32]
 8020ccc:	28ff      	cmp	r0, #255	@ 0xff
 8020cce:	d01a      	beq.n	8020d06 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8020cd0:	fb07 f700 	mul.w	r7, r7, r0
 8020cd4:	fb0c fc00 	mul.w	ip, ip, r0
 8020cd8:	0a3c      	lsrs	r4, r7, #8
 8020cda:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8020cde:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020ce2:	f50c 7080 	add.w	r0, ip, #256	@ 0x100
 8020ce6:	4427      	add	r7, r4
 8020ce8:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 8020cec:	0a3f      	lsrs	r7, r7, #8
 8020cee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020cf2:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8020cf6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8020cfa:	ea47 0c0c 	orr.w	ip, r7, ip
 8020cfe:	f00c 17ff 	and.w	r7, ip, #16711935	@ 0xff00ff
 8020d02:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8020d06:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8020d08:	f000 1eff 	and.w	lr, r0, #16711935	@ 0xff00ff
 8020d0c:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 8020d10:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8020d12:	28ff      	cmp	r0, #255	@ 0xff
 8020d14:	d01c      	beq.n	8020d50 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8020d16:	fb0e fe00 	mul.w	lr, lr, r0
 8020d1a:	fb0a fa00 	mul.w	sl, sl, r0
 8020d1e:	ea4f 241e 	mov.w	r4, lr, lsr #8
 8020d22:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8020d26:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 8020d2a:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 8020d2e:	44a6      	add	lr, r4
 8020d30:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8020d34:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020d38:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020d3c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020d40:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020d44:	ea4e 0a0a 	orr.w	sl, lr, sl
 8020d48:	f00a 1eff 	and.w	lr, sl, #16711935	@ 0xff00ff
 8020d4c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020d50:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8020d52:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 8020d56:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 8020d5a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8020d5c:	2cff      	cmp	r4, #255	@ 0xff
 8020d5e:	d01d      	beq.n	8020d9c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8020d60:	fb00 f004 	mul.w	r0, r0, r4
 8020d64:	fb0b fb04 	mul.w	fp, fp, r4
 8020d68:	0a04      	lsrs	r4, r0, #8
 8020d6a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8020d6e:	9414      	str	r4, [sp, #80]	@ 0x50
 8020d70:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 8020d74:	9413      	str	r4, [sp, #76]	@ 0x4c
 8020d76:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020d78:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 8020d7c:	4420      	add	r0, r4
 8020d7e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8020d80:	0a00      	lsrs	r0, r0, #8
 8020d82:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 8020d86:	0a24      	lsrs	r4, r4, #8
 8020d88:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8020d8c:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 8020d90:	ea40 0b0b 	orr.w	fp, r0, fp
 8020d94:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 8020d98:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 8020d9c:	43c9      	mvns	r1, r1
 8020d9e:	fb07 f706 	mul.w	r7, r7, r6
 8020da2:	fb0c f606 	mul.w	r6, ip, r6
 8020da6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8020da8:	fb09 6603 	mla	r6, r9, r3, r6
 8020dac:	fb04 7703 	mla	r7, r4, r3, r7
 8020db0:	9b07      	ldr	r3, [sp, #28]
 8020db2:	fb0e 7702 	mla	r7, lr, r2, r7
 8020db6:	fb0a 6602 	mla	r6, sl, r2, r6
 8020dba:	f8b3 e000 	ldrh.w	lr, [r3]
 8020dbe:	b2c9      	uxtb	r1, r1
 8020dc0:	ea4f 242e 	mov.w	r4, lr, asr #8
 8020dc4:	fb00 7005 	mla	r0, r0, r5, r7
 8020dc8:	fb0b 6605 	mla	r6, fp, r5, r6
 8020dcc:	ea4f 09ee 	mov.w	r9, lr, asr #3
 8020dd0:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8020dd4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020dd8:	fb04 f401 	mul.w	r4, r4, r1
 8020ddc:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8020de0:	fa5f fe8e 	uxtb.w	lr, lr
 8020de4:	fb09 f901 	mul.w	r9, r9, r1
 8020de8:	fb0e f101 	mul.w	r1, lr, r1
 8020dec:	0a00      	lsrs	r0, r0, #8
 8020dee:	0a36      	lsrs	r6, r6, #8
 8020df0:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8020df4:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8020df8:	1c62      	adds	r2, r4, #1
 8020dfa:	ea40 0306 	orr.w	r3, r0, r6
 8020dfe:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8020e02:	f109 0001 	add.w	r0, r9, #1
 8020e06:	1c4a      	adds	r2, r1, #1
 8020e08:	0c1e      	lsrs	r6, r3, #16
 8020e0a:	f3c3 2507 	ubfx	r5, r3, #8, #8
 8020e0e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020e12:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8020e16:	4a21      	ldr	r2, [pc, #132]	@ (8020e9c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40c>)
 8020e18:	eb06 2414 	add.w	r4, r6, r4, lsr #8
 8020e1c:	b2db      	uxtb	r3, r3
 8020e1e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8020e22:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8020e26:	ea02 2404 	and.w	r4, r2, r4, lsl #8
 8020e2a:	00c0      	lsls	r0, r0, #3
 8020e2c:	ea44 04d3 	orr.w	r4, r4, r3, lsr #3
 8020e30:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020e34:	9b07      	ldr	r3, [sp, #28]
 8020e36:	4320      	orrs	r0, r4
 8020e38:	8018      	strh	r0, [r3, #0]
 8020e3a:	9a35      	ldr	r2, [sp, #212]	@ 0xd4
 8020e3c:	9937      	ldr	r1, [sp, #220]	@ 0xdc
 8020e3e:	9b07      	ldr	r3, [sp, #28]
 8020e40:	440a      	add	r2, r1
 8020e42:	9235      	str	r2, [sp, #212]	@ 0xd4
 8020e44:	9a38      	ldr	r2, [sp, #224]	@ 0xe0
 8020e46:	3302      	adds	r3, #2
 8020e48:	4490      	add	r8, r2
 8020e4a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8020e4c:	9307      	str	r3, [sp, #28]
 8020e4e:	4293      	cmp	r3, r2
 8020e50:	d022      	beq.n	8020e98 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x408>
 8020e52:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 8020e54:	9a35      	ldr	r2, [sp, #212]	@ 0xd4
 8020e56:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020e5a:	9c35      	ldr	r4, [sp, #212]	@ 0xd4
 8020e5c:	1412      	asrs	r2, r2, #16
 8020e5e:	ea4f 4328 	mov.w	r3, r8, asr #16
 8020e62:	fb01 2303 	mla	r3, r1, r3, r2
 8020e66:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8020e68:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8020e6a:	5cc2      	ldrb	r2, [r0, r3]
 8020e6c:	f3c4 3403 	ubfx	r4, r4, #12, #4
 8020e70:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 8020e74:	4403      	add	r3, r0
 8020e76:	f3c8 3203 	ubfx	r2, r8, #12, #4
 8020e7a:	0e38      	lsrs	r0, r7, #24
 8020e7c:	2c00      	cmp	r4, #0
 8020e7e:	f47f aeca 	bne.w	8020c16 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020e82:	2a00      	cmp	r2, #0
 8020e84:	f43f aedc 	beq.w	8020c40 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 8020e88:	5c5b      	ldrb	r3, [r3, r1]
 8020e8a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8020e8c:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8020e90:	9310      	str	r3, [sp, #64]	@ 0x40
 8020e92:	0e1b      	lsrs	r3, r3, #24
 8020e94:	9309      	str	r3, [sp, #36]	@ 0x24
 8020e96:	e6d3      	b.n	8020c40 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 8020e98:	4693      	mov	fp, r2
 8020e9a:	e656      	b.n	8020b4a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 8020e9c:	fffff800 	.word	0xfffff800
 8020ea0:	2b00      	cmp	r3, #0
 8020ea2:	f77f ae52 	ble.w	8020b4a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 8020ea6:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8020eaa:	ea4f 4229 	mov.w	r2, r9, asr #16
 8020eae:	ea4f 4128 	mov.w	r1, r8, asr #16
 8020eb2:	2a00      	cmp	r2, #0
 8020eb4:	465f      	mov	r7, fp
 8020eb6:	f8cd b01c 	str.w	fp, [sp, #28]
 8020eba:	9c3c      	ldr	r4, [sp, #240]	@ 0xf0
 8020ebc:	e9dd b337 	ldrd	fp, r3, [sp, #220]	@ 0xdc
 8020ec0:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8020ec4:	f3c8 3e03 	ubfx	lr, r8, #12, #4
 8020ec8:	f2c0 8147 	blt.w	802115a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 8020ecc:	1e73      	subs	r3, r6, #1
 8020ece:	429a      	cmp	r2, r3
 8020ed0:	f280 8143 	bge.w	802115a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 8020ed4:	2900      	cmp	r1, #0
 8020ed6:	f2c0 8140 	blt.w	802115a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 8020eda:	f10c 33ff 	add.w	r3, ip, #4294967295
 8020ede:	4299      	cmp	r1, r3
 8020ee0:	f280 813b 	bge.w	802115a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 8020ee4:	b236      	sxth	r6, r6
 8020ee6:	fb01 2106 	mla	r1, r1, r6, r2
 8020eea:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8020eec:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8020eee:	5c53      	ldrb	r3, [r2, r1]
 8020ef0:	4411      	add	r1, r2
 8020ef2:	f855 2023 	ldr.w	r2, [r5, r3, lsl #2]
 8020ef6:	910d      	str	r1, [sp, #52]	@ 0x34
 8020ef8:	0e13      	lsrs	r3, r2, #24
 8020efa:	2800      	cmp	r0, #0
 8020efc:	f000 8154 	beq.w	80211a8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 8020f00:	f891 c001 	ldrb.w	ip, [r1, #1]
 8020f04:	9513      	str	r5, [sp, #76]	@ 0x4c
 8020f06:	f855 102c 	ldr.w	r1, [r5, ip, lsl #2]
 8020f0a:	911f      	str	r1, [sp, #124]	@ 0x7c
 8020f0c:	0e09      	lsrs	r1, r1, #24
 8020f0e:	9116      	str	r1, [sp, #88]	@ 0x58
 8020f10:	f1be 0f00 	cmp.w	lr, #0
 8020f14:	f040 8153 	bne.w	80211be <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 8020f18:	b286      	uxth	r6, r0
 8020f1a:	fa1f fc8e 	uxth.w	ip, lr
 8020f1e:	fb06 f00c 	mul.w	r0, r6, ip
 8020f22:	0136      	lsls	r6, r6, #4
 8020f24:	1a31      	subs	r1, r6, r0
 8020f26:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8020f28:	b289      	uxth	r1, r1
 8020f2a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8020f2e:	9113      	str	r1, [sp, #76]	@ 0x4c
 8020f30:	fb01 f105 	mul.w	r1, r1, r5
 8020f34:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 8020f38:	fa1f f58c 	uxth.w	r5, ip
 8020f3c:	1b76      	subs	r6, r6, r5
 8020f3e:	b2b6      	uxth	r6, r6
 8020f40:	fb06 1c03 	mla	ip, r6, r3, r1
 8020f44:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8020f46:	9514      	str	r5, [sp, #80]	@ 0x50
 8020f48:	fb05 cc01 	mla	ip, r5, r1, ip
 8020f4c:	9918      	ldr	r1, [sp, #96]	@ 0x60
 8020f4e:	9619      	str	r6, [sp, #100]	@ 0x64
 8020f50:	fb00 cc01 	mla	ip, r0, r1, ip
 8020f54:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8020f58:	f1bc 0f00 	cmp.w	ip, #0
 8020f5c:	f000 80e6 	beq.w	802112c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 8020f60:	f002 11ff 	and.w	r1, r2, #16711935	@ 0xff00ff
 8020f64:	2bff      	cmp	r3, #255	@ 0xff
 8020f66:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8020f6a:	911a      	str	r1, [sp, #104]	@ 0x68
 8020f6c:	921b      	str	r2, [sp, #108]	@ 0x6c
 8020f6e:	d01b      	beq.n	8020fa8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 8020f70:	fb02 f203 	mul.w	r2, r2, r3
 8020f74:	fb01 f103 	mul.w	r1, r1, r3
 8020f78:	4613      	mov	r3, r2
 8020f7a:	0a0a      	lsrs	r2, r1, #8
 8020f7c:	f101 1601 	add.w	r6, r1, #65537	@ 0x10001
 8020f80:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8020f84:	f503 7180 	add.w	r1, r3, #256	@ 0x100
 8020f88:	4432      	add	r2, r6
 8020f8a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8020f8e:	0a12      	lsrs	r2, r2, #8
 8020f90:	0a1b      	lsrs	r3, r3, #8
 8020f92:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8020f96:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020f9a:	4313      	orrs	r3, r2
 8020f9c:	f003 12ff 	and.w	r2, r3, #16711935	@ 0xff00ff
 8020fa0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020fa4:	921a      	str	r2, [sp, #104]	@ 0x68
 8020fa6:	931b      	str	r3, [sp, #108]	@ 0x6c
 8020fa8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020faa:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8020fac:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 8020fb0:	2aff      	cmp	r2, #255	@ 0xff
 8020fb2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020fb6:	931c      	str	r3, [sp, #112]	@ 0x70
 8020fb8:	d01b      	beq.n	8020ff2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x562>
 8020fba:	fb03 f302 	mul.w	r3, r3, r2
 8020fbe:	461e      	mov	r6, r3
 8020fc0:	fb01 f102 	mul.w	r1, r1, r2
 8020fc4:	0a0a      	lsrs	r2, r1, #8
 8020fc6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8020fca:	f101 1101 	add.w	r1, r1, #65537	@ 0x10001
 8020fce:	f503 7380 	add.w	r3, r3, #256	@ 0x100
 8020fd2:	440a      	add	r2, r1
 8020fd4:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8020fd8:	0a12      	lsrs	r2, r2, #8
 8020fda:	0a1b      	lsrs	r3, r3, #8
 8020fdc:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020fe0:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8020fe4:	ea42 0603 	orr.w	r6, r2, r3
 8020fe8:	f406 437f 	and.w	r3, r6, #65280	@ 0xff00
 8020fec:	f006 11ff 	and.w	r1, r6, #16711935	@ 0xff00ff
 8020ff0:	931c      	str	r3, [sp, #112]	@ 0x70
 8020ff2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020ff4:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 8020ff6:	f003 16ff 	and.w	r6, r3, #16711935	@ 0xff00ff
 8020ffa:	2aff      	cmp	r2, #255	@ 0xff
 8020ffc:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8021000:	931d      	str	r3, [sp, #116]	@ 0x74
 8021002:	d01b      	beq.n	802103c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ac>
 8021004:	fb03 f302 	mul.w	r3, r3, r2
 8021008:	fb06 f602 	mul.w	r6, r6, r2
 802100c:	461a      	mov	r2, r3
 802100e:	0a33      	lsrs	r3, r6, #8
 8021010:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 8021014:	f106 1601 	add.w	r6, r6, #65537	@ 0x10001
 8021018:	f502 7380 	add.w	r3, r2, #256	@ 0x100
 802101c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021020:	4476      	add	r6, lr
 8021022:	0a36      	lsrs	r6, r6, #8
 8021024:	0a1b      	lsrs	r3, r3, #8
 8021026:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 802102a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802102e:	ea46 0203 	orr.w	r2, r6, r3
 8021032:	f402 437f 	and.w	r3, r2, #65280	@ 0xff00
 8021036:	f002 16ff 	and.w	r6, r2, #16711935	@ 0xff00ff
 802103a:	931d      	str	r3, [sp, #116]	@ 0x74
 802103c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 802103e:	f002 13ff 	and.w	r3, r2, #16711935	@ 0xff00ff
 8021042:	f402 4e7f 	and.w	lr, r2, #65280	@ 0xff00
 8021046:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8021048:	930d      	str	r3, [sp, #52]	@ 0x34
 802104a:	2aff      	cmp	r2, #255	@ 0xff
 802104c:	d01b      	beq.n	8021086 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5f6>
 802104e:	fb03 f302 	mul.w	r3, r3, r2
 8021052:	fb0e fe02 	mul.w	lr, lr, r2
 8021056:	0a1a      	lsrs	r2, r3, #8
 8021058:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802105c:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 8021060:	f50e 7580 	add.w	r5, lr, #256	@ 0x100
 8021064:	441a      	add	r2, r3
 8021066:	eb05 2e1e 	add.w	lr, r5, lr, lsr #8
 802106a:	0a12      	lsrs	r2, r2, #8
 802106c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021070:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8021074:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 8021078:	ea42 0e0e 	orr.w	lr, r2, lr
 802107c:	f00e 13ff 	and.w	r3, lr, #16711935	@ 0xff00ff
 8021080:	930d      	str	r3, [sp, #52]	@ 0x34
 8021082:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 8021086:	ea6f 0c0c 	mvn.w	ip, ip
 802108a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802108c:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 802108e:	fb01 f305 	mul.w	r3, r1, r5
 8021092:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8021094:	fa5f fc8c 	uxtb.w	ip, ip
 8021098:	fb01 f105 	mul.w	r1, r1, r5
 802109c:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 802109e:	fb02 3305 	mla	r3, r2, r5, r3
 80210a2:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 80210a4:	fb02 1105 	mla	r1, r2, r5, r1
 80210a8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80210aa:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 80210ac:	fb06 3605 	mla	r6, r6, r5, r3
 80210b0:	fb02 1205 	mla	r2, r2, r5, r1
 80210b4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80210b6:	8839      	ldrh	r1, [r7, #0]
 80210b8:	fb03 6300 	mla	r3, r3, r0, r6
 80210bc:	fb0e 2e00 	mla	lr, lr, r0, r2
 80210c0:	10c8      	asrs	r0, r1, #3
 80210c2:	120a      	asrs	r2, r1, #8
 80210c4:	f000 06fc 	and.w	r6, r0, #252	@ 0xfc
 80210c8:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80210cc:	00c9      	lsls	r1, r1, #3
 80210ce:	fb02 f20c 	mul.w	r2, r2, ip
 80210d2:	fb06 f60c 	mul.w	r6, r6, ip
 80210d6:	b2c9      	uxtb	r1, r1
 80210d8:	fb01 f00c 	mul.w	r0, r1, ip
 80210dc:	0a1b      	lsrs	r3, r3, #8
 80210de:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80210e2:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 80210e6:	f40e 437f 	and.w	r3, lr, #65280	@ 0xff00
 80210ea:	430b      	orrs	r3, r1
 80210ec:	f106 0e01 	add.w	lr, r6, #1
 80210f0:	1c51      	adds	r1, r2, #1
 80210f2:	0c1d      	lsrs	r5, r3, #16
 80210f4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80210f8:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 80210fc:	f3c3 2107 	ubfx	r1, r3, #8, #8
 8021100:	fa5f fe83 	uxtb.w	lr, r3
 8021104:	f100 0c01 	add.w	ip, r0, #1
 8021108:	4b39      	ldr	r3, [pc, #228]	@ (80211f0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>)
 802110a:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 802110e:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 8021112:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8021116:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 802111a:	00c9      	lsls	r1, r1, #3
 802111c:	eb0e 2310 	add.w	r3, lr, r0, lsr #8
 8021120:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 8021124:	f401 62fc 	and.w	r2, r1, #2016	@ 0x7e0
 8021128:	4313      	orrs	r3, r2
 802112a:	803b      	strh	r3, [r7, #0]
 802112c:	9b38      	ldr	r3, [sp, #224]	@ 0xe0
 802112e:	f1ba 0f00 	cmp.w	sl, #0
 8021132:	f107 0702 	add.w	r7, r7, #2
 8021136:	44d9      	add	r9, fp
 8021138:	4498      	add	r8, r3
 802113a:	dd26      	ble.n	802118a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 802113c:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 8021140:	ea4f 4229 	mov.w	r2, r9, asr #16
 8021144:	2a00      	cmp	r2, #0
 8021146:	f10a 3aff 	add.w	sl, sl, #4294967295
 802114a:	ea4f 4128 	mov.w	r1, r8, asr #16
 802114e:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8021152:	f3c8 3e03 	ubfx	lr, r8, #12, #4
 8021156:	f6bf aeb9 	bge.w	8020ecc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 802115a:	1c53      	adds	r3, r2, #1
 802115c:	d4e6      	bmi.n	802112c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802115e:	42b3      	cmp	r3, r6
 8021160:	dce4      	bgt.n	802112c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 8021162:	1c4b      	adds	r3, r1, #1
 8021164:	d4e2      	bmi.n	802112c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 8021166:	4563      	cmp	r3, ip
 8021168:	dce0      	bgt.n	802112c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802116a:	fa0f f38c 	sxth.w	r3, ip
 802116e:	b236      	sxth	r6, r6
 8021170:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8021174:	e9cd 6300 	strd	r6, r3, [sp]
 8021178:	e9cd 0e04 	strd	r0, lr, [sp, #16]
 802117c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802117e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8021180:	4639      	mov	r1, r7
 8021182:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8021184:	f7ff fade 	bl	8020744 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8021188:	e7d0      	b.n	802112c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802118a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802118c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8021190:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8021194:	3301      	adds	r3, #1
 8021196:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802119a:	e4d6      	b.n	8020b4a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802119c:	3b01      	subs	r3, #1
 802119e:	f8dd c01c 	ldr.w	ip, [sp, #28]
 80211a2:	930c      	str	r3, [sp, #48]	@ 0x30
 80211a4:	469a      	mov	sl, r3
 80211a6:	e684      	b.n	8020eb2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x422>
 80211a8:	f1be 0f00 	cmp.w	lr, #0
 80211ac:	f43f aeb4 	beq.w	8020f18 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 80211b0:	5d89      	ldrb	r1, [r1, r6]
 80211b2:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 80211b6:	9120      	str	r1, [sp, #128]	@ 0x80
 80211b8:	0e09      	lsrs	r1, r1, #24
 80211ba:	9117      	str	r1, [sp, #92]	@ 0x5c
 80211bc:	e6ac      	b.n	8020f18 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 80211be:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80211c0:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80211c2:	eb01 0c06 	add.w	ip, r1, r6
 80211c6:	f89c c001 	ldrb.w	ip, [ip, #1]
 80211ca:	5d89      	ldrb	r1, [r1, r6]
 80211cc:	f855 602c 	ldr.w	r6, [r5, ip, lsl #2]
 80211d0:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 80211d4:	0e35      	lsrs	r5, r6, #24
 80211d6:	9120      	str	r1, [sp, #128]	@ 0x80
 80211d8:	0e09      	lsrs	r1, r1, #24
 80211da:	9621      	str	r6, [sp, #132]	@ 0x84
 80211dc:	9518      	str	r5, [sp, #96]	@ 0x60
 80211de:	9117      	str	r1, [sp, #92]	@ 0x5c
 80211e0:	e69a      	b.n	8020f18 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 80211e2:	f43f acb2 	beq.w	8020b4a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 80211e6:	1e65      	subs	r5, r4, #1
 80211e8:	f8cd b01c 	str.w	fp, [sp, #28]
 80211ec:	e4f2      	b.n	8020bd4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 80211ee:	bf00      	nop
 80211f0:	fffff800 	.word	0xfffff800

080211f4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh>:
 80211f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80211f8:	b08b      	sub	sp, #44	@ 0x2c
 80211fa:	f89d 0068 	ldrb.w	r0, [sp, #104]	@ 0x68
 80211fe:	f8dd c05c 	ldr.w	ip, [sp, #92]	@ 0x5c
 8021202:	ea6f 0b00 	mvn.w	fp, r0
 8021206:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8021208:	f9bd 5050 	ldrsh.w	r5, [sp, #80]	@ 0x50
 802120c:	9005      	str	r0, [sp, #20]
 802120e:	fb0c 4805 	mla	r8, ip, r5, r4
 8021212:	7848      	ldrb	r0, [r1, #1]
 8021214:	788e      	ldrb	r6, [r1, #2]
 8021216:	0204      	lsls	r4, r0, #8
 8021218:	780f      	ldrb	r7, [r1, #0]
 802121a:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 802121e:	9306      	str	r3, [sp, #24]
 8021220:	fa5f f38b 	uxtb.w	r3, fp
 8021224:	433c      	orrs	r4, r7
 8021226:	9304      	str	r3, [sp, #16]
 8021228:	f1bc 0f00 	cmp.w	ip, #0
 802122c:	eb02 0308 	add.w	r3, r2, r8
 8021230:	9003      	str	r0, [sp, #12]
 8021232:	9602      	str	r6, [sp, #8]
 8021234:	9307      	str	r3, [sp, #28]
 8021236:	9409      	str	r4, [sp, #36]	@ 0x24
 8021238:	f10c 0601 	add.w	r6, ip, #1
 802123c:	f9bd e054 	ldrsh.w	lr, [sp, #84]	@ 0x54
 8021240:	f89d 3060 	ldrb.w	r3, [sp, #96]	@ 0x60
 8021244:	f89d 0064 	ldrb.w	r0, [sp, #100]	@ 0x64
 8021248:	db02      	blt.n	8021250 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x5c>
 802124a:	45e6      	cmp	lr, ip
 802124c:	f300 80a0 	bgt.w	8021390 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x19c>
 8021250:	f10d 0c24 	add.w	ip, sp, #36	@ 0x24
 8021254:	46e0      	mov	r8, ip
 8021256:	fa5f fb84 	uxtb.w	fp, r4
 802125a:	f8cd b004 	str.w	fp, [sp, #4]
 802125e:	2e00      	cmp	r6, #0
 8021260:	db01      	blt.n	8021266 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x72>
 8021262:	45b6      	cmp	lr, r6
 8021264:	dc73      	bgt.n	802134e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x15a>
 8021266:	fa5f fa84 	uxtb.w	sl, r4
 802126a:	f10d 0e24 	add.w	lr, sp, #36	@ 0x24
 802126e:	4654      	mov	r4, sl
 8021270:	46f1      	mov	r9, lr
 8021272:	2b0f      	cmp	r3, #15
 8021274:	f200 80cb 	bhi.w	802140e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x21a>
 8021278:	280f      	cmp	r0, #15
 802127a:	f200 80c8 	bhi.w	802140e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x21a>
 802127e:	b29b      	uxth	r3, r3
 8021280:	b280      	uxth	r0, r0
 8021282:	fb03 f600 	mul.w	r6, r3, r0
 8021286:	011b      	lsls	r3, r3, #4
 8021288:	1b9d      	subs	r5, r3, r6
 802128a:	9a01      	ldr	r2, [sp, #4]
 802128c:	b2ad      	uxth	r5, r5
 802128e:	ebc6 1000 	rsb	r0, r6, r0, lsl #4
 8021292:	fb05 f202 	mul.w	r2, r5, r2
 8021296:	b280      	uxth	r0, r0
 8021298:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802129c:	1a1b      	subs	r3, r3, r0
 802129e:	b29b      	uxth	r3, r3
 80212a0:	fb03 220b 	mla	r2, r3, fp, r2
 80212a4:	fb00 2a0a 	mla	sl, r0, sl, r2
 80212a8:	f8bd b010 	ldrh.w	fp, [sp, #16]
 80212ac:	fb06 a404 	mla	r4, r6, r4, sl
 80212b0:	fb17 f70b 	smulbb	r7, r7, fp
 80212b4:	f8bd a014 	ldrh.w	sl, [sp, #20]
 80212b8:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80212bc:	fb04 770a 	mla	r7, r4, sl, r7
 80212c0:	b2bf      	uxth	r7, r7
 80212c2:	1c7a      	adds	r2, r7, #1
 80212c4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80212c8:	123f      	asrs	r7, r7, #8
 80212ca:	700f      	strb	r7, [r1, #0]
 80212cc:	f89c 4001 	ldrb.w	r4, [ip, #1]
 80212d0:	f898 7001 	ldrb.w	r7, [r8, #1]
 80212d4:	fb05 f204 	mul.w	r2, r5, r4
 80212d8:	fb03 2407 	mla	r4, r3, r7, r2
 80212dc:	f899 2001 	ldrb.w	r2, [r9, #1]
 80212e0:	f89e 7001 	ldrb.w	r7, [lr, #1]
 80212e4:	fb00 4202 	mla	r2, r0, r2, r4
 80212e8:	9c03      	ldr	r4, [sp, #12]
 80212ea:	fb06 2207 	mla	r2, r6, r7, r2
 80212ee:	fb14 f40b 	smulbb	r4, r4, fp
 80212f2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80212f6:	fb02 420a 	mla	r2, r2, sl, r4
 80212fa:	b292      	uxth	r2, r2
 80212fc:	1c54      	adds	r4, r2, #1
 80212fe:	eb04 2212 	add.w	r2, r4, r2, lsr #8
 8021302:	1212      	asrs	r2, r2, #8
 8021304:	704a      	strb	r2, [r1, #1]
 8021306:	f89c 4002 	ldrb.w	r4, [ip, #2]
 802130a:	f898 2002 	ldrb.w	r2, [r8, #2]
 802130e:	fb05 f504 	mul.w	r5, r5, r4
 8021312:	fb03 5502 	mla	r5, r3, r2, r5
 8021316:	f899 4002 	ldrb.w	r4, [r9, #2]
 802131a:	f89e 2002 	ldrb.w	r2, [lr, #2]
 802131e:	fb00 5004 	mla	r0, r0, r4, r5
 8021322:	9b02      	ldr	r3, [sp, #8]
 8021324:	fb06 0602 	mla	r6, r6, r2, r0
 8021328:	fb13 fb0b 	smulbb	fp, r3, fp
 802132c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021330:	fb06 ba0a 	mla	sl, r6, sl, fp
 8021334:	fa1f fa8a 	uxth.w	sl, sl
 8021338:	f10a 0b01 	add.w	fp, sl, #1
 802133c:	eb0b 2a1a 	add.w	sl, fp, sl, lsr #8
 8021340:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8021344:	f881 a002 	strb.w	sl, [r1, #2]
 8021348:	b00b      	add	sp, #44	@ 0x2c
 802134a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802134e:	2800      	cmp	r0, #0
 8021350:	d089      	beq.n	8021266 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x72>
 8021352:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 8021354:	2e00      	cmp	r6, #0
 8021356:	db47      	blt.n	80213e8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1f4>
 8021358:	42b5      	cmp	r5, r6
 802135a:	dd45      	ble.n	80213e8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1f4>
 802135c:	9a07      	ldr	r2, [sp, #28]
 802135e:	f812 9005 	ldrb.w	r9, [r2, r5]
 8021362:	9a06      	ldr	r2, [sp, #24]
 8021364:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8021368:	4491      	add	r9, r2
 802136a:	3601      	adds	r6, #1
 802136c:	f899 a000 	ldrb.w	sl, [r9]
 8021370:	d436      	bmi.n	80213e0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1ec>
 8021372:	42b5      	cmp	r5, r6
 8021374:	dd34      	ble.n	80213e0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1ec>
 8021376:	2b00      	cmp	r3, #0
 8021378:	d045      	beq.n	8021406 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x212>
 802137a:	9a07      	ldr	r2, [sp, #28]
 802137c:	442a      	add	r2, r5
 802137e:	f892 e001 	ldrb.w	lr, [r2, #1]
 8021382:	9a06      	ldr	r2, [sp, #24]
 8021384:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8021388:	f812 400e 	ldrb.w	r4, [r2, lr]
 802138c:	4496      	add	lr, r2
 802138e:	e770      	b.n	8021272 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x7e>
 8021390:	4691      	mov	r9, r2
 8021392:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8021394:	2a00      	cmp	r2, #0
 8021396:	db01      	blt.n	802139c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1a8>
 8021398:	4295      	cmp	r5, r2
 802139a:	dc19      	bgt.n	80213d0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1dc>
 802139c:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 80213a0:	3201      	adds	r2, #1
 80213a2:	f898 b000 	ldrb.w	fp, [r8]
 80213a6:	d40e      	bmi.n	80213c6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1d2>
 80213a8:	4295      	cmp	r5, r2
 80213aa:	dd0c      	ble.n	80213c6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1d2>
 80213ac:	b1fb      	cbz	r3, 80213ee <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1fa>
 80213ae:	9a07      	ldr	r2, [sp, #28]
 80213b0:	f892 c001 	ldrb.w	ip, [r2, #1]
 80213b4:	9a06      	ldr	r2, [sp, #24]
 80213b6:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80213ba:	f812 200c 	ldrb.w	r2, [r2, ip]
 80213be:	9201      	str	r2, [sp, #4]
 80213c0:	9a06      	ldr	r2, [sp, #24]
 80213c2:	4494      	add	ip, r2
 80213c4:	e74b      	b.n	802125e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x6a>
 80213c6:	b2e2      	uxtb	r2, r4
 80213c8:	9201      	str	r2, [sp, #4]
 80213ca:	f10d 0c24 	add.w	ip, sp, #36	@ 0x24
 80213ce:	e746      	b.n	802125e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x6a>
 80213d0:	f819 8008 	ldrb.w	r8, [r9, r8]
 80213d4:	9a06      	ldr	r2, [sp, #24]
 80213d6:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80213da:	4490      	add	r8, r2
 80213dc:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 80213de:	e7df      	b.n	80213a0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1ac>
 80213e0:	b2e4      	uxtb	r4, r4
 80213e2:	f10d 0e24 	add.w	lr, sp, #36	@ 0x24
 80213e6:	e744      	b.n	8021272 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x7e>
 80213e8:	f10d 0924 	add.w	r9, sp, #36	@ 0x24
 80213ec:	e7bd      	b.n	802136a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x176>
 80213ee:	b2e2      	uxtb	r2, r4
 80213f0:	2e00      	cmp	r6, #0
 80213f2:	9201      	str	r2, [sp, #4]
 80213f4:	f10d 0c24 	add.w	ip, sp, #36	@ 0x24
 80213f8:	f6bf af33 	bge.w	8021262 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x6e>
 80213fc:	46e6      	mov	lr, ip
 80213fe:	46e1      	mov	r9, ip
 8021400:	4692      	mov	sl, r2
 8021402:	4614      	mov	r4, r2
 8021404:	e738      	b.n	8021278 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x84>
 8021406:	b2e4      	uxtb	r4, r4
 8021408:	f10d 0e24 	add.w	lr, sp, #36	@ 0x24
 802140c:	e734      	b.n	8021278 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x84>
 802140e:	4b03      	ldr	r3, [pc, #12]	@ (802141c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x228>)
 8021410:	4a03      	ldr	r2, [pc, #12]	@ (8021420 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x22c>)
 8021412:	f44f 7170 	mov.w	r1, #960	@ 0x3c0
 8021416:	4803      	ldr	r0, [pc, #12]	@ (8021424 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x230>)
 8021418:	f003 fc8c 	bl	8024d34 <__assert_func>
 802141c:	08027d5c 	.word	0x08027d5c
 8021420:	080283d8 	.word	0x080283d8
 8021424:	08027ee4 	.word	0x08027ee4

08021428 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021428:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802142c:	ed2d 8b08 	vpush	{d8-d11}
 8021430:	b097      	sub	sp, #92	@ 0x5c
 8021432:	f89d 60c4 	ldrb.w	r6, [sp, #196]	@ 0xc4
 8021436:	eeb0 aa40 	vmov.f32	s20, s0
 802143a:	e9dd b729 	ldrd	fp, r7, [sp, #164]	@ 0xa4
 802143e:	e9cd 0614 	strd	r0, r6, [sp, #80]	@ 0x50
 8021442:	43f0      	mvns	r0, r6
 8021444:	eef0 9a60 	vmov.f32	s19, s1
 8021448:	eeb0 9a41 	vmov.f32	s18, s2
 802144c:	eef0 8a62 	vmov.f32	s17, s5
 8021450:	eeb0 8a43 	vmov.f32	s16, s6
 8021454:	eef0 ba44 	vmov.f32	s23, s8
 8021458:	eeb0 ba64 	vmov.f32	s22, s9
 802145c:	eef0 aa45 	vmov.f32	s21, s10
 8021460:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 8021464:	e9dd 512d 	ldrd	r5, r1, [sp, #180]	@ 0xb4
 8021468:	461a      	mov	r2, r3
 802146a:	686c      	ldr	r4, [r5, #4]
 802146c:	9b2f      	ldr	r3, [sp, #188]	@ 0xbc
 802146e:	f8dd 90ac 	ldr.w	r9, [sp, #172]	@ 0xac
 8021472:	fb04 1303 	mla	r3, r4, r3, r1
 8021476:	9c30      	ldr	r4, [sp, #192]	@ 0xc0
 8021478:	6829      	ldr	r1, [r5, #0]
 802147a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802147e:	6865      	ldr	r5, [r4, #4]
 8021480:	eb01 0a03 	add.w	sl, r1, r3
 8021484:	b2c3      	uxtb	r3, r0
 8021486:	6824      	ldr	r4, [r4, #0]
 8021488:	9309      	str	r3, [sp, #36]	@ 0x24
 802148a:	1d2b      	adds	r3, r5, #4
 802148c:	930a      	str	r3, [sp, #40]	@ 0x28
 802148e:	b2b3      	uxth	r3, r6
 8021490:	940d      	str	r4, [sp, #52]	@ 0x34
 8021492:	930b      	str	r3, [sp, #44]	@ 0x2c
 8021494:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8021496:	2b00      	cmp	r3, #0
 8021498:	dc02      	bgt.n	80214a0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802149a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802149c:	2b00      	cmp	r3, #0
 802149e:	dd63      	ble.n	8021568 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 80214a0:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 80214a2:	2a00      	cmp	r2, #0
 80214a4:	e9d3 6e02 	ldrd	r6, lr, [r3, #8]
 80214a8:	b234      	sxth	r4, r6
 80214aa:	fa0f fc8e 	sxth.w	ip, lr
 80214ae:	f340 825b 	ble.w	8021968 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>
 80214b2:	f8cd e020 	str.w	lr, [sp, #32]
 80214b6:	f8dd e0b0 	ldr.w	lr, [sp, #176]	@ 0xb0
 80214ba:	1e65      	subs	r5, r4, #1
 80214bc:	f10c 38ff 	add.w	r8, ip, #4294967295
 80214c0:	ea5f 432b 	movs.w	r3, fp, asr #16
 80214c4:	ea4f 4127 	mov.w	r1, r7, asr #16
 80214c8:	d405      	bmi.n	80214d6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80214ca:	42ab      	cmp	r3, r5
 80214cc:	da03      	bge.n	80214d6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80214ce:	2900      	cmp	r1, #0
 80214d0:	db01      	blt.n	80214d6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80214d2:	4541      	cmp	r1, r8
 80214d4:	db4d      	blt.n	8021572 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80214d6:	1c58      	adds	r0, r3, #1
 80214d8:	d406      	bmi.n	80214e8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 80214da:	42a0      	cmp	r0, r4
 80214dc:	dc04      	bgt.n	80214e8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 80214de:	1c48      	adds	r0, r1, #1
 80214e0:	d402      	bmi.n	80214e8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 80214e2:	4560      	cmp	r0, ip
 80214e4:	f340 819b 	ble.w	802181e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 80214e8:	3a01      	subs	r2, #1
 80214ea:	44cb      	add	fp, r9
 80214ec:	4477      	add	r7, lr
 80214ee:	f10a 0a03 	add.w	sl, sl, #3
 80214f2:	d1e5      	bne.n	80214c0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80214f4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80214f6:	2b00      	cmp	r3, #0
 80214f8:	dd36      	ble.n	8021568 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 80214fa:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80214fe:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8021502:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8021506:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802150a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802150e:	ee29 6aa7 	vmul.f32	s12, s19, s15
 8021512:	ee69 7a27 	vmul.f32	s15, s18, s15
 8021516:	ee76 6a68 	vsub.f32	s13, s12, s17
 802151a:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802151e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021522:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021526:	ee16 2a90 	vmov	r2, s13
 802152a:	3b01      	subs	r3, #1
 802152c:	930e      	str	r3, [sp, #56]	@ 0x38
 802152e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021530:	fb92 f9f3 	sdiv	r9, r2, r3
 8021534:	ee17 2a10 	vmov	r2, s14
 8021538:	eeb0 7a48 	vmov.f32	s14, s16
 802153c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021540:	ee17 7a10 	vmov	r7, s14
 8021544:	eeb0 7a68 	vmov.f32	s14, s17
 8021548:	fb92 f3f3 	sdiv	r3, r2, r3
 802154c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021550:	932c      	str	r3, [sp, #176]	@ 0xb0
 8021552:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021554:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8021556:	ee17 ba10 	vmov	fp, s14
 802155a:	eeb0 8a67 	vmov.f32	s16, s15
 802155e:	eef0 8a46 	vmov.f32	s17, s12
 8021562:	bf18      	it	ne
 8021564:	461a      	movne	r2, r3
 8021566:	e795      	b.n	8021494 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021568:	b017      	add	sp, #92	@ 0x5c
 802156a:	ecbd 8b08 	vpop	{d8-d11}
 802156e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021572:	f8dd e020 	ldr.w	lr, [sp, #32]
 8021576:	1e51      	subs	r1, r2, #1
 8021578:	fb09 b301 	mla	r3, r9, r1, fp
 802157c:	141b      	asrs	r3, r3, #16
 802157e:	9108      	str	r1, [sp, #32]
 8021580:	f100 80e7 	bmi.w	8021752 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8021584:	42ab      	cmp	r3, r5
 8021586:	f280 80e4 	bge.w	8021752 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 802158a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802158c:	fb03 7301 	mla	r3, r3, r1, r7
 8021590:	141b      	asrs	r3, r3, #16
 8021592:	f100 80de 	bmi.w	8021752 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8021596:	f10c 3cff 	add.w	ip, ip, #4294967295
 802159a:	4563      	cmp	r3, ip
 802159c:	f280 80d9 	bge.w	8021752 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 80215a0:	2a00      	cmp	r2, #0
 80215a2:	dda7      	ble.n	80214f4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 80215a4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80215a8:	eb0a 0302 	add.w	r3, sl, r2
 80215ac:	930c      	str	r3, [sp, #48]	@ 0x30
 80215ae:	f10a 0c03 	add.w	ip, sl, #3
 80215b2:	e9cd 792a 	strd	r7, r9, [sp, #168]	@ 0xa8
 80215b6:	463b      	mov	r3, r7
 80215b8:	e09a      	b.n	80216f0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80215ba:	784d      	ldrb	r5, [r1, #1]
 80215bc:	1908      	adds	r0, r1, r4
 80215be:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80215c2:	4435      	add	r5, r6
 80215c4:	2a00      	cmp	r2, #0
 80215c6:	f000 80b5 	beq.w	8021734 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80215ca:	5d0c      	ldrb	r4, [r1, r4]
 80215cc:	f890 e001 	ldrb.w	lr, [r0, #1]
 80215d0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80215d4:	19a1      	adds	r1, r4, r6
 80215d6:	9108      	str	r1, [sp, #32]
 80215d8:	4631      	mov	r1, r6
 80215da:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80215de:	9f08      	ldr	r7, [sp, #32]
 80215e0:	44b6      	add	lr, r6
 80215e2:	b29b      	uxth	r3, r3
 80215e4:	b292      	uxth	r2, r2
 80215e6:	fb03 f602 	mul.w	r6, r3, r2
 80215ea:	011b      	lsls	r3, r3, #4
 80215ec:	f895 9000 	ldrb.w	r9, [r5]
 80215f0:	1b98      	subs	r0, r3, r6
 80215f2:	b280      	uxth	r0, r0
 80215f4:	fb00 f909 	mul.w	r9, r0, r9
 80215f8:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 80215fc:	b292      	uxth	r2, r2
 80215fe:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 8021602:	f811 100a 	ldrb.w	r1, [r1, sl]
 8021606:	1a9b      	subs	r3, r3, r2
 8021608:	b29b      	uxth	r3, r3
 802160a:	fb03 9101 	mla	r1, r3, r1, r9
 802160e:	f897 9000 	ldrb.w	r9, [r7]
 8021612:	9c2b      	ldr	r4, [sp, #172]	@ 0xac
 8021614:	fb02 1109 	mla	r1, r2, r9, r1
 8021618:	f89e a000 	ldrb.w	sl, [lr]
 802161c:	f81c 9c03 	ldrb.w	r9, [ip, #-3]
 8021620:	44a3      	add	fp, r4
 8021622:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8021624:	fb06 110a 	mla	r1, r6, sl, r1
 8021628:	fb19 f904 	smulbb	r9, r9, r4
 802162c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802162e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021632:	fb01 9904 	mla	r9, r1, r4, r9
 8021636:	fa1f f989 	uxth.w	r9, r9
 802163a:	f109 0101 	add.w	r1, r9, #1
 802163e:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 8021642:	ea4f 2929 	mov.w	r9, r9, asr #8
 8021646:	f80c 9c03 	strb.w	r9, [ip, #-3]
 802164a:	7869      	ldrb	r1, [r5, #1]
 802164c:	f898 9001 	ldrb.w	r9, [r8, #1]
 8021650:	fb00 f101 	mul.w	r1, r0, r1
 8021654:	9c08      	ldr	r4, [sp, #32]
 8021656:	fb03 1109 	mla	r1, r3, r9, r1
 802165a:	f894 9001 	ldrb.w	r9, [r4, #1]
 802165e:	9f2c      	ldr	r7, [sp, #176]	@ 0xb0
 8021660:	9c2a      	ldr	r4, [sp, #168]	@ 0xa8
 8021662:	fb02 1109 	mla	r1, r2, r9, r1
 8021666:	f89e a001 	ldrb.w	sl, [lr, #1]
 802166a:	443c      	add	r4, r7
 802166c:	f81c 9c02 	ldrb.w	r9, [ip, #-2]
 8021670:	942a      	str	r4, [sp, #168]	@ 0xa8
 8021672:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8021674:	fb06 110a 	mla	r1, r6, sl, r1
 8021678:	fb19 f904 	smulbb	r9, r9, r4
 802167c:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 802167e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021682:	fb01 9907 	mla	r9, r1, r7, r9
 8021686:	fa1f f989 	uxth.w	r9, r9
 802168a:	f109 0101 	add.w	r1, r9, #1
 802168e:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 8021692:	ea4f 2929 	mov.w	r9, r9, asr #8
 8021696:	f80c 9c02 	strb.w	r9, [ip, #-2]
 802169a:	78a9      	ldrb	r1, [r5, #2]
 802169c:	f898 5002 	ldrb.w	r5, [r8, #2]
 80216a0:	fb00 f001 	mul.w	r0, r0, r1
 80216a4:	fb03 0005 	mla	r0, r3, r5, r0
 80216a8:	9b08      	ldr	r3, [sp, #32]
 80216aa:	f89e 4002 	ldrb.w	r4, [lr, #2]
 80216ae:	789b      	ldrb	r3, [r3, #2]
 80216b0:	f81c ec01 	ldrb.w	lr, [ip, #-1]
 80216b4:	fb02 0003 	mla	r0, r2, r3, r0
 80216b8:	fb06 0004 	mla	r0, r6, r4, r0
 80216bc:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 80216be:	fb1e f404 	smulbb	r4, lr, r4
 80216c2:	f3c0 2e07 	ubfx	lr, r0, #8, #8
 80216c6:	fb0e 4e07 	mla	lr, lr, r7, r4
 80216ca:	fa1f fe8e 	uxth.w	lr, lr
 80216ce:	f10e 0301 	add.w	r3, lr, #1
 80216d2:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 80216d6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80216d8:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 80216dc:	4563      	cmp	r3, ip
 80216de:	f80c ec01 	strb.w	lr, [ip, #-1]
 80216e2:	d034      	beq.n	802174e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 80216e4:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 80216e6:	f10c 0c03 	add.w	ip, ip, #3
 80216ea:	f9b3 4008 	ldrsh.w	r4, [r3, #8]
 80216ee:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80216f0:	1419      	asrs	r1, r3, #16
 80216f2:	ea4f 432b 	mov.w	r3, fp, asr #16
 80216f6:	fb04 3101 	mla	r1, r4, r1, r3
 80216fa:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80216fc:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 80216fe:	f812 a001 	ldrb.w	sl, [r2, r1]
 8021702:	4411      	add	r1, r2
 8021704:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8021706:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 802170a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 802170e:	eb06 080a 	add.w	r8, r6, sl
 8021712:	f3c2 3203 	ubfx	r2, r2, #12, #4
 8021716:	2b00      	cmp	r3, #0
 8021718:	f47f af4f 	bne.w	80215ba <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 802171c:	b182      	cbz	r2, 8021740 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802171e:	5d0c      	ldrb	r4, [r1, r4]
 8021720:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8021722:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8021726:	1861      	adds	r1, r4, r1
 8021728:	9108      	str	r1, [sp, #32]
 802172a:	46c6      	mov	lr, r8
 802172c:	4645      	mov	r5, r8
 802172e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8021730:	9f08      	ldr	r7, [sp, #32]
 8021732:	e756      	b.n	80215e2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8021734:	46c6      	mov	lr, r8
 8021736:	f8cd 8020 	str.w	r8, [sp, #32]
 802173a:	4631      	mov	r1, r6
 802173c:	4647      	mov	r7, r8
 802173e:	e750      	b.n	80215e2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8021740:	46c6      	mov	lr, r8
 8021742:	f8cd 8020 	str.w	r8, [sp, #32]
 8021746:	4645      	mov	r5, r8
 8021748:	4631      	mov	r1, r6
 802174a:	4647      	mov	r7, r8
 802174c:	e749      	b.n	80215e2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802174e:	469a      	mov	sl, r3
 8021750:	e6d0      	b.n	80214f4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 8021752:	2a00      	cmp	r2, #0
 8021754:	f77f aece 	ble.w	80214f4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 8021758:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802175c:	ea4f 432b 	mov.w	r3, fp, asr #16
 8021760:	1439      	asrs	r1, r7, #16
 8021762:	4654      	mov	r4, sl
 8021764:	9d30      	ldr	r5, [sp, #192]	@ 0xc0
 8021766:	f8cd a04c 	str.w	sl, [sp, #76]	@ 0x4c
 802176a:	2b00      	cmp	r3, #0
 802176c:	f3cb 3003 	ubfx	r0, fp, #12, #4
 8021770:	f3c7 3203 	ubfx	r2, r7, #12, #4
 8021774:	db2f      	blt.n	80217d6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8021776:	f106 3cff 	add.w	ip, r6, #4294967295
 802177a:	4563      	cmp	r3, ip
 802177c:	da2b      	bge.n	80217d6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802177e:	2900      	cmp	r1, #0
 8021780:	db29      	blt.n	80217d6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8021782:	f10e 3cff 	add.w	ip, lr, #4294967295
 8021786:	4561      	cmp	r1, ip
 8021788:	da25      	bge.n	80217d6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802178a:	fa0f fa86 	sxth.w	sl, r6
 802178e:	fb01 330a 	mla	r3, r1, sl, r3
 8021792:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8021794:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8021796:	f811 e003 	ldrb.w	lr, [r1, r3]
 802179a:	440b      	add	r3, r1
 802179c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80217a0:	eb06 0c0e 	add.w	ip, r6, lr
 80217a4:	2800      	cmp	r0, #0
 80217a6:	d052      	beq.n	802184e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x426>
 80217a8:	7859      	ldrb	r1, [r3, #1]
 80217aa:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80217ae:	1871      	adds	r1, r6, r1
 80217b0:	910c      	str	r1, [sp, #48]	@ 0x30
 80217b2:	2a00      	cmp	r2, #0
 80217b4:	f000 80d5 	beq.w	8021962 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x53a>
 80217b8:	eb03 010a 	add.w	r1, r3, sl
 80217bc:	7849      	ldrb	r1, [r1, #1]
 80217be:	f813 300a 	ldrb.w	r3, [r3, sl]
 80217c2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80217c6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80217ca:	1871      	adds	r1, r6, r1
 80217cc:	18f3      	adds	r3, r6, r3
 80217ce:	9110      	str	r1, [sp, #64]	@ 0x40
 80217d0:	9311      	str	r3, [sp, #68]	@ 0x44
 80217d2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80217d4:	e042      	b.n	802185c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 80217d6:	f113 0c01 	adds.w	ip, r3, #1
 80217da:	d406      	bmi.n	80217ea <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80217dc:	45b4      	cmp	ip, r6
 80217de:	dc04      	bgt.n	80217ea <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80217e0:	f111 0c01 	adds.w	ip, r1, #1
 80217e4:	d401      	bmi.n	80217ea <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80217e6:	45f4      	cmp	ip, lr
 80217e8:	dd1f      	ble.n	802182a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x402>
 80217ea:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80217ec:	f1b8 0f00 	cmp.w	r8, #0
 80217f0:	f104 0403 	add.w	r4, r4, #3
 80217f4:	44cb      	add	fp, r9
 80217f6:	441f      	add	r7, r3
 80217f8:	dd07      	ble.n	802180a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 80217fa:	e9d5 6e02 	ldrd	r6, lr, [r5, #8]
 80217fe:	f108 38ff 	add.w	r8, r8, #4294967295
 8021802:	ea4f 432b 	mov.w	r3, fp, asr #16
 8021806:	1439      	asrs	r1, r7, #16
 8021808:	e7af      	b.n	802176a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802180a:	9b08      	ldr	r3, [sp, #32]
 802180c:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 8021810:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8021814:	3301      	adds	r3, #1
 8021816:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802181a:	449a      	add	sl, r3
 802181c:	e66a      	b.n	80214f4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802181e:	3a01      	subs	r2, #1
 8021820:	f8dd e020 	ldr.w	lr, [sp, #32]
 8021824:	4690      	mov	r8, r2
 8021826:	9208      	str	r2, [sp, #32]
 8021828:	e79b      	b.n	8021762 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802182a:	fa0f fe8e 	sxth.w	lr, lr
 802182e:	b236      	sxth	r6, r6
 8021830:	e9cd 6e00 	strd	r6, lr, [sp]
 8021834:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8021836:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802183a:	e9cd 2605 	strd	r2, r6, [sp, #20]
 802183e:	9302      	str	r3, [sp, #8]
 8021840:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8021842:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8021844:	4621      	mov	r1, r4
 8021846:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8021848:	f7ff fcd4 	bl	80211f4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh>
 802184c:	e7cd      	b.n	80217ea <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802184e:	2a00      	cmp	r2, #0
 8021850:	d17b      	bne.n	802194a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x522>
 8021852:	4661      	mov	r1, ip
 8021854:	e9cd cc10 	strd	ip, ip, [sp, #64]	@ 0x40
 8021858:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802185c:	b283      	uxth	r3, r0
 802185e:	b292      	uxth	r2, r2
 8021860:	fb03 f602 	mul.w	r6, r3, r2
 8021864:	011b      	lsls	r3, r3, #4
 8021866:	7809      	ldrb	r1, [r1, #0]
 8021868:	1b98      	subs	r0, r3, r6
 802186a:	b280      	uxth	r0, r0
 802186c:	9012      	str	r0, [sp, #72]	@ 0x48
 802186e:	fb00 f101 	mul.w	r1, r0, r1
 8021872:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8021876:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8021878:	b292      	uxth	r2, r2
 802187a:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802187e:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8021882:	1a9b      	subs	r3, r3, r2
 8021884:	b29b      	uxth	r3, r3
 8021886:	fb03 110e 	mla	r1, r3, lr, r1
 802188a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802188c:	f890 a000 	ldrb.w	sl, [r0]
 8021890:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8021892:	fb02 110a 	mla	r1, r2, sl, r1
 8021896:	f890 e000 	ldrb.w	lr, [r0]
 802189a:	f894 a000 	ldrb.w	sl, [r4]
 802189e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80218a0:	fb06 110e 	mla	r1, r6, lr, r1
 80218a4:	fb1a fa00 	smulbb	sl, sl, r0
 80218a8:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80218aa:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80218ae:	fb01 a100 	mla	r1, r1, r0, sl
 80218b2:	b289      	uxth	r1, r1
 80218b4:	f101 0e01 	add.w	lr, r1, #1
 80218b8:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 80218bc:	1209      	asrs	r1, r1, #8
 80218be:	7021      	strb	r1, [r4, #0]
 80218c0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80218c2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80218c4:	7849      	ldrb	r1, [r1, #1]
 80218c6:	f89c e001 	ldrb.w	lr, [ip, #1]
 80218ca:	fb00 f101 	mul.w	r1, r0, r1
 80218ce:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80218d0:	fb03 110e 	mla	r1, r3, lr, r1
 80218d4:	f890 a001 	ldrb.w	sl, [r0, #1]
 80218d8:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80218da:	fb02 110a 	mla	r1, r2, sl, r1
 80218de:	f890 e001 	ldrb.w	lr, [r0, #1]
 80218e2:	f894 a001 	ldrb.w	sl, [r4, #1]
 80218e6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80218e8:	fb06 110e 	mla	r1, r6, lr, r1
 80218ec:	fb1a fa00 	smulbb	sl, sl, r0
 80218f0:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80218f2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80218f6:	fb01 a100 	mla	r1, r1, r0, sl
 80218fa:	b289      	uxth	r1, r1
 80218fc:	f101 0e01 	add.w	lr, r1, #1
 8021900:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 8021904:	1209      	asrs	r1, r1, #8
 8021906:	7061      	strb	r1, [r4, #1]
 8021908:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802190a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802190c:	7889      	ldrb	r1, [r1, #2]
 802190e:	f89c c002 	ldrb.w	ip, [ip, #2]
 8021912:	fb00 f001 	mul.w	r0, r0, r1
 8021916:	fb03 010c 	mla	r1, r3, ip, r0
 802191a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802191c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802191e:	7880      	ldrb	r0, [r0, #2]
 8021920:	789b      	ldrb	r3, [r3, #2]
 8021922:	fb02 1100 	mla	r1, r2, r0, r1
 8021926:	78a2      	ldrb	r2, [r4, #2]
 8021928:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802192a:	fb06 1303 	mla	r3, r6, r3, r1
 802192e:	fb12 f200 	smulbb	r2, r2, r0
 8021932:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8021934:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021938:	fb03 2300 	mla	r3, r3, r0, r2
 802193c:	b29b      	uxth	r3, r3
 802193e:	1c5a      	adds	r2, r3, #1
 8021940:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8021944:	121b      	asrs	r3, r3, #8
 8021946:	70a3      	strb	r3, [r4, #2]
 8021948:	e74f      	b.n	80217ea <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802194a:	f813 300a 	ldrb.w	r3, [r3, sl]
 802194e:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 8021952:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021956:	18f3      	adds	r3, r6, r3
 8021958:	9311      	str	r3, [sp, #68]	@ 0x44
 802195a:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802195e:	4661      	mov	r1, ip
 8021960:	e77c      	b.n	802185c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 8021962:	e9cd cc10 	strd	ip, ip, [sp, #64]	@ 0x40
 8021966:	e779      	b.n	802185c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 8021968:	f43f adc4 	beq.w	80214f4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802196c:	1e65      	subs	r5, r4, #1
 802196e:	e602      	b.n	8021576 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>

08021970 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh>:
 8021970:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021974:	b083      	sub	sp, #12
 8021976:	f9bd 8030 	ldrsh.w	r8, [sp, #48]	@ 0x30
 802197a:	f891 9001 	ldrb.w	r9, [r1, #1]
 802197e:	e9dd 670e 	ldrd	r6, r7, [sp, #56]	@ 0x38
 8021982:	7888      	ldrb	r0, [r1, #2]
 8021984:	fb07 6c08 	mla	ip, r7, r8, r6
 8021988:	ea4f 2909 	mov.w	r9, r9, lsl #8
 802198c:	780c      	ldrb	r4, [r1, #0]
 802198e:	ea49 4900 	orr.w	r9, r9, r0, lsl #16
 8021992:	ea49 0404 	orr.w	r4, r9, r4
 8021996:	2f00      	cmp	r7, #0
 8021998:	9401      	str	r4, [sp, #4]
 802199a:	eb02 090c 	add.w	r9, r2, ip
 802199e:	f107 0e01 	add.w	lr, r7, #1
 80219a2:	f9bd a034 	ldrsh.w	sl, [sp, #52]	@ 0x34
 80219a6:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 80219aa:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 80219ae:	db01      	blt.n	80219b4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x44>
 80219b0:	45ba      	cmp	sl, r7
 80219b2:	dc6e      	bgt.n	8021a92 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x122>
 80219b4:	fa5f fb84 	uxtb.w	fp, r4
 80219b8:	af01      	add	r7, sp, #4
 80219ba:	465a      	mov	r2, fp
 80219bc:	46bc      	mov	ip, r7
 80219be:	f1be 0f00 	cmp.w	lr, #0
 80219c2:	db01      	blt.n	80219c8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x58>
 80219c4:	45f2      	cmp	sl, lr
 80219c6:	dc49      	bgt.n	8021a5c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xec>
 80219c8:	fa5f fa84 	uxtb.w	sl, r4
 80219cc:	ab01      	add	r3, sp, #4
 80219ce:	46d1      	mov	r9, sl
 80219d0:	469e      	mov	lr, r3
 80219d2:	280f      	cmp	r0, #15
 80219d4:	f200 8098 	bhi.w	8021b08 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x198>
 80219d8:	2d0f      	cmp	r5, #15
 80219da:	f200 8095 	bhi.w	8021b08 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x198>
 80219de:	b280      	uxth	r0, r0
 80219e0:	b2ad      	uxth	r5, r5
 80219e2:	fb00 f805 	mul.w	r8, r0, r5
 80219e6:	0104      	lsls	r4, r0, #4
 80219e8:	eba4 0608 	sub.w	r6, r4, r8
 80219ec:	b2b6      	uxth	r6, r6
 80219ee:	fb06 f002 	mul.w	r0, r6, r2
 80219f2:	ebc8 1505 	rsb	r5, r8, r5, lsl #4
 80219f6:	b2ad      	uxth	r5, r5
 80219f8:	f5c4 7280 	rsb	r2, r4, #256	@ 0x100
 80219fc:	1b52      	subs	r2, r2, r5
 80219fe:	b292      	uxth	r2, r2
 8021a00:	fb02 000b 	mla	r0, r2, fp, r0
 8021a04:	fb05 000a 	mla	r0, r5, sl, r0
 8021a08:	fb08 0009 	mla	r0, r8, r9, r0
 8021a0c:	1200      	asrs	r0, r0, #8
 8021a0e:	7008      	strb	r0, [r1, #0]
 8021a10:	f897 9001 	ldrb.w	r9, [r7, #1]
 8021a14:	f89c 4001 	ldrb.w	r4, [ip, #1]
 8021a18:	fb06 f909 	mul.w	r9, r6, r9
 8021a1c:	fb02 9904 	mla	r9, r2, r4, r9
 8021a20:	f89e 4001 	ldrb.w	r4, [lr, #1]
 8021a24:	7858      	ldrb	r0, [r3, #1]
 8021a26:	fb05 9404 	mla	r4, r5, r4, r9
 8021a2a:	fb08 4000 	mla	r0, r8, r0, r4
 8021a2e:	1200      	asrs	r0, r0, #8
 8021a30:	7048      	strb	r0, [r1, #1]
 8021a32:	78bc      	ldrb	r4, [r7, #2]
 8021a34:	f89c 0002 	ldrb.w	r0, [ip, #2]
 8021a38:	fb06 f604 	mul.w	r6, r6, r4
 8021a3c:	fb02 6600 	mla	r6, r2, r0, r6
 8021a40:	f89e 0002 	ldrb.w	r0, [lr, #2]
 8021a44:	789b      	ldrb	r3, [r3, #2]
 8021a46:	fb05 6500 	mla	r5, r5, r0, r6
 8021a4a:	fb08 5803 	mla	r8, r8, r3, r5
 8021a4e:	ea4f 2828 	mov.w	r8, r8, asr #8
 8021a52:	f881 8002 	strb.w	r8, [r1, #2]
 8021a56:	b003      	add	sp, #12
 8021a58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021a5c:	b385      	cbz	r5, 8021ac0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x150>
 8021a5e:	2e00      	cmp	r6, #0
 8021a60:	db40      	blt.n	8021ae4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x174>
 8021a62:	45b0      	cmp	r8, r6
 8021a64:	dd3e      	ble.n	8021ae4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x174>
 8021a66:	f819 e008 	ldrb.w	lr, [r9, r8]
 8021a6a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8021a6e:	449e      	add	lr, r3
 8021a70:	3601      	adds	r6, #1
 8021a72:	f89e a000 	ldrb.w	sl, [lr]
 8021a76:	d431      	bmi.n	8021adc <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x16c>
 8021a78:	45b0      	cmp	r8, r6
 8021a7a:	dd2f      	ble.n	8021adc <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x16c>
 8021a7c:	2800      	cmp	r0, #0
 8021a7e:	d03f      	beq.n	8021b00 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x190>
 8021a80:	44c8      	add	r8, r9
 8021a82:	f898 4001 	ldrb.w	r4, [r8, #1]
 8021a86:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8021a8a:	f813 9004 	ldrb.w	r9, [r3, r4]
 8021a8e:	4423      	add	r3, r4
 8021a90:	e79f      	b.n	80219d2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x62>
 8021a92:	2e00      	cmp	r6, #0
 8021a94:	db01      	blt.n	8021a9a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12a>
 8021a96:	45b0      	cmp	r8, r6
 8021a98:	dc1a      	bgt.n	8021ad0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x160>
 8021a9a:	f10d 0c04 	add.w	ip, sp, #4
 8021a9e:	1c72      	adds	r2, r6, #1
 8021aa0:	f89c b000 	ldrb.w	fp, [ip]
 8021aa4:	d409      	bmi.n	8021aba <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x14a>
 8021aa6:	4590      	cmp	r8, r2
 8021aa8:	dd07      	ble.n	8021aba <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x14a>
 8021aaa:	b1f0      	cbz	r0, 8021aea <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x17a>
 8021aac:	f899 7001 	ldrb.w	r7, [r9, #1]
 8021ab0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8021ab4:	5dda      	ldrb	r2, [r3, r7]
 8021ab6:	441f      	add	r7, r3
 8021ab8:	e781      	b.n	80219be <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x4e>
 8021aba:	b2e2      	uxtb	r2, r4
 8021abc:	af01      	add	r7, sp, #4
 8021abe:	e77e      	b.n	80219be <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x4e>
 8021ac0:	280f      	cmp	r0, #15
 8021ac2:	fa5f fa84 	uxtb.w	sl, r4
 8021ac6:	d81f      	bhi.n	8021b08 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x198>
 8021ac8:	ab01      	add	r3, sp, #4
 8021aca:	469e      	mov	lr, r3
 8021acc:	46d1      	mov	r9, sl
 8021ace:	e786      	b.n	80219de <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x6e>
 8021ad0:	f812 c00c 	ldrb.w	ip, [r2, ip]
 8021ad4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8021ad8:	449c      	add	ip, r3
 8021ada:	e7e0      	b.n	8021a9e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12e>
 8021adc:	fa5f f984 	uxtb.w	r9, r4
 8021ae0:	ab01      	add	r3, sp, #4
 8021ae2:	e776      	b.n	80219d2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x62>
 8021ae4:	f10d 0e04 	add.w	lr, sp, #4
 8021ae8:	e7c2      	b.n	8021a70 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x100>
 8021aea:	f1be 0f00 	cmp.w	lr, #0
 8021aee:	b2e2      	uxtb	r2, r4
 8021af0:	af01      	add	r7, sp, #4
 8021af2:	f6bf af67 	bge.w	80219c4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x54>
 8021af6:	463b      	mov	r3, r7
 8021af8:	46be      	mov	lr, r7
 8021afa:	4691      	mov	r9, r2
 8021afc:	4692      	mov	sl, r2
 8021afe:	e76b      	b.n	80219d8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x68>
 8021b00:	fa5f f984 	uxtb.w	r9, r4
 8021b04:	ab01      	add	r3, sp, #4
 8021b06:	e767      	b.n	80219d8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x68>
 8021b08:	4b03      	ldr	r3, [pc, #12]	@ (8021b18 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x1a8>)
 8021b0a:	4a04      	ldr	r2, [pc, #16]	@ (8021b1c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x1ac>)
 8021b0c:	f44f 7170 	mov.w	r1, #960	@ 0x3c0
 8021b10:	4803      	ldr	r0, [pc, #12]	@ (8021b20 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x1b0>)
 8021b12:	f003 f90f 	bl	8024d34 <__assert_func>
 8021b16:	bf00      	nop
 8021b18:	08027d5c 	.word	0x08027d5c
 8021b1c:	080283d8 	.word	0x080283d8
 8021b20:	08027ee4 	.word	0x08027ee4

08021b24 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021b24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021b28:	ed2d 8b0a 	vpush	{d8-d12}
 8021b2c:	eeb0 aa40 	vmov.f32	s20, s0
 8021b30:	eef0 9a60 	vmov.f32	s19, s1
 8021b34:	eeb0 9a41 	vmov.f32	s18, s2
 8021b38:	eef0 8a62 	vmov.f32	s17, s5
 8021b3c:	eeb0 8a43 	vmov.f32	s16, s6
 8021b40:	eeb0 ca44 	vmov.f32	s24, s8
 8021b44:	eef0 ba64 	vmov.f32	s23, s9
 8021b48:	eeb0 ba45 	vmov.f32	s22, s10
 8021b4c:	eef7 aa00 	vmov.f32	s21, #112	@ 0x3f800000  1.0
 8021b50:	b093      	sub	sp, #76	@ 0x4c
 8021b52:	e9cd 120a 	strd	r1, r2, [sp, #40]	@ 0x28
 8021b56:	e9dd 412b 	ldrd	r4, r1, [sp, #172]	@ 0xac
 8021b5a:	e9dd 9b27 	ldrd	r9, fp, [sp, #156]	@ 0x9c
 8021b5e:	9011      	str	r0, [sp, #68]	@ 0x44
 8021b60:	461a      	mov	r2, r3
 8021b62:	6860      	ldr	r0, [r4, #4]
 8021b64:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 8021b66:	fb00 1803 	mla	r8, r0, r3, r1
 8021b6a:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8021b6c:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 8021b6e:	6821      	ldr	r1, [r4, #0]
 8021b70:	685b      	ldr	r3, [r3, #4]
 8021b72:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8021b76:	6800      	ldr	r0, [r0, #0]
 8021b78:	eb01 0a08 	add.w	sl, r1, r8
 8021b7c:	3304      	adds	r3, #4
 8021b7e:	f8dd 80a4 	ldr.w	r8, [sp, #164]	@ 0xa4
 8021b82:	9009      	str	r0, [sp, #36]	@ 0x24
 8021b84:	9307      	str	r3, [sp, #28]
 8021b86:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8021b88:	2b00      	cmp	r3, #0
 8021b8a:	dc02      	bgt.n	8021b92 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021b8c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8021b8e:	2b00      	cmp	r3, #0
 8021b90:	dd61      	ble.n	8021c56 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8021b92:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8021b94:	2a00      	cmp	r2, #0
 8021b96:	e9d3 6e02 	ldrd	r6, lr, [r3, #8]
 8021b9a:	b230      	sxth	r0, r6
 8021b9c:	fa0f f78e 	sxth.w	r7, lr
 8021ba0:	f340 81fe 	ble.w	8021fa0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47c>
 8021ba4:	f8cd e018 	str.w	lr, [sp, #24]
 8021ba8:	f8dd e0a8 	ldr.w	lr, [sp, #168]	@ 0xa8
 8021bac:	1e45      	subs	r5, r0, #1
 8021bae:	f107 3cff 	add.w	ip, r7, #4294967295
 8021bb2:	ea5f 4329 	movs.w	r3, r9, asr #16
 8021bb6:	ea4f 412b 	mov.w	r1, fp, asr #16
 8021bba:	d405      	bmi.n	8021bc8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8021bbc:	42ab      	cmp	r3, r5
 8021bbe:	da03      	bge.n	8021bc8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8021bc0:	2900      	cmp	r1, #0
 8021bc2:	db01      	blt.n	8021bc8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8021bc4:	4561      	cmp	r1, ip
 8021bc6:	db4b      	blt.n	8021c60 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 8021bc8:	1c5c      	adds	r4, r3, #1
 8021bca:	d406      	bmi.n	8021bda <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8021bcc:	4284      	cmp	r4, r0
 8021bce:	dc04      	bgt.n	8021bda <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8021bd0:	1c4c      	adds	r4, r1, #1
 8021bd2:	d402      	bmi.n	8021bda <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8021bd4:	42bc      	cmp	r4, r7
 8021bd6:	f340 815e 	ble.w	8021e96 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8021bda:	3a01      	subs	r2, #1
 8021bdc:	44c1      	add	r9, r8
 8021bde:	44f3      	add	fp, lr
 8021be0:	f10a 0a03 	add.w	sl, sl, #3
 8021be4:	d1e5      	bne.n	8021bb2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021be6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8021be8:	2b00      	cmp	r3, #0
 8021bea:	dd34      	ble.n	8021c56 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8021bec:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8021bf0:	ee79 9aab 	vadd.f32	s19, s19, s23
 8021bf4:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8021bf8:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8021bfc:	ee29 6aa7 	vmul.f32	s12, s19, s15
 8021c00:	ee69 7a27 	vmul.f32	s15, s18, s15
 8021c04:	ee76 6a68 	vsub.f32	s13, s12, s17
 8021c08:	ee37 7ac8 	vsub.f32	s14, s15, s16
 8021c0c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021c10:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021c14:	ee16 2a90 	vmov	r2, s13
 8021c18:	3b01      	subs	r3, #1
 8021c1a:	930a      	str	r3, [sp, #40]	@ 0x28
 8021c1c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8021c1e:	fb92 f8f3 	sdiv	r8, r2, r3
 8021c22:	ee17 2a10 	vmov	r2, s14
 8021c26:	eeb0 7a48 	vmov.f32	s14, s16
 8021c2a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021c2e:	ee17 ba10 	vmov	fp, s14
 8021c32:	eeb0 7a68 	vmov.f32	s14, s17
 8021c36:	fb92 f3f3 	sdiv	r3, r2, r3
 8021c3a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021c3e:	932a      	str	r3, [sp, #168]	@ 0xa8
 8021c40:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8021c42:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8021c44:	ee17 9a10 	vmov	r9, s14
 8021c48:	eeb0 8a67 	vmov.f32	s16, s15
 8021c4c:	eef0 8a46 	vmov.f32	s17, s12
 8021c50:	bf18      	it	ne
 8021c52:	461a      	movne	r2, r3
 8021c54:	e797      	b.n	8021b86 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8021c56:	b013      	add	sp, #76	@ 0x4c
 8021c58:	ecbd 8b0a 	vpop	{d8-d12}
 8021c5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021c60:	f8dd e018 	ldr.w	lr, [sp, #24]
 8021c64:	1e51      	subs	r1, r2, #1
 8021c66:	fb08 9301 	mla	r3, r8, r1, r9
 8021c6a:	141b      	asrs	r3, r3, #16
 8021c6c:	9106      	str	r1, [sp, #24]
 8021c6e:	f100 80aa 	bmi.w	8021dc6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8021c72:	42ab      	cmp	r3, r5
 8021c74:	f280 80a7 	bge.w	8021dc6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8021c78:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8021c7a:	fb03 b301 	mla	r3, r3, r1, fp
 8021c7e:	141b      	asrs	r3, r3, #16
 8021c80:	f100 80a1 	bmi.w	8021dc6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8021c84:	3f01      	subs	r7, #1
 8021c86:	42bb      	cmp	r3, r7
 8021c88:	f280 809d 	bge.w	8021dc6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8021c8c:	2a00      	cmp	r2, #0
 8021c8e:	ddaa      	ble.n	8021be6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 8021c90:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021c94:	eb0a 0302 	add.w	r3, sl, r2
 8021c98:	9308      	str	r3, [sp, #32]
 8021c9a:	f10a 0a03 	add.w	sl, sl, #3
 8021c9e:	f8cd 80a4 	str.w	r8, [sp, #164]	@ 0xa4
 8021ca2:	e062      	b.n	8021d6a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8021ca4:	784c      	ldrb	r4, [r1, #1]
 8021ca6:	180d      	adds	r5, r1, r0
 8021ca8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8021cac:	4434      	add	r4, r6
 8021cae:	2a00      	cmp	r2, #0
 8021cb0:	d07c      	beq.n	8021dac <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8021cb2:	5c08      	ldrb	r0, [r1, r0]
 8021cb4:	786f      	ldrb	r7, [r5, #1]
 8021cb6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021cba:	1981      	adds	r1, r0, r6
 8021cbc:	4608      	mov	r0, r1
 8021cbe:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8021cc2:	9106      	str	r1, [sp, #24]
 8021cc4:	4437      	add	r7, r6
 8021cc6:	b29b      	uxth	r3, r3
 8021cc8:	b292      	uxth	r2, r2
 8021cca:	fb03 f502 	mul.w	r5, r3, r2
 8021cce:	011b      	lsls	r3, r3, #4
 8021cd0:	f894 e000 	ldrb.w	lr, [r4]
 8021cd4:	1b59      	subs	r1, r3, r5
 8021cd6:	b289      	uxth	r1, r1
 8021cd8:	fb01 fe0e 	mul.w	lr, r1, lr
 8021cdc:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 8021ce0:	b292      	uxth	r2, r2
 8021ce2:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 8021ce6:	f816 6008 	ldrb.w	r6, [r6, r8]
 8021cea:	1a9b      	subs	r3, r3, r2
 8021cec:	b29b      	uxth	r3, r3
 8021cee:	fb03 e606 	mla	r6, r3, r6, lr
 8021cf2:	f890 e000 	ldrb.w	lr, [r0]
 8021cf6:	f897 8000 	ldrb.w	r8, [r7]
 8021cfa:	fb02 660e 	mla	r6, r2, lr, r6
 8021cfe:	fb05 6808 	mla	r8, r5, r8, r6
 8021d02:	ea4f 2828 	mov.w	r8, r8, asr #8
 8021d06:	f80a 8c03 	strb.w	r8, [sl, #-3]
 8021d0a:	f894 8001 	ldrb.w	r8, [r4, #1]
 8021d0e:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 8021d10:	fb01 f608 	mul.w	r6, r1, r8
 8021d14:	f89c e001 	ldrb.w	lr, [ip, #1]
 8021d18:	4481      	add	r9, r0
 8021d1a:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 8021d1c:	fb03 680e 	mla	r8, r3, lr, r6
 8021d20:	4483      	add	fp, r0
 8021d22:	9806      	ldr	r0, [sp, #24]
 8021d24:	787e      	ldrb	r6, [r7, #1]
 8021d26:	f890 e001 	ldrb.w	lr, [r0, #1]
 8021d2a:	fb02 8e0e 	mla	lr, r2, lr, r8
 8021d2e:	fb05 ee06 	mla	lr, r5, r6, lr
 8021d32:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8021d36:	f80a ec02 	strb.w	lr, [sl, #-2]
 8021d3a:	78a4      	ldrb	r4, [r4, #2]
 8021d3c:	f89c 6002 	ldrb.w	r6, [ip, #2]
 8021d40:	fb01 f104 	mul.w	r1, r1, r4
 8021d44:	fb03 1106 	mla	r1, r3, r6, r1
 8021d48:	7883      	ldrb	r3, [r0, #2]
 8021d4a:	78b8      	ldrb	r0, [r7, #2]
 8021d4c:	fb02 1103 	mla	r1, r2, r3, r1
 8021d50:	fb05 1500 	mla	r5, r5, r0, r1
 8021d54:	9b08      	ldr	r3, [sp, #32]
 8021d56:	122d      	asrs	r5, r5, #8
 8021d58:	4553      	cmp	r3, sl
 8021d5a:	f80a 5c01 	strb.w	r5, [sl, #-1]
 8021d5e:	d030      	beq.n	8021dc2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
 8021d60:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8021d62:	f10a 0a03 	add.w	sl, sl, #3
 8021d66:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8021d6a:	ea4f 4329 	mov.w	r3, r9, asr #16
 8021d6e:	ea4f 412b 	mov.w	r1, fp, asr #16
 8021d72:	fb00 3101 	mla	r1, r0, r1, r3
 8021d76:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8021d78:	9e07      	ldr	r6, [sp, #28]
 8021d7a:	f812 8001 	ldrb.w	r8, [r2, r1]
 8021d7e:	f3c9 3303 	ubfx	r3, r9, #12, #4
 8021d82:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8021d86:	4411      	add	r1, r2
 8021d88:	eb06 0c08 	add.w	ip, r6, r8
 8021d8c:	f3cb 3203 	ubfx	r2, fp, #12, #4
 8021d90:	2b00      	cmp	r3, #0
 8021d92:	d187      	bne.n	8021ca4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x180>
 8021d94:	b17a      	cbz	r2, 8021db6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8021d96:	5c08      	ldrb	r0, [r1, r0]
 8021d98:	9907      	ldr	r1, [sp, #28]
 8021d9a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021d9e:	1841      	adds	r1, r0, r1
 8021da0:	4667      	mov	r7, ip
 8021da2:	9106      	str	r1, [sp, #24]
 8021da4:	4664      	mov	r4, ip
 8021da6:	9e07      	ldr	r6, [sp, #28]
 8021da8:	4608      	mov	r0, r1
 8021daa:	e78c      	b.n	8021cc6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8021dac:	4667      	mov	r7, ip
 8021dae:	f8cd c018 	str.w	ip, [sp, #24]
 8021db2:	4660      	mov	r0, ip
 8021db4:	e787      	b.n	8021cc6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8021db6:	4667      	mov	r7, ip
 8021db8:	f8cd c018 	str.w	ip, [sp, #24]
 8021dbc:	4664      	mov	r4, ip
 8021dbe:	4660      	mov	r0, ip
 8021dc0:	e781      	b.n	8021cc6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8021dc2:	469a      	mov	sl, r3
 8021dc4:	e70f      	b.n	8021be6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 8021dc6:	2a00      	cmp	r2, #0
 8021dc8:	f77f af0d 	ble.w	8021be6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 8021dcc:	9d06      	ldr	r5, [sp, #24]
 8021dce:	ea4f 4329 	mov.w	r3, r9, asr #16
 8021dd2:	ea4f 412b 	mov.w	r1, fp, asr #16
 8021dd6:	4657      	mov	r7, sl
 8021dd8:	f8cd a03c 	str.w	sl, [sp, #60]	@ 0x3c
 8021ddc:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
 8021dde:	f8dd a0a8 	ldr.w	sl, [sp, #168]	@ 0xa8
 8021de2:	2b00      	cmp	r3, #0
 8021de4:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8021de8:	f3cb 3203 	ubfx	r2, fp, #12, #4
 8021dec:	db31      	blt.n	8021e52 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8021dee:	f106 3cff 	add.w	ip, r6, #4294967295
 8021df2:	4563      	cmp	r3, ip
 8021df4:	da2d      	bge.n	8021e52 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8021df6:	2900      	cmp	r1, #0
 8021df8:	db2b      	blt.n	8021e52 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8021dfa:	f10e 3cff 	add.w	ip, lr, #4294967295
 8021dfe:	4561      	cmp	r1, ip
 8021e00:	da27      	bge.n	8021e52 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8021e02:	fa0f fc86 	sxth.w	ip, r6
 8021e06:	fb01 330c 	mla	r3, r1, ip, r3
 8021e0a:	9e07      	ldr	r6, [sp, #28]
 8021e0c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8021e0e:	f811 e003 	ldrb.w	lr, [r1, r3]
 8021e12:	440b      	add	r3, r1
 8021e14:	4631      	mov	r1, r6
 8021e16:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8021e1a:	4471      	add	r1, lr
 8021e1c:	910e      	str	r1, [sp, #56]	@ 0x38
 8021e1e:	2800      	cmp	r0, #0
 8021e20:	d04f      	beq.n	8021ec2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8021e22:	7859      	ldrb	r1, [r3, #1]
 8021e24:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8021e28:	1871      	adds	r1, r6, r1
 8021e2a:	9108      	str	r1, [sp, #32]
 8021e2c:	2a00      	cmp	r2, #0
 8021e2e:	f000 80b2 	beq.w	8021f96 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8021e32:	eb03 010c 	add.w	r1, r3, ip
 8021e36:	f813 600c 	ldrb.w	r6, [r3, ip]
 8021e3a:	7849      	ldrb	r1, [r1, #1]
 8021e3c:	9b07      	ldr	r3, [sp, #28]
 8021e3e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8021e42:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8021e46:	1859      	adds	r1, r3, r1
 8021e48:	18f3      	adds	r3, r6, r3
 8021e4a:	910c      	str	r1, [sp, #48]	@ 0x30
 8021e4c:	930d      	str	r3, [sp, #52]	@ 0x34
 8021e4e:	9e08      	ldr	r6, [sp, #32]
 8021e50:	e03d      	b.n	8021ece <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8021e52:	f113 0c01 	adds.w	ip, r3, #1
 8021e56:	d406      	bmi.n	8021e66 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8021e58:	45b4      	cmp	ip, r6
 8021e5a:	dc04      	bgt.n	8021e66 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8021e5c:	f111 0c01 	adds.w	ip, r1, #1
 8021e60:	d401      	bmi.n	8021e66 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8021e62:	45f4      	cmp	ip, lr
 8021e64:	dd1d      	ble.n	8021ea2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8021e66:	2d00      	cmp	r5, #0
 8021e68:	f107 0703 	add.w	r7, r7, #3
 8021e6c:	44c1      	add	r9, r8
 8021e6e:	44d3      	add	fp, sl
 8021e70:	dd07      	ble.n	8021e82 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8021e72:	e9d4 6e02 	ldrd	r6, lr, [r4, #8]
 8021e76:	3d01      	subs	r5, #1
 8021e78:	ea4f 4329 	mov.w	r3, r9, asr #16
 8021e7c:	ea4f 412b 	mov.w	r1, fp, asr #16
 8021e80:	e7af      	b.n	8021de2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8021e82:	9b06      	ldr	r3, [sp, #24]
 8021e84:	f8dd a03c 	ldr.w	sl, [sp, #60]	@ 0x3c
 8021e88:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8021e8c:	3301      	adds	r3, #1
 8021e8e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021e92:	449a      	add	sl, r3
 8021e94:	e6a7      	b.n	8021be6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 8021e96:	3a01      	subs	r2, #1
 8021e98:	f8dd e018 	ldr.w	lr, [sp, #24]
 8021e9c:	4615      	mov	r5, r2
 8021e9e:	9206      	str	r2, [sp, #24]
 8021ea0:	e799      	b.n	8021dd6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8021ea2:	fa0f fe8e 	sxth.w	lr, lr
 8021ea6:	b236      	sxth	r6, r6
 8021ea8:	e9cd 0204 	strd	r0, r2, [sp, #16]
 8021eac:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8021eb0:	e9cd 6e00 	strd	r6, lr, [sp]
 8021eb4:	9b07      	ldr	r3, [sp, #28]
 8021eb6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8021eb8:	4639      	mov	r1, r7
 8021eba:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8021ebc:	f7ff fd58 	bl	8021970 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh>
 8021ec0:	e7d1      	b.n	8021e66 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8021ec2:	2a00      	cmp	r2, #0
 8021ec4:	d15b      	bne.n	8021f7e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x45a>
 8021ec6:	460e      	mov	r6, r1
 8021ec8:	e9cd 110c 	strd	r1, r1, [sp, #48]	@ 0x30
 8021ecc:	9108      	str	r1, [sp, #32]
 8021ece:	b283      	uxth	r3, r0
 8021ed0:	b292      	uxth	r2, r2
 8021ed2:	fb03 f002 	mul.w	r0, r3, r2
 8021ed6:	011b      	lsls	r3, r3, #4
 8021ed8:	f896 c000 	ldrb.w	ip, [r6]
 8021edc:	1a19      	subs	r1, r3, r0
 8021ede:	b289      	uxth	r1, r1
 8021ee0:	fb01 fc0c 	mul.w	ip, r1, ip
 8021ee4:	9e07      	ldr	r6, [sp, #28]
 8021ee6:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 8021eea:	b292      	uxth	r2, r2
 8021eec:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 8021ef0:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8021ef4:	1a9b      	subs	r3, r3, r2
 8021ef6:	b29b      	uxth	r3, r3
 8021ef8:	fb03 cc0e 	mla	ip, r3, lr, ip
 8021efc:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 8021efe:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 8021f02:	f896 e000 	ldrb.w	lr, [r6]
 8021f06:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8021f08:	f896 c000 	ldrb.w	ip, [r6]
 8021f0c:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 8021f0e:	fb02 6e0e 	mla	lr, r2, lr, r6
 8021f12:	fb00 ec0c 	mla	ip, r0, ip, lr
 8021f16:	9e08      	ldr	r6, [sp, #32]
 8021f18:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 8021f1c:	f887 c000 	strb.w	ip, [r7]
 8021f20:	f896 c001 	ldrb.w	ip, [r6, #1]
 8021f24:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8021f26:	fb01 fc0c 	mul.w	ip, r1, ip
 8021f2a:	f896 e001 	ldrb.w	lr, [r6, #1]
 8021f2e:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 8021f30:	fb03 ce0e 	mla	lr, r3, lr, ip
 8021f34:	f896 c001 	ldrb.w	ip, [r6, #1]
 8021f38:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8021f3a:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 8021f3e:	f896 c001 	ldrb.w	ip, [r6, #1]
 8021f42:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 8021f44:	fb02 ee06 	mla	lr, r2, r6, lr
 8021f48:	fb00 ec0c 	mla	ip, r0, ip, lr
 8021f4c:	9e08      	ldr	r6, [sp, #32]
 8021f4e:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 8021f52:	f887 c001 	strb.w	ip, [r7, #1]
 8021f56:	f896 c002 	ldrb.w	ip, [r6, #2]
 8021f5a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8021f5c:	fb01 f10c 	mul.w	r1, r1, ip
 8021f60:	f896 e002 	ldrb.w	lr, [r6, #2]
 8021f64:	fb03 110e 	mla	r1, r3, lr, r1
 8021f68:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8021f6a:	789e      	ldrb	r6, [r3, #2]
 8021f6c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8021f6e:	fb02 1206 	mla	r2, r2, r6, r1
 8021f72:	789b      	ldrb	r3, [r3, #2]
 8021f74:	fb00 2303 	mla	r3, r0, r3, r2
 8021f78:	121b      	asrs	r3, r3, #8
 8021f7a:	70bb      	strb	r3, [r7, #2]
 8021f7c:	e773      	b.n	8021e66 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8021f7e:	4631      	mov	r1, r6
 8021f80:	f813 600c 	ldrb.w	r6, [r3, ip]
 8021f84:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8021f86:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8021f8a:	1871      	adds	r1, r6, r1
 8021f8c:	930c      	str	r3, [sp, #48]	@ 0x30
 8021f8e:	910d      	str	r1, [sp, #52]	@ 0x34
 8021f90:	9308      	str	r3, [sp, #32]
 8021f92:	461e      	mov	r6, r3
 8021f94:	e79b      	b.n	8021ece <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8021f96:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8021f98:	e9cd 660c 	strd	r6, r6, [sp, #48]	@ 0x30
 8021f9c:	460e      	mov	r6, r1
 8021f9e:	e796      	b.n	8021ece <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8021fa0:	f43f ae21 	beq.w	8021be6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 8021fa4:	1e45      	subs	r5, r0, #1
 8021fa6:	e65d      	b.n	8021c64 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>

08021fa8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh>:
 8021fa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021fac:	b087      	sub	sp, #28
 8021fae:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 8021fb2:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 8021fb6:	fb06 080c 	mla	r8, r6, ip, r0
 8021fba:	2e00      	cmp	r6, #0
 8021fbc:	4696      	mov	lr, r2
 8021fbe:	eb02 0a08 	add.w	sl, r2, r8
 8021fc2:	f106 0b01 	add.w	fp, r6, #1
 8021fc6:	f9bd 2044 	ldrsh.w	r2, [sp, #68]	@ 0x44
 8021fca:	f89d 7050 	ldrb.w	r7, [sp, #80]	@ 0x50
 8021fce:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 8021fd2:	f89d 4058 	ldrb.w	r4, [sp, #88]	@ 0x58
 8021fd6:	db02      	blt.n	8021fde <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x36>
 8021fd8:	42b2      	cmp	r2, r6
 8021fda:	f300 80f1 	bgt.w	80221c0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x218>
 8021fde:	2600      	movs	r6, #0
 8021fe0:	46b1      	mov	r9, r6
 8021fe2:	46b0      	mov	r8, r6
 8021fe4:	46b6      	mov	lr, r6
 8021fe6:	f1bb 0f00 	cmp.w	fp, #0
 8021fea:	db02      	blt.n	8021ff2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x4a>
 8021fec:	455a      	cmp	r2, fp
 8021fee:	f300 8101 	bgt.w	80221f4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x24c>
 8021ff2:	f04f 0c00 	mov.w	ip, #0
 8021ff6:	e9cd cc02 	strd	ip, ip, [sp, #8]
 8021ffa:	f8cd c004 	str.w	ip, [sp, #4]
 8021ffe:	2f0f      	cmp	r7, #15
 8022000:	f200 813a 	bhi.w	8022278 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2d0>
 8022004:	2d0f      	cmp	r5, #15
 8022006:	f200 8137 	bhi.w	8022278 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2d0>
 802200a:	b2a8      	uxth	r0, r5
 802200c:	b2bb      	uxth	r3, r7
 802200e:	fb00 f503 	mul.w	r5, r0, r3
 8022012:	9a01      	ldr	r2, [sp, #4]
 8022014:	ebc5 1000 	rsb	r0, r5, r0, lsl #4
 8022018:	b280      	uxth	r0, r0
 802201a:	fb00 fa02 	mul.w	sl, r0, r2
 802201e:	fb05 fb0c 	mul.w	fp, r5, ip
 8022022:	011b      	lsls	r3, r3, #4
 8022024:	1b5f      	subs	r7, r3, r5
 8022026:	b2bf      	uxth	r7, r7
 8022028:	fb07 f206 	mul.w	r2, r7, r6
 802202c:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 8022030:	1a1b      	subs	r3, r3, r0
 8022032:	b29b      	uxth	r3, r3
 8022034:	fb03 2209 	mla	r2, r3, r9, r2
 8022038:	4452      	add	r2, sl
 802203a:	445a      	add	r2, fp
 802203c:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8022040:	2a00      	cmp	r2, #0
 8022042:	f000 80ba 	beq.w	80221ba <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x212>
 8022046:	b2a4      	uxth	r4, r4
 8022048:	fb02 f204 	mul.w	r2, r2, r4
 802204c:	f102 0a01 	add.w	sl, r2, #1
 8022050:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8022054:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 8022058:	9205      	str	r2, [sp, #20]
 802205a:	f008 12ff 	and.w	r2, r8, #16711935	@ 0xff00ff
 802205e:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8022062:	fb06 f202 	mul.w	r2, r6, r2
 8022066:	fb06 f608 	mul.w	r6, r6, r8
 802206a:	f00e 1bff 	and.w	fp, lr, #16711935	@ 0xff00ff
 802206e:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 8022072:	fb09 fb0b 	mul.w	fp, r9, fp
 8022076:	fb09 fe0e 	mul.w	lr, r9, lr
 802207a:	f506 7980 	add.w	r9, r6, #256	@ 0x100
 802207e:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8022082:	0a36      	lsrs	r6, r6, #8
 8022084:	ea4f 2812 	mov.w	r8, r2, lsr #8
 8022088:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802208c:	fb07 f606 	mul.w	r6, r7, r6
 8022090:	9404      	str	r4, [sp, #16]
 8022092:	f102 1201 	add.w	r2, r2, #65537	@ 0x10001
 8022096:	9c03      	ldr	r4, [sp, #12]
 8022098:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802209c:	4490      	add	r8, r2
 802209e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80220a2:	f004 12ff 	and.w	r2, r4, #16711935	@ 0xff00ff
 80220a6:	fb0c f202 	mul.w	r2, ip, r2
 80220aa:	f404 497f 	and.w	r9, r4, #65280	@ 0xff00
 80220ae:	ea4f 2a1b 	mov.w	sl, fp, lsr #8
 80220b2:	9c02      	ldr	r4, [sp, #8]
 80220b4:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 80220b8:	fb0c fc09 	mul.w	ip, ip, r9
 80220bc:	fb08 f807 	mul.w	r8, r8, r7
 80220c0:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 80220c4:	9603      	str	r6, [sp, #12]
 80220c6:	f50e 7980 	add.w	r9, lr, #256	@ 0x100
 80220ca:	9e01      	ldr	r6, [sp, #4]
 80220cc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80220d0:	44d3      	add	fp, sl
 80220d2:	eb09 2e1e 	add.w	lr, r9, lr, lsr #8
 80220d6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80220da:	f404 497f 	and.w	r9, r4, #65280	@ 0xff00
 80220de:	fb06 f707 	mul.w	r7, r6, r7
 80220e2:	fb06 f909 	mul.w	r9, r6, r9
 80220e6:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 80220ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80220ee:	9e03      	ldr	r6, [sp, #12]
 80220f0:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 80220f4:	ea4f 2a12 	mov.w	sl, r2, lsr #8
 80220f8:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 80220fc:	fb0b 8803 	mla	r8, fp, r3, r8
 8022100:	fb03 660e 	mla	r6, r3, lr, r6
 8022104:	f102 1201 	add.w	r2, r2, #65537	@ 0x10001
 8022108:	f50c 7e80 	add.w	lr, ip, #256	@ 0x100
 802210c:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 8022110:	4492      	add	sl, r2
 8022112:	eb0e 2c1c 	add.w	ip, lr, ip, lsr #8
 8022116:	ea4f 2b1a 	mov.w	fp, sl, lsr #8
 802211a:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 802211e:	0a3a      	lsrs	r2, r7, #8
 8022120:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8022124:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 8022128:	fb0b 8b05 	mla	fp, fp, r5, r8
 802212c:	fb05 660e 	mla	r6, r5, lr, r6
 8022130:	f002 18ff 	and.w	r8, r2, #16711935	@ 0xff00ff
 8022134:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8022138:	f509 7580 	add.w	r5, r9, #256	@ 0x100
 802213c:	44b8      	add	r8, r7
 802213e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8022142:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8022146:	0a2d      	lsrs	r5, r5, #8
 8022148:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802214c:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8022150:	fb00 6505 	mla	r5, r0, r5, r6
 8022154:	fb08 b800 	mla	r8, r8, r0, fp
 8022158:	0a2d      	lsrs	r5, r5, #8
 802215a:	ea4f 2018 	mov.w	r0, r8, lsr #8
 802215e:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8022162:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8022166:	4328      	orrs	r0, r5
 8022168:	784b      	ldrb	r3, [r1, #1]
 802216a:	f89d 2014 	ldrb.w	r2, [sp, #20]
 802216e:	9c04      	ldr	r4, [sp, #16]
 8022170:	788d      	ldrb	r5, [r1, #2]
 8022172:	fa5f fa80 	uxtb.w	sl, r0
 8022176:	fb13 f602 	smulbb	r6, r3, r2
 802217a:	fb15 f502 	smulbb	r5, r5, r2
 802217e:	fb1a fa04 	smulbb	sl, sl, r4
 8022182:	780f      	ldrb	r7, [r1, #0]
 8022184:	f3c0 2c07 	ubfx	ip, r0, #8, #8
 8022188:	0c00      	lsrs	r0, r0, #16
 802218a:	fb0c 6304 	mla	r3, ip, r4, r6
 802218e:	fb07 a202 	mla	r2, r7, r2, sl
 8022192:	fb00 5404 	mla	r4, r0, r4, r5
 8022196:	b29b      	uxth	r3, r3
 8022198:	b292      	uxth	r2, r2
 802219a:	b2a4      	uxth	r4, r4
 802219c:	1c56      	adds	r6, r2, #1
 802219e:	1c5d      	adds	r5, r3, #1
 80221a0:	1c60      	adds	r0, r4, #1
 80221a2:	eb06 2212 	add.w	r2, r6, r2, lsr #8
 80221a6:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 80221aa:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80221ae:	1212      	asrs	r2, r2, #8
 80221b0:	121b      	asrs	r3, r3, #8
 80221b2:	1224      	asrs	r4, r4, #8
 80221b4:	700a      	strb	r2, [r1, #0]
 80221b6:	704b      	strb	r3, [r1, #1]
 80221b8:	708c      	strb	r4, [r1, #2]
 80221ba:	b007      	add	sp, #28
 80221bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80221c0:	2800      	cmp	r0, #0
 80221c2:	db01      	blt.n	80221c8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x220>
 80221c4:	4584      	cmp	ip, r0
 80221c6:	dc3d      	bgt.n	8022244 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x29c>
 80221c8:	f04f 0900 	mov.w	r9, #0
 80221cc:	46ce      	mov	lr, r9
 80221ce:	1c46      	adds	r6, r0, #1
 80221d0:	d42a      	bmi.n	8022228 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x280>
 80221d2:	45b4      	cmp	ip, r6
 80221d4:	dd28      	ble.n	8022228 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x280>
 80221d6:	b137      	cbz	r7, 80221e6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x23e>
 80221d8:	f89a 6001 	ldrb.w	r6, [sl, #1]
 80221dc:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
 80221e0:	ea4f 6618 	mov.w	r6, r8, lsr #24
 80221e4:	e6ff      	b.n	8021fe6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x3e>
 80221e6:	f1bb 0f00 	cmp.w	fp, #0
 80221ea:	db3e      	blt.n	802226a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2c2>
 80221ec:	455a      	cmp	r2, fp
 80221ee:	dd3c      	ble.n	802226a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2c2>
 80221f0:	463e      	mov	r6, r7
 80221f2:	46b8      	mov	r8, r7
 80221f4:	b1dd      	cbz	r5, 802222e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x286>
 80221f6:	2800      	cmp	r0, #0
 80221f8:	db30      	blt.n	802225c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2b4>
 80221fa:	4584      	cmp	ip, r0
 80221fc:	dd2e      	ble.n	802225c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2b4>
 80221fe:	f81a 200c 	ldrb.w	r2, [sl, ip]
 8022202:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8022206:	9202      	str	r2, [sp, #8]
 8022208:	0e12      	lsrs	r2, r2, #24
 802220a:	9201      	str	r2, [sp, #4]
 802220c:	3001      	adds	r0, #1
 802220e:	d420      	bmi.n	8022252 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2aa>
 8022210:	4584      	cmp	ip, r0
 8022212:	dd1e      	ble.n	8022252 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2aa>
 8022214:	b337      	cbz	r7, 8022264 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2bc>
 8022216:	44d4      	add	ip, sl
 8022218:	f89c 2001 	ldrb.w	r2, [ip, #1]
 802221c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8022220:	9303      	str	r3, [sp, #12]
 8022222:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8022226:	e6ea      	b.n	8021ffe <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x56>
 8022228:	2600      	movs	r6, #0
 802222a:	46b0      	mov	r8, r6
 802222c:	e6db      	b.n	8021fe6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x3e>
 802222e:	2f0f      	cmp	r7, #15
 8022230:	d822      	bhi.n	8022278 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2d0>
 8022232:	b2bb      	uxth	r3, r7
 8022234:	4628      	mov	r0, r5
 8022236:	46ab      	mov	fp, r5
 8022238:	46aa      	mov	sl, r5
 802223a:	e9cd 5502 	strd	r5, r5, [sp, #8]
 802223e:	46ac      	mov	ip, r5
 8022240:	9501      	str	r5, [sp, #4]
 8022242:	e6ee      	b.n	8022022 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x7a>
 8022244:	f81e 6008 	ldrb.w	r6, [lr, r8]
 8022248:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
 802224c:	ea4f 691e 	mov.w	r9, lr, lsr #24
 8022250:	e7bd      	b.n	80221ce <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x226>
 8022252:	f04f 0c00 	mov.w	ip, #0
 8022256:	f8cd c00c 	str.w	ip, [sp, #12]
 802225a:	e6d0      	b.n	8021ffe <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x56>
 802225c:	2200      	movs	r2, #0
 802225e:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8022262:	e7d3      	b.n	802220c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x264>
 8022264:	9703      	str	r7, [sp, #12]
 8022266:	46bc      	mov	ip, r7
 8022268:	e6cc      	b.n	8022004 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x5c>
 802226a:	46b8      	mov	r8, r7
 802226c:	e9cd 7702 	strd	r7, r7, [sp, #8]
 8022270:	46bc      	mov	ip, r7
 8022272:	9701      	str	r7, [sp, #4]
 8022274:	463e      	mov	r6, r7
 8022276:	e6c5      	b.n	8022004 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x5c>
 8022278:	4b03      	ldr	r3, [pc, #12]	@ (8022288 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2e0>)
 802227a:	4a04      	ldr	r2, [pc, #16]	@ (802228c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2e4>)
 802227c:	f44f 7170 	mov.w	r1, #960	@ 0x3c0
 8022280:	4803      	ldr	r0, [pc, #12]	@ (8022290 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2e8>)
 8022282:	f002 fd57 	bl	8024d34 <__assert_func>
 8022286:	bf00      	nop
 8022288:	08027d5c 	.word	0x08027d5c
 802228c:	080283d8 	.word	0x080283d8
 8022290:	08027ee4 	.word	0x08027ee4

08022294 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022294:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022298:	ed2d 8b08 	vpush	{d8-d11}
 802229c:	b0a9      	sub	sp, #164	@ 0xa4
 802229e:	9c3f      	ldr	r4, [sp, #252]	@ 0xfc
 80222a0:	9022      	str	r0, [sp, #136]	@ 0x88
 80222a2:	9114      	str	r1, [sp, #80]	@ 0x50
 80222a4:	6860      	ldr	r0, [r4, #4]
 80222a6:	9940      	ldr	r1, [sp, #256]	@ 0x100
 80222a8:	9217      	str	r2, [sp, #92]	@ 0x5c
 80222aa:	9a41      	ldr	r2, [sp, #260]	@ 0x104
 80222ac:	eeb0 aa40 	vmov.f32	s20, s0
 80222b0:	fb00 1b02 	mla	fp, r0, r2, r1
 80222b4:	6821      	ldr	r1, [r4, #0]
 80222b6:	eb0b 004b 	add.w	r0, fp, fp, lsl #1
 80222ba:	eb01 0800 	add.w	r8, r1, r0
 80222be:	e9dd ab3b 	ldrd	sl, fp, [sp, #236]	@ 0xec
 80222c2:	eef0 9a60 	vmov.f32	s19, s1
 80222c6:	eeb0 9a41 	vmov.f32	s18, s2
 80222ca:	eef0 8a62 	vmov.f32	s17, s5
 80222ce:	eeb0 8a43 	vmov.f32	s16, s6
 80222d2:	eef0 ba44 	vmov.f32	s23, s8
 80222d6:	eeb0 ba64 	vmov.f32	s22, s9
 80222da:	eef0 aa45 	vmov.f32	s21, s10
 80222de:	46c1      	mov	r9, r8
 80222e0:	465f      	mov	r7, fp
 80222e2:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 80222e4:	9d42      	ldr	r5, [sp, #264]	@ 0x108
 80222e6:	6852      	ldr	r2, [r2, #4]
 80222e8:	f89d 410c 	ldrb.w	r4, [sp, #268]	@ 0x10c
 80222ec:	3204      	adds	r2, #4
 80222ee:	682d      	ldr	r5, [r5, #0]
 80222f0:	920a      	str	r2, [sp, #40]	@ 0x28
 80222f2:	b2a2      	uxth	r2, r4
 80222f4:	9423      	str	r4, [sp, #140]	@ 0x8c
 80222f6:	9511      	str	r5, [sp, #68]	@ 0x44
 80222f8:	9216      	str	r2, [sp, #88]	@ 0x58
 80222fa:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80222fc:	2a00      	cmp	r2, #0
 80222fe:	dc02      	bgt.n	8022306 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022300:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 8022302:	2a00      	cmp	r2, #0
 8022304:	dd65      	ble.n	80223d2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8022306:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 8022308:	2b00      	cmp	r3, #0
 802230a:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 802230e:	b235      	sxth	r5, r6
 8022310:	fa0f f88c 	sxth.w	r8, ip
 8022314:	f340 838b 	ble.w	8022a2e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x79a>
 8022318:	1e6c      	subs	r4, r5, #1
 802231a:	f108 3eff 	add.w	lr, r8, #4294967295
 802231e:	f8cd c024 	str.w	ip, [sp, #36]	@ 0x24
 8022322:	e9dd cb3d 	ldrd	ip, fp, [sp, #244]	@ 0xf4
 8022326:	ea5f 422a 	movs.w	r2, sl, asr #16
 802232a:	ea4f 4127 	mov.w	r1, r7, asr #16
 802232e:	d405      	bmi.n	802233c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8022330:	42a2      	cmp	r2, r4
 8022332:	da03      	bge.n	802233c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8022334:	2900      	cmp	r1, #0
 8022336:	db01      	blt.n	802233c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8022338:	4571      	cmp	r1, lr
 802233a:	db4f      	blt.n	80223dc <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 802233c:	1c50      	adds	r0, r2, #1
 802233e:	d406      	bmi.n	802234e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 8022340:	42a8      	cmp	r0, r5
 8022342:	dc04      	bgt.n	802234e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 8022344:	1c48      	adds	r0, r1, #1
 8022346:	d402      	bmi.n	802234e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 8022348:	4540      	cmp	r0, r8
 802234a:	f340 834c 	ble.w	80229e6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x752>
 802234e:	3b01      	subs	r3, #1
 8022350:	44e2      	add	sl, ip
 8022352:	445f      	add	r7, fp
 8022354:	f109 0903 	add.w	r9, r9, #3
 8022358:	d1e5      	bne.n	8022326 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802235a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 802235c:	2b00      	cmp	r3, #0
 802235e:	dd38      	ble.n	80223d2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8022360:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022364:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8022368:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802236c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8022370:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8022374:	ee29 6aa7 	vmul.f32	s12, s19, s15
 8022378:	ee69 7a27 	vmul.f32	s15, s18, s15
 802237c:	ee76 6a68 	vsub.f32	s13, s12, s17
 8022380:	ee37 7ac8 	vsub.f32	s14, s15, s16
 8022384:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022388:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802238c:	ee16 2a90 	vmov	r2, s13
 8022390:	3b01      	subs	r3, #1
 8022392:	9314      	str	r3, [sp, #80]	@ 0x50
 8022394:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 8022396:	fb92 f3f3 	sdiv	r3, r2, r3
 802239a:	ee17 2a10 	vmov	r2, s14
 802239e:	eeb0 7a48 	vmov.f32	s14, s16
 80223a2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80223a6:	ee17 7a10 	vmov	r7, s14
 80223aa:	eeb0 7a68 	vmov.f32	s14, s17
 80223ae:	933d      	str	r3, [sp, #244]	@ 0xf4
 80223b0:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 80223b2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80223b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80223ba:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 80223bc:	933e      	str	r3, [sp, #248]	@ 0xf8
 80223be:	ee17 aa10 	vmov	sl, s14
 80223c2:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 80223c4:	eeb0 8a67 	vmov.f32	s16, s15
 80223c8:	eef0 8a46 	vmov.f32	s17, s12
 80223cc:	bf08      	it	eq
 80223ce:	4613      	moveq	r3, r2
 80223d0:	e793      	b.n	80222fa <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80223d2:	b029      	add	sp, #164	@ 0xa4
 80223d4:	ecbd 8b08 	vpop	{d8-d11}
 80223d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80223dc:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 80223e0:	983d      	ldr	r0, [sp, #244]	@ 0xf4
 80223e2:	1e59      	subs	r1, r3, #1
 80223e4:	fb00 a201 	mla	r2, r0, r1, sl
 80223e8:	1412      	asrs	r2, r2, #16
 80223ea:	9109      	str	r1, [sp, #36]	@ 0x24
 80223ec:	f100 8168 	bmi.w	80226c0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42c>
 80223f0:	42a2      	cmp	r2, r4
 80223f2:	f280 8165 	bge.w	80226c0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42c>
 80223f6:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 80223f8:	fb02 7201 	mla	r2, r2, r1, r7
 80223fc:	1412      	asrs	r2, r2, #16
 80223fe:	f100 815f 	bmi.w	80226c0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42c>
 8022402:	f108 31ff 	add.w	r1, r8, #4294967295
 8022406:	428a      	cmp	r2, r1
 8022408:	f280 815a 	bge.w	80226c0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42c>
 802240c:	2b00      	cmp	r3, #0
 802240e:	dda4      	ble.n	802235a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 8022410:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8022414:	444b      	add	r3, r9
 8022416:	9310      	str	r3, [sp, #64]	@ 0x40
 8022418:	f109 0303 	add.w	r3, r9, #3
 802241c:	9309      	str	r3, [sp, #36]	@ 0x24
 802241e:	46d1      	mov	r9, sl
 8022420:	973c      	str	r7, [sp, #240]	@ 0xf0
 8022422:	462e      	mov	r6, r5
 8022424:	463b      	mov	r3, r7
 8022426:	e12b      	b.n	8022680 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8022428:	785f      	ldrb	r7, [r3, #1]
 802242a:	f854 7027 	ldr.w	r7, [r4, r7, lsl #2]
 802242e:	9712      	str	r7, [sp, #72]	@ 0x48
 8022430:	0e3f      	lsrs	r7, r7, #24
 8022432:	970b      	str	r7, [sp, #44]	@ 0x2c
 8022434:	b16a      	cbz	r2, 8022452 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 8022436:	199f      	adds	r7, r3, r6
 8022438:	5d9b      	ldrb	r3, [r3, r6]
 802243a:	4626      	mov	r6, r4
 802243c:	787f      	ldrb	r7, [r7, #1]
 802243e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022442:	f854 4027 	ldr.w	r4, [r4, r7, lsl #2]
 8022446:	9313      	str	r3, [sp, #76]	@ 0x4c
 8022448:	9415      	str	r4, [sp, #84]	@ 0x54
 802244a:	0e1b      	lsrs	r3, r3, #24
 802244c:	0e24      	lsrs	r4, r4, #24
 802244e:	940d      	str	r4, [sp, #52]	@ 0x34
 8022450:	930c      	str	r3, [sp, #48]	@ 0x30
 8022452:	fa1f fc81 	uxth.w	ip, r1
 8022456:	b292      	uxth	r2, r2
 8022458:	fb0c f602 	mul.w	r6, ip, r2
 802245c:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8022460:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8022462:	ebac 0706 	sub.w	r7, ip, r6
 8022466:	b2bf      	uxth	r7, r7
 8022468:	fb07 f103 	mul.w	r1, r7, r3
 802246c:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8022470:	b292      	uxth	r2, r2
 8022472:	f5cc 7380 	rsb	r3, ip, #256	@ 0x100
 8022476:	1a9b      	subs	r3, r3, r2
 8022478:	b29b      	uxth	r3, r3
 802247a:	fb03 1100 	mla	r1, r3, r0, r1
 802247e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8022480:	fb02 1104 	mla	r1, r2, r4, r1
 8022484:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8022486:	fb06 1104 	mla	r1, r6, r4, r1
 802248a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802248e:	2900      	cmp	r1, #0
 8022490:	f000 80e5 	beq.w	802265e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8022494:	f005 14ff 	and.w	r4, r5, #16711935	@ 0xff00ff
 8022498:	28ff      	cmp	r0, #255	@ 0xff
 802249a:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802249e:	940e      	str	r4, [sp, #56]	@ 0x38
 80224a0:	950f      	str	r5, [sp, #60]	@ 0x3c
 80224a2:	d01d      	beq.n	80224e0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 80224a4:	fb04 fe00 	mul.w	lr, r4, r0
 80224a8:	fb05 f800 	mul.w	r8, r5, r0
 80224ac:	ea4f 251e 	mov.w	r5, lr, lsr #8
 80224b0:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80224b4:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 80224b8:	f508 7080 	add.w	r0, r8, #256	@ 0x100
 80224bc:	44ae      	add	lr, r5
 80224be:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80224c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80224c6:	0a00      	lsrs	r0, r0, #8
 80224c8:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 80224cc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80224d0:	ea4e 0e00 	orr.w	lr, lr, r0
 80224d4:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 80224d8:	900e      	str	r0, [sp, #56]	@ 0x38
 80224da:	f40e 407f 	and.w	r0, lr, #65280	@ 0xff00
 80224de:	900f      	str	r0, [sp, #60]	@ 0x3c
 80224e0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80224e2:	f000 1eff 	and.w	lr, r0, #16711935	@ 0xff00ff
 80224e6:	f400 487f 	and.w	r8, r0, #65280	@ 0xff00
 80224ea:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80224ec:	28ff      	cmp	r0, #255	@ 0xff
 80224ee:	d01c      	beq.n	802252a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80224f0:	fb0e fe00 	mul.w	lr, lr, r0
 80224f4:	fb08 f800 	mul.w	r8, r8, r0
 80224f8:	ea4f 251e 	mov.w	r5, lr, lsr #8
 80224fc:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8022500:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 8022504:	f508 7080 	add.w	r0, r8, #256	@ 0x100
 8022508:	44ae      	add	lr, r5
 802250a:	eb00 2818 	add.w	r8, r0, r8, lsr #8
 802250e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022512:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8022516:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802251a:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802251e:	ea4e 0808 	orr.w	r8, lr, r8
 8022522:	f008 1eff 	and.w	lr, r8, #16711935	@ 0xff00ff
 8022526:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802252a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802252c:	f000 1cff 	and.w	ip, r0, #16711935	@ 0xff00ff
 8022530:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 8022534:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8022536:	28ff      	cmp	r0, #255	@ 0xff
 8022538:	d01c      	beq.n	8022574 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802253a:	fb0c fc00 	mul.w	ip, ip, r0
 802253e:	fb0a fa00 	mul.w	sl, sl, r0
 8022542:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8022546:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802254a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802254e:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 8022552:	44ac      	add	ip, r5
 8022554:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8022558:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802255c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022560:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8022564:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8022568:	ea4c 0a0a 	orr.w	sl, ip, sl
 802256c:	f00a 1cff 	and.w	ip, sl, #16711935	@ 0xff00ff
 8022570:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8022574:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8022576:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 802257a:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802257e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8022580:	2cff      	cmp	r4, #255	@ 0xff
 8022582:	d019      	beq.n	80225b8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8022584:	fb00 f004 	mul.w	r0, r0, r4
 8022588:	fb0b fb04 	mul.w	fp, fp, r4
 802258c:	0a05      	lsrs	r5, r0, #8
 802258e:	f005 14ff 	and.w	r4, r5, #16711935	@ 0xff00ff
 8022592:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 8022596:	f50b 7580 	add.w	r5, fp, #256	@ 0x100
 802259a:	eb05 251b 	add.w	r5, r5, fp, lsr #8
 802259e:	4420      	add	r0, r4
 80225a0:	0a00      	lsrs	r0, r0, #8
 80225a2:	0a2d      	lsrs	r5, r5, #8
 80225a4:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80225a8:	f405 4b7f 	and.w	fp, r5, #65280	@ 0xff00
 80225ac:	ea40 0b0b 	orr.w	fp, r0, fp
 80225b0:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 80225b4:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 80225b8:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 80225ba:	fb0e fe07 	mul.w	lr, lr, r7
 80225be:	fb01 f104 	mul.w	r1, r1, r4
 80225c2:	1c4d      	adds	r5, r1, #1
 80225c4:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 80225c8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80225cc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80225ce:	fb08 f707 	mul.w	r7, r8, r7
 80225d2:	fb05 ee03 	mla	lr, r5, r3, lr
 80225d6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80225d8:	fb0c ee02 	mla	lr, ip, r2, lr
 80225dc:	fb05 7703 	mla	r7, r5, r3, r7
 80225e0:	fb0a 7702 	mla	r7, sl, r2, r7
 80225e4:	fb00 ee06 	mla	lr, r0, r6, lr
 80225e8:	fb0b 7706 	mla	r7, fp, r6, r7
 80225ec:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80225ee:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80225f2:	0a3f      	lsrs	r7, r7, #8
 80225f4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80225f8:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80225fc:	ea4e 0307 	orr.w	r3, lr, r7
 8022600:	f810 6c01 	ldrb.w	r6, [r0, #-1]
 8022604:	f810 7c02 	ldrb.w	r7, [r0, #-2]
 8022608:	b2c9      	uxtb	r1, r1
 802260a:	fa5f fc83 	uxtb.w	ip, r3
 802260e:	fb16 f601 	smulbb	r6, r6, r1
 8022612:	fb17 f701 	smulbb	r7, r7, r1
 8022616:	fb1c fc04 	smulbb	ip, ip, r4
 802261a:	f810 0c03 	ldrb.w	r0, [r0, #-3]
 802261e:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8022622:	0c1b      	lsrs	r3, r3, #16
 8022624:	fb00 c101 	mla	r1, r0, r1, ip
 8022628:	fb03 6304 	mla	r3, r3, r4, r6
 802262c:	fb02 7204 	mla	r2, r2, r4, r7
 8022630:	b289      	uxth	r1, r1
 8022632:	b292      	uxth	r2, r2
 8022634:	b29b      	uxth	r3, r3
 8022636:	f101 0e01 	add.w	lr, r1, #1
 802263a:	1c56      	adds	r6, r2, #1
 802263c:	1c5d      	adds	r5, r3, #1
 802263e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8022640:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 8022644:	eb06 2212 	add.w	r2, r6, r2, lsr #8
 8022648:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 802264c:	1209      	asrs	r1, r1, #8
 802264e:	1212      	asrs	r2, r2, #8
 8022650:	121b      	asrs	r3, r3, #8
 8022652:	f800 1c03 	strb.w	r1, [r0, #-3]
 8022656:	f800 2c02 	strb.w	r2, [r0, #-2]
 802265a:	f800 3c01 	strb.w	r3, [r0, #-1]
 802265e:	9b3d      	ldr	r3, [sp, #244]	@ 0xf4
 8022660:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 8022662:	4499      	add	r9, r3
 8022664:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 8022666:	4413      	add	r3, r2
 8022668:	933c      	str	r3, [sp, #240]	@ 0xf0
 802266a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802266c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802266e:	4293      	cmp	r3, r2
 8022670:	d024      	beq.n	80226bc <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x428>
 8022672:	4613      	mov	r3, r2
 8022674:	3303      	adds	r3, #3
 8022676:	9309      	str	r3, [sp, #36]	@ 0x24
 8022678:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 802267a:	f9b3 6008 	ldrsh.w	r6, [r3, #8]
 802267e:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 8022680:	ea4f 4229 	mov.w	r2, r9, asr #16
 8022684:	141b      	asrs	r3, r3, #16
 8022686:	fb06 2303 	mla	r3, r6, r3, r2
 802268a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802268c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802268e:	5cc2      	ldrb	r2, [r0, r3]
 8022690:	f3c9 3103 	ubfx	r1, r9, #12, #4
 8022694:	f854 5022 	ldr.w	r5, [r4, r2, lsl #2]
 8022698:	9a3c      	ldr	r2, [sp, #240]	@ 0xf0
 802269a:	4403      	add	r3, r0
 802269c:	f3c2 3203 	ubfx	r2, r2, #12, #4
 80226a0:	0e28      	lsrs	r0, r5, #24
 80226a2:	2900      	cmp	r1, #0
 80226a4:	f47f aec0 	bne.w	8022428 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x194>
 80226a8:	2a00      	cmp	r2, #0
 80226aa:	f43f aed2 	beq.w	8022452 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 80226ae:	5d9b      	ldrb	r3, [r3, r6]
 80226b0:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 80226b4:	9313      	str	r3, [sp, #76]	@ 0x4c
 80226b6:	0e1b      	lsrs	r3, r3, #24
 80226b8:	930c      	str	r3, [sp, #48]	@ 0x30
 80226ba:	e6ca      	b.n	8022452 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 80226bc:	4699      	mov	r9, r3
 80226be:	e64c      	b.n	802235a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 80226c0:	2b00      	cmp	r3, #0
 80226c2:	f77f ae4a 	ble.w	802235a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 80226c6:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 80226ca:	ea4f 422a 	mov.w	r2, sl, asr #16
 80226ce:	1439      	asrs	r1, r7, #16
 80226d0:	2a00      	cmp	r2, #0
 80226d2:	46cb      	mov	fp, r9
 80226d4:	f8cd 903c 	str.w	r9, [sp, #60]	@ 0x3c
 80226d8:	9c42      	ldr	r4, [sp, #264]	@ 0x108
 80226da:	e9dd 953d 	ldrd	r9, r5, [sp, #244]	@ 0xf4
 80226de:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80226e2:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 80226e6:	f2c0 8154 	blt.w	8022992 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 80226ea:	1e73      	subs	r3, r6, #1
 80226ec:	429a      	cmp	r2, r3
 80226ee:	f280 8150 	bge.w	8022992 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 80226f2:	2900      	cmp	r1, #0
 80226f4:	f2c0 814d 	blt.w	8022992 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 80226f8:	f10c 33ff 	add.w	r3, ip, #4294967295
 80226fc:	4299      	cmp	r1, r3
 80226fe:	f280 8148 	bge.w	8022992 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 8022702:	b236      	sxth	r6, r6
 8022704:	fb01 2206 	mla	r2, r1, r6, r2
 8022708:	9911      	ldr	r1, [sp, #68]	@ 0x44
 802270a:	5c8b      	ldrb	r3, [r1, r2]
 802270c:	440a      	add	r2, r1
 802270e:	9210      	str	r2, [sp, #64]	@ 0x40
 8022710:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8022712:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8022716:	930e      	str	r3, [sp, #56]	@ 0x38
 8022718:	0e1b      	lsrs	r3, r3, #24
 802271a:	2800      	cmp	r0, #0
 802271c:	f000 8169 	beq.w	80229f2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75e>
 8022720:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8022722:	f891 c001 	ldrb.w	ip, [r1, #1]
 8022726:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802272a:	9224      	str	r2, [sp, #144]	@ 0x90
 802272c:	0e12      	lsrs	r2, r2, #24
 802272e:	9218      	str	r2, [sp, #96]	@ 0x60
 8022730:	f1be 0f00 	cmp.w	lr, #0
 8022734:	f040 816a 	bne.w	8022a0c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x778>
 8022738:	b280      	uxth	r0, r0
 802273a:	fa1f fc8e 	uxth.w	ip, lr
 802273e:	fb00 f20c 	mul.w	r2, r0, ip
 8022742:	4611      	mov	r1, r2
 8022744:	0106      	lsls	r6, r0, #4
 8022746:	1ab0      	subs	r0, r6, r2
 8022748:	9210      	str	r2, [sp, #64]	@ 0x40
 802274a:	b282      	uxth	r2, r0
 802274c:	9818      	ldr	r0, [sp, #96]	@ 0x60
 802274e:	ebc1 1c0c 	rsb	ip, r1, ip, lsl #4
 8022752:	fb02 f000 	mul.w	r0, r2, r0
 8022756:	921b      	str	r2, [sp, #108]	@ 0x6c
 8022758:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 802275c:	fa1f f28c 	uxth.w	r2, ip
 8022760:	1ab6      	subs	r6, r6, r2
 8022762:	b2b6      	uxth	r6, r6
 8022764:	fb06 0c03 	mla	ip, r6, r3, r0
 8022768:	9819      	ldr	r0, [sp, #100]	@ 0x64
 802276a:	921c      	str	r2, [sp, #112]	@ 0x70
 802276c:	fb02 cc00 	mla	ip, r2, r0, ip
 8022770:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8022772:	961d      	str	r6, [sp, #116]	@ 0x74
 8022774:	fb01 cc02 	mla	ip, r1, r2, ip
 8022778:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802277c:	f1bc 0f00 	cmp.w	ip, #0
 8022780:	f000 80f1 	beq.w	8022966 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 8022784:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8022786:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8022788:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802278c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8022790:	2bff      	cmp	r3, #255	@ 0xff
 8022792:	921e      	str	r2, [sp, #120]	@ 0x78
 8022794:	910e      	str	r1, [sp, #56]	@ 0x38
 8022796:	d01b      	beq.n	80227d0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x53c>
 8022798:	fb01 f103 	mul.w	r1, r1, r3
 802279c:	fb02 f203 	mul.w	r2, r2, r3
 80227a0:	460b      	mov	r3, r1
 80227a2:	0a11      	lsrs	r1, r2, #8
 80227a4:	f102 1601 	add.w	r6, r2, #65537	@ 0x10001
 80227a8:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80227ac:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 80227b0:	4431      	add	r1, r6
 80227b2:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80227b6:	0a09      	lsrs	r1, r1, #8
 80227b8:	0a1b      	lsrs	r3, r3, #8
 80227ba:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80227be:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80227c2:	430b      	orrs	r3, r1
 80227c4:	f003 12ff 	and.w	r2, r3, #16711935	@ 0xff00ff
 80227c8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80227cc:	921e      	str	r2, [sp, #120]	@ 0x78
 80227ce:	930e      	str	r3, [sp, #56]	@ 0x38
 80227d0:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80227d2:	9918      	ldr	r1, [sp, #96]	@ 0x60
 80227d4:	f002 13ff 	and.w	r3, r2, #16711935	@ 0xff00ff
 80227d8:	29ff      	cmp	r1, #255	@ 0xff
 80227da:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80227de:	931f      	str	r3, [sp, #124]	@ 0x7c
 80227e0:	9220      	str	r2, [sp, #128]	@ 0x80
 80227e2:	d01b      	beq.n	802281c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x588>
 80227e4:	fb03 f301 	mul.w	r3, r3, r1
 80227e8:	fb02 f201 	mul.w	r2, r2, r1
 80227ec:	0a19      	lsrs	r1, r3, #8
 80227ee:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 80227f2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80227f6:	f502 7380 	add.w	r3, r2, #256	@ 0x100
 80227fa:	4401      	add	r1, r0
 80227fc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022800:	0a09      	lsrs	r1, r1, #8
 8022802:	0a1b      	lsrs	r3, r3, #8
 8022804:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8022808:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802280c:	ea41 0003 	orr.w	r0, r1, r3
 8022810:	f000 13ff 	and.w	r3, r0, #16711935	@ 0xff00ff
 8022814:	931f      	str	r3, [sp, #124]	@ 0x7c
 8022816:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 802281a:	9320      	str	r3, [sp, #128]	@ 0x80
 802281c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802281e:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8022820:	f003 16ff 	and.w	r6, r3, #16711935	@ 0xff00ff
 8022824:	2aff      	cmp	r2, #255	@ 0xff
 8022826:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802282a:	9321      	str	r3, [sp, #132]	@ 0x84
 802282c:	d01a      	beq.n	8022864 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d0>
 802282e:	fb03 f302 	mul.w	r3, r3, r2
 8022832:	4618      	mov	r0, r3
 8022834:	fb06 f602 	mul.w	r6, r6, r2
 8022838:	0a31      	lsrs	r1, r6, #8
 802283a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802283e:	f106 1601 	add.w	r6, r6, #65537	@ 0x10001
 8022842:	f503 7380 	add.w	r3, r3, #256	@ 0x100
 8022846:	440e      	add	r6, r1
 8022848:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802284c:	0a36      	lsrs	r6, r6, #8
 802284e:	0a1b      	lsrs	r3, r3, #8
 8022850:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 8022854:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8022858:	4333      	orrs	r3, r6
 802285a:	f003 16ff 	and.w	r6, r3, #16711935	@ 0xff00ff
 802285e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8022862:	9321      	str	r3, [sp, #132]	@ 0x84
 8022864:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 8022866:	f002 13ff 	and.w	r3, r2, #16711935	@ 0xff00ff
 802286a:	f402 4e7f 	and.w	lr, r2, #65280	@ 0xff00
 802286e:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8022870:	2aff      	cmp	r2, #255	@ 0xff
 8022872:	d01a      	beq.n	80228aa <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x616>
 8022874:	fb03 f302 	mul.w	r3, r3, r2
 8022878:	fb0e fe02 	mul.w	lr, lr, r2
 802287c:	0a19      	lsrs	r1, r3, #8
 802287e:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 8022882:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8022886:	f50e 7380 	add.w	r3, lr, #256	@ 0x100
 802288a:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 802288e:	4401      	add	r1, r0
 8022890:	0a09      	lsrs	r1, r1, #8
 8022892:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022896:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802289a:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802289e:	ea41 0e0e 	orr.w	lr, r1, lr
 80228a2:	f00e 13ff 	and.w	r3, lr, #16711935	@ 0xff00ff
 80228a6:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 80228aa:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 80228ac:	fb0c f102 	mul.w	r1, ip, r2
 80228b0:	1c48      	adds	r0, r1, #1
 80228b2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80228b6:	ea6f 2211 	mvn.w	r2, r1, lsr #8
 80228ba:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80228bc:	9225      	str	r2, [sp, #148]	@ 0x94
 80228be:	4684      	mov	ip, r0
 80228c0:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 80228c2:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80228c4:	fb0c fc02 	mul.w	ip, ip, r2
 80228c8:	fb00 f002 	mul.w	r0, r0, r2
 80228cc:	4601      	mov	r1, r0
 80228ce:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 80228d0:	981e      	ldr	r0, [sp, #120]	@ 0x78
 80228d2:	fb00 cc02 	mla	ip, r0, r2, ip
 80228d6:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80228d8:	fb00 1102 	mla	r1, r0, r2, r1
 80228dc:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80228de:	9821      	ldr	r0, [sp, #132]	@ 0x84
 80228e0:	fb06 c602 	mla	r6, r6, r2, ip
 80228e4:	fb00 1002 	mla	r0, r0, r2, r1
 80228e8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80228ea:	f89d 1094 	ldrb.w	r1, [sp, #148]	@ 0x94
 80228ee:	fb03 6602 	mla	r6, r3, r2, r6
 80228f2:	fb0e 0302 	mla	r3, lr, r2, r0
 80228f6:	0a32      	lsrs	r2, r6, #8
 80228f8:	0a1b      	lsrs	r3, r3, #8
 80228fa:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80228fe:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8022902:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8022906:	4313      	orrs	r3, r2
 8022908:	fb16 f001 	smulbb	r0, r6, r1
 802290c:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802290e:	fa5f fe83 	uxtb.w	lr, r3
 8022912:	fb1e fe02 	smulbb	lr, lr, r2
 8022916:	f89b c001 	ldrb.w	ip, [fp, #1]
 802291a:	900e      	str	r0, [sp, #56]	@ 0x38
 802291c:	f89b 0000 	ldrb.w	r0, [fp]
 8022920:	fb1c fc01 	smulbb	ip, ip, r1
 8022924:	fb00 e001 	mla	r0, r0, r1, lr
 8022928:	4611      	mov	r1, r2
 802292a:	f3c3 2607 	ubfx	r6, r3, #8, #8
 802292e:	fb06 c202 	mla	r2, r6, r2, ip
 8022932:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8022934:	0c1b      	lsrs	r3, r3, #16
 8022936:	fb03 6301 	mla	r3, r3, r1, r6
 802293a:	b280      	uxth	r0, r0
 802293c:	b296      	uxth	r6, r2
 802293e:	b29b      	uxth	r3, r3
 8022940:	1c5a      	adds	r2, r3, #1
 8022942:	f100 0c01 	add.w	ip, r0, #1
 8022946:	1c71      	adds	r1, r6, #1
 8022948:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802294c:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 8022950:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8022954:	1200      	asrs	r0, r0, #8
 8022956:	120a      	asrs	r2, r1, #8
 8022958:	121b      	asrs	r3, r3, #8
 802295a:	f88b 0000 	strb.w	r0, [fp]
 802295e:	f88b 2001 	strb.w	r2, [fp, #1]
 8022962:	f88b 3002 	strb.w	r3, [fp, #2]
 8022966:	f1b8 0f00 	cmp.w	r8, #0
 802296a:	f10b 0b03 	add.w	fp, fp, #3
 802296e:	44ca      	add	sl, r9
 8022970:	442f      	add	r7, r5
 8022972:	dd2e      	ble.n	80229d2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73e>
 8022974:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 8022978:	ea4f 422a 	mov.w	r2, sl, asr #16
 802297c:	2a00      	cmp	r2, #0
 802297e:	f108 38ff 	add.w	r8, r8, #4294967295
 8022982:	ea4f 4127 	mov.w	r1, r7, asr #16
 8022986:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802298a:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 802298e:	f6bf aeac 	bge.w	80226ea <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8022992:	1c53      	adds	r3, r2, #1
 8022994:	d4e7      	bmi.n	8022966 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 8022996:	42b3      	cmp	r3, r6
 8022998:	dce5      	bgt.n	8022966 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802299a:	1c4b      	adds	r3, r1, #1
 802299c:	d4e3      	bmi.n	8022966 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802299e:	4563      	cmp	r3, ip
 80229a0:	dce1      	bgt.n	8022966 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 80229a2:	fa0f f38c 	sxth.w	r3, ip
 80229a6:	b236      	sxth	r6, r6
 80229a8:	e9cd 6300 	strd	r6, r3, [sp]
 80229ac:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80229ae:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80229b2:	e9cd e305 	strd	lr, r3, [sp, #20]
 80229b6:	9202      	str	r2, [sp, #8]
 80229b8:	4659      	mov	r1, fp
 80229ba:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80229bc:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80229be:	9822      	ldr	r0, [sp, #136]	@ 0x88
 80229c0:	f7ff faf2 	bl	8021fa8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh>
 80229c4:	f1b8 0f00 	cmp.w	r8, #0
 80229c8:	f10b 0b03 	add.w	fp, fp, #3
 80229cc:	44ca      	add	sl, r9
 80229ce:	442f      	add	r7, r5
 80229d0:	dcd0      	bgt.n	8022974 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 80229d2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80229d4:	f8dd 903c 	ldr.w	r9, [sp, #60]	@ 0x3c
 80229d8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80229dc:	3301      	adds	r3, #1
 80229de:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80229e2:	4499      	add	r9, r3
 80229e4:	e4b9      	b.n	802235a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 80229e6:	3b01      	subs	r3, #1
 80229e8:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 80229ec:	4698      	mov	r8, r3
 80229ee:	9309      	str	r3, [sp, #36]	@ 0x24
 80229f0:	e66e      	b.n	80226d0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 80229f2:	f1be 0f00 	cmp.w	lr, #0
 80229f6:	f43f ae9f 	beq.w	8022738 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 80229fa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80229fc:	5d92      	ldrb	r2, [r2, r6]
 80229fe:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8022a00:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8022a04:	9226      	str	r2, [sp, #152]	@ 0x98
 8022a06:	0e12      	lsrs	r2, r2, #24
 8022a08:	9219      	str	r2, [sp, #100]	@ 0x64
 8022a0a:	e695      	b.n	8022738 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 8022a0c:	eb01 0c06 	add.w	ip, r1, r6
 8022a10:	f89c c001 	ldrb.w	ip, [ip, #1]
 8022a14:	5d89      	ldrb	r1, [r1, r6]
 8022a16:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8022a18:	f856 202c 	ldr.w	r2, [r6, ip, lsl #2]
 8022a1c:	f856 6021 	ldr.w	r6, [r6, r1, lsl #2]
 8022a20:	9227      	str	r2, [sp, #156]	@ 0x9c
 8022a22:	0e12      	lsrs	r2, r2, #24
 8022a24:	921a      	str	r2, [sp, #104]	@ 0x68
 8022a26:	0e32      	lsrs	r2, r6, #24
 8022a28:	9626      	str	r6, [sp, #152]	@ 0x98
 8022a2a:	9219      	str	r2, [sp, #100]	@ 0x64
 8022a2c:	e684      	b.n	8022738 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 8022a2e:	f43f ac94 	beq.w	802235a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 8022a32:	1e6c      	subs	r4, r5, #1
 8022a34:	e4d4      	b.n	80223e0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8022a36:	bf00      	nop

08022a38 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh>:
 8022a38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022a3c:	b089      	sub	sp, #36	@ 0x24
 8022a3e:	f9bd b048 	ldrsh.w	fp, [sp, #72]	@ 0x48
 8022a42:	e9dd 4014 	ldrd	r4, r0, [sp, #80]	@ 0x50
 8022a46:	fb00 450b 	mla	r5, r0, fp, r4
 8022a4a:	2800      	cmp	r0, #0
 8022a4c:	4694      	mov	ip, r2
 8022a4e:	f100 0601 	add.w	r6, r0, #1
 8022a52:	442a      	add	r2, r5
 8022a54:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 8022a58:	f89d a058 	ldrb.w	sl, [sp, #88]	@ 0x58
 8022a5c:	f89d 705c 	ldrb.w	r7, [sp, #92]	@ 0x5c
 8022a60:	db02      	blt.n	8022a68 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x30>
 8022a62:	4580      	cmp	r8, r0
 8022a64:	f300 810a 	bgt.w	8022c7c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x244>
 8022a68:	f04f 0c00 	mov.w	ip, #0
 8022a6c:	46e6      	mov	lr, ip
 8022a6e:	4665      	mov	r5, ip
 8022a70:	46e1      	mov	r9, ip
 8022a72:	2e00      	cmp	r6, #0
 8022a74:	db02      	blt.n	8022a7c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x44>
 8022a76:	45b0      	cmp	r8, r6
 8022a78:	f300 811a 	bgt.w	8022cb0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x278>
 8022a7c:	2400      	movs	r4, #0
 8022a7e:	46a0      	mov	r8, r4
 8022a80:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8022a84:	f1ba 0f0f 	cmp.w	sl, #15
 8022a88:	f200 8158 	bhi.w	8022d3c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x304>
 8022a8c:	2f0f      	cmp	r7, #15
 8022a8e:	f200 8155 	bhi.w	8022d3c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x304>
 8022a92:	b2ba      	uxth	r2, r7
 8022a94:	fa1f f38a 	uxth.w	r3, sl
 8022a98:	fb02 f703 	mul.w	r7, r2, r3
 8022a9c:	ebc7 1202 	rsb	r2, r7, r2, lsl #4
 8022aa0:	b292      	uxth	r2, r2
 8022aa2:	fb02 fa08 	mul.w	sl, r2, r8
 8022aa6:	fb07 fb04 	mul.w	fp, r7, r4
 8022aaa:	011b      	lsls	r3, r3, #4
 8022aac:	1bd8      	subs	r0, r3, r7
 8022aae:	b280      	uxth	r0, r0
 8022ab0:	9001      	str	r0, [sp, #4]
 8022ab2:	fb00 f00c 	mul.w	r0, r0, ip
 8022ab6:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 8022aba:	1a9b      	subs	r3, r3, r2
 8022abc:	b29b      	uxth	r3, r3
 8022abe:	fb03 000e 	mla	r0, r3, lr, r0
 8022ac2:	4450      	add	r0, sl
 8022ac4:	4458      	add	r0, fp
 8022ac6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8022aca:	9002      	str	r0, [sp, #8]
 8022acc:	2800      	cmp	r0, #0
 8022ace:	f000 80d2 	beq.w	8022c76 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x23e>
 8022ad2:	f009 10ff 	and.w	r0, r9, #16711935	@ 0xff00ff
 8022ad6:	f409 467f 	and.w	r6, r9, #65280	@ 0xff00
 8022ada:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8022ade:	9005      	str	r0, [sp, #20]
 8022ae0:	9606      	str	r6, [sp, #24]
 8022ae2:	d01e      	beq.n	8022b22 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xea>
 8022ae4:	fb00 fb0e 	mul.w	fp, r0, lr
 8022ae8:	fb06 fe0e 	mul.w	lr, r6, lr
 8022aec:	ea4f 201b 	mov.w	r0, fp, lsr #8
 8022af0:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8022af4:	f50e 7a80 	add.w	sl, lr, #256	@ 0x100
 8022af8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8022afc:	4483      	add	fp, r0
 8022afe:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
 8022b02:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8022b06:	ea4f 2a1e 	mov.w	sl, lr, lsr #8
 8022b0a:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8022b0e:	f40a 4e7f 	and.w	lr, sl, #65280	@ 0xff00
 8022b12:	ea4b 0e0e 	orr.w	lr, fp, lr
 8022b16:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 8022b1a:	9005      	str	r0, [sp, #20]
 8022b1c:	f40e 407f 	and.w	r0, lr, #65280	@ 0xff00
 8022b20:	9006      	str	r0, [sp, #24]
 8022b22:	f405 407f 	and.w	r0, r5, #65280	@ 0xff00
 8022b26:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8022b2a:	f005 1aff 	and.w	sl, r5, #16711935	@ 0xff00ff
 8022b2e:	9007      	str	r0, [sp, #28]
 8022b30:	d01d      	beq.n	8022b6e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x136>
 8022b32:	fb0a fa0c 	mul.w	sl, sl, ip
 8022b36:	fb00 f50c 	mul.w	r5, r0, ip
 8022b3a:	ea4f 201a 	mov.w	r0, sl, lsr #8
 8022b3e:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8022b42:	f505 7b80 	add.w	fp, r5, #256	@ 0x100
 8022b46:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8022b4a:	4482      	add	sl, r0
 8022b4c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8022b50:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022b54:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8022b58:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 8022b5c:	f40b 457f 	and.w	r5, fp, #65280	@ 0xff00
 8022b60:	ea4a 0505 	orr.w	r5, sl, r5
 8022b64:	f405 407f 	and.w	r0, r5, #65280	@ 0xff00
 8022b68:	f005 1aff 	and.w	sl, r5, #16711935	@ 0xff00ff
 8022b6c:	9007      	str	r0, [sp, #28]
 8022b6e:	9803      	ldr	r0, [sp, #12]
 8022b70:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8022b74:	f000 19ff 	and.w	r9, r0, #16711935	@ 0xff00ff
 8022b78:	f400 467f 	and.w	r6, r0, #65280	@ 0xff00
 8022b7c:	d01b      	beq.n	8022bb6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x17e>
 8022b7e:	fb09 f908 	mul.w	r9, r9, r8
 8022b82:	fb06 f608 	mul.w	r6, r6, r8
 8022b86:	ea4f 2c19 	mov.w	ip, r9, lsr #8
 8022b8a:	f506 7080 	add.w	r0, r6, #256	@ 0x100
 8022b8e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8022b92:	f109 1901 	add.w	r9, r9, #65537	@ 0x10001
 8022b96:	eb00 2616 	add.w	r6, r0, r6, lsr #8
 8022b9a:	44e1      	add	r9, ip
 8022b9c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022ba0:	0a30      	lsrs	r0, r6, #8
 8022ba2:	f009 19ff 	and.w	r9, r9, #16711935	@ 0xff00ff
 8022ba6:	f400 467f 	and.w	r6, r0, #65280	@ 0xff00
 8022baa:	ea49 0606 	orr.w	r6, r9, r6
 8022bae:	f006 19ff 	and.w	r9, r6, #16711935	@ 0xff00ff
 8022bb2:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8022bb6:	9d04      	ldr	r5, [sp, #16]
 8022bb8:	2cff      	cmp	r4, #255	@ 0xff
 8022bba:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 8022bbe:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8022bc2:	d01a      	beq.n	8022bfa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x1c2>
 8022bc4:	fb00 f004 	mul.w	r0, r0, r4
 8022bc8:	fb0e f404 	mul.w	r4, lr, r4
 8022bcc:	ea4f 2c10 	mov.w	ip, r0, lsr #8
 8022bd0:	f504 7e80 	add.w	lr, r4, #256	@ 0x100
 8022bd4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8022bd8:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 8022bdc:	eb0e 2414 	add.w	r4, lr, r4, lsr #8
 8022be0:	4460      	add	r0, ip
 8022be2:	0a00      	lsrs	r0, r0, #8
 8022be4:	0a24      	lsrs	r4, r4, #8
 8022be6:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8022bea:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 8022bee:	ea40 0e0e 	orr.w	lr, r0, lr
 8022bf2:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 8022bf6:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 8022bfa:	9c02      	ldr	r4, [sp, #8]
 8022bfc:	9d07      	ldr	r5, [sp, #28]
 8022bfe:	ea6f 0c04 	mvn.w	ip, r4
 8022c02:	9c01      	ldr	r4, [sp, #4]
 8022c04:	fa5f fc8c 	uxtb.w	ip, ip
 8022c08:	fb0a fb04 	mul.w	fp, sl, r4
 8022c0c:	fb05 f504 	mul.w	r5, r5, r4
 8022c10:	9c05      	ldr	r4, [sp, #20]
 8022c12:	fb04 bb03 	mla	fp, r4, r3, fp
 8022c16:	9c06      	ldr	r4, [sp, #24]
 8022c18:	fb09 b902 	mla	r9, r9, r2, fp
 8022c1c:	fb04 5303 	mla	r3, r4, r3, r5
 8022c20:	fb06 3602 	mla	r6, r6, r2, r3
 8022c24:	780c      	ldrb	r4, [r1, #0]
 8022c26:	fb00 9007 	mla	r0, r0, r7, r9
 8022c2a:	784a      	ldrb	r2, [r1, #1]
 8022c2c:	fb0e 6707 	mla	r7, lr, r7, r6
 8022c30:	788b      	ldrb	r3, [r1, #2]
 8022c32:	fb02 f20c 	mul.w	r2, r2, ip
 8022c36:	fb03 f30c 	mul.w	r3, r3, ip
 8022c3a:	fb04 fc0c 	mul.w	ip, r4, ip
 8022c3e:	0a00      	lsrs	r0, r0, #8
 8022c40:	0a3f      	lsrs	r7, r7, #8
 8022c42:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8022c46:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8022c4a:	4338      	orrs	r0, r7
 8022c4c:	1c54      	adds	r4, r2, #1
 8022c4e:	1c5f      	adds	r7, r3, #1
 8022c50:	f10c 0601 	add.w	r6, ip, #1
 8022c54:	0a05      	lsrs	r5, r0, #8
 8022c56:	eb04 2212 	add.w	r2, r4, r2, lsr #8
 8022c5a:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 8022c5e:	0c04      	lsrs	r4, r0, #16
 8022c60:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8022c64:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 8022c68:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8022c6c:	eb00 201c 	add.w	r0, r0, ip, lsr #8
 8022c70:	704a      	strb	r2, [r1, #1]
 8022c72:	708b      	strb	r3, [r1, #2]
 8022c74:	7008      	strb	r0, [r1, #0]
 8022c76:	b009      	add	sp, #36	@ 0x24
 8022c78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022c7c:	2c00      	cmp	r4, #0
 8022c7e:	db01      	blt.n	8022c84 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x24c>
 8022c80:	45a3      	cmp	fp, r4
 8022c82:	dc41      	bgt.n	8022d08 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2d0>
 8022c84:	f04f 0e00 	mov.w	lr, #0
 8022c88:	46f1      	mov	r9, lr
 8022c8a:	1c60      	adds	r0, r4, #1
 8022c8c:	d42b      	bmi.n	8022ce6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2ae>
 8022c8e:	4583      	cmp	fp, r0
 8022c90:	dd29      	ble.n	8022ce6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2ae>
 8022c92:	f1ba 0f00 	cmp.w	sl, #0
 8022c96:	d005      	beq.n	8022ca4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x26c>
 8022c98:	7850      	ldrb	r0, [r2, #1]
 8022c9a:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 8022c9e:	ea4f 6c15 	mov.w	ip, r5, lsr #24
 8022ca2:	e6e6      	b.n	8022a72 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x3a>
 8022ca4:	2e00      	cmp	r6, #0
 8022ca6:	db42      	blt.n	8022d2e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2f6>
 8022ca8:	45b0      	cmp	r8, r6
 8022caa:	dd40      	ble.n	8022d2e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2f6>
 8022cac:	46d4      	mov	ip, sl
 8022cae:	4655      	mov	r5, sl
 8022cb0:	b1ef      	cbz	r7, 8022cee <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2b6>
 8022cb2:	2c00      	cmp	r4, #0
 8022cb4:	db32      	blt.n	8022d1c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2e4>
 8022cb6:	45a3      	cmp	fp, r4
 8022cb8:	dd30      	ble.n	8022d1c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2e4>
 8022cba:	f812 000b 	ldrb.w	r0, [r2, fp]
 8022cbe:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8022cc2:	9003      	str	r0, [sp, #12]
 8022cc4:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8022cc8:	3401      	adds	r4, #1
 8022cca:	d424      	bmi.n	8022d16 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2de>
 8022ccc:	45a3      	cmp	fp, r4
 8022cce:	dd22      	ble.n	8022d16 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2de>
 8022cd0:	f1ba 0f00 	cmp.w	sl, #0
 8022cd4:	d027      	beq.n	8022d26 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2ee>
 8022cd6:	4493      	add	fp, r2
 8022cd8:	f89b 2001 	ldrb.w	r2, [fp, #1]
 8022cdc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8022ce0:	9304      	str	r3, [sp, #16]
 8022ce2:	0e1c      	lsrs	r4, r3, #24
 8022ce4:	e6ce      	b.n	8022a84 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x4c>
 8022ce6:	f04f 0c00 	mov.w	ip, #0
 8022cea:	4665      	mov	r5, ip
 8022cec:	e6c1      	b.n	8022a72 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x3a>
 8022cee:	f1ba 0f0f 	cmp.w	sl, #15
 8022cf2:	d823      	bhi.n	8022d3c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x304>
 8022cf4:	fa1f f38a 	uxth.w	r3, sl
 8022cf8:	463a      	mov	r2, r7
 8022cfa:	46bb      	mov	fp, r7
 8022cfc:	46ba      	mov	sl, r7
 8022cfe:	e9cd 7703 	strd	r7, r7, [sp, #12]
 8022d02:	463c      	mov	r4, r7
 8022d04:	46b8      	mov	r8, r7
 8022d06:	e6d0      	b.n	8022aaa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x72>
 8022d08:	f81c 0005 	ldrb.w	r0, [ip, r5]
 8022d0c:	f853 9020 	ldr.w	r9, [r3, r0, lsl #2]
 8022d10:	ea4f 6e19 	mov.w	lr, r9, lsr #24
 8022d14:	e7b9      	b.n	8022c8a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x252>
 8022d16:	2400      	movs	r4, #0
 8022d18:	9404      	str	r4, [sp, #16]
 8022d1a:	e6b3      	b.n	8022a84 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x4c>
 8022d1c:	f04f 0800 	mov.w	r8, #0
 8022d20:	f8cd 800c 	str.w	r8, [sp, #12]
 8022d24:	e7d0      	b.n	8022cc8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x290>
 8022d26:	f8cd a010 	str.w	sl, [sp, #16]
 8022d2a:	4654      	mov	r4, sl
 8022d2c:	e6ae      	b.n	8022a8c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x54>
 8022d2e:	4655      	mov	r5, sl
 8022d30:	e9cd aa03 	strd	sl, sl, [sp, #12]
 8022d34:	4654      	mov	r4, sl
 8022d36:	46d0      	mov	r8, sl
 8022d38:	46d4      	mov	ip, sl
 8022d3a:	e6a7      	b.n	8022a8c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x54>
 8022d3c:	4b03      	ldr	r3, [pc, #12]	@ (8022d4c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x314>)
 8022d3e:	4a04      	ldr	r2, [pc, #16]	@ (8022d50 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x318>)
 8022d40:	f44f 7170 	mov.w	r1, #960	@ 0x3c0
 8022d44:	4803      	ldr	r0, [pc, #12]	@ (8022d54 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x31c>)
 8022d46:	f001 fff5 	bl	8024d34 <__assert_func>
 8022d4a:	bf00      	nop
 8022d4c:	08027d5c 	.word	0x08027d5c
 8022d50:	080283d8 	.word	0x080283d8
 8022d54:	08027ee4 	.word	0x08027ee4

08022d58 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022d58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022d5c:	ed2d 8b0a 	vpush	{d8-d12}
 8022d60:	eeb0 aa40 	vmov.f32	s20, s0
 8022d64:	eef0 9a60 	vmov.f32	s19, s1
 8022d68:	eeb0 9a41 	vmov.f32	s18, s2
 8022d6c:	eef0 8a62 	vmov.f32	s17, s5
 8022d70:	eeb0 8a43 	vmov.f32	s16, s6
 8022d74:	eeb0 ca44 	vmov.f32	s24, s8
 8022d78:	eef0 ba64 	vmov.f32	s23, s9
 8022d7c:	eeb0 ba45 	vmov.f32	s22, s10
 8022d80:	eef7 aa00 	vmov.f32	s21, #112	@ 0x3f800000  1.0
 8022d84:	b0a3      	sub	sp, #140	@ 0x8c
 8022d86:	901e      	str	r0, [sp, #120]	@ 0x78
 8022d88:	9111      	str	r1, [sp, #68]	@ 0x44
 8022d8a:	9213      	str	r2, [sp, #76]	@ 0x4c
 8022d8c:	e9dd 413b 	ldrd	r4, r1, [sp, #236]	@ 0xec
 8022d90:	9a3d      	ldr	r2, [sp, #244]	@ 0xf4
 8022d92:	6860      	ldr	r0, [r4, #4]
 8022d94:	fb00 1b02 	mla	fp, r0, r2, r1
 8022d98:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 8022d9a:	6821      	ldr	r1, [r4, #0]
 8022d9c:	9c3e      	ldr	r4, [sp, #248]	@ 0xf8
 8022d9e:	eb0b 004b 	add.w	r0, fp, fp, lsl #1
 8022da2:	6852      	ldr	r2, [r2, #4]
 8022da4:	eb01 0800 	add.w	r8, r1, r0
 8022da8:	6824      	ldr	r4, [r4, #0]
 8022daa:	e9dd 7b37 	ldrd	r7, fp, [sp, #220]	@ 0xdc
 8022dae:	3204      	adds	r2, #4
 8022db0:	46c3      	mov	fp, r8
 8022db2:	46b8      	mov	r8, r7
 8022db4:	9f38      	ldr	r7, [sp, #224]	@ 0xe0
 8022db6:	940e      	str	r4, [sp, #56]	@ 0x38
 8022db8:	920a      	str	r2, [sp, #40]	@ 0x28
 8022dba:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8022dbc:	2a00      	cmp	r2, #0
 8022dbe:	dc02      	bgt.n	8022dc6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022dc0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8022dc2:	2a00      	cmp	r2, #0
 8022dc4:	dd63      	ble.n	8022e8e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 8022dc6:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 8022dc8:	2b00      	cmp	r3, #0
 8022dca:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 8022dce:	b234      	sxth	r4, r6
 8022dd0:	fa0f f98c 	sxth.w	r9, ip
 8022dd4:	f340 835f 	ble.w	8023496 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73e>
 8022dd8:	1e65      	subs	r5, r4, #1
 8022dda:	f109 3eff 	add.w	lr, r9, #4294967295
 8022dde:	f8cd c024 	str.w	ip, [sp, #36]	@ 0x24
 8022de2:	e9dd ca39 	ldrd	ip, sl, [sp, #228]	@ 0xe4
 8022de6:	ea5f 4228 	movs.w	r2, r8, asr #16
 8022dea:	ea4f 4127 	mov.w	r1, r7, asr #16
 8022dee:	d405      	bmi.n	8022dfc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8022df0:	42aa      	cmp	r2, r5
 8022df2:	da03      	bge.n	8022dfc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8022df4:	2900      	cmp	r1, #0
 8022df6:	db01      	blt.n	8022dfc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8022df8:	4571      	cmp	r1, lr
 8022dfa:	db4d      	blt.n	8022e98 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8022dfc:	1c50      	adds	r0, r2, #1
 8022dfe:	d406      	bmi.n	8022e0e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8022e00:	42a0      	cmp	r0, r4
 8022e02:	dc04      	bgt.n	8022e0e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8022e04:	1c48      	adds	r0, r1, #1
 8022e06:	d402      	bmi.n	8022e0e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8022e08:	4548      	cmp	r0, r9
 8022e0a:	f340 831e 	ble.w	802344a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f2>
 8022e0e:	3b01      	subs	r3, #1
 8022e10:	44e0      	add	r8, ip
 8022e12:	4457      	add	r7, sl
 8022e14:	f10b 0b03 	add.w	fp, fp, #3
 8022e18:	d1e5      	bne.n	8022de6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022e1a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8022e1c:	2b00      	cmp	r3, #0
 8022e1e:	dd36      	ble.n	8022e8e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 8022e20:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8022e24:	ee79 9aab 	vadd.f32	s19, s19, s23
 8022e28:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8022e2c:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8022e30:	ee29 6aa7 	vmul.f32	s12, s19, s15
 8022e34:	ee69 7a27 	vmul.f32	s15, s18, s15
 8022e38:	ee76 6a68 	vsub.f32	s13, s12, s17
 8022e3c:	ee37 7ac8 	vsub.f32	s14, s15, s16
 8022e40:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022e44:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8022e48:	ee16 2a90 	vmov	r2, s13
 8022e4c:	3b01      	subs	r3, #1
 8022e4e:	9311      	str	r3, [sp, #68]	@ 0x44
 8022e50:	9b36      	ldr	r3, [sp, #216]	@ 0xd8
 8022e52:	fb92 f3f3 	sdiv	r3, r2, r3
 8022e56:	ee17 2a10 	vmov	r2, s14
 8022e5a:	eeb0 7a48 	vmov.f32	s14, s16
 8022e5e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8022e62:	ee17 7a10 	vmov	r7, s14
 8022e66:	eeb0 7a68 	vmov.f32	s14, s17
 8022e6a:	9339      	str	r3, [sp, #228]	@ 0xe4
 8022e6c:	9b36      	ldr	r3, [sp, #216]	@ 0xd8
 8022e6e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8022e72:	fb92 f3f3 	sdiv	r3, r2, r3
 8022e76:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8022e78:	933a      	str	r3, [sp, #232]	@ 0xe8
 8022e7a:	ee17 8a10 	vmov	r8, s14
 8022e7e:	9b36      	ldr	r3, [sp, #216]	@ 0xd8
 8022e80:	eeb0 8a67 	vmov.f32	s16, s15
 8022e84:	eef0 8a46 	vmov.f32	s17, s12
 8022e88:	bf08      	it	eq
 8022e8a:	4613      	moveq	r3, r2
 8022e8c:	e795      	b.n	8022dba <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8022e8e:	b023      	add	sp, #140	@ 0x8c
 8022e90:	ecbd 8b0a 	vpop	{d8-d12}
 8022e94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022e98:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 8022e9c:	9839      	ldr	r0, [sp, #228]	@ 0xe4
 8022e9e:	1e59      	subs	r1, r3, #1
 8022ea0:	fb00 8201 	mla	r2, r0, r1, r8
 8022ea4:	1412      	asrs	r2, r2, #16
 8022ea6:	9109      	str	r1, [sp, #36]	@ 0x24
 8022ea8:	f100 8151 	bmi.w	802314e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 8022eac:	42aa      	cmp	r2, r5
 8022eae:	f280 814e 	bge.w	802314e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 8022eb2:	9a3a      	ldr	r2, [sp, #232]	@ 0xe8
 8022eb4:	fb02 7201 	mla	r2, r2, r1, r7
 8022eb8:	1412      	asrs	r2, r2, #16
 8022eba:	f100 8148 	bmi.w	802314e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 8022ebe:	f109 31ff 	add.w	r1, r9, #4294967295
 8022ec2:	428a      	cmp	r2, r1
 8022ec4:	f280 8143 	bge.w	802314e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 8022ec8:	2b00      	cmp	r3, #0
 8022eca:	dda6      	ble.n	8022e1a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 8022ecc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8022ed0:	445b      	add	r3, fp
 8022ed2:	930d      	str	r3, [sp, #52]	@ 0x34
 8022ed4:	f10b 0c03 	add.w	ip, fp, #3
 8022ed8:	46c1      	mov	r9, r8
 8022eda:	9738      	str	r7, [sp, #224]	@ 0xe0
 8022edc:	4621      	mov	r1, r4
 8022ede:	463b      	mov	r3, r7
 8022ee0:	e114      	b.n	802310c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8022ee2:	f893 e001 	ldrb.w	lr, [r3, #1]
 8022ee6:	f856 502e 	ldr.w	r5, [r6, lr, lsl #2]
 8022eea:	950f      	str	r5, [sp, #60]	@ 0x3c
 8022eec:	0e2d      	lsrs	r5, r5, #24
 8022eee:	9506      	str	r5, [sp, #24]
 8022ef0:	b162      	cbz	r2, 8022f0c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8022ef2:	185d      	adds	r5, r3, r1
 8022ef4:	786d      	ldrb	r5, [r5, #1]
 8022ef6:	5c5b      	ldrb	r3, [r3, r1]
 8022ef8:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
 8022efc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022f00:	9112      	str	r1, [sp, #72]	@ 0x48
 8022f02:	9310      	str	r3, [sp, #64]	@ 0x40
 8022f04:	0e09      	lsrs	r1, r1, #24
 8022f06:	0e1b      	lsrs	r3, r3, #24
 8022f08:	9108      	str	r1, [sp, #32]
 8022f0a:	9307      	str	r3, [sp, #28]
 8022f0c:	b2a4      	uxth	r4, r4
 8022f0e:	b292      	uxth	r2, r2
 8022f10:	fb04 f502 	mul.w	r5, r4, r2
 8022f14:	0124      	lsls	r4, r4, #4
 8022f16:	1b66      	subs	r6, r4, r5
 8022f18:	9b06      	ldr	r3, [sp, #24]
 8022f1a:	b2b6      	uxth	r6, r6
 8022f1c:	fb06 f103 	mul.w	r1, r6, r3
 8022f20:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 8022f24:	b292      	uxth	r2, r2
 8022f26:	f5c4 7380 	rsb	r3, r4, #256	@ 0x100
 8022f2a:	1a9b      	subs	r3, r3, r2
 8022f2c:	b29b      	uxth	r3, r3
 8022f2e:	fb03 1100 	mla	r1, r3, r0, r1
 8022f32:	9c07      	ldr	r4, [sp, #28]
 8022f34:	fb02 1104 	mla	r1, r2, r4, r1
 8022f38:	9c08      	ldr	r4, [sp, #32]
 8022f3a:	fb05 1104 	mla	r1, r5, r4, r1
 8022f3e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8022f42:	9109      	str	r1, [sp, #36]	@ 0x24
 8022f44:	2900      	cmp	r1, #0
 8022f46:	f000 80d2 	beq.w	80230ee <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x396>
 8022f4a:	f007 14ff 	and.w	r4, r7, #16711935	@ 0xff00ff
 8022f4e:	f407 417f 	and.w	r1, r7, #65280	@ 0xff00
 8022f52:	28ff      	cmp	r0, #255	@ 0xff
 8022f54:	940b      	str	r4, [sp, #44]	@ 0x2c
 8022f56:	910c      	str	r1, [sp, #48]	@ 0x30
 8022f58:	d01b      	beq.n	8022f92 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8022f5a:	fb04 f400 	mul.w	r4, r4, r0
 8022f5e:	4627      	mov	r7, r4
 8022f60:	fb01 fe00 	mul.w	lr, r1, r0
 8022f64:	0a24      	lsrs	r4, r4, #8
 8022f66:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8022f6a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8022f6e:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 8022f72:	4427      	add	r7, r4
 8022f74:	eb00 201e 	add.w	r0, r0, lr, lsr #8
 8022f78:	0a3f      	lsrs	r7, r7, #8
 8022f7a:	0a00      	lsrs	r0, r0, #8
 8022f7c:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8022f80:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 8022f84:	4307      	orrs	r7, r0
 8022f86:	f007 11ff 	and.w	r1, r7, #16711935	@ 0xff00ff
 8022f8a:	910b      	str	r1, [sp, #44]	@ 0x2c
 8022f8c:	f407 417f 	and.w	r1, r7, #65280	@ 0xff00
 8022f90:	910c      	str	r1, [sp, #48]	@ 0x30
 8022f92:	9806      	ldr	r0, [sp, #24]
 8022f94:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8022f96:	28ff      	cmp	r0, #255	@ 0xff
 8022f98:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 8022f9c:	f401 4e7f 	and.w	lr, r1, #65280	@ 0xff00
 8022fa0:	d01a      	beq.n	8022fd8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 8022fa2:	fb07 f700 	mul.w	r7, r7, r0
 8022fa6:	fb0e fe00 	mul.w	lr, lr, r0
 8022faa:	0a3c      	lsrs	r4, r7, #8
 8022fac:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8022fb0:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8022fb4:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 8022fb8:	4427      	add	r7, r4
 8022fba:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 8022fbe:	0a3f      	lsrs	r7, r7, #8
 8022fc0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022fc4:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8022fc8:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 8022fcc:	ea47 0e0e 	orr.w	lr, r7, lr
 8022fd0:	f00e 17ff 	and.w	r7, lr, #16711935	@ 0xff00ff
 8022fd4:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 8022fd8:	9c07      	ldr	r4, [sp, #28]
 8022fda:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8022fdc:	2cff      	cmp	r4, #255	@ 0xff
 8022fde:	f001 10ff 	and.w	r0, r1, #16711935	@ 0xff00ff
 8022fe2:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8022fe6:	d01b      	beq.n	8023020 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8022fe8:	fb00 f004 	mul.w	r0, r0, r4
 8022fec:	fb0a fa04 	mul.w	sl, sl, r4
 8022ff0:	ea4f 2810 	mov.w	r8, r0, lsr #8
 8022ff4:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 8022ff8:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 8022ffc:	f50a 7480 	add.w	r4, sl, #256	@ 0x100
 8023000:	4440      	add	r0, r8
 8023002:	eb04 2a1a 	add.w	sl, r4, sl, lsr #8
 8023006:	0a00      	lsrs	r0, r0, #8
 8023008:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802300c:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8023010:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023014:	ea40 0a0a 	orr.w	sl, r0, sl
 8023018:	f00a 10ff 	and.w	r0, sl, #16711935	@ 0xff00ff
 802301c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023020:	9c08      	ldr	r4, [sp, #32]
 8023022:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8023024:	2cff      	cmp	r4, #255	@ 0xff
 8023026:	f001 18ff 	and.w	r8, r1, #16711935	@ 0xff00ff
 802302a:	f401 4b7f 	and.w	fp, r1, #65280	@ 0xff00
 802302e:	d01b      	beq.n	8023068 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 8023030:	fb08 f804 	mul.w	r8, r8, r4
 8023034:	fb0b fb04 	mul.w	fp, fp, r4
 8023038:	ea4f 2418 	mov.w	r4, r8, lsr #8
 802303c:	f004 11ff 	and.w	r1, r4, #16711935	@ 0xff00ff
 8023040:	f108 1801 	add.w	r8, r8, #65537	@ 0x10001
 8023044:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 8023048:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 802304c:	4488      	add	r8, r1
 802304e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023052:	0a24      	lsrs	r4, r4, #8
 8023054:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 8023058:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802305c:	ea48 0b0b 	orr.w	fp, r8, fp
 8023060:	f00b 18ff 	and.w	r8, fp, #16711935	@ 0xff00ff
 8023064:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 8023068:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802306a:	fb07 f706 	mul.w	r7, r7, r6
 802306e:	43c9      	mvns	r1, r1
 8023070:	fb0e f606 	mul.w	r6, lr, r6
 8023074:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8023076:	f81c ec02 	ldrb.w	lr, [ip, #-2]
 802307a:	fb04 7703 	mla	r7, r4, r3, r7
 802307e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8023080:	fb00 7702 	mla	r7, r0, r2, r7
 8023084:	fb04 6603 	mla	r6, r4, r3, r6
 8023088:	fb0a 6602 	mla	r6, sl, r2, r6
 802308c:	f81c 3c03 	ldrb.w	r3, [ip, #-3]
 8023090:	fb0b 6b05 	mla	fp, fp, r5, r6
 8023094:	fb08 7805 	mla	r8, r8, r5, r7
 8023098:	f81c 4c01 	ldrb.w	r4, [ip, #-1]
 802309c:	b2c9      	uxtb	r1, r1
 802309e:	fb0e fe01 	mul.w	lr, lr, r1
 80230a2:	fb04 f401 	mul.w	r4, r4, r1
 80230a6:	fb03 f101 	mul.w	r1, r3, r1
 80230aa:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80230ae:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 80230b2:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 80230b6:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 80230ba:	ea48 030b 	orr.w	r3, r8, fp
 80230be:	f10e 0201 	add.w	r2, lr, #1
 80230c2:	1c66      	adds	r6, r4, #1
 80230c4:	1c4d      	adds	r5, r1, #1
 80230c6:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80230ca:	0a18      	lsrs	r0, r3, #8
 80230cc:	0c1a      	lsrs	r2, r3, #16
 80230ce:	eb06 2414 	add.w	r4, r6, r4, lsr #8
 80230d2:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 80230d6:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 80230da:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80230de:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80230e2:	f80c ec02 	strb.w	lr, [ip, #-2]
 80230e6:	f80c 4c01 	strb.w	r4, [ip, #-1]
 80230ea:	f80c 1c03 	strb.w	r1, [ip, #-3]
 80230ee:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 80230f0:	9a3a      	ldr	r2, [sp, #232]	@ 0xe8
 80230f2:	4499      	add	r9, r3
 80230f4:	9b38      	ldr	r3, [sp, #224]	@ 0xe0
 80230f6:	4413      	add	r3, r2
 80230f8:	9338      	str	r3, [sp, #224]	@ 0xe0
 80230fa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80230fc:	4563      	cmp	r3, ip
 80230fe:	d024      	beq.n	802314a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8023100:	9b3e      	ldr	r3, [sp, #248]	@ 0xf8
 8023102:	f10c 0c03 	add.w	ip, ip, #3
 8023106:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802310a:	9b38      	ldr	r3, [sp, #224]	@ 0xe0
 802310c:	ea4f 4229 	mov.w	r2, r9, asr #16
 8023110:	141b      	asrs	r3, r3, #16
 8023112:	fb01 2303 	mla	r3, r1, r3, r2
 8023116:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8023118:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802311a:	5cc2      	ldrb	r2, [r0, r3]
 802311c:	f3c9 3403 	ubfx	r4, r9, #12, #4
 8023120:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 8023124:	9a38      	ldr	r2, [sp, #224]	@ 0xe0
 8023126:	4403      	add	r3, r0
 8023128:	f3c2 3203 	ubfx	r2, r2, #12, #4
 802312c:	0e38      	lsrs	r0, r7, #24
 802312e:	2c00      	cmp	r4, #0
 8023130:	f47f aed7 	bne.w	8022ee2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8023134:	2a00      	cmp	r2, #0
 8023136:	f43f aee9 	beq.w	8022f0c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802313a:	5c5b      	ldrb	r3, [r3, r1]
 802313c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802313e:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8023142:	9310      	str	r3, [sp, #64]	@ 0x40
 8023144:	0e1b      	lsrs	r3, r3, #24
 8023146:	9307      	str	r3, [sp, #28]
 8023148:	e6e0      	b.n	8022f0c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802314a:	469b      	mov	fp, r3
 802314c:	e665      	b.n	8022e1a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802314e:	2b00      	cmp	r3, #0
 8023150:	f77f ae63 	ble.w	8022e1a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 8023154:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 8023158:	ea4f 4228 	mov.w	r2, r8, asr #16
 802315c:	1439      	asrs	r1, r7, #16
 802315e:	2a00      	cmp	r2, #0
 8023160:	46d9      	mov	r9, fp
 8023162:	f8cd b02c 	str.w	fp, [sp, #44]	@ 0x2c
 8023166:	9c3e      	ldr	r4, [sp, #248]	@ 0xf8
 8023168:	e9dd b539 	ldrd	fp, r5, [sp, #228]	@ 0xe4
 802316c:	f3c8 3003 	ubfx	r0, r8, #12, #4
 8023170:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 8023174:	f2c0 8141 	blt.w	80233fa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 8023178:	1e73      	subs	r3, r6, #1
 802317a:	429a      	cmp	r2, r3
 802317c:	f280 813d 	bge.w	80233fa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 8023180:	2900      	cmp	r1, #0
 8023182:	f2c0 813a 	blt.w	80233fa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 8023186:	f10c 33ff 	add.w	r3, ip, #4294967295
 802318a:	4299      	cmp	r1, r3
 802318c:	f280 8135 	bge.w	80233fa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 8023190:	b233      	sxth	r3, r6
 8023192:	fb01 2203 	mla	r2, r1, r3, r2
 8023196:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8023198:	930c      	str	r3, [sp, #48]	@ 0x30
 802319a:	5c8b      	ldrb	r3, [r1, r2]
 802319c:	440a      	add	r2, r1
 802319e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80231a0:	4616      	mov	r6, r2
 80231a2:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80231a6:	930d      	str	r3, [sp, #52]	@ 0x34
 80231a8:	0e1b      	lsrs	r3, r3, #24
 80231aa:	2800      	cmp	r0, #0
 80231ac:	f000 8153 	beq.w	8023456 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 80231b0:	f896 c001 	ldrb.w	ip, [r6, #1]
 80231b4:	f851 202c 	ldr.w	r2, [r1, ip, lsl #2]
 80231b8:	921f      	str	r2, [sp, #124]	@ 0x7c
 80231ba:	0e12      	lsrs	r2, r2, #24
 80231bc:	9214      	str	r2, [sp, #80]	@ 0x50
 80231be:	f1be 0f00 	cmp.w	lr, #0
 80231c2:	f040 8155 	bne.w	8023470 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 80231c6:	b280      	uxth	r0, r0
 80231c8:	fa1f fc8e 	uxth.w	ip, lr
 80231cc:	fb00 f20c 	mul.w	r2, r0, ip
 80231d0:	0106      	lsls	r6, r0, #4
 80231d2:	1ab0      	subs	r0, r6, r2
 80231d4:	b281      	uxth	r1, r0
 80231d6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80231d8:	ebc2 1c0c 	rsb	ip, r2, ip, lsl #4
 80231dc:	fb01 f000 	mul.w	r0, r1, r0
 80231e0:	9117      	str	r1, [sp, #92]	@ 0x5c
 80231e2:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 80231e6:	fa1f f18c 	uxth.w	r1, ip
 80231ea:	1a76      	subs	r6, r6, r1
 80231ec:	b2b6      	uxth	r6, r6
 80231ee:	9619      	str	r6, [sp, #100]	@ 0x64
 80231f0:	fb06 0603 	mla	r6, r6, r3, r0
 80231f4:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80231f6:	9118      	str	r1, [sp, #96]	@ 0x60
 80231f8:	fb01 6600 	mla	r6, r1, r0, r6
 80231fc:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80231fe:	fb02 6601 	mla	r6, r2, r1, r6
 8023202:	f3c6 2107 	ubfx	r1, r6, #8, #8
 8023206:	911a      	str	r1, [sp, #104]	@ 0x68
 8023208:	2900      	cmp	r1, #0
 802320a:	f000 80e0 	beq.w	80233ce <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802320e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8023210:	2bff      	cmp	r3, #255	@ 0xff
 8023212:	f000 11ff 	and.w	r1, r0, #16711935	@ 0xff00ff
 8023216:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802321a:	910d      	str	r1, [sp, #52]	@ 0x34
 802321c:	901b      	str	r0, [sp, #108]	@ 0x6c
 802321e:	d01c      	beq.n	802325a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x502>
 8023220:	fb01 f103 	mul.w	r1, r1, r3
 8023224:	fb00 f003 	mul.w	r0, r0, r3
 8023228:	460e      	mov	r6, r1
 802322a:	4603      	mov	r3, r0
 802322c:	0a09      	lsrs	r1, r1, #8
 802322e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8023232:	f106 1601 	add.w	r6, r6, #65537	@ 0x10001
 8023236:	f500 7080 	add.w	r0, r0, #256	@ 0x100
 802323a:	4431      	add	r1, r6
 802323c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8023240:	0a09      	lsrs	r1, r1, #8
 8023242:	0a1b      	lsrs	r3, r3, #8
 8023244:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8023248:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802324c:	430b      	orrs	r3, r1
 802324e:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 8023252:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8023256:	910d      	str	r1, [sp, #52]	@ 0x34
 8023258:	931b      	str	r3, [sp, #108]	@ 0x6c
 802325a:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 802325c:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 8023260:	f401 467f 	and.w	r6, r1, #65280	@ 0xff00
 8023264:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8023266:	931c      	str	r3, [sp, #112]	@ 0x70
 8023268:	29ff      	cmp	r1, #255	@ 0xff
 802326a:	d019      	beq.n	80232a0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 802326c:	fb03 f301 	mul.w	r3, r3, r1
 8023270:	fb06 f601 	mul.w	r6, r6, r1
 8023274:	0a19      	lsrs	r1, r3, #8
 8023276:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802327a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802327e:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 8023282:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8023286:	4401      	add	r1, r0
 8023288:	0a09      	lsrs	r1, r1, #8
 802328a:	0a1b      	lsrs	r3, r3, #8
 802328c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8023290:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8023294:	4319      	orrs	r1, r3
 8023296:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802329a:	931c      	str	r3, [sp, #112]	@ 0x70
 802329c:	f401 467f 	and.w	r6, r1, #65280	@ 0xff00
 80232a0:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80232a2:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 80232a6:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 80232aa:	9915      	ldr	r1, [sp, #84]	@ 0x54
 80232ac:	930c      	str	r3, [sp, #48]	@ 0x30
 80232ae:	29ff      	cmp	r1, #255	@ 0xff
 80232b0:	901d      	str	r0, [sp, #116]	@ 0x74
 80232b2:	d01a      	beq.n	80232ea <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x592>
 80232b4:	fb03 f301 	mul.w	r3, r3, r1
 80232b8:	fb00 fc01 	mul.w	ip, r0, r1
 80232bc:	0a19      	lsrs	r1, r3, #8
 80232be:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 80232c2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80232c6:	f50c 7380 	add.w	r3, ip, #256	@ 0x100
 80232ca:	4401      	add	r1, r0
 80232cc:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80232d0:	0a09      	lsrs	r1, r1, #8
 80232d2:	0a1b      	lsrs	r3, r3, #8
 80232d4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80232d8:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80232dc:	4319      	orrs	r1, r3
 80232de:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 80232e2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80232e6:	930c      	str	r3, [sp, #48]	@ 0x30
 80232e8:	911d      	str	r1, [sp, #116]	@ 0x74
 80232ea:	9921      	ldr	r1, [sp, #132]	@ 0x84
 80232ec:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 80232f0:	f401 4e7f 	and.w	lr, r1, #65280	@ 0xff00
 80232f4:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80232f6:	29ff      	cmp	r1, #255	@ 0xff
 80232f8:	d01c      	beq.n	8023334 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 80232fa:	fb0c fc01 	mul.w	ip, ip, r1
 80232fe:	fb0e fe01 	mul.w	lr, lr, r1
 8023302:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8023306:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802330a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802330e:	f50e 7180 	add.w	r1, lr, #256	@ 0x100
 8023312:	4484      	add	ip, r0
 8023314:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8023318:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802331c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023320:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023324:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 8023328:	ea4c 0e0e 	orr.w	lr, ip, lr
 802332c:	f00e 1cff 	and.w	ip, lr, #16711935	@ 0xff00ff
 8023330:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 8023334:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8023336:	981c      	ldr	r0, [sp, #112]	@ 0x70
 8023338:	43c9      	mvns	r1, r1
 802333a:	911a      	str	r1, [sp, #104]	@ 0x68
 802333c:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 802333e:	fb00 f001 	mul.w	r0, r0, r1
 8023342:	fb06 f301 	mul.w	r3, r6, r1
 8023346:	9e19      	ldr	r6, [sp, #100]	@ 0x64
 8023348:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802334a:	fb01 0006 	mla	r0, r1, r6, r0
 802334e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8023350:	fb01 3106 	mla	r1, r1, r6, r3
 8023354:	9e18      	ldr	r6, [sp, #96]	@ 0x60
 8023356:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8023358:	910d      	str	r1, [sp, #52]	@ 0x34
 802335a:	fb03 0306 	mla	r3, r3, r6, r0
 802335e:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8023360:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8023362:	fb0c 3302 	mla	r3, ip, r2, r3
 8023366:	fb00 1106 	mla	r1, r0, r6, r1
 802336a:	f89d 6068 	ldrb.w	r6, [sp, #104]	@ 0x68
 802336e:	f899 0002 	ldrb.w	r0, [r9, #2]
 8023372:	fb0e 1e02 	mla	lr, lr, r2, r1
 8023376:	f899 2001 	ldrb.w	r2, [r9, #1]
 802337a:	f899 1000 	ldrb.w	r1, [r9]
 802337e:	fb00 f006 	mul.w	r0, r0, r6
 8023382:	fb02 fc06 	mul.w	ip, r2, r6
 8023386:	fb01 f106 	mul.w	r1, r1, r6
 802338a:	0a1b      	lsrs	r3, r3, #8
 802338c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023390:	f003 12ff 	and.w	r2, r3, #16711935	@ 0xff00ff
 8023394:	1c46      	adds	r6, r0, #1
 8023396:	f40e 437f 	and.w	r3, lr, #65280	@ 0xff00
 802339a:	4313      	orrs	r3, r2
 802339c:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 80233a0:	f10c 0201 	add.w	r2, ip, #1
 80233a4:	1c4e      	adds	r6, r1, #1
 80233a6:	ea4f 2e13 	mov.w	lr, r3, lsr #8
 80233aa:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 80233ae:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 80233b2:	ea4f 4c13 	mov.w	ip, r3, lsr #16
 80233b6:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 80233ba:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 80233be:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80233c2:	f889 2001 	strb.w	r2, [r9, #1]
 80233c6:	f889 0002 	strb.w	r0, [r9, #2]
 80233ca:	f889 3000 	strb.w	r3, [r9]
 80233ce:	f1ba 0f00 	cmp.w	sl, #0
 80233d2:	f109 0903 	add.w	r9, r9, #3
 80233d6:	44d8      	add	r8, fp
 80233d8:	442f      	add	r7, r5
 80233da:	dd2c      	ble.n	8023436 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6de>
 80233dc:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 80233e0:	ea4f 4228 	mov.w	r2, r8, asr #16
 80233e4:	2a00      	cmp	r2, #0
 80233e6:	f10a 3aff 	add.w	sl, sl, #4294967295
 80233ea:	ea4f 4127 	mov.w	r1, r7, asr #16
 80233ee:	f3c8 3003 	ubfx	r0, r8, #12, #4
 80233f2:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 80233f6:	f6bf aebf 	bge.w	8023178 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80233fa:	1c53      	adds	r3, r2, #1
 80233fc:	d4e7      	bmi.n	80233ce <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 80233fe:	42b3      	cmp	r3, r6
 8023400:	dce5      	bgt.n	80233ce <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 8023402:	1c4b      	adds	r3, r1, #1
 8023404:	d4e3      	bmi.n	80233ce <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 8023406:	4563      	cmp	r3, ip
 8023408:	dce1      	bgt.n	80233ce <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802340a:	fa0f f38c 	sxth.w	r3, ip
 802340e:	b236      	sxth	r6, r6
 8023410:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8023414:	e9cd 6300 	strd	r6, r3, [sp]
 8023418:	e9cd 0e04 	strd	r0, lr, [sp, #16]
 802341c:	4649      	mov	r1, r9
 802341e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023420:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8023422:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8023424:	f7ff fb08 	bl	8022a38 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh>
 8023428:	f1ba 0f00 	cmp.w	sl, #0
 802342c:	f109 0903 	add.w	r9, r9, #3
 8023430:	44d8      	add	r8, fp
 8023432:	442f      	add	r7, r5
 8023434:	dcd2      	bgt.n	80233dc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x684>
 8023436:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023438:	f8dd b02c 	ldr.w	fp, [sp, #44]	@ 0x2c
 802343c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8023440:	3301      	adds	r3, #1
 8023442:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8023446:	449b      	add	fp, r3
 8023448:	e4e7      	b.n	8022e1a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802344a:	3b01      	subs	r3, #1
 802344c:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 8023450:	469a      	mov	sl, r3
 8023452:	9309      	str	r3, [sp, #36]	@ 0x24
 8023454:	e683      	b.n	802315e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8023456:	f1be 0f00 	cmp.w	lr, #0
 802345a:	f43f aeb4 	beq.w	80231c6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46e>
 802345e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8023460:	5c72      	ldrb	r2, [r6, r1]
 8023462:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8023464:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8023468:	9220      	str	r2, [sp, #128]	@ 0x80
 802346a:	0e12      	lsrs	r2, r2, #24
 802346c:	9215      	str	r2, [sp, #84]	@ 0x54
 802346e:	e6aa      	b.n	80231c6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46e>
 8023470:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8023472:	eb06 0c02 	add.w	ip, r6, r2
 8023476:	4632      	mov	r2, r6
 8023478:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802347a:	f89c c001 	ldrb.w	ip, [ip, #1]
 802347e:	5d92      	ldrb	r2, [r2, r6]
 8023480:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 8023484:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8023488:	0e31      	lsrs	r1, r6, #24
 802348a:	9220      	str	r2, [sp, #128]	@ 0x80
 802348c:	0e12      	lsrs	r2, r2, #24
 802348e:	9621      	str	r6, [sp, #132]	@ 0x84
 8023490:	9116      	str	r1, [sp, #88]	@ 0x58
 8023492:	9215      	str	r2, [sp, #84]	@ 0x54
 8023494:	e697      	b.n	80231c6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46e>
 8023496:	f43f acc0 	beq.w	8022e1a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802349a:	1e65      	subs	r5, r4, #1
 802349c:	e4fe      	b.n	8022e9c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 802349e:	bf00      	nop

080234a0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh>:
 80234a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80234a4:	b087      	sub	sp, #28
 80234a6:	f89d b058 	ldrb.w	fp, [sp, #88]	@ 0x58
 80234aa:	f9bd 6040 	ldrsh.w	r6, [sp, #64]	@ 0x40
 80234ae:	ea6f 000b 	mvn.w	r0, fp
 80234b2:	e9dd 4712 	ldrd	r4, r7, [sp, #72]	@ 0x48
 80234b6:	fb07 4c06 	mla	ip, r7, r6, r4
 80234ba:	b2c0      	uxtb	r0, r0
 80234bc:	2f00      	cmp	r7, #0
 80234be:	9002      	str	r0, [sp, #8]
 80234c0:	eb02 0e0c 	add.w	lr, r2, ip
 80234c4:	f107 0801 	add.w	r8, r7, #1
 80234c8:	f9bd 9044 	ldrsh.w	r9, [sp, #68]	@ 0x44
 80234cc:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 80234d0:	f89d 0054 	ldrb.w	r0, [sp, #84]	@ 0x54
 80234d4:	db02      	blt.n	80234dc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x3c>
 80234d6:	45b9      	cmp	r9, r7
 80234d8:	f300 80a0 	bgt.w	802361c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x17c>
 80234dc:	468c      	mov	ip, r1
 80234de:	460f      	mov	r7, r1
 80234e0:	780a      	ldrb	r2, [r1, #0]
 80234e2:	9203      	str	r2, [sp, #12]
 80234e4:	9201      	str	r2, [sp, #4]
 80234e6:	f1b8 0f00 	cmp.w	r8, #0
 80234ea:	db01      	blt.n	80234f0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x50>
 80234ec:	45c1      	cmp	r9, r8
 80234ee:	dc7b      	bgt.n	80235e8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x148>
 80234f0:	460b      	mov	r3, r1
 80234f2:	4689      	mov	r9, r1
 80234f4:	f891 a000 	ldrb.w	sl, [r1]
 80234f8:	f8cd a014 	str.w	sl, [sp, #20]
 80234fc:	2d0f      	cmp	r5, #15
 80234fe:	f200 80cd 	bhi.w	802369c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1fc>
 8023502:	280f      	cmp	r0, #15
 8023504:	f200 80ca 	bhi.w	802369c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1fc>
 8023508:	780a      	ldrb	r2, [r1, #0]
 802350a:	9204      	str	r2, [sp, #16]
 802350c:	b2aa      	uxth	r2, r5
 802350e:	b280      	uxth	r0, r0
 8023510:	fb02 f500 	mul.w	r5, r2, r0
 8023514:	0112      	lsls	r2, r2, #4
 8023516:	f89c 8001 	ldrb.w	r8, [ip, #1]
 802351a:	f89c e002 	ldrb.w	lr, [ip, #2]
 802351e:	1b54      	subs	r4, r2, r5
 8023520:	b2a4      	uxth	r4, r4
 8023522:	fb04 f808 	mul.w	r8, r4, r8
 8023526:	fb04 fe0e 	mul.w	lr, r4, lr
 802352a:	ebc5 1000 	rsb	r0, r5, r0, lsl #4
 802352e:	b280      	uxth	r0, r0
 8023530:	9e01      	ldr	r6, [sp, #4]
 8023532:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8023536:	f897 c001 	ldrb.w	ip, [r7, #1]
 802353a:	1a12      	subs	r2, r2, r0
 802353c:	78bf      	ldrb	r7, [r7, #2]
 802353e:	b292      	uxth	r2, r2
 8023540:	fb04 f406 	mul.w	r4, r4, r6
 8023544:	fb02 8c0c 	mla	ip, r2, ip, r8
 8023548:	fb02 e707 	mla	r7, r2, r7, lr
 802354c:	9e03      	ldr	r6, [sp, #12]
 802354e:	f899 8001 	ldrb.w	r8, [r9, #1]
 8023552:	f899 e002 	ldrb.w	lr, [r9, #2]
 8023556:	fb02 4206 	mla	r2, r2, r6, r4
 802355a:	fb00 cc08 	mla	ip, r0, r8, ip
 802355e:	fb00 770e 	mla	r7, r0, lr, r7
 8023562:	f893 8001 	ldrb.w	r8, [r3, #1]
 8023566:	f893 e002 	ldrb.w	lr, [r3, #2]
 802356a:	fb00 220a 	mla	r2, r0, sl, r2
 802356e:	fb05 c808 	mla	r8, r5, r8, ip
 8023572:	fb05 7e0e 	mla	lr, r5, lr, r7
 8023576:	9805      	ldr	r0, [sp, #20]
 8023578:	f8bd 9008 	ldrh.w	r9, [sp, #8]
 802357c:	fb05 2500 	mla	r5, r5, r0, r2
 8023580:	9a04      	ldr	r2, [sp, #16]
 8023582:	fa1f f38b 	uxth.w	r3, fp
 8023586:	f3c8 2807 	ubfx	r8, r8, #8, #8
 802358a:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 802358e:	fb12 f609 	smulbb	r6, r2, r9
 8023592:	fb1e fe03 	smulbb	lr, lr, r3
 8023596:	fb18 f803 	smulbb	r8, r8, r3
 802359a:	784a      	ldrb	r2, [r1, #1]
 802359c:	7888      	ldrb	r0, [r1, #2]
 802359e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80235a2:	fb05 6503 	mla	r5, r5, r3, r6
 80235a6:	fb02 8809 	mla	r8, r2, r9, r8
 80235aa:	fb00 e909 	mla	r9, r0, r9, lr
 80235ae:	b2ad      	uxth	r5, r5
 80235b0:	fa1f f888 	uxth.w	r8, r8
 80235b4:	fa1f f989 	uxth.w	r9, r9
 80235b8:	f108 0001 	add.w	r0, r8, #1
 80235bc:	f109 0201 	add.w	r2, r9, #1
 80235c0:	1c6b      	adds	r3, r5, #1
 80235c2:	eb00 2818 	add.w	r8, r0, r8, lsr #8
 80235c6:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 80235ca:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80235ce:	ea4f 2828 	mov.w	r8, r8, asr #8
 80235d2:	ea4f 2929 	mov.w	r9, r9, asr #8
 80235d6:	122d      	asrs	r5, r5, #8
 80235d8:	f881 8001 	strb.w	r8, [r1, #1]
 80235dc:	f881 9002 	strb.w	r9, [r1, #2]
 80235e0:	700d      	strb	r5, [r1, #0]
 80235e2:	b007      	add	sp, #28
 80235e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80235e8:	b388      	cbz	r0, 802364e <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1ae>
 80235ea:	2c00      	cmp	r4, #0
 80235ec:	db44      	blt.n	8023678 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1d8>
 80235ee:	42a6      	cmp	r6, r4
 80235f0:	dd42      	ble.n	8023678 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1d8>
 80235f2:	f81e 9006 	ldrb.w	r9, [lr, r6]
 80235f6:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80235fa:	4499      	add	r9, r3
 80235fc:	3401      	adds	r4, #1
 80235fe:	f899 a000 	ldrb.w	sl, [r9]
 8023602:	d435      	bmi.n	8023670 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1d0>
 8023604:	42a6      	cmp	r6, r4
 8023606:	dd33      	ble.n	8023670 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1d0>
 8023608:	2d00      	cmp	r5, #0
 802360a:	d043      	beq.n	8023694 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1f4>
 802360c:	4476      	add	r6, lr
 802360e:	7872      	ldrb	r2, [r6, #1]
 8023610:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023614:	5c9c      	ldrb	r4, [r3, r2]
 8023616:	4413      	add	r3, r2
 8023618:	9405      	str	r4, [sp, #20]
 802361a:	e76f      	b.n	80234fc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x5c>
 802361c:	2c00      	cmp	r4, #0
 802361e:	db01      	blt.n	8023624 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x184>
 8023620:	42a6      	cmp	r6, r4
 8023622:	dc1f      	bgt.n	8023664 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1c4>
 8023624:	460f      	mov	r7, r1
 8023626:	783a      	ldrb	r2, [r7, #0]
 8023628:	9203      	str	r2, [sp, #12]
 802362a:	1c62      	adds	r2, r4, #1
 802362c:	d40b      	bmi.n	8023646 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1a6>
 802362e:	4296      	cmp	r6, r2
 8023630:	dd09      	ble.n	8023646 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1a6>
 8023632:	b31d      	cbz	r5, 802367c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1dc>
 8023634:	f89e c001 	ldrb.w	ip, [lr, #1]
 8023638:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802363c:	f813 200c 	ldrb.w	r2, [r3, ip]
 8023640:	449c      	add	ip, r3
 8023642:	9201      	str	r2, [sp, #4]
 8023644:	e74f      	b.n	80234e6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x46>
 8023646:	780a      	ldrb	r2, [r1, #0]
 8023648:	468c      	mov	ip, r1
 802364a:	9201      	str	r2, [sp, #4]
 802364c:	e74b      	b.n	80234e6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x46>
 802364e:	2d0f      	cmp	r5, #15
 8023650:	f891 a000 	ldrb.w	sl, [r1]
 8023654:	d822      	bhi.n	802369c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1fc>
 8023656:	f8cd a010 	str.w	sl, [sp, #16]
 802365a:	460b      	mov	r3, r1
 802365c:	4689      	mov	r9, r1
 802365e:	f8cd a014 	str.w	sl, [sp, #20]
 8023662:	e753      	b.n	802350c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x6c>
 8023664:	f812 700c 	ldrb.w	r7, [r2, ip]
 8023668:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802366c:	441f      	add	r7, r3
 802366e:	e7da      	b.n	8023626 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x186>
 8023670:	780b      	ldrb	r3, [r1, #0]
 8023672:	9305      	str	r3, [sp, #20]
 8023674:	460b      	mov	r3, r1
 8023676:	e741      	b.n	80234fc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x5c>
 8023678:	4689      	mov	r9, r1
 802367a:	e7bf      	b.n	80235fc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x15c>
 802367c:	780a      	ldrb	r2, [r1, #0]
 802367e:	f1b8 0f00 	cmp.w	r8, #0
 8023682:	9201      	str	r2, [sp, #4]
 8023684:	468c      	mov	ip, r1
 8023686:	f6bf af31 	bge.w	80234ec <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x4c>
 802368a:	460b      	mov	r3, r1
 802368c:	4689      	mov	r9, r1
 802368e:	9205      	str	r2, [sp, #20]
 8023690:	4692      	mov	sl, r2
 8023692:	e736      	b.n	8023502 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x62>
 8023694:	780b      	ldrb	r3, [r1, #0]
 8023696:	9305      	str	r3, [sp, #20]
 8023698:	460b      	mov	r3, r1
 802369a:	e732      	b.n	8023502 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x62>
 802369c:	4b03      	ldr	r3, [pc, #12]	@ (80236ac <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x20c>)
 802369e:	4a04      	ldr	r2, [pc, #16]	@ (80236b0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x210>)
 80236a0:	f44f 7170 	mov.w	r1, #960	@ 0x3c0
 80236a4:	4803      	ldr	r0, [pc, #12]	@ (80236b4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x214>)
 80236a6:	f001 fb45 	bl	8024d34 <__assert_func>
 80236aa:	bf00      	nop
 80236ac:	08027d5c 	.word	0x08027d5c
 80236b0:	080283d8 	.word	0x080283d8
 80236b4:	08027ee4 	.word	0x08027ee4

080236b8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80236b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80236bc:	ed2d 8b08 	vpush	{d8-d11}
 80236c0:	b095      	sub	sp, #84	@ 0x54
 80236c2:	f89d 40bc 	ldrb.w	r4, [sp, #188]	@ 0xbc
 80236c6:	9013      	str	r0, [sp, #76]	@ 0x4c
 80236c8:	43e0      	mvns	r0, r4
 80236ca:	e9dd a727 	ldrd	sl, r7, [sp, #156]	@ 0x9c
 80236ce:	eeb0 aa40 	vmov.f32	s20, s0
 80236d2:	eef0 9a60 	vmov.f32	s19, s1
 80236d6:	eeb0 9a41 	vmov.f32	s18, s2
 80236da:	eef0 8a62 	vmov.f32	s17, s5
 80236de:	eeb0 8a43 	vmov.f32	s16, s6
 80236e2:	eef0 ba44 	vmov.f32	s23, s8
 80236e6:	eeb0 ba64 	vmov.f32	s22, s9
 80236ea:	eef0 aa45 	vmov.f32	s21, s10
 80236ee:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 80236f2:	9411      	str	r4, [sp, #68]	@ 0x44
 80236f4:	469b      	mov	fp, r3
 80236f6:	e9dd 422b 	ldrd	r4, r2, [sp, #172]	@ 0xac
 80236fa:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 80236fc:	6861      	ldr	r1, [r4, #4]
 80236fe:	fb01 2303 	mla	r3, r1, r3, r2
 8023702:	6821      	ldr	r1, [r4, #0]
 8023704:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 8023706:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
 8023708:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802370c:	6852      	ldr	r2, [r2, #4]
 802370e:	6824      	ldr	r4, [r4, #0]
 8023710:	930d      	str	r3, [sp, #52]	@ 0x34
 8023712:	b2c3      	uxtb	r3, r0
 8023714:	930b      	str	r3, [sp, #44]	@ 0x2c
 8023716:	1d13      	adds	r3, r2, #4
 8023718:	940a      	str	r4, [sp, #40]	@ 0x28
 802371a:	9308      	str	r3, [sp, #32]
 802371c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802371e:	2b00      	cmp	r3, #0
 8023720:	dc02      	bgt.n	8023728 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8023722:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8023724:	2b00      	cmp	r3, #0
 8023726:	dd6c      	ble.n	8023802 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8023728:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802372a:	f1bb 0f00 	cmp.w	fp, #0
 802372e:	e9d3 5e02 	ldrd	r5, lr, [r3, #8]
 8023732:	b228      	sxth	r0, r5
 8023734:	fa0f f68e 	sxth.w	r6, lr
 8023738:	f340 8245 	ble.w	8023bc6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50e>
 802373c:	e9dd 8929 	ldrd	r8, r9, [sp, #164]	@ 0xa4
 8023740:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8023742:	1e44      	subs	r4, r0, #1
 8023744:	f106 3cff 	add.w	ip, r6, #4294967295
 8023748:	f8cd e024 	str.w	lr, [sp, #36]	@ 0x24
 802374c:	ea5f 432a 	movs.w	r3, sl, asr #16
 8023750:	ea4f 4127 	mov.w	r1, r7, asr #16
 8023754:	d405      	bmi.n	8023762 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8023756:	42a3      	cmp	r3, r4
 8023758:	da03      	bge.n	8023762 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802375a:	2900      	cmp	r1, #0
 802375c:	db01      	blt.n	8023762 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802375e:	4561      	cmp	r1, ip
 8023760:	db54      	blt.n	802380c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8023762:	f113 0e01 	adds.w	lr, r3, #1
 8023766:	d407      	bmi.n	8023778 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 8023768:	4586      	cmp	lr, r0
 802376a:	dc05      	bgt.n	8023778 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802376c:	f111 0e01 	adds.w	lr, r1, #1
 8023770:	d402      	bmi.n	8023778 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 8023772:	45b6      	cmp	lr, r6
 8023774:	f340 8189 	ble.w	8023a8a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 8023778:	f1bb 0b01 	subs.w	fp, fp, #1
 802377c:	44c2      	add	sl, r8
 802377e:	444f      	add	r7, r9
 8023780:	f102 0204 	add.w	r2, r2, #4
 8023784:	d1e2      	bne.n	802374c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8023786:	920d      	str	r2, [sp, #52]	@ 0x34
 8023788:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802378a:	2b00      	cmp	r3, #0
 802378c:	dd39      	ble.n	8023802 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802378e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8023792:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8023796:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802379a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802379e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80237a2:	ee29 6aa7 	vmul.f32	s12, s19, s15
 80237a6:	ee69 7a27 	vmul.f32	s15, s18, s15
 80237aa:	ee76 6a68 	vsub.f32	s13, s12, s17
 80237ae:	ee37 7ac8 	vsub.f32	s14, s15, s16
 80237b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80237b6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80237ba:	ee16 2a90 	vmov	r2, s13
 80237be:	3b01      	subs	r3, #1
 80237c0:	930e      	str	r3, [sp, #56]	@ 0x38
 80237c2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80237c4:	fb92 f3f3 	sdiv	r3, r2, r3
 80237c8:	ee17 2a10 	vmov	r2, s14
 80237cc:	eeb0 7a48 	vmov.f32	s14, s16
 80237d0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80237d4:	ee17 7a10 	vmov	r7, s14
 80237d8:	eeb0 7a68 	vmov.f32	s14, s17
 80237dc:	9329      	str	r3, [sp, #164]	@ 0xa4
 80237de:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80237e0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80237e4:	fb92 f3f3 	sdiv	r3, r2, r3
 80237e8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80237ea:	932a      	str	r3, [sp, #168]	@ 0xa8
 80237ec:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80237ee:	ee17 aa10 	vmov	sl, s14
 80237f2:	eeb0 8a67 	vmov.f32	s16, s15
 80237f6:	eef0 8a46 	vmov.f32	s17, s12
 80237fa:	bf14      	ite	ne
 80237fc:	469b      	movne	fp, r3
 80237fe:	4693      	moveq	fp, r2
 8023800:	e78c      	b.n	802371c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8023802:	b015      	add	sp, #84	@ 0x54
 8023804:	ecbd 8b08 	vpop	{d8-d11}
 8023808:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802380c:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8023810:	920d      	str	r2, [sp, #52]	@ 0x34
 8023812:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 8023814:	f10b 32ff 	add.w	r2, fp, #4294967295
 8023818:	fb01 a302 	mla	r3, r1, r2, sl
 802381c:	141b      	asrs	r3, r3, #16
 802381e:	9209      	str	r2, [sp, #36]	@ 0x24
 8023820:	f100 80d3 	bmi.w	80239ca <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 8023824:	42a3      	cmp	r3, r4
 8023826:	f280 80d0 	bge.w	80239ca <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 802382a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802382c:	fb03 7302 	mla	r3, r3, r2, r7
 8023830:	141b      	asrs	r3, r3, #16
 8023832:	f100 80ca 	bmi.w	80239ca <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 8023836:	3e01      	subs	r6, #1
 8023838:	42b3      	cmp	r3, r6
 802383a:	f280 80c6 	bge.w	80239ca <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 802383e:	f1bb 0f00 	cmp.w	fp, #0
 8023842:	dda1      	ble.n	8023788 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 8023844:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8023848:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
 802384c:	930c      	str	r3, [sp, #48]	@ 0x30
 802384e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8023850:	f103 0804 	add.w	r8, r3, #4
 8023854:	e08f      	b.n	8023976 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8023856:	7861      	ldrb	r1, [r4, #1]
 8023858:	eb04 0c00 	add.w	ip, r4, r0
 802385c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8023860:	4431      	add	r1, r6
 8023862:	2a00      	cmp	r2, #0
 8023864:	f000 80a3 	beq.w	80239ae <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f6>
 8023868:	5c20      	ldrb	r0, [r4, r0]
 802386a:	f89c c001 	ldrb.w	ip, [ip, #1]
 802386e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023872:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8023876:	4430      	add	r0, r6
 8023878:	44b4      	add	ip, r6
 802387a:	b29b      	uxth	r3, r3
 802387c:	b292      	uxth	r2, r2
 802387e:	fb03 f402 	mul.w	r4, r3, r2
 8023882:	011b      	lsls	r3, r3, #4
 8023884:	f891 b001 	ldrb.w	fp, [r1, #1]
 8023888:	1b1e      	subs	r6, r3, r4
 802388a:	f891 9002 	ldrb.w	r9, [r1, #2]
 802388e:	b2b6      	uxth	r6, r6
 8023890:	7809      	ldrb	r1, [r1, #0]
 8023892:	fb06 fb0b 	mul.w	fp, r6, fp
 8023896:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 802389a:	b292      	uxth	r2, r2
 802389c:	fb06 f909 	mul.w	r9, r6, r9
 80238a0:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 80238a4:	fb06 f601 	mul.w	r6, r6, r1
 80238a8:	1a9b      	subs	r3, r3, r2
 80238aa:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80238ae:	b29b      	uxth	r3, r3
 80238b0:	f89e e002 	ldrb.w	lr, [lr, #2]
 80238b4:	fb03 bb01 	mla	fp, r3, r1, fp
 80238b8:	9908      	ldr	r1, [sp, #32]
 80238ba:	fb03 990e 	mla	r9, r3, lr, r9
 80238be:	5d49      	ldrb	r1, [r1, r5]
 80238c0:	7885      	ldrb	r5, [r0, #2]
 80238c2:	fb03 6301 	mla	r3, r3, r1, r6
 80238c6:	f890 e001 	ldrb.w	lr, [r0, #1]
 80238ca:	fb02 9905 	mla	r9, r2, r5, r9
 80238ce:	7801      	ldrb	r1, [r0, #0]
 80238d0:	fb02 bb0e 	mla	fp, r2, lr, fp
 80238d4:	f89c 0002 	ldrb.w	r0, [ip, #2]
 80238d8:	fb02 3301 	mla	r3, r2, r1, r3
 80238dc:	f89c e001 	ldrb.w	lr, [ip, #1]
 80238e0:	fb04 9900 	mla	r9, r4, r0, r9
 80238e4:	f89c 1000 	ldrb.w	r1, [ip]
 80238e8:	fb04 bb0e 	mla	fp, r4, lr, fp
 80238ec:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80238ee:	f818 cc04 	ldrb.w	ip, [r8, #-4]
 80238f2:	fb04 3301 	mla	r3, r4, r1, r3
 80238f6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80238f8:	f3c9 2907 	ubfx	r9, r9, #8, #8
 80238fc:	fb19 f902 	smulbb	r9, r9, r2
 8023900:	fb1c fc01 	smulbb	ip, ip, r1
 8023904:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8023908:	f818 5c02 	ldrb.w	r5, [r8, #-2]
 802390c:	fb1b fb02 	smulbb	fp, fp, r2
 8023910:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023914:	f818 6c03 	ldrb.w	r6, [r8, #-3]
 8023918:	fb05 9901 	mla	r9, r5, r1, r9
 802391c:	fb03 c302 	mla	r3, r3, r2, ip
 8023920:	fb06 bb01 	mla	fp, r6, r1, fp
 8023924:	fa1f f989 	uxth.w	r9, r9
 8023928:	b29b      	uxth	r3, r3
 802392a:	f109 0101 	add.w	r1, r9, #1
 802392e:	1c5a      	adds	r2, r3, #1
 8023930:	fa1f fb8b 	uxth.w	fp, fp
 8023934:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 8023938:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802393c:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 802393e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8023940:	f10b 0001 	add.w	r0, fp, #1
 8023944:	3a01      	subs	r2, #1
 8023946:	eb00 2b1b 	add.w	fp, r0, fp, lsr #8
 802394a:	448a      	add	sl, r1
 802394c:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 802394e:	9209      	str	r2, [sp, #36]	@ 0x24
 8023950:	ea4f 2b2b 	mov.w	fp, fp, asr #8
 8023954:	ea4f 2929 	mov.w	r9, r9, asr #8
 8023958:	121b      	asrs	r3, r3, #8
 802395a:	3201      	adds	r2, #1
 802395c:	f808 bc03 	strb.w	fp, [r8, #-3]
 8023960:	f808 9c02 	strb.w	r9, [r8, #-2]
 8023964:	f808 3c04 	strb.w	r3, [r8, #-4]
 8023968:	440f      	add	r7, r1
 802396a:	f108 0804 	add.w	r8, r8, #4
 802396e:	d025      	beq.n	80239bc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8023970:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8023972:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8023976:	ea4f 432a 	mov.w	r3, sl, asr #16
 802397a:	143c      	asrs	r4, r7, #16
 802397c:	fb00 3404 	mla	r4, r0, r4, r3
 8023980:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8023982:	9e08      	ldr	r6, [sp, #32]
 8023984:	5d15      	ldrb	r5, [r2, r4]
 8023986:	f3ca 3303 	ubfx	r3, sl, #12, #4
 802398a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802398e:	4414      	add	r4, r2
 8023990:	eb06 0e05 	add.w	lr, r6, r5
 8023994:	f3c7 3203 	ubfx	r2, r7, #12, #4
 8023998:	2b00      	cmp	r3, #0
 802399a:	f47f af5c 	bne.w	8023856 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 802399e:	b14a      	cbz	r2, 80239b4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80239a0:	5c20      	ldrb	r0, [r4, r0]
 80239a2:	46f4      	mov	ip, lr
 80239a4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80239a8:	4430      	add	r0, r6
 80239aa:	4671      	mov	r1, lr
 80239ac:	e765      	b.n	802387a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80239ae:	46f4      	mov	ip, lr
 80239b0:	4670      	mov	r0, lr
 80239b2:	e762      	b.n	802387a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80239b4:	46f4      	mov	ip, lr
 80239b6:	4670      	mov	r0, lr
 80239b8:	4671      	mov	r1, lr
 80239ba:	e75e      	b.n	802387a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80239bc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80239be:	f8dd b040 	ldr.w	fp, [sp, #64]	@ 0x40
 80239c2:	eb03 038b 	add.w	r3, r3, fp, lsl #2
 80239c6:	930d      	str	r3, [sp, #52]	@ 0x34
 80239c8:	e6de      	b.n	8023788 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 80239ca:	f1bb 0f00 	cmp.w	fp, #0
 80239ce:	f77f aedb 	ble.w	8023788 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 80239d2:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
 80239d6:	ea4f 432a 	mov.w	r3, sl, asr #16
 80239da:	1439      	asrs	r1, r7, #16
 80239dc:	4676      	mov	r6, lr
 80239de:	f8dd b034 	ldr.w	fp, [sp, #52]	@ 0x34
 80239e2:	f8dd 80b8 	ldr.w	r8, [sp, #184]	@ 0xb8
 80239e6:	2b00      	cmp	r3, #0
 80239e8:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80239ec:	f3c7 3203 	ubfx	r2, r7, #12, #4
 80239f0:	db29      	blt.n	8023a46 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 80239f2:	1e6c      	subs	r4, r5, #1
 80239f4:	42a3      	cmp	r3, r4
 80239f6:	da26      	bge.n	8023a46 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 80239f8:	2900      	cmp	r1, #0
 80239fa:	db24      	blt.n	8023a46 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 80239fc:	1e74      	subs	r4, r6, #1
 80239fe:	42a1      	cmp	r1, r4
 8023a00:	da21      	bge.n	8023a46 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 8023a02:	b22c      	sxth	r4, r5
 8023a04:	fb01 3304 	mla	r3, r1, r4, r3
 8023a08:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8023a0a:	5ce9      	ldrb	r1, [r5, r3]
 8023a0c:	442b      	add	r3, r5
 8023a0e:	9d08      	ldr	r5, [sp, #32]
 8023a10:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8023a14:	9112      	str	r1, [sp, #72]	@ 0x48
 8023a16:	eb05 0c01 	add.w	ip, r5, r1
 8023a1a:	2800      	cmp	r0, #0
 8023a1c:	d04e      	beq.n	8023abc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 8023a1e:	f893 e001 	ldrb.w	lr, [r3, #1]
 8023a22:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8023a26:	44ae      	add	lr, r5
 8023a28:	2a00      	cmp	r2, #0
 8023a2a:	f000 80c7 	beq.w	8023bbc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 8023a2e:	1919      	adds	r1, r3, r4
 8023a30:	7849      	ldrb	r1, [r1, #1]
 8023a32:	5d1c      	ldrb	r4, [r3, r4]
 8023a34:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8023a38:	186b      	adds	r3, r5, r1
 8023a3a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8023a3e:	930c      	str	r3, [sp, #48]	@ 0x30
 8023a40:	1963      	adds	r3, r4, r5
 8023a42:	9310      	str	r3, [sp, #64]	@ 0x40
 8023a44:	e041      	b.n	8023aca <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 8023a46:	1c5c      	adds	r4, r3, #1
 8023a48:	d405      	bmi.n	8023a56 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8023a4a:	42ac      	cmp	r4, r5
 8023a4c:	dc03      	bgt.n	8023a56 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8023a4e:	1c4c      	adds	r4, r1, #1
 8023a50:	d401      	bmi.n	8023a56 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8023a52:	42b4      	cmp	r4, r6
 8023a54:	dd21      	ble.n	8023a9a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8023a56:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8023a58:	f1b9 0f00 	cmp.w	r9, #0
 8023a5c:	449a      	add	sl, r3
 8023a5e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8023a60:	f10b 0b04 	add.w	fp, fp, #4
 8023a64:	441f      	add	r7, r3
 8023a66:	dd07      	ble.n	8023a78 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8023a68:	e9d8 5602 	ldrd	r5, r6, [r8, #8]
 8023a6c:	f109 39ff 	add.w	r9, r9, #4294967295
 8023a70:	ea4f 432a 	mov.w	r3, sl, asr #16
 8023a74:	1439      	asrs	r1, r7, #16
 8023a76:	e7b6      	b.n	80239e6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8023a78:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023a7a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8023a7c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8023a80:	3301      	adds	r3, #1
 8023a82:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8023a86:	930d      	str	r3, [sp, #52]	@ 0x34
 8023a88:	e67e      	b.n	8023788 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 8023a8a:	920d      	str	r2, [sp, #52]	@ 0x34
 8023a8c:	f10b 32ff 	add.w	r2, fp, #4294967295
 8023a90:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8023a94:	4691      	mov	r9, r2
 8023a96:	9209      	str	r2, [sp, #36]	@ 0x24
 8023a98:	e7a0      	b.n	80239dc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8023a9a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8023a9c:	b236      	sxth	r6, r6
 8023a9e:	b22d      	sxth	r5, r5
 8023aa0:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8023aa4:	e9cd 2405 	strd	r2, r4, [sp, #20]
 8023aa8:	9302      	str	r3, [sp, #8]
 8023aaa:	e9cd 5600 	strd	r5, r6, [sp]
 8023aae:	9b08      	ldr	r3, [sp, #32]
 8023ab0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8023ab2:	4659      	mov	r1, fp
 8023ab4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8023ab6:	f7ff fcf3 	bl	80234a0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh>
 8023aba:	e7cc      	b.n	8023a56 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8023abc:	2a00      	cmp	r2, #0
 8023abe:	d173      	bne.n	8023ba8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8023ac0:	46e6      	mov	lr, ip
 8023ac2:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 8023ac6:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 8023aca:	b283      	uxth	r3, r0
 8023acc:	b292      	uxth	r2, r2
 8023ace:	fb03 f002 	mul.w	r0, r3, r2
 8023ad2:	011b      	lsls	r3, r3, #4
 8023ad4:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8023ad8:	f89e 5002 	ldrb.w	r5, [lr, #2]
 8023adc:	1a19      	subs	r1, r3, r0
 8023ade:	b289      	uxth	r1, r1
 8023ae0:	f89e e000 	ldrb.w	lr, [lr]
 8023ae4:	fb01 f505 	mul.w	r5, r1, r5
 8023ae8:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 8023aec:	fb01 f606 	mul.w	r6, r1, r6
 8023af0:	b292      	uxth	r2, r2
 8023af2:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 8023af6:	fb01 f40e 	mul.w	r4, r1, lr
 8023afa:	1a9b      	subs	r3, r3, r2
 8023afc:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8023b00:	f89c e002 	ldrb.w	lr, [ip, #2]
 8023b04:	b29b      	uxth	r3, r3
 8023b06:	fb03 6601 	mla	r6, r3, r1, r6
 8023b0a:	fb03 5e0e 	mla	lr, r3, lr, r5
 8023b0e:	9908      	ldr	r1, [sp, #32]
 8023b10:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8023b12:	5d49      	ldrb	r1, [r1, r5]
 8023b14:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8023b16:	fb03 4301 	mla	r3, r3, r1, r4
 8023b1a:	f895 c001 	ldrb.w	ip, [r5, #1]
 8023b1e:	78ad      	ldrb	r5, [r5, #2]
 8023b20:	fb02 6c0c 	mla	ip, r2, ip, r6
 8023b24:	fb02 e505 	mla	r5, r2, r5, lr
 8023b28:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8023b2a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8023b2c:	784e      	ldrb	r6, [r1, #1]
 8023b2e:	7824      	ldrb	r4, [r4, #0]
 8023b30:	7889      	ldrb	r1, [r1, #2]
 8023b32:	fb02 3204 	mla	r2, r2, r4, r3
 8023b36:	fb00 cc06 	mla	ip, r0, r6, ip
 8023b3a:	fb00 5501 	mla	r5, r0, r1, r5
 8023b3e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8023b40:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8023b42:	780b      	ldrb	r3, [r1, #0]
 8023b44:	f89b 4000 	ldrb.w	r4, [fp]
 8023b48:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 8023b4c:	fb00 2003 	mla	r0, r0, r3, r2
 8023b50:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8023b54:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8023b58:	fb15 f501 	smulbb	r5, r5, r1
 8023b5c:	fb14 f406 	smulbb	r4, r4, r6
 8023b60:	fb1c fc01 	smulbb	ip, ip, r1
 8023b64:	f89b 2001 	ldrb.w	r2, [fp, #1]
 8023b68:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8023b6c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8023b70:	fb00 4001 	mla	r0, r0, r1, r4
 8023b74:	fb03 5306 	mla	r3, r3, r6, r5
 8023b78:	fb02 c106 	mla	r1, r2, r6, ip
 8023b7c:	b29b      	uxth	r3, r3
 8023b7e:	b280      	uxth	r0, r0
 8023b80:	b289      	uxth	r1, r1
 8023b82:	1c5a      	adds	r2, r3, #1
 8023b84:	1c4d      	adds	r5, r1, #1
 8023b86:	1c44      	adds	r4, r0, #1
 8023b88:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023b8c:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8023b90:	eb04 2310 	add.w	r3, r4, r0, lsr #8
 8023b94:	1209      	asrs	r1, r1, #8
 8023b96:	1212      	asrs	r2, r2, #8
 8023b98:	121b      	asrs	r3, r3, #8
 8023b9a:	f88b 1001 	strb.w	r1, [fp, #1]
 8023b9e:	f88b 2002 	strb.w	r2, [fp, #2]
 8023ba2:	f88b 3000 	strb.w	r3, [fp]
 8023ba6:	e756      	b.n	8023a56 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8023ba8:	5d1c      	ldrb	r4, [r3, r4]
 8023baa:	9b08      	ldr	r3, [sp, #32]
 8023bac:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8023bb0:	18e3      	adds	r3, r4, r3
 8023bb2:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 8023bb6:	9310      	str	r3, [sp, #64]	@ 0x40
 8023bb8:	46e6      	mov	lr, ip
 8023bba:	e786      	b.n	8023aca <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 8023bbc:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 8023bc0:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 8023bc4:	e781      	b.n	8023aca <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 8023bc6:	f43f addf 	beq.w	8023788 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 8023bca:	1e44      	subs	r4, r0, #1
 8023bcc:	e621      	b.n	8023812 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15a>
 8023bce:	bf00      	nop

08023bd0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh>:
 8023bd0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023bd4:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 8023bd8:	e9dd 640c 	ldrd	r6, r4, [sp, #48]	@ 0x30
 8023bdc:	fb04 6e0c 	mla	lr, r4, ip, r6
 8023be0:	2c00      	cmp	r4, #0
 8023be2:	461f      	mov	r7, r3
 8023be4:	eb02 0a0e 	add.w	sl, r2, lr
 8023be8:	f104 0801 	add.w	r8, r4, #1
 8023bec:	f9bd 902c 	ldrsh.w	r9, [sp, #44]	@ 0x2c
 8023bf0:	f89d 5038 	ldrb.w	r5, [sp, #56]	@ 0x38
 8023bf4:	f89d 003c 	ldrb.w	r0, [sp, #60]	@ 0x3c
 8023bf8:	db01      	blt.n	8023bfe <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x2e>
 8023bfa:	45a1      	cmp	r9, r4
 8023bfc:	dc6f      	bgt.n	8023cde <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x10e>
 8023bfe:	f891 b000 	ldrb.w	fp, [r1]
 8023c02:	460b      	mov	r3, r1
 8023c04:	465c      	mov	r4, fp
 8023c06:	468e      	mov	lr, r1
 8023c08:	f1b8 0f00 	cmp.w	r8, #0
 8023c0c:	db01      	blt.n	8023c12 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x42>
 8023c0e:	45c1      	cmp	r9, r8
 8023c10:	dc4a      	bgt.n	8023ca8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0xd8>
 8023c12:	f891 9000 	ldrb.w	r9, [r1]
 8023c16:	460f      	mov	r7, r1
 8023c18:	46ca      	mov	sl, r9
 8023c1a:	4688      	mov	r8, r1
 8023c1c:	2d0f      	cmp	r5, #15
 8023c1e:	f200 8097 	bhi.w	8023d50 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x180>
 8023c22:	280f      	cmp	r0, #15
 8023c24:	f200 8094 	bhi.w	8023d50 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x180>
 8023c28:	b2aa      	uxth	r2, r5
 8023c2a:	b280      	uxth	r0, r0
 8023c2c:	fb02 f600 	mul.w	r6, r2, r0
 8023c30:	0112      	lsls	r2, r2, #4
 8023c32:	1b95      	subs	r5, r2, r6
 8023c34:	f893 c001 	ldrb.w	ip, [r3, #1]
 8023c38:	789b      	ldrb	r3, [r3, #2]
 8023c3a:	b2ad      	uxth	r5, r5
 8023c3c:	ebc6 1000 	rsb	r0, r6, r0, lsl #4
 8023c40:	fb05 f404 	mul.w	r4, r5, r4
 8023c44:	fb05 fc0c 	mul.w	ip, r5, ip
 8023c48:	fb05 f503 	mul.w	r5, r5, r3
 8023c4c:	b280      	uxth	r0, r0
 8023c4e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8023c52:	f89e 3001 	ldrb.w	r3, [lr, #1]
 8023c56:	1a12      	subs	r2, r2, r0
 8023c58:	f89e e002 	ldrb.w	lr, [lr, #2]
 8023c5c:	b292      	uxth	r2, r2
 8023c5e:	fb02 cc03 	mla	ip, r2, r3, ip
 8023c62:	fb02 440b 	mla	r4, r2, fp, r4
 8023c66:	fb02 520e 	mla	r2, r2, lr, r5
 8023c6a:	f898 3001 	ldrb.w	r3, [r8, #1]
 8023c6e:	f898 8002 	ldrb.w	r8, [r8, #2]
 8023c72:	fb00 cc03 	mla	ip, r0, r3, ip
 8023c76:	fb00 4909 	mla	r9, r0, r9, r4
 8023c7a:	fb00 2008 	mla	r0, r0, r8, r2
 8023c7e:	787b      	ldrb	r3, [r7, #1]
 8023c80:	78ba      	ldrb	r2, [r7, #2]
 8023c82:	fb06 9a0a 	mla	sl, r6, sl, r9
 8023c86:	fb06 c303 	mla	r3, r6, r3, ip
 8023c8a:	fb06 0602 	mla	r6, r6, r2, r0
 8023c8e:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8023c92:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8023c96:	0236      	lsls	r6, r6, #8
 8023c98:	ea43 030a 	orr.w	r3, r3, sl
 8023c9c:	f406 067f 	and.w	r6, r6, #16711680	@ 0xff0000
 8023ca0:	4333      	orrs	r3, r6
 8023ca2:	600b      	str	r3, [r1, #0]
 8023ca4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023ca8:	b378      	cbz	r0, 8023d0a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x13a>
 8023caa:	2e00      	cmp	r6, #0
 8023cac:	db3f      	blt.n	8023d2e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x15e>
 8023cae:	45b4      	cmp	ip, r6
 8023cb0:	dd3d      	ble.n	8023d2e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x15e>
 8023cb2:	f81a 800c 	ldrb.w	r8, [sl, ip]
 8023cb6:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8023cba:	44b8      	add	r8, r7
 8023cbc:	3601      	adds	r6, #1
 8023cbe:	f898 9000 	ldrb.w	r9, [r8]
 8023cc2:	d430      	bmi.n	8023d26 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x156>
 8023cc4:	45b4      	cmp	ip, r6
 8023cc6:	dd2e      	ble.n	8023d26 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x156>
 8023cc8:	2d00      	cmp	r5, #0
 8023cca:	d03d      	beq.n	8023d48 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x178>
 8023ccc:	44d4      	add	ip, sl
 8023cce:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8023cd2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023cd6:	f817 a002 	ldrb.w	sl, [r7, r2]
 8023cda:	4417      	add	r7, r2
 8023cdc:	e79e      	b.n	8023c1c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x4c>
 8023cde:	2e00      	cmp	r6, #0
 8023ce0:	db01      	blt.n	8023ce6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x116>
 8023ce2:	45b4      	cmp	ip, r6
 8023ce4:	dc19      	bgt.n	8023d1a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x14a>
 8023ce6:	468e      	mov	lr, r1
 8023ce8:	1c73      	adds	r3, r6, #1
 8023cea:	f89e b000 	ldrb.w	fp, [lr]
 8023cee:	d409      	bmi.n	8023d04 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x134>
 8023cf0:	459c      	cmp	ip, r3
 8023cf2:	dd07      	ble.n	8023d04 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x134>
 8023cf4:	b1ed      	cbz	r5, 8023d32 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x162>
 8023cf6:	f89a 3001 	ldrb.w	r3, [sl, #1]
 8023cfa:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8023cfe:	5cfc      	ldrb	r4, [r7, r3]
 8023d00:	443b      	add	r3, r7
 8023d02:	e781      	b.n	8023c08 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x38>
 8023d04:	780c      	ldrb	r4, [r1, #0]
 8023d06:	460b      	mov	r3, r1
 8023d08:	e77e      	b.n	8023c08 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x38>
 8023d0a:	2d0f      	cmp	r5, #15
 8023d0c:	f891 9000 	ldrb.w	r9, [r1]
 8023d10:	d81e      	bhi.n	8023d50 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x180>
 8023d12:	460f      	mov	r7, r1
 8023d14:	4688      	mov	r8, r1
 8023d16:	46ca      	mov	sl, r9
 8023d18:	e786      	b.n	8023c28 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x58>
 8023d1a:	f812 e00e 	ldrb.w	lr, [r2, lr]
 8023d1e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8023d22:	449e      	add	lr, r3
 8023d24:	e7e0      	b.n	8023ce8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x118>
 8023d26:	f891 a000 	ldrb.w	sl, [r1]
 8023d2a:	460f      	mov	r7, r1
 8023d2c:	e776      	b.n	8023c1c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x4c>
 8023d2e:	4688      	mov	r8, r1
 8023d30:	e7c4      	b.n	8023cbc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0xec>
 8023d32:	f1b8 0f00 	cmp.w	r8, #0
 8023d36:	780c      	ldrb	r4, [r1, #0]
 8023d38:	460b      	mov	r3, r1
 8023d3a:	f6bf af68 	bge.w	8023c0e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x3e>
 8023d3e:	460f      	mov	r7, r1
 8023d40:	4688      	mov	r8, r1
 8023d42:	46a2      	mov	sl, r4
 8023d44:	46a1      	mov	r9, r4
 8023d46:	e76c      	b.n	8023c22 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x52>
 8023d48:	f891 a000 	ldrb.w	sl, [r1]
 8023d4c:	460f      	mov	r7, r1
 8023d4e:	e768      	b.n	8023c22 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x52>
 8023d50:	4b03      	ldr	r3, [pc, #12]	@ (8023d60 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x190>)
 8023d52:	4a04      	ldr	r2, [pc, #16]	@ (8023d64 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x194>)
 8023d54:	f44f 7170 	mov.w	r1, #960	@ 0x3c0
 8023d58:	4803      	ldr	r0, [pc, #12]	@ (8023d68 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x198>)
 8023d5a:	f000 ffeb 	bl	8024d34 <__assert_func>
 8023d5e:	bf00      	nop
 8023d60:	08027d5c 	.word	0x08027d5c
 8023d64:	080283d8 	.word	0x080283d8
 8023d68:	08027ee4 	.word	0x08027ee4

08023d6c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023d6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023d70:	ed2d 8b0a 	vpush	{d8-d12}
 8023d74:	eeb0 aa40 	vmov.f32	s20, s0
 8023d78:	eef0 9a60 	vmov.f32	s19, s1
 8023d7c:	eeb0 9a41 	vmov.f32	s18, s2
 8023d80:	eef0 8a62 	vmov.f32	s17, s5
 8023d84:	eeb0 8a43 	vmov.f32	s16, s6
 8023d88:	eeb0 ca44 	vmov.f32	s24, s8
 8023d8c:	eef0 ba64 	vmov.f32	s23, s9
 8023d90:	eeb0 ba45 	vmov.f32	s22, s10
 8023d94:	eef7 aa00 	vmov.f32	s21, #112	@ 0x3f800000  1.0
 8023d98:	b091      	sub	sp, #68	@ 0x44
 8023d9a:	e9cd 120a 	strd	r1, r2, [sp, #40]	@ 0x28
 8023d9e:	e9dd 9525 	ldrd	r9, r5, [sp, #148]	@ 0x94
 8023da2:	900f      	str	r0, [sp, #60]	@ 0x3c
 8023da4:	4698      	mov	r8, r3
 8023da6:	e9dd 0229 	ldrd	r0, r2, [sp, #164]	@ 0xa4
 8023daa:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8023dac:	6841      	ldr	r1, [r0, #4]
 8023dae:	fb01 2303 	mla	r3, r1, r3, r2
 8023db2:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 8023db4:	6801      	ldr	r1, [r0, #0]
 8023db6:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8023db8:	6852      	ldr	r2, [r2, #4]
 8023dba:	6800      	ldr	r0, [r0, #0]
 8023dbc:	eb01 0a83 	add.w	sl, r1, r3, lsl #2
 8023dc0:	1d13      	adds	r3, r2, #4
 8023dc2:	9009      	str	r0, [sp, #36]	@ 0x24
 8023dc4:	930c      	str	r3, [sp, #48]	@ 0x30
 8023dc6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023dc8:	2b00      	cmp	r3, #0
 8023dca:	dc02      	bgt.n	8023dd2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023dcc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8023dce:	2b00      	cmp	r3, #0
 8023dd0:	dd66      	ble.n	8023ea0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8023dd2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023dd4:	f1b8 0f00 	cmp.w	r8, #0
 8023dd8:	e9d3 4e02 	ldrd	r4, lr, [r3, #8]
 8023ddc:	b221      	sxth	r1, r4
 8023dde:	fa0f f78e 	sxth.w	r7, lr
 8023de2:	f340 81df 	ble.w	80241a4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 8023de6:	1e4e      	subs	r6, r1, #1
 8023de8:	f107 3cff 	add.w	ip, r7, #4294967295
 8023dec:	f8cd e01c 	str.w	lr, [sp, #28]
 8023df0:	e9dd eb27 	ldrd	lr, fp, [sp, #156]	@ 0x9c
 8023df4:	ea5f 4329 	movs.w	r3, r9, asr #16
 8023df8:	ea4f 4025 	mov.w	r0, r5, asr #16
 8023dfc:	d405      	bmi.n	8023e0a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8023dfe:	42b3      	cmp	r3, r6
 8023e00:	da03      	bge.n	8023e0a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8023e02:	2800      	cmp	r0, #0
 8023e04:	db01      	blt.n	8023e0a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8023e06:	4560      	cmp	r0, ip
 8023e08:	db4f      	blt.n	8023eaa <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8023e0a:	1c5a      	adds	r2, r3, #1
 8023e0c:	d406      	bmi.n	8023e1c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8023e0e:	428a      	cmp	r2, r1
 8023e10:	dc04      	bgt.n	8023e1c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8023e12:	1c42      	adds	r2, r0, #1
 8023e14:	d402      	bmi.n	8023e1c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8023e16:	42ba      	cmp	r2, r7
 8023e18:	f340 8157 	ble.w	80240ca <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8023e1c:	f1b8 0801 	subs.w	r8, r8, #1
 8023e20:	44f1      	add	r9, lr
 8023e22:	445d      	add	r5, fp
 8023e24:	f10a 0a04 	add.w	sl, sl, #4
 8023e28:	d1e4      	bne.n	8023df4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8023e2a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023e2c:	2b00      	cmp	r3, #0
 8023e2e:	dd37      	ble.n	8023ea0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8023e30:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8023e34:	ee79 9aab 	vadd.f32	s19, s19, s23
 8023e38:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8023e3c:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8023e40:	ee29 6aa7 	vmul.f32	s12, s19, s15
 8023e44:	ee69 7a27 	vmul.f32	s15, s18, s15
 8023e48:	ee76 6a68 	vsub.f32	s13, s12, s17
 8023e4c:	ee37 7ac8 	vsub.f32	s14, s15, s16
 8023e50:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023e54:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8023e58:	ee16 2a90 	vmov	r2, s13
 8023e5c:	3b01      	subs	r3, #1
 8023e5e:	930a      	str	r3, [sp, #40]	@ 0x28
 8023e60:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023e62:	fb92 f3f3 	sdiv	r3, r2, r3
 8023e66:	ee17 2a10 	vmov	r2, s14
 8023e6a:	eeb0 7a48 	vmov.f32	s14, s16
 8023e6e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8023e72:	ee17 5a10 	vmov	r5, s14
 8023e76:	eeb0 7a68 	vmov.f32	s14, s17
 8023e7a:	9327      	str	r3, [sp, #156]	@ 0x9c
 8023e7c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023e7e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8023e82:	fb92 f3f3 	sdiv	r3, r2, r3
 8023e86:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8023e88:	9328      	str	r3, [sp, #160]	@ 0xa0
 8023e8a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023e8c:	ee17 9a10 	vmov	r9, s14
 8023e90:	eeb0 8a67 	vmov.f32	s16, s15
 8023e94:	eef0 8a46 	vmov.f32	s17, s12
 8023e98:	bf14      	ite	ne
 8023e9a:	4698      	movne	r8, r3
 8023e9c:	4690      	moveq	r8, r2
 8023e9e:	e792      	b.n	8023dc6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8023ea0:	b011      	add	sp, #68	@ 0x44
 8023ea2:	ecbd 8b0a 	vpop	{d8-d12}
 8023ea6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023eaa:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8023eae:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8023eb0:	f108 32ff 	add.w	r2, r8, #4294967295
 8023eb4:	fb00 9302 	mla	r3, r0, r2, r9
 8023eb8:	141b      	asrs	r3, r3, #16
 8023eba:	9207      	str	r2, [sp, #28]
 8023ebc:	f100 80a6 	bmi.w	802400c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8023ec0:	42b3      	cmp	r3, r6
 8023ec2:	f280 80a3 	bge.w	802400c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8023ec6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8023ec8:	fb03 5302 	mla	r3, r3, r2, r5
 8023ecc:	141b      	asrs	r3, r3, #16
 8023ece:	f100 809d 	bmi.w	802400c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8023ed2:	3f01      	subs	r7, #1
 8023ed4:	42bb      	cmp	r3, r7
 8023ed6:	f280 8099 	bge.w	802400c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8023eda:	f1b8 0f00 	cmp.w	r8, #0
 8023ede:	dda4      	ble.n	8023e2a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8023ee0:	f8cd a020 	str.w	sl, [sp, #32]
 8023ee4:	f8cd a034 	str.w	sl, [sp, #52]	@ 0x34
 8023ee8:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 8023eec:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8023ef0:	e065      	b.n	8023fbe <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8023ef2:	f890 c001 	ldrb.w	ip, [r0, #1]
 8023ef6:	1844      	adds	r4, r0, r1
 8023ef8:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8023efc:	44d4      	add	ip, sl
 8023efe:	2a00      	cmp	r2, #0
 8023f00:	d078      	beq.n	8023ff4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8023f02:	5c40      	ldrb	r0, [r0, r1]
 8023f04:	7866      	ldrb	r6, [r4, #1]
 8023f06:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023f0a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8023f0e:	4450      	add	r0, sl
 8023f10:	4456      	add	r6, sl
 8023f12:	b29b      	uxth	r3, r3
 8023f14:	b292      	uxth	r2, r2
 8023f16:	fb03 f402 	mul.w	r4, r3, r2
 8023f1a:	011b      	lsls	r3, r3, #4
 8023f1c:	f89c 8000 	ldrb.w	r8, [ip]
 8023f20:	f89c e001 	ldrb.w	lr, [ip, #1]
 8023f24:	1b19      	subs	r1, r3, r4
 8023f26:	f89c c002 	ldrb.w	ip, [ip, #2]
 8023f2a:	b289      	uxth	r1, r1
 8023f2c:	fb01 fe0e 	mul.w	lr, r1, lr
 8023f30:	fb01 f808 	mul.w	r8, r1, r8
 8023f34:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 8023f38:	fb01 f10c 	mul.w	r1, r1, ip
 8023f3c:	b292      	uxth	r2, r2
 8023f3e:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 8023f42:	f81a b00b 	ldrb.w	fp, [sl, fp]
 8023f46:	f897 c001 	ldrb.w	ip, [r7, #1]
 8023f4a:	1a9b      	subs	r3, r3, r2
 8023f4c:	78bf      	ldrb	r7, [r7, #2]
 8023f4e:	b29b      	uxth	r3, r3
 8023f50:	fb03 880b 	mla	r8, r3, fp, r8
 8023f54:	fb03 ec0c 	mla	ip, r3, ip, lr
 8023f58:	fb03 1307 	mla	r3, r3, r7, r1
 8023f5c:	7881      	ldrb	r1, [r0, #2]
 8023f5e:	f890 b000 	ldrb.w	fp, [r0]
 8023f62:	fb02 3301 	mla	r3, r2, r1, r3
 8023f66:	f890 e001 	ldrb.w	lr, [r0, #1]
 8023f6a:	78b1      	ldrb	r1, [r6, #2]
 8023f6c:	fb02 880b 	mla	r8, r2, fp, r8
 8023f70:	fb02 cc0e 	mla	ip, r2, lr, ip
 8023f74:	fb04 3301 	mla	r3, r4, r1, r3
 8023f78:	f896 b000 	ldrb.w	fp, [r6]
 8023f7c:	f896 e001 	ldrb.w	lr, [r6, #1]
 8023f80:	0219      	lsls	r1, r3, #8
 8023f82:	fb04 880b 	mla	r8, r4, fp, r8
 8023f86:	fb04 cc0e 	mla	ip, r4, lr, ip
 8023f8a:	f401 037f 	and.w	r3, r1, #16711680	@ 0xff0000
 8023f8e:	9927      	ldr	r1, [sp, #156]	@ 0x9c
 8023f90:	9a07      	ldr	r2, [sp, #28]
 8023f92:	4489      	add	r9, r1
 8023f94:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8023f96:	f3c8 2807 	ubfx	r8, r8, #8, #8
 8023f9a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8023f9e:	ea48 080c 	orr.w	r8, r8, ip
 8023fa2:	440d      	add	r5, r1
 8023fa4:	9908      	ldr	r1, [sp, #32]
 8023fa6:	3a01      	subs	r2, #1
 8023fa8:	ea48 0303 	orr.w	r3, r8, r3
 8023fac:	9207      	str	r2, [sp, #28]
 8023fae:	f841 3b04 	str.w	r3, [r1], #4
 8023fb2:	3201      	adds	r2, #1
 8023fb4:	9108      	str	r1, [sp, #32]
 8023fb6:	d024      	beq.n	8024002 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8023fb8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023fba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023fbe:	ea4f 4329 	mov.w	r3, r9, asr #16
 8023fc2:	1428      	asrs	r0, r5, #16
 8023fc4:	fb01 3000 	mla	r0, r1, r0, r3
 8023fc8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8023fca:	f3c9 3303 	ubfx	r3, r9, #12, #4
 8023fce:	f812 b000 	ldrb.w	fp, [r2, r0]
 8023fd2:	4410      	add	r0, r2
 8023fd4:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 8023fd8:	eb0a 070b 	add.w	r7, sl, fp
 8023fdc:	f3c5 3203 	ubfx	r2, r5, #12, #4
 8023fe0:	2b00      	cmp	r3, #0
 8023fe2:	d186      	bne.n	8023ef2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8023fe4:	b14a      	cbz	r2, 8023ffa <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 8023fe6:	5c40      	ldrb	r0, [r0, r1]
 8023fe8:	463e      	mov	r6, r7
 8023fea:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023fee:	4450      	add	r0, sl
 8023ff0:	46bc      	mov	ip, r7
 8023ff2:	e78e      	b.n	8023f12 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8023ff4:	463e      	mov	r6, r7
 8023ff6:	4638      	mov	r0, r7
 8023ff8:	e78b      	b.n	8023f12 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8023ffa:	463e      	mov	r6, r7
 8023ffc:	4638      	mov	r0, r7
 8023ffe:	46bc      	mov	ip, r7
 8024000:	e787      	b.n	8023f12 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8024002:	e9dd a80d 	ldrd	sl, r8, [sp, #52]	@ 0x34
 8024006:	eb0a 0a88 	add.w	sl, sl, r8, lsl #2
 802400a:	e70e      	b.n	8023e2a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802400c:	f1b8 0f00 	cmp.w	r8, #0
 8024010:	f77f af0b 	ble.w	8023e2a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8024014:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024018:	ea4f 4329 	mov.w	r3, r9, asr #16
 802401c:	1428      	asrs	r0, r5, #16
 802401e:	4677      	mov	r7, lr
 8024020:	46d0      	mov	r8, sl
 8024022:	f8cd a020 	str.w	sl, [sp, #32]
 8024026:	f8dd a0b0 	ldr.w	sl, [sp, #176]	@ 0xb0
 802402a:	2b00      	cmp	r3, #0
 802402c:	f3c9 3103 	ubfx	r1, r9, #12, #4
 8024030:	f3c5 3203 	ubfx	r2, r5, #12, #4
 8024034:	db28      	blt.n	8024088 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8024036:	1e66      	subs	r6, r4, #1
 8024038:	42b3      	cmp	r3, r6
 802403a:	da25      	bge.n	8024088 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802403c:	2800      	cmp	r0, #0
 802403e:	db23      	blt.n	8024088 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8024040:	1e7e      	subs	r6, r7, #1
 8024042:	42b0      	cmp	r0, r6
 8024044:	da20      	bge.n	8024088 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8024046:	b224      	sxth	r4, r4
 8024048:	fb00 3304 	mla	r3, r0, r4, r3
 802404c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802404e:	5cc7      	ldrb	r7, [r0, r3]
 8024050:	4403      	add	r3, r0
 8024052:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8024054:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8024058:	eb00 0c07 	add.w	ip, r0, r7
 802405c:	2900      	cmp	r1, #0
 802405e:	d04a      	beq.n	80240f6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8024060:	785e      	ldrb	r6, [r3, #1]
 8024062:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8024066:	4406      	add	r6, r0
 8024068:	2a00      	cmp	r2, #0
 802406a:	f000 8098 	beq.w	802419e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x432>
 802406e:	1918      	adds	r0, r3, r4
 8024070:	7840      	ldrb	r0, [r0, #1]
 8024072:	5d1c      	ldrb	r4, [r3, r4]
 8024074:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024076:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802407a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802407e:	1818      	adds	r0, r3, r0
 8024080:	18e3      	adds	r3, r4, r3
 8024082:	900d      	str	r0, [sp, #52]	@ 0x34
 8024084:	930e      	str	r3, [sp, #56]	@ 0x38
 8024086:	e03b      	b.n	8024100 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8024088:	1c5e      	adds	r6, r3, #1
 802408a:	d405      	bmi.n	8024098 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802408c:	42a6      	cmp	r6, r4
 802408e:	dc03      	bgt.n	8024098 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8024090:	1c46      	adds	r6, r0, #1
 8024092:	d401      	bmi.n	8024098 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8024094:	42be      	cmp	r6, r7
 8024096:	dd1f      	ble.n	80240d8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8024098:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802409a:	f1bb 0f00 	cmp.w	fp, #0
 802409e:	4499      	add	r9, r3
 80240a0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80240a2:	f108 0804 	add.w	r8, r8, #4
 80240a6:	441d      	add	r5, r3
 80240a8:	dd07      	ble.n	80240ba <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 80240aa:	e9da 4702 	ldrd	r4, r7, [sl, #8]
 80240ae:	f10b 3bff 	add.w	fp, fp, #4294967295
 80240b2:	ea4f 4329 	mov.w	r3, r9, asr #16
 80240b6:	1428      	asrs	r0, r5, #16
 80240b8:	e7b7      	b.n	802402a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 80240ba:	e9dd 3a07 	ldrd	r3, sl, [sp, #28]
 80240be:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80240c2:	3301      	adds	r3, #1
 80240c4:	eb0a 0a83 	add.w	sl, sl, r3, lsl #2
 80240c8:	e6af      	b.n	8023e2a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80240ca:	f108 32ff 	add.w	r2, r8, #4294967295
 80240ce:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80240d2:	4693      	mov	fp, r2
 80240d4:	9207      	str	r2, [sp, #28]
 80240d6:	e7a2      	b.n	802401e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80240d8:	b23f      	sxth	r7, r7
 80240da:	b224      	sxth	r4, r4
 80240dc:	e9cd 1204 	strd	r1, r2, [sp, #16]
 80240e0:	e9cd 3002 	strd	r3, r0, [sp, #8]
 80240e4:	e9cd 4700 	strd	r4, r7, [sp]
 80240e8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80240ea:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80240ec:	4641      	mov	r1, r8
 80240ee:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80240f0:	f7ff fd6e 	bl	8023bd0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh>
 80240f4:	e7d0      	b.n	8024098 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 80240f6:	2a00      	cmp	r2, #0
 80240f8:	d147      	bne.n	802418a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41e>
 80240fa:	4666      	mov	r6, ip
 80240fc:	e9cd cc0d 	strd	ip, ip, [sp, #52]	@ 0x34
 8024100:	b28b      	uxth	r3, r1
 8024102:	b292      	uxth	r2, r2
 8024104:	fb03 f002 	mul.w	r0, r3, r2
 8024108:	011b      	lsls	r3, r3, #4
 802410a:	f896 e000 	ldrb.w	lr, [r6]
 802410e:	7874      	ldrb	r4, [r6, #1]
 8024110:	1a19      	subs	r1, r3, r0
 8024112:	78b6      	ldrb	r6, [r6, #2]
 8024114:	b289      	uxth	r1, r1
 8024116:	fb01 f404 	mul.w	r4, r1, r4
 802411a:	fb01 fe0e 	mul.w	lr, r1, lr
 802411e:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 8024122:	fb01 f106 	mul.w	r1, r1, r6
 8024126:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8024128:	b292      	uxth	r2, r2
 802412a:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802412e:	5df7      	ldrb	r7, [r6, r7]
 8024130:	1a9b      	subs	r3, r3, r2
 8024132:	f89c 6001 	ldrb.w	r6, [ip, #1]
 8024136:	f89c c002 	ldrb.w	ip, [ip, #2]
 802413a:	b29b      	uxth	r3, r3
 802413c:	fb03 4606 	mla	r6, r3, r6, r4
 8024140:	fb03 e707 	mla	r7, r3, r7, lr
 8024144:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8024146:	fb03 130c 	mla	r3, r3, ip, r1
 802414a:	7861      	ldrb	r1, [r4, #1]
 802414c:	f894 c000 	ldrb.w	ip, [r4]
 8024150:	78a4      	ldrb	r4, [r4, #2]
 8024152:	fb02 6601 	mla	r6, r2, r1, r6
 8024156:	fb02 770c 	mla	r7, r2, ip, r7
 802415a:	fb02 3104 	mla	r1, r2, r4, r3
 802415e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8024160:	7862      	ldrb	r2, [r4, #1]
 8024162:	7823      	ldrb	r3, [r4, #0]
 8024164:	78a4      	ldrb	r4, [r4, #2]
 8024166:	fb00 6602 	mla	r6, r0, r2, r6
 802416a:	fb00 7303 	mla	r3, r0, r3, r7
 802416e:	fb00 1204 	mla	r2, r0, r4, r1
 8024172:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024176:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802417a:	0212      	lsls	r2, r2, #8
 802417c:	4333      	orrs	r3, r6
 802417e:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 8024182:	4313      	orrs	r3, r2
 8024184:	f8c8 3000 	str.w	r3, [r8]
 8024188:	e786      	b.n	8024098 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802418a:	5d1c      	ldrb	r4, [r3, r4]
 802418c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802418e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8024192:	18e3      	adds	r3, r4, r3
 8024194:	f8cd c034 	str.w	ip, [sp, #52]	@ 0x34
 8024198:	930e      	str	r3, [sp, #56]	@ 0x38
 802419a:	4666      	mov	r6, ip
 802419c:	e7b0      	b.n	8024100 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802419e:	e9cd cc0d 	strd	ip, ip, [sp, #52]	@ 0x34
 80241a2:	e7ad      	b.n	8024100 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 80241a4:	f43f ae41 	beq.w	8023e2a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80241a8:	1e4e      	subs	r6, r1, #1
 80241aa:	e680      	b.n	8023eae <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>

080241ac <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh>:
 80241ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80241b0:	b087      	sub	sp, #28
 80241b2:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 80241b6:	e9dd 0412 	ldrd	r0, r4, [sp, #72]	@ 0x48
 80241ba:	fb04 070c 	mla	r7, r4, ip, r0
 80241be:	9100      	str	r1, [sp, #0]
 80241c0:	f89d 1058 	ldrb.w	r1, [sp, #88]	@ 0x58
 80241c4:	2c00      	cmp	r4, #0
 80241c6:	eb02 0b07 	add.w	fp, r2, r7
 80241ca:	f104 0501 	add.w	r5, r4, #1
 80241ce:	f9bd 8044 	ldrsh.w	r8, [sp, #68]	@ 0x44
 80241d2:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 80241d6:	f89d 6054 	ldrb.w	r6, [sp, #84]	@ 0x54
 80241da:	9101      	str	r1, [sp, #4]
 80241dc:	db02      	blt.n	80241e4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x38>
 80241de:	45a0      	cmp	r8, r4
 80241e0:	f300 811a 	bgt.w	8024418 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x26c>
 80241e4:	2700      	movs	r7, #0
 80241e6:	46be      	mov	lr, r7
 80241e8:	46b9      	mov	r9, r7
 80241ea:	463c      	mov	r4, r7
 80241ec:	2d00      	cmp	r5, #0
 80241ee:	db02      	blt.n	80241f6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x4a>
 80241f0:	45a8      	cmp	r8, r5
 80241f2:	f300 812b 	bgt.w	802444c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2a0>
 80241f6:	f04f 0c00 	mov.w	ip, #0
 80241fa:	46e0      	mov	r8, ip
 80241fc:	4665      	mov	r5, ip
 80241fe:	f8cd c010 	str.w	ip, [sp, #16]
 8024202:	f1ba 0f0f 	cmp.w	sl, #15
 8024206:	f200 8167 	bhi.w	80244d8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x32c>
 802420a:	2e0f      	cmp	r6, #15
 802420c:	f200 8164 	bhi.w	80244d8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x32c>
 8024210:	b2b2      	uxth	r2, r6
 8024212:	fa1f f38a 	uxth.w	r3, sl
 8024216:	fb02 f603 	mul.w	r6, r2, r3
 802421a:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802421e:	b292      	uxth	r2, r2
 8024220:	fb02 fa08 	mul.w	sl, r2, r8
 8024224:	fb06 fb0c 	mul.w	fp, r6, ip
 8024228:	011b      	lsls	r3, r3, #4
 802422a:	1b98      	subs	r0, r3, r6
 802422c:	b280      	uxth	r0, r0
 802422e:	9002      	str	r0, [sp, #8]
 8024230:	fb00 f007 	mul.w	r0, r0, r7
 8024234:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 8024238:	1a9b      	subs	r3, r3, r2
 802423a:	b29b      	uxth	r3, r3
 802423c:	fb03 000e 	mla	r0, r3, lr, r0
 8024240:	4450      	add	r0, sl
 8024242:	4458      	add	r0, fp
 8024244:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8024248:	9003      	str	r0, [sp, #12]
 802424a:	2800      	cmp	r0, #0
 802424c:	f000 80e1 	beq.w	8024412 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x266>
 8024250:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8024254:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8024258:	f009 1bff 	and.w	fp, r9, #16711935	@ 0xff00ff
 802425c:	9105      	str	r1, [sp, #20]
 802425e:	d01d      	beq.n	802429c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0xf0>
 8024260:	fb0b fb0e 	mul.w	fp, fp, lr
 8024264:	fb01 fe0e 	mul.w	lr, r1, lr
 8024268:	ea4f 2a1b 	mov.w	sl, fp, lsr #8
 802426c:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 8024270:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8024274:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 8024278:	44d3      	add	fp, sl
 802427a:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 802427e:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8024282:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024286:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802428a:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802428e:	ea4b 0e0e 	orr.w	lr, fp, lr
 8024292:	f40e 417f 	and.w	r1, lr, #65280	@ 0xff00
 8024296:	f00e 1bff 	and.w	fp, lr, #16711935	@ 0xff00ff
 802429a:	9105      	str	r1, [sp, #20]
 802429c:	2fff      	cmp	r7, #255	@ 0xff
 802429e:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 80242a2:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 80242a6:	d01b      	beq.n	80242e0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x134>
 80242a8:	fb0e fe07 	mul.w	lr, lr, r7
 80242ac:	fb04 f407 	mul.w	r4, r4, r7
 80242b0:	ea4f 2a1e 	mov.w	sl, lr, lsr #8
 80242b4:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 80242b8:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 80242bc:	f504 7080 	add.w	r0, r4, #256	@ 0x100
 80242c0:	44d6      	add	lr, sl
 80242c2:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80242c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80242ca:	0a24      	lsrs	r4, r4, #8
 80242cc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80242d0:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 80242d4:	ea4e 0404 	orr.w	r4, lr, r4
 80242d8:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 80242dc:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 80242e0:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 80242e4:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 80242e8:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 80242ec:	d019      	beq.n	8024322 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x176>
 80242ee:	fb00 f008 	mul.w	r0, r0, r8
 80242f2:	fb05 f508 	mul.w	r5, r5, r8
 80242f6:	ea4f 2910 	mov.w	r9, r0, lsr #8
 80242fa:	f009 19ff 	and.w	r9, r9, #16711935	@ 0xff00ff
 80242fe:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 8024302:	f505 7780 	add.w	r7, r5, #256	@ 0x100
 8024306:	4448      	add	r0, r9
 8024308:	eb07 2515 	add.w	r5, r7, r5, lsr #8
 802430c:	0a00      	lsrs	r0, r0, #8
 802430e:	0a2d      	lsrs	r5, r5, #8
 8024310:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8024314:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8024318:	4305      	orrs	r5, r0
 802431a:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 802431e:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8024322:	9904      	ldr	r1, [sp, #16]
 8024324:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8024328:	f001 1aff 	and.w	sl, r1, #16711935	@ 0xff00ff
 802432c:	f401 497f 	and.w	r9, r1, #65280	@ 0xff00
 8024330:	d01c      	beq.n	802436c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x1c0>
 8024332:	fb0a fa0c 	mul.w	sl, sl, ip
 8024336:	fb09 fc0c 	mul.w	ip, r9, ip
 802433a:	ea4f 281a 	mov.w	r8, sl, lsr #8
 802433e:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 8024342:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8024346:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802434a:	44c2      	add	sl, r8
 802434c:	eb07 2c1c 	add.w	ip, r7, ip, lsr #8
 8024350:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024354:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024358:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802435c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8024360:	ea4a 090c 	orr.w	r9, sl, ip
 8024364:	f009 1aff 	and.w	sl, r9, #16711935	@ 0xff00ff
 8024368:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 802436c:	f8bd 8004 	ldrh.w	r8, [sp, #4]
 8024370:	9903      	ldr	r1, [sp, #12]
 8024372:	fb01 fc08 	mul.w	ip, r1, r8
 8024376:	f10c 0701 	add.w	r7, ip, #1
 802437a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802437e:	ea6f 2c17 	mvn.w	ip, r7, lsr #8
 8024382:	9902      	ldr	r1, [sp, #8]
 8024384:	fa5f f78c 	uxtb.w	r7, ip
 8024388:	fb04 f401 	mul.w	r4, r4, r1
 802438c:	fb0e fe01 	mul.w	lr, lr, r1
 8024390:	9905      	ldr	r1, [sp, #20]
 8024392:	fb0b ee03 	mla	lr, fp, r3, lr
 8024396:	fb01 4303 	mla	r3, r1, r3, r4
 802439a:	fb00 e002 	mla	r0, r0, r2, lr
 802439e:	fb05 3502 	mla	r5, r5, r2, r3
 80243a2:	fb0a 0a06 	mla	sl, sl, r6, r0
 80243a6:	fb09 5906 	mla	r9, r9, r6, r5
 80243aa:	ea4f 261a 	mov.w	r6, sl, lsr #8
 80243ae:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80243b2:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 80243b6:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 80243ba:	ea46 0609 	orr.w	r6, r6, r9
 80243be:	b2f2      	uxtb	r2, r6
 80243c0:	f3c6 2307 	ubfx	r3, r6, #8, #8
 80243c4:	0c36      	lsrs	r6, r6, #16
 80243c6:	9900      	ldr	r1, [sp, #0]
 80243c8:	fb12 f408 	smulbb	r4, r2, r8
 80243cc:	fb13 f008 	smulbb	r0, r3, r8
 80243d0:	fb16 f808 	smulbb	r8, r6, r8
 80243d4:	780a      	ldrb	r2, [r1, #0]
 80243d6:	784b      	ldrb	r3, [r1, #1]
 80243d8:	788e      	ldrb	r6, [r1, #2]
 80243da:	fb02 4207 	mla	r2, r2, r7, r4
 80243de:	fb03 0307 	mla	r3, r3, r7, r0
 80243e2:	fb06 8807 	mla	r8, r6, r7, r8
 80243e6:	b292      	uxth	r2, r2
 80243e8:	b29b      	uxth	r3, r3
 80243ea:	fa1f f888 	uxth.w	r8, r8
 80243ee:	1c54      	adds	r4, r2, #1
 80243f0:	1c58      	adds	r0, r3, #1
 80243f2:	f108 0701 	add.w	r7, r8, #1
 80243f6:	eb04 2212 	add.w	r2, r4, r2, lsr #8
 80243fa:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80243fe:	eb07 2818 	add.w	r8, r7, r8, lsr #8
 8024402:	1212      	asrs	r2, r2, #8
 8024404:	121b      	asrs	r3, r3, #8
 8024406:	ea4f 2828 	mov.w	r8, r8, asr #8
 802440a:	700a      	strb	r2, [r1, #0]
 802440c:	704b      	strb	r3, [r1, #1]
 802440e:	f881 8002 	strb.w	r8, [r1, #2]
 8024412:	b007      	add	sp, #28
 8024414:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024418:	2800      	cmp	r0, #0
 802441a:	db01      	blt.n	8024420 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x274>
 802441c:	4584      	cmp	ip, r0
 802441e:	dc40      	bgt.n	80244a2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2f6>
 8024420:	f04f 0e00 	mov.w	lr, #0
 8024424:	46f1      	mov	r9, lr
 8024426:	1c42      	adds	r2, r0, #1
 8024428:	d42b      	bmi.n	8024482 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2d6>
 802442a:	4594      	cmp	ip, r2
 802442c:	dd29      	ble.n	8024482 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2d6>
 802442e:	f1ba 0f00 	cmp.w	sl, #0
 8024432:	d005      	beq.n	8024440 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x294>
 8024434:	f89b 2001 	ldrb.w	r2, [fp, #1]
 8024438:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 802443c:	0e27      	lsrs	r7, r4, #24
 802443e:	e6d5      	b.n	80241ec <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x40>
 8024440:	2d00      	cmp	r5, #0
 8024442:	db41      	blt.n	80244c8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x31c>
 8024444:	45a8      	cmp	r8, r5
 8024446:	dd3f      	ble.n	80244c8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x31c>
 8024448:	4657      	mov	r7, sl
 802444a:	4654      	mov	r4, sl
 802444c:	b1e6      	cbz	r6, 8024488 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2dc>
 802444e:	2800      	cmp	r0, #0
 8024450:	db32      	blt.n	80244b8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x30c>
 8024452:	4584      	cmp	ip, r0
 8024454:	dd30      	ble.n	80244b8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x30c>
 8024456:	f81b 200c 	ldrb.w	r2, [fp, ip]
 802445a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 802445e:	ea4f 6815 	mov.w	r8, r5, lsr #24
 8024462:	3001      	adds	r0, #1
 8024464:	d423      	bmi.n	80244ae <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x302>
 8024466:	4584      	cmp	ip, r0
 8024468:	dd21      	ble.n	80244ae <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x302>
 802446a:	f1ba 0f00 	cmp.w	sl, #0
 802446e:	d027      	beq.n	80244c0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x314>
 8024470:	44dc      	add	ip, fp
 8024472:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8024476:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 802447a:	9304      	str	r3, [sp, #16]
 802447c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024480:	e6bf      	b.n	8024202 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x56>
 8024482:	2700      	movs	r7, #0
 8024484:	463c      	mov	r4, r7
 8024486:	e6b1      	b.n	80241ec <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x40>
 8024488:	f1ba 0f0f 	cmp.w	sl, #15
 802448c:	d824      	bhi.n	80244d8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x32c>
 802448e:	fa1f f38a 	uxth.w	r3, sl
 8024492:	4632      	mov	r2, r6
 8024494:	46b3      	mov	fp, r6
 8024496:	46b2      	mov	sl, r6
 8024498:	9604      	str	r6, [sp, #16]
 802449a:	4635      	mov	r5, r6
 802449c:	46b4      	mov	ip, r6
 802449e:	46b0      	mov	r8, r6
 80244a0:	e6c2      	b.n	8024228 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x7c>
 80244a2:	5dd2      	ldrb	r2, [r2, r7]
 80244a4:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
 80244a8:	ea4f 6e19 	mov.w	lr, r9, lsr #24
 80244ac:	e7bb      	b.n	8024426 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x27a>
 80244ae:	f04f 0c00 	mov.w	ip, #0
 80244b2:	f8cd c010 	str.w	ip, [sp, #16]
 80244b6:	e6a4      	b.n	8024202 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x56>
 80244b8:	f04f 0800 	mov.w	r8, #0
 80244bc:	4645      	mov	r5, r8
 80244be:	e7d0      	b.n	8024462 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2b6>
 80244c0:	f8cd a010 	str.w	sl, [sp, #16]
 80244c4:	46d4      	mov	ip, sl
 80244c6:	e6a0      	b.n	802420a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x5e>
 80244c8:	4654      	mov	r4, sl
 80244ca:	f8cd a010 	str.w	sl, [sp, #16]
 80244ce:	4655      	mov	r5, sl
 80244d0:	46d4      	mov	ip, sl
 80244d2:	46d0      	mov	r8, sl
 80244d4:	4657      	mov	r7, sl
 80244d6:	e698      	b.n	802420a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x5e>
 80244d8:	4b03      	ldr	r3, [pc, #12]	@ (80244e8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x33c>)
 80244da:	4a04      	ldr	r2, [pc, #16]	@ (80244ec <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x340>)
 80244dc:	f44f 7170 	mov.w	r1, #960	@ 0x3c0
 80244e0:	4803      	ldr	r0, [pc, #12]	@ (80244f0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x344>)
 80244e2:	f000 fc27 	bl	8024d34 <__assert_func>
 80244e6:	bf00      	nop
 80244e8:	08027d5c 	.word	0x08027d5c
 80244ec:	080283d8 	.word	0x080283d8
 80244f0:	08027ee4 	.word	0x08027ee4

080244f4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80244f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80244f8:	ed2d 8b08 	vpush	{d8-d11}
 80244fc:	b0a9      	sub	sp, #164	@ 0xa4
 80244fe:	e9dd ba3b 	ldrd	fp, sl, [sp, #236]	@ 0xec
 8024502:	eeb0 aa40 	vmov.f32	s20, s0
 8024506:	46d9      	mov	r9, fp
 8024508:	eef0 9a60 	vmov.f32	s19, s1
 802450c:	eeb0 9a41 	vmov.f32	s18, s2
 8024510:	eef0 8a62 	vmov.f32	s17, s5
 8024514:	eeb0 8a43 	vmov.f32	s16, s6
 8024518:	eef0 ba44 	vmov.f32	s23, s8
 802451c:	eeb0 ba64 	vmov.f32	s22, s9
 8024520:	eef0 aa45 	vmov.f32	s21, s10
 8024524:	46d3      	mov	fp, sl
 8024526:	9022      	str	r0, [sp, #136]	@ 0x88
 8024528:	983f      	ldr	r0, [sp, #252]	@ 0xfc
 802452a:	9115      	str	r1, [sp, #84]	@ 0x54
 802452c:	9218      	str	r2, [sp, #96]	@ 0x60
 802452e:	6841      	ldr	r1, [r0, #4]
 8024530:	9a40      	ldr	r2, [sp, #256]	@ 0x100
 8024532:	469e      	mov	lr, r3
 8024534:	9b41      	ldr	r3, [sp, #260]	@ 0x104
 8024536:	6807      	ldr	r7, [r0, #0]
 8024538:	fb01 2303 	mla	r3, r1, r3, r2
 802453c:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 802453e:	9842      	ldr	r0, [sp, #264]	@ 0x108
 8024540:	6852      	ldr	r2, [r2, #4]
 8024542:	f89d 110c 	ldrb.w	r1, [sp, #268]	@ 0x10c
 8024546:	eb07 0783 	add.w	r7, r7, r3, lsl #2
 802454a:	6800      	ldr	r0, [r0, #0]
 802454c:	1d13      	adds	r3, r2, #4
 802454e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8024550:	b28b      	uxth	r3, r1
 8024552:	9123      	str	r1, [sp, #140]	@ 0x8c
 8024554:	9011      	str	r0, [sp, #68]	@ 0x44
 8024556:	9317      	str	r3, [sp, #92]	@ 0x5c
 8024558:	9712      	str	r7, [sp, #72]	@ 0x48
 802455a:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 802455c:	2b00      	cmp	r3, #0
 802455e:	dc02      	bgt.n	8024566 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8024560:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8024562:	2b00      	cmp	r3, #0
 8024564:	dd68      	ble.n	8024638 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8024566:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 8024568:	f1be 0f00 	cmp.w	lr, #0
 802456c:	e9d3 5702 	ldrd	r5, r7, [r3, #8]
 8024570:	b228      	sxth	r0, r5
 8024572:	b23e      	sxth	r6, r7
 8024574:	f340 83a0 	ble.w	8024cb8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c4>
 8024578:	e9dd 8a3d 	ldrd	r8, sl, [sp, #244]	@ 0xf4
 802457c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802457e:	1e44      	subs	r4, r0, #1
 8024580:	f106 3cff 	add.w	ip, r6, #4294967295
 8024584:	9709      	str	r7, [sp, #36]	@ 0x24
 8024586:	ea5f 4329 	movs.w	r3, r9, asr #16
 802458a:	ea4f 422b 	mov.w	r2, fp, asr #16
 802458e:	d405      	bmi.n	802459c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8024590:	42a3      	cmp	r3, r4
 8024592:	da03      	bge.n	802459c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8024594:	2a00      	cmp	r2, #0
 8024596:	db01      	blt.n	802459c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8024598:	4562      	cmp	r2, ip
 802459a:	db52      	blt.n	8024642 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 802459c:	1c5f      	adds	r7, r3, #1
 802459e:	d406      	bmi.n	80245ae <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 80245a0:	4287      	cmp	r7, r0
 80245a2:	dc04      	bgt.n	80245ae <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 80245a4:	1c57      	adds	r7, r2, #1
 80245a6:	d402      	bmi.n	80245ae <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 80245a8:	42b7      	cmp	r7, r6
 80245aa:	f340 835f 	ble.w	8024c6c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x778>
 80245ae:	f1be 0e01 	subs.w	lr, lr, #1
 80245b2:	44c1      	add	r9, r8
 80245b4:	44d3      	add	fp, sl
 80245b6:	f101 0104 	add.w	r1, r1, #4
 80245ba:	d1e4      	bne.n	8024586 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80245bc:	9112      	str	r1, [sp, #72]	@ 0x48
 80245be:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80245c0:	2b00      	cmp	r3, #0
 80245c2:	dd39      	ble.n	8024638 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 80245c4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80245c8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80245cc:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80245d0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80245d4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80245d8:	ee29 6aa7 	vmul.f32	s12, s19, s15
 80245dc:	ee69 7a27 	vmul.f32	s15, s18, s15
 80245e0:	ee76 6a68 	vsub.f32	s13, s12, s17
 80245e4:	ee37 7ac8 	vsub.f32	s14, s15, s16
 80245e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80245ec:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80245f0:	ee16 2a90 	vmov	r2, s13
 80245f4:	3b01      	subs	r3, #1
 80245f6:	9315      	str	r3, [sp, #84]	@ 0x54
 80245f8:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 80245fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80245fe:	ee17 2a10 	vmov	r2, s14
 8024602:	eeb0 7a48 	vmov.f32	s14, s16
 8024606:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802460a:	ee17 ba10 	vmov	fp, s14
 802460e:	eeb0 7a68 	vmov.f32	s14, s17
 8024612:	933d      	str	r3, [sp, #244]	@ 0xf4
 8024614:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 8024616:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802461a:	fb92 f3f3 	sdiv	r3, r2, r3
 802461e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8024620:	933e      	str	r3, [sp, #248]	@ 0xf8
 8024622:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 8024624:	ee17 9a10 	vmov	r9, s14
 8024628:	eeb0 8a67 	vmov.f32	s16, s15
 802462c:	eef0 8a46 	vmov.f32	s17, s12
 8024630:	bf14      	ite	ne
 8024632:	469e      	movne	lr, r3
 8024634:	4696      	moveq	lr, r2
 8024636:	e790      	b.n	802455a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024638:	b029      	add	sp, #164	@ 0xa4
 802463a:	ecbd 8b08 	vpop	{d8-d11}
 802463e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024642:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8024644:	9112      	str	r1, [sp, #72]	@ 0x48
 8024646:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 8024648:	f10e 32ff 	add.w	r2, lr, #4294967295
 802464c:	fb01 9302 	mla	r3, r1, r2, r9
 8024650:	141b      	asrs	r3, r3, #16
 8024652:	920a      	str	r2, [sp, #40]	@ 0x28
 8024654:	f100 816a 	bmi.w	802492c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 8024658:	42a3      	cmp	r3, r4
 802465a:	f280 8167 	bge.w	802492c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 802465e:	9b3e      	ldr	r3, [sp, #248]	@ 0xf8
 8024660:	fb03 b302 	mla	r3, r3, r2, fp
 8024664:	141b      	asrs	r3, r3, #16
 8024666:	f100 8161 	bmi.w	802492c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 802466a:	3e01      	subs	r6, #1
 802466c:	42b3      	cmp	r3, r6
 802466e:	f280 815d 	bge.w	802492c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 8024672:	f1be 0f00 	cmp.w	lr, #0
 8024676:	dda2      	ble.n	80245be <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 8024678:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 802467a:	f8cd e064 	str.w	lr, [sp, #100]	@ 0x64
 802467e:	3304      	adds	r3, #4
 8024680:	9309      	str	r3, [sp, #36]	@ 0x24
 8024682:	f8cd b0f0 	str.w	fp, [sp, #240]	@ 0xf0
 8024686:	4606      	mov	r6, r0
 8024688:	465b      	mov	r3, fp
 802468a:	e12a      	b.n	80248e2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 802468c:	785f      	ldrb	r7, [r3, #1]
 802468e:	f855 7027 	ldr.w	r7, [r5, r7, lsl #2]
 8024692:	9713      	str	r7, [sp, #76]	@ 0x4c
 8024694:	0e3f      	lsrs	r7, r7, #24
 8024696:	970c      	str	r7, [sp, #48]	@ 0x30
 8024698:	b16a      	cbz	r2, 80246b6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802469a:	199f      	adds	r7, r3, r6
 802469c:	5d9b      	ldrb	r3, [r3, r6]
 802469e:	462e      	mov	r6, r5
 80246a0:	787f      	ldrb	r7, [r7, #1]
 80246a2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80246a6:	f855 5027 	ldr.w	r5, [r5, r7, lsl #2]
 80246aa:	9314      	str	r3, [sp, #80]	@ 0x50
 80246ac:	9516      	str	r5, [sp, #88]	@ 0x58
 80246ae:	0e1b      	lsrs	r3, r3, #24
 80246b0:	0e2d      	lsrs	r5, r5, #24
 80246b2:	950e      	str	r5, [sp, #56]	@ 0x38
 80246b4:	930d      	str	r3, [sp, #52]	@ 0x34
 80246b6:	fa1f fc81 	uxth.w	ip, r1
 80246ba:	b292      	uxth	r2, r2
 80246bc:	fb0c f602 	mul.w	r6, ip, r2
 80246c0:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 80246c4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80246c6:	ebac 0706 	sub.w	r7, ip, r6
 80246ca:	b2bf      	uxth	r7, r7
 80246cc:	fb07 f103 	mul.w	r1, r7, r3
 80246d0:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 80246d4:	b292      	uxth	r2, r2
 80246d6:	f5cc 7380 	rsb	r3, ip, #256	@ 0x100
 80246da:	1a9b      	subs	r3, r3, r2
 80246dc:	b29b      	uxth	r3, r3
 80246de:	fb03 1104 	mla	r1, r3, r4, r1
 80246e2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80246e4:	fb02 1105 	mla	r1, r2, r5, r1
 80246e8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80246ea:	fb06 1105 	mla	r1, r6, r5, r1
 80246ee:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80246f2:	2900      	cmp	r1, #0
 80246f4:	f000 80e3 	beq.w	80248be <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80246f8:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 80246fc:	2cff      	cmp	r4, #255	@ 0xff
 80246fe:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 8024702:	950f      	str	r5, [sp, #60]	@ 0x3c
 8024704:	9010      	str	r0, [sp, #64]	@ 0x40
 8024706:	d01e      	beq.n	8024746 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8024708:	fb00 f004 	mul.w	r0, r0, r4
 802470c:	fb05 fe04 	mul.w	lr, r5, r4
 8024710:	4604      	mov	r4, r0
 8024712:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8024716:	f500 7080 	add.w	r0, r0, #256	@ 0x100
 802471a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802471e:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 8024722:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8024726:	44e6      	add	lr, ip
 8024728:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802472c:	0a24      	lsrs	r4, r4, #8
 802472e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8024732:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8024736:	ea4e 0e04 	orr.w	lr, lr, r4
 802473a:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 802473e:	900f      	str	r0, [sp, #60]	@ 0x3c
 8024740:	f40e 407f 	and.w	r0, lr, #65280	@ 0xff00
 8024744:	9010      	str	r0, [sp, #64]	@ 0x40
 8024746:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8024748:	f000 1eff 	and.w	lr, r0, #16711935	@ 0xff00ff
 802474c:	f400 487f 	and.w	r8, r0, #65280	@ 0xff00
 8024750:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8024752:	28ff      	cmp	r0, #255	@ 0xff
 8024754:	d01c      	beq.n	8024790 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8024756:	fb0e fe00 	mul.w	lr, lr, r0
 802475a:	fb08 f800 	mul.w	r8, r8, r0
 802475e:	ea4f 241e 	mov.w	r4, lr, lsr #8
 8024762:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8024766:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 802476a:	f508 7080 	add.w	r0, r8, #256	@ 0x100
 802476e:	44a6      	add	lr, r4
 8024770:	eb00 2818 	add.w	r8, r0, r8, lsr #8
 8024774:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024778:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802477c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8024780:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8024784:	ea4e 0808 	orr.w	r8, lr, r8
 8024788:	f008 1eff 	and.w	lr, r8, #16711935	@ 0xff00ff
 802478c:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8024790:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8024792:	f000 1cff 	and.w	ip, r0, #16711935	@ 0xff00ff
 8024796:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 802479a:	980d      	ldr	r0, [sp, #52]	@ 0x34
 802479c:	28ff      	cmp	r0, #255	@ 0xff
 802479e:	d01c      	beq.n	80247da <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80247a0:	fb0c fc00 	mul.w	ip, ip, r0
 80247a4:	fb0a fa00 	mul.w	sl, sl, r0
 80247a8:	ea4f 241c 	mov.w	r4, ip, lsr #8
 80247ac:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 80247b0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80247b4:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 80247b8:	44a4      	add	ip, r4
 80247ba:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 80247be:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80247c2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80247c6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80247ca:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80247ce:	ea4c 0a0a 	orr.w	sl, ip, sl
 80247d2:	f00a 1cff 	and.w	ip, sl, #16711935	@ 0xff00ff
 80247d6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80247da:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 80247dc:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 80247e0:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 80247e4:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80247e6:	2cff      	cmp	r4, #255	@ 0xff
 80247e8:	d019      	beq.n	802481e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 80247ea:	fb00 f004 	mul.w	r0, r0, r4
 80247ee:	fb0b fb04 	mul.w	fp, fp, r4
 80247f2:	0a04      	lsrs	r4, r0, #8
 80247f4:	f004 15ff 	and.w	r5, r4, #16711935	@ 0xff00ff
 80247f8:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 80247fc:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 8024800:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 8024804:	4428      	add	r0, r5
 8024806:	0a00      	lsrs	r0, r0, #8
 8024808:	0a24      	lsrs	r4, r4, #8
 802480a:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802480e:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 8024812:	ea40 0b0b 	orr.w	fp, r0, fp
 8024816:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 802481a:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802481e:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
 8024820:	fb0e fe07 	mul.w	lr, lr, r7
 8024824:	fb01 f105 	mul.w	r1, r1, r5
 8024828:	1c4c      	adds	r4, r1, #1
 802482a:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 802482e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8024832:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8024834:	fb08 f707 	mul.w	r7, r8, r7
 8024838:	fb04 ee03 	mla	lr, r4, r3, lr
 802483c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802483e:	fb0c ee02 	mla	lr, ip, r2, lr
 8024842:	fb04 7703 	mla	r7, r4, r3, r7
 8024846:	fb0a 7702 	mla	r7, sl, r2, r7
 802484a:	fb00 ee06 	mla	lr, r0, r6, lr
 802484e:	fb0b 7706 	mla	r7, fp, r6, r7
 8024852:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024856:	0a3f      	lsrs	r7, r7, #8
 8024858:	f407 437f 	and.w	r3, r7, #65280	@ 0xff00
 802485c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8024860:	ea4e 0303 	orr.w	r3, lr, r3
 8024864:	b2df      	uxtb	r7, r3
 8024866:	f3c3 2607 	ubfx	r6, r3, #8, #8
 802486a:	0c1b      	lsrs	r3, r3, #16
 802486c:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802486e:	fb17 f705 	smulbb	r7, r7, r5
 8024872:	fb16 f605 	smulbb	r6, r6, r5
 8024876:	fb13 f305 	smulbb	r3, r3, r5
 802487a:	f814 0c04 	ldrb.w	r0, [r4, #-4]
 802487e:	f814 2c03 	ldrb.w	r2, [r4, #-3]
 8024882:	f814 cc02 	ldrb.w	ip, [r4, #-2]
 8024886:	b2c9      	uxtb	r1, r1
 8024888:	fb00 7001 	mla	r0, r0, r1, r7
 802488c:	fb02 6201 	mla	r2, r2, r1, r6
 8024890:	fb0c 3101 	mla	r1, ip, r1, r3
 8024894:	b280      	uxth	r0, r0
 8024896:	b292      	uxth	r2, r2
 8024898:	b289      	uxth	r1, r1
 802489a:	1c47      	adds	r7, r0, #1
 802489c:	1c56      	adds	r6, r2, #1
 802489e:	1c4b      	adds	r3, r1, #1
 80248a0:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 80248a4:	eb06 2212 	add.w	r2, r6, r2, lsr #8
 80248a8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80248ac:	1200      	asrs	r0, r0, #8
 80248ae:	1212      	asrs	r2, r2, #8
 80248b0:	1209      	asrs	r1, r1, #8
 80248b2:	f804 0c04 	strb.w	r0, [r4, #-4]
 80248b6:	f804 2c03 	strb.w	r2, [r4, #-3]
 80248ba:	f804 1c02 	strb.w	r1, [r4, #-2]
 80248be:	9a3d      	ldr	r2, [sp, #244]	@ 0xf4
 80248c0:	993e      	ldr	r1, [sp, #248]	@ 0xf8
 80248c2:	4491      	add	r9, r2
 80248c4:	9a3c      	ldr	r2, [sp, #240]	@ 0xf0
 80248c6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80248c8:	440a      	add	r2, r1
 80248ca:	923c      	str	r2, [sp, #240]	@ 0xf0
 80248cc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80248ce:	3b01      	subs	r3, #1
 80248d0:	930a      	str	r3, [sp, #40]	@ 0x28
 80248d2:	3204      	adds	r2, #4
 80248d4:	3301      	adds	r3, #1
 80248d6:	9209      	str	r2, [sp, #36]	@ 0x24
 80248d8:	d021      	beq.n	802491e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80248da:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 80248dc:	f9b3 6008 	ldrsh.w	r6, [r3, #8]
 80248e0:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 80248e2:	ea4f 4229 	mov.w	r2, r9, asr #16
 80248e6:	141b      	asrs	r3, r3, #16
 80248e8:	fb06 2303 	mla	r3, r6, r3, r2
 80248ec:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80248ee:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80248f0:	5ce2      	ldrb	r2, [r4, r3]
 80248f2:	f3c9 3103 	ubfx	r1, r9, #12, #4
 80248f6:	f855 0022 	ldr.w	r0, [r5, r2, lsl #2]
 80248fa:	9a3c      	ldr	r2, [sp, #240]	@ 0xf0
 80248fc:	4423      	add	r3, r4
 80248fe:	f3c2 3203 	ubfx	r2, r2, #12, #4
 8024902:	0e04      	lsrs	r4, r0, #24
 8024904:	2900      	cmp	r1, #0
 8024906:	f47f aec1 	bne.w	802468c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802490a:	2a00      	cmp	r2, #0
 802490c:	f43f aed3 	beq.w	80246b6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8024910:	5d9b      	ldrb	r3, [r3, r6]
 8024912:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8024916:	9314      	str	r3, [sp, #80]	@ 0x50
 8024918:	0e1b      	lsrs	r3, r3, #24
 802491a:	930d      	str	r3, [sp, #52]	@ 0x34
 802491c:	e6cb      	b.n	80246b6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802491e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8024920:	f8dd e064 	ldr.w	lr, [sp, #100]	@ 0x64
 8024924:	eb03 038e 	add.w	r3, r3, lr, lsl #2
 8024928:	9312      	str	r3, [sp, #72]	@ 0x48
 802492a:	e648      	b.n	80245be <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 802492c:	f1be 0f00 	cmp.w	lr, #0
 8024930:	f77f ae45 	ble.w	80245be <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 8024934:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8024938:	ea4f 4329 	mov.w	r3, r9, asr #16
 802493c:	ea4f 422b 	mov.w	r2, fp, asr #16
 8024940:	2b00      	cmp	r3, #0
 8024942:	46be      	mov	lr, r7
 8024944:	4629      	mov	r1, r5
 8024946:	e9dd 653d 	ldrd	r6, r5, [sp, #244]	@ 0xf4
 802494a:	f8dd a048 	ldr.w	sl, [sp, #72]	@ 0x48
 802494e:	9c42      	ldr	r4, [sp, #264]	@ 0x108
 8024950:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8024954:	f3cb 3703 	ubfx	r7, fp, #12, #4
 8024958:	f2c0 815d 	blt.w	8024c16 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x722>
 802495c:	f101 3cff 	add.w	ip, r1, #4294967295
 8024960:	4563      	cmp	r3, ip
 8024962:	f280 8158 	bge.w	8024c16 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x722>
 8024966:	2a00      	cmp	r2, #0
 8024968:	f2c0 8155 	blt.w	8024c16 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x722>
 802496c:	f10e 3cff 	add.w	ip, lr, #4294967295
 8024970:	4562      	cmp	r2, ip
 8024972:	f280 8150 	bge.w	8024c16 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x722>
 8024976:	fa0f fc81 	sxth.w	ip, r1
 802497a:	fb02 330c 	mla	r3, r2, ip, r3
 802497e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8024980:	5cd1      	ldrb	r1, [r2, r3]
 8024982:	18d3      	adds	r3, r2, r3
 8024984:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8024986:	469e      	mov	lr, r3
 8024988:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802498c:	0e19      	lsrs	r1, r3, #24
 802498e:	9309      	str	r3, [sp, #36]	@ 0x24
 8024990:	910f      	str	r1, [sp, #60]	@ 0x3c
 8024992:	2800      	cmp	r0, #0
 8024994:	f000 8171 	beq.w	8024c7a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x786>
 8024998:	4671      	mov	r1, lr
 802499a:	f89e e001 	ldrb.w	lr, [lr, #1]
 802499e:	4613      	mov	r3, r2
 80249a0:	f852 202e 	ldr.w	r2, [r2, lr, lsl #2]
 80249a4:	9224      	str	r2, [sp, #144]	@ 0x90
 80249a6:	0e12      	lsrs	r2, r2, #24
 80249a8:	921a      	str	r2, [sp, #104]	@ 0x68
 80249aa:	2f00      	cmp	r7, #0
 80249ac:	f040 8171 	bne.w	8024c92 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x79e>
 80249b0:	b280      	uxth	r0, r0
 80249b2:	b2bf      	uxth	r7, r7
 80249b4:	fb00 f207 	mul.w	r2, r0, r7
 80249b8:	ea4f 1c00 	mov.w	ip, r0, lsl #4
 80249bc:	ebac 0002 	sub.w	r0, ip, r2
 80249c0:	b280      	uxth	r0, r0
 80249c2:	4603      	mov	r3, r0
 80249c4:	9010      	str	r0, [sp, #64]	@ 0x40
 80249c6:	981a      	ldr	r0, [sp, #104]	@ 0x68
 80249c8:	ebc2 1707 	rsb	r7, r2, r7, lsl #4
 80249cc:	fb03 f000 	mul.w	r0, r3, r0
 80249d0:	fa1f fe87 	uxth.w	lr, r7
 80249d4:	f5cc 7780 	rsb	r7, ip, #256	@ 0x100
 80249d8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80249da:	eba7 070e 	sub.w	r7, r7, lr
 80249de:	b2bf      	uxth	r7, r7
 80249e0:	fb07 0003 	mla	r0, r7, r3, r0
 80249e4:	9719      	str	r7, [sp, #100]	@ 0x64
 80249e6:	9f1b      	ldr	r7, [sp, #108]	@ 0x6c
 80249e8:	fb0e 0007 	mla	r0, lr, r7, r0
 80249ec:	9f1c      	ldr	r7, [sp, #112]	@ 0x70
 80249ee:	fb02 0007 	mla	r0, r2, r7, r0
 80249f2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80249f6:	900f      	str	r0, [sp, #60]	@ 0x3c
 80249f8:	2800      	cmp	r0, #0
 80249fa:	f000 80f6 	beq.w	8024bea <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 80249fe:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8024a00:	2bff      	cmp	r3, #255	@ 0xff
 8024a02:	f001 10ff 	and.w	r0, r1, #16711935	@ 0xff00ff
 8024a06:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8024a0a:	901d      	str	r0, [sp, #116]	@ 0x74
 8024a0c:	9109      	str	r1, [sp, #36]	@ 0x24
 8024a0e:	d01b      	beq.n	8024a48 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x554>
 8024a10:	fb01 f103 	mul.w	r1, r1, r3
 8024a14:	fb00 f003 	mul.w	r0, r0, r3
 8024a18:	460b      	mov	r3, r1
 8024a1a:	0a01      	lsrs	r1, r0, #8
 8024a1c:	f100 1701 	add.w	r7, r0, #65537	@ 0x10001
 8024a20:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8024a24:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 8024a28:	4439      	add	r1, r7
 8024a2a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8024a2e:	0a09      	lsrs	r1, r1, #8
 8024a30:	0a1b      	lsrs	r3, r3, #8
 8024a32:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8024a36:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8024a3a:	430b      	orrs	r3, r1
 8024a3c:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 8024a40:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8024a44:	911d      	str	r1, [sp, #116]	@ 0x74
 8024a46:	9309      	str	r3, [sp, #36]	@ 0x24
 8024a48:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8024a4a:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 8024a4c:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 8024a50:	2fff      	cmp	r7, #255	@ 0xff
 8024a52:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8024a56:	931e      	str	r3, [sp, #120]	@ 0x78
 8024a58:	911f      	str	r1, [sp, #124]	@ 0x7c
 8024a5a:	d01c      	beq.n	8024a96 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a2>
 8024a5c:	fb01 f107 	mul.w	r1, r1, r7
 8024a60:	fb03 f307 	mul.w	r3, r3, r7
 8024a64:	460f      	mov	r7, r1
 8024a66:	0a19      	lsrs	r1, r3, #8
 8024a68:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 8024a6c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8024a70:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 8024a74:	4401      	add	r1, r0
 8024a76:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8024a7a:	0a09      	lsrs	r1, r1, #8
 8024a7c:	0a1b      	lsrs	r3, r3, #8
 8024a7e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8024a82:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8024a86:	ea41 0003 	orr.w	r0, r1, r3
 8024a8a:	f000 13ff 	and.w	r3, r0, #16711935	@ 0xff00ff
 8024a8e:	931e      	str	r3, [sp, #120]	@ 0x78
 8024a90:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 8024a94:	931f      	str	r3, [sp, #124]	@ 0x7c
 8024a96:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8024a98:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 8024a9c:	f403 4c7f 	and.w	ip, r3, #65280	@ 0xff00
 8024aa0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8024aa2:	9120      	str	r1, [sp, #128]	@ 0x80
 8024aa4:	2bff      	cmp	r3, #255	@ 0xff
 8024aa6:	d01b      	beq.n	8024ae0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8024aa8:	fb01 f103 	mul.w	r1, r1, r3
 8024aac:	fb0c fc03 	mul.w	ip, ip, r3
 8024ab0:	0a08      	lsrs	r0, r1, #8
 8024ab2:	f50c 7380 	add.w	r3, ip, #256	@ 0x100
 8024ab6:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8024aba:	f101 1101 	add.w	r1, r1, #65537	@ 0x10001
 8024abe:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8024ac2:	4401      	add	r1, r0
 8024ac4:	0a09      	lsrs	r1, r1, #8
 8024ac6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024aca:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8024ace:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8024ad2:	ea41 0c0c 	orr.w	ip, r1, ip
 8024ad6:	f00c 13ff 	and.w	r3, ip, #16711935	@ 0xff00ff
 8024ada:	9320      	str	r3, [sp, #128]	@ 0x80
 8024adc:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8024ae0:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8024ae2:	f000 13ff 	and.w	r3, r0, #16711935	@ 0xff00ff
 8024ae6:	f400 477f 	and.w	r7, r0, #65280	@ 0xff00
 8024aea:	981c      	ldr	r0, [sp, #112]	@ 0x70
 8024aec:	9321      	str	r3, [sp, #132]	@ 0x84
 8024aee:	28ff      	cmp	r0, #255	@ 0xff
 8024af0:	d019      	beq.n	8024b26 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x632>
 8024af2:	fb03 f300 	mul.w	r3, r3, r0
 8024af6:	fb07 f700 	mul.w	r7, r7, r0
 8024afa:	0a18      	lsrs	r0, r3, #8
 8024afc:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8024b00:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 8024b04:	f507 7180 	add.w	r1, r7, #256	@ 0x100
 8024b08:	4418      	add	r0, r3
 8024b0a:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8024b0e:	0a00      	lsrs	r0, r0, #8
 8024b10:	0a3f      	lsrs	r7, r7, #8
 8024b12:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8024b16:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8024b1a:	4307      	orrs	r7, r0
 8024b1c:	f007 13ff 	and.w	r3, r7, #16711935	@ 0xff00ff
 8024b20:	9321      	str	r3, [sp, #132]	@ 0x84
 8024b22:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8024b26:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8024b28:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8024b2a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8024b2c:	fb01 f100 	mul.w	r1, r1, r0
 8024b30:	4608      	mov	r0, r1
 8024b32:	3101      	adds	r1, #1
 8024b34:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024b38:	ea6f 2110 	mvn.w	r1, r0, lsr #8
 8024b3c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8024b3e:	9125      	str	r1, [sp, #148]	@ 0x94
 8024b40:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8024b42:	fb01 f100 	mul.w	r1, r1, r0
 8024b46:	910f      	str	r1, [sp, #60]	@ 0x3c
 8024b48:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 8024b4a:	fb01 f100 	mul.w	r1, r1, r0
 8024b4e:	9110      	str	r1, [sp, #64]	@ 0x40
 8024b50:	991d      	ldr	r1, [sp, #116]	@ 0x74
 8024b52:	4608      	mov	r0, r1
 8024b54:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8024b56:	fb00 1103 	mla	r1, r0, r3, r1
 8024b5a:	910f      	str	r1, [sp, #60]	@ 0x3c
 8024b5c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8024b5e:	4608      	mov	r0, r1
 8024b60:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8024b62:	fb00 1003 	mla	r0, r0, r3, r1
 8024b66:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024b68:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8024b6a:	fb0c 000e 	mla	r0, ip, lr, r0
 8024b6e:	fb03 110e 	mla	r1, r3, lr, r1
 8024b72:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8024b74:	f89a c002 	ldrb.w	ip, [sl, #2]
 8024b78:	fb03 1102 	mla	r1, r3, r2, r1
 8024b7c:	fb07 0302 	mla	r3, r7, r2, r0
 8024b80:	0a0a      	lsrs	r2, r1, #8
 8024b82:	0a1b      	lsrs	r3, r3, #8
 8024b84:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8024b88:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8024b8c:	4313      	orrs	r3, r2
 8024b8e:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 8024b90:	b2df      	uxtb	r7, r3
 8024b92:	f3c3 2007 	ubfx	r0, r3, #8, #8
 8024b96:	0c1b      	lsrs	r3, r3, #16
 8024b98:	fb17 f702 	smulbb	r7, r7, r2
 8024b9c:	fb10 f002 	smulbb	r0, r0, r2
 8024ba0:	fb13 f302 	smulbb	r3, r3, r2
 8024ba4:	f89d e094 	ldrb.w	lr, [sp, #148]	@ 0x94
 8024ba8:	f89a 1000 	ldrb.w	r1, [sl]
 8024bac:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8024bb0:	fb01 710e 	mla	r1, r1, lr, r7
 8024bb4:	fb02 020e 	mla	r2, r2, lr, r0
 8024bb8:	fb0c 330e 	mla	r3, ip, lr, r3
 8024bbc:	b297      	uxth	r7, r2
 8024bbe:	fa1f fc81 	uxth.w	ip, r1
 8024bc2:	b298      	uxth	r0, r3
 8024bc4:	f10c 0101 	add.w	r1, ip, #1
 8024bc8:	1c7a      	adds	r2, r7, #1
 8024bca:	1c43      	adds	r3, r0, #1
 8024bcc:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 8024bd0:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8024bd4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8024bd8:	1209      	asrs	r1, r1, #8
 8024bda:	1212      	asrs	r2, r2, #8
 8024bdc:	121b      	asrs	r3, r3, #8
 8024bde:	f88a 1000 	strb.w	r1, [sl]
 8024be2:	f88a 2001 	strb.w	r2, [sl, #1]
 8024be6:	f88a 3002 	strb.w	r3, [sl, #2]
 8024bea:	f1b8 0f00 	cmp.w	r8, #0
 8024bee:	f10a 0a04 	add.w	sl, sl, #4
 8024bf2:	44b1      	add	r9, r6
 8024bf4:	44ab      	add	fp, r5
 8024bf6:	dd30      	ble.n	8024c5a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x766>
 8024bf8:	e9d4 1e02 	ldrd	r1, lr, [r4, #8]
 8024bfc:	ea4f 4329 	mov.w	r3, r9, asr #16
 8024c00:	2b00      	cmp	r3, #0
 8024c02:	f108 38ff 	add.w	r8, r8, #4294967295
 8024c06:	ea4f 422b 	mov.w	r2, fp, asr #16
 8024c0a:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8024c0e:	f3cb 3703 	ubfx	r7, fp, #12, #4
 8024c12:	f6bf aea3 	bge.w	802495c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 8024c16:	f113 0c01 	adds.w	ip, r3, #1
 8024c1a:	d4e6      	bmi.n	8024bea <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 8024c1c:	458c      	cmp	ip, r1
 8024c1e:	dce4      	bgt.n	8024bea <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 8024c20:	f112 0c01 	adds.w	ip, r2, #1
 8024c24:	d4e1      	bmi.n	8024bea <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 8024c26:	45f4      	cmp	ip, lr
 8024c28:	dcdf      	bgt.n	8024bea <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 8024c2a:	fa0f fe8e 	sxth.w	lr, lr
 8024c2e:	b209      	sxth	r1, r1
 8024c30:	e9cd 1e00 	strd	r1, lr, [sp]
 8024c34:	9923      	ldr	r1, [sp, #140]	@ 0x8c
 8024c36:	e9cd 2003 	strd	r2, r0, [sp, #12]
 8024c3a:	e9cd 7105 	strd	r7, r1, [sp, #20]
 8024c3e:	9302      	str	r3, [sp, #8]
 8024c40:	4651      	mov	r1, sl
 8024c42:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8024c44:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8024c46:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8024c48:	f7ff fab0 	bl	80241ac <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh>
 8024c4c:	f1b8 0f00 	cmp.w	r8, #0
 8024c50:	f10a 0a04 	add.w	sl, sl, #4
 8024c54:	44b1      	add	r9, r6
 8024c56:	44ab      	add	fp, r5
 8024c58:	dcce      	bgt.n	8024bf8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8024c5a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8024c5c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8024c5e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8024c62:	3301      	adds	r3, #1
 8024c64:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8024c68:	9312      	str	r3, [sp, #72]	@ 0x48
 8024c6a:	e4a8      	b.n	80245be <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 8024c6c:	9112      	str	r1, [sp, #72]	@ 0x48
 8024c6e:	f10e 31ff 	add.w	r1, lr, #4294967295
 8024c72:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8024c74:	910a      	str	r1, [sp, #40]	@ 0x28
 8024c76:	4688      	mov	r8, r1
 8024c78:	e662      	b.n	8024940 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44c>
 8024c7a:	2f00      	cmp	r7, #0
 8024c7c:	f43f ae98 	beq.w	80249b0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8024c80:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8024c82:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8024c86:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8024c8a:	0e13      	lsrs	r3, r2, #24
 8024c8c:	9226      	str	r2, [sp, #152]	@ 0x98
 8024c8e:	931b      	str	r3, [sp, #108]	@ 0x6c
 8024c90:	e68e      	b.n	80249b0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8024c92:	eb01 0e0c 	add.w	lr, r1, ip
 8024c96:	f89e e001 	ldrb.w	lr, [lr, #1]
 8024c9a:	f811 c00c 	ldrb.w	ip, [r1, ip]
 8024c9e:	f853 202e 	ldr.w	r2, [r3, lr, lsl #2]
 8024ca2:	4611      	mov	r1, r2
 8024ca4:	9227      	str	r2, [sp, #156]	@ 0x9c
 8024ca6:	f853 202c 	ldr.w	r2, [r3, ip, lsl #2]
 8024caa:	4613      	mov	r3, r2
 8024cac:	9226      	str	r2, [sp, #152]	@ 0x98
 8024cae:	0e0a      	lsrs	r2, r1, #24
 8024cb0:	921c      	str	r2, [sp, #112]	@ 0x70
 8024cb2:	0e1a      	lsrs	r2, r3, #24
 8024cb4:	921b      	str	r2, [sp, #108]	@ 0x6c
 8024cb6:	e67b      	b.n	80249b0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8024cb8:	f43f ac81 	beq.w	80245be <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 8024cbc:	1e44      	subs	r4, r0, #1
 8024cbe:	e4c2      	b.n	8024646 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>

08024cc0 <_GLOBAL__sub_I__ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_6WidgetERKNS_4RectE>:
 8024cc0:	2200      	movs	r2, #0
 8024cc2:	4b02      	ldr	r3, [pc, #8]	@ (8024ccc <_GLOBAL__sub_I__ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_6WidgetERKNS_4RectE+0xc>)
 8024cc4:	e9c3 2200 	strd	r2, r2, [r3]
 8024cc8:	4770      	bx	lr
 8024cca:	bf00      	nop
 8024ccc:	2004c1ac 	.word	0x2004c1ac

08024cd0 <__aeabi_atexit>:
 8024cd0:	460b      	mov	r3, r1
 8024cd2:	4601      	mov	r1, r0
 8024cd4:	4618      	mov	r0, r3
 8024cd6:	f000 b90f 	b.w	8024ef8 <__cxa_atexit>

08024cda <_ZdlPvj>:
 8024cda:	f000 b812 	b.w	8024d02 <_ZdlPv>

08024cde <__cxa_guard_acquire>:
 8024cde:	6802      	ldr	r2, [r0, #0]
 8024ce0:	4603      	mov	r3, r0
 8024ce2:	07d2      	lsls	r2, r2, #31
 8024ce4:	d405      	bmi.n	8024cf2 <__cxa_guard_acquire+0x14>
 8024ce6:	7842      	ldrb	r2, [r0, #1]
 8024ce8:	b102      	cbz	r2, 8024cec <__cxa_guard_acquire+0xe>
 8024cea:	deff      	udf	#255	@ 0xff
 8024cec:	2001      	movs	r0, #1
 8024cee:	7058      	strb	r0, [r3, #1]
 8024cf0:	4770      	bx	lr
 8024cf2:	2000      	movs	r0, #0
 8024cf4:	4770      	bx	lr

08024cf6 <__cxa_guard_release>:
 8024cf6:	2301      	movs	r3, #1
 8024cf8:	6003      	str	r3, [r0, #0]
 8024cfa:	4770      	bx	lr

08024cfc <__cxa_pure_virtual>:
 8024cfc:	b508      	push	{r3, lr}
 8024cfe:	f000 f80d 	bl	8024d1c <_ZSt9terminatev>

08024d02 <_ZdlPv>:
 8024d02:	f000 b843 	b.w	8024d8c <free>

08024d06 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8024d06:	b508      	push	{r3, lr}
 8024d08:	4780      	blx	r0
 8024d0a:	f000 f80c 	bl	8024d26 <abort>
	...

08024d10 <_ZSt13get_terminatev>:
 8024d10:	4b01      	ldr	r3, [pc, #4]	@ (8024d18 <_ZSt13get_terminatev+0x8>)
 8024d12:	e8d3 0faf 	lda	r0, [r3]
 8024d16:	4770      	bx	lr
 8024d18:	2000022c 	.word	0x2000022c

08024d1c <_ZSt9terminatev>:
 8024d1c:	b508      	push	{r3, lr}
 8024d1e:	f7ff fff7 	bl	8024d10 <_ZSt13get_terminatev>
 8024d22:	f7ff fff0 	bl	8024d06 <_ZN10__cxxabiv111__terminateEPFvvE>

08024d26 <abort>:
 8024d26:	2006      	movs	r0, #6
 8024d28:	b508      	push	{r3, lr}
 8024d2a:	f000 fb3f 	bl	80253ac <raise>
 8024d2e:	2001      	movs	r0, #1
 8024d30:	f7dc fbbe 	bl	80014b0 <_exit>

08024d34 <__assert_func>:
 8024d34:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8024d36:	4614      	mov	r4, r2
 8024d38:	461a      	mov	r2, r3
 8024d3a:	4b09      	ldr	r3, [pc, #36]	@ (8024d60 <__assert_func+0x2c>)
 8024d3c:	4605      	mov	r5, r0
 8024d3e:	681b      	ldr	r3, [r3, #0]
 8024d40:	68d8      	ldr	r0, [r3, #12]
 8024d42:	b954      	cbnz	r4, 8024d5a <__assert_func+0x26>
 8024d44:	4b07      	ldr	r3, [pc, #28]	@ (8024d64 <__assert_func+0x30>)
 8024d46:	461c      	mov	r4, r3
 8024d48:	9100      	str	r1, [sp, #0]
 8024d4a:	4907      	ldr	r1, [pc, #28]	@ (8024d68 <__assert_func+0x34>)
 8024d4c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8024d50:	462b      	mov	r3, r5
 8024d52:	f000 f983 	bl	802505c <fiprintf>
 8024d56:	f7ff ffe6 	bl	8024d26 <abort>
 8024d5a:	4b04      	ldr	r3, [pc, #16]	@ (8024d6c <__assert_func+0x38>)
 8024d5c:	e7f4      	b.n	8024d48 <__assert_func+0x14>
 8024d5e:	bf00      	nop
 8024d60:	2000023c 	.word	0x2000023c
 8024d64:	080296d9 	.word	0x080296d9
 8024d68:	080296ab 	.word	0x080296ab
 8024d6c:	0802969e 	.word	0x0802969e

08024d70 <atexit>:
 8024d70:	2300      	movs	r3, #0
 8024d72:	4601      	mov	r1, r0
 8024d74:	461a      	mov	r2, r3
 8024d76:	4618      	mov	r0, r3
 8024d78:	f000 bbc4 	b.w	8025504 <__register_exitproc>

08024d7c <malloc>:
 8024d7c:	4b02      	ldr	r3, [pc, #8]	@ (8024d88 <malloc+0xc>)
 8024d7e:	4601      	mov	r1, r0
 8024d80:	6818      	ldr	r0, [r3, #0]
 8024d82:	f000 b82d 	b.w	8024de0 <_malloc_r>
 8024d86:	bf00      	nop
 8024d88:	2000023c 	.word	0x2000023c

08024d8c <free>:
 8024d8c:	4b02      	ldr	r3, [pc, #8]	@ (8024d98 <free+0xc>)
 8024d8e:	4601      	mov	r1, r0
 8024d90:	6818      	ldr	r0, [r3, #0]
 8024d92:	f000 bc15 	b.w	80255c0 <_free_r>
 8024d96:	bf00      	nop
 8024d98:	2000023c 	.word	0x2000023c

08024d9c <sbrk_aligned>:
 8024d9c:	b570      	push	{r4, r5, r6, lr}
 8024d9e:	4e0f      	ldr	r6, [pc, #60]	@ (8024ddc <sbrk_aligned+0x40>)
 8024da0:	460c      	mov	r4, r1
 8024da2:	4605      	mov	r5, r0
 8024da4:	6831      	ldr	r1, [r6, #0]
 8024da6:	b911      	cbnz	r1, 8024dae <sbrk_aligned+0x12>
 8024da8:	f000 fb50 	bl	802544c <_sbrk_r>
 8024dac:	6030      	str	r0, [r6, #0]
 8024dae:	4621      	mov	r1, r4
 8024db0:	4628      	mov	r0, r5
 8024db2:	f000 fb4b 	bl	802544c <_sbrk_r>
 8024db6:	1c43      	adds	r3, r0, #1
 8024db8:	d103      	bne.n	8024dc2 <sbrk_aligned+0x26>
 8024dba:	f04f 34ff 	mov.w	r4, #4294967295
 8024dbe:	4620      	mov	r0, r4
 8024dc0:	bd70      	pop	{r4, r5, r6, pc}
 8024dc2:	1cc4      	adds	r4, r0, #3
 8024dc4:	f024 0403 	bic.w	r4, r4, #3
 8024dc8:	42a0      	cmp	r0, r4
 8024dca:	d0f8      	beq.n	8024dbe <sbrk_aligned+0x22>
 8024dcc:	1a21      	subs	r1, r4, r0
 8024dce:	4628      	mov	r0, r5
 8024dd0:	f000 fb3c 	bl	802544c <_sbrk_r>
 8024dd4:	3001      	adds	r0, #1
 8024dd6:	d1f2      	bne.n	8024dbe <sbrk_aligned+0x22>
 8024dd8:	e7ef      	b.n	8024dba <sbrk_aligned+0x1e>
 8024dda:	bf00      	nop
 8024ddc:	2004c1b4 	.word	0x2004c1b4

08024de0 <_malloc_r>:
 8024de0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8024de4:	1ccd      	adds	r5, r1, #3
 8024de6:	4606      	mov	r6, r0
 8024de8:	f025 0503 	bic.w	r5, r5, #3
 8024dec:	3508      	adds	r5, #8
 8024dee:	2d0c      	cmp	r5, #12
 8024df0:	bf38      	it	cc
 8024df2:	250c      	movcc	r5, #12
 8024df4:	2d00      	cmp	r5, #0
 8024df6:	db01      	blt.n	8024dfc <_malloc_r+0x1c>
 8024df8:	42a9      	cmp	r1, r5
 8024dfa:	d904      	bls.n	8024e06 <_malloc_r+0x26>
 8024dfc:	230c      	movs	r3, #12
 8024dfe:	6033      	str	r3, [r6, #0]
 8024e00:	2000      	movs	r0, #0
 8024e02:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8024e06:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8024edc <_malloc_r+0xfc>
 8024e0a:	f000 f869 	bl	8024ee0 <__malloc_lock>
 8024e0e:	f8d8 3000 	ldr.w	r3, [r8]
 8024e12:	461c      	mov	r4, r3
 8024e14:	bb44      	cbnz	r4, 8024e68 <_malloc_r+0x88>
 8024e16:	4629      	mov	r1, r5
 8024e18:	4630      	mov	r0, r6
 8024e1a:	f7ff ffbf 	bl	8024d9c <sbrk_aligned>
 8024e1e:	1c43      	adds	r3, r0, #1
 8024e20:	4604      	mov	r4, r0
 8024e22:	d158      	bne.n	8024ed6 <_malloc_r+0xf6>
 8024e24:	f8d8 4000 	ldr.w	r4, [r8]
 8024e28:	4627      	mov	r7, r4
 8024e2a:	2f00      	cmp	r7, #0
 8024e2c:	d143      	bne.n	8024eb6 <_malloc_r+0xd6>
 8024e2e:	2c00      	cmp	r4, #0
 8024e30:	d04b      	beq.n	8024eca <_malloc_r+0xea>
 8024e32:	6823      	ldr	r3, [r4, #0]
 8024e34:	4639      	mov	r1, r7
 8024e36:	4630      	mov	r0, r6
 8024e38:	eb04 0903 	add.w	r9, r4, r3
 8024e3c:	f000 fb06 	bl	802544c <_sbrk_r>
 8024e40:	4581      	cmp	r9, r0
 8024e42:	d142      	bne.n	8024eca <_malloc_r+0xea>
 8024e44:	6821      	ldr	r1, [r4, #0]
 8024e46:	4630      	mov	r0, r6
 8024e48:	1a6d      	subs	r5, r5, r1
 8024e4a:	4629      	mov	r1, r5
 8024e4c:	f7ff ffa6 	bl	8024d9c <sbrk_aligned>
 8024e50:	3001      	adds	r0, #1
 8024e52:	d03a      	beq.n	8024eca <_malloc_r+0xea>
 8024e54:	6823      	ldr	r3, [r4, #0]
 8024e56:	442b      	add	r3, r5
 8024e58:	6023      	str	r3, [r4, #0]
 8024e5a:	f8d8 3000 	ldr.w	r3, [r8]
 8024e5e:	685a      	ldr	r2, [r3, #4]
 8024e60:	bb62      	cbnz	r2, 8024ebc <_malloc_r+0xdc>
 8024e62:	f8c8 7000 	str.w	r7, [r8]
 8024e66:	e00f      	b.n	8024e88 <_malloc_r+0xa8>
 8024e68:	6822      	ldr	r2, [r4, #0]
 8024e6a:	1b52      	subs	r2, r2, r5
 8024e6c:	d420      	bmi.n	8024eb0 <_malloc_r+0xd0>
 8024e6e:	2a0b      	cmp	r2, #11
 8024e70:	d917      	bls.n	8024ea2 <_malloc_r+0xc2>
 8024e72:	1961      	adds	r1, r4, r5
 8024e74:	42a3      	cmp	r3, r4
 8024e76:	6025      	str	r5, [r4, #0]
 8024e78:	bf18      	it	ne
 8024e7a:	6059      	strne	r1, [r3, #4]
 8024e7c:	6863      	ldr	r3, [r4, #4]
 8024e7e:	bf08      	it	eq
 8024e80:	f8c8 1000 	streq.w	r1, [r8]
 8024e84:	5162      	str	r2, [r4, r5]
 8024e86:	604b      	str	r3, [r1, #4]
 8024e88:	4630      	mov	r0, r6
 8024e8a:	f000 f82f 	bl	8024eec <__malloc_unlock>
 8024e8e:	f104 000b 	add.w	r0, r4, #11
 8024e92:	1d23      	adds	r3, r4, #4
 8024e94:	f020 0007 	bic.w	r0, r0, #7
 8024e98:	1ac2      	subs	r2, r0, r3
 8024e9a:	bf1c      	itt	ne
 8024e9c:	1a1b      	subne	r3, r3, r0
 8024e9e:	50a3      	strne	r3, [r4, r2]
 8024ea0:	e7af      	b.n	8024e02 <_malloc_r+0x22>
 8024ea2:	6862      	ldr	r2, [r4, #4]
 8024ea4:	42a3      	cmp	r3, r4
 8024ea6:	bf0c      	ite	eq
 8024ea8:	f8c8 2000 	streq.w	r2, [r8]
 8024eac:	605a      	strne	r2, [r3, #4]
 8024eae:	e7eb      	b.n	8024e88 <_malloc_r+0xa8>
 8024eb0:	4623      	mov	r3, r4
 8024eb2:	6864      	ldr	r4, [r4, #4]
 8024eb4:	e7ae      	b.n	8024e14 <_malloc_r+0x34>
 8024eb6:	463c      	mov	r4, r7
 8024eb8:	687f      	ldr	r7, [r7, #4]
 8024eba:	e7b6      	b.n	8024e2a <_malloc_r+0x4a>
 8024ebc:	461a      	mov	r2, r3
 8024ebe:	685b      	ldr	r3, [r3, #4]
 8024ec0:	42a3      	cmp	r3, r4
 8024ec2:	d1fb      	bne.n	8024ebc <_malloc_r+0xdc>
 8024ec4:	2300      	movs	r3, #0
 8024ec6:	6053      	str	r3, [r2, #4]
 8024ec8:	e7de      	b.n	8024e88 <_malloc_r+0xa8>
 8024eca:	230c      	movs	r3, #12
 8024ecc:	4630      	mov	r0, r6
 8024ece:	6033      	str	r3, [r6, #0]
 8024ed0:	f000 f80c 	bl	8024eec <__malloc_unlock>
 8024ed4:	e794      	b.n	8024e00 <_malloc_r+0x20>
 8024ed6:	6005      	str	r5, [r0, #0]
 8024ed8:	e7d6      	b.n	8024e88 <_malloc_r+0xa8>
 8024eda:	bf00      	nop
 8024edc:	2004c1b8 	.word	0x2004c1b8

08024ee0 <__malloc_lock>:
 8024ee0:	4801      	ldr	r0, [pc, #4]	@ (8024ee8 <__malloc_lock+0x8>)
 8024ee2:	f000 bb00 	b.w	80254e6 <__retarget_lock_acquire_recursive>
 8024ee6:	bf00      	nop
 8024ee8:	2004c2fc 	.word	0x2004c2fc

08024eec <__malloc_unlock>:
 8024eec:	4801      	ldr	r0, [pc, #4]	@ (8024ef4 <__malloc_unlock+0x8>)
 8024eee:	f000 bafb 	b.w	80254e8 <__retarget_lock_release_recursive>
 8024ef2:	bf00      	nop
 8024ef4:	2004c2fc 	.word	0x2004c2fc

08024ef8 <__cxa_atexit>:
 8024ef8:	b510      	push	{r4, lr}
 8024efa:	4604      	mov	r4, r0
 8024efc:	4804      	ldr	r0, [pc, #16]	@ (8024f10 <__cxa_atexit+0x18>)
 8024efe:	4613      	mov	r3, r2
 8024f00:	b120      	cbz	r0, 8024f0c <__cxa_atexit+0x14>
 8024f02:	460a      	mov	r2, r1
 8024f04:	2002      	movs	r0, #2
 8024f06:	4621      	mov	r1, r4
 8024f08:	f000 fafc 	bl	8025504 <__register_exitproc>
 8024f0c:	bd10      	pop	{r4, pc}
 8024f0e:	bf00      	nop
 8024f10:	08025505 	.word	0x08025505

08024f14 <std>:
 8024f14:	2300      	movs	r3, #0
 8024f16:	b510      	push	{r4, lr}
 8024f18:	4604      	mov	r4, r0
 8024f1a:	6083      	str	r3, [r0, #8]
 8024f1c:	8181      	strh	r1, [r0, #12]
 8024f1e:	4619      	mov	r1, r3
 8024f20:	6643      	str	r3, [r0, #100]	@ 0x64
 8024f22:	81c2      	strh	r2, [r0, #14]
 8024f24:	2208      	movs	r2, #8
 8024f26:	6183      	str	r3, [r0, #24]
 8024f28:	e9c0 3300 	strd	r3, r3, [r0]
 8024f2c:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8024f30:	305c      	adds	r0, #92	@ 0x5c
 8024f32:	f000 fa0b 	bl	802534c <memset>
 8024f36:	4b0d      	ldr	r3, [pc, #52]	@ (8024f6c <std+0x58>)
 8024f38:	6224      	str	r4, [r4, #32]
 8024f3a:	6263      	str	r3, [r4, #36]	@ 0x24
 8024f3c:	4b0c      	ldr	r3, [pc, #48]	@ (8024f70 <std+0x5c>)
 8024f3e:	62a3      	str	r3, [r4, #40]	@ 0x28
 8024f40:	4b0c      	ldr	r3, [pc, #48]	@ (8024f74 <std+0x60>)
 8024f42:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8024f44:	4b0c      	ldr	r3, [pc, #48]	@ (8024f78 <std+0x64>)
 8024f46:	6323      	str	r3, [r4, #48]	@ 0x30
 8024f48:	4b0c      	ldr	r3, [pc, #48]	@ (8024f7c <std+0x68>)
 8024f4a:	429c      	cmp	r4, r3
 8024f4c:	d006      	beq.n	8024f5c <std+0x48>
 8024f4e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8024f52:	4294      	cmp	r4, r2
 8024f54:	d002      	beq.n	8024f5c <std+0x48>
 8024f56:	33d0      	adds	r3, #208	@ 0xd0
 8024f58:	429c      	cmp	r4, r3
 8024f5a:	d105      	bne.n	8024f68 <std+0x54>
 8024f5c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8024f60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024f64:	f000 babe 	b.w	80254e4 <__retarget_lock_init_recursive>
 8024f68:	bd10      	pop	{r4, pc}
 8024f6a:	bf00      	nop
 8024f6c:	0802519d 	.word	0x0802519d
 8024f70:	080251bf 	.word	0x080251bf
 8024f74:	080251f7 	.word	0x080251f7
 8024f78:	0802521b 	.word	0x0802521b
 8024f7c:	2004c1bc 	.word	0x2004c1bc

08024f80 <stdio_exit_handler>:
 8024f80:	4a02      	ldr	r2, [pc, #8]	@ (8024f8c <stdio_exit_handler+0xc>)
 8024f82:	4903      	ldr	r1, [pc, #12]	@ (8024f90 <stdio_exit_handler+0x10>)
 8024f84:	4803      	ldr	r0, [pc, #12]	@ (8024f94 <stdio_exit_handler+0x14>)
 8024f86:	f000 b87b 	b.w	8025080 <_fwalk_sglue>
 8024f8a:	bf00      	nop
 8024f8c:	20000230 	.word	0x20000230
 8024f90:	08025d05 	.word	0x08025d05
 8024f94:	20000240 	.word	0x20000240

08024f98 <cleanup_stdio>:
 8024f98:	6841      	ldr	r1, [r0, #4]
 8024f9a:	4b0c      	ldr	r3, [pc, #48]	@ (8024fcc <cleanup_stdio+0x34>)
 8024f9c:	4299      	cmp	r1, r3
 8024f9e:	b510      	push	{r4, lr}
 8024fa0:	4604      	mov	r4, r0
 8024fa2:	d001      	beq.n	8024fa8 <cleanup_stdio+0x10>
 8024fa4:	f000 feae 	bl	8025d04 <_fflush_r>
 8024fa8:	68a1      	ldr	r1, [r4, #8]
 8024faa:	4b09      	ldr	r3, [pc, #36]	@ (8024fd0 <cleanup_stdio+0x38>)
 8024fac:	4299      	cmp	r1, r3
 8024fae:	d002      	beq.n	8024fb6 <cleanup_stdio+0x1e>
 8024fb0:	4620      	mov	r0, r4
 8024fb2:	f000 fea7 	bl	8025d04 <_fflush_r>
 8024fb6:	68e1      	ldr	r1, [r4, #12]
 8024fb8:	4b06      	ldr	r3, [pc, #24]	@ (8024fd4 <cleanup_stdio+0x3c>)
 8024fba:	4299      	cmp	r1, r3
 8024fbc:	d004      	beq.n	8024fc8 <cleanup_stdio+0x30>
 8024fbe:	4620      	mov	r0, r4
 8024fc0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024fc4:	f000 be9e 	b.w	8025d04 <_fflush_r>
 8024fc8:	bd10      	pop	{r4, pc}
 8024fca:	bf00      	nop
 8024fcc:	2004c1bc 	.word	0x2004c1bc
 8024fd0:	2004c224 	.word	0x2004c224
 8024fd4:	2004c28c 	.word	0x2004c28c

08024fd8 <global_stdio_init.part.0>:
 8024fd8:	b510      	push	{r4, lr}
 8024fda:	4b0b      	ldr	r3, [pc, #44]	@ (8025008 <global_stdio_init.part.0+0x30>)
 8024fdc:	2104      	movs	r1, #4
 8024fde:	4c0b      	ldr	r4, [pc, #44]	@ (802500c <global_stdio_init.part.0+0x34>)
 8024fe0:	4a0b      	ldr	r2, [pc, #44]	@ (8025010 <global_stdio_init.part.0+0x38>)
 8024fe2:	4620      	mov	r0, r4
 8024fe4:	601a      	str	r2, [r3, #0]
 8024fe6:	2200      	movs	r2, #0
 8024fe8:	f7ff ff94 	bl	8024f14 <std>
 8024fec:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8024ff0:	2201      	movs	r2, #1
 8024ff2:	2109      	movs	r1, #9
 8024ff4:	f7ff ff8e 	bl	8024f14 <std>
 8024ff8:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8024ffc:	2202      	movs	r2, #2
 8024ffe:	2112      	movs	r1, #18
 8025000:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025004:	f7ff bf86 	b.w	8024f14 <std>
 8025008:	2004c2f4 	.word	0x2004c2f4
 802500c:	2004c1bc 	.word	0x2004c1bc
 8025010:	08024f81 	.word	0x08024f81

08025014 <__sfp_lock_acquire>:
 8025014:	4801      	ldr	r0, [pc, #4]	@ (802501c <__sfp_lock_acquire+0x8>)
 8025016:	f000 ba66 	b.w	80254e6 <__retarget_lock_acquire_recursive>
 802501a:	bf00      	nop
 802501c:	2004c2fe 	.word	0x2004c2fe

08025020 <__sfp_lock_release>:
 8025020:	4801      	ldr	r0, [pc, #4]	@ (8025028 <__sfp_lock_release+0x8>)
 8025022:	f000 ba61 	b.w	80254e8 <__retarget_lock_release_recursive>
 8025026:	bf00      	nop
 8025028:	2004c2fe 	.word	0x2004c2fe

0802502c <__sinit>:
 802502c:	b510      	push	{r4, lr}
 802502e:	4604      	mov	r4, r0
 8025030:	f7ff fff0 	bl	8025014 <__sfp_lock_acquire>
 8025034:	6a23      	ldr	r3, [r4, #32]
 8025036:	b11b      	cbz	r3, 8025040 <__sinit+0x14>
 8025038:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802503c:	f7ff bff0 	b.w	8025020 <__sfp_lock_release>
 8025040:	4b04      	ldr	r3, [pc, #16]	@ (8025054 <__sinit+0x28>)
 8025042:	6223      	str	r3, [r4, #32]
 8025044:	4b04      	ldr	r3, [pc, #16]	@ (8025058 <__sinit+0x2c>)
 8025046:	681b      	ldr	r3, [r3, #0]
 8025048:	2b00      	cmp	r3, #0
 802504a:	d1f5      	bne.n	8025038 <__sinit+0xc>
 802504c:	f7ff ffc4 	bl	8024fd8 <global_stdio_init.part.0>
 8025050:	e7f2      	b.n	8025038 <__sinit+0xc>
 8025052:	bf00      	nop
 8025054:	08024f99 	.word	0x08024f99
 8025058:	2004c2f4 	.word	0x2004c2f4

0802505c <fiprintf>:
 802505c:	b40e      	push	{r1, r2, r3}
 802505e:	b503      	push	{r0, r1, lr}
 8025060:	ab03      	add	r3, sp, #12
 8025062:	4601      	mov	r1, r0
 8025064:	4805      	ldr	r0, [pc, #20]	@ (802507c <fiprintf+0x20>)
 8025066:	f853 2b04 	ldr.w	r2, [r3], #4
 802506a:	6800      	ldr	r0, [r0, #0]
 802506c:	9301      	str	r3, [sp, #4]
 802506e:	f000 fb1b 	bl	80256a8 <_vfiprintf_r>
 8025072:	b002      	add	sp, #8
 8025074:	f85d eb04 	ldr.w	lr, [sp], #4
 8025078:	b003      	add	sp, #12
 802507a:	4770      	bx	lr
 802507c:	2000023c 	.word	0x2000023c

08025080 <_fwalk_sglue>:
 8025080:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025084:	4607      	mov	r7, r0
 8025086:	4688      	mov	r8, r1
 8025088:	4614      	mov	r4, r2
 802508a:	2600      	movs	r6, #0
 802508c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8025090:	f1b9 0901 	subs.w	r9, r9, #1
 8025094:	d505      	bpl.n	80250a2 <_fwalk_sglue+0x22>
 8025096:	6824      	ldr	r4, [r4, #0]
 8025098:	2c00      	cmp	r4, #0
 802509a:	d1f7      	bne.n	802508c <_fwalk_sglue+0xc>
 802509c:	4630      	mov	r0, r6
 802509e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80250a2:	89ab      	ldrh	r3, [r5, #12]
 80250a4:	2b01      	cmp	r3, #1
 80250a6:	d907      	bls.n	80250b8 <_fwalk_sglue+0x38>
 80250a8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80250ac:	3301      	adds	r3, #1
 80250ae:	d003      	beq.n	80250b8 <_fwalk_sglue+0x38>
 80250b0:	4629      	mov	r1, r5
 80250b2:	4638      	mov	r0, r7
 80250b4:	47c0      	blx	r8
 80250b6:	4306      	orrs	r6, r0
 80250b8:	3568      	adds	r5, #104	@ 0x68
 80250ba:	e7e9      	b.n	8025090 <_fwalk_sglue+0x10>

080250bc <iprintf>:
 80250bc:	b40f      	push	{r0, r1, r2, r3}
 80250be:	b507      	push	{r0, r1, r2, lr}
 80250c0:	4906      	ldr	r1, [pc, #24]	@ (80250dc <iprintf+0x20>)
 80250c2:	ab04      	add	r3, sp, #16
 80250c4:	6808      	ldr	r0, [r1, #0]
 80250c6:	f853 2b04 	ldr.w	r2, [r3], #4
 80250ca:	6881      	ldr	r1, [r0, #8]
 80250cc:	9301      	str	r3, [sp, #4]
 80250ce:	f000 faeb 	bl	80256a8 <_vfiprintf_r>
 80250d2:	b003      	add	sp, #12
 80250d4:	f85d eb04 	ldr.w	lr, [sp], #4
 80250d8:	b004      	add	sp, #16
 80250da:	4770      	bx	lr
 80250dc:	2000023c 	.word	0x2000023c

080250e0 <_puts_r>:
 80250e0:	6a03      	ldr	r3, [r0, #32]
 80250e2:	b570      	push	{r4, r5, r6, lr}
 80250e4:	4605      	mov	r5, r0
 80250e6:	460e      	mov	r6, r1
 80250e8:	6884      	ldr	r4, [r0, #8]
 80250ea:	b90b      	cbnz	r3, 80250f0 <_puts_r+0x10>
 80250ec:	f7ff ff9e 	bl	802502c <__sinit>
 80250f0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80250f2:	07db      	lsls	r3, r3, #31
 80250f4:	d405      	bmi.n	8025102 <_puts_r+0x22>
 80250f6:	89a3      	ldrh	r3, [r4, #12]
 80250f8:	0598      	lsls	r0, r3, #22
 80250fa:	d402      	bmi.n	8025102 <_puts_r+0x22>
 80250fc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80250fe:	f000 f9f2 	bl	80254e6 <__retarget_lock_acquire_recursive>
 8025102:	89a3      	ldrh	r3, [r4, #12]
 8025104:	0719      	lsls	r1, r3, #28
 8025106:	d502      	bpl.n	802510e <_puts_r+0x2e>
 8025108:	6923      	ldr	r3, [r4, #16]
 802510a:	2b00      	cmp	r3, #0
 802510c:	d135      	bne.n	802517a <_puts_r+0x9a>
 802510e:	4621      	mov	r1, r4
 8025110:	4628      	mov	r0, r5
 8025112:	f000 f8c5 	bl	80252a0 <__swsetup_r>
 8025116:	b380      	cbz	r0, 802517a <_puts_r+0x9a>
 8025118:	f04f 35ff 	mov.w	r5, #4294967295
 802511c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 802511e:	07da      	lsls	r2, r3, #31
 8025120:	d405      	bmi.n	802512e <_puts_r+0x4e>
 8025122:	89a3      	ldrh	r3, [r4, #12]
 8025124:	059b      	lsls	r3, r3, #22
 8025126:	d402      	bmi.n	802512e <_puts_r+0x4e>
 8025128:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802512a:	f000 f9dd 	bl	80254e8 <__retarget_lock_release_recursive>
 802512e:	4628      	mov	r0, r5
 8025130:	bd70      	pop	{r4, r5, r6, pc}
 8025132:	2b00      	cmp	r3, #0
 8025134:	da04      	bge.n	8025140 <_puts_r+0x60>
 8025136:	69a2      	ldr	r2, [r4, #24]
 8025138:	429a      	cmp	r2, r3
 802513a:	dc17      	bgt.n	802516c <_puts_r+0x8c>
 802513c:	290a      	cmp	r1, #10
 802513e:	d015      	beq.n	802516c <_puts_r+0x8c>
 8025140:	6823      	ldr	r3, [r4, #0]
 8025142:	1c5a      	adds	r2, r3, #1
 8025144:	6022      	str	r2, [r4, #0]
 8025146:	7019      	strb	r1, [r3, #0]
 8025148:	68a3      	ldr	r3, [r4, #8]
 802514a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 802514e:	3b01      	subs	r3, #1
 8025150:	60a3      	str	r3, [r4, #8]
 8025152:	2900      	cmp	r1, #0
 8025154:	d1ed      	bne.n	8025132 <_puts_r+0x52>
 8025156:	2b00      	cmp	r3, #0
 8025158:	da11      	bge.n	802517e <_puts_r+0x9e>
 802515a:	4622      	mov	r2, r4
 802515c:	210a      	movs	r1, #10
 802515e:	4628      	mov	r0, r5
 8025160:	f000 f85f 	bl	8025222 <__swbuf_r>
 8025164:	3001      	adds	r0, #1
 8025166:	d0d7      	beq.n	8025118 <_puts_r+0x38>
 8025168:	250a      	movs	r5, #10
 802516a:	e7d7      	b.n	802511c <_puts_r+0x3c>
 802516c:	4622      	mov	r2, r4
 802516e:	4628      	mov	r0, r5
 8025170:	f000 f857 	bl	8025222 <__swbuf_r>
 8025174:	3001      	adds	r0, #1
 8025176:	d1e7      	bne.n	8025148 <_puts_r+0x68>
 8025178:	e7ce      	b.n	8025118 <_puts_r+0x38>
 802517a:	3e01      	subs	r6, #1
 802517c:	e7e4      	b.n	8025148 <_puts_r+0x68>
 802517e:	6823      	ldr	r3, [r4, #0]
 8025180:	1c5a      	adds	r2, r3, #1
 8025182:	6022      	str	r2, [r4, #0]
 8025184:	220a      	movs	r2, #10
 8025186:	701a      	strb	r2, [r3, #0]
 8025188:	e7ee      	b.n	8025168 <_puts_r+0x88>
	...

0802518c <puts>:
 802518c:	4b02      	ldr	r3, [pc, #8]	@ (8025198 <puts+0xc>)
 802518e:	4601      	mov	r1, r0
 8025190:	6818      	ldr	r0, [r3, #0]
 8025192:	f7ff bfa5 	b.w	80250e0 <_puts_r>
 8025196:	bf00      	nop
 8025198:	2000023c 	.word	0x2000023c

0802519c <__sread>:
 802519c:	b510      	push	{r4, lr}
 802519e:	460c      	mov	r4, r1
 80251a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80251a4:	f000 f92c 	bl	8025400 <_read_r>
 80251a8:	2800      	cmp	r0, #0
 80251aa:	bfab      	itete	ge
 80251ac:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80251ae:	89a3      	ldrhlt	r3, [r4, #12]
 80251b0:	181b      	addge	r3, r3, r0
 80251b2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80251b6:	bfac      	ite	ge
 80251b8:	6563      	strge	r3, [r4, #84]	@ 0x54
 80251ba:	81a3      	strhlt	r3, [r4, #12]
 80251bc:	bd10      	pop	{r4, pc}

080251be <__swrite>:
 80251be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80251c2:	461f      	mov	r7, r3
 80251c4:	898b      	ldrh	r3, [r1, #12]
 80251c6:	4605      	mov	r5, r0
 80251c8:	460c      	mov	r4, r1
 80251ca:	05db      	lsls	r3, r3, #23
 80251cc:	4616      	mov	r6, r2
 80251ce:	d505      	bpl.n	80251dc <__swrite+0x1e>
 80251d0:	2302      	movs	r3, #2
 80251d2:	2200      	movs	r2, #0
 80251d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80251d8:	f000 f900 	bl	80253dc <_lseek_r>
 80251dc:	89a3      	ldrh	r3, [r4, #12]
 80251de:	4632      	mov	r2, r6
 80251e0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80251e4:	4628      	mov	r0, r5
 80251e6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80251ea:	81a3      	strh	r3, [r4, #12]
 80251ec:	463b      	mov	r3, r7
 80251ee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80251f2:	f000 b93b 	b.w	802546c <_write_r>

080251f6 <__sseek>:
 80251f6:	b510      	push	{r4, lr}
 80251f8:	460c      	mov	r4, r1
 80251fa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80251fe:	f000 f8ed 	bl	80253dc <_lseek_r>
 8025202:	1c43      	adds	r3, r0, #1
 8025204:	89a3      	ldrh	r3, [r4, #12]
 8025206:	bf15      	itete	ne
 8025208:	6560      	strne	r0, [r4, #84]	@ 0x54
 802520a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 802520e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8025212:	81a3      	strheq	r3, [r4, #12]
 8025214:	bf18      	it	ne
 8025216:	81a3      	strhne	r3, [r4, #12]
 8025218:	bd10      	pop	{r4, pc}

0802521a <__sclose>:
 802521a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802521e:	f000 b8cd 	b.w	80253bc <_close_r>

08025222 <__swbuf_r>:
 8025222:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025224:	460e      	mov	r6, r1
 8025226:	4614      	mov	r4, r2
 8025228:	4605      	mov	r5, r0
 802522a:	b118      	cbz	r0, 8025234 <__swbuf_r+0x12>
 802522c:	6a03      	ldr	r3, [r0, #32]
 802522e:	b90b      	cbnz	r3, 8025234 <__swbuf_r+0x12>
 8025230:	f7ff fefc 	bl	802502c <__sinit>
 8025234:	69a3      	ldr	r3, [r4, #24]
 8025236:	60a3      	str	r3, [r4, #8]
 8025238:	89a3      	ldrh	r3, [r4, #12]
 802523a:	071a      	lsls	r2, r3, #28
 802523c:	d501      	bpl.n	8025242 <__swbuf_r+0x20>
 802523e:	6923      	ldr	r3, [r4, #16]
 8025240:	b943      	cbnz	r3, 8025254 <__swbuf_r+0x32>
 8025242:	4621      	mov	r1, r4
 8025244:	4628      	mov	r0, r5
 8025246:	f000 f82b 	bl	80252a0 <__swsetup_r>
 802524a:	b118      	cbz	r0, 8025254 <__swbuf_r+0x32>
 802524c:	f04f 37ff 	mov.w	r7, #4294967295
 8025250:	4638      	mov	r0, r7
 8025252:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8025254:	6823      	ldr	r3, [r4, #0]
 8025256:	b2f6      	uxtb	r6, r6
 8025258:	6922      	ldr	r2, [r4, #16]
 802525a:	4637      	mov	r7, r6
 802525c:	1a98      	subs	r0, r3, r2
 802525e:	6963      	ldr	r3, [r4, #20]
 8025260:	4283      	cmp	r3, r0
 8025262:	dc05      	bgt.n	8025270 <__swbuf_r+0x4e>
 8025264:	4621      	mov	r1, r4
 8025266:	4628      	mov	r0, r5
 8025268:	f000 fd4c 	bl	8025d04 <_fflush_r>
 802526c:	2800      	cmp	r0, #0
 802526e:	d1ed      	bne.n	802524c <__swbuf_r+0x2a>
 8025270:	68a3      	ldr	r3, [r4, #8]
 8025272:	3b01      	subs	r3, #1
 8025274:	60a3      	str	r3, [r4, #8]
 8025276:	6823      	ldr	r3, [r4, #0]
 8025278:	1c5a      	adds	r2, r3, #1
 802527a:	6022      	str	r2, [r4, #0]
 802527c:	701e      	strb	r6, [r3, #0]
 802527e:	1c43      	adds	r3, r0, #1
 8025280:	6962      	ldr	r2, [r4, #20]
 8025282:	429a      	cmp	r2, r3
 8025284:	d004      	beq.n	8025290 <__swbuf_r+0x6e>
 8025286:	89a3      	ldrh	r3, [r4, #12]
 8025288:	07db      	lsls	r3, r3, #31
 802528a:	d5e1      	bpl.n	8025250 <__swbuf_r+0x2e>
 802528c:	2e0a      	cmp	r6, #10
 802528e:	d1df      	bne.n	8025250 <__swbuf_r+0x2e>
 8025290:	4621      	mov	r1, r4
 8025292:	4628      	mov	r0, r5
 8025294:	f000 fd36 	bl	8025d04 <_fflush_r>
 8025298:	2800      	cmp	r0, #0
 802529a:	d0d9      	beq.n	8025250 <__swbuf_r+0x2e>
 802529c:	e7d6      	b.n	802524c <__swbuf_r+0x2a>
	...

080252a0 <__swsetup_r>:
 80252a0:	b538      	push	{r3, r4, r5, lr}
 80252a2:	4b29      	ldr	r3, [pc, #164]	@ (8025348 <__swsetup_r+0xa8>)
 80252a4:	4605      	mov	r5, r0
 80252a6:	460c      	mov	r4, r1
 80252a8:	6818      	ldr	r0, [r3, #0]
 80252aa:	b118      	cbz	r0, 80252b4 <__swsetup_r+0x14>
 80252ac:	6a03      	ldr	r3, [r0, #32]
 80252ae:	b90b      	cbnz	r3, 80252b4 <__swsetup_r+0x14>
 80252b0:	f7ff febc 	bl	802502c <__sinit>
 80252b4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80252b8:	0719      	lsls	r1, r3, #28
 80252ba:	d422      	bmi.n	8025302 <__swsetup_r+0x62>
 80252bc:	06da      	lsls	r2, r3, #27
 80252be:	d407      	bmi.n	80252d0 <__swsetup_r+0x30>
 80252c0:	2209      	movs	r2, #9
 80252c2:	602a      	str	r2, [r5, #0]
 80252c4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80252c8:	f04f 30ff 	mov.w	r0, #4294967295
 80252cc:	81a3      	strh	r3, [r4, #12]
 80252ce:	e033      	b.n	8025338 <__swsetup_r+0x98>
 80252d0:	0758      	lsls	r0, r3, #29
 80252d2:	d512      	bpl.n	80252fa <__swsetup_r+0x5a>
 80252d4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80252d6:	b141      	cbz	r1, 80252ea <__swsetup_r+0x4a>
 80252d8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80252dc:	4299      	cmp	r1, r3
 80252de:	d002      	beq.n	80252e6 <__swsetup_r+0x46>
 80252e0:	4628      	mov	r0, r5
 80252e2:	f000 f96d 	bl	80255c0 <_free_r>
 80252e6:	2300      	movs	r3, #0
 80252e8:	6363      	str	r3, [r4, #52]	@ 0x34
 80252ea:	89a3      	ldrh	r3, [r4, #12]
 80252ec:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80252f0:	81a3      	strh	r3, [r4, #12]
 80252f2:	2300      	movs	r3, #0
 80252f4:	6063      	str	r3, [r4, #4]
 80252f6:	6923      	ldr	r3, [r4, #16]
 80252f8:	6023      	str	r3, [r4, #0]
 80252fa:	89a3      	ldrh	r3, [r4, #12]
 80252fc:	f043 0308 	orr.w	r3, r3, #8
 8025300:	81a3      	strh	r3, [r4, #12]
 8025302:	6923      	ldr	r3, [r4, #16]
 8025304:	b94b      	cbnz	r3, 802531a <__swsetup_r+0x7a>
 8025306:	89a3      	ldrh	r3, [r4, #12]
 8025308:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 802530c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8025310:	d003      	beq.n	802531a <__swsetup_r+0x7a>
 8025312:	4621      	mov	r1, r4
 8025314:	4628      	mov	r0, r5
 8025316:	f000 fd42 	bl	8025d9e <__smakebuf_r>
 802531a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802531e:	f013 0201 	ands.w	r2, r3, #1
 8025322:	d00a      	beq.n	802533a <__swsetup_r+0x9a>
 8025324:	2200      	movs	r2, #0
 8025326:	60a2      	str	r2, [r4, #8]
 8025328:	6962      	ldr	r2, [r4, #20]
 802532a:	4252      	negs	r2, r2
 802532c:	61a2      	str	r2, [r4, #24]
 802532e:	6922      	ldr	r2, [r4, #16]
 8025330:	b942      	cbnz	r2, 8025344 <__swsetup_r+0xa4>
 8025332:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8025336:	d1c5      	bne.n	80252c4 <__swsetup_r+0x24>
 8025338:	bd38      	pop	{r3, r4, r5, pc}
 802533a:	0799      	lsls	r1, r3, #30
 802533c:	bf58      	it	pl
 802533e:	6962      	ldrpl	r2, [r4, #20]
 8025340:	60a2      	str	r2, [r4, #8]
 8025342:	e7f4      	b.n	802532e <__swsetup_r+0x8e>
 8025344:	2000      	movs	r0, #0
 8025346:	e7f7      	b.n	8025338 <__swsetup_r+0x98>
 8025348:	2000023c 	.word	0x2000023c

0802534c <memset>:
 802534c:	4402      	add	r2, r0
 802534e:	4603      	mov	r3, r0
 8025350:	4293      	cmp	r3, r2
 8025352:	d100      	bne.n	8025356 <memset+0xa>
 8025354:	4770      	bx	lr
 8025356:	f803 1b01 	strb.w	r1, [r3], #1
 802535a:	e7f9      	b.n	8025350 <memset+0x4>

0802535c <_raise_r>:
 802535c:	291f      	cmp	r1, #31
 802535e:	b538      	push	{r3, r4, r5, lr}
 8025360:	4605      	mov	r5, r0
 8025362:	460c      	mov	r4, r1
 8025364:	d904      	bls.n	8025370 <_raise_r+0x14>
 8025366:	2316      	movs	r3, #22
 8025368:	6003      	str	r3, [r0, #0]
 802536a:	f04f 30ff 	mov.w	r0, #4294967295
 802536e:	bd38      	pop	{r3, r4, r5, pc}
 8025370:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8025372:	b112      	cbz	r2, 802537a <_raise_r+0x1e>
 8025374:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8025378:	b94b      	cbnz	r3, 802538e <_raise_r+0x32>
 802537a:	4628      	mov	r0, r5
 802537c:	f000 f864 	bl	8025448 <_getpid_r>
 8025380:	4622      	mov	r2, r4
 8025382:	4601      	mov	r1, r0
 8025384:	4628      	mov	r0, r5
 8025386:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802538a:	f000 b84b 	b.w	8025424 <_kill_r>
 802538e:	2b01      	cmp	r3, #1
 8025390:	d00a      	beq.n	80253a8 <_raise_r+0x4c>
 8025392:	1c59      	adds	r1, r3, #1
 8025394:	d103      	bne.n	802539e <_raise_r+0x42>
 8025396:	2316      	movs	r3, #22
 8025398:	6003      	str	r3, [r0, #0]
 802539a:	2001      	movs	r0, #1
 802539c:	e7e7      	b.n	802536e <_raise_r+0x12>
 802539e:	2100      	movs	r1, #0
 80253a0:	4620      	mov	r0, r4
 80253a2:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 80253a6:	4798      	blx	r3
 80253a8:	2000      	movs	r0, #0
 80253aa:	e7e0      	b.n	802536e <_raise_r+0x12>

080253ac <raise>:
 80253ac:	4b02      	ldr	r3, [pc, #8]	@ (80253b8 <raise+0xc>)
 80253ae:	4601      	mov	r1, r0
 80253b0:	6818      	ldr	r0, [r3, #0]
 80253b2:	f7ff bfd3 	b.w	802535c <_raise_r>
 80253b6:	bf00      	nop
 80253b8:	2000023c 	.word	0x2000023c

080253bc <_close_r>:
 80253bc:	b538      	push	{r3, r4, r5, lr}
 80253be:	2300      	movs	r3, #0
 80253c0:	4d05      	ldr	r5, [pc, #20]	@ (80253d8 <_close_r+0x1c>)
 80253c2:	4604      	mov	r4, r0
 80253c4:	4608      	mov	r0, r1
 80253c6:	602b      	str	r3, [r5, #0]
 80253c8:	f7dc f894 	bl	80014f4 <_close>
 80253cc:	1c43      	adds	r3, r0, #1
 80253ce:	d102      	bne.n	80253d6 <_close_r+0x1a>
 80253d0:	682b      	ldr	r3, [r5, #0]
 80253d2:	b103      	cbz	r3, 80253d6 <_close_r+0x1a>
 80253d4:	6023      	str	r3, [r4, #0]
 80253d6:	bd38      	pop	{r3, r4, r5, pc}
 80253d8:	2004c2f8 	.word	0x2004c2f8

080253dc <_lseek_r>:
 80253dc:	b538      	push	{r3, r4, r5, lr}
 80253de:	4604      	mov	r4, r0
 80253e0:	4d06      	ldr	r5, [pc, #24]	@ (80253fc <_lseek_r+0x20>)
 80253e2:	4608      	mov	r0, r1
 80253e4:	4611      	mov	r1, r2
 80253e6:	2200      	movs	r2, #0
 80253e8:	602a      	str	r2, [r5, #0]
 80253ea:	461a      	mov	r2, r3
 80253ec:	f7dc f88c 	bl	8001508 <_lseek>
 80253f0:	1c43      	adds	r3, r0, #1
 80253f2:	d102      	bne.n	80253fa <_lseek_r+0x1e>
 80253f4:	682b      	ldr	r3, [r5, #0]
 80253f6:	b103      	cbz	r3, 80253fa <_lseek_r+0x1e>
 80253f8:	6023      	str	r3, [r4, #0]
 80253fa:	bd38      	pop	{r3, r4, r5, pc}
 80253fc:	2004c2f8 	.word	0x2004c2f8

08025400 <_read_r>:
 8025400:	b538      	push	{r3, r4, r5, lr}
 8025402:	4604      	mov	r4, r0
 8025404:	4d06      	ldr	r5, [pc, #24]	@ (8025420 <_read_r+0x20>)
 8025406:	4608      	mov	r0, r1
 8025408:	4611      	mov	r1, r2
 802540a:	2200      	movs	r2, #0
 802540c:	602a      	str	r2, [r5, #0]
 802540e:	461a      	mov	r2, r3
 8025410:	f7dc f854 	bl	80014bc <_read>
 8025414:	1c43      	adds	r3, r0, #1
 8025416:	d102      	bne.n	802541e <_read_r+0x1e>
 8025418:	682b      	ldr	r3, [r5, #0]
 802541a:	b103      	cbz	r3, 802541e <_read_r+0x1e>
 802541c:	6023      	str	r3, [r4, #0]
 802541e:	bd38      	pop	{r3, r4, r5, pc}
 8025420:	2004c2f8 	.word	0x2004c2f8

08025424 <_kill_r>:
 8025424:	b538      	push	{r3, r4, r5, lr}
 8025426:	2300      	movs	r3, #0
 8025428:	4d06      	ldr	r5, [pc, #24]	@ (8025444 <_kill_r+0x20>)
 802542a:	4604      	mov	r4, r0
 802542c:	4608      	mov	r0, r1
 802542e:	4611      	mov	r1, r2
 8025430:	602b      	str	r3, [r5, #0]
 8025432:	f7dc f835 	bl	80014a0 <_kill>
 8025436:	1c43      	adds	r3, r0, #1
 8025438:	d102      	bne.n	8025440 <_kill_r+0x1c>
 802543a:	682b      	ldr	r3, [r5, #0]
 802543c:	b103      	cbz	r3, 8025440 <_kill_r+0x1c>
 802543e:	6023      	str	r3, [r4, #0]
 8025440:	bd38      	pop	{r3, r4, r5, pc}
 8025442:	bf00      	nop
 8025444:	2004c2f8 	.word	0x2004c2f8

08025448 <_getpid_r>:
 8025448:	f7dc b828 	b.w	800149c <_getpid>

0802544c <_sbrk_r>:
 802544c:	b538      	push	{r3, r4, r5, lr}
 802544e:	2300      	movs	r3, #0
 8025450:	4d05      	ldr	r5, [pc, #20]	@ (8025468 <_sbrk_r+0x1c>)
 8025452:	4604      	mov	r4, r0
 8025454:	4608      	mov	r0, r1
 8025456:	602b      	str	r3, [r5, #0]
 8025458:	f7dc f858 	bl	800150c <_sbrk>
 802545c:	1c43      	adds	r3, r0, #1
 802545e:	d102      	bne.n	8025466 <_sbrk_r+0x1a>
 8025460:	682b      	ldr	r3, [r5, #0]
 8025462:	b103      	cbz	r3, 8025466 <_sbrk_r+0x1a>
 8025464:	6023      	str	r3, [r4, #0]
 8025466:	bd38      	pop	{r3, r4, r5, pc}
 8025468:	2004c2f8 	.word	0x2004c2f8

0802546c <_write_r>:
 802546c:	b538      	push	{r3, r4, r5, lr}
 802546e:	4604      	mov	r4, r0
 8025470:	4d06      	ldr	r5, [pc, #24]	@ (802548c <_write_r+0x20>)
 8025472:	4608      	mov	r0, r1
 8025474:	4611      	mov	r1, r2
 8025476:	2200      	movs	r2, #0
 8025478:	602a      	str	r2, [r5, #0]
 802547a:	461a      	mov	r2, r3
 802547c:	f7dc f82c 	bl	80014d8 <_write>
 8025480:	1c43      	adds	r3, r0, #1
 8025482:	d102      	bne.n	802548a <_write_r+0x1e>
 8025484:	682b      	ldr	r3, [r5, #0]
 8025486:	b103      	cbz	r3, 802548a <_write_r+0x1e>
 8025488:	6023      	str	r3, [r4, #0]
 802548a:	bd38      	pop	{r3, r4, r5, pc}
 802548c:	2004c2f8 	.word	0x2004c2f8

08025490 <__errno>:
 8025490:	4b01      	ldr	r3, [pc, #4]	@ (8025498 <__errno+0x8>)
 8025492:	6818      	ldr	r0, [r3, #0]
 8025494:	4770      	bx	lr
 8025496:	bf00      	nop
 8025498:	2000023c 	.word	0x2000023c

0802549c <__libc_init_array>:
 802549c:	b570      	push	{r4, r5, r6, lr}
 802549e:	4d0d      	ldr	r5, [pc, #52]	@ (80254d4 <__libc_init_array+0x38>)
 80254a0:	2600      	movs	r6, #0
 80254a2:	4c0d      	ldr	r4, [pc, #52]	@ (80254d8 <__libc_init_array+0x3c>)
 80254a4:	1b64      	subs	r4, r4, r5
 80254a6:	10a4      	asrs	r4, r4, #2
 80254a8:	42a6      	cmp	r6, r4
 80254aa:	d109      	bne.n	80254c0 <__libc_init_array+0x24>
 80254ac:	4d0b      	ldr	r5, [pc, #44]	@ (80254dc <__libc_init_array+0x40>)
 80254ae:	2600      	movs	r6, #0
 80254b0:	4c0b      	ldr	r4, [pc, #44]	@ (80254e0 <__libc_init_array+0x44>)
 80254b2:	f000 fce1 	bl	8025e78 <_init>
 80254b6:	1b64      	subs	r4, r4, r5
 80254b8:	10a4      	asrs	r4, r4, #2
 80254ba:	42a6      	cmp	r6, r4
 80254bc:	d105      	bne.n	80254ca <__libc_init_array+0x2e>
 80254be:	bd70      	pop	{r4, r5, r6, pc}
 80254c0:	f855 3b04 	ldr.w	r3, [r5], #4
 80254c4:	3601      	adds	r6, #1
 80254c6:	4798      	blx	r3
 80254c8:	e7ee      	b.n	80254a8 <__libc_init_array+0xc>
 80254ca:	f855 3b04 	ldr.w	r3, [r5], #4
 80254ce:	3601      	adds	r6, #1
 80254d0:	4798      	blx	r3
 80254d2:	e7f2      	b.n	80254ba <__libc_init_array+0x1e>
 80254d4:	0802972c 	.word	0x0802972c
 80254d8:	0802972c 	.word	0x0802972c
 80254dc:	0802972c 	.word	0x0802972c
 80254e0:	08029748 	.word	0x08029748

080254e4 <__retarget_lock_init_recursive>:
 80254e4:	4770      	bx	lr

080254e6 <__retarget_lock_acquire_recursive>:
 80254e6:	4770      	bx	lr

080254e8 <__retarget_lock_release_recursive>:
 80254e8:	4770      	bx	lr

080254ea <memcpy>:
 80254ea:	440a      	add	r2, r1
 80254ec:	1e43      	subs	r3, r0, #1
 80254ee:	4291      	cmp	r1, r2
 80254f0:	d100      	bne.n	80254f4 <memcpy+0xa>
 80254f2:	4770      	bx	lr
 80254f4:	b510      	push	{r4, lr}
 80254f6:	f811 4b01 	ldrb.w	r4, [r1], #1
 80254fa:	4291      	cmp	r1, r2
 80254fc:	f803 4f01 	strb.w	r4, [r3, #1]!
 8025500:	d1f9      	bne.n	80254f6 <memcpy+0xc>
 8025502:	bd10      	pop	{r4, pc}

08025504 <__register_exitproc>:
 8025504:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025508:	4d28      	ldr	r5, [pc, #160]	@ (80255ac <__register_exitproc+0xa8>)
 802550a:	4607      	mov	r7, r0
 802550c:	4691      	mov	r9, r2
 802550e:	460e      	mov	r6, r1
 8025510:	6828      	ldr	r0, [r5, #0]
 8025512:	4698      	mov	r8, r3
 8025514:	f7ff ffe7 	bl	80254e6 <__retarget_lock_acquire_recursive>
 8025518:	4a25      	ldr	r2, [pc, #148]	@ (80255b0 <__register_exitproc+0xac>)
 802551a:	6814      	ldr	r4, [r2, #0]
 802551c:	b93c      	cbnz	r4, 802552e <__register_exitproc+0x2a>
 802551e:	4b25      	ldr	r3, [pc, #148]	@ (80255b4 <__register_exitproc+0xb0>)
 8025520:	6013      	str	r3, [r2, #0]
 8025522:	4a25      	ldr	r2, [pc, #148]	@ (80255b8 <__register_exitproc+0xb4>)
 8025524:	b112      	cbz	r2, 802552c <__register_exitproc+0x28>
 8025526:	6812      	ldr	r2, [r2, #0]
 8025528:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 802552c:	4c21      	ldr	r4, [pc, #132]	@ (80255b4 <__register_exitproc+0xb0>)
 802552e:	6863      	ldr	r3, [r4, #4]
 8025530:	2b1f      	cmp	r3, #31
 8025532:	dd06      	ble.n	8025542 <__register_exitproc+0x3e>
 8025534:	6828      	ldr	r0, [r5, #0]
 8025536:	f7ff ffd7 	bl	80254e8 <__retarget_lock_release_recursive>
 802553a:	f04f 30ff 	mov.w	r0, #4294967295
 802553e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025542:	b33f      	cbz	r7, 8025594 <__register_exitproc+0x90>
 8025544:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8025548:	b968      	cbnz	r0, 8025566 <__register_exitproc+0x62>
 802554a:	4b1c      	ldr	r3, [pc, #112]	@ (80255bc <__register_exitproc+0xb8>)
 802554c:	2b00      	cmp	r3, #0
 802554e:	d0f1      	beq.n	8025534 <__register_exitproc+0x30>
 8025550:	f44f 7084 	mov.w	r0, #264	@ 0x108
 8025554:	f7ff fc12 	bl	8024d7c <malloc>
 8025558:	2800      	cmp	r0, #0
 802555a:	d0eb      	beq.n	8025534 <__register_exitproc+0x30>
 802555c:	2300      	movs	r3, #0
 802555e:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 8025562:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8025566:	6863      	ldr	r3, [r4, #4]
 8025568:	2201      	movs	r2, #1
 802556a:	2f02      	cmp	r7, #2
 802556c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8025570:	fa02 f203 	lsl.w	r2, r2, r3
 8025574:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8025578:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 802557c:	ea43 0302 	orr.w	r3, r3, r2
 8025580:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 8025584:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8025588:	bf02      	ittt	eq
 802558a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 802558e:	4313      	orreq	r3, r2
 8025590:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 8025594:	6863      	ldr	r3, [r4, #4]
 8025596:	6828      	ldr	r0, [r5, #0]
 8025598:	1c5a      	adds	r2, r3, #1
 802559a:	3302      	adds	r3, #2
 802559c:	6062      	str	r2, [r4, #4]
 802559e:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 80255a2:	f7ff ffa1 	bl	80254e8 <__retarget_lock_release_recursive>
 80255a6:	2000      	movs	r0, #0
 80255a8:	e7c9      	b.n	802553e <__register_exitproc+0x3a>
 80255aa:	bf00      	nop
 80255ac:	2000028c 	.word	0x2000028c
 80255b0:	2004c38c 	.word	0x2004c38c
 80255b4:	2004c300 	.word	0x2004c300
 80255b8:	080296dc 	.word	0x080296dc
 80255bc:	08024d7d 	.word	0x08024d7d

080255c0 <_free_r>:
 80255c0:	b538      	push	{r3, r4, r5, lr}
 80255c2:	4605      	mov	r5, r0
 80255c4:	2900      	cmp	r1, #0
 80255c6:	d041      	beq.n	802564c <_free_r+0x8c>
 80255c8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80255cc:	1f0c      	subs	r4, r1, #4
 80255ce:	2b00      	cmp	r3, #0
 80255d0:	bfb8      	it	lt
 80255d2:	18e4      	addlt	r4, r4, r3
 80255d4:	f7ff fc84 	bl	8024ee0 <__malloc_lock>
 80255d8:	4a1d      	ldr	r2, [pc, #116]	@ (8025650 <_free_r+0x90>)
 80255da:	6813      	ldr	r3, [r2, #0]
 80255dc:	b933      	cbnz	r3, 80255ec <_free_r+0x2c>
 80255de:	6063      	str	r3, [r4, #4]
 80255e0:	6014      	str	r4, [r2, #0]
 80255e2:	4628      	mov	r0, r5
 80255e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80255e8:	f7ff bc80 	b.w	8024eec <__malloc_unlock>
 80255ec:	42a3      	cmp	r3, r4
 80255ee:	d908      	bls.n	8025602 <_free_r+0x42>
 80255f0:	6820      	ldr	r0, [r4, #0]
 80255f2:	1821      	adds	r1, r4, r0
 80255f4:	428b      	cmp	r3, r1
 80255f6:	bf01      	itttt	eq
 80255f8:	6819      	ldreq	r1, [r3, #0]
 80255fa:	685b      	ldreq	r3, [r3, #4]
 80255fc:	1809      	addeq	r1, r1, r0
 80255fe:	6021      	streq	r1, [r4, #0]
 8025600:	e7ed      	b.n	80255de <_free_r+0x1e>
 8025602:	461a      	mov	r2, r3
 8025604:	685b      	ldr	r3, [r3, #4]
 8025606:	b10b      	cbz	r3, 802560c <_free_r+0x4c>
 8025608:	42a3      	cmp	r3, r4
 802560a:	d9fa      	bls.n	8025602 <_free_r+0x42>
 802560c:	6811      	ldr	r1, [r2, #0]
 802560e:	1850      	adds	r0, r2, r1
 8025610:	42a0      	cmp	r0, r4
 8025612:	d10b      	bne.n	802562c <_free_r+0x6c>
 8025614:	6820      	ldr	r0, [r4, #0]
 8025616:	4401      	add	r1, r0
 8025618:	1850      	adds	r0, r2, r1
 802561a:	6011      	str	r1, [r2, #0]
 802561c:	4283      	cmp	r3, r0
 802561e:	d1e0      	bne.n	80255e2 <_free_r+0x22>
 8025620:	6818      	ldr	r0, [r3, #0]
 8025622:	685b      	ldr	r3, [r3, #4]
 8025624:	4408      	add	r0, r1
 8025626:	6053      	str	r3, [r2, #4]
 8025628:	6010      	str	r0, [r2, #0]
 802562a:	e7da      	b.n	80255e2 <_free_r+0x22>
 802562c:	d902      	bls.n	8025634 <_free_r+0x74>
 802562e:	230c      	movs	r3, #12
 8025630:	602b      	str	r3, [r5, #0]
 8025632:	e7d6      	b.n	80255e2 <_free_r+0x22>
 8025634:	6820      	ldr	r0, [r4, #0]
 8025636:	1821      	adds	r1, r4, r0
 8025638:	428b      	cmp	r3, r1
 802563a:	bf02      	ittt	eq
 802563c:	6819      	ldreq	r1, [r3, #0]
 802563e:	685b      	ldreq	r3, [r3, #4]
 8025640:	1809      	addeq	r1, r1, r0
 8025642:	6063      	str	r3, [r4, #4]
 8025644:	bf08      	it	eq
 8025646:	6021      	streq	r1, [r4, #0]
 8025648:	6054      	str	r4, [r2, #4]
 802564a:	e7ca      	b.n	80255e2 <_free_r+0x22>
 802564c:	bd38      	pop	{r3, r4, r5, pc}
 802564e:	bf00      	nop
 8025650:	2004c1b8 	.word	0x2004c1b8

08025654 <__sfputc_r>:
 8025654:	6893      	ldr	r3, [r2, #8]
 8025656:	3b01      	subs	r3, #1
 8025658:	2b00      	cmp	r3, #0
 802565a:	6093      	str	r3, [r2, #8]
 802565c:	b410      	push	{r4}
 802565e:	da08      	bge.n	8025672 <__sfputc_r+0x1e>
 8025660:	6994      	ldr	r4, [r2, #24]
 8025662:	42a3      	cmp	r3, r4
 8025664:	db01      	blt.n	802566a <__sfputc_r+0x16>
 8025666:	290a      	cmp	r1, #10
 8025668:	d103      	bne.n	8025672 <__sfputc_r+0x1e>
 802566a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802566e:	f7ff bdd8 	b.w	8025222 <__swbuf_r>
 8025672:	6813      	ldr	r3, [r2, #0]
 8025674:	1c58      	adds	r0, r3, #1
 8025676:	6010      	str	r0, [r2, #0]
 8025678:	4608      	mov	r0, r1
 802567a:	7019      	strb	r1, [r3, #0]
 802567c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025680:	4770      	bx	lr

08025682 <__sfputs_r>:
 8025682:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025684:	4606      	mov	r6, r0
 8025686:	460f      	mov	r7, r1
 8025688:	4614      	mov	r4, r2
 802568a:	18d5      	adds	r5, r2, r3
 802568c:	42ac      	cmp	r4, r5
 802568e:	d101      	bne.n	8025694 <__sfputs_r+0x12>
 8025690:	2000      	movs	r0, #0
 8025692:	e007      	b.n	80256a4 <__sfputs_r+0x22>
 8025694:	463a      	mov	r2, r7
 8025696:	f814 1b01 	ldrb.w	r1, [r4], #1
 802569a:	4630      	mov	r0, r6
 802569c:	f7ff ffda 	bl	8025654 <__sfputc_r>
 80256a0:	1c43      	adds	r3, r0, #1
 80256a2:	d1f3      	bne.n	802568c <__sfputs_r+0xa>
 80256a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080256a8 <_vfiprintf_r>:
 80256a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80256ac:	460d      	mov	r5, r1
 80256ae:	b09d      	sub	sp, #116	@ 0x74
 80256b0:	4614      	mov	r4, r2
 80256b2:	4698      	mov	r8, r3
 80256b4:	4606      	mov	r6, r0
 80256b6:	b118      	cbz	r0, 80256c0 <_vfiprintf_r+0x18>
 80256b8:	6a03      	ldr	r3, [r0, #32]
 80256ba:	b90b      	cbnz	r3, 80256c0 <_vfiprintf_r+0x18>
 80256bc:	f7ff fcb6 	bl	802502c <__sinit>
 80256c0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80256c2:	07d9      	lsls	r1, r3, #31
 80256c4:	d405      	bmi.n	80256d2 <_vfiprintf_r+0x2a>
 80256c6:	89ab      	ldrh	r3, [r5, #12]
 80256c8:	059a      	lsls	r2, r3, #22
 80256ca:	d402      	bmi.n	80256d2 <_vfiprintf_r+0x2a>
 80256cc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80256ce:	f7ff ff0a 	bl	80254e6 <__retarget_lock_acquire_recursive>
 80256d2:	89ab      	ldrh	r3, [r5, #12]
 80256d4:	071b      	lsls	r3, r3, #28
 80256d6:	d501      	bpl.n	80256dc <_vfiprintf_r+0x34>
 80256d8:	692b      	ldr	r3, [r5, #16]
 80256da:	b99b      	cbnz	r3, 8025704 <_vfiprintf_r+0x5c>
 80256dc:	4629      	mov	r1, r5
 80256de:	4630      	mov	r0, r6
 80256e0:	f7ff fdde 	bl	80252a0 <__swsetup_r>
 80256e4:	b170      	cbz	r0, 8025704 <_vfiprintf_r+0x5c>
 80256e6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80256e8:	07dc      	lsls	r4, r3, #31
 80256ea:	d504      	bpl.n	80256f6 <_vfiprintf_r+0x4e>
 80256ec:	f04f 30ff 	mov.w	r0, #4294967295
 80256f0:	b01d      	add	sp, #116	@ 0x74
 80256f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80256f6:	89ab      	ldrh	r3, [r5, #12]
 80256f8:	0598      	lsls	r0, r3, #22
 80256fa:	d4f7      	bmi.n	80256ec <_vfiprintf_r+0x44>
 80256fc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80256fe:	f7ff fef3 	bl	80254e8 <__retarget_lock_release_recursive>
 8025702:	e7f3      	b.n	80256ec <_vfiprintf_r+0x44>
 8025704:	2300      	movs	r3, #0
 8025706:	f8cd 800c 	str.w	r8, [sp, #12]
 802570a:	f04f 0901 	mov.w	r9, #1
 802570e:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 80258c4 <_vfiprintf_r+0x21c>
 8025712:	9309      	str	r3, [sp, #36]	@ 0x24
 8025714:	2320      	movs	r3, #32
 8025716:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 802571a:	2330      	movs	r3, #48	@ 0x30
 802571c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8025720:	4623      	mov	r3, r4
 8025722:	469a      	mov	sl, r3
 8025724:	f813 2b01 	ldrb.w	r2, [r3], #1
 8025728:	b10a      	cbz	r2, 802572e <_vfiprintf_r+0x86>
 802572a:	2a25      	cmp	r2, #37	@ 0x25
 802572c:	d1f9      	bne.n	8025722 <_vfiprintf_r+0x7a>
 802572e:	ebba 0b04 	subs.w	fp, sl, r4
 8025732:	d00b      	beq.n	802574c <_vfiprintf_r+0xa4>
 8025734:	465b      	mov	r3, fp
 8025736:	4622      	mov	r2, r4
 8025738:	4629      	mov	r1, r5
 802573a:	4630      	mov	r0, r6
 802573c:	f7ff ffa1 	bl	8025682 <__sfputs_r>
 8025740:	3001      	adds	r0, #1
 8025742:	f000 80a7 	beq.w	8025894 <_vfiprintf_r+0x1ec>
 8025746:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8025748:	445a      	add	r2, fp
 802574a:	9209      	str	r2, [sp, #36]	@ 0x24
 802574c:	f89a 3000 	ldrb.w	r3, [sl]
 8025750:	2b00      	cmp	r3, #0
 8025752:	f000 809f 	beq.w	8025894 <_vfiprintf_r+0x1ec>
 8025756:	2300      	movs	r3, #0
 8025758:	f04f 32ff 	mov.w	r2, #4294967295
 802575c:	f10a 0a01 	add.w	sl, sl, #1
 8025760:	9304      	str	r3, [sp, #16]
 8025762:	9307      	str	r3, [sp, #28]
 8025764:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8025768:	931a      	str	r3, [sp, #104]	@ 0x68
 802576a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802576e:	4654      	mov	r4, sl
 8025770:	2205      	movs	r2, #5
 8025772:	4854      	ldr	r0, [pc, #336]	@ (80258c4 <_vfiprintf_r+0x21c>)
 8025774:	f814 1b01 	ldrb.w	r1, [r4], #1
 8025778:	f000 fb70 	bl	8025e5c <memchr>
 802577c:	9a04      	ldr	r2, [sp, #16]
 802577e:	b9d8      	cbnz	r0, 80257b8 <_vfiprintf_r+0x110>
 8025780:	06d1      	lsls	r1, r2, #27
 8025782:	bf44      	itt	mi
 8025784:	2320      	movmi	r3, #32
 8025786:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802578a:	0713      	lsls	r3, r2, #28
 802578c:	bf44      	itt	mi
 802578e:	232b      	movmi	r3, #43	@ 0x2b
 8025790:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8025794:	f89a 3000 	ldrb.w	r3, [sl]
 8025798:	2b2a      	cmp	r3, #42	@ 0x2a
 802579a:	d015      	beq.n	80257c8 <_vfiprintf_r+0x120>
 802579c:	9a07      	ldr	r2, [sp, #28]
 802579e:	4654      	mov	r4, sl
 80257a0:	2000      	movs	r0, #0
 80257a2:	f04f 0c0a 	mov.w	ip, #10
 80257a6:	4621      	mov	r1, r4
 80257a8:	f811 3b01 	ldrb.w	r3, [r1], #1
 80257ac:	3b30      	subs	r3, #48	@ 0x30
 80257ae:	2b09      	cmp	r3, #9
 80257b0:	d94b      	bls.n	802584a <_vfiprintf_r+0x1a2>
 80257b2:	b1b0      	cbz	r0, 80257e2 <_vfiprintf_r+0x13a>
 80257b4:	9207      	str	r2, [sp, #28]
 80257b6:	e014      	b.n	80257e2 <_vfiprintf_r+0x13a>
 80257b8:	eba0 0308 	sub.w	r3, r0, r8
 80257bc:	46a2      	mov	sl, r4
 80257be:	fa09 f303 	lsl.w	r3, r9, r3
 80257c2:	4313      	orrs	r3, r2
 80257c4:	9304      	str	r3, [sp, #16]
 80257c6:	e7d2      	b.n	802576e <_vfiprintf_r+0xc6>
 80257c8:	9b03      	ldr	r3, [sp, #12]
 80257ca:	1d19      	adds	r1, r3, #4
 80257cc:	681b      	ldr	r3, [r3, #0]
 80257ce:	2b00      	cmp	r3, #0
 80257d0:	9103      	str	r1, [sp, #12]
 80257d2:	bfbb      	ittet	lt
 80257d4:	425b      	neglt	r3, r3
 80257d6:	f042 0202 	orrlt.w	r2, r2, #2
 80257da:	9307      	strge	r3, [sp, #28]
 80257dc:	9307      	strlt	r3, [sp, #28]
 80257de:	bfb8      	it	lt
 80257e0:	9204      	strlt	r2, [sp, #16]
 80257e2:	7823      	ldrb	r3, [r4, #0]
 80257e4:	2b2e      	cmp	r3, #46	@ 0x2e
 80257e6:	d10a      	bne.n	80257fe <_vfiprintf_r+0x156>
 80257e8:	7863      	ldrb	r3, [r4, #1]
 80257ea:	2b2a      	cmp	r3, #42	@ 0x2a
 80257ec:	d132      	bne.n	8025854 <_vfiprintf_r+0x1ac>
 80257ee:	9b03      	ldr	r3, [sp, #12]
 80257f0:	3402      	adds	r4, #2
 80257f2:	1d1a      	adds	r2, r3, #4
 80257f4:	681b      	ldr	r3, [r3, #0]
 80257f6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80257fa:	9203      	str	r2, [sp, #12]
 80257fc:	9305      	str	r3, [sp, #20]
 80257fe:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80258d4 <_vfiprintf_r+0x22c>
 8025802:	2203      	movs	r2, #3
 8025804:	7821      	ldrb	r1, [r4, #0]
 8025806:	4650      	mov	r0, sl
 8025808:	f000 fb28 	bl	8025e5c <memchr>
 802580c:	b138      	cbz	r0, 802581e <_vfiprintf_r+0x176>
 802580e:	eba0 000a 	sub.w	r0, r0, sl
 8025812:	2240      	movs	r2, #64	@ 0x40
 8025814:	9b04      	ldr	r3, [sp, #16]
 8025816:	3401      	adds	r4, #1
 8025818:	4082      	lsls	r2, r0
 802581a:	4313      	orrs	r3, r2
 802581c:	9304      	str	r3, [sp, #16]
 802581e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8025822:	2206      	movs	r2, #6
 8025824:	4828      	ldr	r0, [pc, #160]	@ (80258c8 <_vfiprintf_r+0x220>)
 8025826:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 802582a:	f000 fb17 	bl	8025e5c <memchr>
 802582e:	2800      	cmp	r0, #0
 8025830:	d03f      	beq.n	80258b2 <_vfiprintf_r+0x20a>
 8025832:	4b26      	ldr	r3, [pc, #152]	@ (80258cc <_vfiprintf_r+0x224>)
 8025834:	bb1b      	cbnz	r3, 802587e <_vfiprintf_r+0x1d6>
 8025836:	9b03      	ldr	r3, [sp, #12]
 8025838:	3307      	adds	r3, #7
 802583a:	f023 0307 	bic.w	r3, r3, #7
 802583e:	3308      	adds	r3, #8
 8025840:	9303      	str	r3, [sp, #12]
 8025842:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025844:	443b      	add	r3, r7
 8025846:	9309      	str	r3, [sp, #36]	@ 0x24
 8025848:	e76a      	b.n	8025720 <_vfiprintf_r+0x78>
 802584a:	fb0c 3202 	mla	r2, ip, r2, r3
 802584e:	460c      	mov	r4, r1
 8025850:	2001      	movs	r0, #1
 8025852:	e7a8      	b.n	80257a6 <_vfiprintf_r+0xfe>
 8025854:	2300      	movs	r3, #0
 8025856:	3401      	adds	r4, #1
 8025858:	f04f 0c0a 	mov.w	ip, #10
 802585c:	4619      	mov	r1, r3
 802585e:	9305      	str	r3, [sp, #20]
 8025860:	4620      	mov	r0, r4
 8025862:	f810 2b01 	ldrb.w	r2, [r0], #1
 8025866:	3a30      	subs	r2, #48	@ 0x30
 8025868:	2a09      	cmp	r2, #9
 802586a:	d903      	bls.n	8025874 <_vfiprintf_r+0x1cc>
 802586c:	2b00      	cmp	r3, #0
 802586e:	d0c6      	beq.n	80257fe <_vfiprintf_r+0x156>
 8025870:	9105      	str	r1, [sp, #20]
 8025872:	e7c4      	b.n	80257fe <_vfiprintf_r+0x156>
 8025874:	fb0c 2101 	mla	r1, ip, r1, r2
 8025878:	4604      	mov	r4, r0
 802587a:	2301      	movs	r3, #1
 802587c:	e7f0      	b.n	8025860 <_vfiprintf_r+0x1b8>
 802587e:	ab03      	add	r3, sp, #12
 8025880:	462a      	mov	r2, r5
 8025882:	a904      	add	r1, sp, #16
 8025884:	4630      	mov	r0, r6
 8025886:	9300      	str	r3, [sp, #0]
 8025888:	4b11      	ldr	r3, [pc, #68]	@ (80258d0 <_vfiprintf_r+0x228>)
 802588a:	f3af 8000 	nop.w
 802588e:	4607      	mov	r7, r0
 8025890:	1c78      	adds	r0, r7, #1
 8025892:	d1d6      	bne.n	8025842 <_vfiprintf_r+0x19a>
 8025894:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8025896:	07d9      	lsls	r1, r3, #31
 8025898:	d405      	bmi.n	80258a6 <_vfiprintf_r+0x1fe>
 802589a:	89ab      	ldrh	r3, [r5, #12]
 802589c:	059a      	lsls	r2, r3, #22
 802589e:	d402      	bmi.n	80258a6 <_vfiprintf_r+0x1fe>
 80258a0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80258a2:	f7ff fe21 	bl	80254e8 <__retarget_lock_release_recursive>
 80258a6:	89ab      	ldrh	r3, [r5, #12]
 80258a8:	065b      	lsls	r3, r3, #25
 80258aa:	f53f af1f 	bmi.w	80256ec <_vfiprintf_r+0x44>
 80258ae:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80258b0:	e71e      	b.n	80256f0 <_vfiprintf_r+0x48>
 80258b2:	ab03      	add	r3, sp, #12
 80258b4:	462a      	mov	r2, r5
 80258b6:	a904      	add	r1, sp, #16
 80258b8:	4630      	mov	r0, r6
 80258ba:	9300      	str	r3, [sp, #0]
 80258bc:	4b04      	ldr	r3, [pc, #16]	@ (80258d0 <_vfiprintf_r+0x228>)
 80258be:	f000 f87d 	bl	80259bc <_printf_i>
 80258c2:	e7e4      	b.n	802588e <_vfiprintf_r+0x1e6>
 80258c4:	080296e0 	.word	0x080296e0
 80258c8:	080296ea 	.word	0x080296ea
 80258cc:	00000000 	.word	0x00000000
 80258d0:	08025683 	.word	0x08025683
 80258d4:	080296e6 	.word	0x080296e6

080258d8 <_printf_common>:
 80258d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80258dc:	4616      	mov	r6, r2
 80258de:	4698      	mov	r8, r3
 80258e0:	688a      	ldr	r2, [r1, #8]
 80258e2:	4607      	mov	r7, r0
 80258e4:	690b      	ldr	r3, [r1, #16]
 80258e6:	460c      	mov	r4, r1
 80258e8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80258ec:	4293      	cmp	r3, r2
 80258ee:	bfb8      	it	lt
 80258f0:	4613      	movlt	r3, r2
 80258f2:	6033      	str	r3, [r6, #0]
 80258f4:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80258f8:	b10a      	cbz	r2, 80258fe <_printf_common+0x26>
 80258fa:	3301      	adds	r3, #1
 80258fc:	6033      	str	r3, [r6, #0]
 80258fe:	6823      	ldr	r3, [r4, #0]
 8025900:	0699      	lsls	r1, r3, #26
 8025902:	bf42      	ittt	mi
 8025904:	6833      	ldrmi	r3, [r6, #0]
 8025906:	3302      	addmi	r3, #2
 8025908:	6033      	strmi	r3, [r6, #0]
 802590a:	6825      	ldr	r5, [r4, #0]
 802590c:	f015 0506 	ands.w	r5, r5, #6
 8025910:	d106      	bne.n	8025920 <_printf_common+0x48>
 8025912:	f104 0a19 	add.w	sl, r4, #25
 8025916:	68e3      	ldr	r3, [r4, #12]
 8025918:	6832      	ldr	r2, [r6, #0]
 802591a:	1a9b      	subs	r3, r3, r2
 802591c:	42ab      	cmp	r3, r5
 802591e:	dc2b      	bgt.n	8025978 <_printf_common+0xa0>
 8025920:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8025924:	6822      	ldr	r2, [r4, #0]
 8025926:	3b00      	subs	r3, #0
 8025928:	bf18      	it	ne
 802592a:	2301      	movne	r3, #1
 802592c:	0692      	lsls	r2, r2, #26
 802592e:	d430      	bmi.n	8025992 <_printf_common+0xba>
 8025930:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8025934:	4641      	mov	r1, r8
 8025936:	4638      	mov	r0, r7
 8025938:	47c8      	blx	r9
 802593a:	3001      	adds	r0, #1
 802593c:	d023      	beq.n	8025986 <_printf_common+0xae>
 802593e:	6823      	ldr	r3, [r4, #0]
 8025940:	341a      	adds	r4, #26
 8025942:	f854 2c0a 	ldr.w	r2, [r4, #-10]
 8025946:	f003 0306 	and.w	r3, r3, #6
 802594a:	2b04      	cmp	r3, #4
 802594c:	bf0a      	itet	eq
 802594e:	f854 5c0e 	ldreq.w	r5, [r4, #-14]
 8025952:	2500      	movne	r5, #0
 8025954:	6833      	ldreq	r3, [r6, #0]
 8025956:	f04f 0600 	mov.w	r6, #0
 802595a:	bf08      	it	eq
 802595c:	1aed      	subeq	r5, r5, r3
 802595e:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8025962:	bf08      	it	eq
 8025964:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8025968:	4293      	cmp	r3, r2
 802596a:	bfc4      	itt	gt
 802596c:	1a9b      	subgt	r3, r3, r2
 802596e:	18ed      	addgt	r5, r5, r3
 8025970:	42b5      	cmp	r5, r6
 8025972:	d11a      	bne.n	80259aa <_printf_common+0xd2>
 8025974:	2000      	movs	r0, #0
 8025976:	e008      	b.n	802598a <_printf_common+0xb2>
 8025978:	2301      	movs	r3, #1
 802597a:	4652      	mov	r2, sl
 802597c:	4641      	mov	r1, r8
 802597e:	4638      	mov	r0, r7
 8025980:	47c8      	blx	r9
 8025982:	3001      	adds	r0, #1
 8025984:	d103      	bne.n	802598e <_printf_common+0xb6>
 8025986:	f04f 30ff 	mov.w	r0, #4294967295
 802598a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802598e:	3501      	adds	r5, #1
 8025990:	e7c1      	b.n	8025916 <_printf_common+0x3e>
 8025992:	18e1      	adds	r1, r4, r3
 8025994:	1c5a      	adds	r2, r3, #1
 8025996:	2030      	movs	r0, #48	@ 0x30
 8025998:	3302      	adds	r3, #2
 802599a:	4422      	add	r2, r4
 802599c:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80259a0:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80259a4:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80259a8:	e7c2      	b.n	8025930 <_printf_common+0x58>
 80259aa:	2301      	movs	r3, #1
 80259ac:	4622      	mov	r2, r4
 80259ae:	4641      	mov	r1, r8
 80259b0:	4638      	mov	r0, r7
 80259b2:	47c8      	blx	r9
 80259b4:	3001      	adds	r0, #1
 80259b6:	d0e6      	beq.n	8025986 <_printf_common+0xae>
 80259b8:	3601      	adds	r6, #1
 80259ba:	e7d9      	b.n	8025970 <_printf_common+0x98>

080259bc <_printf_i>:
 80259bc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80259c0:	7e0f      	ldrb	r7, [r1, #24]
 80259c2:	4691      	mov	r9, r2
 80259c4:	4680      	mov	r8, r0
 80259c6:	460c      	mov	r4, r1
 80259c8:	2f78      	cmp	r7, #120	@ 0x78
 80259ca:	469a      	mov	sl, r3
 80259cc:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80259ce:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80259d2:	d807      	bhi.n	80259e4 <_printf_i+0x28>
 80259d4:	2f62      	cmp	r7, #98	@ 0x62
 80259d6:	d80a      	bhi.n	80259ee <_printf_i+0x32>
 80259d8:	2f00      	cmp	r7, #0
 80259da:	f000 80d2 	beq.w	8025b82 <_printf_i+0x1c6>
 80259de:	2f58      	cmp	r7, #88	@ 0x58
 80259e0:	f000 80b9 	beq.w	8025b56 <_printf_i+0x19a>
 80259e4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80259e8:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80259ec:	e03a      	b.n	8025a64 <_printf_i+0xa8>
 80259ee:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80259f2:	2b15      	cmp	r3, #21
 80259f4:	d8f6      	bhi.n	80259e4 <_printf_i+0x28>
 80259f6:	a101      	add	r1, pc, #4	@ (adr r1, 80259fc <_printf_i+0x40>)
 80259f8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80259fc:	08025a55 	.word	0x08025a55
 8025a00:	08025a69 	.word	0x08025a69
 8025a04:	080259e5 	.word	0x080259e5
 8025a08:	080259e5 	.word	0x080259e5
 8025a0c:	080259e5 	.word	0x080259e5
 8025a10:	080259e5 	.word	0x080259e5
 8025a14:	08025a69 	.word	0x08025a69
 8025a18:	080259e5 	.word	0x080259e5
 8025a1c:	080259e5 	.word	0x080259e5
 8025a20:	080259e5 	.word	0x080259e5
 8025a24:	080259e5 	.word	0x080259e5
 8025a28:	08025b69 	.word	0x08025b69
 8025a2c:	08025a93 	.word	0x08025a93
 8025a30:	08025b23 	.word	0x08025b23
 8025a34:	080259e5 	.word	0x080259e5
 8025a38:	080259e5 	.word	0x080259e5
 8025a3c:	08025b8b 	.word	0x08025b8b
 8025a40:	080259e5 	.word	0x080259e5
 8025a44:	08025a93 	.word	0x08025a93
 8025a48:	080259e5 	.word	0x080259e5
 8025a4c:	080259e5 	.word	0x080259e5
 8025a50:	08025b2b 	.word	0x08025b2b
 8025a54:	6833      	ldr	r3, [r6, #0]
 8025a56:	1d1a      	adds	r2, r3, #4
 8025a58:	681b      	ldr	r3, [r3, #0]
 8025a5a:	6032      	str	r2, [r6, #0]
 8025a5c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8025a60:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8025a64:	2301      	movs	r3, #1
 8025a66:	e09d      	b.n	8025ba4 <_printf_i+0x1e8>
 8025a68:	6833      	ldr	r3, [r6, #0]
 8025a6a:	6820      	ldr	r0, [r4, #0]
 8025a6c:	1d19      	adds	r1, r3, #4
 8025a6e:	6031      	str	r1, [r6, #0]
 8025a70:	0606      	lsls	r6, r0, #24
 8025a72:	d501      	bpl.n	8025a78 <_printf_i+0xbc>
 8025a74:	681d      	ldr	r5, [r3, #0]
 8025a76:	e003      	b.n	8025a80 <_printf_i+0xc4>
 8025a78:	0645      	lsls	r5, r0, #25
 8025a7a:	d5fb      	bpl.n	8025a74 <_printf_i+0xb8>
 8025a7c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8025a80:	2d00      	cmp	r5, #0
 8025a82:	da03      	bge.n	8025a8c <_printf_i+0xd0>
 8025a84:	232d      	movs	r3, #45	@ 0x2d
 8025a86:	426d      	negs	r5, r5
 8025a88:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8025a8c:	4859      	ldr	r0, [pc, #356]	@ (8025bf4 <_printf_i+0x238>)
 8025a8e:	230a      	movs	r3, #10
 8025a90:	e011      	b.n	8025ab6 <_printf_i+0xfa>
 8025a92:	6821      	ldr	r1, [r4, #0]
 8025a94:	6833      	ldr	r3, [r6, #0]
 8025a96:	0608      	lsls	r0, r1, #24
 8025a98:	f853 5b04 	ldr.w	r5, [r3], #4
 8025a9c:	d402      	bmi.n	8025aa4 <_printf_i+0xe8>
 8025a9e:	0649      	lsls	r1, r1, #25
 8025aa0:	bf48      	it	mi
 8025aa2:	b2ad      	uxthmi	r5, r5
 8025aa4:	2f6f      	cmp	r7, #111	@ 0x6f
 8025aa6:	6033      	str	r3, [r6, #0]
 8025aa8:	4852      	ldr	r0, [pc, #328]	@ (8025bf4 <_printf_i+0x238>)
 8025aaa:	bf14      	ite	ne
 8025aac:	230a      	movne	r3, #10
 8025aae:	2308      	moveq	r3, #8
 8025ab0:	2100      	movs	r1, #0
 8025ab2:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8025ab6:	6866      	ldr	r6, [r4, #4]
 8025ab8:	2e00      	cmp	r6, #0
 8025aba:	60a6      	str	r6, [r4, #8]
 8025abc:	bfa2      	ittt	ge
 8025abe:	6821      	ldrge	r1, [r4, #0]
 8025ac0:	f021 0104 	bicge.w	r1, r1, #4
 8025ac4:	6021      	strge	r1, [r4, #0]
 8025ac6:	b90d      	cbnz	r5, 8025acc <_printf_i+0x110>
 8025ac8:	2e00      	cmp	r6, #0
 8025aca:	d04b      	beq.n	8025b64 <_printf_i+0x1a8>
 8025acc:	4616      	mov	r6, r2
 8025ace:	fbb5 f1f3 	udiv	r1, r5, r3
 8025ad2:	fb03 5711 	mls	r7, r3, r1, r5
 8025ad6:	5dc7      	ldrb	r7, [r0, r7]
 8025ad8:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8025adc:	462f      	mov	r7, r5
 8025ade:	460d      	mov	r5, r1
 8025ae0:	42bb      	cmp	r3, r7
 8025ae2:	d9f4      	bls.n	8025ace <_printf_i+0x112>
 8025ae4:	2b08      	cmp	r3, #8
 8025ae6:	d10b      	bne.n	8025b00 <_printf_i+0x144>
 8025ae8:	6823      	ldr	r3, [r4, #0]
 8025aea:	07df      	lsls	r7, r3, #31
 8025aec:	d508      	bpl.n	8025b00 <_printf_i+0x144>
 8025aee:	6923      	ldr	r3, [r4, #16]
 8025af0:	6861      	ldr	r1, [r4, #4]
 8025af2:	4299      	cmp	r1, r3
 8025af4:	bfde      	ittt	le
 8025af6:	2330      	movle	r3, #48	@ 0x30
 8025af8:	f806 3c01 	strble.w	r3, [r6, #-1]
 8025afc:	f106 36ff 	addle.w	r6, r6, #4294967295
 8025b00:	1b92      	subs	r2, r2, r6
 8025b02:	6122      	str	r2, [r4, #16]
 8025b04:	464b      	mov	r3, r9
 8025b06:	aa03      	add	r2, sp, #12
 8025b08:	4621      	mov	r1, r4
 8025b0a:	4640      	mov	r0, r8
 8025b0c:	f8cd a000 	str.w	sl, [sp]
 8025b10:	f7ff fee2 	bl	80258d8 <_printf_common>
 8025b14:	3001      	adds	r0, #1
 8025b16:	d14a      	bne.n	8025bae <_printf_i+0x1f2>
 8025b18:	f04f 30ff 	mov.w	r0, #4294967295
 8025b1c:	b004      	add	sp, #16
 8025b1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025b22:	6823      	ldr	r3, [r4, #0]
 8025b24:	f043 0320 	orr.w	r3, r3, #32
 8025b28:	6023      	str	r3, [r4, #0]
 8025b2a:	2778      	movs	r7, #120	@ 0x78
 8025b2c:	4832      	ldr	r0, [pc, #200]	@ (8025bf8 <_printf_i+0x23c>)
 8025b2e:	6823      	ldr	r3, [r4, #0]
 8025b30:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8025b34:	061f      	lsls	r7, r3, #24
 8025b36:	6831      	ldr	r1, [r6, #0]
 8025b38:	f851 5b04 	ldr.w	r5, [r1], #4
 8025b3c:	d402      	bmi.n	8025b44 <_printf_i+0x188>
 8025b3e:	065f      	lsls	r7, r3, #25
 8025b40:	bf48      	it	mi
 8025b42:	b2ad      	uxthmi	r5, r5
 8025b44:	6031      	str	r1, [r6, #0]
 8025b46:	07d9      	lsls	r1, r3, #31
 8025b48:	bf44      	itt	mi
 8025b4a:	f043 0320 	orrmi.w	r3, r3, #32
 8025b4e:	6023      	strmi	r3, [r4, #0]
 8025b50:	b11d      	cbz	r5, 8025b5a <_printf_i+0x19e>
 8025b52:	2310      	movs	r3, #16
 8025b54:	e7ac      	b.n	8025ab0 <_printf_i+0xf4>
 8025b56:	4827      	ldr	r0, [pc, #156]	@ (8025bf4 <_printf_i+0x238>)
 8025b58:	e7e9      	b.n	8025b2e <_printf_i+0x172>
 8025b5a:	6823      	ldr	r3, [r4, #0]
 8025b5c:	f023 0320 	bic.w	r3, r3, #32
 8025b60:	6023      	str	r3, [r4, #0]
 8025b62:	e7f6      	b.n	8025b52 <_printf_i+0x196>
 8025b64:	4616      	mov	r6, r2
 8025b66:	e7bd      	b.n	8025ae4 <_printf_i+0x128>
 8025b68:	6833      	ldr	r3, [r6, #0]
 8025b6a:	6825      	ldr	r5, [r4, #0]
 8025b6c:	1d18      	adds	r0, r3, #4
 8025b6e:	6961      	ldr	r1, [r4, #20]
 8025b70:	6030      	str	r0, [r6, #0]
 8025b72:	062e      	lsls	r6, r5, #24
 8025b74:	681b      	ldr	r3, [r3, #0]
 8025b76:	d501      	bpl.n	8025b7c <_printf_i+0x1c0>
 8025b78:	6019      	str	r1, [r3, #0]
 8025b7a:	e002      	b.n	8025b82 <_printf_i+0x1c6>
 8025b7c:	0668      	lsls	r0, r5, #25
 8025b7e:	d5fb      	bpl.n	8025b78 <_printf_i+0x1bc>
 8025b80:	8019      	strh	r1, [r3, #0]
 8025b82:	2300      	movs	r3, #0
 8025b84:	4616      	mov	r6, r2
 8025b86:	6123      	str	r3, [r4, #16]
 8025b88:	e7bc      	b.n	8025b04 <_printf_i+0x148>
 8025b8a:	6833      	ldr	r3, [r6, #0]
 8025b8c:	2100      	movs	r1, #0
 8025b8e:	1d1a      	adds	r2, r3, #4
 8025b90:	6032      	str	r2, [r6, #0]
 8025b92:	681e      	ldr	r6, [r3, #0]
 8025b94:	6862      	ldr	r2, [r4, #4]
 8025b96:	4630      	mov	r0, r6
 8025b98:	f000 f960 	bl	8025e5c <memchr>
 8025b9c:	b108      	cbz	r0, 8025ba2 <_printf_i+0x1e6>
 8025b9e:	1b80      	subs	r0, r0, r6
 8025ba0:	6060      	str	r0, [r4, #4]
 8025ba2:	6863      	ldr	r3, [r4, #4]
 8025ba4:	6123      	str	r3, [r4, #16]
 8025ba6:	2300      	movs	r3, #0
 8025ba8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8025bac:	e7aa      	b.n	8025b04 <_printf_i+0x148>
 8025bae:	6923      	ldr	r3, [r4, #16]
 8025bb0:	4632      	mov	r2, r6
 8025bb2:	4649      	mov	r1, r9
 8025bb4:	4640      	mov	r0, r8
 8025bb6:	47d0      	blx	sl
 8025bb8:	3001      	adds	r0, #1
 8025bba:	d0ad      	beq.n	8025b18 <_printf_i+0x15c>
 8025bbc:	6823      	ldr	r3, [r4, #0]
 8025bbe:	079b      	lsls	r3, r3, #30
 8025bc0:	d413      	bmi.n	8025bea <_printf_i+0x22e>
 8025bc2:	68e0      	ldr	r0, [r4, #12]
 8025bc4:	9b03      	ldr	r3, [sp, #12]
 8025bc6:	4298      	cmp	r0, r3
 8025bc8:	bfb8      	it	lt
 8025bca:	4618      	movlt	r0, r3
 8025bcc:	e7a6      	b.n	8025b1c <_printf_i+0x160>
 8025bce:	2301      	movs	r3, #1
 8025bd0:	4632      	mov	r2, r6
 8025bd2:	4649      	mov	r1, r9
 8025bd4:	4640      	mov	r0, r8
 8025bd6:	47d0      	blx	sl
 8025bd8:	3001      	adds	r0, #1
 8025bda:	d09d      	beq.n	8025b18 <_printf_i+0x15c>
 8025bdc:	3501      	adds	r5, #1
 8025bde:	68e3      	ldr	r3, [r4, #12]
 8025be0:	9903      	ldr	r1, [sp, #12]
 8025be2:	1a5b      	subs	r3, r3, r1
 8025be4:	42ab      	cmp	r3, r5
 8025be6:	dcf2      	bgt.n	8025bce <_printf_i+0x212>
 8025be8:	e7eb      	b.n	8025bc2 <_printf_i+0x206>
 8025bea:	2500      	movs	r5, #0
 8025bec:	f104 0619 	add.w	r6, r4, #25
 8025bf0:	e7f5      	b.n	8025bde <_printf_i+0x222>
 8025bf2:	bf00      	nop
 8025bf4:	080296f1 	.word	0x080296f1
 8025bf8:	08029702 	.word	0x08029702

08025bfc <__sflush_r>:
 8025bfc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8025c00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025c04:	0716      	lsls	r6, r2, #28
 8025c06:	4605      	mov	r5, r0
 8025c08:	460c      	mov	r4, r1
 8025c0a:	d454      	bmi.n	8025cb6 <__sflush_r+0xba>
 8025c0c:	684b      	ldr	r3, [r1, #4]
 8025c0e:	2b00      	cmp	r3, #0
 8025c10:	dc02      	bgt.n	8025c18 <__sflush_r+0x1c>
 8025c12:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8025c14:	2b00      	cmp	r3, #0
 8025c16:	dd48      	ble.n	8025caa <__sflush_r+0xae>
 8025c18:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8025c1a:	2e00      	cmp	r6, #0
 8025c1c:	d045      	beq.n	8025caa <__sflush_r+0xae>
 8025c1e:	2300      	movs	r3, #0
 8025c20:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8025c24:	682f      	ldr	r7, [r5, #0]
 8025c26:	6a21      	ldr	r1, [r4, #32]
 8025c28:	602b      	str	r3, [r5, #0]
 8025c2a:	d030      	beq.n	8025c8e <__sflush_r+0x92>
 8025c2c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8025c2e:	89a3      	ldrh	r3, [r4, #12]
 8025c30:	0759      	lsls	r1, r3, #29
 8025c32:	d505      	bpl.n	8025c40 <__sflush_r+0x44>
 8025c34:	6863      	ldr	r3, [r4, #4]
 8025c36:	1ad2      	subs	r2, r2, r3
 8025c38:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8025c3a:	b10b      	cbz	r3, 8025c40 <__sflush_r+0x44>
 8025c3c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8025c3e:	1ad2      	subs	r2, r2, r3
 8025c40:	2300      	movs	r3, #0
 8025c42:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8025c44:	6a21      	ldr	r1, [r4, #32]
 8025c46:	4628      	mov	r0, r5
 8025c48:	47b0      	blx	r6
 8025c4a:	1c43      	adds	r3, r0, #1
 8025c4c:	89a3      	ldrh	r3, [r4, #12]
 8025c4e:	d106      	bne.n	8025c5e <__sflush_r+0x62>
 8025c50:	6829      	ldr	r1, [r5, #0]
 8025c52:	291d      	cmp	r1, #29
 8025c54:	d82b      	bhi.n	8025cae <__sflush_r+0xb2>
 8025c56:	4a2a      	ldr	r2, [pc, #168]	@ (8025d00 <__sflush_r+0x104>)
 8025c58:	410a      	asrs	r2, r1
 8025c5a:	07d6      	lsls	r6, r2, #31
 8025c5c:	d427      	bmi.n	8025cae <__sflush_r+0xb2>
 8025c5e:	2200      	movs	r2, #0
 8025c60:	04d9      	lsls	r1, r3, #19
 8025c62:	6062      	str	r2, [r4, #4]
 8025c64:	6922      	ldr	r2, [r4, #16]
 8025c66:	6022      	str	r2, [r4, #0]
 8025c68:	d504      	bpl.n	8025c74 <__sflush_r+0x78>
 8025c6a:	1c42      	adds	r2, r0, #1
 8025c6c:	d101      	bne.n	8025c72 <__sflush_r+0x76>
 8025c6e:	682b      	ldr	r3, [r5, #0]
 8025c70:	b903      	cbnz	r3, 8025c74 <__sflush_r+0x78>
 8025c72:	6560      	str	r0, [r4, #84]	@ 0x54
 8025c74:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8025c76:	602f      	str	r7, [r5, #0]
 8025c78:	b1b9      	cbz	r1, 8025caa <__sflush_r+0xae>
 8025c7a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8025c7e:	4299      	cmp	r1, r3
 8025c80:	d002      	beq.n	8025c88 <__sflush_r+0x8c>
 8025c82:	4628      	mov	r0, r5
 8025c84:	f7ff fc9c 	bl	80255c0 <_free_r>
 8025c88:	2300      	movs	r3, #0
 8025c8a:	6363      	str	r3, [r4, #52]	@ 0x34
 8025c8c:	e00d      	b.n	8025caa <__sflush_r+0xae>
 8025c8e:	2301      	movs	r3, #1
 8025c90:	4628      	mov	r0, r5
 8025c92:	47b0      	blx	r6
 8025c94:	4602      	mov	r2, r0
 8025c96:	1c50      	adds	r0, r2, #1
 8025c98:	d1c9      	bne.n	8025c2e <__sflush_r+0x32>
 8025c9a:	682b      	ldr	r3, [r5, #0]
 8025c9c:	2b00      	cmp	r3, #0
 8025c9e:	d0c6      	beq.n	8025c2e <__sflush_r+0x32>
 8025ca0:	2b1d      	cmp	r3, #29
 8025ca2:	d001      	beq.n	8025ca8 <__sflush_r+0xac>
 8025ca4:	2b16      	cmp	r3, #22
 8025ca6:	d11d      	bne.n	8025ce4 <__sflush_r+0xe8>
 8025ca8:	602f      	str	r7, [r5, #0]
 8025caa:	2000      	movs	r0, #0
 8025cac:	e021      	b.n	8025cf2 <__sflush_r+0xf6>
 8025cae:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8025cb2:	b21b      	sxth	r3, r3
 8025cb4:	e01a      	b.n	8025cec <__sflush_r+0xf0>
 8025cb6:	690f      	ldr	r7, [r1, #16]
 8025cb8:	2f00      	cmp	r7, #0
 8025cba:	d0f6      	beq.n	8025caa <__sflush_r+0xae>
 8025cbc:	0793      	lsls	r3, r2, #30
 8025cbe:	680e      	ldr	r6, [r1, #0]
 8025cc0:	600f      	str	r7, [r1, #0]
 8025cc2:	bf0c      	ite	eq
 8025cc4:	694b      	ldreq	r3, [r1, #20]
 8025cc6:	2300      	movne	r3, #0
 8025cc8:	eba6 0807 	sub.w	r8, r6, r7
 8025ccc:	608b      	str	r3, [r1, #8]
 8025cce:	f1b8 0f00 	cmp.w	r8, #0
 8025cd2:	ddea      	ble.n	8025caa <__sflush_r+0xae>
 8025cd4:	4643      	mov	r3, r8
 8025cd6:	463a      	mov	r2, r7
 8025cd8:	6a21      	ldr	r1, [r4, #32]
 8025cda:	4628      	mov	r0, r5
 8025cdc:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8025cde:	47b0      	blx	r6
 8025ce0:	2800      	cmp	r0, #0
 8025ce2:	dc08      	bgt.n	8025cf6 <__sflush_r+0xfa>
 8025ce4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8025ce8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8025cec:	f04f 30ff 	mov.w	r0, #4294967295
 8025cf0:	81a3      	strh	r3, [r4, #12]
 8025cf2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025cf6:	4407      	add	r7, r0
 8025cf8:	eba8 0800 	sub.w	r8, r8, r0
 8025cfc:	e7e7      	b.n	8025cce <__sflush_r+0xd2>
 8025cfe:	bf00      	nop
 8025d00:	dfbffffe 	.word	0xdfbffffe

08025d04 <_fflush_r>:
 8025d04:	b538      	push	{r3, r4, r5, lr}
 8025d06:	690b      	ldr	r3, [r1, #16]
 8025d08:	4605      	mov	r5, r0
 8025d0a:	460c      	mov	r4, r1
 8025d0c:	b913      	cbnz	r3, 8025d14 <_fflush_r+0x10>
 8025d0e:	2500      	movs	r5, #0
 8025d10:	4628      	mov	r0, r5
 8025d12:	bd38      	pop	{r3, r4, r5, pc}
 8025d14:	b118      	cbz	r0, 8025d1e <_fflush_r+0x1a>
 8025d16:	6a03      	ldr	r3, [r0, #32]
 8025d18:	b90b      	cbnz	r3, 8025d1e <_fflush_r+0x1a>
 8025d1a:	f7ff f987 	bl	802502c <__sinit>
 8025d1e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8025d22:	2b00      	cmp	r3, #0
 8025d24:	d0f3      	beq.n	8025d0e <_fflush_r+0xa>
 8025d26:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8025d28:	07d0      	lsls	r0, r2, #31
 8025d2a:	d404      	bmi.n	8025d36 <_fflush_r+0x32>
 8025d2c:	0599      	lsls	r1, r3, #22
 8025d2e:	d402      	bmi.n	8025d36 <_fflush_r+0x32>
 8025d30:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8025d32:	f7ff fbd8 	bl	80254e6 <__retarget_lock_acquire_recursive>
 8025d36:	4628      	mov	r0, r5
 8025d38:	4621      	mov	r1, r4
 8025d3a:	f7ff ff5f 	bl	8025bfc <__sflush_r>
 8025d3e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8025d40:	4605      	mov	r5, r0
 8025d42:	07da      	lsls	r2, r3, #31
 8025d44:	d4e4      	bmi.n	8025d10 <_fflush_r+0xc>
 8025d46:	89a3      	ldrh	r3, [r4, #12]
 8025d48:	059b      	lsls	r3, r3, #22
 8025d4a:	d4e1      	bmi.n	8025d10 <_fflush_r+0xc>
 8025d4c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8025d4e:	f7ff fbcb 	bl	80254e8 <__retarget_lock_release_recursive>
 8025d52:	e7dd      	b.n	8025d10 <_fflush_r+0xc>

08025d54 <__swhatbuf_r>:
 8025d54:	b570      	push	{r4, r5, r6, lr}
 8025d56:	460c      	mov	r4, r1
 8025d58:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025d5c:	b096      	sub	sp, #88	@ 0x58
 8025d5e:	4615      	mov	r5, r2
 8025d60:	2900      	cmp	r1, #0
 8025d62:	461e      	mov	r6, r3
 8025d64:	da0c      	bge.n	8025d80 <__swhatbuf_r+0x2c>
 8025d66:	89a3      	ldrh	r3, [r4, #12]
 8025d68:	2100      	movs	r1, #0
 8025d6a:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8025d6e:	bf14      	ite	ne
 8025d70:	2340      	movne	r3, #64	@ 0x40
 8025d72:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8025d76:	2000      	movs	r0, #0
 8025d78:	6031      	str	r1, [r6, #0]
 8025d7a:	602b      	str	r3, [r5, #0]
 8025d7c:	b016      	add	sp, #88	@ 0x58
 8025d7e:	bd70      	pop	{r4, r5, r6, pc}
 8025d80:	466a      	mov	r2, sp
 8025d82:	f000 f849 	bl	8025e18 <_fstat_r>
 8025d86:	2800      	cmp	r0, #0
 8025d88:	dbed      	blt.n	8025d66 <__swhatbuf_r+0x12>
 8025d8a:	9901      	ldr	r1, [sp, #4]
 8025d8c:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8025d90:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8025d94:	4259      	negs	r1, r3
 8025d96:	4159      	adcs	r1, r3
 8025d98:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8025d9c:	e7eb      	b.n	8025d76 <__swhatbuf_r+0x22>

08025d9e <__smakebuf_r>:
 8025d9e:	898b      	ldrh	r3, [r1, #12]
 8025da0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8025da2:	079d      	lsls	r5, r3, #30
 8025da4:	4606      	mov	r6, r0
 8025da6:	460c      	mov	r4, r1
 8025da8:	d507      	bpl.n	8025dba <__smakebuf_r+0x1c>
 8025daa:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8025dae:	6023      	str	r3, [r4, #0]
 8025db0:	6123      	str	r3, [r4, #16]
 8025db2:	2301      	movs	r3, #1
 8025db4:	6163      	str	r3, [r4, #20]
 8025db6:	b003      	add	sp, #12
 8025db8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025dba:	ab01      	add	r3, sp, #4
 8025dbc:	466a      	mov	r2, sp
 8025dbe:	f7ff ffc9 	bl	8025d54 <__swhatbuf_r>
 8025dc2:	9f00      	ldr	r7, [sp, #0]
 8025dc4:	4605      	mov	r5, r0
 8025dc6:	4630      	mov	r0, r6
 8025dc8:	4639      	mov	r1, r7
 8025dca:	f7ff f809 	bl	8024de0 <_malloc_r>
 8025dce:	b948      	cbnz	r0, 8025de4 <__smakebuf_r+0x46>
 8025dd0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8025dd4:	059a      	lsls	r2, r3, #22
 8025dd6:	d4ee      	bmi.n	8025db6 <__smakebuf_r+0x18>
 8025dd8:	f023 0303 	bic.w	r3, r3, #3
 8025ddc:	f043 0302 	orr.w	r3, r3, #2
 8025de0:	81a3      	strh	r3, [r4, #12]
 8025de2:	e7e2      	b.n	8025daa <__smakebuf_r+0xc>
 8025de4:	89a3      	ldrh	r3, [r4, #12]
 8025de6:	6020      	str	r0, [r4, #0]
 8025de8:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8025dec:	81a3      	strh	r3, [r4, #12]
 8025dee:	9b01      	ldr	r3, [sp, #4]
 8025df0:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8025df4:	b15b      	cbz	r3, 8025e0e <__smakebuf_r+0x70>
 8025df6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8025dfa:	4630      	mov	r0, r6
 8025dfc:	f000 f81e 	bl	8025e3c <_isatty_r>
 8025e00:	b128      	cbz	r0, 8025e0e <__smakebuf_r+0x70>
 8025e02:	89a3      	ldrh	r3, [r4, #12]
 8025e04:	f023 0303 	bic.w	r3, r3, #3
 8025e08:	f043 0301 	orr.w	r3, r3, #1
 8025e0c:	81a3      	strh	r3, [r4, #12]
 8025e0e:	89a3      	ldrh	r3, [r4, #12]
 8025e10:	431d      	orrs	r5, r3
 8025e12:	81a5      	strh	r5, [r4, #12]
 8025e14:	e7cf      	b.n	8025db6 <__smakebuf_r+0x18>
	...

08025e18 <_fstat_r>:
 8025e18:	b538      	push	{r3, r4, r5, lr}
 8025e1a:	2300      	movs	r3, #0
 8025e1c:	4d06      	ldr	r5, [pc, #24]	@ (8025e38 <_fstat_r+0x20>)
 8025e1e:	4604      	mov	r4, r0
 8025e20:	4608      	mov	r0, r1
 8025e22:	4611      	mov	r1, r2
 8025e24:	602b      	str	r3, [r5, #0]
 8025e26:	f7db fb68 	bl	80014fa <_fstat>
 8025e2a:	1c43      	adds	r3, r0, #1
 8025e2c:	d102      	bne.n	8025e34 <_fstat_r+0x1c>
 8025e2e:	682b      	ldr	r3, [r5, #0]
 8025e30:	b103      	cbz	r3, 8025e34 <_fstat_r+0x1c>
 8025e32:	6023      	str	r3, [r4, #0]
 8025e34:	bd38      	pop	{r3, r4, r5, pc}
 8025e36:	bf00      	nop
 8025e38:	2004c2f8 	.word	0x2004c2f8

08025e3c <_isatty_r>:
 8025e3c:	b538      	push	{r3, r4, r5, lr}
 8025e3e:	2300      	movs	r3, #0
 8025e40:	4d05      	ldr	r5, [pc, #20]	@ (8025e58 <_isatty_r+0x1c>)
 8025e42:	4604      	mov	r4, r0
 8025e44:	4608      	mov	r0, r1
 8025e46:	602b      	str	r3, [r5, #0]
 8025e48:	f7db fb5c 	bl	8001504 <_isatty>
 8025e4c:	1c43      	adds	r3, r0, #1
 8025e4e:	d102      	bne.n	8025e56 <_isatty_r+0x1a>
 8025e50:	682b      	ldr	r3, [r5, #0]
 8025e52:	b103      	cbz	r3, 8025e56 <_isatty_r+0x1a>
 8025e54:	6023      	str	r3, [r4, #0]
 8025e56:	bd38      	pop	{r3, r4, r5, pc}
 8025e58:	2004c2f8 	.word	0x2004c2f8

08025e5c <memchr>:
 8025e5c:	b2c9      	uxtb	r1, r1
 8025e5e:	4603      	mov	r3, r0
 8025e60:	4402      	add	r2, r0
 8025e62:	b510      	push	{r4, lr}
 8025e64:	4293      	cmp	r3, r2
 8025e66:	4618      	mov	r0, r3
 8025e68:	d101      	bne.n	8025e6e <memchr+0x12>
 8025e6a:	2000      	movs	r0, #0
 8025e6c:	e003      	b.n	8025e76 <memchr+0x1a>
 8025e6e:	7804      	ldrb	r4, [r0, #0]
 8025e70:	3301      	adds	r3, #1
 8025e72:	428c      	cmp	r4, r1
 8025e74:	d1f6      	bne.n	8025e64 <memchr+0x8>
 8025e76:	bd10      	pop	{r4, pc}

08025e78 <_init>:
 8025e78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025e7a:	bf00      	nop
 8025e7c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8025e7e:	bc08      	pop	{r3}
 8025e80:	469e      	mov	lr, r3
 8025e82:	4770      	bx	lr

08025e84 <_fini>:
 8025e84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025e86:	bf00      	nop
 8025e88:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8025e8a:	bc08      	pop	{r3}
 8025e8c:	469e      	mov	lr, r3
 8025e8e:	4770      	bx	lr
